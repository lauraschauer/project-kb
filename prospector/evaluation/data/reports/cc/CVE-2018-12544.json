{
    "advisory_record": {
        "cve_id": "CVE-2018-12544",
        "description": "In version from 3.5.Beta1 to 3.5.3 of Eclipse Vert.x, the OpenAPI XML type validator creates XML parsers without taking appropriate defense against XML attacks. This mechanism is exclusively when the developer uses the Eclipse Vert.x OpenAPI XML type validator to validate a provided schema.",
        "reserved_timestamp": 1529280000,
        "published_timestamp": 1539201600,
        "updated_timestamp": 1608095184,
        "repository_url": null,
        "references": {
            "": 185,
            "https://github.com/vert-x3/vertx-web/issues/1021": 6,
            "https://access.redhat.com/support/": 5,
            "https://wiki.eclipse.org/ECA": 5,
            "https://access.redhat.com/errata/RHSA-2018:2946": 4,
            "https://bugs.eclipse.org/bugs/show_bug.cgi?id=539568": 4,
            "https://access.redhat.com/downloads/": 4,
            "https://access.redhat.com/errata/": 3,
            "https://access.redhat.com/labs/": 3,
            "commit::ea0b0930fbc122b7114935cafa379facc9611587": 3,
            "https://lists.apache.org/thread.html/rd0e44e8ef71eeaaa3cf3d1b8b41eb25894372e2995ec908ce7624d26%40%3Ccommits.pulsar.apache.org%3E": 2,
            "commit::d814d22ade14bafec47c4447a4ba9bff090f05e8": 2,
            "commit::26db16c7b32e655b489d1a71605f9a785f788e41": 2,
            "https://access.redhat.com/management/": 2,
            "https://access.redhat.com/": 2,
            "https://access.redhat.com/products/red-hat-enterprise-linux/": 2,
            "https://access.redhat.com/products/red-hat-openshift-container-platform": 2,
            "https://access.redhat.com/products/red-hat-ansible-automation-platform/": 2,
            "https://access.redhat.com/products/": 2,
            "https://access.redhat.com/documentation": 2,
            "https://access.redhat.com/product-life-cycles/": 2,
            "https://access.redhat.com/security": 2,
            "https://access.redhat.com/security/security-updates/#/security-advisories": 2,
            "https://access.redhat.com/security/security-updates/#/cve": 2,
            "https://access.redhat.com/support/contact/": 2,
            "https://status.redhat.com": 2,
            "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax": 2,
            "https://github.com/pmlopes": 2,
            "https://github.com/vietj": 2,
            "https://www.eclipse.org/": 2,
            "http://marketplace.eclipse.org": 2,
            "http://events.eclipse.org": 2,
            "http://www.planeteclipse.org/": 2,
            "https://www.eclipse.org/community/eclipse_newsletter/": 2,
            "https://www.youtube.com/user/EclipseFdn": 2,
            "https://bugs.eclipse.org/bugs/": 2,
            "https://www.eclipse.org/forums/": 2,
            "https://www.eclipse.org/mail/": 2,
            "https://wiki.eclipse.org/": 2,
            "https://wiki.eclipse.org/IRC": 2,
            "https://www.eclipse.org/contribute/": 2,
            "http://wiki.eclipse.org/Auto_IWG": 2,
            "http://iot.eclipse.org": 2,
            "http://locationtech.org": 2,
            "http://lts.eclipse.org": 2,
            "http://polarsys.org": 2,
            "http://science.eclipse.org": 2,
            "http://www.openmdm.org": 2,
            "https://bugzilla.readthedocs.org/en/5.0/using/understanding.html": 2,
            "http://www.eclipse.org/legal/termsofuse.php": 2,
            "http://www.eclipse.org/legal/copyright.php": 2,
            "https://dev.eclipse.org/committers/bugs/bugz_manager.php": 2,
            "https://access.redhat.com/downloads/content/package-browser": 1,
            "https://catalog.redhat.com/software/containers/explore/": 1,
            "https://access.redhat.com/articles/1202803": 1,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Solution": 1,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Article": 1,
            "https://access.redhat.com/documentation/en/red_hat_enterprise_linux": 1,
            "https://access.redhat.com/documentation/en/openshift_container_platform": 1,
            "https://access.redhat.com/documentation/en/red_hat_ansible_automation_platform": 1,
            "https://access.redhat.com/documentation/": 1,
            "https://access.redhat.com/security/": 1,
            "https://access.redhat.com/security/vulnerabilities": 1,
            "https://access.redhat.com/security/data": 1,
            "https://access.redhat.com/security/security-updates/#/security-labs": 1,
            "https://access.redhat.com/security/updates/backporting/": 1,
            "https://access.redhat.com/support/cases/": 1,
            "https://access.redhat.com/support/cases/#/troubleshoot": 1,
            "https://access.redhat.com/community": 1,
            "https://access.redhat.com/community/": 1,
            "https://access.redhat.com/discussions/": 1,
            "https://access.redhat.com/announcements/": 1,
            "https://access.redhat.com/accelerators/": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html": 1,
            "https://cloud.redhat.com/insights": 1,
            "https://access.redhat.com/changeLanguage?language=en": 1,
            "https://access.redhat.com/changeLanguage?language=fr": 1,
            "https://access.redhat.com/changeLanguage?language=ko": 1,
            "https://access.redhat.com/changeLanguage?language=ja": 1,
            "https://access.redhat.com/changeLanguage?language=zh_CN": 1,
            "https://access.redhat.com/products/red-hat-satellite/": 1,
            "https://access.redhat.com/products/red-hat-subscription-management/": 1,
            "https://access.redhat.com/products/red-hat-insights/": 1,
            "https://access.redhat.com/products/red-hat-openstack-platform/": 1,
            "https://access.redhat.com/products/red-hat-openshift-container-platform/": 1,
            "https://access.redhat.com/products/red-hat-openshift-ai/": 1,
            "https://access.redhat.com/products/openshift-dedicated-red-hat/": 1,
            "https://access.redhat.com/products/red-hat-advanced-cluster-security-for-kubernetes/": 1,
            "https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/": 1,
            "https://access.redhat.com/products/red-hat-quay/": 1,
            "https://access.redhat.com/products/red-hat-openshift-dev-spaces": 1,
            "https://access.redhat.com/products/red-hat-openshift-service-aws": 1,
            "https://access.redhat.com/products/red-hat-storage/": 1,
            "https://access.redhat.com/products/red-hat-hyperconverged-infrastructure/": 1,
            "https://access.redhat.com/products/red-hat-ceph-storage/": 1,
            "https://access.redhat.com/products/red-hat-openshift-data-foundation": 1,
            "https://access.redhat.com/products/red-hat-runtimes/": 1,
            "https://access.redhat.com/products/red-hat-jboss-enterprise-application-platform/": 1,
            "https://access.redhat.com/products/red-hat-data-grid/": 1,
            "https://access.redhat.com/products/red-hat-jboss-web-server/": 1,
            "https://access.redhat.com/products/red-hat-build-of-keycloak/": 1,
            "https://access.redhat.com/products/spring-boot/": 1,
            "https://access.redhat.com/products/nodejs/": 1,
            "https://access.redhat.com/products/quarkus/": 1,
            "https://access.redhat.com/products/red-hat-application-foundations/": 1,
            "https://access.redhat.com/products/red-hat-fuse/": 1,
            "https://access.redhat.com/products/red-hat-amq/": 1,
            "https://access.redhat.com/products/red-hat-3scale/": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1638384": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1638391": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-12541.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-12544.html": 1,
            "https://access.redhat.com/security/updates/classification/#moderate": 1,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html?downloadType=distributions&product=catRhoar.eclipse.vertx&version=3.5.4": 1,
            "https://access.redhat.com/documentation/en-us/red_hat_openshift_application_runtimes/1/html-single/red_hat_openshift_application_runtimes_release_notes/": 1,
            "https://access.redhat.com/security/team/contact/": 1,
            "https://redhat.com/en": 1,
            "https://twitter.com/RedHat": 1,
            "https://access.redhat.com/management": 1,
            "https://access.redhat.com/support": 1,
            "https://access.redhat.com/support/customer-service": 1,
            "https://access.redhat.com/articles/33844": 1,
            "https://access.redhat.com/help/login_assistance": 1,
            "https://www.redhat.com/en/trust": 1,
            "https://www.redhat.com/en/about/browser-support": 1,
            "https://www.redhat.com/en/about/digital-accessibility": 1,
            "https://access.redhat.com/recognition/": 1,
            "https://access.redhat.com/help/colophon/": 1,
            "https://www.redhat.com/": 1,
            "http://developers.redhat.com/": 1,
            "https://connect.redhat.com/": 1,
            "https://cloud.redhat.com/": 1,
            "https://access.redhat.com/subscription-value": 1,
            "https://www.redhat.com/about/": 1,
            "http://jobs.redhat.com": 1,
            "https://redhat.com/en/about/company": 1,
            "https://redhat.com/en/jobs": 1,
            "https://redhat.com/en/events": 1,
            "https://redhat.com/en/about/office-locations": 1,
            "https://redhat.com/en/contact": 1,
            "https://redhat.com/en/blog": 1,
            "https://redhat.com/en/about/our-culture/diversity-equity-inclusion": 1,
            "https://coolstuff.redhat.com/": 1,
            "https://www.redhat.com/en/summit": 1,
            "https://redhat.com/en/about/privacy-policy": 1,
            "https://redhat.com/en/about/terms-use": 1,
            "https://redhat.com/en/about/all-policies-guidelines": 1,
            "https://redhat.com/en/about/digital-accessibility": 1,
            "https://github.com/features/actions": 1,
            "https://github.com/features/packages": 1,
            "https://github.com/features/security": 1,
            "https://github.com/features/codespaces": 1,
            "https://github.com/features/copilot": 1,
            "https://github.com/features/code-review": 1,
            "https://github.com/features/issues": 1,
            "https://github.com/features/discussions": 1,
            "https://github.com/features": 1,
            "https://docs.github.com": 1,
            "https://skills.github.com": 1,
            "https://github.blog": 1,
            "https://github.com/enterprise": 1,
            "https://github.com/team": 1,
            "https://github.com/enterprise/startups": 1,
            "https://github.com/solutions/industries/healthcare": 1,
            "https://github.com/solutions/industries/financial-services": 1,
            "https://github.com/solutions/industries/manufacturing": 1,
            "https://github.com/solutions/ci-cd": 1,
            "https://github.com/solutions/devops": 1,
            "https://github.com/solutions/devsecops": 1,
            "https://resources.github.com/learn/pathways": 1,
            "https://resources.github.com": 1,
            "https://github.com/customer-stories": 1,
            "https://partner.github.com": 1,
            "https://github.com/readme": 1,
            "https://github.com/topics": 1,
            "https://github.com/trending": 1,
            "https://github.com/collections": 1,
            "https://github.com/enterprise/advanced-security": 1,
            "https://github.com/pricing": 1,
            "https://docs.github.com/terms": 1,
            "https://docs.github.com/privacy": 1,
            "https://github.com/vert-x3/vertx-web/blob/3.5.3/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java#L34": 1,
            "https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Prevention_Cheat_Sheet#Java": 1,
            "https://github.com/vert-x3/vertx-web/pull/1022": 1,
            "https://github.com/brianwrf": 1,
            "https://github.com/advisories/GHSA-qh3m-qw6v-qvhg": 1,
            "https://github.com": 1,
            "https://docs.github.com/site-policy/github-terms/github-terms-of-service": 1,
            "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement": 1,
            "https://github.com/security": 1,
            "https://www.githubstatus.com/": 1,
            "https://docs.github.com/": 1,
            "https://support.github.com?tags=dotcom-footer": 1,
            "https://www.eclipse.org/downloads/": 1,
            "https://www.eclipse.org/users/": 1,
            "https://www.eclipse.org/membership/": 1,
            "https://www.eclipse.org/projects/": 1,
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-12544": 1,
            "https://cwe.mitre.org/data/definitions/611.html": 1
        },
        "affected_products": [
            "OpenAPI",
            "Eclipse Vert.x",
            "Eclipse",
            "XML"
        ],
        "versions": {
            "lessThan": "unspecified",
            "status": "affected",
            "version": "3.5.0",
            "versionType": "custom"
        },
        "files": [
            "OpenAPI",
            "x",
            "Vert",
            "XML"
        ],
        "keywords": [
            "defense",
            "schema",
            "validate",
            "attack",
            "developer",
            "provide",
            "eclipse",
            "take",
            "create",
            "type",
            "validator",
            "openapi",
            "mechanism",
            "parser",
            "version"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "ea0b0930fbc122b7114935cafa379facc9611587",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538121469,
            "hunks": 0,
            "message": "Merge pull request #1022 from vert-x3/issues/1021 Issues/1021",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1022": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 1022",
                    "relevance": 32
                },
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 3 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1022",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "26db16c7b32e655b489d1a71605f9a785f788e41",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538120529,
            "hunks": 2,
            "message": "Added a test to verify XXE",
            "diff": [
                "diff --git a/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java b/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "index 2c9728fa2..02cbfc4da 100644",
                "--- a/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "+++ b/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "@@ -56,4 +56,3 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "       } catch (SAXException e) {",
                "-        e.printStackTrace();",
                "-        return null;",
                "+        throw new RuntimeException(e);",
                "       }",
                "@@ -71,4 +70,2 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "-    System.out.println(\">>>>\" + dbf.getFeature(\"http://apache.org/xml/features/disallow-doctype-decl\"));",
                "-",
                "     // This is the PRIMARY defense. If DTDs (doctypes) are disallowed, almost all XML entity attacks are prevented"
            ],
            "changed_files": [
                "vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x, XML",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                    "relevance": 8
                },
                {
                    "id": "SEC_KEYWORDS_IN_MESSAGE",
                    "message": "The commit message contains some security-related keywords: xxe",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: type, validator",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d814d22ade14bafec47c4447a4ba9bff090f05e8",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538057100,
            "hunks": 8,
            "message": "Create safe xml parsers",
            "diff": [
                "diff --git a/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java b/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "index a3489c1df..2c9728fa2 100644",
                "--- a/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "+++ b/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "@@ -7,2 +7,4 @@ import org.w3c.dom.Document;",
                " import org.xml.sax.SAXException;",
                "+import org.xml.sax.SAXNotRecognizedException;",
                "+import org.xml.sax.SAXNotSupportedException;",
                "@@ -11,2 +13,3 @@ import javax.xml.parsers.DocumentBuilder;",
                " import javax.xml.parsers.DocumentBuilderFactory;",
                "+import javax.xml.parsers.ParserConfigurationException;",
                " import javax.xml.transform.Source;",
                "@@ -25,4 +28,7 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "-  private XMLTypeValidator(Validator schemaValidator) {",
                "+  private XMLTypeValidator(Validator schemaValidator) throws SAXNotRecognizedException, SAXNotSupportedException {",
                "     this.schemaValidator = schemaValidator;",
                "+    // protect this validator against XXE",
                "+    this.schemaValidator.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");",
                "+    this.schemaValidator.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");",
                "   }",
                "@@ -32,3 +38,3 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "     try {",
                "-      DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();",
                "+      DocumentBuilder parser = createDocumentBuilderFactoryInstance().newDocumentBuilder();",
                "       Document document = parser.parse(value);",
                "@@ -43,8 +49,7 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "     public static XMLTypeValidator createXMLTypeValidator(String xmlSchema) {",
                "-      // create a SchemaFactory capable of understanding WXS schemas",
                "-      SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);",
                "-",
                "-      // load a WXS schema, represented by a Schema instance",
                "-      Source xmlSchemaSource = new StreamSource(new StringReader(xmlSchema));",
                "       try {",
                "+        // create a SchemaFactory capable of understanding WXS schemas",
                "+        SchemaFactory factory = createSchemaFactoryInstance();",
                "+        // load a WXS schema, represented by a Schema instance",
                "+        Source xmlSchemaSource = new StreamSource(new StringReader(xmlSchema));",
                "         return new XMLTypeValidator(factory.newSchema(xmlSchemaSource).newValidator());",
                "@@ -57,2 +62,58 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "+  /**",
                "+   * Safely create a DocumentBuilderFactory following OWASP best practises",
                "+   * @return DocumentBuilderFactory instance",
                "+   */",
                "+  private static DocumentBuilderFactory createDocumentBuilderFactoryInstance() throws ParserConfigurationException {",
                "+",
                "+    final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
                "+    String FEATURE;",
                "+",
                "+    System.out.println(\">>>>\" + dbf.getFeature(\"http://apache.org/xml/features/disallow-doctype-decl\"));",
                "+",
                "+    // This is the PRIMARY defense. If DTDs (doctypes) are disallowed, almost all XML entity attacks are prevented",
                "+    // Xerces 2 only - http://xerces.apache.org/xerces2-j/features.html#disallow-doctype-decl",
                "+    FEATURE = \"http://apache.org/xml/features/disallow-doctype-decl\";",
                "+    dbf.setFeature(FEATURE, true);",
                "+",
                "+    // If you can't completely disable DTDs, then at least do the following:",
                "+    // Xerces 1 - http://xerces.apache.org/xerces-j/features.html#external-general-entities",
                "+    // Xerces 2 - http://xerces.apache.org/xerces2-j/features.html#external-general-entities",
                "+    // JDK7+ - http://xml.org/sax/features/external-general-entities",
                "+    FEATURE = \"http://xml.org/sax/features/external-general-entities\";",
                "+    dbf.setFeature(FEATURE, false);",
                "+",
                "+    // Xerces 1 - http://xerces.apache.org/xerces-j/features.html#external-parameter-entities",
                "+    // Xerces 2 - http://xerces.apache.org/xerces2-j/features.html#external-parameter-entities",
                "+    // JDK7+ - http://xml.org/sax/features/external-parameter-entities",
                "+    FEATURE = \"http://xml.org/sax/features/external-parameter-entities\";",
                "+    dbf.setFeature(FEATURE, false);",
                "+",
                "+    // Disable external DTDs as well",
                "+    FEATURE = \"http://apache.org/xml/features/nonvalidating/load-external-dtd\";",
                "+    dbf.setFeature(FEATURE, false);",
                "+",
                "+    // and these as well, per Timothy Morgan's 2014 paper: \"XML Schema, DTD, and Entity Attacks\"",
                "+    dbf.setXIncludeAware(false);",
                "+    dbf.setExpandEntityReferences(false);",
                "+",
                "+    // And, per Timothy Morgan: \"If for some reason support for inline DOCTYPEs are a requirement, then",
                "+    // ensure the entity settings are disabled (as shown above) and beware that SSRF attacks",
                "+    // (http://cwe.mitre.org/data/definitions/918.html) and denial",
                "+    // of service attacks (such as billion laughs or decompression bombs via \"jar:\") are a risk.\"",
                "+",
                "+    return dbf;",
                "+  }",
                "+",
                "+  /**",
                "+   * Creates a SchemaFactory instance following OWASP best practices",
                "+   * @return SchemaFactory instance",
                "+   */",
                "+  private static SchemaFactory createSchemaFactoryInstance() throws SAXNotRecognizedException, SAXNotSupportedException {",
                "+    final SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);",
                "+    factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");",
                "+    factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");",
                "+",
                "+    return factory;",
                "+  }",
                " }"
            ],
            "changed_files": [
                "vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x, XML",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: create, parser",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: type, validator",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "3fcb0036dc11f22ea232f61cfff31b29a6b6eca4",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538120529,
            "hunks": 2,
            "message": "Added a test to verify XXE (cherry picked from commit 26db16c7b32e655b489d1a71605f9a785f788e41)",
            "diff": [
                "diff --git a/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java b/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "index 2c9728fa2..02cbfc4da 100644",
                "--- a/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "+++ b/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "@@ -56,4 +56,3 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "       } catch (SAXException e) {",
                "-        e.printStackTrace();",
                "-        return null;",
                "+        throw new RuntimeException(e);",
                "       }",
                "@@ -71,4 +70,2 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "-    System.out.println(\">>>>\" + dbf.getFeature(\"http://apache.org/xml/features/disallow-doctype-decl\"));",
                "-",
                "     // This is the PRIMARY defense. If DTDs (doctypes) are disallowed, almost all XML entity attacks are prevented"
            ],
            "changed_files": [
                "vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.5.4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x, XML",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                    "relevance": 8
                },
                {
                    "id": "SEC_KEYWORDS_IN_MESSAGE",
                    "message": "The commit message contains some security-related keywords: xxe",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: type, validator",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ac8692c618d6180a9bc012a2ac8dbec821b1a973",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538057100,
            "hunks": 8,
            "message": "Create safe xml parsers (cherry picked from commit d814d22ade14bafec47c4447a4ba9bff090f05e8)",
            "diff": [
                "diff --git a/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java b/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "index a3489c1df..2c9728fa2 100644",
                "--- a/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "+++ b/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                "@@ -7,2 +7,4 @@ import org.w3c.dom.Document;",
                " import org.xml.sax.SAXException;",
                "+import org.xml.sax.SAXNotRecognizedException;",
                "+import org.xml.sax.SAXNotSupportedException;",
                "@@ -11,2 +13,3 @@ import javax.xml.parsers.DocumentBuilder;",
                " import javax.xml.parsers.DocumentBuilderFactory;",
                "+import javax.xml.parsers.ParserConfigurationException;",
                " import javax.xml.transform.Source;",
                "@@ -25,4 +28,7 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "-  private XMLTypeValidator(Validator schemaValidator) {",
                "+  private XMLTypeValidator(Validator schemaValidator) throws SAXNotRecognizedException, SAXNotSupportedException {",
                "     this.schemaValidator = schemaValidator;",
                "+    // protect this validator against XXE",
                "+    this.schemaValidator.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");",
                "+    this.schemaValidator.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");",
                "   }",
                "@@ -32,3 +38,3 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "     try {",
                "-      DocumentBuilder parser = DocumentBuilderFactory.newInstance().newDocumentBuilder();",
                "+      DocumentBuilder parser = createDocumentBuilderFactoryInstance().newDocumentBuilder();",
                "       Document document = parser.parse(value);",
                "@@ -43,8 +49,7 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "     public static XMLTypeValidator createXMLTypeValidator(String xmlSchema) {",
                "-      // create a SchemaFactory capable of understanding WXS schemas",
                "-      SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);",
                "-",
                "-      // load a WXS schema, represented by a Schema instance",
                "-      Source xmlSchemaSource = new StreamSource(new StringReader(xmlSchema));",
                "       try {",
                "+        // create a SchemaFactory capable of understanding WXS schemas",
                "+        SchemaFactory factory = createSchemaFactoryInstance();",
                "+        // load a WXS schema, represented by a Schema instance",
                "+        Source xmlSchemaSource = new StreamSource(new StringReader(xmlSchema));",
                "         return new XMLTypeValidator(factory.newSchema(xmlSchemaSource).newValidator());",
                "@@ -57,2 +62,58 @@ public class XMLTypeValidator implements ParameterTypeValidator {",
                "+  /**",
                "+   * Safely create a DocumentBuilderFactory following OWASP best practises",
                "+   * @return DocumentBuilderFactory instance",
                "+   */",
                "+  private static DocumentBuilderFactory createDocumentBuilderFactoryInstance() throws ParserConfigurationException {",
                "+",
                "+    final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
                "+    String FEATURE;",
                "+",
                "+    System.out.println(\">>>>\" + dbf.getFeature(\"http://apache.org/xml/features/disallow-doctype-decl\"));",
                "+",
                "+    // This is the PRIMARY defense. If DTDs (doctypes) are disallowed, almost all XML entity attacks are prevented",
                "+    // Xerces 2 only - http://xerces.apache.org/xerces2-j/features.html#disallow-doctype-decl",
                "+    FEATURE = \"http://apache.org/xml/features/disallow-doctype-decl\";",
                "+    dbf.setFeature(FEATURE, true);",
                "+",
                "+    // If you can't completely disable DTDs, then at least do the following:",
                "+    // Xerces 1 - http://xerces.apache.org/xerces-j/features.html#external-general-entities",
                "+    // Xerces 2 - http://xerces.apache.org/xerces2-j/features.html#external-general-entities",
                "+    // JDK7+ - http://xml.org/sax/features/external-general-entities",
                "+    FEATURE = \"http://xml.org/sax/features/external-general-entities\";",
                "+    dbf.setFeature(FEATURE, false);",
                "+",
                "+    // Xerces 1 - http://xerces.apache.org/xerces-j/features.html#external-parameter-entities",
                "+    // Xerces 2 - http://xerces.apache.org/xerces2-j/features.html#external-parameter-entities",
                "+    // JDK7+ - http://xml.org/sax/features/external-parameter-entities",
                "+    FEATURE = \"http://xml.org/sax/features/external-parameter-entities\";",
                "+    dbf.setFeature(FEATURE, false);",
                "+",
                "+    // Disable external DTDs as well",
                "+    FEATURE = \"http://apache.org/xml/features/nonvalidating/load-external-dtd\";",
                "+    dbf.setFeature(FEATURE, false);",
                "+",
                "+    // and these as well, per Timothy Morgan's 2014 paper: \"XML Schema, DTD, and Entity Attacks\"",
                "+    dbf.setXIncludeAware(false);",
                "+    dbf.setExpandEntityReferences(false);",
                "+",
                "+    // And, per Timothy Morgan: \"If for some reason support for inline DOCTYPEs are a requirement, then",
                "+    // ensure the entity settings are disabled (as shown above) and beware that SSRF attacks",
                "+    // (http://cwe.mitre.org/data/definitions/918.html) and denial",
                "+    // of service attacks (such as billion laughs or decompression bombs via \"jar:\") are a risk.\"",
                "+",
                "+    return dbf;",
                "+  }",
                "+",
                "+  /**",
                "+   * Creates a SchemaFactory instance following OWASP best practices",
                "+   * @return SchemaFactory instance",
                "+   */",
                "+  private static SchemaFactory createSchemaFactoryInstance() throws SAXNotRecognizedException, SAXNotSupportedException {",
                "+    final SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);",
                "+    factory.setProperty(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");",
                "+    factory.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"\");",
                "+",
                "+    return factory;",
                "+  }",
                " }"
            ],
            "changed_files": [
                "vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.5.4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x, XML",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/impl/XMLTypeValidator.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: create, parser",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: type, validator",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d816f74637833a309d4a2e80eb240f4e8687e466",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1537251045,
            "hunks": 1,
            "message": "Set jackson version to 2.9.6",
            "diff": [
                "diff --git a/vertx-web-api-contract/pom.xml b/vertx-web-api-contract/pom.xml",
                "index d93811bb3..20a703121 100644",
                "--- a/vertx-web-api-contract/pom.xml",
                "+++ b/vertx-web-api-contract/pom.xml",
                "@@ -35,2 +35,8 @@",
                "     </dependency>",
                "+    <!-- Force version provided by io.swagger.parser.v3:swagger-parser transitively -->",
                "+    <dependency>",
                "+      <groupId>com.fasterxml.jackson.dataformat</groupId>",
                "+      <artifactId>jackson-dataformat-yaml</artifactId>",
                "+      <version>2.9.6</version>",
                "+    </dependency>"
            ],
            "changed_files": [
                "vertx-web-api-contract/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "d958e173933d2e32603d54ce5460d29575de5b87"
                ]
            ],
            "tags": [
                "3.5.4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-api-contract/pom.xml",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3065d3a51be4f7b26c7fd3b57301ad6cce28f9f7",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538649565,
            "hunks": 1,
            "message": "Force org.javassist:javassist:3.21.0-GA to match mysql/postgres version",
            "diff": [
                "diff --git a/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml b/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                "index cd0149cac..54b8c560d 100644",
                "--- a/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                "@@ -26,2 +26,8 @@",
                "     </dependency>",
                "+    <!-- Force same version than mysql/postgres driver -->",
                "+    <dependency>",
                "+      <groupId>org.javassist</groupId>",
                "+      <artifactId>javassist</artifactId>",
                "+      <version>3.21.0-GA</version>",
                "+    </dependency>",
                "     <dependency>"
            ],
            "changed_files": [
                "vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "afc502e322b88dcced7c66aad613068e56834c96",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538037330,
            "hunks": 1,
            "message": "Update mockito to latest version",
            "diff": [
                "diff --git a/vertx-web/pom.xml b/vertx-web/pom.xml",
                "index 39a5fc038..b4c2b3311 100644",
                "--- a/vertx-web/pom.xml",
                "+++ b/vertx-web/pom.xml",
                "@@ -90,3 +90,3 @@",
                "       <artifactId>mockito-core</artifactId>",
                "-      <version>2.17.0</version>",
                "+      <version>2.22.0</version>",
                "       <scope>test</scope>"
            ],
            "changed_files": [
                "vertx-web/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web/pom.xml",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "05f9b456e93c73d0f1f50ac08fc7608e9a69a596",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1527201352,
            "hunks": 2,
            "message": "Fix a potential deadlock case in failure handling This is essentially caused by calling the user-supplied RoutingContext handler in the synchronization block of RouteImpl, in addition to two conditions that can happen. 1. A handler may decided to release the synchronization lock on previous RouteImpl instances using Scheduler, and regain the synchronization lock on the current RouteImpl only. 2. When a handler calls fail directly or indirectly because of exception in the handler, the scanning of failure handlers will go back to the first RouteImpl in RouterImpl, which requires gaining the synchronization lock of previous RouteImpl instances. Imagine we have two threads and two RouteImpl instances, Route1 and Route2, in RouterImpl: Thread 1: Lock Route1, Lock Route2, Release Route1 and Route2 due to Scheduler, Lock Route2 only due to Scheduler running the task, Try lock Route1 due to failure handling Thread 2: Lock Route1, Try lock Route2 due to normal processing. This creates a deadlock. See the added unit test for details of how this can be reproduced. Timing is critical so CountDownLatch is used to sequence how things happen.",
            "diff": [
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java b/vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java",
                "index 81d75b080..20fc47297 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java",
                "@@ -217,8 +217,20 @@ public class RouteImpl implements Route {",
                "-  synchronized void handleContext(RoutingContextImplBase context) {",
                "-    contextHandlers.get(context.currentRouteNextHandlerIndex() - 1).handle(context);",
                "+  void handleContext(RoutingContextImplBase context) {",
                "+    Handler<RoutingContext> contextHandler;",
                "+",
                "+    synchronized (this) {",
                "+      contextHandler = contextHandlers.get(context.currentRouteNextHandlerIndex() - 1);",
                "+    }",
                "+",
                "+    contextHandler.handle(context);",
                "   }",
                "-  synchronized void handleFailure(RoutingContextImplBase context) {",
                "-    failureHandlers.get(context.currentRouteNextFailureHandlerIndex() - 1).handle(context);",
                "+  void handleFailure(RoutingContextImplBase context) {",
                "+    Handler<RoutingContext> failureHandler;",
                "+",
                "+    synchronized (this) {",
                "+      failureHandler = failureHandlers.get(context.currentRouteNextFailureHandlerIndex() - 1);",
                "+    }",
                "+",
                "+    failureHandler.handle(context);",
                "   }"
            ],
            "changed_files": [
                "vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.5.4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: create",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d1c3ca383f0345c07e30585f3359b9661e5a8db2",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538647583,
            "hunks": 1,
            "message": "Use MVEL 2.3.1 which is the stack version",
            "diff": [
                "diff --git a/vertx-template-engines/vertx-web-templ-mvel/pom.xml b/vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                "index 7aa383716..7bb334a7b 100644",
                "--- a/vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                "@@ -18,3 +18,3 @@",
                "       <artifactId>mvel2</artifactId>",
                "-      <version>2.4.0.Final</version>",
                "+      <version>2.3.1.Final</version>",
                "     </dependency>"
            ],
            "changed_files": [
                "vertx-template-engines/vertx-web-templ-mvel/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "48ec70cc376b1c52f1df4402344d783f8195ba63",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538808854,
            "hunks": 1,
            "message": "The SSL property on client HttpRequest is not copied by the copy() method - fixes #1028",
            "diff": [
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpRequestImpl.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpRequestImpl.java",
                "index 2fc219cba..44db83695 100644",
                "--- a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpRequestImpl.java",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpRequestImpl.java",
                "@@ -89,2 +89,3 @@ class HttpRequestImpl<T> implements HttpRequest<T> {",
                "     this.followRedirects = other.followRedirects;",
                "+    this.ssl = other.ssl;",
                "   }"
            ],
            "changed_files": [
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpRequestImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1028": "HttpRequest ssl property is lost on copy #695"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpRequestImpl.java",
                    "relevance": 8
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1028",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "57a65dce6f4c5aa5e3ce7288685e7f3447eb8f3b",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1537429350,
            "hunks": 3,
            "message": "CVE-2018-12542: The StaticHandler uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '\\' (forward slashes) sequences that can resolve to a location that is outside of that directory when running on Windows Operating Systems. - fixes #1025",
            "diff": [
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java b/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
                "index 7e456617f..15f62d9a6 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
                "@@ -137,5 +137,8 @@ public class StaticHandlerImpl implements StaticHandler {",
                "     } else {",
                "-      String path = Utils.removeDots(Utils.urlDecode(context.normalisedPath(), false));",
                "-      // if the normalized path is null it cannot be resolved",
                "+      // we are trying to match a URL path to a Filesystem path, so the first step",
                "+      // is to url decode the normalized path so avoid misinterpretations",
                "+      String path = Utils.urlDecode(context.normalisedPath(), false);",
                "+",
                "       if (path == null) {",
                "+        // if the normalized path is null it cannot be resolved",
                "         log.warn(\"Invalid path: \" + context.request().path());",
                "@@ -145,2 +148,12 @@ public class StaticHandlerImpl implements StaticHandler {",
                "+      if (File.separatorChar != '/') {",
                "+        // although forward slashes are not path separators according to the rfc3986 if",
                "+        // used directly to access the filesystem on Windows, they would be treated as such",
                "+        // Instead of relying on the usual normalized method, all forward slashes must be",
                "+        // replaced by backslashes in this handler.",
                "+        path = path.replace(File.separatorChar, '/');",
                "+      }",
                "+      // clean the .. sequences according to rfc3986",
                "+      path = Utils.removeDots(path);",
                "+",
                "       // only root is known for sure to be a directory. all other directories must be identified as such."
            ],
            "changed_files": [
                "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1025": "Vert.x 3.5.4 umbrella issue vert-x3/issues#401 [Security] Path Traversal In Windows #1714"
            },
            "cve_refs": [
                "CVE-2018-12542"
            ],
            "twins": [],
            "tags": [
                "3.5.4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
                    "relevance": 8
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1025",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "733dcdf455881d1f5944aeba6c38c0d26cd3dc39",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538035709,
            "hunks": 1,
            "message": "Force template compilation to use Java 8 - see https://github.com/fizzed/rocker/issues/90",
            "diff": [
                "diff --git a/vertx-template-engines/vertx-web-templ-rocker/pom.xml b/vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                "index 420d1d8e1..d73972573 100644",
                "--- a/vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                "@@ -15,2 +15,4 @@",
                "     <rocker.version>0.24.0</rocker.version>",
                "+    <!-- Force Java 8, see https://github.com/fizzed/rocker/issues/90 -->",
                "+    <rocker.javaVersion>1.8</rocker.javaVersion>",
                "   </properties>"
            ],
            "changed_files": [
                "vertx-template-engines/vertx-web-templ-rocker/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "788f84cc6ee1f1b8d0763bf82208bdb5762848e2",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538328355,
            "hunks": 13,
            "message": "Initial tests and fixes Signed-off-by: tnolli <tommaso.nolli@gmail.com>",
            "diff": [
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/SessionAwareWebClient.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/SessionAwareWebClient.java",
                "index 3db07bf1b..331b36fce 100644",
                "--- a/vertx-web-client/src/main/java/io/vertx/ext/web/client/SessionAwareWebClient.java",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/SessionAwareWebClient.java",
                "@@ -13,3 +13,2 @@ package io.vertx.ext.web.client;",
                " import io.vertx.codegen.annotations.Fluent;",
                "-import io.vertx.codegen.annotations.VertxGen;",
                " import io.vertx.ext.web.client.impl.SessionAwareWebClientImpl;",
                "@@ -36,3 +35,2 @@ import io.vertx.ext.web.client.impl.SessionAwareWebClientImpl;",
                "  */",
                "-@VertxGen",
                " public interface SessionAwareWebClient extends WebClient {",
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "index 85404d1a2..bfa8800ce 100644",
                "--- a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "@@ -37,2 +37,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   private CookieStore cookieStore;",
                "+  private CaseInsensitiveHeaders originalHeaders;",
                "@@ -41,2 +42,4 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "     this.cookieStore = cookieStore;",
                "+    this.originalHeaders = new CaseInsensitiveHeaders();",
                "+    this.originalHeaders.addAll(request.headers());",
                "   }",
                "@@ -45,4 +48,8 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "     if (headers != null) {",
                "-      request.headers().addAll(headers);",
                "+      originalHeaders.addAll(headers);",
                "     }",
                "+    ",
                "+    // we need to reset the headers at every \"send\" because a previous call",
                "+    // could have change the cookies (the server sent new ones or updated some values)",
                "+    request.headers().clear().addAll(originalHeaders);",
                "@@ -153,2 +160,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendStream(ReadStream<Buffer> body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    prepare(null);",
                "     request.sendStream(body, cookieHandler(handler));",
                "@@ -158,2 +166,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendBuffer(Buffer body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    prepare(null);",
                "     request.sendBuffer(body, cookieHandler(handler));",
                "@@ -163,2 +172,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendJsonObject(JsonObject body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    prepare(null);",
                "     request.sendJsonObject(body, cookieHandler(handler));",
                "@@ -168,2 +178,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendJson(Object body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    prepare(null);",
                "     request.sendJson(body, cookieHandler(handler));",
                "@@ -173,2 +184,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendForm(MultiMap body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    prepare(null);",
                "     request.sendForm(body, cookieHandler(handler));",
                "@@ -178,2 +190,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendMultipartForm(MultipartForm body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    prepare(null);",
                "     request.sendMultipartForm(body, cookieHandler(handler));",
                "@@ -183,2 +196,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void send(Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    prepare(null);",
                "     request.send(cookieHandler(handler));"
            ],
            "changed_files": [
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/SessionAwareWebClient.java",
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x, Vert",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-client/src/main/java/io/vertx/ext/web/client/SessionAwareWebClient.java, vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "767b79b3f45e9965356840db2c6fbfbeeaeb3b38",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538638563,
            "hunks": 2,
            "message": "SockJS TCK fix",
            "diff": [
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/SockJSSession.java b/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/SockJSSession.java",
                "index be4e52d76..ab5580067 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/SockJSSession.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/SockJSSession.java",
                "@@ -277,2 +277,6 @@ class SockJSSession extends SockJSSocketBase implements Shareable {",
                "+  synchronized Context context() {",
                "+    return transportCtx;",
                "+  }",
                "+",
                "   synchronized void register(HttpServerRequest req, TransportListener lst) {",
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/WebSocketTransport.java b/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/WebSocketTransport.java",
                "index 46103f892..286324a10 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/WebSocketTransport.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/WebSocketTransport.java",
                "@@ -139,3 +139,5 @@ class WebSocketTransport extends BaseTransport {",
                "       closed = true;",
                "-      ws.close();",
                "+      // Asynchronously close the websocket to fix a bug in the SockJS TCK",
                "+      // due to the WebSocket client that skip some frames (bug)",
                "+      session.context().runOnContext(v -> ws.close());",
                "     }"
            ],
            "changed_files": [
                "vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/SockJSSession.java",
                "vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/WebSocketTransport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/SockJSSession.java, vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/WebSocketTransport.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "159b92c990b29bbb809d1b59f29086f253fc9c23",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538550638,
            "hunks": 15,
            "message": "Releasing 3.5.5-SNAPSHOT",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index ef914685a..ee97cf998 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -13,6 +13,6 @@",
                "   <artifactId>vertx-web-parent</artifactId>",
                "-  <version>3.5.4</version>",
                "+  <version>3.5.5-SNAPSHOT</version>",
                "   <properties>",
                "-    <stack.version>3.5.4</stack.version>",
                "+    <stack.version>3.5.5-SNAPSHOT</stack.version>",
                "     <pac4j.version>1.6.0</pac4j.version>",
                "diff --git a/vertx-sockjs-service-proxy/pom.xml b/vertx-sockjs-service-proxy/pom.xml",
                "index 7f8f41d62..62018e671 100644",
                "--- a/vertx-sockjs-service-proxy/pom.xml",
                "+++ b/vertx-sockjs-service-proxy/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/pom.xml b/vertx-template-engines/pom.xml",
                "index bcb3cd9fe..f51dbfc7c 100644",
                "--- a/vertx-template-engines/pom.xml",
                "+++ b/vertx-template-engines/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-freemarker/pom.xml b/vertx-template-engines/vertx-web-templ-freemarker/pom.xml",
                "index bf5560f98..bbbc02b4c 100644",
                "--- a/vertx-template-engines/vertx-web-templ-freemarker/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-freemarker/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-handlebars/pom.xml b/vertx-template-engines/vertx-web-templ-handlebars/pom.xml",
                "index 472ab9180..5372e778c 100644",
                "--- a/vertx-template-engines/vertx-web-templ-handlebars/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-handlebars/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-jade/pom.xml b/vertx-template-engines/vertx-web-templ-jade/pom.xml",
                "index 1f1137f90..0aedfce6c 100644",
                "--- a/vertx-template-engines/vertx-web-templ-jade/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-jade/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-mvel/pom.xml b/vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                "index 4ceefe967..84128c545 100644",
                "--- a/vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-pebble/pom.xml b/vertx-template-engines/vertx-web-templ-pebble/pom.xml",
                "index e85ee6038..50db246fa 100644",
                "--- a/vertx-template-engines/vertx-web-templ-pebble/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-pebble/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-rocker/pom.xml b/vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                "index f3e49ceb8..ef8a6d7bc 100644",
                "--- a/vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                "@@ -8,3 +8,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml b/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                "index b577bbba3..1f376917e 100644",
                "--- a/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-web-api-contract/pom.xml b/vertx-web-api-contract/pom.xml",
                "index 0b67b25fc..bf56231e2 100644",
                "--- a/vertx-web-api-contract/pom.xml",
                "+++ b/vertx-web-api-contract/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-web-client/pom.xml b/vertx-web-client/pom.xml",
                "index 37a1ff576..0509a9678 100644",
                "--- a/vertx-web-client/pom.xml",
                "+++ b/vertx-web-client/pom.xml",
                "@@ -8,3 +8,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-web-common/pom.xml b/vertx-web-common/pom.xml",
                "index 4a2ad87b4..a4b3dee6c 100644",
                "--- a/vertx-web-common/pom.xml",
                "+++ b/vertx-web-common/pom.xml",
                "@@ -8,3 +8,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>",
                "diff --git a/vertx-web/pom.xml b/vertx-web/pom.xml",
                "index ed5d09d28..5982b0c69 100644",
                "--- a/vertx-web/pom.xml",
                "+++ b/vertx-web/pom.xml",
                "@@ -8,3 +8,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4</version>",
                "+    <version>3.5.5-SNAPSHOT</version>",
                "   </parent>"
            ],
            "changed_files": [
                "pom.xml",
                "vertx-sockjs-service-proxy/pom.xml",
                "vertx-template-engines/pom.xml",
                "vertx-template-engines/vertx-web-templ-freemarker/pom.xml",
                "vertx-template-engines/vertx-web-templ-handlebars/pom.xml",
                "vertx-template-engines/vertx-web-templ-jade/pom.xml",
                "vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                "vertx-template-engines/vertx-web-templ-pebble/pom.xml",
                "vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                "vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                "vertx-web-api-contract/pom.xml",
                "vertx-web-client/pom.xml",
                "vertx-web-common/pom.xml",
                "vertx-web/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-api-contract/pom.xml, vertx-template-engines/vertx-web-templ-jade/pom.xml, vertx-web-common/pom.xml, vertx-sockjs-service-proxy/pom.xml, vertx-template-engines/vertx-web-templ-mvel/pom.xml, vertx-template-engines/vertx-web-templ-freemarker/pom.xml, vertx-web-client/pom.xml, vertx-web/pom.xml, vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml, vertx-template-engines/vertx-web-templ-rocker/pom.xml, vertx-template-engines/vertx-web-templ-handlebars/pom.xml, vertx-template-engines/vertx-web-templ-pebble/pom.xml, vertx-template-engines/pom.xml",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "fcea4b0b9642235ac704e0e7eb520c3e18c14488",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538325066,
            "hunks": 6,
            "message": "Initial implementation Signed-off-by: tnolli <tommaso.nolli@gmail.com>",
            "diff": [
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/CookieStore.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/CookieStore.java",
                "new file mode 100644",
                "index 000000000..8a1df2b1b",
                "--- /dev/null",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/CookieStore.java",
                "@@ -0,0 +1,131 @@",
                "+/*",
                "+ * Copyright (c) 2011-2018 Contributors to the Eclipse Foundation",
                "+ *",
                "+ * This program and the accompanying materials are made available under the",
                "+ * terms of the Eclipse Public License 2.0 which is available at",
                "+ * http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0",
                "+ * which is available at https://www.apache.org/licenses/LICENSE-2.0.",
                "+ *",
                "+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0",
                "+ */",
                "+package io.vertx.ext.web.client;",
                "+",
                "+import io.netty.handler.codec.http.cookie.Cookie;",
                "+import io.vertx.codegen.annotations.Fluent;",
                "+import io.vertx.ext.web.client.impl.TreeCookieStore;",
                "+",
                "+/**",
                "+ * A cookie store that manages cookies for a single user; received for different domains and valid for different paths.",
                "+ * ",
                "+ * @author <a href=\"mailto:tommaso.nolli@gmail.com\">Tommaso Nolli</a>",
                "+ */",
                "+public interface CookieStore {",
                "+",
                "+  /**",
                "+   * Builds an in memory cookie store.",
                "+   * @return the new cookie store",
                "+   */",
                "+  static CookieStore build() {",
                "+    return new TreeCookieStore();",
                "+  }",
                "+  ",
                "+  /**",
                "+   * Returns and {@link Iterable} of cookies satisfying the filters passed as paraemters.",
                "+   * <p>",
                "+   * It is implementation responsibility to return the appropriate cookies between the ones stored in this store.",
                "+   * @param ssl true if is the connection secure",
                "+   * @param domain the domain we are calling",
                "+   * @param path the path we are calling",
                "+   * @return the matched cookies",
                "+   */",
                "+  Iterable<Cookie> get(boolean ssl, String domain, String path);",
                "+  ",
                "+  /**",
                "+   * Add a cookie to this {@code CookieStore}.",
                "+   * <p>",
                "+   * If a cookie with the same name is received from the server, it will overwrite this setting.",
                "+   * ",
                "+   * @param name the cookie name",
                "+   * @param value the cookie value",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  CookieStore put(String name, String value);",
                "+",
                "+  /**",
                "+   * Add a cookie to this {@code CookieStore}.",
                "+   * <p>",
                "+   * If a cookie with the same name is received from the server, it will overwrite this setting.",
                "+   * ",
                "+   * @param name the cookie name",
                "+   * @param value the cookie value",
                "+   * @param path the cookie path",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  CookieStore put(String name, String value, String path);",
                "+",
                "+  /**",
                "+   * Add a cookie to this {@code CookieStore}.",
                "+   * <p>",
                "+   * If a cookie with the same name is received from the server, it will overwrite this setting.",
                "+   * ",
                "+   * @param name the cookie name",
                "+   * @param value the cookie value",
                "+   * @param domain the coolie domain",
                "+   * @param path the cookie path",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  CookieStore put(String name, String value, String domain, String path);",
                "+",
                "+  /**",
                "+   * Add a cookie to this {@code CookieStore}.",
                "+   * <p>",
                "+   * If a cookie with the same name is received from the server, it will overwrite this setting.",
                "+   * <p>",
                "+   * Implementation notice: if you store cookies on disk and persist them between restarts,",
                "+   * you should honor the max-age attributes: max-ag<= 0 means that the cookie is a session cookie",
                "+   * to be removed when the user &quot;closes the browser&quot; (it is up to you to define this behavior)",
                "+   * ",
                "+   * @param name the cookie name",
                "+   * @param value the cookie value",
                "+   * @param domain the coolie domain",
                "+   * @param path the cookie path",
                "+   * @param maxAge the cookie max-age",
                "+   * @param isSecure true if the cookie must be used on https only",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  CookieStore put(String name, String value, String domain, String path, Long maxAge, boolean isSecure);",
                "+",
                "+  /**",
                "+   * Removes a previously added cookie.",
                "+   * ",
                "+   * @param name the cookie name",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  CookieStore remove(String name);",
                "+",
                "+  /**",
                "+   * Removes a previously added cookie.",
                "+   * ",
                "+   * @param name the cookie name",
                "+   * @param path the cookie path",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  CookieStore remove(String name, String path);",
                "+",
                "+  /**",
                "+   * Removes a previously added cookie.",
                "+   * ",
                "+   * @param name the cookie name",
                "+   * @param domain the cookie domain",
                "+   * @param path the cookie path",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  CookieStore remove(String name, String domain, String path);  ",
                "+}",
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/SessionAwareWebClient.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/SessionAwareWebClient.java",
                "new file mode 100644",
                "index 000000000..3db07bf1b",
                "--- /dev/null",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/SessionAwareWebClient.java",
                "@@ -0,0 +1,127 @@",
                "+/*",
                "+ * Copyright (c) 2011-2018 Contributors to the Eclipse Foundation",
                "+ *",
                "+ * This program and the accompanying materials are made available under the",
                "+ * terms of the Eclipse Public License 2.0 which is available at",
                "+ * http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0",
                "+ * which is available at https://www.apache.org/licenses/LICENSE-2.0.",
                "+ *",
                "+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0",
                "+ */",
                "+package io.vertx.ext.web.client;",
                "+",
                "+import io.vertx.codegen.annotations.Fluent;",
                "+import io.vertx.codegen.annotations.VertxGen;",
                "+import io.vertx.ext.web.client.impl.SessionAwareWebClientImpl;",
                "+",
                "+/**",
                "+ * An asynchronous sessions aware HTTP / HTTP/2 client called {@code SessionAwareWebClient}.",
                "+ * <p>",
                "+ * This client wraps a {@link WebClient} and makes it session aware adding features to it:",
                "+ * <ul>",
                "+ *   <li>Per client headers, to be send with every request</li>",
                "+ *   <li>Per client cookies, to be send with every request</li>",
                "+ *   <li>Automatic storage and sending of cookies received from the server(s)</li>",
                "+ * </ul>",
                "+ * <p>",
                "+ * The client honors the cookies attributes:",
                "+ * <ul>",
                "+ *  <li>domain</li>",
                "+ *  <li>path</li>",
                "+ *  <li>secure</li>",
                "+ *  <li>max-age and expires</li>",
                "+ * </ul>",
                "+ *",
                "+ * @author <a href=\"mailto:tommaso.nolli@gmail.com\">Tommaso Nolli</a>",
                "+ */",
                "+@VertxGen",
                "+public interface SessionAwareWebClient extends WebClient {",
                "+",
                "+  /**",
                "+   * Create a session aware web client using the provided {@code webClient} instance.",
                "+   * ",
                "+   * @param webClient the web client instance",
                "+   * @return the created client",
                "+   */",
                "+  static SessionAwareWebClient build(WebClient webClient) {",
                "+    return build(webClient, CookieStore.build());",
                "+  }",
                "+",
                "+  /**",
                "+   * Create a session aware web client using the provided {@code webClient} instance.",
                "+   * ",
                "+   * @param webClient the web client instance",
                "+   * @return the created client",
                "+   */",
                "+  static SessionAwareWebClient build(WebClient webClient, CookieStore cookieStore) {",
                "+    return new SessionAwareWebClientImpl(webClient, cookieStore);",
                "+  }",
                "+",
                "+  /**",
                "+   * Configure the client to add an HTTP header o every request.",
                "+   *",
                "+   * @param name the header name",
                "+   * @param value the header value",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  SessionAwareWebClient setHeader(CharSequence name, CharSequence value);",
                "+",
                "+  /**",
                "+   * Configure the client to add an HTTP header o every request.",
                "+   *",
                "+   * @param name the header name",
                "+   * @param value the header value",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  SessionAwareWebClient setHeader(String name, String value);",
                "+",
                "+  /**",
                "+   * Configure the client to add an HTTP header o every request.",
                "+   *",
                "+   * @param name the header name",
                "+   * @param value the header value",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  SessionAwareWebClient setHeader(CharSequence name, Iterable<CharSequence> values);",
                "+",
                "+  /**",
                "+   * Configure the client to add an HTTP header o every request.",
                "+   *",
                "+   * @param name the header name",
                "+   * @param value the header value",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  SessionAwareWebClient setHeader(String name, Iterable<String> values);",
                "+",
                "+  /**",
                "+   * Removes a previously added header.",
                "+   * ",
                "+   * @param name the header name",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  SessionAwareWebClient removeHeader(CharSequence name);",
                "+",
                "+  /**",
                "+   * Removes a previously added header.",
                "+   * ",
                "+   * @param name the header name",
                "+   * @return a reference to this, so the API can be used fluently",
                "+   */",
                "+  @Fluent",
                "+  SessionAwareWebClient removeHeader(String name);",
                "+",
                "+  /**",
                "+   * Returns this client's {@code CookieStore}",
                "+   * <p>",
                "+   * All cookies added to this store will be send with every request.",
                "+   * The CookieStore honors the domain, path, secure and max-age properties of received cookies",
                "+   * and is automatically updated with cookies present in responses received by this client.  ",
                "+   * @return this client's cookie store",
                "+   */",
                "+  CookieStore getCookieStore();",
                "+}",
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/InternalCookieStore.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/InternalCookieStore.java",
                "new file mode 100644",
                "index 000000000..9ee5d8d01",
                "--- /dev/null",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/InternalCookieStore.java",
                "@@ -0,0 +1,23 @@",
                "+/*",
                "+ * Copyright (c) 2011-2018 Contributors to the Eclipse Foundation",
                "+ *",
                "+ * This program and the accompanying materials are made available under the",
                "+ * terms of the Eclipse Public License 2.0 which is available at",
                "+ * http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0",
                "+ * which is available at https://www.apache.org/licenses/LICENSE-2.0.",
                "+ *",
                "+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0",
                "+ */",
                "+package io.vertx.ext.web.client.impl;",
                "+",
                "+import io.netty.handler.codec.http.cookie.Cookie;",
                "+import io.vertx.ext.web.client.CookieStore;",
                "+",
                "+/**",
                "+ * @author <a href=\"mailto:tommaso.nolli@gmail.com\">Tommaso Nolli</a>",
                "+ */",
                "+public interface InternalCookieStore extends CookieStore {",
                "+",
                "+  CookieStore put(Cookie cookie);",
                "+  ",
                "+}",
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "new file mode 100644",
                "index 000000000..85404d1a2",
                "--- /dev/null",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "@@ -0,0 +1,213 @@",
                "+/*",
                "+ * Copyright (c) 2011-2018 Contributors to the Eclipse Foundation",
                "+ *",
                "+ * This program and the accompanying materials are made available under the",
                "+ * terms of the Eclipse Public License 2.0 which is available at",
                "+ * http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0",
                "+ * which is available at https://www.apache.org/licenses/LICENSE-2.0.",
                "+ *",
                "+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0",
                "+ */",
                "+package io.vertx.ext.web.client.impl;",
                "+",
                "+import java.util.List;",
                "+",
                "+import io.netty.handler.codec.http.cookie.ClientCookieDecoder;",
                "+import io.netty.handler.codec.http.cookie.ClientCookieEncoder;",
                "+import io.netty.handler.codec.http.cookie.Cookie;",
                "+import io.vertx.core.AsyncResult;",
                "+import io.vertx.core.Handler;",
                "+import io.vertx.core.MultiMap;",
                "+import io.vertx.core.buffer.Buffer;",
                "+import io.vertx.core.http.CaseInsensitiveHeaders;",
                "+import io.vertx.core.http.HttpMethod;",
                "+import io.vertx.core.json.JsonObject;",
                "+import io.vertx.core.streams.ReadStream;",
                "+import io.vertx.ext.web.client.CookieStore;",
                "+import io.vertx.ext.web.client.HttpRequest;",
                "+import io.vertx.ext.web.client.HttpResponse;",
                "+import io.vertx.ext.web.codec.BodyCodec;",
                "+import io.vertx.ext.web.multipart.MultipartForm;",
                "+",
                "+/**",
                "+ * @author <a href=\"mailto:tommaso.nolli@gmail.com\">Tommaso Nolli</a>",
                "+ */",
                "+public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "+  private HttpRequestImpl<Buffer> request;",
                "+  private CookieStore cookieStore;",
                "+",
                "+  public SessionAwareHttpRequestImpl(HttpRequestImpl<Buffer> request, CookieStore cookieStore) {",
                "+    this.request = request;",
                "+    this.cookieStore = cookieStore;",
                "+  }",
                "+",
                "+  protected void prepare(CaseInsensitiveHeaders headers) {",
                "+    if (headers != null) {",
                "+      request.headers().addAll(headers);",
                "+    }",
                "+",
                "+    String domain = request.virtualHost;",
                "+    if (domain == null) {",
                "+      domain = request.host;",
                "+    }",
                "+    ",
                "+    String uri = request.uri;",
                "+    int pos = uri.indexOf('?');",
                "+    if (pos > -1) {",
                "+      uri = uri.substring(0, pos);",
                "+    }",
                "+",
                "+    Iterable<Cookie> cookies = cookieStore.get(request.ssl, domain, uri);",
                "+    for (Cookie c : cookies) {",
                "+      request.headers().add(\"cookie\", ClientCookieEncoder.STRICT.encode(c));",
                "+    }",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> method(HttpMethod value) {",
                "+    return request.method(value);",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> port(int value) {",
                "+    request.port(value);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public <U> HttpRequest<U> as(BodyCodec<U> responseCodec) {",
                "+    return request.as(responseCodec);",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> host(String value) {",
                "+    request.host(value);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> virtualHost(String value) {",
                "+    request.virtualHost(value);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> uri(String value) {",
                "+    request.uri(value);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> putHeader(String name, String value) {",
                "+    request.putHeader(name, value);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public MultiMap headers() {",
                "+    return request.headers();",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> ssl(boolean value) {",
                "+    request.ssl(value);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> timeout(long value) {",
                "+    request.timeout(value);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> addQueryParam(String paramName, String paramValue) {",
                "+    request.addQueryParam(paramName, paramValue);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> setQueryParam(String paramName, String paramValue) {",
                "+    request.setQueryParam(paramName, paramValue);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> followRedirects(boolean value) {",
                "+    request.followRedirects(value);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public MultiMap queryParams() {",
                "+    return request.queryParams();",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> copy() {",
                "+    request.copy();",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public void sendStream(ReadStream<Buffer> body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    request.sendStream(body, cookieHandler(handler));",
                "+  }",
                "+",
                "+  @Override",
                "+  public void sendBuffer(Buffer body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    request.sendBuffer(body, cookieHandler(handler));",
                "+  }",
                "+",
                "+  @Override",
                "+  public void sendJsonObject(JsonObject body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    request.sendJsonObject(body, cookieHandler(handler));",
                "+  }",
                "+",
                "+  @Override",
                "+  public void sendJson(Object body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    request.sendJson(body, cookieHandler(handler));",
                "+  }",
                "+",
                "+  @Override",
                "+  public void sendForm(MultiMap body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    request.sendForm(body, cookieHandler(handler));",
                "+  }",
                "+",
                "+  @Override",
                "+  public void sendMultipartForm(MultipartForm body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    request.sendMultipartForm(body, cookieHandler(handler));",
                "+  }",
                "+",
                "+  @Override",
                "+  public void send(Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "+    request.send(cookieHandler(handler));",
                "+  }",
                "+",
                "+  private Handler<AsyncResult<HttpResponse<Buffer>>> cookieHandler(Handler<AsyncResult<HttpResponse<Buffer>>> wrapped) {",
                "+    return ar -> {",
                "+      if (ar.succeeded()) {",
                "+        List<String> cookieHeaders = ar.result().cookies();",
                "+        if (cookieHeaders == null) {",
                "+          wrapped.handle(ar);",
                "+          return;",
                "+        }",
                "+        cookieHeaders.forEach(header -> {",
                "+          Cookie cookie = ClientCookieDecoder.STRICT.decode(header);",
                "+          if (cookie.domain() == null) {",
                "+            // Set the domain if missing, because we need to send cookies",
                "+            // only to the domains we received them from.",
                "+            cookie.setDomain(request.virtualHost != null ? request.virtualHost : request.host);",
                "+          }",
                "+          if (cookieStore instanceof InternalCookieStore) {",
                "+            ((InternalCookieStore) cookieStore).put(cookie);",
                "+          } else {",
                "+            cookieStore.put(cookie.name(), cookie.value(), cookie.domain(), cookie.path(), cookie.maxAge(), cookie.isSecure());",
                "+          }",
                "+        });",
                "+      }",
                "+      wrapped.handle(ar);",
                "+    };",
                "+  }",
                "+",
                "+}",
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareWebClientImpl.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareWebClientImpl.java",
                "new file mode 100644",
                "index 000000000..0f32e6b75",
                "--- /dev/null",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareWebClientImpl.java",
                "@@ -0,0 +1,238 @@",
                "+/*",
                "+ * Copyright (c) 2011-2018 Contributors to the Eclipse Foundation",
                "+ *",
                "+ * This program and the accompanying materials are made available under the",
                "+ * terms of the Eclipse Public License 2.0 which is available at",
                "+ * http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0",
                "+ * which is available at https://www.apache.org/licenses/LICENSE-2.0.",
                "+ *",
                "+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0",
                "+ */",
                "+package io.vertx.ext.web.client.impl;",
                "+",
                "+import io.vertx.core.buffer.Buffer;",
                "+import io.vertx.core.http.CaseInsensitiveHeaders;",
                "+import io.vertx.core.http.HttpMethod;",
                "+import io.vertx.core.http.RequestOptions;",
                "+import io.vertx.ext.web.client.CookieStore;",
                "+import io.vertx.ext.web.client.HttpRequest;",
                "+import io.vertx.ext.web.client.SessionAwareWebClient;",
                "+import io.vertx.ext.web.client.WebClient;",
                "+",
                "+/**",
                "+ * @author <a href=\"mailto:tommaso.nolli@gmail.com\">Tommaso Nolli</a>",
                "+ */",
                "+public class SessionAwareWebClientImpl implements SessionAwareWebClient {",
                "+  private WebClient webclient;",
                "+  private CaseInsensitiveHeaders headers;",
                "+  private CookieStore cookieStore;",
                "+",
                "+  public SessionAwareWebClientImpl(WebClient webClient, CookieStore cookieStore) {",
                "+    this.webclient = webClient;",
                "+    this.cookieStore = cookieStore;",
                "+  }",
                "+",
                "+  private HttpRequest<Buffer> wrapRequest(HttpRequest<Buffer> req) {",
                "+    SessionAwareHttpRequestImpl request = new SessionAwareHttpRequestImpl((HttpRequestImpl<Buffer>) req, cookieStore);",
                "+    request.prepare(headers);",
                "+    return request;",
                "+  }",
                "+  ",
                "+  public CookieStore getCookieStore() {",
                "+    return cookieStore;",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> request(HttpMethod method, int port, String host, String requestURI) {",
                "+    return wrapRequest(webclient.request(method, port, host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> request(HttpMethod method, String host, String requestURI) {",
                "+    return wrapRequest(webclient.request(method, host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> request(HttpMethod method, String requestURI) {",
                "+    return wrapRequest(webclient.request(method, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> request(HttpMethod method, RequestOptions options) {",
                "+    return wrapRequest(webclient.request(method, options));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> requestAbs(HttpMethod method, String absoluteURI) {",
                "+    return wrapRequest(webclient.requestAbs(method, absoluteURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> get(String requestURI) {",
                "+    return wrapRequest(webclient.get(requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> get(int port, String host, String requestURI) {",
                "+    return wrapRequest(webclient.get(port, host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> get(String host, String requestURI) {",
                "+    return wrapRequest(webclient.get(host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> getAbs(String absoluteURI) {",
                "+    return wrapRequest(webclient.getAbs(absoluteURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> post(String requestURI) {",
                "+    return wrapRequest(webclient.post(requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> post(int port, String host, String requestURI) {",
                "+    return wrapRequest(webclient.post(port, host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> post(String host, String requestURI) {",
                "+    return wrapRequest(webclient.post(host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> postAbs(String absoluteURI) {",
                "+    return wrapRequest(webclient.postAbs(absoluteURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> put(String requestURI) {",
                "+    return wrapRequest(webclient.put(requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> put(int port, String host, String requestURI) {",
                "+    return wrapRequest(webclient.put(port, host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> put(String host, String requestURI) {",
                "+    return wrapRequest(webclient.put(host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> putAbs(String absoluteURI) {",
                "+    return wrapRequest(webclient.putAbs(absoluteURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> delete(String requestURI) {",
                "+    return wrapRequest(webclient.delete(requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> delete(int port, String host, String requestURI) {",
                "+    return wrapRequest(webclient.delete(port, host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> delete(String host, String requestURI) {",
                "+    return wrapRequest(webclient.delete(host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> deleteAbs(String absoluteURI) {",
                "+    return wrapRequest(webclient.deleteAbs(absoluteURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> patch(String requestURI) {",
                "+    return wrapRequest(webclient.patch(requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> patch(int port, String host, String requestURI) {",
                "+    return wrapRequest(webclient.patch(port, host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> patch(String host, String requestURI) {",
                "+    return wrapRequest(webclient.patch(host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> patchAbs(String absoluteURI) {",
                "+    return wrapRequest(webclient.patchAbs(absoluteURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> head(String requestURI) {",
                "+    return wrapRequest(webclient.head(requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> head(int port, String host, String requestURI) {",
                "+    return wrapRequest(webclient.head(port, host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> head(String host, String requestURI) {",
                "+    return wrapRequest(webclient.head(host, requestURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public HttpRequest<Buffer> headAbs(String absoluteURI) {",
                "+    return wrapRequest(webclient.headAbs(absoluteURI));",
                "+  }",
                "+",
                "+  @Override",
                "+  public void close() {",
                "+    webclient.close();",
                "+  }",
                "+",
                "+  private CaseInsensitiveHeaders headers() {",
                "+    if (headers == null) {",
                "+      headers = new CaseInsensitiveHeaders();",
                "+    }",
                "+    return headers;",
                "+  }",
                "+",
                "+  @Override",
                "+  public SessionAwareWebClient setHeader(CharSequence name, CharSequence value) {",
                "+    headers().add(name, value);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public SessionAwareWebClient setHeader(String name, String value) {",
                "+    headers().add(name, value);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public SessionAwareWebClient setHeader(CharSequence name, Iterable<CharSequence> values) {",
                "+    headers().add(name, values);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public SessionAwareWebClient setHeader(String name, Iterable<String> values) {",
                "+    headers().add(name, values);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public SessionAwareWebClient removeHeader(CharSequence name) {",
                "+    headers().remove(name);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public SessionAwareWebClient removeHeader(String name) {",
                "+    headers().remove(name);",
                "+    return this;",
                "+  }",
                "+",
                "+}",
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/TreeCookieStore.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/TreeCookieStore.java",
                "new file mode 100644",
                "index 000000000..b87cfe844",
                "--- /dev/null",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/TreeCookieStore.java",
                "@@ -0,0 +1,303 @@",
                "+package io.vertx.ext.web.client.impl;",
                "+",
                "+import java.util.Arrays;",
                "+import java.util.Collection;",
                "+import java.util.Objects;",
                "+import java.util.TreeMap;",
                "+import java.util.TreeSet;",
                "+import java.util.function.Consumer;",
                "+",
                "+import io.netty.handler.codec.http.cookie.Cookie;",
                "+import io.netty.handler.codec.http.cookie.DefaultCookie;",
                "+import io.vertx.ext.web.client.CookieStore;",
                "+",
                "+public class TreeCookieStore implements InternalCookieStore{",
                "+",
                "+  private Node root;",
                "+  ",
                "+  public TreeCookieStore() {",
                "+    root = new Node(null, 0, \"\");",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore put(String name, String value) {",
                "+    return put(name, value, null, null, null, false);",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore put(String name, String value, String path) {",
                "+    return put(name, value, null, path, null, false);",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore put(String name, String value, String domain, String path) {",
                "+    return put(name, value, domain, path, null, false);",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore put(String name, String value, String domain, String path, Long maxAge, boolean isSecure) {",
                "+    DefaultCookie cookie = new DefaultCookie(name, value);",
                "+    cookie.setSecure(isSecure);",
                "+    if (domain != null)",
                "+      cookie.setDomain(domain);",
                "+    if (path != null)",
                "+      cookie.setPath(path);",
                "+    if (maxAge != null)",
                "+      cookie.setMaxAge(maxAge);",
                "+    return put(cookie);",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore put(Cookie cookie) {",
                "+    Key key = new Key(cookie.domain(), cookie.path(), cookie.name());",
                "+    Node node = root.findPrefixNode(key.domain);",
                "+    if (node.depth == key.domain.length - 1) {",
                "+      // Exact match",
                "+      node.addCookie(cookie);",
                "+      return this;",
                "+    }",
                "+    ",
                "+    // Create missing nodes",
                "+    for (int i = node.depth + 1; i < key.domain.length; i++) {",
                "+      node = node.createChild(key.domain[i]);",
                "+    }",
                "+    node.addCookie(cookie);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore remove(String name) {",
                "+    remove(name, null, null);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore remove(String name, String path) {",
                "+    remove(name, null, path);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore remove(String name, String domain, String path) {",
                "+    Key key = new Key(domain, path, name);",
                "+    Node node = root.findPrefixNode(key.domain);",
                "+    if (node.depth != key.domain.length - 1) {",
                "+      // Domain not found",
                "+      return this;",
                "+    }",
                "+    node.remove(path, name);",
                "+    return this;",
                "+  }",
                "+  ",
                "+  @Override",
                "+  public Iterable<Cookie> get(boolean ssl, String domain, String path) {",
                "+    /* TODO: Shall we cleanup path (remove dots)? Or HttpRequestImpl.uri is always normalized?",
                "+     *       Ideally this should call io.vertx.ext.web.impl.Utils.removeDots",
                "+     *       but vertx-web-client does not have a dependency on vertx-web so, probably, the Utils class (or parts of it)",
                "+     *       should be moved to vertx-web-commons.",
                "+     */",
                "+",
                "+    Key key = new Key(domain, null, null);",
                "+    TreeMap<String, Cookie> matches = new TreeMap<>();",
                "+    root.visit(key.domain, n -> {",
                "+      for (Cookie c : n.getCookies()) {",
                "+        if (!ssl && c.isSecure()) {",
                "+          continue;",
                "+        }",
                "+        if (c.path() != null && !path.equals(c.path())) {",
                "+          String cookiePath = c.path();",
                "+          if (!cookiePath.endsWith(\"/\")) {",
                "+            cookiePath += '/';",
                "+          }",
                "+          if (!path.startsWith(cookiePath)) {",
                "+            continue;",
                "+          }",
                "+        }",
                "+        matches.put(c.name(), c);",
                "+      }",
                "+    });",
                "+    return matches.values();",
                "+  }",
                "+",
                "+  private static class Node implements Comparable<Node> {",
                "+",
                "+    private static final String NO_PATH = \" \";",
                "+",
                "+    @SuppressWarnings(\"unused\")",
                "+    private Node parent;",
                "+    private int depth;",
                "+    private String name;",
                "+    private TreeSet<Node> children;",
                "+    private TreeMap<String, Cookie> cookies;",
                "+",
                "+    public Node(Node parent, int depth, String name) {",
                "+      Objects.requireNonNull(name);",
                "+      this.parent = parent;",
                "+      this.depth = depth;",
                "+      this.name = name;",
                "+      this.children = new TreeSet<>();",
                "+      this.cookies = new TreeMap<>();",
                "+    }",
                "+",
                "+    public Node createChild(String name) {",
                "+      Node c = new Node(this, depth + 1, name);",
                "+      children.add(c);",
                "+      return c;",
                "+    }",
                "+",
                "+    private String buildCookieKey(String path, String name) {",
                "+      StringBuilder builder = new StringBuilder();",
                "+      builder.append(path == null || path.length() == 0 ? NO_PATH : path).append(':').append(name);",
                "+      return builder.toString();",
                "+    }",
                "+",
                "+    public void addCookie(Cookie cookie) {",
                "+      String k = buildCookieKey(cookie.path(), cookie.name());",
                "+      cookies.put(k, cookie);",
                "+    }",
                "+",
                "+    public boolean remove(String path, String name) {",
                "+      String k = buildCookieKey(path, name);",
                "+      return cookies.remove(k) != null;",
                "+    }",
                "+",
                "+    private Node findPrefixNode(String[] domain) {",
                "+      String segment = domain[depth];",
                "+      assert segment.equals(this.name) : \"Expected [\" + this.name + \"] got [\" + segment + \"]\";",
                "+      ",
                "+      if (depth == domain.length -1) {",
                "+        return this;",
                "+      }",
                "+      ",
                "+      segment = domain[depth + 1];",
                "+      for (Node node : children) {",
                "+        if (node.name.equals(segment)) {",
                "+          return node.findPrefixNode(domain);",
                "+        } else if (node.name.compareTo(segment) > 0) {",
                "+          break;",
                "+        }",
                "+      }",
                "+      ",
                "+      return this;",
                "+    }",
                "+",
                "+    public void visit(String[] domain, Consumer<Node> visitor) {",
                "+      String segment = domain[depth];",
                "+      assert segment.equals(this.name) : \"Expected [\" + this.name + \"] got [\" + segment + \"]\";",
                "+      ",
                "+      visitor.accept(this);",
                "+      if (depth == domain.length - 1) {",
                "+        return;",
                "+      }",
                "+      ",
                "+      segment = domain[depth + 1];",
                "+      for (Node node : children) {",
                "+        if (node.name.equals(segment)) {",
                "+          node.visit(domain, visitor);",
                "+          return;",
                "+        } else if (node.name.compareTo(segment) > 0) {",
                "+          return;",
                "+        }",
                "+      }",
                "+    }",
                "+    ",
                "+    public Collection<Cookie> getCookies() {",
                "+      return cookies.values();",
                "+    }",
                "+",
                "+    @Override",
                "+    public int compareTo(Node o) {",
                "+      return name.compareTo(o.name);",
                "+    }",
                "+  }",
                "+",
                "+  private static class Key implements Comparable<Key> {",
                "+    private static final String[] NO_DOMAIN = new String[] { \"\" };",
                "+    ",
                "+    private final String[] domain;",
                "+    private final String path;",
                "+    private final String name;",
                "+",
                "+    public Key(String domain, String path, String name) {",
                "+      if (domain == null || domain.length() == 0) {",
                "+        this.domain = NO_DOMAIN;",
                "+      } else {",
                "+        while (domain.charAt(0) == '.') {",
                "+          domain = domain.substring(1);",
                "+        }",
                "+        while (domain.charAt(domain.length() - 1) == '.') {",
                "+          domain = domain.substring(0, domain.length() - 1);",
                "+        }",
                "+        if (domain.length() == 0) {",
                "+          this.domain = NO_DOMAIN;",
                "+        } else {",
                "+          String[] tokens = domain.split(\"\\\\.\");",
                "+          String tmp;",
                "+          for (int i = 0, j = tokens.length - 1; i < tokens.length / 2; ++i, --j) {",
                "+            tmp = tokens[j];",
                "+            tokens[j] = tokens[i];",
                "+            tokens[i] = tmp;",
                "+          }",
                "+          this.domain = new String[tokens.length + 1];",
                "+          this.domain[0] = \"\";",
                "+          System.arraycopy(tokens, 0, this.domain, 1, tokens.length);",
                "+        }",
                "+      }      ",
                "+      this.path = path == null ? \"\" : path;",
                "+      this.name = name;",
                "+    }",
                "+",
                "+    @Override",
                "+    public int hashCode() {",
                "+      final int prime = 31;",
                "+      int result = 1;",
                "+      result = prime * result + Arrays.hashCode(domain);",
                "+      result = prime * result + ((name == null) ? 0 : name.hashCode());",
                "+      result = prime * result + ((path == null) ? 0 : path.hashCode());",
                "+      return result;",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean equals(Object obj) {",
                "+      if (this == obj)",
                "+        return true;",
                "+      if (obj == null)",
                "+        return false;",
                "+      if (getClass() != obj.getClass())",
                "+        return false;",
                "+      Key other = (Key) obj;",
                "+      if (!Arrays.equals(domain, other.domain))",
                "+        return false;",
                "+      if (name == null) {",
                "+        if (other.name != null)",
                "+          return false;",
                "+      } else if (!name.equals(other.name))",
                "+        return false;",
                "+      if (path == null) {",
                "+        if (other.path != null)",
                "+          return false;",
                "+      } else if (!path.equals(other.path))",
                "+        return false;",
                "+      return true;",
                "+    }",
                "+",
                "+    @Override",
                "+    public int compareTo(Key o) {",
                "+      int ret = 0;",
                "+      for (int i = 0; i < Math.min(domain.length, o.domain.length); ++i) {",
                "+        ret = domain[i].compareTo(o.domain[i]);",
                "+        if (ret != 0) {",
                "+          break;",
                "+        }",
                "+      }",
                "+      if (ret == 0)",
                "+        ret = domain.length - o.domain.length;",
                "+      if (ret == 0)",
                "+        ret = path.compareTo(o.path);",
                "+      if (ret == 0)",
                "+        ret = name.compareTo(o.name);",
                "+      return ret;",
                "+    }",
                "+  }",
                "+  ",
                "+}"
            ],
            "changed_files": [
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/CookieStore.java",
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/SessionAwareWebClient.java",
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/InternalCookieStore.java",
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareWebClientImpl.java",
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/TreeCookieStore.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x, Vert",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-client/src/main/java/io/vertx/ext/web/client/CookieStore.java, vertx-web-client/src/main/java/io/vertx/ext/web/client/SessionAwareWebClient.java, vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java, vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/InternalCookieStore.java, vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/TreeCookieStore.java, vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareWebClientImpl.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "75a8b27ec6c07c479c5679115e75b1454c0f1eb8",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538482951,
            "hunks": 6,
            "message": "Made CookieStore implementation thread safe and added tests Signed-off-by: tnolli <tommaso.nolli@gmail.com>",
            "diff": [
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/CookieStore.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/CookieStore.java",
                "index 8a1df2b1b..1563318e8 100644",
                "--- a/vertx-web-client/src/main/java/io/vertx/ext/web/client/CookieStore.java",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/CookieStore.java",
                "@@ -14,3 +14,3 @@ import io.netty.handler.codec.http.cookie.Cookie;",
                " import io.vertx.codegen.annotations.Fluent;",
                "-import io.vertx.ext.web.client.impl.TreeCookieStore;",
                "+import io.vertx.ext.web.client.impl.CookieStoreImpl;",
                "@@ -28,3 +28,3 @@ public interface CookieStore {",
                "   static CookieStore build() {",
                "-    return new TreeCookieStore();",
                "+    return new CookieStoreImpl();",
                "   }",
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/CookieStoreImpl.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/CookieStoreImpl.java",
                "new file mode 100644",
                "index 000000000..f24b9e5c1",
                "--- /dev/null",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/CookieStoreImpl.java",
                "@@ -0,0 +1,223 @@",
                "+/*",
                "+ * Copyright (c) 2011-2018 Contributors to the Eclipse Foundation",
                "+ *",
                "+ * This program and the accompanying materials are made available under the",
                "+ * terms of the Eclipse Public License 2.0 which is available at",
                "+ * http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0",
                "+ * which is available at https://www.apache.org/licenses/LICENSE-2.0.",
                "+ *",
                "+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0",
                "+ */",
                "+package io.vertx.ext.web.client.impl;",
                "+",
                "+import java.util.Map.Entry;",
                "+import java.util.TreeMap;",
                "+import java.util.concurrent.ConcurrentHashMap;",
                "+import java.util.concurrent.ConcurrentSkipListMap;",
                "+import java.util.function.Consumer;",
                "+",
                "+import io.netty.handler.codec.http.cookie.Cookie;",
                "+import io.netty.handler.codec.http.cookie.DefaultCookie;",
                "+import io.vertx.ext.web.client.CookieStore;",
                "+",
                "+/**",
                "+ * @author <a href=\"mailto:tommaso.nolli@gmail.com\">Tommaso Nolli</a>",
                "+ */",
                "+public class CookieStoreImpl implements InternalCookieStore {",
                "+",
                "+  private ConcurrentHashMap<Key, Cookie> noDomainCookies;",
                "+  private ConcurrentSkipListMap<Key, Cookie> domainCookies;",
                "+  ",
                "+  public CookieStoreImpl() {",
                "+    noDomainCookies = new ConcurrentHashMap<>();",
                "+    domainCookies = new ConcurrentSkipListMap<>();",
                "+  }",
                "+  ",
                "+  @Override",
                "+  public Iterable<Cookie> get(boolean ssl, String domain, String path) {",
                "+    /* TODO: Shall we cleanup path (remove dots)? Or HttpRequestImpl.uri is always normalized?",
                "+     *       Ideally this should call io.vertx.ext.web.impl.Utils.removeDots",
                "+     *       but vertx-web-client does not have a dependency on vertx-web so, probably, the Utils class (or parts of it)",
                "+     *       should be moved to vertx-web-commons.",
                "+     */",
                "+",
                "+    assert domain != null && domain.length() > 0;",
                "+    ",
                "+    TreeMap<String, Cookie> matches = new TreeMap<>();",
                "+    ",
                "+    Consumer<Cookie> adder = c -> {",
                "+      if (!ssl && c.isSecure()) {",
                "+        return;",
                "+      }",
                "+      if (c.path() != null && !path.equals(c.path())) {",
                "+        String cookiePath = c.path();",
                "+        if (!cookiePath.endsWith(\"/\")) {",
                "+          cookiePath += '/';",
                "+        }",
                "+        if (!path.startsWith(cookiePath)) {",
                "+          return;",
                "+        }",
                "+      }",
                "+      matches.put(c.name(), c);      ",
                "+    };",
                "+    ",
                "+    for (Cookie c : noDomainCookies.values()) {",
                "+      adder.accept(c);",
                "+    }",
                "+    ",
                "+    Key key = new Key(domain, \"\", \"\");",
                "+    String prefix = key.domain.substring(0, 1);",
                "+    for (Entry<Key, Cookie> entry : domainCookies.tailMap(new Key(prefix, \"\", \"\"), true).entrySet()) {",
                "+      if (entry.getKey().domain.compareTo(key.domain) > 0) {",
                "+        break;",
                "+      }",
                "+      if (!key.domain.startsWith(entry.getKey().domain)) {",
                "+        continue;",
                "+      }",
                "+      adder.accept(entry.getValue());",
                "+    }",
                "+        ",
                "+    return matches.values();",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore put(String name, String value) {",
                "+    return put(name, value, null, null, null, false);",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore put(String name, String value, String path) {",
                "+    return put(name, value, null, path, null, false);",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore put(String name, String value, String domain, String path) {",
                "+    return put(name, value, domain, path, null, false);",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore put(String name, String value, String domain, String path, Long maxAge, boolean isSecure) {",
                "+    DefaultCookie cookie = new DefaultCookie(name, value);",
                "+    cookie.setSecure(isSecure);",
                "+    if (domain != null)",
                "+      cookie.setDomain(domain);",
                "+    if (path != null)",
                "+      cookie.setPath(path);",
                "+    if (maxAge != null)",
                "+      cookie.setMaxAge(maxAge);",
                "+    return put(cookie);",
                "+  }",
                "+  @Override",
                "+  public CookieStore put(Cookie cookie) {",
                "+    Key key = new Key(cookie.domain(), cookie.path(), cookie.name());",
                "+    if (key.domain.equals(Key.NO_DOMAIN)) {",
                "+      noDomainCookies.put(key, cookie);",
                "+      return this;",
                "+    }",
                "+    domainCookies.put(key, cookie);",
                "+    return this;",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore remove(String name) {",
                "+    return remove(name, null, null);",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore remove(String name, String path) {",
                "+    return remove(name, null, path);",
                "+  }",
                "+",
                "+  @Override",
                "+  public CookieStore remove(String name, String domain, String path) {",
                "+    Key key = new Key(domain, path, name);",
                "+    if (key.domain.equals(Key.NO_DOMAIN)) {",
                "+      noDomainCookies.remove(key);",
                "+    } else {",
                "+      domainCookies.remove(key);",
                "+    }",
                "+    return null;",
                "+  }",
                "+",
                "+  private static class Key implements Comparable<Key> {",
                "+    private static final String NO_DOMAIN = \"\";",
                "+    ",
                "+    private final String domain;",
                "+    private final String path;",
                "+    private final String name;",
                "+",
                "+    public Key(String domain, String path, String name) {",
                "+      if (domain == null || domain.length() == 0) {",
                "+        this.domain = NO_DOMAIN;",
                "+      } else {",
                "+        while (domain.charAt(0) == '.') {",
                "+          domain = domain.substring(1);",
                "+        }",
                "+        while (domain.charAt(domain.length() - 1) == '.') {",
                "+          domain = domain.substring(0, domain.length() - 1);",
                "+        }",
                "+        if (domain.length() == 0) {",
                "+          this.domain = NO_DOMAIN;",
                "+        } else {",
                "+          String[] tokens = domain.split(\"\\\\.\");",
                "+          String tmp;",
                "+          for (int i = 0, j = tokens.length - 1; i < tokens.length / 2; ++i, --j) {",
                "+            tmp = tokens[j];",
                "+            tokens[j] = tokens[i];",
                "+            tokens[i] = tmp;",
                "+          }",
                "+          this.domain = String.join(\".\", tokens);",
                "+        }",
                "+      }      ",
                "+      this.path = path == null ? \"\" : path;",
                "+      this.name = name;",
                "+    }",
                "+",
                "+    @Override",
                "+    public int compareTo(Key o) {",
                "+      int ret = domain.compareTo(o.domain);",
                "+      if (ret == 0)",
                "+        ret = path.compareTo(o.path);",
                "+      if (ret == 0)",
                "+        ret = name.compareTo(o.name);",
                "+      return ret;",
                "+    }",
                "+",
                "+    @Override",
                "+    public int hashCode() {",
                "+      final int prime = 31;",
                "+      int result = 1;",
                "+      result = prime * result + ((domain == null) ? 0 : domain.hashCode());",
                "+      result = prime * result + ((name == null) ? 0 : name.hashCode());",
                "+      result = prime * result + ((path == null) ? 0 : path.hashCode());",
                "+      return result;",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean equals(Object obj) {",
                "+      if (this == obj)",
                "+        return true;",
                "+      if (obj == null)",
                "+        return false;",
                "+      if (getClass() != obj.getClass())",
                "+        return false;",
                "+      Key other = (Key) obj;",
                "+      if (domain == null) {",
                "+        if (other.domain != null)",
                "+          return false;",
                "+      } else if (!domain.equals(other.domain))",
                "+        return false;",
                "+      if (name == null) {",
                "+        if (other.name != null)",
                "+          return false;",
                "+      } else if (!name.equals(other.name))",
                "+        return false;",
                "+      if (path == null) {",
                "+        if (other.path != null)",
                "+          return false;",
                "+      } else if (!path.equals(other.path))",
                "+        return false;",
                "+      return true;",
                "+    }",
                "+  }  ",
                "+}",
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "index b00265dde..a189ea98e 100644",
                "--- a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "@@ -48,4 +48,4 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   protected void prepare() {",
                "-    // we need to reset the headers at every \"send\" because a previous call",
                "-    // could have change the cookies (the server sent new ones or updated some values)",
                "+    // we need to reset the headers at every \"send\" because cookies can be changed,",
                "+    // either by the server (that sent new ones) or by the user.",
                "     if (request.headers != null) {",
                "@@ -215,11 +215,13 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "           Cookie cookie = ClientCookieDecoder.STRICT.decode(header);",
                "-          if (cookie.domain() == null) {",
                "-            // Set the domain if missing, because we need to send cookies",
                "-            // only to the domains we received them from.",
                "-            cookie.setDomain(request.virtualHost != null ? request.virtualHost : request.host);",
                "-          }",
                "-          if (cookieStore instanceof InternalCookieStore) {",
                "-            ((InternalCookieStore) cookieStore).put(cookie);",
                "-          } else {",
                "-            cookieStore.put(cookie.name(), cookie.value(), cookie.domain(), cookie.path(), cookie.maxAge(), cookie.isSecure());",
                "+          if (cookie != null) {",
                "+            if (cookie.domain() == null) {",
                "+              // Set the domain if missing, because we need to send cookies",
                "+              // only to the domains we received them from.",
                "+              cookie.setDomain(request.virtualHost != null ? request.virtualHost : request.host);",
                "+            }",
                "+            if (cookieStore instanceof InternalCookieStore) {",
                "+              ((InternalCookieStore) cookieStore).put(cookie);",
                "+            } else {",
                "+              cookieStore.put(cookie.name(), cookie.value(), cookie.domain(), cookie.path(), cookie.maxAge(), cookie.isSecure());",
                "+            }",
                "           }",
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/TreeCookieStore.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/TreeCookieStore.java",
                "deleted file mode 100644",
                "index b87cfe844..000000000",
                "--- a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/TreeCookieStore.java",
                "+++ /dev/null",
                "@@ -1,303 +0,0 @@",
                "-package io.vertx.ext.web.client.impl;",
                "-",
                "-import java.util.Arrays;",
                "-import java.util.Collection;",
                "-import java.util.Objects;",
                "-import java.util.TreeMap;",
                "-import java.util.TreeSet;",
                "-import java.util.function.Consumer;",
                "-",
                "-import io.netty.handler.codec.http.cookie.Cookie;",
                "-import io.netty.handler.codec.http.cookie.DefaultCookie;",
                "-import io.vertx.ext.web.client.CookieStore;",
                "-",
                "-public class TreeCookieStore implements InternalCookieStore{",
                "-",
                "-  private Node root;",
                "-  ",
                "-  public TreeCookieStore() {",
                "-    root = new Node(null, 0, \"\");",
                "-  }",
                "-",
                "-  @Override",
                "-  public CookieStore put(String name, String value) {",
                "-    return put(name, value, null, null, null, false);",
                "-  }",
                "-",
                "-  @Override",
                "-  public CookieStore put(String name, String value, String path) {",
                "-    return put(name, value, null, path, null, false);",
                "-  }",
                "-",
                "-  @Override",
                "-  public CookieStore put(String name, String value, String domain, String path) {",
                "-    return put(name, value, domain, path, null, false);",
                "-  }",
                "-",
                "-  @Override",
                "-  public CookieStore put(String name, String value, String domain, String path, Long maxAge, boolean isSecure) {",
                "-    DefaultCookie cookie = new DefaultCookie(name, value);",
                "-    cookie.setSecure(isSecure);",
                "-    if (domain != null)",
                "-      cookie.setDomain(domain);",
                "-    if (path != null)",
                "-      cookie.setPath(path);",
                "-    if (maxAge != null)",
                "-      cookie.setMaxAge(maxAge);",
                "-    return put(cookie);",
                "-  }",
                "-",
                "-  @Override",
                "-  public CookieStore put(Cookie cookie) {",
                "-    Key key = new Key(cookie.domain(), cookie.path(), cookie.name());",
                "-    Node node = root.findPrefixNode(key.domain);",
                "-    if (node.depth == key.domain.length - 1) {",
                "-      // Exact match",
                "-      node.addCookie(cookie);",
                "-      return this;",
                "-    }",
                "-    ",
                "-    // Create missing nodes",
                "-    for (int i = node.depth + 1; i < key.domain.length; i++) {",
                "-      node = node.createChild(key.domain[i]);",
                "-    }",
                "-    node.addCookie(cookie);",
                "-    return this;",
                "-  }",
                "-",
                "-  @Override",
                "-  public CookieStore remove(String name) {",
                "-    remove(name, null, null);",
                "-    return this;",
                "-  }",
                "-",
                "-  @Override",
                "-  public CookieStore remove(String name, String path) {",
                "-    remove(name, null, path);",
                "-    return this;",
                "-  }",
                "-",
                "-  @Override",
                "-  public CookieStore remove(String name, String domain, String path) {",
                "-    Key key = new Key(domain, path, name);",
                "-    Node node = root.findPrefixNode(key.domain);",
                "-    if (node.depth != key.domain.length - 1) {",
                "-      // Domain not found",
                "-      return this;",
                "-    }",
                "-    node.remove(path, name);",
                "-    return this;",
                "-  }",
                "-  ",
                "-  @Override",
                "-  public Iterable<Cookie> get(boolean ssl, String domain, String path) {",
                "-    /* TODO: Shall we cleanup path (remove dots)? Or HttpRequestImpl.uri is always normalized?",
                "-     *       Ideally this should call io.vertx.ext.web.impl.Utils.removeDots",
                "-     *       but vertx-web-client does not have a dependency on vertx-web so, probably, the Utils class (or parts of it)",
                "-     *       should be moved to vertx-web-commons.",
                "-     */",
                "-",
                "-    Key key = new Key(domain, null, null);",
                "-    TreeMap<String, Cookie> matches = new TreeMap<>();",
                "-    root.visit(key.domain, n -> {",
                "-      for (Cookie c : n.getCookies()) {",
                "-        if (!ssl && c.isSecure()) {",
                "-          continue;",
                "-        }",
                "-        if (c.path() != null && !path.equals(c.path())) {",
                "-          String cookiePath = c.path();",
                "-          if (!cookiePath.endsWith(\"/\")) {",
                "-            cookiePath += '/';",
                "-          }",
                "-          if (!path.startsWith(cookiePath)) {",
                "-            continue;",
                "-          }",
                "-        }",
                "-        matches.put(c.name(), c);",
                "-      }",
                "-    });",
                "-    return matches.values();",
                "-  }",
                "-",
                "-  private static class Node implements Comparable<Node> {",
                "-",
                "-    private static final String NO_PATH = \" \";",
                "-",
                "-    @SuppressWarnings(\"unused\")",
                "-    private Node parent;",
                "-    private int depth;",
                "-    private String name;",
                "-    private TreeSet<Node> children;",
                "-    private TreeMap<String, Cookie> cookies;",
                "-",
                "-    public Node(Node parent, int depth, String name) {",
                "-      Objects.requireNonNull(name);",
                "-      this.parent = parent;",
                "-      this.depth = depth;",
                "-      this.name = name;",
                "-      this.children = new TreeSet<>();",
                "-      this.cookies = new TreeMap<>();",
                "-    }",
                "-",
                "-    public Node createChild(String name) {",
                "-      Node c = new Node(this, depth + 1, name);",
                "-      children.add(c);",
                "-      return c;",
                "-    }",
                "-",
                "-    private String buildCookieKey(String path, String name) {",
                "-      StringBuilder builder = new StringBuilder();",
                "-      builder.append(path == null || path.length() == 0 ? NO_PATH : path).append(':').append(name);",
                "-      return builder.toString();",
                "-    }",
                "-",
                "-    public void addCookie(Cookie cookie) {",
                "-      String k = buildCookieKey(cookie.path(), cookie.name());",
                "-      cookies.put(k, cookie);",
                "-    }",
                "-",
                "-    public boolean remove(String path, String name) {",
                "-      String k = buildCookieKey(path, name);",
                "-      return cookies.remove(k) != null;",
                "-    }",
                "-",
                "-    private Node findPrefixNode(String[] domain) {",
                "-      String segment = domain[depth];",
                "-      assert segment.equals(this.name) : \"Expected [\" + this.name + \"] got [\" + segment + \"]\";",
                "-      ",
                "-      if (depth == domain.length -1) {",
                "-        return this;",
                "-      }",
                "-      ",
                "-      segment = domain[depth + 1];",
                "-      for (Node node : children) {",
                "-        if (node.name.equals(segment)) {",
                "-          return node.findPrefixNode(domain);",
                "-        } else if (node.name.compareTo(segment) > 0) {",
                "-          break;",
                "-        }",
                "-      }",
                "-      ",
                "-      return this;",
                "-    }",
                "-",
                "-    public void visit(String[] domain, Consumer<Node> visitor) {",
                "-      String segment = domain[depth];",
                "-      assert segment.equals(this.name) : \"Expected [\" + this.name + \"] got [\" + segment + \"]\";",
                "-      ",
                "-      visitor.accept(this);",
                "-      if (depth == domain.length - 1) {",
                "-        return;",
                "-      }",
                "-      ",
                "-      segment = domain[depth + 1];",
                "-      for (Node node : children) {",
                "-        if (node.name.equals(segment)) {",
                "-          node.visit(domain, visitor);",
                "-          return;",
                "-        } else if (node.name.compareTo(segment) > 0) {",
                "-          return;",
                "-        }",
                "-      }",
                "-    }",
                "-    ",
                "-    public Collection<Cookie> getCookies() {",
                "-      return cookies.values();",
                "-    }",
                "-",
                "-    @Override",
                "-    public int compareTo(Node o) {",
                "-      return name.compareTo(o.name);",
                "-    }",
                "-  }",
                "-",
                "-  private static class Key implements Comparable<Key> {",
                "-    private static final String[] NO_DOMAIN = new String[] { \"\" };",
                "-    ",
                "-    private final String[] domain;",
                "-    private final String path;",
                "-    private final String name;",
                "-",
                "-    public Key(String domain, String path, String name) {",
                "-      if (domain == null || domain.length() == 0) {",
                "-        this.domain = NO_DOMAIN;",
                "-      } else {",
                "-        while (domain.charAt(0) == '.') {",
                "-          domain = domain.substring(1);",
                "-        }",
                "-        while (domain.charAt(domain.length() - 1) == '.') {",
                "-          domain = domain.substring(0, domain.length() - 1);",
                "-        }",
                "-        if (domain.length() == 0) {",
                "-          this.domain = NO_DOMAIN;",
                "-        } else {",
                "-          String[] tokens = domain.split(\"\\\\.\");",
                "-          String tmp;",
                "-          for (int i = 0, j = tokens.length - 1; i < tokens.length / 2; ++i, --j) {",
                "-            tmp = tokens[j];",
                "-            tokens[j] = tokens[i];",
                "-            tokens[i] = tmp;",
                "-          }",
                "-          this.domain = new String[tokens.length + 1];",
                "-          this.domain[0] = \"\";",
                "-          System.arraycopy(tokens, 0, this.domain, 1, tokens.length);",
                "-        }",
                "-      }      ",
                "-      this.path = path == null ? \"\" : path;",
                "-      this.name = name;",
                "-    }",
                "-",
                "-    @Override",
                "-    public int hashCode() {",
                "-      final int prime = 31;",
                "-      int result = 1;",
                "-      result = prime * result + Arrays.hashCode(domain);",
                "-      result = prime * result + ((name == null) ? 0 : name.hashCode());",
                "-      result = prime * result + ((path == null) ? 0 : path.hashCode());",
                "-      return result;",
                "-    }",
                "-",
                "-    @Override",
                "-    public boolean equals(Object obj) {",
                "-      if (this == obj)",
                "-        return true;",
                "-      if (obj == null)",
                "-        return false;",
                "-      if (getClass() != obj.getClass())",
                "-        return false;",
                "-      Key other = (Key) obj;",
                "-      if (!Arrays.equals(domain, other.domain))",
                "-        return false;",
                "-      if (name == null) {",
                "-        if (other.name != null)",
                "-          return false;",
                "-      } else if (!name.equals(other.name))",
                "-        return false;",
                "-      if (path == null) {",
                "-        if (other.path != null)",
                "-          return false;",
                "-      } else if (!path.equals(other.path))",
                "-        return false;",
                "-      return true;",
                "-    }",
                "-",
                "-    @Override",
                "-    public int compareTo(Key o) {",
                "-      int ret = 0;",
                "-      for (int i = 0; i < Math.min(domain.length, o.domain.length); ++i) {",
                "-        ret = domain[i].compareTo(o.domain[i]);",
                "-        if (ret != 0) {",
                "-          break;",
                "-        }",
                "-      }",
                "-      if (ret == 0)",
                "-        ret = domain.length - o.domain.length;",
                "-      if (ret == 0)",
                "-        ret = path.compareTo(o.path);",
                "-      if (ret == 0)",
                "-        ret = name.compareTo(o.name);",
                "-      return ret;",
                "-    }",
                "-  }",
                "-  ",
                "-}"
            ],
            "changed_files": [
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/CookieStore.java",
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/CookieStoreImpl.java",
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/TreeCookieStore.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/TreeCookieStore.java, vertx-web-client/src/main/java/io/vertx/ext/web/client/CookieStore.java, vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/CookieStoreImpl.java, vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "7f9acbb0544fc890e3618c93f2dd6a83eb19942a",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538040567,
            "hunks": 15,
            "message": "Releasing 3.5.4",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index a376f6ade..ef914685a 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -13,6 +13,6 @@",
                "   <artifactId>vertx-web-parent</artifactId>",
                "-  <version>3.5.4-SNAPSHOT</version>",
                "+  <version>3.5.4</version>",
                "   <properties>",
                "-    <stack.version>3.5.4-SNAPSHOT</stack.version>",
                "+    <stack.version>3.5.4</stack.version>",
                "     <pac4j.version>1.6.0</pac4j.version>",
                "diff --git a/vertx-sockjs-service-proxy/pom.xml b/vertx-sockjs-service-proxy/pom.xml",
                "index 7fada30f4..7f8f41d62 100644",
                "--- a/vertx-sockjs-service-proxy/pom.xml",
                "+++ b/vertx-sockjs-service-proxy/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/pom.xml b/vertx-template-engines/pom.xml",
                "index 5ae730c78..bcb3cd9fe 100644",
                "--- a/vertx-template-engines/pom.xml",
                "+++ b/vertx-template-engines/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-freemarker/pom.xml b/vertx-template-engines/vertx-web-templ-freemarker/pom.xml",
                "index db685e3bb..bf5560f98 100644",
                "--- a/vertx-template-engines/vertx-web-templ-freemarker/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-freemarker/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-handlebars/pom.xml b/vertx-template-engines/vertx-web-templ-handlebars/pom.xml",
                "index d409d4cc8..472ab9180 100644",
                "--- a/vertx-template-engines/vertx-web-templ-handlebars/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-handlebars/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-jade/pom.xml b/vertx-template-engines/vertx-web-templ-jade/pom.xml",
                "index 1b504f06b..1f1137f90 100644",
                "--- a/vertx-template-engines/vertx-web-templ-jade/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-jade/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-mvel/pom.xml b/vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                "index 0b582824e..4ceefe967 100644",
                "--- a/vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-pebble/pom.xml b/vertx-template-engines/vertx-web-templ-pebble/pom.xml",
                "index 152b50b46..e85ee6038 100644",
                "--- a/vertx-template-engines/vertx-web-templ-pebble/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-pebble/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-rocker/pom.xml b/vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                "index a024bc53e..f3e49ceb8 100644",
                "--- a/vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                "@@ -8,3 +8,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml b/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                "index 4aa289c9e..b577bbba3 100644",
                "--- a/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                "+++ b/vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-template-engines</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-web-api-contract/pom.xml b/vertx-web-api-contract/pom.xml",
                "index 20a703121..0b67b25fc 100644",
                "--- a/vertx-web-api-contract/pom.xml",
                "+++ b/vertx-web-api-contract/pom.xml",
                "@@ -9,3 +9,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-web-client/pom.xml b/vertx-web-client/pom.xml",
                "index d41128b7c..37a1ff576 100644",
                "--- a/vertx-web-client/pom.xml",
                "+++ b/vertx-web-client/pom.xml",
                "@@ -8,3 +8,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-web-common/pom.xml b/vertx-web-common/pom.xml",
                "index 4b4990b68..4a2ad87b4 100644",
                "--- a/vertx-web-common/pom.xml",
                "+++ b/vertx-web-common/pom.xml",
                "@@ -8,3 +8,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>",
                "diff --git a/vertx-web/pom.xml b/vertx-web/pom.xml",
                "index fef49677b..ed5d09d28 100644",
                "--- a/vertx-web/pom.xml",
                "+++ b/vertx-web/pom.xml",
                "@@ -8,3 +8,3 @@",
                "     <artifactId>vertx-web-parent</artifactId>",
                "-    <version>3.5.4-SNAPSHOT</version>",
                "+    <version>3.5.4</version>",
                "   </parent>"
            ],
            "changed_files": [
                "pom.xml",
                "vertx-sockjs-service-proxy/pom.xml",
                "vertx-template-engines/pom.xml",
                "vertx-template-engines/vertx-web-templ-freemarker/pom.xml",
                "vertx-template-engines/vertx-web-templ-handlebars/pom.xml",
                "vertx-template-engines/vertx-web-templ-jade/pom.xml",
                "vertx-template-engines/vertx-web-templ-mvel/pom.xml",
                "vertx-template-engines/vertx-web-templ-pebble/pom.xml",
                "vertx-template-engines/vertx-web-templ-rocker/pom.xml",
                "vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml",
                "vertx-web-api-contract/pom.xml",
                "vertx-web-client/pom.xml",
                "vertx-web-common/pom.xml",
                "vertx-web/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.5.4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-api-contract/pom.xml, vertx-template-engines/vertx-web-templ-jade/pom.xml, vertx-web-common/pom.xml, vertx-sockjs-service-proxy/pom.xml, vertx-template-engines/vertx-web-templ-mvel/pom.xml, vertx-template-engines/vertx-web-templ-freemarker/pom.xml, vertx-web-client/pom.xml, vertx-web/pom.xml, vertx-template-engines/vertx-web-templ-thymeleaf/pom.xml, vertx-template-engines/vertx-web-templ-rocker/pom.xml, vertx-template-engines/vertx-web-templ-handlebars/pom.xml, vertx-template-engines/vertx-web-templ-pebble/pom.xml, vertx-template-engines/pom.xml",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "172714c2476e99238701648ceaa748c8ebd59751",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538578368,
            "hunks": 6,
            "message": "SessionStore#size is just an estimate and should not be used in tests",
            "diff": [
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/sstore/SessionStore.java b/vertx-web/src/main/java/io/vertx/ext/web/sstore/SessionStore.java",
                "index 9a8fd1643..c922a6dfa 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/sstore/SessionStore.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/sstore/SessionStore.java",
                "@@ -112,3 +112,3 @@ public interface SessionStore {",
                "   /**",
                "-   * Create a new session",
                "+   * Create a new session.",
                "    *",
                "@@ -122,3 +122,3 @@ public interface SessionStore {",
                "   /**",
                "-   * Get the session with the specified ID",
                "+   * Get the session with the specified ID.",
                "    *",
                "@@ -130,3 +130,3 @@ public interface SessionStore {",
                "   /**",
                "-   * Delete the session with the specified ID",
                "+   * Delete the session with the specified ID.",
                "    *",
                "@@ -138,3 +138,3 @@ public interface SessionStore {",
                "   /**",
                "-   * Add a session with the specified ID",
                "+   * Add a session with the specified ID.",
                "    *",
                "@@ -146,3 +146,3 @@ public interface SessionStore {",
                "   /**",
                "-   * Remove all sessions from the store",
                "+   * Remove all sessions from the store.",
                "    *",
                "@@ -153,3 +153,5 @@ public interface SessionStore {",
                "   /**",
                "-   * Get the number of sessions in the store",
                "+   * Get the number of sessions in the store.",
                "+   * <p>",
                "+   * Beware of the result which is just an estimate, in particular with distributed session stores.",
                "    *"
            ],
            "changed_files": [
                "vertx-web/src/main/java/io/vertx/ext/web/sstore/SessionStore.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web/src/main/java/io/vertx/ext/web/sstore/SessionStore.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "36fe93c63ad3c0d979693e7d7e6bfd860d6acddd",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1537257920,
            "hunks": 8,
            "message": "Allow Bearer-Only mode for OAuth2",
            "diff": [
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java b/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java",
                "index 47c17273e..bc4e6c52c 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java",
                "@@ -68,2 +68,4 @@ public class OAuth2AuthHandlerImpl extends AuthorizationAuthHandler implements O",
                "   private JsonObject extraParams;",
                "+  // explicit signal that tokens are handled as bearer only (meaning, no backend server known)",
                "+  private boolean bearerOnly = true;",
                "@@ -100,3 +102,4 @@ public class OAuth2AuthHandlerImpl extends AuthorizationAuthHandler implements O",
                "   public void parseCredentials(RoutingContext context, Handler<AsyncResult<JsonObject>> handler) {",
                "-    parseAuthorization(context, true, parseAuthorization -> {",
                "+    // when the handler is working as bearer only, then the `Authorization` header is required",
                "+    parseAuthorization(context, !bearerOnly, parseAuthorization -> {",
                "       if (parseAuthorization.failed()) {",
                "@@ -111,3 +114,7 @@ public class OAuth2AuthHandlerImpl extends AuthorizationAuthHandler implements O",
                "         if (callback == null) {",
                "-          handler.handle(Future.failedFuture(\"callback route is not configured.\"));",
                "+          // it's a failure both cases but the cause is not the same",
                "+          handler.handle(Future.failedFuture(",
                "+            bearerOnly ?",
                "+              \"bearer-only access type: token is null\" :",
                "+              \"callback route is not configured.\"));",
                "           return;",
                "@@ -164,5 +171,3 @@ public class OAuth2AuthHandlerImpl extends AuthorizationAuthHandler implements O",
                "   @Override",
                "-  public OAuth2AuthHandler setupCallback(Route route) {",
                "-",
                "-    callback = route;",
                "+  public OAuth2AuthHandler setupCallback(final Route route) {",
                "@@ -170,5 +175,6 @@ public class OAuth2AuthHandlerImpl extends AuthorizationAuthHandler implements O",
                "       // no matter what path was provided we will make sure it is the correct one",
                "-      callback.path(callbackPath);",
                "+      route.path(callbackPath);",
                "     }",
                "-    callback.method(HttpMethod.GET);",
                "+",
                "+    route.method(HttpMethod.GET);",
                "@@ -190,3 +196,3 @@ public class OAuth2AuthHandlerImpl extends AuthorizationAuthHandler implements O",
                "       if (host != null) {",
                "-        config.put(\"redirect_uri\", host + callback.getPath());",
                "+        config.put(\"redirect_uri\", host + route.getPath());",
                "       }",
                "@@ -225,2 +231,7 @@ public class OAuth2AuthHandlerImpl extends AuthorizationAuthHandler implements O",
                "+    // the redirect handler has been setup so we can process this",
                "+    // handler has full oauth2",
                "+    bearerOnly = false;",
                "+    callback = route;",
                "+",
                "     return this;"
            ],
            "changed_files": [
                "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "1cb95fd9706a20bede7389e2ad024dd108e49375",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1537429411,
            "hunks": 2,
            "message": "Fix test compilation due to changes in vertx core",
            "diff": [
                "diff --git a/vertx-web-api-contract/src/main/asciidoc/dataobjects.adoc b/vertx-web-api-contract/src/main/asciidoc/dataobjects.adoc",
                "index ca9faeff5..b980a16b9 100644",
                "--- a/vertx-web-api-contract/src/main/asciidoc/dataobjects.adoc",
                "+++ b/vertx-web-api-contract/src/main/asciidoc/dataobjects.adoc",
                "@@ -9,3 +9,3 @@",
                "-[cols=\">25%,75%\"]",
                "+[cols=\">25%,25%,50%\"]",
                " [frame=\"topbot\"]",
                "diff --git a/vertx-web-client/src/main/asciidoc/dataobjects.adoc b/vertx-web-client/src/main/asciidoc/dataobjects.adoc",
                "index f73637691..4dd0b7785 100644",
                "--- a/vertx-web-client/src/main/asciidoc/dataobjects.adoc",
                "+++ b/vertx-web-client/src/main/asciidoc/dataobjects.adoc",
                "@@ -9,3 +9,3 @@",
                "-[cols=\">25%,75%\"]",
                "+[cols=\">25%,25%,50%\"]",
                " [frame=\"topbot\"]"
            ],
            "changed_files": [
                "vertx-web-api-contract/src/main/asciidoc/dataobjects.adoc",
                "vertx-web-client/src/main/asciidoc/dataobjects.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-api-contract/src/main/asciidoc/dataobjects.adoc, vertx-web-client/src/main/asciidoc/dataobjects.adoc",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "9a1122b0e0464428a0ee5be33a59434a45f8fcd1",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1537533013,
            "hunks": 2,
            "message": "update error message and added a small comment about it",
            "diff": [
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java b/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java",
                "index bc4e6c52c..414f08356 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java",
                "@@ -108,3 +108,3 @@ public class OAuth2AuthHandlerImpl extends AuthorizationAuthHandler implements O",
                "       }",
                "-      // Authorization header could be null as we mark it as optional",
                "+      // Authorization header can be null when in bearerOnly mode",
                "       final String token = parseAuthorization.result();",
                "@@ -115,6 +115,3 @@ public class OAuth2AuthHandlerImpl extends AuthorizationAuthHandler implements O",
                "           // it's a failure both cases but the cause is not the same",
                "-          handler.handle(Future.failedFuture(",
                "-            bearerOnly ?",
                "-              \"bearer-only access type: token is null\" :",
                "-              \"callback route is not configured.\"));",
                "+          handler.handle(Future.failedFuture(\"callback route is not configured.\"));",
                "           return;"
            ],
            "changed_files": [
                "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web/src/main/java/io/vertx/ext/web/handler/impl/OAuth2AuthHandlerImpl.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "f88c3f27e29294ab43a0a395a14d9aba2317b5a4",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538406733,
            "hunks": 14,
            "message": "Strict functionalities tests Signed-off-by: tnolli <tommaso.nolli@gmail.com>",
            "diff": [
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "index bfa8800ce..b00265dde 100644",
                "--- a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "@@ -37,19 +37,21 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   private CookieStore cookieStore;",
                "-  private CaseInsensitiveHeaders originalHeaders;",
                "+  private MultiMap headers;",
                "-  public SessionAwareHttpRequestImpl(HttpRequestImpl<Buffer> request, CookieStore cookieStore) {",
                "+  public SessionAwareHttpRequestImpl(HttpRequestImpl<Buffer> request, CookieStore cookieStore, CaseInsensitiveHeaders clientHeaders) {",
                "     this.request = request;",
                "     this.cookieStore = cookieStore;",
                "-    this.originalHeaders = new CaseInsensitiveHeaders();",
                "-    this.originalHeaders.addAll(request.headers());",
                "+    if (clientHeaders != null) {",
                "+      this.headers = new CaseInsensitiveHeaders().addAll(clientHeaders);",
                "+    }",
                "   }",
                "-  protected void prepare(CaseInsensitiveHeaders headers) {",
                "-    if (headers != null) {",
                "-      originalHeaders.addAll(headers);",
                "-    }",
                "-    ",
                "+  protected void prepare() {",
                "     // we need to reset the headers at every \"send\" because a previous call",
                "     // could have change the cookies (the server sent new ones or updated some values)",
                "-    request.headers().clear().addAll(originalHeaders);",
                "+    if (request.headers != null) {",
                "+      request.headers().clear();",
                "+    }",
                "+    if (headers != null) {",
                "+      request.headers().addAll(headers);",
                "+    }",
                "@@ -108,3 +110,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public HttpRequest<Buffer> putHeader(String name, String value) {",
                "-    request.putHeader(name, value);",
                "+    headers().set(name, value);",
                "     return this;",
                "@@ -114,3 +116,6 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public MultiMap headers() {",
                "-    return request.headers();",
                "+    if (headers == null) {",
                "+      headers = new CaseInsensitiveHeaders();",
                "+    }",
                "+    return headers;",
                "   }",
                "@@ -160,3 +165,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendStream(ReadStream<Buffer> body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "-    prepare(null);",
                "+    prepare();",
                "     request.sendStream(body, cookieHandler(handler));",
                "@@ -166,3 +171,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendBuffer(Buffer body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "-    prepare(null);",
                "+    prepare();",
                "     request.sendBuffer(body, cookieHandler(handler));",
                "@@ -172,3 +177,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendJsonObject(JsonObject body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "-    prepare(null);",
                "+    prepare();",
                "     request.sendJsonObject(body, cookieHandler(handler));",
                "@@ -178,3 +183,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendJson(Object body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "-    prepare(null);",
                "+    prepare();",
                "     request.sendJson(body, cookieHandler(handler));",
                "@@ -184,3 +189,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendForm(MultiMap body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "-    prepare(null);",
                "+    prepare();",
                "     request.sendForm(body, cookieHandler(handler));",
                "@@ -190,3 +195,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void sendMultipartForm(MultipartForm body, Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "-    prepare(null);",
                "+    prepare();",
                "     request.sendMultipartForm(body, cookieHandler(handler));",
                "@@ -196,3 +201,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public void send(Handler<AsyncResult<HttpResponse<Buffer>>> handler) {",
                "-    prepare(null);",
                "+    prepare();",
                "     request.send(cookieHandler(handler));",
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareWebClientImpl.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareWebClientImpl.java",
                "index 0f32e6b75..f902b3d58 100644",
                "--- a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareWebClientImpl.java",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareWebClientImpl.java",
                "@@ -35,5 +35,3 @@ public class SessionAwareWebClientImpl implements SessionAwareWebClient {",
                "   private HttpRequest<Buffer> wrapRequest(HttpRequest<Buffer> req) {",
                "-    SessionAwareHttpRequestImpl request = new SessionAwareHttpRequestImpl((HttpRequestImpl<Buffer>) req, cookieStore);",
                "-    request.prepare(headers);",
                "-    return request;",
                "+    return new SessionAwareHttpRequestImpl((HttpRequestImpl<Buffer>) req, cookieStore, headers);",
                "   }"
            ],
            "changed_files": [
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareWebClientImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareWebClientImpl.java, vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "71a516ab0a1f454c7963ef24ab52d3b35790f9f9",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538584204,
            "hunks": 2,
            "message": "WebClient sendStream error: notify before closing the connection",
            "diff": [
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpContext.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpContext.java",
                "index 203098ea2..fb69c1946 100644",
                "--- a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpContext.java",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpContext.java",
                "@@ -254,4 +254,5 @@ public class HttpContext {",
                "         stream.exceptionHandler(err -> {",
                "-          req.reset();",
                "+          // Notify before closing the connection otherwise the future could be failed with connection closed exception",
                "           responseFuture.tryFail(err);",
                "+          req.reset();",
                "         });"
            ],
            "changed_files": [
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/HttpContext.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "b1cacc179885a47c34a6e39cb42e988bc967fd7c",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538498857,
            "hunks": 5,
            "message": "Fixed couple of missed wrapping and fixes semantics of copy() Signed-off-by: tnolli <tommaso.nolli@gmail.com>",
            "diff": [
                "diff --git a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "index a189ea98e..6aaa1b843 100644",
                "--- a/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "+++ b/vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                "@@ -39,3 +39,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "-  public SessionAwareHttpRequestImpl(HttpRequestImpl<Buffer> request, CookieStore cookieStore, CaseInsensitiveHeaders clientHeaders) {",
                "+  public SessionAwareHttpRequestImpl(HttpRequestImpl<Buffer> request, CookieStore cookieStore, MultiMap clientHeaders) {",
                "     this.request = request;",
                "@@ -76,3 +76,4 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public HttpRequest<Buffer> method(HttpMethod value) {",
                "-    return request.method(value);",
                "+    request.method(value);",
                "+    return this;",
                "   }",
                "@@ -86,4 +87,6 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   @Override",
                "+  @SuppressWarnings(\"unchecked\")",
                "   public <U> HttpRequest<U> as(BodyCodec<U> responseCodec) {",
                "-    return request.as(responseCodec);",
                "+    request.as(responseCodec);",
                "+    return (HttpRequest<U>) this;",
                "   }",
                "@@ -159,4 +162,3 @@ public class SessionAwareHttpRequestImpl implements HttpRequest<Buffer> {",
                "   public HttpRequest<Buffer> copy() {",
                "-    request.copy();",
                "-    return this;",
                "+    return new SessionAwareHttpRequestImpl((HttpRequestImpl<Buffer>) request.copy(), cookieStore, headers);",
                "   }"
            ],
            "changed_files": [
                "vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web-client/src/main/java/io/vertx/ext/web/client/impl/SessionAwareHttpRequestImpl.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "459734e60c94f334652a09aaa0ea9cebdd37fb89",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1537964232,
            "hunks": 18,
            "message": "remove uridecoder as it now lives in vert.x core",
            "diff": [
                "diff --git a/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/ContainerSerializationStyle.java b/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/ContainerSerializationStyle.java",
                "index eb491c608..b1922c0c0 100644",
                "--- a/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/ContainerSerializationStyle.java",
                "+++ b/vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/ContainerSerializationStyle.java",
                "@@ -3,4 +3,4 @@ package io.vertx.ext.web.api.validation;",
                " import io.vertx.codegen.annotations.VertxGen;",
                "+import io.vertx.core.net.impl.URIDecoder;",
                " import io.vertx.ext.web.api.validation.impl.SplitterCharContainerDeserializer;",
                "-import io.vertx.ext.web.impl.Utils;",
                "@@ -84,3 +84,3 @@ public enum ContainerSerializationStyle {",
                "       while (m.find())",
                "-        values.add(Utils.urlDecode(m.group(\"value\"), false));",
                "+        values.add(URIDecoder.decodeURIComponent(m.group(\"value\"), false));",
                "       return values;",
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java b/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
                "index 71c7d6ad8..c934e554c 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
                "@@ -30,2 +30,3 @@ import io.vertx.core.logging.Logger;",
                " import io.vertx.core.logging.LoggerFactory;",
                "+import io.vertx.core.net.impl.URIDecoder;",
                " import io.vertx.ext.web.Http2PushMapping;",
                "@@ -140,3 +141,3 @@ public class StaticHandlerImpl implements StaticHandler {",
                "     } else {",
                "-      String path = Utils.removeDots(Utils.urlDecode(context.normalisedPath(), false));",
                "+      String path = Utils.removeDots(URIDecoder.decodeURIComponent(context.normalisedPath(), false));",
                "       // if the normalized path is null it cannot be resolved",
                "@@ -764,3 +765,3 @@ public class StaticHandlerImpl implements StaticHandler {",
                "     if (li != -1 && li != file.length() - 1) {",
                "-      return file.substring(li + 1, file.length());",
                "+      return file.substring(li + 1);",
                "     } else {",
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/SockJSHandler.java b/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/SockJSHandler.java",
                "index 9030942eb..4465fed86 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/SockJSHandler.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/SockJSHandler.java",
                "@@ -22,3 +22,2 @@ import io.vertx.core.Handler;",
                " import io.vertx.core.Vertx;",
                "-import io.vertx.ext.web.Router;",
                " import io.vertx.ext.web.RoutingContext;",
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/JsonPTransport.java b/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/JsonPTransport.java",
                "index c68c2817e..c39141919 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/JsonPTransport.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/JsonPTransport.java",
                "@@ -39,2 +39,3 @@ import io.vertx.core.logging.Logger;",
                " import io.vertx.core.logging.LoggerFactory;",
                "+import io.vertx.core.net.impl.URIDecoder;",
                " import io.vertx.core.shareddata.LocalMap;",
                "@@ -44,3 +45,2 @@ import io.vertx.ext.web.handler.sockjs.SockJSHandlerOptions;",
                " import io.vertx.ext.web.handler.sockjs.SockJSSocket;",
                "-import io.vertx.ext.web.impl.Utils;",
                "@@ -127,3 +127,3 @@ class JsonPTransport extends BaseTransport {",
                "       if (urlEncoded) {",
                "-        body = Utils.urlDecode(body, true).substring(2);",
                "+        body = URIDecoder.decodeURIComponent(body, true).substring(2);",
                "       }",
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java b/vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java",
                "index d9bf230d7..d613afa20 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java",
                "@@ -24,2 +24,3 @@ import io.vertx.core.logging.Logger;",
                " import io.vertx.core.logging.LoggerFactory;",
                "+import io.vertx.core.net.impl.URIDecoder;",
                " import io.vertx.ext.web.MIMEHeader;",
                "@@ -337,3 +338,3 @@ public class RouteImpl implements Route {",
                "     HttpServerRequest request = context.request();",
                "-    final String decodedValue = Utils.urlDecode(value, false);",
                "+    final String decodedValue = URIDecoder.decodeURIComponent(value, false);",
                "     if (!request.params().contains(name)) {",
                "diff --git a/vertx-web/src/main/java/io/vertx/ext/web/impl/Utils.java b/vertx-web/src/main/java/io/vertx/ext/web/impl/Utils.java",
                "index 166e7321f..30dcc7508 100644",
                "--- a/vertx-web/src/main/java/io/vertx/ext/web/impl/Utils.java",
                "+++ b/vertx-web/src/main/java/io/vertx/ext/web/impl/Utils.java",
                "@@ -20,3 +20,2 @@ import com.fasterxml.jackson.databind.JsonNode;",
                " import com.fasterxml.jackson.databind.ObjectMapper;",
                "-import io.netty.util.CharsetUtil;",
                " import io.vertx.core.MultiMap;",
                "@@ -35,6 +34,4 @@ import java.text.DateFormat;",
                " import java.text.SimpleDateFormat;",
                "-import java.util.Comparator;",
                " import java.util.Locale;",
                " import java.util.TimeZone;",
                "-import java.util.regex.Pattern;",
                "@@ -46,6 +43,2 @@ public class Utils extends io.vertx.core.impl.Utils {",
                "-  private static final Pattern COMMA_SPLITTER = Pattern.compile(\" *, *\");",
                "-  private static final Pattern SEMICOLON_SPLITTER = Pattern.compile(\" *; *\");",
                "-  private static final Pattern EQUAL_SPLITTER = Pattern.compile(\" *= *\");",
                "-",
                "   private static int indexOfSlash(CharSequence str, int start) {",
                "@@ -233,86 +226,2 @@ public class Utils extends io.vertx.core.impl.Utils {",
                "-  /**",
                "-   * Decodes a bit of an URL encoded by a browser.",
                "-   *",
                "-   * The string is expected to be encoded as per RFC 3986, Section 2. This is the encoding used by JavaScript functions",
                "-   * encodeURI and encodeURIComponent, but not escape. For example in this encoding, \u00c3\u00a9 (in Unicode U+00E9 or in",
                "-   * UTF-8 0xC3 0xA9) is encoded as %C3%A9 or %c3%a9.",
                "-   *",
                "-   * @param s string to decode",
                "-   * @param plus weather or not to transform plus signs into spaces",
                "-   *",
                "-   * @return decoded string",
                "-   */",
                "-  public static String urlDecode(final String s, boolean plus) {",
                "-    if (s == null) {",
                "-      return null;",
                "-    }",
                "-",
                "-    final int size = s.length();",
                "-    boolean modified = false;",
                "-    for (int i = 0; i < size; i++) {",
                "-      final char c = s.charAt(i);",
                "-      if (c == '%' || (plus && c == '+')) {",
                "-        modified = true;",
                "-        break;",
                "-      }",
                "-    }",
                "-    if (!modified) {",
                "-      return s;",
                "-    }",
                "-    final byte[] buf = new byte[size];",
                "-    int pos = 0;  // position in `buf'.",
                "-    for (int i = 0; i < size; i++) {",
                "-      char c = s.charAt(i);",
                "-      if (c == '%') {",
                "-        if (i == size - 1) {",
                "-          throw new IllegalArgumentException(\"unterminated escape\"",
                "-            + \" sequence at end of string: \" + s);",
                "-        }",
                "-        c = s.charAt(++i);",
                "-        if (c == '%') {",
                "-          buf[pos++] = '%';  // \"%%\" -> \"%\"",
                "-          break;",
                "-        }",
                "-        if (i == size - 1) {",
                "-          throw new IllegalArgumentException(\"partial escape\"",
                "-            + \" sequence at end of string: \" + s);",
                "-        }",
                "-        c = decodeHexNibble(c);",
                "-        final char c2 = decodeHexNibble(s.charAt(++i));",
                "-        if (c == Character.MAX_VALUE || c2 == Character.MAX_VALUE) {",
                "-          throw new IllegalArgumentException(",
                "-            \"invalid escape sequence `%\" + s.charAt(i - 1)",
                "-              + s.charAt(i) + \"' at index \" + (i - 2)",
                "-              + \" of: \" + s);",
                "-        }",
                "-        c = (char) (c * 16 + c2);",
                "-        // shouldn't check for plus since it would be a double decoding",
                "-        buf[pos++] = (byte) c;",
                "-      } else {",
                "-        buf[pos++] = (byte) (plus && c == '+' ? ' ' : c);",
                "-      }",
                "-    }",
                "-    return new String(buf, 0, pos, CharsetUtil.UTF_8);",
                "-  }",
                "-",
                "-  /**",
                "-   * Helper to decode half of a hexadecimal number from a string.",
                "-   * @param c The ASCII character of the hexadecimal number to decode.",
                "-   * Must be in the range {@code [0-9a-fA-F]}.",
                "-   * @return The hexadecimal value represented in the ASCII character",
                "-   * given, or {@link Character#MAX_VALUE} if the character is invalid.",
                "-   */",
                "-  private static char decodeHexNibble(final char c) {",
                "-    if ('0' <= c && c <= '9') {",
                "-      return (char) (c - '0');",
                "-    } else if ('a' <= c && c <= 'f') {",
                "-      return (char) (c - 'a' + 10);",
                "-    } else if ('A' <= c && c <= 'F') {",
                "-      return (char) (c - 'A' + 10);",
                "-    } else {",
                "-      return Character.MAX_VALUE;",
                "-    }",
                "-  }",
                "-",
                "   public static ClassLoader getClassLoader() {",
                "@@ -390,26 +299,2 @@ public class Utils extends io.vertx.core.impl.Utils {",
                "-  private static final Comparator<String> ACCEPT_X_COMPARATOR = new Comparator<String>() {",
                "-    float getQuality(String s) {",
                "-      if (s == null) {",
                "-        return 0;",
                "-      }",
                "-",
                "-      String[] params = SEMICOLON_SPLITTER.split(s);",
                "-      for (int i = 1; i < params.length; i++) {",
                "-        String[] q = EQUAL_SPLITTER.split(params[1]);",
                "-        if (\"q\".equals(q[0])) {",
                "-          return Float.parseFloat(q[1]);",
                "-        }",
                "-      }",
                "-      return 1;",
                "-    }",
                "-",
                "-    @Override",
                "-    public int compare(String o1, String o2) {",
                "-      float f1 = getQuality(o1);",
                "-      float f2 = getQuality(o2);",
                "-      return Float.compare(f2, f1);",
                "-    }",
                "-  };",
                "-",
                "   public static long secondsFactor(long millis) {"
            ],
            "changed_files": [
                "vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/ContainerSerializationStyle.java",
                "vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java",
                "vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/SockJSHandler.java",
                "vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/JsonPTransport.java",
                "vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java",
                "vertx-web/src/main/java/io/vertx/ext/web/impl/Utils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x, Vert",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: vertx-web/src/main/java/io/vertx/ext/web/impl/Utils.java, vertx-web/src/main/java/io/vertx/ext/web/impl/RouteImpl.java, vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/SockJSHandler.java, vertx-web-api-contract/src/main/java/io/vertx/ext/web/api/validation/ContainerSerializationStyle.java, vertx-web/src/main/java/io/vertx/ext/web/handler/impl/StaticHandlerImpl.java, vertx-web/src/main/java/io/vertx/ext/web/handler/sockjs/impl/JsonPTransport.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "fcba0ee9fad548d2847009c691ff41fb0ee33946",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538906904,
            "hunks": 2,
            "message": "Update Travis descriptor",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index e1b5c3791..706ca1f9c 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -17,3 +17,3 @@ jobs:",
                "       name: \"Deploy to Sonatype's snapshots repository\"",
                "-      if: type != pull_request",
                "+      if: type != pull_request AND env(SONATYPE_NEXUS_USERNAME) IS present",
                "       script: bash .travis.deploy.artifacts.sh",
                "@@ -22,3 +22,3 @@ notifications:",
                "     recipients:",
                "-      - vertx3-ci@googlegroups.com",
                "+      - secure: \"Q9QVThuDW0VF6OAcaeFbdOZrK8DBoaDw4GVqDukbgPWyjoJN/KTifxFYIJGDsYva5gZp9OKyeTe3cYC0MBlX2SMlJbU83HkApl3EKmM6QGgFVGbRZAjX0LVX5sGhlqfcyjiYedORlTLeEuJfbiYoPoEfQ1dR8cEPSCdInA+mgb0=\"",
                "     on_success: always"
            ],
            "changed_files": [
                ".travis.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "06262309052af9c334b9180353fbf4f93fbf6f0a",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1537249710,
            "hunks": 1,
            "message": "Upgrade tcnative to 2.0.12.Final",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 7d4ba20c3..014220145 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -83,3 +83,3 @@",
                "           <artifactId>netty-tcnative-boringssl-static</artifactId>",
                "-          <version>2.0.7.Final</version>",
                "+          <version>2.0.12.Final</version>",
                "           <scope>test</scope>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "3548412b37bdea7ad11a554dd43e632ec753cde8",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538034629,
            "hunks": 3,
            "message": "Added travis descriptors",
            "diff": [
                "diff --git a/.travis.deploy.artifacts.sh b/.travis.deploy.artifacts.sh",
                "new file mode 100644",
                "index 000000000..d6f9804c5",
                "--- /dev/null",
                "+++ b/.travis.deploy.artifacts.sh",
                "@@ -0,0 +1,5 @@",
                "+PROJECT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:evaluate -Dexpression=project.version -B | grep -v '\\[')",
                "+if [[ \"$PROJECT_VERSION\" =~ .*SNAPSHOT ]] && [[ \"${TRAVIS_BRANCH}\" =~ ^master$|^[0-9]+\\.[0-9]+$ ]] && [[ \"${TRAVIS_PULL_REQUEST}\" = \"false\" ]];",
                "+then",
                "+  mvn deploy -s .travis.maven.settings.xml -DskipTests -B;",
                "+fi",
                "diff --git a/.travis.maven.settings.xml b/.travis.maven.settings.xml",
                "new file mode 100644",
                "index 000000000..cd8c4445e",
                "--- /dev/null",
                "+++ b/.travis.maven.settings.xml",
                "@@ -0,0 +1,17 @@",
                "+<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"",
                "+          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
                "+          xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0",
                "+                      http://maven.apache.org/xsd/settings-1.0.0.xsd\">",
                "+",
                "+  <interactiveMode>false</interactiveMode>",
                "+",
                "+  <servers>",
                "+    <server>",
                "+      <id>sonatype-nexus-snapshots</id>",
                "+      <username>${env.SONATYPE_NEXUS_USERNAME}</username>",
                "+      <password>${env.SONATYPE_NEXUS_PASSWORD}</password>",
                "+    </server>",
                "+  </servers>",
                "+",
                "+</settings>",
                "+",
                "diff --git a/.travis.yml b/.travis.yml",
                "new file mode 100644",
                "index 000000000..a9b7c3c5f",
                "--- /dev/null",
                "+++ b/.travis.yml",
                "@@ -0,0 +1,21 @@",
                "+language: java",
                "+branches:",
                "+  only:",
                "+  - master",
                "+  - /^\\d+\\.\\d+$/",
                "+jobs:",
                "+  include:",
                "+    - stage: test",
                "+      name: \"OracleJDK 8\"",
                "+      jdk: oraclejdk8",
                "+      script: mvn -q clean verify -B",
                "+    - stage: deploy",
                "+      name: \"Deploy to Sonatype's snapshots repository\"",
                "+      if: type != pull_request",
                "+      script: bash .travis.deploy.artifacts.sh",
                "+notifications:",
                "+  email:",
                "+    recipients:",
                "+      - vertx3-ci@googlegroups.com",
                "+    on_success: always",
                "+    on_failure: always"
            ],
            "changed_files": [
                ".travis.deploy.artifacts.sh",
                ".travis.maven.settings.xml",
                ".travis.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x, XML",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "572a73beaf0bd8ffb941d414b9b210a52a2ef8c8",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1538035086,
            "hunks": 1,
            "message": "Build CI jobs also on OpenJDK 11",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index a9b7c3c5f..e1b5c3791 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -11,2 +11,6 @@ jobs:",
                "       script: mvn -q clean verify -B",
                "+    - if: type != pull_request",
                "+      name: \"OpenJDK 11\"",
                "+      jdk: openjdk11",
                "+      script: mvn -q clean verify -B",
                "     - stage: deploy"
            ],
            "changed_files": [
                ".travis.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: x",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "531f4de4b3fa886b99d8b8e72f9b9ca9fab2337d",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1537992500,
            "hunks": 0,
            "message": "Merge pull request #1014 from tnolli/issues/issue-362  Possible fix for #362",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1014": "File upload handling should be optional in BodyHandler or a separate handler #362",
                "362": "File-uploads dir not created unless dealing with uploads #380 Tests using BodyHandler need to delete 'file_uploads' dir afterwards #381"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1014, 362",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4920f4de5ab57ca701d4defed2d6a0579d9c01ba",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1537533187,
            "hunks": 0,
            "message": "Merge pull request #1019 from vert-x3/issues/3.5-verify-exp-token Verify https://github.com/vert-x3/vertx-auth/pull/243",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1019": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.5.4"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1019",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "99f34004bc10c7dd214e211674cc89bfde0767e1",
            "repository": "https://github.com/vert-x3/vertx-web",
            "timestamp": 1537533047,
            "hunks": 0,
            "message": "Merge pull request #1018 from vert-x3/issues/allow-bearer-only-mode Allow Bearer-Only mode for OAuth2",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1018": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "3.6.0",
                "3.6.0.CR1",
                "3.6.0.CR2",
                "3.6.1",
                "3.6.2",
                "3.6.3",
                "3.7.0",
                "3.7.1",
                "3.8.0",
                "3.8.1",
                "3.8.2",
                "3.8.3",
                "3.8.3-01",
                "3.8.4",
                "3.8.5",
                "3.9.0",
                "3.9.1",
                "3.9.10",
                "3.9.11",
                "3.9.12",
                "3.9.13",
                "3.9.14",
                "3.9.15",
                "3.9.16",
                "3.9.2",
                "3.9.3",
                "3.9.4",
                "3.9.5",
                "3.9.6",
                "3.9.7",
                "3.9.8",
                "3.9.9",
                "4.0.0",
                "4.0.0-milestone1",
                "4.0.0-milestone2",
                "4.0.0-milestone3",
                "4.0.0-milestone4",
                "4.0.0-milestone5",
                "4.0.0.Beta1",
                "4.0.0.Beta2",
                "4.0.0.Beta3",
                "4.0.0.CR1",
                "4.0.0.CR2",
                "4.0.1",
                "4.0.2",
                "4.0.3",
                "4.1.0",
                "4.1.0.Beta1",
                "4.1.0.CR1",
                "4.1.0.CR2",
                "4.1.1",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.2.0",
                "4.2.0.Beta1",
                "4.2.0.CR1",
                "4.2.1",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.3.0",
                "4.3.1",
                "4.3.2",
                "4.3.3",
                "4.3.4",
                "4.3.5",
                "4.3.6",
                "4.3.7",
                "4.3.8",
                "4.4.0",
                "4.4.1",
                "4.4.2",
                "4.4.3",
                "4.4.4",
                "4.4.5",
                "4.4.6",
                "4.4.7",
                "4.4.8",
                "4.4.9",
                "4.5.0",
                "4.5.1",
                "4.5.2",
                "4.5.3",
                "4.5.4",
                "4.5.5",
                "4.5.6",
                "4.5.7",
                "4.5.8"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1018",
                    "relevance": 2
                }
            ]
        }
    ]
}
