{
    "advisory_record": {
        "cve_id": "CVE-2018-1308",
        "description": "This vulnerability in Apache Solr 1.2 to 6.6.2 and 7.0.0 to 7.2.1 relates to an XML external entity expansion (XXE) in the `&dataConfig=<inlinexml>` parameter of Solr's DataImportHandler. It can be used as XXE using file/ftp/http protocols in order to read arbitrary local files from the Solr server or the internal network.",
        "reserved_timestamp": 1512604800,
        "published_timestamp": 1523145600,
        "updated_timestamp": 1573585631,
        "repository_url": null,
        "references": {
            "": 57,
            "https://issues.apache.org/jira/browse/SOLR-11971": 6,
            "https://mail-archives.apache.org/mod_mbox/www-announce/201804.mbox/%3C000001d3cf68%245ac69af0%241053d0d0%24%40apache.org%3E": 3,
            "https://www.debian.org/security/2018/dsa-4194": 2,
            "https://lists.debian.org/debian-lts-announce/2018/04/msg00025.html": 2,
            "https://lists.apache.org/thread.html/708d94141126eac03011144a971a6411fcac16d9c248d1d535a39451%40%3Csolr-user.lucene.apache.org%3E": 2,
            "https://www.openwall.com/lists/oss-security/2018/04/08/3": 2,
            "commit::02c693f3": 2,
            "commit::739a7933": 2,
            "commit::dd3be31f": 2,
            "http://www.openwall.com/lists/oss-security/2018/04/08/3": 2,
            "https://issues.apache.org/jira/secure/attachment/12910207/SOLR-11971.patch": 2,
            "https://docs.atlassian.com/jira/jcore-docs-0820/": 2,
            "http://www.atlassian.com/software/jira": 2,
            "https://issues.apache.org/jira/secure/MyJiraHome.jspa": 1,
            "https://selfserve.apache.org/jira-account.html": 1,
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-1308": 1,
            "https://www.atlassian.com/software/jira": 1,
            "http://www.atlassian.com/": 1
        },
        "affected_products": [
            "Apache Solr",
            "Apache",
            "http",
            "XXE",
            "ftp",
            "Solr"
        ],
        "versions": {
            "status": "affected",
            "version": "1.2 to 6.6.2"
        },
        "files": [
            "DataImportHandler",
            "XXE",
            "XML",
            "dataConfig=<inlinexml"
        ],
        "keywords": [
            "relate",
            "dataimporthandler",
            "order",
            "expansion",
            "file",
            "network",
            "http",
            "parameter",
            "protocol",
            "entity",
            "apache",
            "read",
            "server",
            "solr",
            "vulnerability"
        ],
        "files_extension": [],
        "has_fixing_commit": false
    },
    "commits": [
        {
            "commit_id": "dd3be31f7062dcb2f3b2d7f0e89df29e197dee63",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518990066,
            "hunks": 6,
            "message": "SOLR-11971: Don't allow referal to external resources in DataImportHandler's dataConfig request parameter",
            "diff": [
                "diff --git a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter.java b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter.java",
                "index a49b4f6285b..4825fd1225b 100644",
                "--- a/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter.java",
                "+++ b/solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter.java",
                "@@ -18,2 +18,3 @@ package org.apache.solr.handler.dataimport;",
                "+import org.apache.solr.common.EmptyEntityResolver;",
                " import org.apache.solr.common.SolrException;",
                "@@ -180,3 +181,3 @@ public class DataImporter {",
                "    */",
                "-  public void loadAndInit(String configStr) {",
                "+  void loadAndInit(String configStr) {",
                "     config = loadDataConfig(new InputSource(new StringReader(configStr)));",
                "@@ -184,3 +185,3 @@ public class DataImporter {",
                "-  public void loadAndInit(InputSource configFile) {",
                "+  void loadAndInit(InputSource configFile) {",
                "     config = loadDataConfig(configFile);",
                "@@ -193,4 +194,6 @@ public class DataImporter {",
                "       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
                "+      dbf.setValidating(false);",
                "-      // only enable xinclude, if a a SolrCore and SystemId is present (makes no sense otherwise)",
                "+      // only enable xinclude, if XML is coming from safe source (local file)",
                "+      // and a a SolrCore and SystemId is present (makes no sense otherwise):",
                "       if (core != null && configFile.getSystemId() != null) {",
                "@@ -205,4 +208,10 @@ public class DataImporter {",
                "       DocumentBuilder builder = dbf.newDocumentBuilder();",
                "-      if (core != null)",
                "+      // only enable xinclude / external entities, if XML is coming from",
                "+      // safe source (local file) and a a SolrCore and SystemId is present:",
                "+      if (core != null && configFile.getSystemId() != null) {",
                "         builder.setEntityResolver(new SystemIdResolver(core.getResourceLoader()));",
                "+      } else {",
                "+        // Don't allow external entities without having a system ID:",
                "+        builder.setEntityResolver(EmptyEntityResolver.SAX_INSTANCE);",
                "+      }",
                "       builder.setErrorHandler(XMLLOG);"
            ],
            "changed_files": [
                "solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11971": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "739a79338856599084617d44b6a1b424af059aa1"
                ],
                [
                    "no-tag",
                    "02c693f3713add1b4891cbaa87127de3a55c10f7"
                ]
            ],
            "tags": [
                "releases/lucene-solr/6.6.3",
                "releases/lucene-solr/6.6.4",
                "releases/lucene-solr/6.6.5",
                "releases/lucene-solr/6.6.6"
            ],
            "matched_rules": [
                {
                    "id": "XREF_BUG",
                    "message": "The commit and the advisory (including referenced pages) mention the same bug tracking ticket: SOLR-11971",
                    "relevance": 32
                },
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: dataimporthandler, parameter",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: dataimporthandler",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11971",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d7f6cb93837e1bde1066c96606845c4ab04e50cf",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519438236,
            "hunks": 54,
            "message": "Revert \"SOLR-11795: Add Solr metrics exporter for Prometheus\" This reverts commit 90741a5d329a5cf33f880eca1ceebc6ed769d6b1.",
            "diff": [
                "diff --git a/lucene/ivy-versions.properties b/lucene/ivy-versions.properties",
                "index 1516ced2660..5ab36ddfa2c 100644",
                "--- a/lucene/ivy-versions.properties",
                "+++ b/lucene/ivy-versions.properties",
                "@@ -72,7 +72,2 @@ io.netty.netty-all.version = 4.0.36.Final",
                "-io.prometheus.version = 0.2.0",
                "-/io.prometheus/simpleclient = ${io.prometheus.version}",
                "-/io.prometheus/simpleclient_common = ${io.prometheus.version}",
                "-/io.prometheus/simpleclient_httpserver = ${io.prometheus.version}",
                "-",
                " /javax.activation/activation = 1.1.1",
                "@@ -89,11 +84,3 @@ io.prometheus.version = 0.2.0",
                " /net.sf.ehcache/ehcache-core = 2.4.4",
                "-",
                "-net.sourceforge.argparse4j.version = 0.8.1",
                "-/net.sourceforge.argparse4j/argparse4j = ${net.sourceforge.argparse4j.version}",
                "-",
                " /net.sourceforge.nekohtml/nekohtml = 1.9.17",
                "-",
                "-net.thisptr.version = 0.0.8",
                "-/net.thisptr/jackson-jq = ${net.thisptr.version}",
                "-",
                " /org.antlr/antlr4-runtime = 4.5.1-1",
                "@@ -303,4 +290,2 @@ org.slf4j.version = 1.7.24",
                "-org.yaml.version = 1.19",
                "-/org.yaml/snakeyaml = ${org.yaml.version}",
                "diff --git a/solr/build.xml b/solr/build.xml",
                "index 3f0596fc9ce..400c71180d5 100644",
                "--- a/solr/build.xml",
                "+++ b/solr/build.xml",
                "@@ -573,3 +573,3 @@",
                "                   includes=\"LICENSE.txt NOTICE.txt CHANGES.txt README.txt SYSTEM_REQUIREMENTS.txt",
                "-                            bin/** server/** example/** contrib/**/lib/** contrib/**/conf/** contrib/**/README.txt",
                "+                            bin/** server/** example/** contrib/**/lib/** contrib/**/README.txt ",
                "                             licenses/**\"",
                "@@ -578,3 +578,3 @@",
                "                             **/bin/ **/*.iml **/*.ipr **/*.iws **/pom.xml ",
                "-                            **/*pom.xml.template server/etc/test/ contrib/**/src/\" />",
                "+                            **/*pom.xml.template server/etc/test/\" />",
                "       <tarfileset dir=\"${dest}/contrib-lucene-libs-to-package\"",
                "@@ -585,3 +585,3 @@",
                "                   prefix=\"${fullnamever}\"",
                "-                  includes=\"bin/** server/**/*.sh example/**/*.sh example/**/bin/ contrib/**/bin/**\"",
                "+                  includes=\"bin/** server/**/*.sh example/**/*.sh example/**/bin/\"",
                "                   excludes=\"server/etc/test/**\" />",
                "diff --git a/solr/contrib/prometheus-exporter/bin/solr-exporter b/solr/contrib/prometheus-exporter/bin/solr-exporter",
                "deleted file mode 100755",
                "index 71ffb6b152d..00000000000",
                "--- a/solr/contrib/prometheus-exporter/bin/solr-exporter",
                "+++ /dev/null",
                "@@ -1,118 +0,0 @@",
                "-#!/bin/sh",
                "-",
                "-#",
                "-# Licensed to the Apache Software Foundation (ASF) under one or more",
                "-# contributor license agreements.  See the NOTICE file distributed with",
                "-# this work for additional information regarding copyright ownership.",
                "-# The ASF licenses this file to You under the Apache License, Version 2.0",
                "-# (the \"License\"); you may not use this file except in compliance with",
                "-# the License.  You may obtain a copy of the License at",
                "-#",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "-#",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-#",
                "-",
                "-BASEDIR=`dirname $0`/..",
                "-BASEDIR=`(cd \"$BASEDIR\"; pwd)`",
                "-",
                "-# OS specific support.  $var _must_ be set to either true or false.",
                "-cygwin=false;",
                "-darwin=false;",
                "-case \"`uname`\" in",
                "-  CYGWIN*) cygwin=true ;;",
                "-  Darwin*) darwin=true",
                "-           if [ -z \"$JAVA_VERSION\" ] ; then",
                "-             JAVA_VERSION=\"CurrentJDK\"",
                "-           else",
                "-             echo \"Using Java version: $JAVA_VERSION\"",
                "-           fi",
                "-           if [ -z \"$JAVA_HOME\" ] ; then",
                "-             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home",
                "-           fi",
                "-           ;;",
                "-esac",
                "-",
                "-if [ -z \"$JAVA_HOME\" ] ; then",
                "-  if [ -r /etc/gentoo-release ] ; then",
                "-    JAVA_HOME=`java-config --jre-home`",
                "-  fi",
                "-fi",
                "-",
                "-# For Cygwin, ensure paths are in UNIX format before anything is touched",
                "-if $cygwin ; then",
                "-  [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`",
                "-  [ -n \"$CLASSPATH\" ] && CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`",
                "-fi",
                "-",
                "-# If a specific java binary isn't specified search for the standard 'java' binary",
                "-if [ -z \"$JAVACMD\" ] ; then",
                "-  if [ -n \"$JAVA_HOME\"  ] ; then",
                "-    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then",
                "-      # IBM's JDK on AIX uses strange locations for the executables",
                "-      JAVACMD=\"$JAVA_HOME/jre/sh/java\"",
                "-    else",
                "-      JAVACMD=\"$JAVA_HOME/bin/java\"",
                "-    fi",
                "-  else",
                "-    JAVACMD=`which java`",
                "-  fi",
                "-fi",
                "-",
                "-if [ ! -x \"$JAVACMD\" ] ; then",
                "-  echo \"Error: JAVA_HOME is not defined correctly.\"",
                "-  echo \"  We cannot execute $JAVACMD\"",
                "-  exit 1",
                "-fi",
                "-",
                "-if [ -z \"$REPO\" ]",
                "-then",
                "-  REPO=\"$BASEDIR\"/lib",
                "-fi",
                "-",
                "-CLASSPATH=$CLASSPATH_PREFIX",
                "-for JAR in $(find \"$REPO\" -name '*.jar')",
                "-do",
                "-  CLASSPATH=\"$CLASSPATH\":\"$JAR\"",
                "-done",
                "-for JAR in $(find \"$BASEDIR\"/../../dist/solrj-lib -name '*.jar')",
                "-do",
                "-  CLASSPATH=\"$CLASSPATH\":\"$JAR\"",
                "-done",
                "-for JAR in $(find \"$BASEDIR\"/../../dist -name 'solr-core-*.jar')",
                "-do",
                "-  CLASSPATH=\"$CLASSPATH\":\"$JAR\"",
                "-done",
                "-for JAR in $(find \"$BASEDIR\"/../../dist -name 'solr-solrj-*.jar')",
                "-do",
                "-  CLASSPATH=\"$CLASSPATH\":\"$JAR\"",
                "-done",
                "-for JAR in $(find \"$BASEDIR\"/../../dist -name 'solr-prometheus-exporter-*.jar')",
                "-do",
                "-  CLASSPATH=\"$CLASSPATH\":\"$JAR\"",
                "-done",
                "-",
                "-EXTRA_JVM_ARGUMENTS=\"-Xmx512m -Dlog4j.configuration=file:\"$BASEDIR\"/conf/log4j.properties\"",
                "-",
                "-# For Cygwin, switch paths to Windows format before running java",
                "-if $cygwin; then",
                "-  [ -n \"$CLASSPATH\" ] && CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`",
                "-  [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`",
                "-  [ -n \"$HOME\" ] && HOME=`cygpath --path --windows \"$HOME\"`",
                "-  [ -n \"$BASEDIR\" ] && BASEDIR=`cygpath --path --windows \"$BASEDIR\"`",
                "-  [ -n \"$REPO\" ] && REPO=`cygpath --path --windows \"$REPO\"`",
                "-fi",
                "-",
                "-exec \"$JAVACMD\" $JAVA_OPTS \\",
                "-  $EXTRA_JVM_ARGUMENTS \\",
                "-  -classpath \"$CLASSPATH\" \\",
                "-  -Dapp.name=\"solr-exporter\" \\",
                "-  -Dapp.pid=\"$$\" \\",
                "-  -Dapp.repo=\"$REPO\" \\",
                "-  -Dbasedir=\"$BASEDIR\" \\",
                "-  org.apache.solr.prometheus.exporter.SolrExporter \\",
                "-  \"$@\"",
                "diff --git a/solr/contrib/prometheus-exporter/bin/solr-exporter.cmd b/solr/contrib/prometheus-exporter/bin/solr-exporter.cmd",
                "deleted file mode 100644",
                "index c0b4b21782d..00000000000",
                "--- a/solr/contrib/prometheus-exporter/bin/solr-exporter.cmd",
                "+++ /dev/null",
                "@@ -1,105 +0,0 @@",
                "-@REM ",
                "-@REM Licensed to the Apache Software Foundation (ASF) under one or more",
                "-@REM contributor license agreements.  See the NOTICE file distributed with",
                "-@REM this work for additional information regarding copyright ownership.",
                "-@REM The ASF licenses this file to You under the Apache License, Version 2.0",
                "-@REM (the \"License\"); you may not use this file except in compliance with",
                "-@REM the License.  You may obtain a copy of the License at",
                "-@REM ",
                "-@REM     http://www.apache.org/licenses/LICENSE-2.0",
                "-@REM ",
                "-@REM Unless required by applicable law or agreed to in writing, software",
                "-@REM distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-@REM WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-@REM See the License for the specific language governing permissions and",
                "-@REM limitations under the License.",
                "-@REM ",
                "-",
                "-@echo off",
                "-",
                "-set ERROR_CODE=0",
                "-",
                "-:init",
                "-@REM Decide how to startup depending on the version of windows",
                "-",
                "-@REM -- Win98ME",
                "-if NOT \"%OS%\"==\"Windows_NT\" goto Win9xArg",
                "-",
                "-@REM set local scope for the variables with windows NT shell",
                "-if \"%OS%\"==\"Windows_NT\" @setlocal",
                "-",
                "-@REM -- 4NT shell",
                "-if \"%eval[2+2]\" == \"4\" goto 4NTArgs",
                "-",
                "-@REM -- Regular WinNT shell",
                "-set CMD_LINE_ARGS=%*",
                "-goto WinNTGetScriptDir",
                "-",
                "-@REM The 4NT Shell from jp software",
                "-:4NTArgs",
                "-set CMD_LINE_ARGS=%$",
                "-goto WinNTGetScriptDir",
                "-",
                "-:Win9xArg",
                "-@REM Slurp the command line arguments.  This loop allows for an unlimited number",
                "-@REM of agruments (up to the command line limit, anyway).",
                "-set CMD_LINE_ARGS=",
                "-:Win9xApp",
                "-if %1a==a goto Win9xGetScriptDir",
                "-set CMD_LINE_ARGS=%CMD_LINE_ARGS% %1",
                "-shift",
                "-goto Win9xApp",
                "-",
                "-:Win9xGetScriptDir",
                "-set SAVEDIR=%CD%",
                "-%0\\",
                "-cd %0\\..\\.. ",
                "-set BASEDIR=%CD%",
                "-cd %SAVEDIR%",
                "-set SAVE_DIR=",
                "-goto repoSetup",
                "-",
                "-:WinNTGetScriptDir",
                "-set BASEDIR=%~dp0\\..",
                "-",
                "-:repoSetup",
                "-",
                "-",
                "-if \"%JAVACMD%\"==\"\" set JAVACMD=java",
                "-",
                "-if \"%REPO%\"==\"\" set REPO=%BASEDIR%\\lib",
                "-",
                "-set CLASSPATH=\"%CLASSPATH%\";\"%REPO%\\*;%BASEDIR%\\..\\..\\dist\\solrj-lib\\*;%BASEDIR%\\..\\..\\dist\\solr-core-*;%BASEDIR%\\..\\..\\dist\\solr-solrj-*;%BASEDIR%\\..\\..\\dist\\solr-prometheus-exporter-*\"",
                "-set EXTRA_JVM_ARGUMENTS=-Xmx512m -Dlog4j.configuration=file:%BASEDIR%/conf/log4j.properties",
                "-goto endInit",
                "-",
                "-@REM Reaching here means variables are defined and arguments have been captured",
                "-:endInit",
                "-",
                "-%JAVACMD% %JAVA_OPTS% %EXTRA_JVM_ARGUMENTS% -classpath %CLASSPATH_PREFIX%;%CLASSPATH% -Dapp.name=\"solr-exporter\" -Dapp.repo=\"%REPO%\" -Dbasedir=\"%BASEDIR%\" com.github.mosuka.solr.prometheus.exporter.SolrExporter %CMD_LINE_ARGS%",
                "-if ERRORLEVEL 1 goto error",
                "-goto end",
                "-",
                "-:error",
                "-if \"%OS%\"==\"Windows_NT\" @endlocal",
                "-set ERROR_CODE=1",
                "-",
                "-:end",
                "-@REM set local scope for the variables with windows NT shell",
                "-if \"%OS%\"==\"Windows_NT\" goto endNT",
                "-",
                "-@REM For old DOS remove the set variables from ENV - we assume they were not set",
                "-@REM before we started - at least we don't leave any baggage around",
                "-set CMD_LINE_ARGS=",
                "-goto postExec",
                "-",
                "-:endNT",
                "-@endlocal",
                "-",
                "-:postExec",
                "-",
                "-if \"%FORCE_EXIT_ON_ERROR%\" == \"on\" (",
                "-  if %ERROR_CODE% NEQ 0 exit %ERROR_CODE%",
                "-)",
                "-",
                "-exit /B %ERROR_CODE%",
                "diff --git a/solr/contrib/prometheus-exporter/build.xml b/solr/contrib/prometheus-exporter/build.xml",
                "deleted file mode 100644",
                "index a3adef0a791..00000000000",
                "--- a/solr/contrib/prometheus-exporter/build.xml",
                "+++ /dev/null",
                "@@ -1,28 +0,0 @@",
                "-<?xml version=\"1.0\"?>",
                "-",
                "-<!--",
                "-    Licensed to the Apache Software Foundation (ASF) under one or more",
                "-    contributor license agreements.  See the NOTICE file distributed with",
                "-    this work for additional information regarding copyright ownership.",
                "-    The ASF licenses this file to You under the Apache License, Version 2.0",
                "-    the \"License\"); you may not use this file except in compliance with",
                "-    the License.  You may obtain a copy of the License at",
                "-",
                "-        http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "-    Unless required by applicable law or agreed to in writing, software",
                "-    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-    See the License for the specific language governing permissions and",
                "-    limitations under the License.",
                "- -->",
                "-",
                "-<project name=\"solr-prometheus-exporter\" default=\"default\">",
                "-",
                "-  <description>",
                "-    Prometheus exporter for exposing metrics from Solr using Metrics API and Search API.",
                "-  </description>",
                "-",
                "-  <import file=\"../contrib-build.xml\"/>",
                "-",
                "-</project>",
                "diff --git a/solr/contrib/prometheus-exporter/conf/config.yml b/solr/contrib/prometheus-exporter/conf/config.yml",
                "deleted file mode 100644",
                "index 16610125c34..00000000000",
                "--- a/solr/contrib/prometheus-exporter/conf/config.yml",
                "+++ /dev/null",
                "@@ -1,1840 +0,0 @@",
                "-#",
                "-# Licensed to the Apache Software Foundation (ASF) under one or more",
                "-# contributor license agreements.  See the NOTICE file distributed with",
                "-# this work for additional information regarding copyright ownership.",
                "-# The ASF licenses this file to You under the Apache License, Version 2.0",
                "-# (the \"License\"); you may not use this file except in compliance with",
                "-# the License.  You may obtain a copy of the License at",
                "-#",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "-#",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-#",
                "-",
                "-ping:",
                "-  query:",
                "-    path: /admin/ping",
                "-  jsonQueries:",
                "-    - |-",
                "-      . as $object | $object |",
                "-      (if $object.status == \"OK\" then 1.0 else 0.0 end) as $value |",
                "-      {",
                "-        name         : \"solr_ping\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "-        label_names  : [],",
                "-        label_values : [],",
                "-        value        : $value",
                "-      }",
                "-",
                "-metrics:",
                "-  query:",
                "-    path: /admin/metrics",
                "-    params:",
                "-      - group: 'all'",
                "-      - type: 'all'",
                "-      - prefix: ''",
                "-      - property: ''",
                "-  jsonQueries:",
                "-    ##############################",
                "-    # jetty",
                "-    ##############################",
                "-    # solr_metrics_jetty_response_total",
                "-    - |-",
                "-      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key | startswith(\"org.eclipse.jetty.server.handler.DefaultHandler\")) | select(.key | endswith(\"xx-responses\")) as $object |",
                "-      $object.key | split(\".\") | last | split(\"-\") | first as $status |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jetty_response_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"status\"],",
                "-        label_values : [$status],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jetty_requests_total",
                "-    - |-",
                "-      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key | startswith(\"org.eclipse.jetty.server.handler.DefaultHandler.\")) | select(.key | endswith(\"-requests\")) | select (.value | type == \"object\") as $object |",
                "-      $object.key | split(\".\") | last | split(\"-\") | first as $method |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jetty_requests_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"method\"],",
                "-        label_values : [$method],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jetty_dispatches_total",
                "-    - |-",
                "-      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key == \"org.eclipse.jetty.server.handler.DefaultHandler.dispatches\") as $object |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jetty_dispatches_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [],",
                "-        label_values : [],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    ##############################",
                "-    # jvm",
                "-    ##############################",
                "-    # solr_metrics_jvm_buffers",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"buffers.\")) | select(.key | endswith(\".Count\")) as $object |",
                "-      $object.key | split(\".\")[1] as $pool |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_buffers\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"pool\"],",
                "-        label_values : [$pool],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_buffers_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"buffers.\")) | select(.key | (endswith(\".MemoryUsed\") or endswith(\".TotalCapacity\"))) as $object |",
                "-      $object.key | split(\".\")[1] as $pool |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_buffers_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"pool\", \"item\"],",
                "-        label_values : [$pool, $item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_gc_total",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"gc.\")) | select(.key | endswith(\".count\")) as $object |",
                "-      $object.key | split(\".\")[1] as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_gc_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_gc_seconds_total",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"gc.\")) | select(.key | endswith(\".time\")) as $object |",
                "-      $object.key | split(\".\")[1] as $item |",
                "-      ($object.value / 1000) as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_gc_seconds_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_memory_heap_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.heap.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_memory_heap_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_memory_non_heap_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.non-heap.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_memory_non_heap_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_memory_pools_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.pools.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "-      $object.key | split(\".\")[2] as $space |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_memory_pools_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"space\", \"item\"],",
                "-        label_values : [$space, $item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_memory_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.total.\")) as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_memory_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_os_memory_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.committedVirtualMemorySize\" or .key == \"os.freePhysicalMemorySize\" or .key == \"os.freeSwapSpaceSize\" or .key ==\"os.totalPhysicalMemorySize\" or .key == \"os.totalSwapSpaceSize\") as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_os_memory_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_os_file_descriptors",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.maxFileDescriptorCount\" or .key == \"os.openFileDescriptorCount\") as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_os_file_descriptors\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_os_cpu_load",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.processCpuLoad\" or .key == \"os.systemCpuLoad\") as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_os_cpu_load\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_os_cpu_time_seconds",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.processCpuTime\") as $object |",
                "-      ($object.value / 1000.0) as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_os_cpu_time_seconds\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [\"processCpuTime\"],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_os_load_average",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.systemLoadAverage\") as $object |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_os_load_average\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [\"systemLoadAverage\"],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_threads",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"threads.\")) | select(.key | endswith(\".count\")) as $object |",
                "-      $object.key | split(\".\")[1] as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_threads\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_client_errors_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_client_errors_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_errors_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_errors_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_requests_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".requestTimes\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_requests_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_server_errors_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".serverErrors\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_server_errors_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_timeouts_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".timeouts\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_timeouts_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_time_seconds_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".totalTime\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      ($object.value / 1000) as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_time_seconds_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_cores",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | startswith(\"CONTAINER.cores.\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_cores\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"item\"],",
                "-        label_values : [$category, $item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_core_root_fs_bytes",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | startswith(\"CONTAINER.fs.coreRoot.\")) | select(.key | endswith(\".totalSpace\") or endswith(\".usableSpace\")) as $object |",
                "-      $object.key | split(\".\") as $key_items |",
                "-      $key_items | length as $label_len |",
                "-      $key_items[0] as $category |",
                "-      $key_items[3] as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_core_root_fs_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"item\"],",
                "-        label_values : [$category, $item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_thread_pool_completed_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".completed\")) as $object |",
                "-      $object.key | split(\".\") as $key_items |",
                "-      $key_items | length as $label_len |",
                "-      $key_items[0] as $category |",
                "-      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "-      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_thread_pool_completed_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\", \"executor\"],",
                "-        label_values : [$category, $handler, $executor],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_thread_pool_running",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".running\")) as $object |",
                "-      $object.key | split(\".\") as $key_items |",
                "-      $key_items | length as $label_len |",
                "-      $key_items[0] as $category |",
                "-      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "-      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_thread_pool_running\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\", \"executor\"],",
                "-        label_values : [$category, $handler, $executor],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_thread_pool_submitted_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".submitted\")) as $object |",
                "-      $object.key | split(\".\") as $key_items |",
                "-      $key_items | length as $label_len |",
                "-      $key_items[0] as $category |",
                "-      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "-      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_thread_pool_submitted_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\", \"executor\"],",
                "-        label_values : [$category, $handler, $executor],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_connections",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\"Connections\")) as $object |",
                "-      $object.key | split(\".\") as $key_items |",
                "-      $key_items | length as $label_len |",
                "-      $key_items[0] as $category |",
                "-      $key_items[1] as $handler |",
                "-      $key_items[2] as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_connections\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\", \"item\"],",
                "-        label_values : [$category, $handler, $item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    ##############################",
                "-    # core",
                "-    ##############################",
                "-    # solr_metrics_core_client_errors_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_client_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_client_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_errors_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".errors\")) | select (.value | type == \"object\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_requests_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".requestTimes\")) | select (.value | type == \"object\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_requests_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_requests_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_server_errors_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".serverErrors\")) | select (.value | type == \"object\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_server_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_server_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_timeouts_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".timeouts\")) | select (.value | type == \"object\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_timeouts_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_timeouts_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_time_seconds_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".totalTime\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      ($object.value / 1000) as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_time_seconds_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_time_seconds_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_field_cache_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select (.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"CACHE.core.fieldCache\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.value.entries_count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_field_cache_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\"],",
                "-        label_values: [$category, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_field_cache_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_cache",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $type |",
                "-      $object.value | to_entries | .[] | select(.key == \"lookups\" or .key == \"hits\" or .key == \"size\" or .key == \"evictions\" or .key == \"inserts\") as $target |",
                "-      $target.key as $item |",
                "-      $target.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cache\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cache\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_cache_ratio",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $type |",
                "-      $object.value | to_entries | .[] | select(.key == \"hitratio\") as $target |",
                "-      $target.key as $item |",
                "-      $target.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cache_ratio\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cache_ratio\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_warmup_time_seconds",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $type |",
                "-      $object.value | to_entries | .[] | select(.key == \"warmupTime\") as $target |",
                "-      $target.key as $item |",
                "-      ($target.value / 1000) as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_warmup_time_seconds\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_warmup_time_seconds\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_cumulative_cache_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $type |",
                "-      $object.value | to_entries | .[] | select(.key == \"cumulative_lookups\" or .key == \"cumulative_hits\" or .key == \"cumulative_evictions\" or .key == \"cumulative_inserts\") as $target |",
                "-      $target.key as $item |",
                "-      $target.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cumulative_cache_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cumulative_cache_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_cumulative_cache_ratio",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $type |",
                "-      $object.value | to_entries | .[] | select(.key == \"cumulative_hitratio\") as $target |",
                "-      $target.key as $item |",
                "-      $target.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cumulative_cache_ratio\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cumulative_cache_ratio\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_fs_bytes",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CORE.fs.\")) | select (.key | endswith(\".totalSpace\") or endswith(\".usableSpace\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $item |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_fs_bytes\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"item\"],",
                "-        label_values: [$category, $core, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_fs_bytes\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_highlighter_request_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"HIGHLIGHTER.\")) | select (.key | endswith(\".requests\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $name |",
                "-      $object.key | split(\".\")[2] as $item |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_highlighter_request_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"name\", \"item\"],",
                "-        label_values: [$category, $core, $name, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_highlighter_request_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"name\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $name, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_index_size_bytes",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"INDEX.sizeInBytes\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_index_size_bytes\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\"],",
                "-        label_values: [$category, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_index_size_bytes\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_replication_master",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"REPLICATION./replication.isMaster\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      (if $object.value == true then 1.0 else 0.0 end) as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_replication_master\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_replication_master\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_replication_slave",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"REPLICATION./replication.isSlave\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      (if $object.value == true then 1.0 else 0.0 end) as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_replication_slave\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_replication_slave\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_documents",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"SEARCHER.searcher.deletedDocs\" or .key == \"SEARCHER.searcher.maxDoc\" or .key == \"SEARCHER.searcher.numDocs\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $item |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_documents\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"item\"],",
                "-        label_values: [$category, $core, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_documents\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_adds",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.adds\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_adds\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_adds\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_auto_commits_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.autoCommits\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_auto_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_auto_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_commits_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.commits\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_adds_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeAdds\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_adds_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_adds_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_deletes_by_id_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeDeletesById\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_id_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_id_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_deletes_by_query_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeDeletesByQuery\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_query_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_query_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_errors_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeErrors\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_deletes_by_id",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.deletesById\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_id\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_id\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_deletes_by_query",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.deletesByQuery\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_query\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_query\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_pending_docs",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.docsPending\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_pending_docs\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_pending_docs\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_errors",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.errors\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_errors\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_errors\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_expunge_deletes_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.expungeDeletes\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_expunge_deletes_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_expunge_deletes_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_merges_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.merges\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_merges_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_merges_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_optimizes_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.optimizes\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_optimizes_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_optimizes_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_rollbacks_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.rollbacks\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_rollbacks_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_rollbacks_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_soft_auto_commits_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.softAutoCommits\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_soft_auto_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_soft_auto_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_splits_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.splits\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_splits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_splits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-",
                "-collections:",
                "-  query:",
                "-    path: /admin/collections",
                "-    params:",
                "-      - action: 'CLUSTERSTATUS'",
                "-  jsonQueries:",
                "-    # solr_collections_live_nodes",
                "-    - |-",
                "-      .cluster.live_nodes | length as $value|",
                "-      {",
                "-        name         : \"solr_collections_live_nodes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [],",
                "-        label_values : [],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_pull_replicas",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.pullReplicas | tonumber as $value |",
                "-      {",
                "-        name         : \"solr_collections_pull_replicas\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\"],",
                "-        label_values : [$collection],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_nrt_replicas",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.nrtReplicas | tonumber as $value |",
                "-      {",
                "-        name         : \"solr_collections_nrt_replicas\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\"],",
                "-        label_values : [$collection],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_tlog_replicas",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.tlogReplicas | tonumber as $value |",
                "-      {",
                "-        name         : \"solr_collections_tlog_replicas\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\"],",
                "-        label_values : [$collection],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_shard_state",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "-      $shard_obj.key as $shard |",
                "-      (if $shard_obj.value.state == \"active\" then 1.0 else 0.0 end) as $value |",
                "-      {",
                "-        name         : \"solr_collections_shard_state\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\",\"shard\"],",
                "-        label_values : [$collection,$shard],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_replica_state",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "-      $shard_obj.key as $shard |",
                "-      $shard_obj.value.replicas | to_entries | .[] | . as $replica_obj |",
                "-      $replica_obj.key as $replica_name |",
                "-      $replica_obj.value.core as $core |",
                "-      $core[$collection + \"_\" + $shard + \"_\" | length:] as $replica |",
                "-      $replica_obj.value.base_url as $base_url |",
                "-      $replica_obj.value.node_name as $node_name |",
                "-      $replica_obj.value.type as $type |",
                "-      (if $replica_obj.value.state == \"active\" then 1.0 else 0.0 end) as $value |",
                "-      {",
                "-        name         : \"solr_collections_replica_state\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\", \"shard\", \"replica\", \"replica_name\", \"core\", \"base_url\", \"node_name\", \"type\"],",
                "-        label_values : [$collection, $shard, $replica, $replica_name, $core, $base_url, $node_name, $type],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_shard_leader",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "-      $shard_obj.key as $shard |",
                "-      $shard_obj.value.replicas | to_entries | .[] | . as $replica_obj |",
                "-      $replica_obj.key as $replica_name |",
                "-      $replica_obj.value.core as $core |",
                "-      $core[$collection + \"_\" + $shard + \"_\" | length:] as $replica |",
                "-      $replica_obj.value.base_url as $base_url |",
                "-      $replica_obj.value.node_name as $node_name |",
                "-      $replica_obj.value.type as $type |",
                "-      (if $replica_obj.value.leader == \"true\" then 1.0 else 0.0 end) as $value |",
                "-      {",
                "-        name         : \"solr_collections_shard_leader\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\", \"shard\", \"replica\", \"replica_name\", \"core\", \"base_url\", \"node_name\", \"type\"],",
                "-        label_values : [$collection, $shard, $replica, $replica_name, $core, $base_url, $node_name, $type],",
                "-        value        : $value",
                "-      }",
                "-",
                "-",
                "-#queries:",
                "-#  - query:",
                "-#      collection: collection1",
                "-#      path: /select",
                "-#      params:",
                "-#        - q: \"*:*\"",
                "-#        - start: 0",
                "-#        - rows: 0",
                "-#        - json.facet: |-",
                "-#            {",
                "-#              category: {",
                "-#                type: terms,",
                "-#                field: cat",
                "-#              }",
                "-#            }",
                "-#    jsonQueries:",
                "-#      # solr_facets_category",
                "-#      - |-",
                "-#        .facets.category.buckets[] as $object |",
                "-#        $object.val as $term |",
                "-#        $object.count as $value |",
                "-#        {",
                "-#          name         : \"solr_facets_category\",",
                "-#          type         : \"GAUGE\",",
                "-#          help         : \"Category facets\",",
                "-#          label_names  : [\"term\"],",
                "-#          label_values : [$term],",
                "-#          value        : $value",
                "-#        }",
                "diff --git a/solr/contrib/prometheus-exporter/conf/grafana-solr-dashboard.json b/solr/contrib/prometheus-exporter/conf/grafana-solr-dashboard.json",
                "deleted file mode 100644",
                "index 96fb8184cd0..00000000000",
                "--- a/solr/contrib/prometheus-exporter/conf/grafana-solr-dashboard.json",
                "+++ /dev/null",
                "@@ -1,4465 +0,0 @@",
                "-{",
                "-  \"__inputs\": [",
                "-    {",
                "-      \"name\": \"DS_PROMETHEUS\",",
                "-      \"label\": \"Prometheus\",",
                "-      \"description\": \"\",",
                "-      \"type\": \"datasource\",",
                "-      \"pluginId\": \"prometheus\",",
                "-      \"pluginName\": \"Prometheus\"",
                "-    }",
                "-  ],",
                "-  \"__requires\": [",
                "-    {",
                "-      \"type\": \"grafana\",",
                "-      \"id\": \"grafana\",",
                "-      \"name\": \"Grafana\",",
                "-      \"version\": \"4.6.3\"",
                "-    },",
                "-    {",
                "-      \"type\": \"panel\",",
                "-      \"id\": \"graph\",",
                "-      \"name\": \"Graph\",",
                "-      \"version\": \"\"",
                "-    },",
                "-    {",
                "-      \"type\": \"datasource\",",
                "-      \"id\": \"prometheus\",",
                "-      \"name\": \"Prometheus\",",
                "-      \"version\": \"1.0.0\"",
                "-    }",
                "-  ],",
                "-  \"annotations\": {",
                "-    \"list\": [",
                "-      {",
                "-        \"builtIn\": 1,",
                "-        \"datasource\": \"-- Grafana --\",",
                "-        \"enable\": true,",
                "-        \"hide\": true,",
                "-        \"iconColor\": \"rgba(0, 211, 255, 1)\",",
                "-        \"name\": \"Annotations & Alerts\",",
                "-        \"type\": \"dashboard\"",
                "-      }",
                "-    ]",
                "-  },",
                "-  \"description\": \"Solr Dashboard\",",
                "-  \"editable\": true,",
                "-  \"gnetId\": null,",
                "-  \"graphTooltip\": 0,",
                "-  \"hideControls\": false,",
                "-  \"id\": null,",
                "-  \"links\": [],",
                "-  \"refresh\": \"1m\",",
                "-  \"rows\": [",
                "-    {",
                "-      \"collapse\": false,",
                "-      \"height\": \"250px\",",
                "-      \"panels\": [",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 2,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_jetty_requests_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{method}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Requests\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"description\": \"\",",
                "-          \"fill\": 1,",
                "-          \"id\": 1,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_jetty_response_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{status}}\",",
                "-              \"refId\": \"A\",",
                "-              \"step\": 40",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Response\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 55,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"rightSide\": true,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 12,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_jetty_dispatches_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Dispatches\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        }",
                "-      ],",
                "-      \"repeat\": null,",
                "-      \"repeatIteration\": null,",
                "-      \"repeatRowId\": null,",
                "-      \"showTitle\": true,",
                "-      \"title\": \"Jetty Metrics\",",
                "-      \"titleSize\": \"h3\"",
                "-    },",
                "-    {",
                "-      \"collapse\": false,",
                "-      \"height\": 250,",
                "-      \"panels\": [",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 3,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_jvm_buffers{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{pool}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Buffers\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 4,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_jvm_buffers_bytes{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{pool}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Buffer Size\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"decbytes\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 5,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_jvm_gc_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"GC Count\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 6,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_jvm_gc_seconds_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"GC Time\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"decimals\": null,",
                "-              \"format\": \"s\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 7,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_jvm_memory_heap_bytes{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Heap Size\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"decbytes\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 8,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_jvm_memory_non_heap_bytes{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Non-Heap Size\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"decbytes\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 9,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_jvm_memory_pools_bytes{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{space}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Pool Size\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"decbytes\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 10,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_jvm_memory_bytes{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Memory Size\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"decbytes\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 16,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"rightSide\": true,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 12,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_jvm_threads{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Threads\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        }",
                "-      ],",
                "-      \"repeat\": null,",
                "-      \"repeatIteration\": null,",
                "-      \"repeatRowId\": null,",
                "-      \"showTitle\": true,",
                "-      \"title\": \"JVM Metrics\",",
                "-      \"titleSize\": \"h3\"",
                "-    },",
                "-    {",
                "-      \"collapse\": false,",
                "-      \"height\": 250,",
                "-      \"panels\": [",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 11,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_jvm_os_memory_bytes{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Memory Size\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"decbytes\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 12,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_jvm_os_file_descriptors{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"File Descriptors\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 13,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_jvm_os_cpu_load{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"CPU Load\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"percentunit\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 14,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_jvm_os_cpu_time_seconds{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"CPU Time\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 15,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"rightSide\": true,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 12,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_jvm_os_load_average{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Load Average\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        }",
                "-      ],",
                "-      \"repeat\": null,",
                "-      \"repeatIteration\": null,",
                "-      \"repeatRowId\": null,",
                "-      \"showTitle\": true,",
                "-      \"title\": \"OS Metrics\",",
                "-      \"titleSize\": \"h3\"",
                "-    },",
                "-    {",
                "-      \"collapse\": false,",
                "-      \"height\": 250,",
                "-      \"panels\": [",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 19,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_node_requests_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Requests\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 22,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_node_time_seconds_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Request Time\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 17,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_node_client_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Client Errors\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 20,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_node_server_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Server Errors\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 18,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_node_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Errors\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 21,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_node_timeouts_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Timeouts\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 23,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_node_cores{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Cores\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 24,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_node_core_root_fs_bytes{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Core Root File System\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"decbytes\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 25,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_node_thread_pool_completed_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{handler}} {{executor}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Thread Pool Completed\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 26,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_node_thread_pool_submitted_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{handler}} {{executor}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Thread Pool Submitted\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 27,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"rightSide\": true,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 12,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_node_thread_pool_running{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{handler}} {{executor}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Thread Pool Running\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 28,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"rightSide\": true,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 12,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_node_connections{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}} {{handler}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Connections\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        }",
                "-      ],",
                "-      \"repeat\": null,",
                "-      \"repeatIteration\": null,",
                "-      \"repeatRowId\": null,",
                "-      \"showTitle\": true,",
                "-      \"title\": \"Node Metrics\",",
                "-      \"titleSize\": \"h3\"",
                "-    },",
                "-    {",
                "-      \"collapse\": false,",
                "-      \"height\": 250,",
                "-      \"panels\": [",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 31,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_requests_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Requests\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 34,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_time_seconds_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Request Time\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 29,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_client_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Client Errors\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 32,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_server_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Server Errors\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 30,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Errors\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 33,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_timeouts_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Timeouts\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 35,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_field_cache_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Field Cache\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 36,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_core_searcher_cache{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}} {{type}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Searcher Cache\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 37,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_core_searcher_warmup_time_seconds{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}} {{type}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Searcher Warm Up Time\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 38,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_searcher_cumulative_cache_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}} {{type}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Searcher Cumulative Cache\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 39,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_core_fs_bytes{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"File System\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"decbytes\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 40,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_core_index_size_bytes{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Index Size\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"decbytes\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 41,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"rightSide\": true,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 12,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_core_searcher_documents{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}} {{item}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Searcher Documents\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 42,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"rightSide\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_adds_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Adds\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 46,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"solr_metrics_core_update_handler_pending_docs{base_url=~\\\"$base_url\\\"}\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Pending Docs\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 43,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 4,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_deletes_by_id_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Deletes By ID\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 44,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 4,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_deletes_by_query_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Deletes By Query\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 47,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 4,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_expunge_deletes_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Expunge Deletes\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 48,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_merges_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Merges\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 52,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_splits_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Splits\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 49,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_optimizes_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Optimizes\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 50,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 6,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_rollbacks_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Rollbacks\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 51,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 4,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_soft_auto_commits_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Soft Auto Commits\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 53,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 4,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_auto_commits_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Auto Commits\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 54,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 4,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_commits_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Commits\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        },",
                "-        {",
                "-          \"aliasColors\": {},",
                "-          \"bars\": false,",
                "-          \"dashLength\": 10,",
                "-          \"dashes\": false,",
                "-          \"datasource\": \"${DS_PROMETHEUS}\",",
                "-          \"fill\": 1,",
                "-          \"id\": 45,",
                "-          \"legend\": {",
                "-            \"alignAsTable\": true,",
                "-            \"avg\": false,",
                "-            \"current\": false,",
                "-            \"max\": false,",
                "-            \"min\": false,",
                "-            \"rightSide\": true,",
                "-            \"show\": true,",
                "-            \"total\": false,",
                "-            \"values\": false",
                "-          },",
                "-          \"lines\": true,",
                "-          \"linewidth\": 1,",
                "-          \"links\": [],",
                "-          \"nullPointMode\": \"null\",",
                "-          \"percentage\": false,",
                "-          \"pointradius\": 5,",
                "-          \"points\": false,",
                "-          \"renderer\": \"flot\",",
                "-          \"seriesOverrides\": [],",
                "-          \"spaceLength\": 10,",
                "-          \"span\": 12,",
                "-          \"stack\": false,",
                "-          \"steppedLine\": false,",
                "-          \"targets\": [",
                "-            {",
                "-              \"expr\": \"increase(solr_metrics_core_update_handler_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "-              \"format\": \"time_series\",",
                "-              \"intervalFactor\": 2,",
                "-              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "-              \"refId\": \"A\"",
                "-            }",
                "-          ],",
                "-          \"thresholds\": [],",
                "-          \"timeFrom\": null,",
                "-          \"timeShift\": null,",
                "-          \"title\": \"Update Handler Errors\",",
                "-          \"tooltip\": {",
                "-            \"shared\": true,",
                "-            \"sort\": 0,",
                "-            \"value_type\": \"individual\"",
                "-          },",
                "-          \"type\": \"graph\",",
                "-          \"xaxis\": {",
                "-            \"buckets\": null,",
                "-            \"mode\": \"time\",",
                "-            \"name\": null,",
                "-            \"show\": true,",
                "-            \"values\": []",
                "-          },",
                "-          \"yaxes\": [",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": \"0\",",
                "-              \"show\": true",
                "-            },",
                "-            {",
                "-              \"format\": \"short\",",
                "-              \"label\": null,",
                "-              \"logBase\": 1,",
                "-              \"max\": null,",
                "-              \"min\": null,",
                "-              \"show\": true",
                "-            }",
                "-          ]",
                "-        }",
                "-      ],",
                "-      \"repeat\": null,",
                "-      \"repeatIteration\": null,",
                "-      \"repeatRowId\": null,",
                "-      \"showTitle\": true,",
                "-      \"title\": \"Core Metrics\",",
                "-      \"titleSize\": \"h3\"",
                "-    }",
                "-  ],",
                "-  \"schemaVersion\": 14,",
                "-  \"style\": \"dark\",",
                "-  \"tags\": [],",
                "-  \"templating\": {",
                "-    \"list\": [",
                "-      {",
                "-        \"allValue\": \".*\",",
                "-        \"current\": {},",
                "-        \"datasource\": \"${DS_PROMETHEUS}\",",
                "-        \"hide\": 0,",
                "-        \"includeAll\": true,",
                "-        \"label\": null,",
                "-        \"multi\": true,",
                "-        \"name\": \"zk_host\",",
                "-        \"options\": [],",
                "-        \"query\": \"label_values(solr_ping{zk_host=~\\\".+\\\"},zk_host)\",",
                "-        \"refresh\": 1,",
                "-        \"regex\": \"/(.+)/\",",
                "-        \"sort\": 1,",
                "-        \"tagValuesQuery\": \"\",",
                "-        \"tags\": [],",
                "-        \"tagsQuery\": \"\",",
                "-        \"type\": \"query\",",
                "-        \"useTags\": false",
                "-      },",
                "-      {",
                "-        \"allValue\": \".*\",",
                "-        \"current\": {},",
                "-        \"datasource\": \"${DS_PROMETHEUS}\",",
                "-        \"hide\": 0,",
                "-        \"includeAll\": true,",
                "-        \"label\": null,",
                "-        \"multi\": true,",
                "-        \"name\": \"collection\",",
                "-        \"options\": [],",
                "-        \"query\": \"label_values(solr_ping{zk_host=\\\"$zk_host\\\",collection=~\\\".+\\\"},collection)\",",
                "-        \"refresh\": 1,",
                "-        \"regex\": \"/(.+)/\",",
                "-        \"sort\": 1,",
                "-        \"tagValuesQuery\": \"\",",
                "-        \"tags\": [],",
                "-        \"tagsQuery\": \"\",",
                "-        \"type\": \"query\",",
                "-        \"useTags\": false",
                "-      },",
                "-      {",
                "-        \"allValue\": \".*\",",
                "-        \"current\": {},",
                "-        \"datasource\": \"${DS_PROMETHEUS}\",",
                "-        \"hide\": 0,",
                "-        \"includeAll\": true,",
                "-        \"label\": null,",
                "-        \"multi\": true,",
                "-        \"name\": \"shard\",",
                "-        \"options\": [],",
                "-        \"query\": \"label_values(solr_collections_shard_state{zk_host=\\\"$zk_host\\\",collection=\\\"$collection\\\",shard=~\\\".+\\\"},shard)\",",
                "-        \"refresh\": 1,",
                "-        \"regex\": \"/(.+)/\",",
                "-        \"sort\": 1,",
                "-        \"tagValuesQuery\": \"\",",
                "-        \"tags\": [],",
                "-        \"tagsQuery\": \"\",",
                "-        \"type\": \"query\",",
                "-        \"useTags\": false",
                "-      },",
                "-      {",
                "-        \"allValue\": \".*\",",
                "-        \"current\": {},",
                "-        \"datasource\": \"${DS_PROMETHEUS}\",",
                "-        \"hide\": 0,",
                "-        \"includeAll\": true,",
                "-        \"label\": null,",
                "-        \"multi\": true,",
                "-        \"name\": \"replica\",",
                "-        \"options\": [],",
                "-        \"query\": \"label_values(solr_collections_replica_state{zk_host=\\\"$zk_host\\\",collection=\\\"$collection\\\",shard=\\\"$shard\\\",replica=\\\".+\\\"},replica)\",",
                "-        \"refresh\": 1,",
                "-        \"regex\": \"/(.+)/\",",
                "-        \"sort\": 1,",
                "-        \"tagValuesQuery\": \"\",",
                "-        \"tags\": [],",
                "-        \"tagsQuery\": \"\",",
                "-        \"type\": \"query\",",
                "-        \"useTags\": false",
                "-      },",
                "-      {",
                "-        \"allValue\": \".*\",",
                "-        \"current\": {},",
                "-        \"datasource\": \"${DS_PROMETHEUS}\",",
                "-        \"hide\": 0,",
                "-        \"includeAll\": true,",
                "-        \"label\": null,",
                "-        \"multi\": true,",
                "-        \"name\": \"base_url\",",
                "-        \"options\": [],",
                "-        \"query\": \"label_values(solr_ping{base_url=~\\\".+\\\"},base_url)\",",
                "-        \"refresh\": 1,",
                "-        \"regex\": \"/(.+)/\",",
                "-        \"sort\": 1,",
                "-        \"tagValuesQuery\": \"\",",
                "-        \"tags\": [],",
                "-        \"tagsQuery\": \"\",",
                "-        \"type\": \"query\",",
                "-        \"useTags\": false",
                "-      },",
                "-      {",
                "-        \"allValue\": \".*\",",
                "-        \"current\": {},",
                "-        \"datasource\": \"${DS_PROMETHEUS}\",",
                "-        \"hide\": 0,",
                "-        \"includeAll\": true,",
                "-        \"label\": null,",
                "-        \"multi\": true,",
                "-        \"name\": \"core\",",
                "-        \"options\": [],",
                "-        \"query\": \"label_values(solr_ping{base_url=~\\\"$base_url\\\"},core)\",",
                "-        \"refresh\": 1,",
                "-        \"regex\": \"/(.+)/\",",
                "-        \"sort\": 1,",
                "-        \"tagValuesQuery\": \"\",",
                "-        \"tags\": [],",
                "-        \"tagsQuery\": \"\",",
                "-        \"type\": \"query\",",
                "-        \"useTags\": false",
                "-      }",
                "-    ]",
                "-  },",
                "-  \"time\": {",
                "-    \"from\": \"now-30m\",",
                "-    \"to\": \"now\"",
                "-  },",
                "-  \"timepicker\": {",
                "-    \"refresh_intervals\": [",
                "-      \"5s\",",
                "-      \"10s\",",
                "-      \"30s\",",
                "-      \"1m\",",
                "-      \"5m\",",
                "-      \"15m\",",
                "-      \"30m\",",
                "-      \"1h\",",
                "-      \"2h\",",
                "-      \"1d\"",
                "-    ],",
                "-    \"time_options\": [",
                "-      \"5m\",",
                "-      \"15m\",",
                "-      \"1h\",",
                "-      \"6h\",",
                "-      \"12h\",",
                "-      \"24h\",",
                "-      \"2d\",",
                "-      \"7d\",",
                "-      \"30d\"",
                "-    ]",
                "-  },",
                "-  \"timezone\": \"browser\",",
                "-  \"title\": \"Solr Dashboard\",",
                "-  \"version\": 3",
                "-}",
                "\\ No newline at end of file",
                "diff --git a/solr/contrib/prometheus-exporter/conf/log4j.properties b/solr/contrib/prometheus-exporter/conf/log4j.properties",
                "deleted file mode 100644",
                "index 5dd689960d6..00000000000",
                "--- a/solr/contrib/prometheus-exporter/conf/log4j.properties",
                "+++ /dev/null",
                "@@ -1,22 +0,0 @@",
                "-#",
                "-# Licensed to the Apache Software Foundation (ASF) under one or more",
                "-# contributor license agreements.  See the NOTICE file distributed with",
                "-# this work for additional information regarding copyright ownership.",
                "-# The ASF licenses this file to You under the Apache License, Version 2.0",
                "-# (the \"License\"); you may not use this file except in compliance with",
                "-# the License.  You may obtain a copy of the License at",
                "-#",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "-#",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-#",
                "-",
                "-log4j.rootLogger=INFO, stdout",
                "-log4j.appender.stdout=org.apache.log4j.ConsoleAppender",
                "-log4j.appender.stdout.Target=System.out",
                "-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout",
                "-log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd'T'HH:mm:ss.SSS} %-5p [%c] - %m%n",
                "diff --git a/solr/contrib/prometheus-exporter/ivy.xml b/solr/contrib/prometheus-exporter/ivy.xml",
                "deleted file mode 100644",
                "index 8ad3e21e7ad..00000000000",
                "--- a/solr/contrib/prometheus-exporter/ivy.xml",
                "+++ /dev/null",
                "@@ -1,41 +0,0 @@",
                "-<!--",
                "-   Licensed to the Apache Software Foundation (ASF) under one",
                "-   or more contributor license agreements.  See the NOTICE file",
                "-   distributed with this work for additional information",
                "-   regarding copyright ownership.  The ASF licenses this file",
                "-   to you under the Apache License, Version 2.0 (the",
                "-   \"License\"); you may not use this file except in compliance",
                "-   with the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "-   Unless required by applicable law or agreed to in writing,",
                "-   software distributed under the License is distributed on an",
                "-   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "-   KIND, either express or implied.  See the License for the",
                "-   specific language governing permissions and limitations",
                "-   under the License.    ",
                "--->",
                "-<ivy-module version=\"2.0\">",
                "-  <info organisation=\"org.apache.solr\" module=\"prometheus\"/>",
                "-  <configurations defaultconfmapping=\"compile->master;test->master\">",
                "-    <conf name=\"compile\" transitive=\"false\"/>",
                "-    <conf name=\"test\" transitive=\"false\"/>",
                "-  </configurations>",
                "-  <dependencies>",
                "-    <dependency org=\"io.prometheus\" name=\"simpleclient\" rev=\"${/io.prometheus/simpleclient}\" conf=\"compile\"/>",
                "-    <dependency org=\"io.prometheus\" name=\"simpleclient_common\" rev=\"${/io.prometheus/simpleclient_common}\" conf=\"compile\"/>",
                "-    <dependency org=\"io.prometheus\" name=\"simpleclient_httpserver\" rev=\"${/io.prometheus/simpleclient_httpserver}\" conf=\"compile\"/>",
                "-    <dependency org=\"org.yaml\" name=\"snakeyaml\" rev=\"${/org.yaml/snakeyaml}\" conf=\"compile\"/>",
                "-    <dependency org=\"com.fasterxml.jackson.core\" name=\"jackson-core\" rev=\"${/com.fasterxml.jackson.core/jackson-core}\" conf=\"compile\"/>",
                "-    <dependency org=\"com.fasterxml.jackson.core\" name=\"jackson-databind\" rev=\"${/com.fasterxml.jackson.core/jackson-databind}\" conf=\"compile\"/>",
                "-    <dependency org=\"com.fasterxml.jackson.core\" name=\"jackson-annotations\" rev=\"${/com.fasterxml.jackson.core/jackson-annotations}\" conf=\"compile\"/>",
                "-    <dependency org=\"net.thisptr\" name=\"jackson-jq\" rev=\"${/net.thisptr/jackson-jq}\" conf=\"compile\"/>",
                "-    <dependency org=\"net.sourceforge.argparse4j\" name=\"argparse4j\" rev=\"${/net.sourceforge.argparse4j/argparse4j}\" conf=\"compile\"/>",
                "-    <dependency org=\"org.slf4j\" name=\"slf4j-api\" rev=\"${/org.slf4j/slf4j-api}\" conf=\"compile\"/>",
                "-    <dependency org=\"org.slf4j\" name=\"slf4j-log4j12\" rev=\"${/org.slf4j/slf4j-log4j12}\" conf=\"compile\"/>",
                "-    <dependency org=\"log4j\" name=\"log4j\" rev=\"${/log4j/log4j}\" conf=\"compile\"/>",
                "-",
                "-    <exclude org=\"*\" ext=\"*\" matcher=\"regexp\" type=\"${ivy.exclude.types}\"/>",
                "-  </dependencies>",
                "-</ivy-module>",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "deleted file mode 100644",
                "index 2aa706ea05e..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "+++ /dev/null",
                "@@ -1,405 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.solr.prometheus.collector;",
                "-",
                "-import com.fasterxml.jackson.databind.JsonNode;",
                "-import com.fasterxml.jackson.databind.ObjectMapper;",
                "-import org.apache.solr.prometheus.collector.config.SolrCollectorConfig;",
                "-import org.apache.solr.prometheus.scraper.SolrScraper;",
                "-import org.apache.solr.prometheus.scraper.config.SolrScraperConfig;",
                "-import io.prometheus.client.Collector;",
                "-import org.apache.solr.client.solrj.SolrClient;",
                "-import org.apache.solr.client.solrj.SolrServerException;",
                "-import org.apache.solr.client.solrj.impl.CloudSolrClient;",
                "-import org.apache.solr.client.solrj.impl.HttpSolrClient;",
                "-import org.apache.solr.client.solrj.impl.NoOpResponseParser;",
                "-import org.apache.solr.client.solrj.request.CollectionAdminRequest;",
                "-import org.apache.solr.client.solrj.request.CoreAdminRequest;",
                "-import org.apache.solr.common.params.CoreAdminParams;",
                "-import org.apache.solr.common.util.NamedList;",
                "-import org.apache.solr.common.util.ExecutorUtil;",
                "-import org.apache.solr.util.DefaultSolrThreadFactory;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-",
                "-import java.lang.invoke.MethodHandles;",
                "-import java.io.IOException;",
                "-import java.util.ArrayList;",
                "-import java.util.Arrays;",
                "-import java.util.Collections;",
                "-import java.util.Iterator;",
                "-import java.util.LinkedHashMap;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-import java.util.concurrent.ExecutionException;",
                "-import java.util.concurrent.ExecutorService;",
                "-import java.util.concurrent.Future;",
                "-import java.util.concurrent.TimeoutException;",
                "-import java.util.concurrent.TimeUnit;",
                "-",
                "-/**",
                "- * SolrCollector",
                "- */",
                "-public class SolrCollector extends Collector implements Collector.Describable {",
                "-  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "-",
                "-  private SolrClient solrClient;",
                "-  private SolrCollectorConfig config = new SolrCollectorConfig();",
                "-  private int numThreads;",
                "-",
                "-  private static ObjectMapper om = new ObjectMapper();",
                "-",
                "-  /**",
                "-   * Constructor.",
                "-   */",
                "-  public SolrCollector(SolrClient solrClient, SolrCollectorConfig config, int numThreads) {",
                "-    this.solrClient = solrClient;",
                "-    this.config = config;",
                "-    this.numThreads = numThreads;",
                "-  }",
                "-",
                "-  /**",
                "-   * Describe scrape status.",
                "-   */",
                "-  public List<Collector.MetricFamilySamples> describe() {",
                "-    List<MetricFamilySamples> metricFamilies = new ArrayList<>();",
                "-    metricFamilies.add(new MetricFamilySamples(\"solr_exporter_duration_seconds\", Type.GAUGE, \"Time this Solr scrape took, in seconds.\", new ArrayList<>()));",
                "-    return metricFamilies;",
                "-  }",
                "-",
                "-  /**",
                "-   * Collect samples.",
                "-   */",
                "-  public List<MetricFamilySamples> collect() {",
                "-    // start time of scraping.",
                "-    long startTime = System.nanoTime();",
                "-",
                "-    Map<String, MetricFamilySamples> metricFamilySamplesMap = new LinkedHashMap<>();",
                "-",
                "-    ExecutorService executorService = ExecutorUtil.newMDCAwareFixedThreadPool(numThreads, new DefaultSolrThreadFactory(\"solr-exporter\"));",
                "-    ",
                "-    List<Future<Map<String, MetricFamilySamples>>> futureList = new ArrayList<>();",
                "-",
                "-    try {",
                "-      // Ping",
                "-      if (config.getPing() != null) {",
                "-        if (solrClient instanceof CloudSolrClient) {",
                "-          List<HttpSolrClient> httpSolrClients = new ArrayList<>();",
                "-          try {",
                "-            httpSolrClients = getHttpSolrClients((CloudSolrClient) solrClient);",
                "-            for (HttpSolrClient httpSolrClient : httpSolrClients) {",
                "-              try {",
                "-                List<String> cores = getCores(httpSolrClient);",
                "-                for (String core : cores) {",
                "-                  SolrScraperConfig pingConfig;",
                "-                  try {",
                "-                    pingConfig = config.getPing().clone();",
                "-                  } catch (CloneNotSupportedException e) {",
                "-                    logger.error(e.getMessage());",
                "-                    continue;",
                "-                  }",
                "-",
                "-                  pingConfig.getQuery().setCore(core);",
                "-",
                "-                  SolrScraper scraper = new SolrScraper(httpSolrClient, pingConfig, Arrays.asList(\"zk_host\"), Arrays.asList(((CloudSolrClient) solrClient).getZkHost()));",
                "-                  Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "-                  futureList.add(future);",
                "-                }",
                "-              } catch (SolrServerException | IOException e) {",
                "-                logger.error(e.getMessage());",
                "-              }",
                "-            }",
                "-",
                "-            // get future",
                "-            for (Future<Map<String, MetricFamilySamples>> future : futureList) {",
                "-              try {",
                "-                Map<String, MetricFamilySamples> m = future.get(60, TimeUnit.SECONDS);",
                "-                mergeMetrics(metricFamilySamplesMap, m);",
                "-              } catch (InterruptedException | ExecutionException | TimeoutException e) {",
                "-                logger.error(e.getMessage());",
                "-              }",
                "-            }",
                "-          } catch (SolrServerException | IOException e) {",
                "-            logger.error(e.getMessage());",
                "-          } finally {",
                "-            for (HttpSolrClient httpSolrClient : httpSolrClients) {",
                "-              try {",
                "-                httpSolrClient.close();",
                "-              } catch (IOException e) {",
                "-                logger.error(e.getMessage());",
                "-              }",
                "-            }",
                "-          }",
                "-",
                "-          try {",
                "-            List<String> collections = getCollections((CloudSolrClient) solrClient);",
                "-            for (String collection : collections) {",
                "-              SolrScraperConfig pingConfig;",
                "-              try {",
                "-                pingConfig = config.getPing().clone();",
                "-              } catch (CloneNotSupportedException e) {",
                "-                logger.error(e.getMessage());",
                "-                continue;",
                "-              }",
                "-",
                "-              pingConfig.getQuery().setCollection(collection);",
                "-              LinkedHashMap<String, String> distrib = new LinkedHashMap<>();",
                "-              distrib.put(\"distrib\", \"true\");",
                "-              pingConfig.getQuery().setParams(Collections.singletonList(distrib));",
                "-",
                "-              SolrScraper scraper = new SolrScraper(solrClient, pingConfig);",
                "-              Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "-              futureList.add(future);",
                "-            }",
                "-          } catch (SolrServerException | IOException e) {",
                "-            logger.error(e.getMessage());",
                "-          }",
                "-        } else {",
                "-          try {",
                "-            List<String> cores = getCores((HttpSolrClient) solrClient);",
                "-            for (String core : cores) {",
                "-              SolrScraperConfig pingConfig = new SolrScraperConfig();",
                "-              pingConfig.setQuery(config.getPing().getQuery());",
                "-              pingConfig.getQuery().setCore(core);",
                "-",
                "-              pingConfig.setJsonQueries(config.getPing().getJsonQueries());",
                "-",
                "-              SolrScraper scraper = new SolrScraper(solrClient, pingConfig);",
                "-              Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "-              futureList.add(future);",
                "-            }",
                "-          } catch (SolrServerException | IOException e) {",
                "-            logger.error(e.getMessage());",
                "-          }",
                "-        }",
                "-      }",
                "-",
                "-      // Metrics",
                "-      if (config.getMetrics() != null) {",
                "-        if (solrClient instanceof CloudSolrClient) {",
                "-          List<HttpSolrClient> httpSolrClients = new ArrayList<>();",
                "-          try {",
                "-            httpSolrClients = getHttpSolrClients((CloudSolrClient) solrClient);",
                "-            for (HttpSolrClient httpSolrClient : httpSolrClients) {",
                "-              SolrScraper scraper = new SolrScraper(httpSolrClient, config.getMetrics(), Arrays.asList(\"zk_host\"), Arrays.asList(((CloudSolrClient) solrClient).getZkHost()));",
                "-              Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "-              futureList.add(future);",
                "-            }",
                "-",
                "-            // get future",
                "-            for (Future<Map<String, MetricFamilySamples>> future : futureList) {",
                "-              try {",
                "-                Map<String, MetricFamilySamples> m = future.get(60, TimeUnit.SECONDS);",
                "-                mergeMetrics(metricFamilySamplesMap, m);",
                "-              } catch (InterruptedException | ExecutionException | TimeoutException e) {",
                "-                logger.error(e.getMessage());",
                "-              }",
                "-            }",
                "-          } catch (SolrServerException | IOException e) {",
                "-            logger.error(e.getMessage());",
                "-          } finally {",
                "-            for (HttpSolrClient httpSolrClient : httpSolrClients) {",
                "-              try {",
                "-                httpSolrClient.close();",
                "-              } catch (IOException e) {",
                "-                logger.error(e.getMessage());",
                "-              }",
                "-            }",
                "-          }",
                "-        } else {",
                "-          SolrScraper scraper = new SolrScraper(solrClient, config.getMetrics());",
                "-          Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "-          futureList.add(future);",
                "-        }",
                "-      }",
                "-",
                "-      // Collections",
                "-      if (config.getCollections() != null) {",
                "-        if (solrClient instanceof CloudSolrClient) {",
                "-          SolrScraper scraper = new SolrScraper(solrClient, config.getCollections());",
                "-          Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "-          futureList.add(future);",
                "-        }",
                "-      }",
                "-",
                "-      // Query",
                "-      if (config.getQueries() != null) {",
                "-        for (SolrScraperConfig c : config.getQueries()) {",
                "-          SolrScraper scraper = new SolrScraper(solrClient, c);",
                "-          Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "-          futureList.add(future);",
                "-        }",
                "-      }",
                "-",
                "-      // get future",
                "-      for (Future<Map<String, MetricFamilySamples>> future : futureList) {",
                "-        try {",
                "-          Map<String, MetricFamilySamples> m = future.get(60, TimeUnit.SECONDS);",
                "-          mergeMetrics(metricFamilySamplesMap, m);",
                "-        } catch (InterruptedException | ExecutionException | TimeoutException e) {",
                "-          logger.error(e.getMessage());",
                "-        }",
                "-      }",
                "-    } finally {",
                "-      executorService.shutdown();",
                "-    }",
                "-",
                "-    // return value",
                "-    List<MetricFamilySamples> metricFamiliesSamplesList = new ArrayList<>();",
                "-",
                "-    // add solr metrics",
                "-    for (String gaugeMetricName : metricFamilySamplesMap.keySet()) {",
                "-      MetricFamilySamples metricFamilySamples = metricFamilySamplesMap.get(gaugeMetricName);",
                "-      if (metricFamilySamples.samples.size() > 0) {",
                "-        metricFamiliesSamplesList.add(metricFamilySamples);",
                "-      }",
                "-    }",
                "-",
                "-    // add scrape duration metric",
                "-    List<MetricFamilySamples.Sample> durationSample = new ArrayList<>();",
                "-    durationSample.add(new MetricFamilySamples.Sample(\"solr_exporter_duration_seconds\", new ArrayList<>(), new ArrayList<>(), (System.nanoTime() - startTime) / 1.0E9));",
                "-    metricFamiliesSamplesList.add(new MetricFamilySamples(\"solr_exporter_duration_seconds\", Type.GAUGE, \"Time this Solr exporter took, in seconds.\", durationSample));",
                "-",
                "-    return metricFamiliesSamplesList;",
                "-  }",
                "-",
                "-  /**",
                "-   * Merge metrics.",
                "-   */",
                "-  private Map<String, MetricFamilySamples> mergeMetrics(Map<String, MetricFamilySamples> metrics1, Map<String, MetricFamilySamples> metrics2) {",
                "-    // marge MetricFamilySamples",
                "-    for (String k : metrics2.keySet()) {",
                "-      if (metrics1.containsKey(k)) {",
                "-        for (MetricFamilySamples.Sample sample : metrics2.get(k).samples) {",
                "-          if (!metrics1.get(k).samples.contains(sample)) {",
                "-            metrics1.get(k).samples.add(sample);",
                "-          }",
                "-        }",
                "-      } else {",
                "-        metrics1.put(k, metrics2.get(k));",
                "-      }",
                "-    }",
                "-",
                "-    return metrics1;",
                "-  }",
                "-",
                "-",
                "-  /**",
                "-   * Get target cores via CoreAdminAPI.",
                "-   */",
                "-  public static List<String> getCores(HttpSolrClient httpSolrClient) throws SolrServerException, IOException {",
                "-    List<String> cores = new ArrayList<>();",
                "-",
                "-    NoOpResponseParser responseParser = new NoOpResponseParser();",
                "-    responseParser.setWriterType(\"json\");",
                "-",
                "-    httpSolrClient.setParser(responseParser);",
                "-",
                "-    CoreAdminRequest coreAdminRequest = new CoreAdminRequest();",
                "-    coreAdminRequest.setAction(CoreAdminParams.CoreAdminAction.STATUS);",
                "-    coreAdminRequest.setIndexInfoNeeded(false);",
                "-",
                "-    NamedList<Object> coreAdminResponse = httpSolrClient.request(coreAdminRequest);",
                "-",
                "-    JsonNode statusJsonNode = om.readTree((String) coreAdminResponse.get(\"response\")).get(\"status\");",
                "-",
                "-    for (Iterator<JsonNode> i = statusJsonNode.iterator(); i.hasNext(); ) {",
                "-      String core = i.next().get(\"name\").textValue();",
                "-      if (!cores.contains(core)) {",
                "-        cores.add(core);",
                "-      }",
                "-    }",
                "-",
                "-    return cores;",
                "-  }",
                "-",
                "-  /**",
                "-   * Get target cores via CollectionsAPI.",
                "-   */",
                "-  public static List<String> getCollections(CloudSolrClient cloudSolrClient) throws SolrServerException, IOException {",
                "-    List<String> collections = new ArrayList<>();",
                "-",
                "-    NoOpResponseParser responseParser = new NoOpResponseParser();",
                "-    responseParser.setWriterType(\"json\");",
                "-",
                "-    cloudSolrClient.setParser(responseParser);",
                "-",
                "-    CollectionAdminRequest collectionAdminRequest = new CollectionAdminRequest.List();",
                "-",
                "-    NamedList<Object> collectionAdminResponse = cloudSolrClient.request(collectionAdminRequest);",
                "-",
                "-    JsonNode collectionsJsonNode = om.readTree((String) collectionAdminResponse.get(\"response\")).get(\"collections\");",
                "-",
                "-    for (Iterator<JsonNode> i = collectionsJsonNode.iterator(); i.hasNext(); ) {",
                "-      String collection = i.next().textValue();",
                "-      if (!collections.contains(collection)) {",
                "-        collections.add(collection);",
                "-      }",
                "-    }",
                "-",
                "-    return collections;",
                "-  }",
                "-",
                "-  /**",
                "-   * Get base urls via CollectionsAPI.",
                "-   */",
                "-  private List<String> getBaseUrls(CloudSolrClient cloudSolrClient) throws SolrServerException, IOException {",
                "-    List<String> baseUrls = new ArrayList<>();",
                "-",
                "-    NoOpResponseParser responseParser = new NoOpResponseParser();",
                "-    responseParser.setWriterType(\"json\");",
                "-",
                "-    cloudSolrClient.setParser(responseParser);",
                "-",
                "-    CollectionAdminRequest collectionAdminRequest = new CollectionAdminRequest.ClusterStatus();",
                "-",
                "-    NamedList<Object> collectionAdminResponse = cloudSolrClient.request(collectionAdminRequest);",
                "-",
                "-    List<JsonNode> baseUrlJsonNode = om.readTree((String) collectionAdminResponse.get(\"response\")).findValues(\"base_url\");",
                "-",
                "-    for (Iterator<JsonNode> i = baseUrlJsonNode.iterator(); i.hasNext(); ) {",
                "-      String baseUrl = i.next().textValue();",
                "-      if (!baseUrls.contains(baseUrl)) {",
                "-        baseUrls.add(baseUrl);",
                "-      }",
                "-    }",
                "-",
                "-    return baseUrls;",
                "-  }",
                "-",
                "-  /**",
                "-   * Get HTTP Solr Clients",
                "-   */",
                "-  private List<HttpSolrClient> getHttpSolrClients(CloudSolrClient cloudSolrClient) throws SolrServerException, IOException {",
                "-    List<HttpSolrClient> solrClients = new ArrayList<>();",
                "-",
                "-    for (String baseUrl : getBaseUrls(cloudSolrClient)) {",
                "-      NoOpResponseParser responseParser = new NoOpResponseParser();",
                "-      responseParser.setWriterType(\"json\");",
                "-",
                "-      HttpSolrClient.Builder builder = new HttpSolrClient.Builder();",
                "-      builder.withBaseSolrUrl(baseUrl);",
                "-",
                "-      HttpSolrClient httpSolrClient = builder.build();",
                "-      httpSolrClient.setParser(responseParser);",
                "-",
                "-      solrClients.add(httpSolrClient);",
                "-    }",
                "-",
                "-    return solrClients;",
                "-  }",
                "-}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/SolrCollectorConfig.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/SolrCollectorConfig.java",
                "deleted file mode 100644",
                "index 834480259bd..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/SolrCollectorConfig.java",
                "+++ /dev/null",
                "@@ -1,64 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.solr.prometheus.collector.config;",
                "-",
                "-import org.apache.solr.prometheus.scraper.config.SolrScraperConfig;",
                "-",
                "-import java.util.ArrayList;",
                "-import java.util.List;",
                "-",
                "-/**",
                "- * SolrCollectorConfig",
                "- */",
                "-public class SolrCollectorConfig {",
                "-  private SolrScraperConfig ping = new SolrScraperConfig();",
                "-  private SolrScraperConfig metrics = new SolrScraperConfig();",
                "-  private SolrScraperConfig collections = new SolrScraperConfig();",
                "-  private List<SolrScraperConfig> queries = new ArrayList<>();",
                "-",
                "-  public SolrScraperConfig getPing() {",
                "-    return ping;",
                "-  }",
                "-",
                "-  public void setPing(SolrScraperConfig ping) {",
                "-    this.ping = ping;",
                "-  }",
                "-",
                "-  public SolrScraperConfig getMetrics() {",
                "-    return metrics;",
                "-  }",
                "-",
                "-  public void setMetrics(SolrScraperConfig metrics) {",
                "-    this.metrics = metrics;",
                "-  }",
                "-",
                "-  public SolrScraperConfig getCollections() {",
                "-    return collections;",
                "-  }",
                "-",
                "-  public void setCollections(SolrScraperConfig collections) {",
                "-    this.collections = collections;",
                "-  }",
                "-",
                "-  public List<SolrScraperConfig> getQueries() {",
                "-    return queries;",
                "-  }",
                "-",
                "-  public void setQueries(List<SolrScraperConfig> queries) {",
                "-    this.queries = queries;",
                "-  }",
                "-}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/package-info.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/package-info.java",
                "deleted file mode 100644",
                "index c688ecb39ba..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/package-info.java",
                "+++ /dev/null",
                "@@ -1,21 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-/** ",
                "- * Solr metrics collector config.",
                "- */",
                "-package org.apache.solr.prometheus.collector.config;",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/package-info.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/package-info.java",
                "deleted file mode 100644",
                "index 63b17fe8c3b..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/package-info.java",
                "+++ /dev/null",
                "@@ -1,21 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-/** ",
                "- * Solr metrics collector.",
                "- */",
                "-package org.apache.solr.prometheus.collector;",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "deleted file mode 100644",
                "index 13abaac98b4..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "+++ /dev/null",
                "@@ -1,255 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.solr.prometheus.exporter;",
                "-",
                "-import org.apache.solr.prometheus.collector.SolrCollector;",
                "-import org.apache.solr.prometheus.collector.config.SolrCollectorConfig;",
                "-import io.prometheus.client.CollectorRegistry;",
                "-import io.prometheus.client.Counter;",
                "-import io.prometheus.client.exporter.HTTPServer;",
                "-import net.sourceforge.argparse4j.ArgumentParsers;",
                "-import net.sourceforge.argparse4j.inf.ArgumentParser;",
                "-import net.sourceforge.argparse4j.inf.ArgumentParserException;",
                "-import net.sourceforge.argparse4j.inf.Namespace;",
                "-import org.apache.solr.client.solrj.SolrClient;",
                "-import org.apache.solr.client.solrj.impl.CloudSolrClient;",
                "-import org.apache.solr.client.solrj.impl.HttpSolrClient;",
                "-import org.apache.solr.client.solrj.impl.NoOpResponseParser;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-import org.yaml.snakeyaml.Yaml;",
                "-",
                "-import java.lang.invoke.MethodHandles;",
                "-import javax.management.MalformedObjectNameException;",
                "-import java.io.File;",
                "-import java.io.BufferedReader;",
                "-import java.io.FileInputStream;",
                "-import java.io.InputStreamReader;",
                "-import java.io.IOException;",
                "-import java.net.InetSocketAddress;",
                "-import java.util.ArrayList;",
                "-import java.util.List;",
                "-import java.util.regex.Matcher;",
                "-import java.util.regex.Pattern;",
                "-",
                "-/**",
                "- * SolrExporter",
                "- */",
                "-public class SolrExporter {",
                "-  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "-",
                "-  private static final String[] ARG_PORT_FLAGS = { \"-p\", \"--port\" };",
                "-  private static final String ARG_PORT_METAVAR = \"PORT\";",
                "-  private static final String ARG_PORT_DEST = \"port\";",
                "-  private static final Integer ARG_PORT_DEFAULT = 9983;",
                "-  private static final String ARG_PORT_HELP = \"solr-exporter listen port\";",
                "-",
                "-  private static final String[] ARG_BASE_URL_FLAGS = { \"-b\", \"--baseurl\" };",
                "-  private static final String ARG_BASE_URL_METAVAR = \"BASE_URL\";",
                "-  private static final String ARG_BASE_URL_DEST = \"baseUrl\";",
                "-  private static final String ARG_BASE_URL_DEFAULT = \"\";",
                "-  private static final String ARG_BASE_URL_HELP = \"specify Solr base URL when connecting to Solr in standalone mode (for example 'http://localhost:8983/solr')\";",
                "-",
                "-  private static final String[] ARG_ZK_HOST_FLAGS = { \"-z\", \"--zkhost\" };",
                "-  private static final String ARG_ZK_HOST_METAVAR = \"ZK_HOST\";",
                "-  private static final String ARG_ZK_HOST_DEST = \"zkHost\";",
                "-  private static final String ARG_ZK_HOST_DEFAULT = \"\";",
                "-  private static final String ARG_ZK_HOST_HELP = \"specify ZooKeeper connection string when connecting to Solr in SolrCloud mode (for example 'localhost:2181/solr')\";",
                "-",
                "-  private static final String[] ARG_CONFIG_FLAGS = { \"-f\", \"--config-file\" };",
                "-  private static final String ARG_CONFIG_METAVAR = \"CONFIG\";",
                "-  private static final String ARG_CONFIG_DEST = \"configFile\";",
                "-  private static final String ARG_CONFIG_DEFAULT = \"./conf/config.yml\";",
                "-  private static final String ARG_CONFIG_HELP = \"specify configuration file\";",
                "-",
                "-  private static final String[] ARG_NUM_THREADS_FLAGS = { \"-n\", \"--num-thread\" };",
                "-  private static final String ARG_NUM_THREADS_METAVAR = \"NUM_THREADS\";",
                "-  private static final String ARG_NUM_THREADS_DEST = \"numThreads\";",
                "-  private static final Integer ARG_NUM_THREADS_DEFAULT = 1;",
                "-  private static final String ARG_NUM_THREADS_HELP = \"specify number of threads\";",
                "-",
                "-  private int port;",
                "-  private SolrClient solrClient;",
                "-  private SolrCollectorConfig config;",
                "-  private int numThreads;",
                "-",
                "-  CollectorRegistry registry = new CollectorRegistry();",
                "-",
                "-  private HTTPServer httpServer;",
                "-  private SolrCollector collector;",
                "-",
                "-  public static final Counter scrapeErrorTotal = Counter.build()",
                "-      .name(\"solr_exporter_scrape_error_total\")",
                "-      .help(\"Number of scrape error.\").register();",
                "-",
                "-  /**",
                "-   * Constructor.",
                "-   */",
                "-  public SolrExporter(int port, SolrClient solrClient, File configFile, int numThreads) throws IOException {",
                "-    this(port, solrClient, new Yaml().loadAs(new BufferedReader(new InputStreamReader(new FileInputStream(configFile),\"UTF-8\")), SolrCollectorConfig.class), numThreads);",
                "-  }",
                "-",
                "-  /**",
                "-   * Constructor.",
                "-   */",
                "-  public SolrExporter(int port, SolrClient solrClient, SolrCollectorConfig config, int numThreads) {",
                "-    super();",
                "-",
                "-    this.port = port;",
                "-    this.solrClient = solrClient;",
                "-    this.config = config;",
                "-    this.numThreads = numThreads;",
                "-  }",
                "-",
                "-  /**",
                "-   * Start HTTP server for exporting Solr metrics.",
                "-   */",
                "-  public void start() throws MalformedObjectNameException, IOException {",
                "-    InetSocketAddress socket = new InetSocketAddress(port);",
                "-",
                "-    this.collector = new SolrCollector(solrClient, config, numThreads);",
                "-",
                "-    this.registry.register(this.collector);",
                "-    this.registry.register(scrapeErrorTotal);",
                "-",
                "-    this.httpServer = new HTTPServer(socket, this.registry);",
                "-  }",
                "-",
                "-  /**",
                "-   * Stop HTTP server for exporting Solr metrics.",
                "-   */",
                "-  public void stop() throws IOException {",
                "-    this.httpServer.stop();",
                "-    this.registry.unregister(this.collector);",
                "-  }",
                "-",
                "-  /**",
                "-   * Create Solr client",
                "-   */",
                "-  private static SolrClient createClient(String connStr) {",
                "-    SolrClient solrClient;",
                "-",
                "-    Pattern baseUrlPattern = Pattern.compile(\"^https?:\\\\/\\\\/[\\\\w\\\\/:%#\\\\$&\\\\?\\\\(\\\\)~\\\\.=\\\\+\\\\-]+$\");",
                "-    Pattern zkHostPattern = Pattern.compile(\"^(?<host>[^\\\\/]+)(?<chroot>|(?:\\\\/.*))$\");",
                "-    Matcher matcher;",
                "-",
                "-    matcher = baseUrlPattern.matcher(connStr);",
                "-    if (matcher.matches()) {",
                "-      NoOpResponseParser responseParser = new NoOpResponseParser();",
                "-      responseParser.setWriterType(\"json\");",
                "-",
                "-      HttpSolrClient.Builder builder = new HttpSolrClient.Builder();",
                "-      builder.withBaseSolrUrl(connStr);",
                "-",
                "-      HttpSolrClient httpSolrClient = builder.build();",
                "-      httpSolrClient.setParser(responseParser);",
                "-",
                "-      solrClient = httpSolrClient;",
                "-    } else {",
                "-      String host = \"\";",
                "-      String chroot = \"\";",
                "-",
                "-      matcher = zkHostPattern.matcher(connStr);",
                "-      if (matcher.matches()) {",
                "-        host = matcher.group(\"host\") != null ? matcher.group(\"host\") : \"\";",
                "-        chroot = matcher.group(\"chroot\") != null ? matcher.group(\"chroot\") : \"\";",
                "-      }",
                "-",
                "-      NoOpResponseParser responseParser = new NoOpResponseParser();",
                "-      responseParser.setWriterType(\"json\");",
                "-",
                "-      CloudSolrClient.Builder builder = new CloudSolrClient.Builder();",
                "-      if (host.contains(\",\")) {",
                "-        List<String> hosts = new ArrayList<>();",
                "-        for (String h : host.split(\",\")) {",
                "-          if (h != null && !h.equals(\"\")) {",
                "-            hosts.add(h.trim());",
                "-          }",
                "-        }",
                "-        builder.withZkHost(hosts);",
                "-      } else {",
                "-        builder.withZkHost(host);",
                "-      }",
                "-      if (chroot.equals(\"\")) {",
                "-        builder.withZkChroot(\"/\");",
                "-      } else {",
                "-        builder.withZkChroot(chroot);",
                "-      }",
                "-",
                "-      CloudSolrClient cloudSolrClient = builder.build();",
                "-      cloudSolrClient.setParser(responseParser);",
                "-",
                "-      solrClient = cloudSolrClient;",
                "-    }",
                "-",
                "-    return solrClient;",
                "-  }",
                "-",
                "-  /**",
                "-   * Entry point of SolrExporter.",
                "-   */",
                "-  public static void main( String[] args ) {",
                "-    ArgumentParser parser = ArgumentParsers.newArgumentParser(SolrCollector.class.getSimpleName())",
                "-        .description(\"Prometheus exporter for Apache Solr.\");",
                "-",
                "-    parser.addArgument(ARG_PORT_FLAGS)",
                "-        .metavar(ARG_PORT_METAVAR).dest(ARG_PORT_DEST).type(Integer.class)",
                "-        .setDefault(ARG_PORT_DEFAULT).help(ARG_PORT_HELP);",
                "-",
                "-    parser.addArgument(ARG_BASE_URL_FLAGS)",
                "-        .metavar(ARG_BASE_URL_METAVAR).dest(ARG_BASE_URL_DEST).type(String.class)",
                "-        .setDefault(ARG_BASE_URL_DEFAULT).help(ARG_BASE_URL_HELP);",
                "-",
                "-    parser.addArgument(ARG_ZK_HOST_FLAGS)",
                "-        .metavar(ARG_ZK_HOST_METAVAR).dest(ARG_ZK_HOST_DEST).type(String.class)",
                "-        .setDefault(ARG_ZK_HOST_DEFAULT).help(ARG_ZK_HOST_HELP);",
                "-",
                "-    parser.addArgument(ARG_CONFIG_FLAGS)",
                "-        .metavar(ARG_CONFIG_METAVAR).dest(ARG_CONFIG_DEST).type(String.class)",
                "-        .setDefault(ARG_CONFIG_DEFAULT).help(ARG_CONFIG_HELP);",
                "-",
                "-    parser.addArgument(ARG_NUM_THREADS_FLAGS)",
                "-        .metavar(ARG_NUM_THREADS_METAVAR).dest(ARG_NUM_THREADS_DEST).type(Integer.class)",
                "-        .setDefault(ARG_NUM_THREADS_DEFAULT).help(ARG_NUM_THREADS_HELP);",
                "-",
                "-    try {",
                "-      Namespace res = parser.parseArgs(args);",
                "-",
                "-      int port = res.getInt(ARG_PORT_DEST);",
                "-",
                "-      String connStr = \"http://localhost:8983/solr\";",
                "-      if (!res.getString(ARG_BASE_URL_DEST).equals(\"\")) {",
                "-        connStr = res.getString(ARG_BASE_URL_DEST);",
                "-      } else if (!res.getString(ARG_ZK_HOST_DEST).equals(\"\")) {",
                "-        connStr = res.getString(ARG_ZK_HOST_DEST);",
                "-      }",
                "-",
                "-      File configFile = new File(res.getString(ARG_CONFIG_DEST));",
                "-      int numThreads = res.getInt(ARG_NUM_THREADS_DEST);",
                "-",
                "-      SolrClient solrClient = createClient(connStr);",
                "-",
                "-      SolrExporter solrExporter = new SolrExporter(port, solrClient, configFile, numThreads);",
                "-      solrExporter.start();",
                "-      logger.info(\"Start server\");",
                "-    } catch (MalformedObjectNameException | IOException e) {",
                "-      logger.error(\"Start server failed: \" + e.toString());",
                "-    } catch (ArgumentParserException e) {",
                "-      parser.handleError(e);",
                "-    }",
                "-  }",
                "-}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/package-info.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/package-info.java",
                "deleted file mode 100644",
                "index 81f33f91852..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/package-info.java",
                "+++ /dev/null",
                "@@ -1,21 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-/** ",
                "- * Solr metrics exporter.",
                "- */",
                "-package org.apache.solr.prometheus.exporter;",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "deleted file mode 100644",
                "index 30d34418426..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "+++ /dev/null",
                "@@ -1,219 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.solr.prometheus.scraper;",
                "-",
                "-import com.fasterxml.jackson.databind.JsonNode;",
                "-import com.fasterxml.jackson.databind.ObjectMapper;",
                "-import org.apache.solr.prometheus.exporter.SolrExporter;",
                "-import org.apache.solr.prometheus.scraper.config.SolrQueryConfig;",
                "-import org.apache.solr.prometheus.scraper.config.SolrScraperConfig;",
                "-import io.prometheus.client.Collector;",
                "-import net.thisptr.jackson.jq.JsonQuery;",
                "-import net.thisptr.jackson.jq.exception.JsonQueryException;",
                "-import org.apache.solr.client.solrj.SolrClient;",
                "-import org.apache.solr.client.solrj.SolrServerException;",
                "-import org.apache.solr.client.solrj.impl.CloudSolrClient;",
                "-import org.apache.solr.client.solrj.impl.HttpSolrClient;",
                "-import org.apache.solr.client.solrj.request.QueryRequest;",
                "-import org.apache.solr.common.params.ModifiableSolrParams;",
                "-import org.apache.solr.common.util.NamedList;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-",
                "-import java.lang.invoke.MethodHandles;",
                "-import java.io.IOException;",
                "-import java.util.ArrayList;",
                "-import java.util.Iterator;",
                "-import java.util.LinkedHashMap;",
                "-import java.util.List;",
                "-import java.util.Map;",
                "-import java.util.concurrent.Callable;",
                "-",
                "-/**",
                "- * SolrScraper",
                "- */",
                "-public class SolrScraper implements Callable<Map<String, Collector.MetricFamilySamples>> {",
                "-  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "-",
                "-  private SolrClient solrClient;",
                "-  private SolrScraperConfig scraperConfig;",
                "-",
                "-  private List<String> labelNames;",
                "-  private List<String> labelValues;",
                "-",
                "-  /**",
                "-   * Constructor.",
                "-   */",
                "-  public SolrScraper(SolrClient solrClient, SolrScraperConfig scraperConfig) {",
                "-    this(solrClient, scraperConfig, new ArrayList<>(), new ArrayList<>());",
                "-  }",
                "-",
                "-  /**",
                "-   * Constructor.",
                "-   */",
                "-  public SolrScraper(SolrClient solrClient, SolrScraperConfig scraperConfig, List<String> labelNames, List<String> labelValues) {",
                "-    super();",
                "-",
                "-    this.solrClient = solrClient;",
                "-    this.scraperConfig = scraperConfig;",
                "-",
                "-    this.labelNames = labelNames;",
                "-    this.labelValues = labelValues;",
                "-  }",
                "-",
                "-  /**",
                "-   * Execute collectResponse",
                "-   */",
                "-  @Override",
                "-  public Map<String, Collector.MetricFamilySamples> call() throws Exception {",
                "-    return collectResponse(this.solrClient, this.scraperConfig);",
                "-  }",
                "-",
                "-  /**",
                "-   * Collect facet count.",
                "-   */",
                "-  public Map<String, Collector.MetricFamilySamples> collectResponse(SolrClient solrClient, SolrScraperConfig scraperConfig) {",
                "-    Map<String, Collector.MetricFamilySamples> metricFamilySamplesMap = new LinkedHashMap<>();",
                "-",
                "-    try {",
                "-      SolrQueryConfig queryConfig = scraperConfig.getQuery();",
                "-",
                "-      // create Solr request parameters",
                "-      ModifiableSolrParams params = new ModifiableSolrParams();",
                "-      for (Map<String, String> param : queryConfig.getParams()) {",
                "-        for (String name : param.keySet()) {",
                "-          Object obj = param.get(name);",
                "-          if (obj instanceof Number) {",
                "-            params.add(name, obj.toString());",
                "-          } else {",
                "-            params.add(name, param.get(name));",
                "-          }",
                "-        }",
                "-      }",
                "-",
                "-      // create Solr queryConfig request",
                "-      QueryRequest queryRequest = new QueryRequest(params);",
                "-      queryRequest.setPath(queryConfig.getPath());",
                "-",
                "-      // invoke Solr",
                "-      NamedList<Object> queryResponse = null;",
                "-      if (queryConfig.getCore().equals(\"\") && queryConfig.getCollection().equals(\"\")) {",
                "-        queryResponse = solrClient.request(queryRequest);",
                "-      } else if (!queryConfig.getCore().equals(\"\")) {",
                "-        queryResponse = solrClient.request(queryRequest, queryConfig.getCore());",
                "-      } else if (!queryConfig.getCollection().equals(\"\")) {",
                "-        queryResponse = solrClient.request(queryRequest, queryConfig.getCollection());",
                "-      }",
                "-",
                "-      ObjectMapper om = new ObjectMapper();",
                "-",
                "-      JsonNode metricsJson = om.readTree((String) queryResponse.get(\"response\"));",
                "-",
                "-      List<JsonQuery> jqs = new ArrayList<>();",
                "-      for (String jsonQuery : scraperConfig.getJsonQueries()) {",
                "-        JsonQuery compiledJsonQuery = JsonQuery.compile(jsonQuery);",
                "-        jqs.add(compiledJsonQuery);",
                "-      }",
                "-",
                "-      for (int i = 0; i < jqs.size(); i++) {",
                "-        JsonQuery q = jqs.get(i);",
                "-        try {",
                "-          List<JsonNode> results = q.apply(metricsJson);",
                "-          for (JsonNode result : results) {",
                "-            String type = result.get(\"type\").textValue();",
                "-            String name = result.get(\"name\").textValue();",
                "-            String help = result.get(\"help\").textValue();",
                "-            Double value = result.get(\"value\").doubleValue();",
                "-            ArrayList<String> labelNames = new ArrayList<>(this.labelNames);",
                "-            ArrayList<String> labelValues = new ArrayList<>(this.labelValues);",
                "-",
                "-            if (solrClient instanceof CloudSolrClient) {",
                "-              labelNames.add(\"zk_host\");",
                "-              labelValues.add(((CloudSolrClient) solrClient).getZkHost());",
                "-            }",
                "-",
                "-            if (!scraperConfig.getQuery().getCollection().equals(\"\")) {",
                "-              labelNames.add(\"collection\");",
                "-              labelValues.add(scraperConfig.getQuery().getCollection());",
                "-            }",
                "-",
                "-            if (solrClient instanceof HttpSolrClient) {",
                "-              labelNames.add(\"base_url\");",
                "-              labelValues.add(((HttpSolrClient) solrClient).getBaseURL());",
                "-            }",
                "-",
                "-            if (!scraperConfig.getQuery().getCore().equals(\"\")) {",
                "-              labelNames.add(\"core\");",
                "-              labelValues.add(scraperConfig.getQuery().getCore());",
                "-            }",
                "-",
                "-            for(Iterator<JsonNode> ite = result.get(\"label_names\").iterator();ite.hasNext();){",
                "-              JsonNode item = ite.next();",
                "-              labelNames.add(item.textValue());",
                "-            }",
                "-            for(Iterator<JsonNode> ite = result.get(\"label_values\").iterator();ite.hasNext();){",
                "-              JsonNode item = ite.next();",
                "-              labelValues.add(item.textValue());",
                "-            }",
                "-",
                "-            if (labelNames.indexOf(\"core\") < 0 && labelNames.indexOf(\"collection\") >= 0 && labelNames.indexOf(\"shard\") >= 0 && labelNames.indexOf(\"replica\") >= 0) {",
                "-              if (labelValues.get(labelNames.indexOf(\"collection\")).equals(\"-\") && labelValues.get(labelNames.indexOf(\"shard\")).equals(\"-\") && labelValues.get(labelNames.indexOf(\"replica\")).equals(\"-\")) {",
                "-                labelNames.add(\"core\");",
                "-                labelValues.add(\"-\");",
                "-              } else {",
                "-                StringBuffer sb = new StringBuffer();",
                "-                sb.append(labelValues.get(labelNames.indexOf(\"collection\")))",
                "-                    .append(\"_\")",
                "-                    .append(labelValues.get(labelNames.indexOf(\"shard\")))",
                "-                    .append(\"_\")",
                "-                    .append(labelValues.get(labelNames.indexOf(\"replica\")));",
                "-",
                "-                labelNames.add(\"core\");",
                "-                labelValues.add(sb.toString());",
                "-              }",
                "-            }",
                "-",
                "-            if (!metricFamilySamplesMap.containsKey(name)) {",
                "-              Collector.MetricFamilySamples metricFamilySamples = new Collector.MetricFamilySamples(",
                "-                name,",
                "-                Collector.Type.valueOf(type),",
                "-                help,",
                "-                new ArrayList<>()",
                "-              );",
                "-              metricFamilySamplesMap.put(name, metricFamilySamples);",
                "-            }",
                "-",
                "-            Collector.MetricFamilySamples.Sample sample = new Collector.MetricFamilySamples.Sample(name, labelNames, labelValues, value);",
                "-",
                "-            if (!metricFamilySamplesMap.get(name).samples.contains(sample)) {",
                "-              metricFamilySamplesMap.get(name).samples.add(sample);",
                "-            }",
                "-          }",
                "-        } catch (JsonQueryException e) {",
                "-          logger.error(e.toString() + \" \" + q.toString());",
                "-          SolrExporter.scrapeErrorTotal.inc();",
                "-        }",
                "-      }",
                "-    } catch (HttpSolrClient.RemoteSolrException | SolrServerException | IOException e) {",
                "-      logger.error(e.toString());",
                "-    } catch (Exception e) {",
                "-      logger.error(e.toString());",
                "-    }",
                "-",
                "-    return metricFamilySamplesMap;",
                "-  }",
                "-}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrQueryConfig.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrQueryConfig.java",
                "deleted file mode 100644",
                "index 500bb039e6a..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrQueryConfig.java",
                "+++ /dev/null",
                "@@ -1,99 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.solr.prometheus.scraper.config;",
                "-",
                "-import java.util.ArrayList;",
                "-import java.util.Iterator;",
                "-import java.util.LinkedHashMap;",
                "-import java.util.List;",
                "-",
                "-/**",
                "- * SolrQueryConfig",
                "- */",
                "-public class SolrQueryConfig implements Cloneable {",
                "-  private String core = \"\";",
                "-  private String collection = \"\";",
                "-  private String path = \"\";",
                "-  private List<LinkedHashMap<String, String>> params = new ArrayList<>();",
                "-",
                "-  public String getCore() {",
                "-    return core;",
                "-  }",
                "-",
                "-  public void setCore(String core) {",
                "-    this.core = core;",
                "-  }",
                "-",
                "-  public String getCollection() {",
                "-    return collection;",
                "-  }",
                "-",
                "-  public void setCollection(String collection) {",
                "-    this.collection = collection;",
                "-  }",
                "-",
                "-  public String getPath() {",
                "-    return path;",
                "-  }",
                "-",
                "-  public void setPath(String path) {",
                "-    this.path = path;",
                "-  }",
                "-",
                "-  public List<LinkedHashMap<String, String>> getParams() {",
                "-    return params;",
                "-  }",
                "-",
                "-  public void setParams(List<LinkedHashMap<String, String>> params) {",
                "-    this.params = params;",
                "-  }",
                "-",
                "-  public String getParamsString() {",
                "-    StringBuffer buffer = new StringBuffer();",
                "-",
                "-    for(Iterator<LinkedHashMap<String, String>> i = getParams().iterator(); i.hasNext(); ) {",
                "-      LinkedHashMap<String, String> param = i.next();",
                "-      for(Iterator<String> j = param.keySet().iterator(); j.hasNext(); ) {",
                "-        String name = j.next();",
                "-        buffer.append(name).append(\"=\").append(param.get(name));",
                "-        if (j.hasNext()) {",
                "-          buffer.append(\"&\");",
                "-        }",
                "-      }",
                "-      if (i.hasNext()) {",
                "-        buffer.append(\"&\");",
                "-      }",
                "-    }",
                "-",
                "-    return buffer.toString();",
                "-  }",
                "-",
                "-  public SolrQueryConfig clone() throws CloneNotSupportedException {",
                "-    SolrQueryConfig queryConfig = null;",
                "-",
                "-    try {",
                "-      queryConfig = (SolrQueryConfig) super.clone();",
                "-      queryConfig.setCore(new String(this.core));",
                "-      queryConfig.setCollection(new String(this.collection));",
                "-      queryConfig.setParams(new ArrayList<>(this.params));",
                "-    }catch (Exception e){",
                "-      e.printStackTrace();",
                "-    }",
                "-",
                "-    return queryConfig;",
                "-  }",
                "-}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrScraperConfig.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrScraperConfig.java",
                "deleted file mode 100644",
                "index 3e3a36f6160..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrScraperConfig.java",
                "+++ /dev/null",
                "@@ -1,60 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.solr.prometheus.scraper.config;",
                "-",
                "-import net.thisptr.jackson.jq.exception.JsonQueryException;",
                "-",
                "-import java.util.ArrayList;",
                "-import java.util.List;",
                "-",
                "-/**",
                "- * SolrScraperConfig",
                "- */",
                "-public class SolrScraperConfig implements Cloneable {",
                "-  private SolrQueryConfig query = new SolrQueryConfig();",
                "-  private List<String> jsonQueries = new ArrayList<>();",
                "-",
                "-  public SolrQueryConfig getQuery() {",
                "-    return this.query;",
                "-  }",
                "-",
                "-  public void setQuery(SolrQueryConfig query) {",
                "-    this.query = query;",
                "-  }",
                "-",
                "-  public List<String> getJsonQueries() {",
                "-    return jsonQueries;",
                "-  }",
                "-",
                "-  public void setJsonQueries(List<String> jsonQueries) throws JsonQueryException {",
                "-    this.jsonQueries = jsonQueries;",
                "-  }",
                "-",
                "-  public SolrScraperConfig clone() throws CloneNotSupportedException {",
                "-    SolrScraperConfig scraperConfig = null;",
                "-",
                "-    try {",
                "-      scraperConfig = (SolrScraperConfig) super.clone();",
                "-      scraperConfig.setQuery(this.query.clone());",
                "-      scraperConfig.setJsonQueries(new ArrayList<>(this.jsonQueries));",
                "-    }catch (Exception e){",
                "-      e.printStackTrace();",
                "-    }",
                "-",
                "-    return scraperConfig;",
                "-  }",
                "-}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/package-info.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/package-info.java",
                "deleted file mode 100644",
                "index d5a35888ed8..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/package-info.java",
                "+++ /dev/null",
                "@@ -1,21 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-/** ",
                "- * Solr metrics scraper config.",
                "- */",
                "-package org.apache.solr.prometheus.scraper.config;",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/package-info.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/package-info.java",
                "deleted file mode 100644",
                "index 85c4eaaaaa4..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/package-info.java",
                "+++ /dev/null",
                "@@ -1,21 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-/** ",
                "- * Solr metrics scraper.",
                "- */",
                "-package org.apache.solr.prometheus.scraper;",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/overview.html b/solr/contrib/prometheus-exporter/src/java/overview.html",
                "deleted file mode 100644",
                "index df1c45a6390..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/java/overview.html",
                "+++ /dev/null",
                "@@ -1,26 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-<html>",
                "-<body>",
                "-Apache Solr Search Server: Solr Prometheus Exporter contrib",
                "-",
                "-<p>",
                "-This package provides tools for monitoring Solr with Prometheus.",
                "-</p>",
                "-",
                "-</body>",
                "-</html>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/conf/config.yml b/solr/contrib/prometheus-exporter/src/test-files/conf/config.yml",
                "deleted file mode 100644",
                "index e441f100b5f..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/conf/config.yml",
                "+++ /dev/null",
                "@@ -1,1840 +0,0 @@",
                "-#",
                "-# Licensed to the Apache Software Foundation (ASF) under one or more",
                "-# contributor license agreements.  See the NOTICE file distributed with",
                "-# this work for additional information regarding copyright ownership.",
                "-# The ASF licenses this file to You under the Apache License, Version 2.0",
                "-# (the \"License\"); you may not use this file except in compliance with",
                "-# the License.  You may obtain a copy of the License at",
                "-#",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "-#",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-#",
                "-",
                "-ping:",
                "-  query:",
                "-    path: /admin/ping",
                "-  jsonQueries:",
                "-    - |-",
                "-      . as $object | $object |",
                "-      (if $object.status == \"OK\" then 1.0 else 0.0 end) as $value |",
                "-      {",
                "-        name         : \"solr_ping\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "-        label_names  : [],",
                "-        label_values : [],",
                "-        value        : $value",
                "-      }",
                "-",
                "-metrics:",
                "-  query:",
                "-    path: /admin/metrics",
                "-    params:",
                "-      - group: 'all'",
                "-      - type: 'all'",
                "-      - prefix: ''",
                "-      - property: ''",
                "-  jsonQueries:",
                "-#    ##############################",
                "-#    # jetty",
                "-#    ##############################",
                "-#    # solr_metrics_jetty_response_total",
                "-#    - |-",
                "-#      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key | startswith(\"org.eclipse.jetty.server.handler.DefaultHandler\")) | select(.key | endswith(\"xx-responses\")) as $object |",
                "-#      $object.key | split(\".\") | last | split(\"-\") | first as $status |",
                "-#      $object.value.count as $value |",
                "-#      {",
                "-#        name         : \"solr_metrics_jetty_response_total\",",
                "-#        type         : \"COUNTER\",",
                "-#        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-#        label_names  : [\"status\"],",
                "-#        label_values : [$status],",
                "-#        value        : $value",
                "-#      }",
                "-#",
                "-#    # solr_metrics_jetty_requests_total",
                "-#    - |-",
                "-#      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key | startswith(\"org.eclipse.jetty.server.handler.DefaultHandler.\")) | select(.key | endswith(\"-requests\")) | select (.value | type == \"object\") as $object |",
                "-#      $object.key | split(\".\") | last | split(\"-\") | first as $method |",
                "-#      $object.value.count as $value |",
                "-#      {",
                "-#        name         : \"solr_metrics_jetty_requests_total\",",
                "-#        type         : \"COUNTER\",",
                "-#        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-#        label_names  : [\"method\"],",
                "-#        label_values : [$method],",
                "-#        value        : $value",
                "-#      }",
                "-#",
                "-#    # solr_metrics_jetty_dispatches_total",
                "-#    - |-",
                "-#      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key == \"org.eclipse.jetty.server.handler.DefaultHandler.dispatches\") as $object |",
                "-#      $object.value.count as $value |",
                "-#      {",
                "-#        name         : \"solr_metrics_jetty_dispatches_total\",",
                "-#        type         : \"COUNTER\",",
                "-#        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-#        label_names  : [],",
                "-#        label_values : [],",
                "-#        value        : $value",
                "-#      }",
                "-",
                "-    ##############################",
                "-    # jvm",
                "-    ##############################",
                "-    # solr_metrics_jvm_buffers",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"buffers.\")) | select(.key | endswith(\".Count\")) as $object |",
                "-      $object.key | split(\".\")[1] as $pool |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_buffers\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"pool\"],",
                "-        label_values : [$pool],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_buffers_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"buffers.\")) | select(.key | (endswith(\".MemoryUsed\") or endswith(\".TotalCapacity\"))) as $object |",
                "-      $object.key | split(\".\")[1] as $pool |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_buffers_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"pool\", \"item\"],",
                "-        label_values : [$pool, $item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_gc_total",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"gc.\")) | select(.key | endswith(\".count\")) as $object |",
                "-      $object.key | split(\".\")[1] as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_gc_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_gc_seconds_total",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"gc.\")) | select(.key | endswith(\".time\")) as $object |",
                "-      $object.key | split(\".\")[1] as $item |",
                "-      ($object.value / 1000) as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_gc_seconds_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_memory_heap_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.heap.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_memory_heap_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_memory_non_heap_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.non-heap.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_memory_non_heap_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_memory_pools_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.pools.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "-      $object.key | split(\".\")[2] as $space |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_memory_pools_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"space\", \"item\"],",
                "-        label_values : [$space, $item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_memory_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.total.\")) as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_memory_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_os_memory_bytes",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.committedVirtualMemorySize\" or .key == \"os.freePhysicalMemorySize\" or .key == \"os.freeSwapSpaceSize\" or .key ==\"os.totalPhysicalMemorySize\" or .key == \"os.totalSwapSpaceSize\") as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_os_memory_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_os_file_descriptors",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.maxFileDescriptorCount\" or .key == \"os.openFileDescriptorCount\") as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_os_file_descriptors\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_os_cpu_load",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.processCpuLoad\" or .key == \"os.systemCpuLoad\") as $object |",
                "-      $object.key | split(\".\") | last as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_os_cpu_load\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_os_cpu_time_seconds",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.processCpuTime\") as $object |",
                "-      ($object.value / 1000.0) as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_os_cpu_time_seconds\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [\"processCpuTime\"],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_os_load_average",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.systemLoadAverage\") as $object |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_os_load_average\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [\"systemLoadAverage\"],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_jvm_threads",
                "-    - |-",
                "-      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"threads.\")) | select(.key | endswith(\".count\")) as $object |",
                "-      $object.key | split(\".\")[1] as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jvm_threads\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"item\"],",
                "-        label_values : [$item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_client_errors_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_client_errors_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_errors_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_errors_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_requests_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".requestTimes\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_requests_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_server_errors_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".serverErrors\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_server_errors_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_timeouts_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".timeouts\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_timeouts_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_time_seconds_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".totalTime\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      ($object.value / 1000) as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_time_seconds_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\"],",
                "-        label_values : [$category, $handler],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_cores",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | startswith(\"CONTAINER.cores.\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_cores\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"item\"],",
                "-        label_values : [$category, $item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_core_root_fs_bytes",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | startswith(\"CONTAINER.fs.coreRoot.\")) | select(.key | endswith(\".totalSpace\") or endswith(\".usableSpace\")) as $object |",
                "-      $object.key | split(\".\") as $key_items |",
                "-      $key_items | length as $label_len |",
                "-      $key_items[0] as $category |",
                "-      $key_items[3] as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_core_root_fs_bytes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"item\"],",
                "-        label_values : [$category, $item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_thread_pool_completed_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".completed\")) as $object |",
                "-      $object.key | split(\".\") as $key_items |",
                "-      $key_items | length as $label_len |",
                "-      $key_items[0] as $category |",
                "-      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "-      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_thread_pool_completed_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\", \"executor\"],",
                "-        label_values : [$category, $handler, $executor],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_thread_pool_running",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".running\")) as $object |",
                "-      $object.key | split(\".\") as $key_items |",
                "-      $key_items | length as $label_len |",
                "-      $key_items[0] as $category |",
                "-      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "-      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_thread_pool_running\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\", \"executor\"],",
                "-        label_values : [$category, $handler, $executor],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_thread_pool_submitted_total",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".submitted\")) as $object |",
                "-      $object.key | split(\".\") as $key_items |",
                "-      $key_items | length as $label_len |",
                "-      $key_items[0] as $category |",
                "-      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "-      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_thread_pool_submitted_total\",",
                "-        type         : \"COUNTER\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\", \"executor\"],",
                "-        label_values : [$category, $handler, $executor],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_metrics_node_connections",
                "-    - |-",
                "-      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\"Connections\")) as $object |",
                "-      $object.key | split(\".\") as $key_items |",
                "-      $key_items | length as $label_len |",
                "-      $key_items[0] as $category |",
                "-      $key_items[1] as $handler |",
                "-      $key_items[2] as $item |",
                "-      $object.value as $value |",
                "-      {",
                "-        name         : \"solr_metrics_node_connections\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"category\", \"handler\", \"item\"],",
                "-        label_values : [$category, $handler, $item],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    ##############################",
                "-    # core",
                "-    ##############################",
                "-    # solr_metrics_core_client_errors_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_client_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_client_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_errors_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".errors\")) | select (.value | type == \"object\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_requests_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".requestTimes\")) | select (.value | type == \"object\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_requests_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_requests_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_server_errors_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".serverErrors\")) | select (.value | type == \"object\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_server_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_server_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_timeouts_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".timeouts\")) | select (.value | type == \"object\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_timeouts_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_timeouts_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_time_seconds_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | endswith(\".totalTime\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      select($handler | startswith(\"/\")) |",
                "-      ($object.value / 1000) as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_time_seconds_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_time_seconds_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_field_cache_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select (.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"CACHE.core.fieldCache\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.value.entries_count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_field_cache_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\"],",
                "-        label_values: [$category, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_field_cache_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_cache",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $type |",
                "-      $object.value | to_entries | .[] | select(.key == \"lookups\" or .key == \"hits\" or .key == \"size\" or .key == \"evictions\" or .key == \"inserts\") as $target |",
                "-      $target.key as $item |",
                "-      $target.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cache\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cache\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_cache_ratio",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $type |",
                "-      $object.value | to_entries | .[] | select(.key == \"hitratio\") as $target |",
                "-      $target.key as $item |",
                "-      $target.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cache_ratio\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cache_ratio\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_warmup_time_seconds",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $type |",
                "-      $object.value | to_entries | .[] | select(.key == \"warmupTime\") as $target |",
                "-      $target.key as $item |",
                "-      ($target.value / 1000) as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_warmup_time_seconds\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_warmup_time_seconds\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_cumulative_cache_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $type |",
                "-      $object.value | to_entries | .[] | select(.key == \"cumulative_lookups\" or .key == \"cumulative_hits\" or .key == \"cumulative_evictions\" or .key == \"cumulative_inserts\") as $target |",
                "-      $target.key as $item |",
                "-      $target.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cumulative_cache_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cumulative_cache_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_cumulative_cache_ratio",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $type |",
                "-      $object.value | to_entries | .[] | select(.key == \"cumulative_hitratio\") as $target |",
                "-      $target.key as $item |",
                "-      $target.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cumulative_cache_ratio\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_cumulative_cache_ratio\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_fs_bytes",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"CORE.fs.\")) | select (.key | endswith(\".totalSpace\") or endswith(\".usableSpace\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $item |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_fs_bytes\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"item\"],",
                "-        label_values: [$category, $core, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_fs_bytes\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_highlighter_request_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key | startswith(\"HIGHLIGHTER.\")) | select (.key | endswith(\".requests\")) as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $name |",
                "-      $object.key | split(\".\")[2] as $item |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_highlighter_request_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"name\", \"item\"],",
                "-        label_values: [$category, $core, $name, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_highlighter_request_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"name\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $name, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_index_size_bytes",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"INDEX.sizeInBytes\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_index_size_bytes\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\"],",
                "-        label_values: [$category, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_index_size_bytes\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_replication_master",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"REPLICATION./replication.isMaster\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      (if $object.value == true then 1.0 else 0.0 end) as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_replication_master\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_replication_master\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_replication_slave",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"REPLICATION./replication.isSlave\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      (if $object.value == true then 1.0 else 0.0 end) as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_replication_slave\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_replication_slave\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_searcher_documents",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"SEARCHER.searcher.deletedDocs\" or .key == \"SEARCHER.searcher.maxDoc\" or .key == \"SEARCHER.searcher.numDocs\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[2] as $item |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_documents\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"item\"],",
                "-        label_values: [$category, $core, $item],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_searcher_documents\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"item\"],",
                "-        label_values: [$category, $core, $collection, $shard, $replica, $item],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_adds",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.adds\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_adds\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_adds\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_auto_commits_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.autoCommits\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_auto_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_auto_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_commits_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.commits\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_adds_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeAdds\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_adds_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_adds_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_deletes_by_id_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeDeletesById\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_id_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_id_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_deletes_by_query_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeDeletesByQuery\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_query_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_query_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_errors_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeErrors\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_errors_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_deletes_by_id",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.deletesById\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_id\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_id\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_deletes_by_query",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.deletesByQuery\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_query\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_deletes_by_query\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_pending_docs",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.docsPending\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_pending_docs\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_pending_docs\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_errors",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.errors\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_errors\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_errors\",",
                "-        type: \"GAUGE\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_expunge_deletes_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.expungeDeletes\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_expunge_deletes_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_expunge_deletes_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_merges_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.merges\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_merges_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_merges_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_optimizes_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.optimizes\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_optimizes_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_optimizes_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_rollbacks_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.rollbacks\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_rollbacks_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_rollbacks_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_soft_auto_commits_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.softAutoCommits\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_soft_auto_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_soft_auto_commits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-    # solr_metrics_core_update_handler_splits_total",
                "-    - |-",
                "-      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "-      $parent.key | split(\".\") as $parent_key_items |",
                "-      $parent_key_items | length as $parent_key_item_len |",
                "-      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "-      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "-      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "-      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.splits\") as $object |",
                "-      $object.key | split(\".\")[0] as $category |",
                "-      $object.key | split(\".\")[1] as $handler |",
                "-      $object.value.count as $value |",
                "-      if $parent_key_item_len == 3 then",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_splits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\"],",
                "-        label_values: [$category, $handler, $core],",
                "-        value: $value",
                "-      }",
                "-      else",
                "-      {",
                "-        name: \"solr_metrics_core_update_handler_splits_total\",",
                "-        type: \"COUNTER\",",
                "-        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "-        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "-        value: $value",
                "-      }",
                "-      end",
                "-",
                "-",
                "-collections:",
                "-  query:",
                "-    path: /admin/collections",
                "-    params:",
                "-      - action: 'CLUSTERSTATUS'",
                "-  jsonQueries:",
                "-    # solr_collections_live_nodes",
                "-    - |-",
                "-      .cluster.live_nodes | length as $value|",
                "-      {",
                "-        name         : \"solr_collections_live_nodes\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [],",
                "-        label_values : [],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_pull_replicas",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.pullReplicas | tonumber as $value |",
                "-      {",
                "-        name         : \"solr_collections_pull_replicas\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\"],",
                "-        label_values : [$collection],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_nrt_replicas",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.nrtReplicas | tonumber as $value |",
                "-      {",
                "-        name         : \"solr_collections_nrt_replicas\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\"],",
                "-        label_values : [$collection],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_tlog_replicas",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.tlogReplicas | tonumber as $value |",
                "-      {",
                "-        name         : \"solr_collections_tlog_replicas\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\"],",
                "-        label_values : [$collection],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_shard_state",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "-      $shard_obj.key as $shard |",
                "-      (if $shard_obj.value.state == \"active\" then 1.0 else 0.0 end) as $value |",
                "-      {",
                "-        name         : \"solr_collections_shard_state\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\",\"shard\"],",
                "-        label_values : [$collection,$shard],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_replica_state",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "-      $shard_obj.key as $shard |",
                "-      $shard_obj.value.replicas | to_entries | .[] | . as $replica_obj |",
                "-      $replica_obj.key as $replica_name |",
                "-      $replica_obj.value.core as $core |",
                "-      $core[$collection + \"_\" + $shard + \"_\" | length:] as $replica |",
                "-      $replica_obj.value.base_url as $base_url |",
                "-      $replica_obj.value.node_name as $node_name |",
                "-      $replica_obj.value.type as $type |",
                "-      (if $replica_obj.value.state == \"active\" then 1.0 else 0.0 end) as $value |",
                "-      {",
                "-        name         : \"solr_collections_replica_state\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\", \"shard\", \"replica\", \"replica_name\", \"core\", \"base_url\", \"node_name\", \"type\"],",
                "-        label_values : [$collection, $shard, $replica, $replica_name, $core, $base_url, $node_name, $type],",
                "-        value        : $value",
                "-      }",
                "-",
                "-    # solr_collections_shard_leader",
                "-    - |-",
                "-      .cluster.collections | to_entries | .[] | . as $object |",
                "-      $object.key as $collection |",
                "-      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "-      $shard_obj.key as $shard |",
                "-      $shard_obj.value.replicas | to_entries | .[] | . as $replica_obj |",
                "-      $replica_obj.key as $replica_name |",
                "-      $replica_obj.value.core as $core |",
                "-      $core[$collection + \"_\" + $shard + \"_\" | length:] as $replica |",
                "-      $replica_obj.value.base_url as $base_url |",
                "-      $replica_obj.value.node_name as $node_name |",
                "-      $replica_obj.value.type as $type |",
                "-      (if $replica_obj.value.leader == \"true\" then 1.0 else 0.0 end) as $value |",
                "-      {",
                "-        name         : \"solr_collections_shard_leader\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [\"collection\", \"shard\", \"replica\", \"replica_name\", \"core\", \"base_url\", \"node_name\", \"type\"],",
                "-        label_values : [$collection, $shard, $replica, $replica_name, $core, $base_url, $node_name, $type],",
                "-        value        : $value",
                "-      }",
                "-",
                "-",
                "-queries:",
                "- - query:",
                "-     collection: collection1",
                "-     path: /select",
                "-     params:",
                "-       - q: \"*:*\"",
                "-       - start: 0",
                "-       - rows: 0",
                "-       - json.facet: |-",
                "-           {",
                "-             category: {",
                "-               type: terms,",
                "-               field: cat",
                "-             }",
                "-           }",
                "-   jsonQueries:",
                "-     # solr_facets_category",
                "-     - |-",
                "-       .facets.category.buckets[] as $object |",
                "-       $object.val as $term |",
                "-       $object.count as $value |",
                "-       {",
                "-         name         : \"solr_facets_category\",",
                "-         type         : \"GAUGE\",",
                "-         help         : \"Category facets\",",
                "-         label_names  : [\"term\"],",
                "-         label_values : [$term],",
                "-         value        : $value",
                "-       }",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/conf/log4j.properties b/solr/contrib/prometheus-exporter/src/test-files/conf/log4j.properties",
                "deleted file mode 100644",
                "index 5dd689960d6..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/conf/log4j.properties",
                "+++ /dev/null",
                "@@ -1,22 +0,0 @@",
                "-#",
                "-# Licensed to the Apache Software Foundation (ASF) under one or more",
                "-# contributor license agreements.  See the NOTICE file distributed with",
                "-# this work for additional information regarding copyright ownership.",
                "-# The ASF licenses this file to You under the Apache License, Version 2.0",
                "-# (the \"License\"); you may not use this file except in compliance with",
                "-# the License.  You may obtain a copy of the License at",
                "-#",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "-#",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-#",
                "-",
                "-log4j.rootLogger=INFO, stdout",
                "-log4j.appender.stdout=org.apache.log4j.ConsoleAppender",
                "-log4j.appender.stdout.Target=System.out",
                "-log4j.appender.stdout.layout=org.apache.log4j.PatternLayout",
                "-log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd'T'HH:mm:ss.SSS} %-5p [%c] - %m%n",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/managed-schema b/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/managed-schema",
                "deleted file mode 100644",
                "index caa3317e632..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/managed-schema",
                "+++ /dev/null",
                "@@ -1,412 +0,0 @@",
                "-<?xml version=\"1.0\" encoding=\"UTF-8\" ?>",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<!--",
                "-",
                "- This example schema is the recommended starting point for users.",
                "- It should be kept correct and concise, usable out-of-the-box.",
                "-",
                "-",
                "- For more information, on how to customize this file, please see",
                "- http://lucene.apache.org/solr/guide/documents-fields-and-schema-design.html",
                "-",
                "- PERFORMANCE NOTE: this schema includes many optional features and should not",
                "- be used for benchmarking.  To improve performance one could",
                "-  - set stored=\"false\" for all fields possible (esp large fields) when you",
                "-    only need to search on the field but don't need to return the original",
                "-    value.",
                "-  - set indexed=\"false\" if you don't need to search on the field, but only",
                "-    return the field as a result of searching on other indexed fields.",
                "-  - remove all unneeded copyField statements",
                "-  - for best index size and searching performance, set \"index\" to false",
                "-    for all general text fields, use copyField to copy them to the",
                "-    catchall \"text\" field, and use that for searching.",
                "--->",
                "-",
                "-<schema name=\"collection1-config\" version=\"1.6\">",
                "-    <!-- attribute \"name\" is the name of this schema and is only used for display purposes.",
                "-       version=\"x.y\" is Solr's version number for the schema syntax and",
                "-       semantics.  It should not normally be changed by applications.",
                "-",
                "-       1.0: multiValued attribute did not exist, all fields are multiValued",
                "-            by nature",
                "-       1.1: multiValued attribute introduced, false by default",
                "-       1.2: omitTermFreqAndPositions attribute introduced, true by default",
                "-            except for text fields.",
                "-       1.3: removed optional field compress feature",
                "-       1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser",
                "-            behavior when a single string produces multiple tokens.  Defaults",
                "-            to off for version >= 1.4",
                "-       1.5: omitNorms defaults to true for primitive field types",
                "-            (int, float, boolean, string...)",
                "-       1.6: useDocValuesAsStored defaults to true.",
                "-    -->",
                "-",
                "-    <!-- Valid attributes for fields:",
                "-     name: mandatory - the name for the field",
                "-     type: mandatory - the name of a field type from the",
                "-       fieldTypes section",
                "-     indexed: true if this field should be indexed (searchable or sortable)",
                "-     stored: true if this field should be retrievable",
                "-     docValues: true if this field should have doc values. Doc Values is",
                "-       recommended (required, if you are using *Point fields) for faceting,",
                "-       grouping, sorting and function queries. Doc Values will make the index",
                "-       faster to load, more NRT-friendly and more memory-efficient.",
                "-       They are currently only supported by StrField, UUIDField, all",
                "-       *PointFields, and depending on the field type, they might require",
                "-       the field to be single-valued, be required or have a default value",
                "-       (check the documentation of the field type you're interested in for",
                "-       more information)",
                "-     multiValued: true if this field may contain multiple values per document",
                "-     omitNorms: (expert) set to true to omit the norms associated with",
                "-       this field (this disables length normalization and index-time",
                "-       boosting for the field, and saves some memory).  Only full-text",
                "-       fields or fields that need an index-time boost need norms.",
                "-       Norms are omitted for primitive (non-analyzed) types by default.",
                "-     termVectors: [false] set to true to store the term vector for a",
                "-       given field.",
                "-       When using MoreLikeThis, fields used for similarity should be",
                "-       stored for best performance.",
                "-     termPositions: Store position information with the term vector.",
                "-       This will increase storage costs.",
                "-     termOffsets: Store offset information with the term vector. This",
                "-       will increase storage costs.",
                "-     required: The field is required.  It will throw an error if the",
                "-       value does not exist",
                "-     default: a value that should be used if no value is specified",
                "-       when adding a document.",
                "-    -->",
                "-",
                "-    <!-- field names should consist of alphanumeric or underscore characters only and",
                "-      not start with a digit.  This is not currently strictly enforced,",
                "-      but other field names will not have first class support from all components",
                "-      and back compatibility is not guaranteed.  Names with both leading and",
                "-      trailing underscores (e.g. _version_) are reserved.",
                "-    -->",
                "-",
                "-    <!-- In this _default configset, only four fields are pre-declared:",
                "-         id, _version_, and _text_ and _root_. All other fields will be type guessed and added via the",
                "-         \"add-unknown-fields-to-the-schema\" update request processor chain declared in solrconfig.xml.",
                "-",
                "-         Note that many dynamic fields are also defined - you can use them to specify a",
                "-         field's type via field naming conventions - see below.",
                "-",
                "-         WARNING: The _text_ catch-all field will significantly increase your index size.",
                "-         If you don't need it, consider removing it and the corresponding copyField directive.",
                "-    -->",
                "-",
                "-    <field name=\"id\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />",
                "-    <!-- docValues are enabled by default for long type so we don't need to index the version field  -->",
                "-    <field name=\"_version_\" type=\"plong\" indexed=\"false\" stored=\"false\"/>",
                "-    <field name=\"_root_\" type=\"string\" indexed=\"true\" stored=\"false\" docValues=\"false\" />",
                "-    <field name=\"_text_\" type=\"text_general\" indexed=\"true\" stored=\"false\" multiValued=\"true\"/>",
                "-",
                "-    <!-- This can be enabled, in case the client does not know what fields may be searched. It isn't enabled by default",
                "-         because it's very expensive to index everything twice. -->",
                "-    <!-- <copyField source=\"*\" dest=\"_text_\"/> -->",
                "-",
                "-    <!-- Dynamic field definitions allow using convention over configuration",
                "-       for fields via the specification of patterns to match field names.",
                "-       EXAMPLE:  name=\"*_i\" will match any field ending in _i (like myid_i, z_i)",
                "-       RESTRICTION: the glob-like pattern in the name attribute must have a \"*\" only at the start or the end.  -->",
                "-",
                "-    <dynamicField name=\"*_i\"  type=\"pint\"    indexed=\"true\"  stored=\"true\"/>",
                "-    <dynamicField name=\"*_is\" type=\"pints\"    indexed=\"true\"  stored=\"true\"/>",
                "-    <dynamicField name=\"*_s\"  type=\"string\"  indexed=\"true\"  stored=\"true\" />",
                "-    <dynamicField name=\"*_ss\" type=\"strings\"  indexed=\"true\"  stored=\"true\"/>",
                "-    <dynamicField name=\"*_l\"  type=\"plong\"   indexed=\"true\"  stored=\"true\"/>",
                "-    <dynamicField name=\"*_ls\" type=\"plongs\"   indexed=\"true\"  stored=\"true\"/>",
                "-    <dynamicField name=\"*_txt\" type=\"text_general\" indexed=\"true\" stored=\"true\"/>",
                "-    <dynamicField name=\"*_b\"  type=\"boolean\" indexed=\"true\" stored=\"true\"/>",
                "-    <dynamicField name=\"*_bs\" type=\"booleans\" indexed=\"true\" stored=\"true\"/>",
                "-    <dynamicField name=\"*_f\"  type=\"pfloat\"  indexed=\"true\"  stored=\"true\"/>",
                "-    <dynamicField name=\"*_fs\" type=\"pfloats\"  indexed=\"true\"  stored=\"true\"/>",
                "-    <dynamicField name=\"*_d\"  type=\"pdouble\" indexed=\"true\"  stored=\"true\"/>",
                "-    <dynamicField name=\"*_ds\" type=\"pdoubles\" indexed=\"true\"  stored=\"true\"/>",
                "-",
                "-    <!-- Type used for data-driven schema, to add a string copy for each text field -->",
                "-    <dynamicField name=\"*_str\" type=\"strings\" stored=\"false\" docValues=\"true\" indexed=\"false\" />",
                "-",
                "-    <dynamicField name=\"*_dt\"  type=\"pdate\"    indexed=\"true\"  stored=\"true\"/>",
                "-    <dynamicField name=\"*_dts\" type=\"pdate\"    indexed=\"true\"  stored=\"true\" multiValued=\"true\"/>",
                "-    <dynamicField name=\"*_p\"  type=\"location\" indexed=\"true\" stored=\"true\"/>",
                "-    <dynamicField name=\"*_srpt\"  type=\"location_rpt\" indexed=\"true\" stored=\"true\"/>",
                "-",
                "-    <!-- payloaded dynamic fields -->",
                "-    <dynamicField name=\"*_dpf\" type=\"delimited_payloads_float\" indexed=\"true\"  stored=\"true\"/>",
                "-    <dynamicField name=\"*_dpi\" type=\"delimited_payloads_int\" indexed=\"true\"  stored=\"true\"/>",
                "-    <dynamicField name=\"*_dps\" type=\"delimited_payloads_string\" indexed=\"true\"  stored=\"true\"/>",
                "-",
                "-    <dynamicField name=\"attr_*\" type=\"text_general\" indexed=\"true\" stored=\"true\" multiValued=\"true\"/>",
                "-",
                "-    <!-- Field to use to determine and enforce document uniqueness.",
                "-      Unless this field is marked with required=\"false\", it will be a required field",
                "-    -->",
                "-    <uniqueKey>id</uniqueKey>",
                "-",
                "-    <!-- copyField commands copy one field to another at the time a document",
                "-       is added to the index.  It's used either to index the same field differently,",
                "-       or to add multiple fields to the same field for easier/faster searching.",
                "-",
                "-    <copyField source=\"sourceFieldName\" dest=\"destinationFieldName\"/>",
                "-    -->",
                "-",
                "-    <!-- field type definitions. The \"name\" attribute is",
                "-       just a label to be used by field definitions.  The \"class\"",
                "-       attribute and any other attributes determine the real",
                "-       behavior of the fieldType.",
                "-         Class names starting with \"solr\" refer to java classes in a",
                "-       standard package such as org.apache.solr.analysis",
                "-    -->",
                "-",
                "-    <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are",
                "-         currently supported on types that are sorted internally as strings",
                "-         and on numeric types.",
                "-       This includes \"string\", \"boolean\", \"pint\", \"pfloat\", \"plong\", \"pdate\", \"pdouble\".",
                "-       - If sortMissingLast=\"true\", then a sort on this field will cause documents",
                "-         without the field to come after documents with the field,",
                "-         regardless of the requested sort order (asc or desc).",
                "-       - If sortMissingFirst=\"true\", then a sort on this field will cause documents",
                "-         without the field to come before documents with the field,",
                "-         regardless of the requested sort order.",
                "-       - If sortMissingLast=\"false\" and sortMissingFirst=\"false\" (the default),",
                "-         then default lucene sorting will be used which places docs without the",
                "-         field first in an ascending sort and last in a descending sort.",
                "-    -->",
                "-",
                "-    <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->",
                "-    <fieldType name=\"string\" class=\"solr.StrField\" sortMissingLast=\"true\" docValues=\"true\" />",
                "-    <fieldType name=\"strings\" class=\"solr.StrField\" sortMissingLast=\"true\" multiValued=\"true\" docValues=\"true\" />",
                "-",
                "-    <!-- boolean type: \"true\" or \"false\" -->",
                "-    <fieldType name=\"boolean\" class=\"solr.BoolField\" sortMissingLast=\"true\"/>",
                "-    <fieldType name=\"booleans\" class=\"solr.BoolField\" sortMissingLast=\"true\" multiValued=\"true\"/>",
                "-",
                "-    <!--",
                "-      Numeric field types that index values using KD-trees.",
                "-      Point fields don't support FieldCache, so they must have docValues=\"true\" if needed for sorting, faceting, functions, etc.",
                "-    -->",
                "-    <fieldType name=\"pint\" class=\"solr.IntPointField\" docValues=\"true\"/>",
                "-    <fieldType name=\"pfloat\" class=\"solr.FloatPointField\" docValues=\"true\"/>",
                "-    <fieldType name=\"plong\" class=\"solr.LongPointField\" docValues=\"true\"/>",
                "-    <fieldType name=\"pdouble\" class=\"solr.DoublePointField\" docValues=\"true\"/>",
                "-",
                "-    <fieldType name=\"pints\" class=\"solr.IntPointField\" docValues=\"true\" multiValued=\"true\"/>",
                "-    <fieldType name=\"pfloats\" class=\"solr.FloatPointField\" docValues=\"true\" multiValued=\"true\"/>",
                "-    <fieldType name=\"plongs\" class=\"solr.LongPointField\" docValues=\"true\" multiValued=\"true\"/>",
                "-    <fieldType name=\"pdoubles\" class=\"solr.DoublePointField\" docValues=\"true\" multiValued=\"true\"/>",
                "-",
                "-    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and",
                "-         is a more restricted form of the canonical representation of dateTime",
                "-         http://www.w3.org/TR/xmlschema-2/#dateTime",
                "-         The trailing \"Z\" designates UTC time and is mandatory.",
                "-         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z",
                "-         All other components are mandatory.",
                "-",
                "-         Expressions can also be used to denote calculations that should be",
                "-         performed relative to \"NOW\" to determine the value, ie...",
                "-",
                "-               NOW/HOUR",
                "-                  ... Round to the start of the current hour",
                "-               NOW-1DAY",
                "-                  ... Exactly 1 day prior to now",
                "-               NOW/DAY+6MONTHS+3DAYS",
                "-                  ... 6 months and 3 days in the future from the start of",
                "-                      the current day",
                "-",
                "-      -->",
                "-    <!-- KD-tree versions of date fields -->",
                "-    <fieldType name=\"pdate\" class=\"solr.DatePointField\" docValues=\"true\"/>",
                "-    <fieldType name=\"pdates\" class=\"solr.DatePointField\" docValues=\"true\" multiValued=\"true\"/>",
                "-",
                "-    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->",
                "-    <fieldType name=\"binary\" class=\"solr.BinaryField\"/>",
                "-",
                "-    <!-- solr.TextField allows the specification of custom text analyzers",
                "-         specified as a tokenizer and a list of token filters. Different",
                "-         analyzers may be specified for indexing and querying.",
                "-",
                "-         The optional positionIncrementGap puts space between multiple fields of",
                "-         this type on the same document, with the purpose of preventing false phrase",
                "-         matching across fields.",
                "-",
                "-         For more info on customizing your analyzer chain, please see",
                "-         http://lucene.apache.org/solr/guide/understanding-analyzers-tokenizers-and-filters.html#understanding-analyzers-tokenizers-and-filters",
                "-     -->",
                "-",
                "-    <!-- One can also specify an existing Analyzer class that has a",
                "-         default constructor via the class attribute on the analyzer element.",
                "-         Example:",
                "-    <fieldType name=\"text_greek\" class=\"solr.TextField\">",
                "-      <analyzer class=\"org.apache.lucene.analysis.el.GreekAnalyzer\"/>",
                "-    </fieldType>",
                "-    -->",
                "-",
                "-    <!-- A text field that only splits on whitespace for exact matching of words -->",
                "-    <dynamicField name=\"*_ws\" type=\"text_ws\"  indexed=\"true\"  stored=\"true\"/>",
                "-    <fieldType name=\"text_ws\" class=\"solr.TextField\" positionIncrementGap=\"100\">",
                "-      <analyzer>",
                "-        <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>",
                "-      </analyzer>",
                "-    </fieldType>",
                "-",
                "-    <!-- A general text field that has reasonable, generic",
                "-         cross-language defaults: it tokenizes with StandardTokenizer,",
                "-\t       removes stop words from case-insensitive \"stopwords.txt\"",
                "-\t       (empty by default), and down cases.  At query time only, it",
                "-\t       also applies synonyms.",
                "-\t  -->",
                "-    <fieldType name=\"text_general\" class=\"solr.TextField\" positionIncrementGap=\"100\" multiValued=\"true\">",
                "-      <analyzer type=\"index\">",
                "-        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "-        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "-        <!-- in this example, we will only use synonyms at query time",
                "-        <filter class=\"solr.SynonymGraphFilterFactory\" synonyms=\"index_synonyms.txt\" ignoreCase=\"true\" expand=\"false\"/>",
                "-        <filter class=\"solr.FlattenGraphFilterFactory\"/>",
                "-        -->",
                "-        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "-      </analyzer>",
                "-      <analyzer type=\"query\">",
                "-        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "-        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "-        <filter class=\"solr.SynonymGraphFilterFactory\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/>",
                "-        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "-      </analyzer>",
                "-    </fieldType>",
                "-",
                "-    <!-- Just like text_general except it reverses the characters of",
                "-\t       each token, to enable more efficient leading wildcard queries.",
                "-    -->",
                "-    <dynamicField name=\"*_txt_rev\" type=\"text_general_rev\"  indexed=\"true\"  stored=\"true\"/>",
                "-    <fieldType name=\"text_general_rev\" class=\"solr.TextField\" positionIncrementGap=\"100\">",
                "-      <analyzer type=\"index\">",
                "-        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "-        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "-        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "-        <filter class=\"solr.ReversedWildcardFilterFactory\" withOriginal=\"true\"",
                "-                maxPosAsterisk=\"3\" maxPosQuestion=\"2\" maxFractionAsterisk=\"0.33\"/>",
                "-      </analyzer>",
                "-      <analyzer type=\"query\">",
                "-        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "-        <filter class=\"solr.SynonymGraphFilterFactory\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/>",
                "-        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "-        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "-      </analyzer>",
                "-    </fieldType>",
                "-",
                "-    <dynamicField name=\"*_phon_en\" type=\"phonetic_en\"  indexed=\"true\"  stored=\"true\"/>",
                "-    <fieldType name=\"phonetic_en\" stored=\"false\" indexed=\"true\" class=\"solr.TextField\" >",
                "-      <analyzer>",
                "-        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "-        <filter class=\"solr.DoubleMetaphoneFilterFactory\" inject=\"false\"/>",
                "-      </analyzer>",
                "-    </fieldType>",
                "-",
                "-    <!-- lowercases the entire field value, keeping it as a single token.  -->",
                "-    <dynamicField name=\"*_s_lower\" type=\"lowercase\"  indexed=\"true\"  stored=\"true\"/>",
                "-    <fieldType name=\"lowercase\" class=\"solr.TextField\" positionIncrementGap=\"100\">",
                "-      <analyzer>",
                "-        <tokenizer class=\"solr.KeywordTokenizerFactory\"/>",
                "-        <filter class=\"solr.LowerCaseFilterFactory\" />",
                "-      </analyzer>",
                "-    </fieldType>",
                "-",
                "-    <!--",
                "-      Example of using PathHierarchyTokenizerFactory at index time, so",
                "-      queries for paths match documents at that path, or in descendent paths",
                "-    -->",
                "-    <dynamicField name=\"*_descendent_path\" type=\"descendent_path\"  indexed=\"true\"  stored=\"true\"/>",
                "-    <fieldType name=\"descendent_path\" class=\"solr.TextField\">",
                "-      <analyzer type=\"index\">",
                "-        <tokenizer class=\"solr.PathHierarchyTokenizerFactory\" delimiter=\"/\" />",
                "-      </analyzer>",
                "-      <analyzer type=\"query\">",
                "-        <tokenizer class=\"solr.KeywordTokenizerFactory\" />",
                "-      </analyzer>",
                "-    </fieldType>",
                "-",
                "-    <!--",
                "-      Example of using PathHierarchyTokenizerFactory at query time, so",
                "-      queries for paths match documents at that path, or in ancestor paths",
                "-    -->",
                "-    <dynamicField name=\"*_ancestor_path\" type=\"ancestor_path\"  indexed=\"true\"  stored=\"true\"/>",
                "-    <fieldType name=\"ancestor_path\" class=\"solr.TextField\">",
                "-      <analyzer type=\"index\">",
                "-        <tokenizer class=\"solr.KeywordTokenizerFactory\" />",
                "-      </analyzer>",
                "-      <analyzer type=\"query\">",
                "-        <tokenizer class=\"solr.PathHierarchyTokenizerFactory\" delimiter=\"/\" />",
                "-      </analyzer>",
                "-    </fieldType>",
                "-",
                "-    <!-- This point type indexes the coordinates as separate fields (subFields)",
                "-      If subFieldType is defined, it references a type, and a dynamic field",
                "-      definition is created matching *___<typename>.  Alternately, if",
                "-      subFieldSuffix is defined, that is used to create the subFields.",
                "-      Example: if subFieldType=\"double\", then the coordinates would be",
                "-        indexed in fields myloc_0___double,myloc_1___double.",
                "-      Example: if subFieldSuffix=\"_d\" then the coordinates would be indexed",
                "-        in fields myloc_0_d,myloc_1_d",
                "-      The subFields are an implementation detail of the fieldType, and end",
                "-      users normally should not need to know about them.",
                "-     -->",
                "-    <dynamicField name=\"*_point\" type=\"point\"  indexed=\"true\"  stored=\"true\"/>",
                "-    <fieldType name=\"point\" class=\"solr.PointType\" dimension=\"2\" subFieldSuffix=\"_d\"/>",
                "-",
                "-    <!-- A specialized field for geospatial search filters and distance sorting. -->",
                "-    <fieldType name=\"location\" class=\"solr.LatLonPointSpatialField\" docValues=\"true\"/>",
                "-",
                "-    <!-- A geospatial field type that supports multiValued and polygon shapes.",
                "-      For more information about this and other spatial fields see:",
                "-      http://lucene.apache.org/solr/guide/spatial-search.html",
                "-    -->",
                "-    <fieldType name=\"location_rpt\" class=\"solr.SpatialRecursivePrefixTreeFieldType\"",
                "-               geo=\"true\" distErrPct=\"0.025\" maxDistErr=\"0.001\" distanceUnits=\"kilometers\" />",
                "-",
                "-    <!-- Payloaded field types -->",
                "-    <fieldType name=\"delimited_payloads_float\" stored=\"false\" indexed=\"true\" class=\"solr.TextField\">",
                "-      <analyzer>",
                "-        <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>",
                "-        <filter class=\"solr.DelimitedPayloadTokenFilterFactory\" encoder=\"float\"/>",
                "-      </analyzer>",
                "-    </fieldType>",
                "-    <fieldType name=\"delimited_payloads_int\" stored=\"false\" indexed=\"true\" class=\"solr.TextField\">",
                "-      <analyzer>",
                "-        <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>",
                "-        <filter class=\"solr.DelimitedPayloadTokenFilterFactory\" encoder=\"integer\"/>",
                "-      </analyzer>",
                "-    </fieldType>",
                "-    <fieldType name=\"delimited_payloads_string\" stored=\"false\" indexed=\"true\" class=\"solr.TextField\">",
                "-      <analyzer>",
                "-        <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>",
                "-        <filter class=\"solr.DelimitedPayloadTokenFilterFactory\" encoder=\"identity\"/>",
                "-      </analyzer>",
                "-    </fieldType>",
                "-",
                "-    <!-- Similarity is the scoring routine for each document vs. a query.",
                "-       A custom Similarity or SimilarityFactory may be specified here, but",
                "-       the default is fine for most applications.",
                "-       For more info: http://lucene.apache.org/solr/guide/other-schema-elements.html#OtherSchemaElements-Similarity",
                "-    -->",
                "-    <!--",
                "-     <similarity class=\"com.example.solr.CustomSimilarityFactory\">",
                "-       <str name=\"paramkey\">param value</str>",
                "-     </similarity>",
                "-    -->",
                "-",
                "-</schema>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/solrconfig.xml b/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/solrconfig.xml",
                "deleted file mode 100644",
                "index 72c54304f24..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/solrconfig.xml",
                "+++ /dev/null",
                "@@ -1,232 +0,0 @@",
                "-<?xml version=\"1.0\" encoding=\"UTF-8\" ?>",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<config>",
                "-",
                "-  <luceneMatchVersion>${tests.luceneMatchVersion:LATEST}</luceneMatchVersion>",
                "-",
                "-  <dataDir>${solr.data.dir:}</dataDir>",
                "-",
                "-  <directoryFactory name=\"DirectoryFactory\"",
                "-                    class=\"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}\"/>",
                "-",
                "-  <codecFactory class=\"solr.SchemaCodecFactory\"/>",
                "-",
                "-  <indexConfig>",
                "-    <lockType>${solr.lock.type:native}</lockType>",
                "-  </indexConfig>",
                "-",
                "-  <jmx />",
                "-",
                "-  <updateHandler class=\"solr.DirectUpdateHandler2\">",
                "-",
                "-    <updateLog>",
                "-      <str name=\"dir\">${solr.ulog.dir:}</str>",
                "-      <int name=\"numVersionBuckets\">${solr.ulog.numVersionBuckets:65536}</int>",
                "-    </updateLog>",
                "-",
                "-    <autoCommit>",
                "-      <maxTime>${solr.autoCommit.maxTime:15000}</maxTime>",
                "-      <openSearcher>false</openSearcher>",
                "-    </autoCommit>",
                "-",
                "-    <autoSoftCommit>",
                "-      <maxTime>${solr.autoSoftCommit.maxTime:-1}</maxTime>",
                "-    </autoSoftCommit>",
                "-",
                "-  </updateHandler>",
                "-",
                "-  <query>",
                "-",
                "-    <maxBooleanClauses>1024</maxBooleanClauses>",
                "-",
                "-    <filterCache class=\"solr.FastLRUCache\"",
                "-                 size=\"512\"",
                "-                 initialSize=\"512\"",
                "-                 autowarmCount=\"0\"/>",
                "-",
                "-    <queryResultCache class=\"solr.LRUCache\"",
                "-                      size=\"512\"",
                "-                      initialSize=\"512\"",
                "-                      autowarmCount=\"0\"/>",
                "-",
                "-    <documentCache class=\"solr.LRUCache\"",
                "-                   size=\"512\"",
                "-                   initialSize=\"512\"",
                "-                   autowarmCount=\"0\"/>",
                "-",
                "-    <cache name=\"perSegFilter\"",
                "-           class=\"solr.search.LRUCache\"",
                "-           size=\"10\"",
                "-           initialSize=\"0\"",
                "-           autowarmCount=\"10\"",
                "-           regenerator=\"solr.NoOpRegenerator\" />",
                "-",
                "-    <enableLazyFieldLoading>true</enableLazyFieldLoading>",
                "-",
                "-    <queryResultWindowSize>20</queryResultWindowSize>",
                "-",
                "-    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>",
                "-",
                "-    <listener event=\"newSearcher\" class=\"solr.QuerySenderListener\">",
                "-      <arr name=\"queries\">",
                "-      </arr>",
                "-    </listener>",
                "-    <listener event=\"firstSearcher\" class=\"solr.QuerySenderListener\">",
                "-      <arr name=\"queries\">",
                "-      </arr>",
                "-    </listener>",
                "-",
                "-    <useColdSearcher>false</useColdSearcher>",
                "-",
                "-  </query>",
                "-",
                "-  <requestDispatcher>",
                "-",
                "-    <httpCaching never304=\"true\" />",
                "-",
                "-  </requestDispatcher>",
                "-",
                "-  <!-- Request Handlers",
                "-",
                "-       http://wiki.apache.org/solr/SolrRequestHandler",
                "-",
                "-       Incoming queries will be dispatched to a specific handler by name",
                "-       based on the path specified in the request.",
                "-",
                "-       If a Request Handler is declared with startup=\"lazy\", then it will",
                "-       not be initialized until the first request that uses it.",
                "-",
                "-    -->",
                "-  <!-- SearchHandler",
                "-",
                "-       http://wiki.apache.org/solr/SearchHandler",
                "-",
                "-       For processing Search Queries, the primary Request Handler",
                "-       provided with Solr is \"SearchHandler\" It delegates to a sequent",
                "-       of SearchComponents (see below) and supports distributed",
                "-       queries across multiple shards",
                "-    -->",
                "-  <requestHandler name=\"/select\" class=\"solr.SearchHandler\">",
                "-    <lst name=\"defaults\">",
                "-      <str name=\"echoParams\">explicit</str>",
                "-      <int name=\"rows\">10</int>",
                "-    </lst>",
                "-  </requestHandler>",
                "-",
                "-  <!-- Update Processors",
                "-",
                "-       Chains of Update Processor Factories for dealing with Update",
                "-       Requests can be declared, and then used by name in Update",
                "-       Request Processors",
                "-",
                "-       http://wiki.apache.org/solr/UpdateRequestProcessor",
                "-",
                "-    -->",
                "-",
                "-  <!-- Add unknown fields to the schema",
                "-",
                "-       Field type guessing update processors that will",
                "-       attempt to parse string-typed field values as Booleans, Longs,",
                "-       Doubles, or Dates, and then add schema fields with the guessed",
                "-       field types. Text content will be indexed as \"text_general\" as",
                "-       well as a copy to a plain string version in *_str.",
                "-",
                "-       These require that the schema is both managed and mutable, by",
                "-       declaring schemaFactory as ManagedIndexSchemaFactory, with",
                "-       mutable specified as true.",
                "-",
                "-       See http://wiki.apache.org/solr/GuessingFieldTypes",
                "-    -->",
                "-  <updateProcessor class=\"solr.UUIDUpdateProcessorFactory\" name=\"uuid\"/>",
                "-  <updateProcessor class=\"solr.RemoveBlankFieldUpdateProcessorFactory\" name=\"remove-blank\"/>",
                "-  <updateProcessor class=\"solr.FieldNameMutatingUpdateProcessorFactory\" name=\"field-name-mutating\">",
                "-    <str name=\"pattern\">[^\\w-\\.]</str>",
                "-    <str name=\"replacement\">_</str>",
                "-  </updateProcessor>",
                "-  <updateProcessor class=\"solr.ParseBooleanFieldUpdateProcessorFactory\" name=\"parse-boolean\"/>",
                "-  <updateProcessor class=\"solr.ParseLongFieldUpdateProcessorFactory\" name=\"parse-long\"/>",
                "-  <updateProcessor class=\"solr.ParseDoubleFieldUpdateProcessorFactory\" name=\"parse-double\"/>",
                "-  <updateProcessor class=\"solr.ParseDateFieldUpdateProcessorFactory\" name=\"parse-date\">",
                "-    <arr name=\"format\">",
                "-      <str>yyyy-MM-dd'T'HH:mm:ss.SSSZ</str>",
                "-      <str>yyyy-MM-dd'T'HH:mm:ss,SSSZ</str>",
                "-      <str>yyyy-MM-dd'T'HH:mm:ss.SSS</str>",
                "-      <str>yyyy-MM-dd'T'HH:mm:ss,SSS</str>",
                "-      <str>yyyy-MM-dd'T'HH:mm:ssZ</str>",
                "-      <str>yyyy-MM-dd'T'HH:mm:ss</str>",
                "-      <str>yyyy-MM-dd'T'HH:mmZ</str>",
                "-      <str>yyyy-MM-dd'T'HH:mm</str>",
                "-      <str>yyyy-MM-dd HH:mm:ss.SSSZ</str>",
                "-      <str>yyyy-MM-dd HH:mm:ss,SSSZ</str>",
                "-      <str>yyyy-MM-dd HH:mm:ss.SSS</str>",
                "-      <str>yyyy-MM-dd HH:mm:ss,SSS</str>",
                "-      <str>yyyy-MM-dd HH:mm:ssZ</str>",
                "-      <str>yyyy-MM-dd HH:mm:ss</str>",
                "-      <str>yyyy-MM-dd HH:mmZ</str>",
                "-      <str>yyyy-MM-dd HH:mm</str>",
                "-      <str>yyyy-MM-dd</str>",
                "-    </arr>",
                "-  </updateProcessor>",
                "-  <updateProcessor class=\"solr.AddSchemaFieldsUpdateProcessorFactory\" name=\"add-schema-fields\">",
                "-    <lst name=\"typeMapping\">",
                "-      <str name=\"valueClass\">java.lang.String</str>",
                "-      <str name=\"fieldType\">text_general</str>",
                "-      <lst name=\"copyField\">",
                "-        <str name=\"dest\">*_str</str>",
                "-        <int name=\"maxChars\">256</int>",
                "-      </lst>",
                "-      <!-- Use as default mapping instead of defaultFieldType -->",
                "-      <bool name=\"default\">true</bool>",
                "-    </lst>",
                "-    <lst name=\"typeMapping\">",
                "-      <str name=\"valueClass\">java.lang.Boolean</str>",
                "-      <str name=\"fieldType\">booleans</str>",
                "-    </lst>",
                "-    <lst name=\"typeMapping\">",
                "-      <str name=\"valueClass\">java.util.Date</str>",
                "-      <str name=\"fieldType\">pdates</str>",
                "-    </lst>",
                "-    <lst name=\"typeMapping\">",
                "-      <str name=\"valueClass\">java.lang.Long</str>",
                "-      <str name=\"valueClass\">java.lang.Integer</str>",
                "-      <str name=\"fieldType\">plongs</str>",
                "-    </lst>",
                "-    <lst name=\"typeMapping\">",
                "-      <str name=\"valueClass\">java.lang.Number</str>",
                "-      <str name=\"fieldType\">pdoubles</str>",
                "-    </lst>",
                "-  </updateProcessor>",
                "-",
                "-  <!-- The update.autoCreateFields property can be turned to false to disable schemaless mode -->",
                "-  <updateRequestProcessorChain name=\"add-unknown-fields-to-the-schema\" default=\"${update.autoCreateFields:true}\"",
                "-           processor=\"uuid,remove-blank,field-name-mutating,parse-boolean,parse-long,parse-double,parse-date,add-schema-fields\">",
                "-    <processor class=\"solr.LogUpdateProcessorFactory\"/>",
                "-    <processor class=\"solr.DistributedUpdateProcessorFactory\"/>",
                "-    <processor class=\"solr.RunUpdateProcessorFactory\"/>",
                "-  </updateRequestProcessorChain>",
                "-",
                "-  <queryResponseWriter name=\"json\" class=\"solr.JSONResponseWriter\">",
                "-    <!-- For the purposes of the tutorial, JSON responses are written as",
                "-     plain text so that they are easy to read in *any* browser.",
                "-     If you expect a MIME type of \"application/json\" just remove this override.",
                "-    -->",
                "-    <str name=\"content-type\">text/plain; charset=UTF-8</str>",
                "-  </queryResponseWriter>",
                "-",
                "-</config>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/gb18030-example.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/gb18030-example.xml",
                "deleted file mode 100644",
                "index 01743d3675c..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/gb18030-example.xml",
                "+++ /dev/null",
                "@@ -1,32 +0,0 @@",
                "-<?xml version=\"1.0\" encoding=\"GB18030\"?>",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add>",
                "-  <doc>",
                "-    <field name=\"id\">GB18030TEST</field>",
                "-    <field name=\"name\">Test with some GB18030 encoded characters</field>",
                "-    <field name=\"features\">No accents here</field>",
                "-    <field name=\"features\">\u00d5\u00e2\u00ca\u00c7\u00d2\u00bb\u00b8\u00f6\u00b9\u00a6\u00c4\u00dc</field>",
                "-    <field name=\"features\">This is a feature (translated)</field>",
                "-    <field name=\"features\">\u00d5\u00e2\u00b7\u00dd\u00ce\u00c4\u00bc\u00fe\u00ca\u00c7\u00ba\u00dc\u00d3\u00d0\u00b9\u00e2\u00d4\u00f3</field>",
                "-    <field name=\"features\">This document is very shiny (translated)</field>",
                "-    <field name=\"price\">0.0</field>",
                "-    <field name=\"inStock\">true</field>",
                "-  </doc>",
                "-</add>",
                "-",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/hd.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/hd.xml",
                "deleted file mode 100644",
                "index 9cf7d1b05d8..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/hd.xml",
                "+++ /dev/null",
                "@@ -1,56 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add>",
                "-<doc>",
                "-  <field name=\"id\">SP2514N</field>",
                "-  <field name=\"name\">Samsung SpinPoint P120 SP2514N - hard drive - 250 GB - ATA-133</field>",
                "-  <field name=\"manu\">Samsung Electronics Co. Ltd.</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">samsung</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">hard drive</field>",
                "-  <field name=\"features\">7200RPM, 8MB cache, IDE Ultra ATA-133</field>",
                "-  <field name=\"features\">NoiseGuard, SilentSeek technology, Fluid Dynamic Bearing (FDB) motor</field>",
                "-  <field name=\"price\">92.0</field>",
                "-  <field name=\"popularity\">6</field>",
                "-  <field name=\"inStock\">true</field>",
                "-  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "-  <!-- Near Oklahoma city -->",
                "-  <field name=\"store\">35.0752,-97.032</field>",
                "-</doc>",
                "-",
                "-<doc>",
                "-  <field name=\"id\">6H500F0</field>",
                "-  <field name=\"name\">Maxtor DiamondMax 11 - hard drive - 500 GB - SATA-300</field>",
                "-  <field name=\"manu\">Maxtor Corp.</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">maxtor</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">hard drive</field>",
                "-  <field name=\"features\">SATA 3.0Gb/s, NCQ</field>",
                "-  <field name=\"features\">8.5ms seek</field>",
                "-  <field name=\"features\">16MB cache</field>",
                "-  <field name=\"price\">350.0</field>",
                "-  <field name=\"popularity\">6</field>",
                "-  <field name=\"inStock\">true</field>",
                "-  <!-- Buffalo store -->",
                "-  <field name=\"store\">45.17614,-93.87341</field>",
                "-  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "-</doc>",
                "-</add>",
                "-",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_other.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_other.xml",
                "deleted file mode 100644",
                "index 3de32f3b71c..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_other.xml",
                "+++ /dev/null",
                "@@ -1,60 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add>",
                "-",
                "-<doc>",
                "-  <field name=\"id\">F8V7067-APL-KIT</field>",
                "-  <field name=\"name\">Belkin Mobile Power Cord for iPod w/ Dock</field>",
                "-  <field name=\"manu\">Belkin</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">belkin</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">connector</field>",
                "-  <field name=\"features\">car power adapter, white</field>",
                "-  <field name=\"weight\">4.0</field>",
                "-  <field name=\"price\">19.95</field>",
                "-  <field name=\"popularity\">1</field>",
                "-  <field name=\"inStock\">false</field>",
                "-  <!-- Buffalo store -->",
                "-  <field name=\"store\">45.18014,-93.87741</field>",
                "-  <field name=\"manufacturedate_dt\">2005-08-01T16:30:25Z</field>",
                "-</doc>",
                "-",
                "-<doc>",
                "-  <field name=\"id\">IW-02</field>",
                "-  <field name=\"name\">iPod &amp; iPod Mini USB 2.0 Cable</field>",
                "-  <field name=\"manu\">Belkin</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">belkin</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">connector</field>",
                "-  <field name=\"features\">car power adapter for iPod, white</field>",
                "-  <field name=\"weight\">2.0</field>",
                "-  <field name=\"price\">11.50</field>",
                "-  <field name=\"popularity\">1</field>",
                "-  <field name=\"inStock\">false</field>",
                "-  <!-- San Francisco store -->",
                "-  <field name=\"store\">37.7752,-122.4232</field>",
                "-  <field name=\"manufacturedate_dt\">2006-02-14T23:55:59Z</field>",
                "-</doc>",
                "-",
                "-",
                "-</add>",
                "-",
                "-",
                "-",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_video.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_video.xml",
                "deleted file mode 100644",
                "index 1ca5f6f5c21..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_video.xml",
                "+++ /dev/null",
                "@@ -1,40 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add><doc>",
                "-  <field name=\"id\">MA147LL/A</field>",
                "-  <field name=\"name\">Apple 60 GB iPod with Video Playback Black</field>",
                "-  <field name=\"manu\">Apple Computer Inc.</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">apple</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">music</field>",
                "-  <field name=\"features\">iTunes, Podcasts, Audiobooks</field>",
                "-  <field name=\"features\">Stores up to 15,000 songs, 25,000 photos, or 150 hours of video</field>",
                "-  <field name=\"features\">2.5-inch, 320x240 color TFT LCD display with LED backlight</field>",
                "-  <field name=\"features\">Up to 20 hours of battery life</field>",
                "-  <field name=\"features\">Plays AAC, MP3, WAV, AIFF, Audible, Apple Lossless, H.264 video</field>",
                "-  <field name=\"features\">Notes, Calendar, Phone book, Hold button, Date display, Photo wallet, Built-in games, JPEG photo playback, Upgradeable firmware, USB 2.0 compatibility, Playback speed control, Rechargeable capability, Battery level indication</field>",
                "-  <field name=\"includes\">earbud headphones, USB cable</field>",
                "-  <field name=\"weight\">5.5</field>",
                "-  <field name=\"price\">399.00</field>",
                "-  <field name=\"popularity\">10</field>",
                "-  <field name=\"inStock\">true</field>",
                "-  <!-- Dodge City store -->",
                "-  <field name=\"store\">37.7752,-100.0232</field>",
                "-  <field name=\"manufacturedate_dt\">2005-10-12T08:00:00Z</field>",
                "-</doc></add>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/manufacturers.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/manufacturers.xml",
                "deleted file mode 100644",
                "index e3121d5db1f..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/manufacturers.xml",
                "+++ /dev/null",
                "@@ -1,75 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add>",
                "-  <doc>",
                "-    <field name=\"id\">adata</field>",
                "-    <field name=\"compName_s\">A-Data Technology</field>",
                "-    <field name=\"address_s\">46221 Landing Parkway Fremont, CA 94538</field>",
                "-  </doc>",
                "-  <doc>",
                "-    <field name=\"id\">apple</field>",
                "-    <field name=\"compName_s\">Apple</field>",
                "-    <field name=\"address_s\">1 Infinite Way, Cupertino CA</field>",
                "-  </doc>",
                "-  <doc>",
                "-    <field name=\"id\">asus</field>",
                "-    <field name=\"compName_s\">ASUS Computer</field>",
                "-    <field name=\"address_s\">800 Corporate Way Fremont, CA 94539</field>",
                "-  </doc>",
                "-  <doc>",
                "-    <field name=\"id\">ati</field>",
                "-    <field name=\"compName_s\">ATI Technologies</field>",
                "-    <field name=\"address_s\">33 Commerce Valley Drive East Thornhill, ON L3T 7N6 Canada</field>",
                "-  </doc>",
                "-  <doc>",
                "-    <field name=\"id\">belkin</field>",
                "-    <field name=\"compName_s\">Belkin</field>",
                "-    <field name=\"address_s\">12045 E. Waterfront Drive Playa Vista, CA 90094</field>",
                "-  </doc>",
                "-  <doc>",
                "-    <field name=\"id\">canon</field>",
                "-    <field name=\"compName_s\">Canon, Inc.</field>",
                "-    <field name=\"address_s\">One Canon Plaza Lake Success, NY 11042</field>",
                "-  </doc>",
                "-  <doc>",
                "-    <field name=\"id\">corsair</field>",
                "-    <field name=\"compName_s\">Corsair Microsystems</field>",
                "-    <field name=\"address_s\">46221 Landing Parkway Fremont, CA 94538</field>",
                "-  </doc>",
                "-  <doc>",
                "-    <field name=\"id\">dell</field>",
                "-    <field name=\"compName_s\">Dell, Inc.</field>",
                "-    <field name=\"address_s\">One Dell Way Round Rock, Texas 78682</field>",
                "-  </doc>",
                "-  <doc>",
                "-    <field name=\"id\">maxtor</field>",
                "-    <field name=\"compName_s\">Maxtor Corporation</field>",
                "-    <field name=\"address_s\">920 Disc Drive Scotts Valley, CA 95066</field>",
                "-  </doc>",
                "-  <doc>",
                "-    <field name=\"id\">samsung</field>",
                "-    <field name=\"compName_s\">Samsung Electronics Co. Ltd.</field>",
                "-    <field name=\"address_s\">105 Challenger Rd. Ridgefield Park, NJ 07660-0511</field>",
                "-  </doc>",
                "-  <doc>",
                "-    <field name=\"id\">viewsonic</field>",
                "-    <field name=\"compName_s\">ViewSonic Corp</field>",
                "-    <field name=\"address_s\">381 Brea Canyon Road Walnut, CA 91789-0708</field>",
                "-  </doc>",
                "-</add>",
                "-",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mem.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mem.xml",
                "deleted file mode 100644",
                "index 48af5222fe4..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mem.xml",
                "+++ /dev/null",
                "@@ -1,77 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add>",
                "-<doc>",
                "-  <field name=\"id\">TWINX2048-3200PRO</field>",
                "-  <field name=\"name\">CORSAIR  XMS 2GB (2 x 1GB) 184-Pin DDR SDRAM Unbuffered DDR 400 (PC 3200) Dual Channel Kit System Memory - Retail</field>",
                "-  <field name=\"manu\">Corsair Microsystems Inc.</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">corsair</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">memory</field>",
                "-  <field name=\"features\">CAS latency 2,  2-3-3-6 timing, 2.75v, unbuffered, heat-spreader</field>",
                "-  <field name=\"price\">185.00</field>",
                "-  <field name=\"popularity\">5</field>",
                "-  <field name=\"inStock\">true</field>",
                "-  <!-- San Francisco store -->",
                "-  <field name=\"store\">37.7752,-122.4232</field>",
                "-  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "-",
                "-  <!-- a field for testing payload tagged text via DelimitedPayloadTokenFilter -->",
                "-  <field name=\"payloads\">electronics|6.0 memory|3.0</field>",
                "-</doc>",
                "-",
                "-<doc>",
                "-  <field name=\"id\">VS1GB400C3</field>",
                "-  <field name=\"name\">CORSAIR ValueSelect 1GB 184-Pin DDR SDRAM Unbuffered DDR 400 (PC 3200) System Memory - Retail</field>",
                "-  <field name=\"manu\">Corsair Microsystems Inc.</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">corsair</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">memory</field>",
                "-  <field name=\"price\">74.99</field>",
                "-  <field name=\"popularity\">7</field>",
                "-  <field name=\"inStock\">true</field>",
                "-  <!-- Dodge City store -->",
                "-  <field name=\"store\">37.7752,-100.0232</field>",
                "-  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "-",
                "-  <field name=\"payloads\">electronics|4.0 memory|2.0</field>",
                "-</doc>",
                "-",
                "-<doc>",
                "-  <field name=\"id\">VDBDB1A16</field>",
                "-  <field name=\"name\">A-DATA V-Series 1GB 184-Pin DDR SDRAM Unbuffered DDR 400 (PC 3200) System Memory - OEM</field>",
                "-  <field name=\"manu\">A-DATA Technology Inc.</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">corsair</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">memory</field>",
                "-  <field name=\"features\">CAS latency 3,   2.7v</field>",
                "-  <!-- note: price & popularity is missing on this one -->",
                "-  <field name=\"popularity\">0</field>",
                "-  <field name=\"inStock\">true</field>",
                "-  <!-- Buffalo store -->",
                "-  <field name=\"store\">45.18414,-93.88141</field>",
                "-  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "-",
                "-  <field name=\"payloads\">electronics|0.9 memory|0.1</field>",
                "-</doc>",
                "-",
                "-</add>",
                "-",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/money.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/money.xml",
                "deleted file mode 100644",
                "index b1b8036c369..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/money.xml",
                "+++ /dev/null",
                "@@ -1,65 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<!-- Example documents utilizing the CurrencyField type -->",
                "-<add>",
                "-<doc>",
                "-  <field name=\"id\">USD</field>",
                "-  <field name=\"name\">One Dollar</field>",
                "-  <field name=\"manu\">Bank of America</field>",
                "-  <field name=\"manu_id_s\">boa</field>",
                "-  <field name=\"cat\">currency</field>",
                "-  <field name=\"features\">Coins and notes</field>",
                "-  <field name=\"price_c\">1,USD</field>",
                "-  <field name=\"inStock\">true</field>",
                "-</doc>",
                "-",
                "-<doc>",
                "-  <field name=\"id\">EUR</field>",
                "-  <field name=\"name\">One Euro</field>",
                "-  <field name=\"manu\">European Union</field>",
                "-  <field name=\"manu_id_s\">eu</field>",
                "-  <field name=\"cat\">currency</field>",
                "-  <field name=\"features\">Coins and notes</field>",
                "-  <field name=\"price_c\">1,EUR</field>",
                "-  <field name=\"inStock\">true</field>",
                "-</doc>",
                "-",
                "-<doc>",
                "-  <field name=\"id\">GBP</field>",
                "-  <field name=\"name\">One British Pound</field>",
                "-  <field name=\"manu\">U.K.</field>",
                "-  <field name=\"manu_id_s\">uk</field>",
                "-  <field name=\"cat\">currency</field>",
                "-  <field name=\"features\">Coins and notes</field>",
                "-  <field name=\"price_c\">1,GBP</field>",
                "-  <field name=\"inStock\">true</field>",
                "-</doc>",
                "-",
                "-<doc>",
                "-  <field name=\"id\">NOK</field>",
                "-  <field name=\"name\">One Krone</field>",
                "-  <field name=\"manu\">Bank of Norway</field>",
                "-  <field name=\"manu_id_s\">nor</field>",
                "-  <field name=\"cat\">currency</field>",
                "-  <field name=\"features\">Coins and notes</field>",
                "-  <field name=\"price_c\">1,NOK</field>",
                "-  <field name=\"inStock\">true</field>",
                "-</doc>",
                "-",
                "-</add>",
                "-",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor.xml",
                "deleted file mode 100644",
                "index d0343af1594..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor.xml",
                "+++ /dev/null",
                "@@ -1,34 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add><doc>",
                "-  <field name=\"id\">3007WFP</field>",
                "-  <field name=\"name\">Dell Widescreen UltraSharp 3007WFP</field>",
                "-  <field name=\"manu\">Dell, Inc.</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">dell</field>",
                "-  <field name=\"cat\">electronics and computer1</field>",
                "-  <field name=\"features\">30\" TFT active matrix LCD, 2560 x 1600, .25mm dot pitch, 700:1 contrast</field>",
                "-  <field name=\"includes\">USB cable</field>",
                "-  <field name=\"weight\">401.6</field>",
                "-  <field name=\"price\">2199.0</field>",
                "-  <field name=\"popularity\">6</field>",
                "-  <field name=\"inStock\">true</field>",
                "-  <!-- Buffalo store -->",
                "-  <field name=\"store\">43.17614,-90.57341</field>",
                "-</doc></add>",
                "-",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor2.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor2.xml",
                "deleted file mode 100644",
                "index eaf9e223ccd..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor2.xml",
                "+++ /dev/null",
                "@@ -1,33 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add><doc>",
                "-  <field name=\"id\">VA902B</field>",
                "-  <field name=\"name\">ViewSonic VA902B - flat panel display - TFT - 19\"</field>",
                "-  <field name=\"manu\">ViewSonic Corp.</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">viewsonic</field>",
                "-  <field name=\"cat\">electronics and stuff2</field>",
                "-  <field name=\"features\">19\" TFT active matrix LCD, 8ms response time, 1280 x 1024 native resolution</field>",
                "-  <field name=\"weight\">190.4</field>",
                "-  <field name=\"price\">279.95</field>",
                "-  <field name=\"popularity\">6</field>",
                "-  <field name=\"inStock\">true</field>",
                "-  <!-- Buffalo store -->",
                "-  <field name=\"store\">45.18814,-93.88541</field>",
                "-</doc></add>",
                "-",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mp500.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mp500.xml",
                "deleted file mode 100644",
                "index a8f51b643ca..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mp500.xml",
                "+++ /dev/null",
                "@@ -1,43 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add><doc>",
                "-  <field name=\"id\">0579B002</field>",
                "-  <field name=\"name\">Canon PIXMA MP500 All-In-One Photo Printer</field>",
                "-  <field name=\"manu\">Canon Inc.</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">canon</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">multifunction printer</field>",
                "-  <field name=\"cat\">printer</field>",
                "-  <field name=\"cat\">scanner</field>",
                "-  <field name=\"cat\">copier</field>",
                "-  <field name=\"features\">Multifunction ink-jet color photo printer</field>",
                "-  <field name=\"features\">Flatbed scanner, optical scan resolution of 1,200 x 2,400 dpi</field>",
                "-  <field name=\"features\">2.5\" color LCD preview screen</field>",
                "-  <field name=\"features\">Duplex Copying</field>",
                "-  <field name=\"features\">Printing speed up to 29ppm black, 19ppm color</field>",
                "-  <field name=\"features\">Hi-Speed USB</field>",
                "-  <field name=\"features\">memory card: CompactFlash, Micro Drive, SmartMedia, Memory Stick, Memory Stick Pro, SD Card, and MultiMediaCard</field>",
                "-  <field name=\"weight\">352.0</field>",
                "-  <field name=\"price\">179.99</field>",
                "-  <field name=\"popularity\">6</field>",
                "-  <field name=\"inStock\">true</field>",
                "-  <!-- Buffalo store -->",
                "-  <field name=\"store\">45.19214,-93.89941</field>",
                "-</doc></add>",
                "-",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sample.html b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sample.html",
                "deleted file mode 100644",
                "index 656b656b6ab..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sample.html",
                "+++ /dev/null",
                "@@ -1,13 +0,0 @@",
                "-<html>",
                "-<head>",
                "-  <title>Welcome to Solr</title>",
                "-</head>",
                "-<body>",
                "-<p>",
                "-  Here is some text",
                "-</p>",
                "-<p>distinct<br/>words</p>",
                "-<div>Here is some text in a div</div>",
                "-<div>This has a <a href=\"http://www.apache.org\">link</a>.</div>",
                "-</body>",
                "-</html>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sd500.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sd500.xml",
                "deleted file mode 100644",
                "index 145c6fd5de6..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sd500.xml",
                "+++ /dev/null",
                "@@ -1,38 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add><doc>",
                "-  <field name=\"id\">9885A004</field>",
                "-  <field name=\"name\">Canon PowerShot SD500</field>",
                "-  <field name=\"manu\">Canon Inc.</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">canon</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">camera</field>",
                "-  <field name=\"features\">3x zoop, 7.1 megapixel Digital ELPH</field>",
                "-  <field name=\"features\">movie clips up to 640x480 @30 fps</field>",
                "-  <field name=\"features\">2.0\" TFT LCD, 118,000 pixels</field>",
                "-  <field name=\"features\">built in flash, red-eye reduction</field>",
                "-  <field name=\"includes\">32MB SD card, USB cable, AV cable, battery</field>",
                "-  <field name=\"weight\">6.4</field>",
                "-  <field name=\"price\">329.95</field>",
                "-  <field name=\"popularity\">7</field>",
                "-  <field name=\"inStock\">true</field>",
                "-  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "-  <!-- Buffalo store -->",
                "-  <field name=\"store\">45.19614,-93.90341</field>",
                "-</doc></add>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/solr.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/solr.xml",
                "deleted file mode 100644",
                "index a3656175217..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/solr.xml",
                "+++ /dev/null",
                "@@ -1,38 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add>",
                "-<doc>",
                "-  <field name=\"id\">SOLR1000</field>",
                "-  <field name=\"name\">Solr, the Enterprise Search Server</field>",
                "-  <field name=\"manu\">Apache Software Foundation</field>",
                "-  <field name=\"cat\">software</field>",
                "-  <field name=\"cat\">search</field>",
                "-  <field name=\"features\">Advanced Full-Text Search Capabilities using Lucene</field>",
                "-  <field name=\"features\">Optimized for High Volume Web Traffic</field>",
                "-  <field name=\"features\">Standards Based Open Interfaces - XML and HTTP</field>",
                "-  <field name=\"features\">Comprehensive HTML Administration Interfaces</field>",
                "-  <field name=\"features\">Scalability - Efficient Replication to other Solr Search Servers</field>",
                "-  <field name=\"features\">Flexible and Adaptable with XML configuration and Schema</field>",
                "-  <field name=\"features\">Good unicode support: h&#xE9;llo (hello with an accent over the e)</field>",
                "-  <field name=\"price\">0.0</field>",
                "-  <field name=\"popularity\">10</field>",
                "-  <field name=\"inStock\">true</field>",
                "-  <field name=\"incubationdate_dt\">2006-01-17T00:00:00.000Z</field>",
                "-</doc>",
                "-</add>",
                "-",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/utf8-example.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/utf8-example.xml",
                "deleted file mode 100644",
                "index ee300a68306..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/utf8-example.xml",
                "+++ /dev/null",
                "@@ -1,42 +0,0 @@",
                "-<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<!-- ",
                "-  After posting this to Solr with bin/post, searching for \"\u00c3\u00aa\u00c3\u00a2\u00c3\u00ae\u00c3\u00b4\u00c3\u00bb\" from",
                "-  the solr/admin/ search page must return this document.",
                "- -->",
                "-",
                "-<add>",
                "-  <doc>",
                "-    <field name=\"id\">UTF8TEST</field>",
                "-    <field name=\"name\">Test with some UTF-8 encoded characters</field>",
                "-    <field name=\"manu\">Apache Software Foundation</field>",
                "-    <field name=\"cat\">software</field>",
                "-    <field name=\"cat\">search</field>",
                "-    <field name=\"features\">No accents here</field>",
                "-    <field name=\"features\">This is an e acute: \u00c3\u00a9</field>",
                "-    <field name=\"features\">eaiou with circumflexes: \u00c3\u00aa\u00c3\u00a2\u00c3\u00ae\u00c3\u00b4\u00c3\u00bb</field>",
                "-    <field name=\"features\">eaiou with umlauts: \u00c3\u00ab\u00c3\u00a4\u00c3\u00af\u00c3\u00b6\u00c3\u00bc</field>",
                "-    <field name=\"features\">tag with escaped chars: &lt;nicetag/&gt;</field>",
                "-    <field name=\"features\">escaped ampersand: Bonnie &amp; Clyde</field>",
                "-    <field name=\"features\">Outside the BMP:\u00f0\u0090\u008c\u0088 codepoint=10308, a circle with an x inside. UTF8=f0908c88 UTF16=d800 df08</field>",
                "-    <field name=\"price\">0.0</field>",
                "-    <field name=\"inStock\">true</field>",
                "-  </doc>",
                "-</add>",
                "-",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/vidcard.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/vidcard.xml",
                "deleted file mode 100644",
                "index d867d82acd1..00000000000",
                "--- a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/vidcard.xml",
                "+++ /dev/null",
                "@@ -1,62 +0,0 @@",
                "-<!--",
                "- Licensed to the Apache Software Foundation (ASF) under one or more",
                "- contributor license agreements.  See the NOTICE file distributed with",
                "- this work for additional information regarding copyright ownership.",
                "- The ASF licenses this file to You under the Apache License, Version 2.0",
                "- (the \"License\"); you may not use this file except in compliance with",
                "- the License.  You may obtain a copy of the License at",
                "-",
                "-     http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "- Unless required by applicable law or agreed to in writing, software",
                "- distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- See the License for the specific language governing permissions and",
                "- limitations under the License.",
                "--->",
                "-",
                "-<add>",
                "-<doc>",
                "-  <field name=\"id\">EN7800GTX/2DHTV/256M</field>",
                "-  <field name=\"name\">ASUS Extreme N7800GTX/2DHTV (256 MB)</field>",
                "-  <!-- Denormalized -->",
                "-  <field name=\"manu\">ASUS Computer Inc.</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">asus</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">graphics card</field>",
                "-  <field name=\"features\">NVIDIA GeForce 7800 GTX GPU/VPU clocked at 486MHz</field>",
                "-  <field name=\"features\">256MB GDDR3 Memory clocked at 1.35GHz</field>",
                "-  <field name=\"features\">PCI Express x16</field>",
                "-  <field name=\"features\">Dual DVI connectors, HDTV out, video input</field>",
                "-  <field name=\"features\">OpenGL 2.0, DirectX 9.0</field>",
                "-  <field name=\"weight\">16.0</field>",
                "-  <field name=\"price\">479.95</field>",
                "-  <field name=\"popularity\">7</field>",
                "-  <field name=\"store\">40.7143,-74.006</field>",
                "-  <field name=\"inStock\">false</field>",
                "-  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z/DAY</field>",
                "-</doc>",
                "-  <!-- yes, you can add more than one document at a time -->",
                "-<doc>",
                "-  <field name=\"id\">100-435805</field>",
                "-  <field name=\"name\">ATI Radeon X1900 XTX 512 MB PCIE Video Card</field>",
                "-  <field name=\"manu\">ATI Technologies</field>",
                "-  <!-- Join -->",
                "-  <field name=\"manu_id_s\">ati</field>",
                "-  <field name=\"cat\">electronics</field>",
                "-  <field name=\"cat\">graphics card</field>",
                "-  <field name=\"features\">ATI RADEON X1900 GPU/VPU clocked at 650MHz</field>",
                "-  <field name=\"features\">512MB GDDR3 SDRAM clocked at 1.55GHz</field>",
                "-  <field name=\"features\">PCI Express x16</field>",
                "-  <field name=\"features\">dual DVI, HDTV, svideo, composite out</field>",
                "-  <field name=\"features\">OpenGL 2.0, DirectX 9.0</field>",
                "-  <field name=\"weight\">48.0</field>",
                "-  <field name=\"price\">649.99</field>",
                "-  <field name=\"popularity\">7</field>",
                "-  <field name=\"inStock\">false</field>",
                "-  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z/DAY</field>",
                "-  <!-- NYC store -->",
                "-  <field name=\"store\">40.7143,-74.006</field>",
                "-</doc>",
                "-</add>",
                "diff --git a/solr/licenses/argparse4j-0.8.1.jar.sha1 b/solr/licenses/argparse4j-0.8.1.jar.sha1",
                "deleted file mode 100644",
                "index 27a0568b074..00000000000",
                "--- a/solr/licenses/argparse4j-0.8.1.jar.sha1",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-2c8241f84acf6c924bd75be0dbd68e8d74fbcd70",
                "diff --git a/solr/licenses/jackson-jq-0.0.8.jar.sha1 b/solr/licenses/jackson-jq-0.0.8.jar.sha1",
                "deleted file mode 100644",
                "index 4b7a4d297df..00000000000",
                "--- a/solr/licenses/jackson-jq-0.0.8.jar.sha1",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-9bd1a7f8268a436674a4f3210f11ef4eebe14d84",
                "diff --git a/solr/licenses/simpleclient-0.2.0.jar.sha1 b/solr/licenses/simpleclient-0.2.0.jar.sha1",
                "deleted file mode 100644",
                "index ce8b16fb377..00000000000",
                "--- a/solr/licenses/simpleclient-0.2.0.jar.sha1",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-be8de6a5a01f25074be3b27a8db4448c9cce0168",
                "diff --git a/solr/licenses/simpleclient_common-0.2.0.jar.sha1 b/solr/licenses/simpleclient_common-0.2.0.jar.sha1",
                "deleted file mode 100644",
                "index 1e1c2e94733..00000000000",
                "--- a/solr/licenses/simpleclient_common-0.2.0.jar.sha1",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-42d513358b26ae44137c620fa517d37b5e707ae1",
                "diff --git a/solr/licenses/simpleclient_httpserver-0.2.0.jar.sha1 b/solr/licenses/simpleclient_httpserver-0.2.0.jar.sha1",
                "deleted file mode 100644",
                "index 7d188b52e3f..00000000000",
                "--- a/solr/licenses/simpleclient_httpserver-0.2.0.jar.sha1",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-f644860c08c787821c8c7ce78c408cea187fe1a3",
                "diff --git a/solr/licenses/snakeyaml-1.19.jar.sha1 b/solr/licenses/snakeyaml-1.19.jar.sha1",
                "deleted file mode 100644",
                "index 532c92172c2..00000000000",
                "--- a/solr/licenses/snakeyaml-1.19.jar.sha1",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-2d998d3d674b172a588e54ab619854d073f555b5",
                "diff --git a/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/grafana-solr-dashboard.png b/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/grafana-solr-dashboard.png",
                "deleted file mode 100644",
                "index 69f21a4debb..00000000000",
                "Binary files a/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/grafana-solr-dashboard.png and /dev/null differ",
                "diff --git a/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/solr-exporter-diagram.png b/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/solr-exporter-diagram.png",
                "deleted file mode 100644",
                "index 96efece464d..00000000000",
                "Binary files a/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/solr-exporter-diagram.png and /dev/null differ",
                "diff --git a/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc b/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "deleted file mode 100644",
                "index 891d00f9f74..00000000000",
                "--- a/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "+++ /dev/null",
                "@@ -1,250 +0,0 @@",
                "-= Monitoring Solr with Prometheus and Grafana",
                "-// Licensed to the Apache Software Foundation (ASF) under one",
                "-// or more contributor license agreements.  See the NOTICE file",
                "-// distributed with this work for additional information",
                "-// regarding copyright ownership.  The ASF licenses this file",
                "-// to you under the Apache License, Version 2.0 (the",
                "-// \"License\"); you may not use this file except in compliance",
                "-// with the License.  You may obtain a copy of the License at",
                "-//",
                "-//   http://www.apache.org/licenses/LICENSE-2.0",
                "-//",
                "-// Unless required by applicable law or agreed to in writing,",
                "-// software distributed under the License is distributed on an",
                "-// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "-// KIND, either express or implied.  See the License for the",
                "-// specific language governing permissions and limitations",
                "-// under the License.",
                "-",
                "-You can monitor Solr using solr-exporter that exposes Solr's metrics to https://prometheus.io[Prometheus], and visualize metrics using https://grafana.com[Grafana].",
                "-",
                "-It allows users to monitor not only Solr metrics which come from <<metrics-reporting.adoc#metrics-api,Metrics API>> but also facet counts which come from <<searching.adoc#searching,Searching>>.",
                "-",
                "-.solr-exporter Diagram",
                "-image::images/monitoring-solr-with-prometheus-and-grafana/solr-exporter-diagram.png[image,width=600]",
                "-",
                "-This feature is experimental status.",
                "-",
                "-== Running solr-exporter",
                "-",
                "-You can start solr-exporter by running `./bin/solr-exporter` from the solr-exporter directory.",
                "-",
                "-[source,plain]",
                "-----",
                "-$ cd ./contrib/prometheus-exporter",
                "-$ ./bin/solr-exporter -p 9983 -b http://localhost:8983/solr -f ./conf/config.yml -n 8",
                "-----",
                "-",
                "-If you are on Windows platform, you can start solr-exporter by running `.\\bin\\solr-exporter.cmd` instead.",
                "-",
                "-[source,plain]",
                "-----",
                "-> cd .\\contrib\\prometheus",
                "-> .\\bin\\solr-exporter.cmd -p 9983 -b http://localhost:8983/solr -f .\\conf\\config.yml -n 8",
                "-----",
                "-",
                "-You can also connect to Solr in SolrCloud mode like this.",
                "-",
                "-[source,plain]",
                "-----",
                "-$ cd ./contrib/prometheus",
                "-$ ./bin/solr-exporter -p 9983 -z localhost:2181/solr -f ./conf/config.yml -n 16",
                "-----",
                "-",
                "-See command help:",
                "-",
                "-[source,plain]",
                "-----",
                "-$ ./bin/solr-exporter -h",
                "-usage: SolrCollector [-h] [-v] [-p PORT] [-b BASE_URL] [-z ZK_HOST] [-f CONFIG]",
                "-                     [-n NUM_THREADS]",
                "-",
                "-Prometheus exporter for Apache Solr.",
                "-",
                "-optional arguments:",
                "-  -h, --help             show this help message and exit",
                "-  -p PORT, --port PORT   solr-exporter listen port",
                "-  -b BASE_URL, --baseurl BASE_URL",
                "-                         specify Solr base URL when connecting  to Solr in standalone mode (for",
                "-                         example 'http://localhost:8983/solr')",
                "-  -z ZK_HOST, --zkhost ZK_HOST",
                "-                         specify  ZooKeeper  connection  string  when  connecting  to  Solr  in",
                "-                         SolrCloud mode (for example 'localhost:2181/solr')",
                "-  -f CONFIG, --config-file CONFIG",
                "-                         specify configuration file",
                "-  -n NUM_THREADS, --num-thread NUM_THREADS",
                "-                         specify number of threads",
                "-----",
                "-",
                "-The Solr's metrics exposed by solr-exporter can see at the following URL.",
                "-",
                "-http://localhost:9983/metrics[http://localhost:9983/metrics]",
                "-",
                "-",
                "-== solr-exporter Configuration",
                "-",
                "-The configuration is in `./config/config.yml`. An example with all possible options:",
                "-",
                "-[source,plain]",
                "-----",
                "-ping:",
                "-  query:",
                "-    path: /admin/ping",
                "-  jsonQueries:",
                "-    - |-",
                "-      . as $object | $object |",
                "-      (if $object.status == \"OK\" then 1.0 else 0.0 end) as $value |",
                "-      {",
                "-        name         : \"solr_ping\",",
                "-        type         : \"GAUGE\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "-        label_names  : [],",
                "-        label_values : [],",
                "-        value        : $value",
                "-      }",
                "-",
                "-metrics:",
                "-  query:",
                "-    path: /admin/metrics",
                "-    params:",
                "-      - group: 'all'",
                "-      - type: 'all'",
                "-      - prefix: ''",
                "-      - property: ''",
                "-  jsonQueries:",
                "-    # solr_metrics_jetty_response_count",
                "-    - |-",
                "-      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key | startswith(\"org.eclipse.jetty.server.handler.DefaultHandler\")) | select(.key | endswith(\"xx-responses\")) as $object |",
                "-      $object.key | split(\".\") | last | split(\"-\") | first as $status |",
                "-      $object.value.count as $value |",
                "-      {",
                "-        name         : \"solr_metrics_jetty_response_count\",",
                "-        type         : \"gauge\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "-        label_names  : [\"status\"],",
                "-        label_values : [$status],",
                "-        value        : $value",
                "-      }",
                "-",
                "-...",
                "-",
                "-collections:",
                "-  query:",
                "-    path: /admin/collections",
                "-    params:",
                "-      - action: 'CLUSTERSTATUS'",
                "-  jsonQueries:",
                "-    # solr_collections_cluster_status_live_nodes",
                "-    - |-",
                "-      .cluster.live_nodes | length as $value|",
                "-      {",
                "-        name         : \"solr_collections_cluster_status_live_nodes\",",
                "-        type         : \"gauge\",",
                "-        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "-        label_names  : [],",
                "-        label_values : [],",
                "-        value        : $value",
                "-      }",
                "-",
                "-...",
                "-",
                "-queries:",
                "-  - query:",
                "-      collection: collection1",
                "-      path: /select",
                "-      params:",
                "-        - q: \"*:*\"",
                "-        - start: 0",
                "-        - rows: 0",
                "-        - json.facet: |-",
                "-            {",
                "-              category: {",
                "-                type: terms,",
                "-                field: cat",
                "-              }",
                "-            }",
                "-    jsonQueries:",
                "-      # solr_facets_category",
                "-      - |-",
                "-        .facets.category.buckets[] as $object |",
                "-        $object.val as $term |",
                "-        $object.count as $value |",
                "-        {",
                "-          name         : \"solr_facets_category\",",
                "-          type         : \"gauge\",",
                "-          help         : \"Category facets\",",
                "-          label_names  : [\"term\"],",
                "-          label_values : [$term],",
                "-          value        : $value",
                "-        }",
                "-----",
                "-",
                "-|===",
                "-|Name|Description",
                "-",
                "-|ping|Scrape <<ping.adoc#ping,Ping>> response.",
                "-|metrics|Scrape <<metrics-reporting.adoc#metrics-api,Metrics API>> response.",
                "-|collections|Scrape <<collections-api.adoc#collections-api,Collections API>> response.",
                "-|queries|Scrape <<searching.adoc#searching,Search API>> response.",
                "-|*.query|Query parameter for each features. You can specify `collection`, `core`, `path`, and `params`.",
                "-|*.jsonQueries|JSON Query that is jq syntax. For more details, see https://stedolan.github.io/jq/manual/[https://stedolan.github.io/jq/manual/].",
                "-|===",
                "-",
                "-jq query has to output JSON in the following format.",
                "-",
                "-[source,json]",
                "-----",
                "-{",
                "-  name         : \"solr_ping\",",
                "-  type         : \"GAUGE\",",
                "-  help         : \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "-  label_names  : [\"base_url\",\"core\"],",
                "-  label_values : [\"http://localhost:8983/solr\",\"collection1\"],",
                "-  value        : 1.0",
                "-}",
                "-----",
                "-",
                "-It will be converted to the following exposition format.",
                "-",
                "-[source,plain]",
                "-----",
                "-# TYPE solr_ping gauge",
                "-# HELP solr_ping See following URL: https://lucene.apache.org/solr/guide/ping.html",
                "-solr_ping{base_url=\"http://localhost:8983/solr\",core=\"collection1\"} 1.0",
                "-----",
                "-",
                "-|===",
                "-|Name|Description",
                "-",
                "-|name|The metric name to set. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "-|type|The type of the metric, can be `COUNTER`, `GAUGE`, `SUMMARY`, `HISTOGRAM` or `UNTYPED`. For more detauils, see https://prometheus.io/docs/concepts/metric_types/[https://prometheus.io/docs/concepts/metric_types/].",
                "-|help|Help text for the metric.",
                "-|label_names|Label names for the metric. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "-|label_values|Label values for the metric. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "-|value|Value for the metric. Value must be set to Double type.",
                "-|===",
                "-",
                "-",
                "-== Prometheus Configuration",
                "-",
                "-You need to specify the solr-exporter listen address into `scrape_configs` in `prometheus.yml`. See following example:",
                "-",
                "-[source,plain]",
                "-----",
                "-scrape_configs:",
                "-  - job_name: 'solr'",
                "-    static_configs:",
                "-      - targets: ['localhost:9983']",
                "-----",
                "-",
                "-When you apply the above settings to prometheus, it will start to pull Solr's metrics from solr-exporter.",
                "-",
                "-",
                "-== Grafana Dashboard",
                "-",
                "-A Grafana sample dashboard is provided at the following JSON file.",
                "-",
                "-`./conf/grafana-solr-dashboard.json`",
                "-",
                "-.Grafana Dashboard",
                "-image::images/monitoring-solr-with-prometheus-and-grafana/grafana-solr-dashboard.png[image,width=800]",
                "diff --git a/solr/solr-ref-guide/src/monitoring-solr.adoc b/solr/solr-ref-guide/src/monitoring-solr.adoc",
                "index 2fb70775968..0576e537ccd 100644",
                "--- a/solr/solr-ref-guide/src/monitoring-solr.adoc",
                "+++ b/solr/solr-ref-guide/src/monitoring-solr.adoc",
                "@@ -1,3 +1,3 @@",
                " = Monitoring Solr",
                "-:page-children: metrics-reporting, mbean-request-handler, configuring-logging, using-jmx-with-solr, monitoring-solr-with-prometheus-and-grafana, performance-statistics-reference",
                "+:page-children: metrics-reporting, mbean-request-handler, configuring-logging, using-jmx-with-solr, performance-statistics-reference",
                " // Licensed to the Apache Software Foundation (ASF) under one",
                "@@ -32,4 +32,2 @@ Common administrative tasks include:",
                "-<<monitoring-solr-with-prometheus-and-grafana.adoc#monitoring-solr-with-prometheus-and-grafana,Monitoring Solr with Prometheus and Grafana>>: Describes how to monitor Solr with Prometheus and Grafana.",
                "-",
                " <<performance-statistics-reference.adoc#performance-statistics-reference,Performance Statistics Reference>>: Additional information on statistics returned from JMX."
            ],
            "changed_files": [
                "lucene/ivy-versions.properties",
                "solr/build.xml",
                "solr/contrib/prometheus-exporter/bin/solr-exporter",
                "solr/contrib/prometheus-exporter/bin/solr-exporter.cmd",
                "solr/contrib/prometheus-exporter/build.xml",
                "solr/contrib/prometheus-exporter/conf/config.yml",
                "solr/contrib/prometheus-exporter/conf/grafana-solr-dashboard.json",
                "solr/contrib/prometheus-exporter/conf/log4j.properties",
                "solr/contrib/prometheus-exporter/ivy.xml",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/SolrCollectorConfig.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/package-info.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/package-info.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/package-info.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrQueryConfig.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrScraperConfig.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/package-info.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/package-info.java",
                "solr/contrib/prometheus-exporter/src/java/overview.html",
                "solr/contrib/prometheus-exporter/src/test-files/conf/config.yml",
                "solr/contrib/prometheus-exporter/src/test-files/conf/log4j.properties",
                "solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/managed-schema",
                "solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/solrconfig.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/gb18030-example.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/hd.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_other.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_video.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/manufacturers.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/mem.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/money.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor2.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/mp500.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/sample.html",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/sd500.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/solr.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/utf8-example.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/vidcard.xml",
                "solr/licenses/argparse4j-0.8.1.jar.sha1",
                "solr/licenses/jackson-jq-0.0.8.jar.sha1",
                "solr/licenses/simpleclient-0.2.0.jar.sha1",
                "solr/licenses/simpleclient_common-0.2.0.jar.sha1",
                "solr/licenses/simpleclient_httpserver-0.2.0.jar.sha1",
                "solr/licenses/snakeyaml-1.19.jar.sha1",
                "solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/grafana-solr-dashboard.png",
                "solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/solr-exporter-diagram.png",
                "solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "solr/solr-ref-guide/src/monitoring-solr.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11795": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4e198a273763e27122a00243e3694d28f1e5b3a4"
                ],
                [
                    "no-tag",
                    "291248c750b608097ce5866ea5e60005e74035be"
                ],
                [
                    "no-tag",
                    "f496fd08befaa0e38258ee54496931284921b214"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file, server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6859acc450af0a2cafdf880ef6ef516c3d95db18",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519279726,
            "hunks": 54,
            "message": "SOLR-11795: Add Solr metrics exporter for Prometheus",
            "diff": [
                "diff --git a/lucene/ivy-versions.properties b/lucene/ivy-versions.properties",
                "index 5ab36ddfa2c..1516ced2660 100644",
                "--- a/lucene/ivy-versions.properties",
                "+++ b/lucene/ivy-versions.properties",
                "@@ -72,2 +72,7 @@ io.netty.netty-all.version = 4.0.36.Final",
                "+io.prometheus.version = 0.2.0",
                "+/io.prometheus/simpleclient = ${io.prometheus.version}",
                "+/io.prometheus/simpleclient_common = ${io.prometheus.version}",
                "+/io.prometheus/simpleclient_httpserver = ${io.prometheus.version}",
                "+",
                " /javax.activation/activation = 1.1.1",
                "@@ -84,3 +89,11 @@ io.netty.netty-all.version = 4.0.36.Final",
                " /net.sf.ehcache/ehcache-core = 2.4.4",
                "+",
                "+net.sourceforge.argparse4j.version = 0.8.1",
                "+/net.sourceforge.argparse4j/argparse4j = ${net.sourceforge.argparse4j.version}",
                "+",
                " /net.sourceforge.nekohtml/nekohtml = 1.9.17",
                "+",
                "+net.thisptr.version = 0.0.8",
                "+/net.thisptr/jackson-jq = ${net.thisptr.version}",
                "+",
                " /org.antlr/antlr4-runtime = 4.5.1-1",
                "@@ -290,2 +303,4 @@ org.slf4j.version = 1.7.24",
                "+org.yaml.version = 1.19",
                "+/org.yaml/snakeyaml = ${org.yaml.version}",
                "diff --git a/solr/build.xml b/solr/build.xml",
                "index 400c71180d5..3f0596fc9ce 100644",
                "--- a/solr/build.xml",
                "+++ b/solr/build.xml",
                "@@ -573,3 +573,3 @@",
                "                   includes=\"LICENSE.txt NOTICE.txt CHANGES.txt README.txt SYSTEM_REQUIREMENTS.txt",
                "-                            bin/** server/** example/** contrib/**/lib/** contrib/**/README.txt ",
                "+                            bin/** server/** example/** contrib/**/lib/** contrib/**/conf/** contrib/**/README.txt",
                "                             licenses/**\"",
                "@@ -578,3 +578,3 @@",
                "                             **/bin/ **/*.iml **/*.ipr **/*.iws **/pom.xml ",
                "-                            **/*pom.xml.template server/etc/test/\" />",
                "+                            **/*pom.xml.template server/etc/test/ contrib/**/src/\" />",
                "       <tarfileset dir=\"${dest}/contrib-lucene-libs-to-package\"",
                "@@ -585,3 +585,3 @@",
                "                   prefix=\"${fullnamever}\"",
                "-                  includes=\"bin/** server/**/*.sh example/**/*.sh example/**/bin/\"",
                "+                  includes=\"bin/** server/**/*.sh example/**/*.sh example/**/bin/ contrib/**/bin/**\"",
                "                   excludes=\"server/etc/test/**\" />",
                "diff --git a/solr/contrib/prometheus-exporter/bin/solr-exporter b/solr/contrib/prometheus-exporter/bin/solr-exporter",
                "new file mode 100755",
                "index 00000000000..71ffb6b152d",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/bin/solr-exporter",
                "@@ -0,0 +1,118 @@",
                "+#!/bin/sh",
                "+",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one or more",
                "+# contributor license agreements.  See the NOTICE file distributed with",
                "+# this work for additional information regarding copyright ownership.",
                "+# The ASF licenses this file to You under the Apache License, Version 2.0",
                "+# (the \"License\"); you may not use this file except in compliance with",
                "+# the License.  You may obtain a copy of the License at",
                "+#",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "+#",
                "+",
                "+BASEDIR=`dirname $0`/..",
                "+BASEDIR=`(cd \"$BASEDIR\"; pwd)`",
                "+",
                "+# OS specific support.  $var _must_ be set to either true or false.",
                "+cygwin=false;",
                "+darwin=false;",
                "+case \"`uname`\" in",
                "+  CYGWIN*) cygwin=true ;;",
                "+  Darwin*) darwin=true",
                "+           if [ -z \"$JAVA_VERSION\" ] ; then",
                "+             JAVA_VERSION=\"CurrentJDK\"",
                "+           else",
                "+             echo \"Using Java version: $JAVA_VERSION\"",
                "+           fi",
                "+           if [ -z \"$JAVA_HOME\" ] ; then",
                "+             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home",
                "+           fi",
                "+           ;;",
                "+esac",
                "+",
                "+if [ -z \"$JAVA_HOME\" ] ; then",
                "+  if [ -r /etc/gentoo-release ] ; then",
                "+    JAVA_HOME=`java-config --jre-home`",
                "+  fi",
                "+fi",
                "+",
                "+# For Cygwin, ensure paths are in UNIX format before anything is touched",
                "+if $cygwin ; then",
                "+  [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`",
                "+  [ -n \"$CLASSPATH\" ] && CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`",
                "+fi",
                "+",
                "+# If a specific java binary isn't specified search for the standard 'java' binary",
                "+if [ -z \"$JAVACMD\" ] ; then",
                "+  if [ -n \"$JAVA_HOME\"  ] ; then",
                "+    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then",
                "+      # IBM's JDK on AIX uses strange locations for the executables",
                "+      JAVACMD=\"$JAVA_HOME/jre/sh/java\"",
                "+    else",
                "+      JAVACMD=\"$JAVA_HOME/bin/java\"",
                "+    fi",
                "+  else",
                "+    JAVACMD=`which java`",
                "+  fi",
                "+fi",
                "+",
                "+if [ ! -x \"$JAVACMD\" ] ; then",
                "+  echo \"Error: JAVA_HOME is not defined correctly.\"",
                "+  echo \"  We cannot execute $JAVACMD\"",
                "+  exit 1",
                "+fi",
                "+",
                "+if [ -z \"$REPO\" ]",
                "+then",
                "+  REPO=\"$BASEDIR\"/lib",
                "+fi",
                "+",
                "+CLASSPATH=$CLASSPATH_PREFIX",
                "+for JAR in $(find \"$REPO\" -name '*.jar')",
                "+do",
                "+  CLASSPATH=\"$CLASSPATH\":\"$JAR\"",
                "+done",
                "+for JAR in $(find \"$BASEDIR\"/../../dist/solrj-lib -name '*.jar')",
                "+do",
                "+  CLASSPATH=\"$CLASSPATH\":\"$JAR\"",
                "+done",
                "+for JAR in $(find \"$BASEDIR\"/../../dist -name 'solr-core-*.jar')",
                "+do",
                "+  CLASSPATH=\"$CLASSPATH\":\"$JAR\"",
                "+done",
                "+for JAR in $(find \"$BASEDIR\"/../../dist -name 'solr-solrj-*.jar')",
                "+do",
                "+  CLASSPATH=\"$CLASSPATH\":\"$JAR\"",
                "+done",
                "+for JAR in $(find \"$BASEDIR\"/../../dist -name 'solr-prometheus-exporter-*.jar')",
                "+do",
                "+  CLASSPATH=\"$CLASSPATH\":\"$JAR\"",
                "+done",
                "+",
                "+EXTRA_JVM_ARGUMENTS=\"-Xmx512m -Dlog4j.configuration=file:\"$BASEDIR\"/conf/log4j.properties\"",
                "+",
                "+# For Cygwin, switch paths to Windows format before running java",
                "+if $cygwin; then",
                "+  [ -n \"$CLASSPATH\" ] && CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`",
                "+  [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`",
                "+  [ -n \"$HOME\" ] && HOME=`cygpath --path --windows \"$HOME\"`",
                "+  [ -n \"$BASEDIR\" ] && BASEDIR=`cygpath --path --windows \"$BASEDIR\"`",
                "+  [ -n \"$REPO\" ] && REPO=`cygpath --path --windows \"$REPO\"`",
                "+fi",
                "+",
                "+exec \"$JAVACMD\" $JAVA_OPTS \\",
                "+  $EXTRA_JVM_ARGUMENTS \\",
                "+  -classpath \"$CLASSPATH\" \\",
                "+  -Dapp.name=\"solr-exporter\" \\",
                "+  -Dapp.pid=\"$$\" \\",
                "+  -Dapp.repo=\"$REPO\" \\",
                "+  -Dbasedir=\"$BASEDIR\" \\",
                "+  org.apache.solr.prometheus.exporter.SolrExporter \\",
                "+  \"$@\"",
                "diff --git a/solr/contrib/prometheus-exporter/bin/solr-exporter.cmd b/solr/contrib/prometheus-exporter/bin/solr-exporter.cmd",
                "new file mode 100644",
                "index 00000000000..c0b4b21782d",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/bin/solr-exporter.cmd",
                "@@ -0,0 +1,105 @@",
                "+@REM ",
                "+@REM Licensed to the Apache Software Foundation (ASF) under one or more",
                "+@REM contributor license agreements.  See the NOTICE file distributed with",
                "+@REM this work for additional information regarding copyright ownership.",
                "+@REM The ASF licenses this file to You under the Apache License, Version 2.0",
                "+@REM (the \"License\"); you may not use this file except in compliance with",
                "+@REM the License.  You may obtain a copy of the License at",
                "+@REM ",
                "+@REM     http://www.apache.org/licenses/LICENSE-2.0",
                "+@REM ",
                "+@REM Unless required by applicable law or agreed to in writing, software",
                "+@REM distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+@REM WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+@REM See the License for the specific language governing permissions and",
                "+@REM limitations under the License.",
                "+@REM ",
                "+",
                "+@echo off",
                "+",
                "+set ERROR_CODE=0",
                "+",
                "+:init",
                "+@REM Decide how to startup depending on the version of windows",
                "+",
                "+@REM -- Win98ME",
                "+if NOT \"%OS%\"==\"Windows_NT\" goto Win9xArg",
                "+",
                "+@REM set local scope for the variables with windows NT shell",
                "+if \"%OS%\"==\"Windows_NT\" @setlocal",
                "+",
                "+@REM -- 4NT shell",
                "+if \"%eval[2+2]\" == \"4\" goto 4NTArgs",
                "+",
                "+@REM -- Regular WinNT shell",
                "+set CMD_LINE_ARGS=%*",
                "+goto WinNTGetScriptDir",
                "+",
                "+@REM The 4NT Shell from jp software",
                "+:4NTArgs",
                "+set CMD_LINE_ARGS=%$",
                "+goto WinNTGetScriptDir",
                "+",
                "+:Win9xArg",
                "+@REM Slurp the command line arguments.  This loop allows for an unlimited number",
                "+@REM of agruments (up to the command line limit, anyway).",
                "+set CMD_LINE_ARGS=",
                "+:Win9xApp",
                "+if %1a==a goto Win9xGetScriptDir",
                "+set CMD_LINE_ARGS=%CMD_LINE_ARGS% %1",
                "+shift",
                "+goto Win9xApp",
                "+",
                "+:Win9xGetScriptDir",
                "+set SAVEDIR=%CD%",
                "+%0\\",
                "+cd %0\\..\\.. ",
                "+set BASEDIR=%CD%",
                "+cd %SAVEDIR%",
                "+set SAVE_DIR=",
                "+goto repoSetup",
                "+",
                "+:WinNTGetScriptDir",
                "+set BASEDIR=%~dp0\\..",
                "+",
                "+:repoSetup",
                "+",
                "+",
                "+if \"%JAVACMD%\"==\"\" set JAVACMD=java",
                "+",
                "+if \"%REPO%\"==\"\" set REPO=%BASEDIR%\\lib",
                "+",
                "+set CLASSPATH=\"%CLASSPATH%\";\"%REPO%\\*;%BASEDIR%\\..\\..\\dist\\solrj-lib\\*;%BASEDIR%\\..\\..\\dist\\solr-core-*;%BASEDIR%\\..\\..\\dist\\solr-solrj-*;%BASEDIR%\\..\\..\\dist\\solr-prometheus-exporter-*\"",
                "+set EXTRA_JVM_ARGUMENTS=-Xmx512m -Dlog4j.configuration=file:%BASEDIR%/conf/log4j.properties",
                "+goto endInit",
                "+",
                "+@REM Reaching here means variables are defined and arguments have been captured",
                "+:endInit",
                "+",
                "+%JAVACMD% %JAVA_OPTS% %EXTRA_JVM_ARGUMENTS% -classpath %CLASSPATH_PREFIX%;%CLASSPATH% -Dapp.name=\"solr-exporter\" -Dapp.repo=\"%REPO%\" -Dbasedir=\"%BASEDIR%\" com.github.mosuka.solr.prometheus.exporter.SolrExporter %CMD_LINE_ARGS%",
                "+if ERRORLEVEL 1 goto error",
                "+goto end",
                "+",
                "+:error",
                "+if \"%OS%\"==\"Windows_NT\" @endlocal",
                "+set ERROR_CODE=1",
                "+",
                "+:end",
                "+@REM set local scope for the variables with windows NT shell",
                "+if \"%OS%\"==\"Windows_NT\" goto endNT",
                "+",
                "+@REM For old DOS remove the set variables from ENV - we assume they were not set",
                "+@REM before we started - at least we don't leave any baggage around",
                "+set CMD_LINE_ARGS=",
                "+goto postExec",
                "+",
                "+:endNT",
                "+@endlocal",
                "+",
                "+:postExec",
                "+",
                "+if \"%FORCE_EXIT_ON_ERROR%\" == \"on\" (",
                "+  if %ERROR_CODE% NEQ 0 exit %ERROR_CODE%",
                "+)",
                "+",
                "+exit /B %ERROR_CODE%",
                "diff --git a/solr/contrib/prometheus-exporter/build.xml b/solr/contrib/prometheus-exporter/build.xml",
                "new file mode 100644",
                "index 00000000000..a3adef0a791",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/build.xml",
                "@@ -0,0 +1,28 @@",
                "+<?xml version=\"1.0\"?>",
                "+",
                "+<!--",
                "+    Licensed to the Apache Software Foundation (ASF) under one or more",
                "+    contributor license agreements.  See the NOTICE file distributed with",
                "+    this work for additional information regarding copyright ownership.",
                "+    The ASF licenses this file to You under the Apache License, Version 2.0",
                "+    the \"License\"); you may not use this file except in compliance with",
                "+    the License.  You may obtain a copy of the License at",
                "+",
                "+        http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+    Unless required by applicable law or agreed to in writing, software",
                "+    distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+    See the License for the specific language governing permissions and",
                "+    limitations under the License.",
                "+ -->",
                "+",
                "+<project name=\"solr-prometheus-exporter\" default=\"default\">",
                "+",
                "+  <description>",
                "+    Prometheus exporter for exposing metrics from Solr using Metrics API and Search API.",
                "+  </description>",
                "+",
                "+  <import file=\"../contrib-build.xml\"/>",
                "+",
                "+</project>",
                "diff --git a/solr/contrib/prometheus-exporter/conf/config.yml b/solr/contrib/prometheus-exporter/conf/config.yml",
                "new file mode 100644",
                "index 00000000000..16610125c34",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/conf/config.yml",
                "@@ -0,0 +1,1840 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one or more",
                "+# contributor license agreements.  See the NOTICE file distributed with",
                "+# this work for additional information regarding copyright ownership.",
                "+# The ASF licenses this file to You under the Apache License, Version 2.0",
                "+# (the \"License\"); you may not use this file except in compliance with",
                "+# the License.  You may obtain a copy of the License at",
                "+#",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "+#",
                "+",
                "+ping:",
                "+  query:",
                "+    path: /admin/ping",
                "+  jsonQueries:",
                "+    - |-",
                "+      . as $object | $object |",
                "+      (if $object.status == \"OK\" then 1.0 else 0.0 end) as $value |",
                "+      {",
                "+        name         : \"solr_ping\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "+        label_names  : [],",
                "+        label_values : [],",
                "+        value        : $value",
                "+      }",
                "+",
                "+metrics:",
                "+  query:",
                "+    path: /admin/metrics",
                "+    params:",
                "+      - group: 'all'",
                "+      - type: 'all'",
                "+      - prefix: ''",
                "+      - property: ''",
                "+  jsonQueries:",
                "+    ##############################",
                "+    # jetty",
                "+    ##############################",
                "+    # solr_metrics_jetty_response_total",
                "+    - |-",
                "+      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key | startswith(\"org.eclipse.jetty.server.handler.DefaultHandler\")) | select(.key | endswith(\"xx-responses\")) as $object |",
                "+      $object.key | split(\".\") | last | split(\"-\") | first as $status |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jetty_response_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"status\"],",
                "+        label_values : [$status],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jetty_requests_total",
                "+    - |-",
                "+      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key | startswith(\"org.eclipse.jetty.server.handler.DefaultHandler.\")) | select(.key | endswith(\"-requests\")) | select (.value | type == \"object\") as $object |",
                "+      $object.key | split(\".\") | last | split(\"-\") | first as $method |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jetty_requests_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"method\"],",
                "+        label_values : [$method],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jetty_dispatches_total",
                "+    - |-",
                "+      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key == \"org.eclipse.jetty.server.handler.DefaultHandler.dispatches\") as $object |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jetty_dispatches_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [],",
                "+        label_values : [],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    ##############################",
                "+    # jvm",
                "+    ##############################",
                "+    # solr_metrics_jvm_buffers",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"buffers.\")) | select(.key | endswith(\".Count\")) as $object |",
                "+      $object.key | split(\".\")[1] as $pool |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_buffers\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"pool\"],",
                "+        label_values : [$pool],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_buffers_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"buffers.\")) | select(.key | (endswith(\".MemoryUsed\") or endswith(\".TotalCapacity\"))) as $object |",
                "+      $object.key | split(\".\")[1] as $pool |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_buffers_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"pool\", \"item\"],",
                "+        label_values : [$pool, $item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_gc_total",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"gc.\")) | select(.key | endswith(\".count\")) as $object |",
                "+      $object.key | split(\".\")[1] as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_gc_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_gc_seconds_total",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"gc.\")) | select(.key | endswith(\".time\")) as $object |",
                "+      $object.key | split(\".\")[1] as $item |",
                "+      ($object.value / 1000) as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_gc_seconds_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_memory_heap_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.heap.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_memory_heap_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_memory_non_heap_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.non-heap.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_memory_non_heap_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_memory_pools_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.pools.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "+      $object.key | split(\".\")[2] as $space |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_memory_pools_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"space\", \"item\"],",
                "+        label_values : [$space, $item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_memory_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.total.\")) as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_memory_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_os_memory_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.committedVirtualMemorySize\" or .key == \"os.freePhysicalMemorySize\" or .key == \"os.freeSwapSpaceSize\" or .key ==\"os.totalPhysicalMemorySize\" or .key == \"os.totalSwapSpaceSize\") as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_os_memory_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_os_file_descriptors",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.maxFileDescriptorCount\" or .key == \"os.openFileDescriptorCount\") as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_os_file_descriptors\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_os_cpu_load",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.processCpuLoad\" or .key == \"os.systemCpuLoad\") as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_os_cpu_load\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_os_cpu_time_seconds",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.processCpuTime\") as $object |",
                "+      ($object.value / 1000.0) as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_os_cpu_time_seconds\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [\"processCpuTime\"],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_os_load_average",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.systemLoadAverage\") as $object |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_os_load_average\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [\"systemLoadAverage\"],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_threads",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"threads.\")) | select(.key | endswith(\".count\")) as $object |",
                "+      $object.key | split(\".\")[1] as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_threads\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_client_errors_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_client_errors_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_errors_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_errors_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_requests_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".requestTimes\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_requests_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_server_errors_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".serverErrors\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_server_errors_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_timeouts_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".timeouts\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_timeouts_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_time_seconds_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".totalTime\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      ($object.value / 1000) as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_time_seconds_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_cores",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | startswith(\"CONTAINER.cores.\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_cores\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"item\"],",
                "+        label_values : [$category, $item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_core_root_fs_bytes",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | startswith(\"CONTAINER.fs.coreRoot.\")) | select(.key | endswith(\".totalSpace\") or endswith(\".usableSpace\")) as $object |",
                "+      $object.key | split(\".\") as $key_items |",
                "+      $key_items | length as $label_len |",
                "+      $key_items[0] as $category |",
                "+      $key_items[3] as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_core_root_fs_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"item\"],",
                "+        label_values : [$category, $item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_thread_pool_completed_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".completed\")) as $object |",
                "+      $object.key | split(\".\") as $key_items |",
                "+      $key_items | length as $label_len |",
                "+      $key_items[0] as $category |",
                "+      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "+      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_thread_pool_completed_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\", \"executor\"],",
                "+        label_values : [$category, $handler, $executor],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_thread_pool_running",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".running\")) as $object |",
                "+      $object.key | split(\".\") as $key_items |",
                "+      $key_items | length as $label_len |",
                "+      $key_items[0] as $category |",
                "+      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "+      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_thread_pool_running\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\", \"executor\"],",
                "+        label_values : [$category, $handler, $executor],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_thread_pool_submitted_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".submitted\")) as $object |",
                "+      $object.key | split(\".\") as $key_items |",
                "+      $key_items | length as $label_len |",
                "+      $key_items[0] as $category |",
                "+      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "+      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_thread_pool_submitted_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\", \"executor\"],",
                "+        label_values : [$category, $handler, $executor],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_connections",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\"Connections\")) as $object |",
                "+      $object.key | split(\".\") as $key_items |",
                "+      $key_items | length as $label_len |",
                "+      $key_items[0] as $category |",
                "+      $key_items[1] as $handler |",
                "+      $key_items[2] as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_connections\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\", \"item\"],",
                "+        label_values : [$category, $handler, $item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    ##############################",
                "+    # core",
                "+    ##############################",
                "+    # solr_metrics_core_client_errors_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_client_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_client_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_errors_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".errors\")) | select (.value | type == \"object\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_requests_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".requestTimes\")) | select (.value | type == \"object\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_requests_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_requests_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_server_errors_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".serverErrors\")) | select (.value | type == \"object\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_server_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_server_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_timeouts_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".timeouts\")) | select (.value | type == \"object\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_timeouts_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_timeouts_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_time_seconds_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".totalTime\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      ($object.value / 1000) as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_time_seconds_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_time_seconds_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_field_cache_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select (.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"CACHE.core.fieldCache\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.value.entries_count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_field_cache_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\"],",
                "+        label_values: [$category, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_field_cache_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_cache",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $type |",
                "+      $object.value | to_entries | .[] | select(.key == \"lookups\" or .key == \"hits\" or .key == \"size\" or .key == \"evictions\" or .key == \"inserts\") as $target |",
                "+      $target.key as $item |",
                "+      $target.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cache\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cache\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_cache_ratio",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $type |",
                "+      $object.value | to_entries | .[] | select(.key == \"hitratio\") as $target |",
                "+      $target.key as $item |",
                "+      $target.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cache_ratio\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cache_ratio\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_warmup_time_seconds",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $type |",
                "+      $object.value | to_entries | .[] | select(.key == \"warmupTime\") as $target |",
                "+      $target.key as $item |",
                "+      ($target.value / 1000) as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_warmup_time_seconds\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_warmup_time_seconds\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_cumulative_cache_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $type |",
                "+      $object.value | to_entries | .[] | select(.key == \"cumulative_lookups\" or .key == \"cumulative_hits\" or .key == \"cumulative_evictions\" or .key == \"cumulative_inserts\") as $target |",
                "+      $target.key as $item |",
                "+      $target.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cumulative_cache_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cumulative_cache_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_cumulative_cache_ratio",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $type |",
                "+      $object.value | to_entries | .[] | select(.key == \"cumulative_hitratio\") as $target |",
                "+      $target.key as $item |",
                "+      $target.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cumulative_cache_ratio\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cumulative_cache_ratio\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_fs_bytes",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CORE.fs.\")) | select (.key | endswith(\".totalSpace\") or endswith(\".usableSpace\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $item |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_fs_bytes\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"item\"],",
                "+        label_values: [$category, $core, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_fs_bytes\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_highlighter_request_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"HIGHLIGHTER.\")) | select (.key | endswith(\".requests\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $name |",
                "+      $object.key | split(\".\")[2] as $item |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_highlighter_request_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"name\", \"item\"],",
                "+        label_values: [$category, $core, $name, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_highlighter_request_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"name\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $name, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_index_size_bytes",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"INDEX.sizeInBytes\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_index_size_bytes\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\"],",
                "+        label_values: [$category, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_index_size_bytes\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_replication_master",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"REPLICATION./replication.isMaster\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      (if $object.value == true then 1.0 else 0.0 end) as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_replication_master\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_replication_master\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_replication_slave",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"REPLICATION./replication.isSlave\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      (if $object.value == true then 1.0 else 0.0 end) as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_replication_slave\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_replication_slave\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_documents",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"SEARCHER.searcher.deletedDocs\" or .key == \"SEARCHER.searcher.maxDoc\" or .key == \"SEARCHER.searcher.numDocs\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $item |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_documents\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"item\"],",
                "+        label_values: [$category, $core, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_documents\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_adds",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.adds\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_adds\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_adds\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_auto_commits_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.autoCommits\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_auto_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_auto_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_commits_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.commits\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_adds_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeAdds\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_adds_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_adds_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_deletes_by_id_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeDeletesById\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_id_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_id_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_deletes_by_query_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeDeletesByQuery\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_query_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_query_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_errors_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeErrors\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_deletes_by_id",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.deletesById\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_id\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_id\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_deletes_by_query",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.deletesByQuery\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_query\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_query\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_pending_docs",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.docsPending\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_pending_docs\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_pending_docs\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_errors",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.errors\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_errors\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_errors\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_expunge_deletes_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.expungeDeletes\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_expunge_deletes_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_expunge_deletes_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_merges_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.merges\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_merges_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_merges_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_optimizes_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.optimizes\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_optimizes_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_optimizes_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_rollbacks_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.rollbacks\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_rollbacks_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_rollbacks_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_soft_auto_commits_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.softAutoCommits\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_soft_auto_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_soft_auto_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_splits_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.splits\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_splits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_splits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+",
                "+collections:",
                "+  query:",
                "+    path: /admin/collections",
                "+    params:",
                "+      - action: 'CLUSTERSTATUS'",
                "+  jsonQueries:",
                "+    # solr_collections_live_nodes",
                "+    - |-",
                "+      .cluster.live_nodes | length as $value|",
                "+      {",
                "+        name         : \"solr_collections_live_nodes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [],",
                "+        label_values : [],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_pull_replicas",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.pullReplicas | tonumber as $value |",
                "+      {",
                "+        name         : \"solr_collections_pull_replicas\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\"],",
                "+        label_values : [$collection],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_nrt_replicas",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.nrtReplicas | tonumber as $value |",
                "+      {",
                "+        name         : \"solr_collections_nrt_replicas\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\"],",
                "+        label_values : [$collection],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_tlog_replicas",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.tlogReplicas | tonumber as $value |",
                "+      {",
                "+        name         : \"solr_collections_tlog_replicas\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\"],",
                "+        label_values : [$collection],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_shard_state",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "+      $shard_obj.key as $shard |",
                "+      (if $shard_obj.value.state == \"active\" then 1.0 else 0.0 end) as $value |",
                "+      {",
                "+        name         : \"solr_collections_shard_state\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\",\"shard\"],",
                "+        label_values : [$collection,$shard],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_replica_state",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "+      $shard_obj.key as $shard |",
                "+      $shard_obj.value.replicas | to_entries | .[] | . as $replica_obj |",
                "+      $replica_obj.key as $replica_name |",
                "+      $replica_obj.value.core as $core |",
                "+      $core[$collection + \"_\" + $shard + \"_\" | length:] as $replica |",
                "+      $replica_obj.value.base_url as $base_url |",
                "+      $replica_obj.value.node_name as $node_name |",
                "+      $replica_obj.value.type as $type |",
                "+      (if $replica_obj.value.state == \"active\" then 1.0 else 0.0 end) as $value |",
                "+      {",
                "+        name         : \"solr_collections_replica_state\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\", \"shard\", \"replica\", \"replica_name\", \"core\", \"base_url\", \"node_name\", \"type\"],",
                "+        label_values : [$collection, $shard, $replica, $replica_name, $core, $base_url, $node_name, $type],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_shard_leader",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "+      $shard_obj.key as $shard |",
                "+      $shard_obj.value.replicas | to_entries | .[] | . as $replica_obj |",
                "+      $replica_obj.key as $replica_name |",
                "+      $replica_obj.value.core as $core |",
                "+      $core[$collection + \"_\" + $shard + \"_\" | length:] as $replica |",
                "+      $replica_obj.value.base_url as $base_url |",
                "+      $replica_obj.value.node_name as $node_name |",
                "+      $replica_obj.value.type as $type |",
                "+      (if $replica_obj.value.leader == \"true\" then 1.0 else 0.0 end) as $value |",
                "+      {",
                "+        name         : \"solr_collections_shard_leader\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\", \"shard\", \"replica\", \"replica_name\", \"core\", \"base_url\", \"node_name\", \"type\"],",
                "+        label_values : [$collection, $shard, $replica, $replica_name, $core, $base_url, $node_name, $type],",
                "+        value        : $value",
                "+      }",
                "+",
                "+",
                "+#queries:",
                "+#  - query:",
                "+#      collection: collection1",
                "+#      path: /select",
                "+#      params:",
                "+#        - q: \"*:*\"",
                "+#        - start: 0",
                "+#        - rows: 0",
                "+#        - json.facet: |-",
                "+#            {",
                "+#              category: {",
                "+#                type: terms,",
                "+#                field: cat",
                "+#              }",
                "+#            }",
                "+#    jsonQueries:",
                "+#      # solr_facets_category",
                "+#      - |-",
                "+#        .facets.category.buckets[] as $object |",
                "+#        $object.val as $term |",
                "+#        $object.count as $value |",
                "+#        {",
                "+#          name         : \"solr_facets_category\",",
                "+#          type         : \"GAUGE\",",
                "+#          help         : \"Category facets\",",
                "+#          label_names  : [\"term\"],",
                "+#          label_values : [$term],",
                "+#          value        : $value",
                "+#        }",
                "diff --git a/solr/contrib/prometheus-exporter/conf/grafana-solr-dashboard.json b/solr/contrib/prometheus-exporter/conf/grafana-solr-dashboard.json",
                "new file mode 100644",
                "index 00000000000..96fb8184cd0",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/conf/grafana-solr-dashboard.json",
                "@@ -0,0 +1,4465 @@",
                "+{",
                "+  \"__inputs\": [",
                "+    {",
                "+      \"name\": \"DS_PROMETHEUS\",",
                "+      \"label\": \"Prometheus\",",
                "+      \"description\": \"\",",
                "+      \"type\": \"datasource\",",
                "+      \"pluginId\": \"prometheus\",",
                "+      \"pluginName\": \"Prometheus\"",
                "+    }",
                "+  ],",
                "+  \"__requires\": [",
                "+    {",
                "+      \"type\": \"grafana\",",
                "+      \"id\": \"grafana\",",
                "+      \"name\": \"Grafana\",",
                "+      \"version\": \"4.6.3\"",
                "+    },",
                "+    {",
                "+      \"type\": \"panel\",",
                "+      \"id\": \"graph\",",
                "+      \"name\": \"Graph\",",
                "+      \"version\": \"\"",
                "+    },",
                "+    {",
                "+      \"type\": \"datasource\",",
                "+      \"id\": \"prometheus\",",
                "+      \"name\": \"Prometheus\",",
                "+      \"version\": \"1.0.0\"",
                "+    }",
                "+  ],",
                "+  \"annotations\": {",
                "+    \"list\": [",
                "+      {",
                "+        \"builtIn\": 1,",
                "+        \"datasource\": \"-- Grafana --\",",
                "+        \"enable\": true,",
                "+        \"hide\": true,",
                "+        \"iconColor\": \"rgba(0, 211, 255, 1)\",",
                "+        \"name\": \"Annotations & Alerts\",",
                "+        \"type\": \"dashboard\"",
                "+      }",
                "+    ]",
                "+  },",
                "+  \"description\": \"Solr Dashboard\",",
                "+  \"editable\": true,",
                "+  \"gnetId\": null,",
                "+  \"graphTooltip\": 0,",
                "+  \"hideControls\": false,",
                "+  \"id\": null,",
                "+  \"links\": [],",
                "+  \"refresh\": \"1m\",",
                "+  \"rows\": [",
                "+    {",
                "+      \"collapse\": false,",
                "+      \"height\": \"250px\",",
                "+      \"panels\": [",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 2,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_jetty_requests_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{method}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Requests\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"description\": \"\",",
                "+          \"fill\": 1,",
                "+          \"id\": 1,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_jetty_response_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{status}}\",",
                "+              \"refId\": \"A\",",
                "+              \"step\": 40",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Response\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 55,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"rightSide\": true,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 12,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_jetty_dispatches_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Dispatches\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        }",
                "+      ],",
                "+      \"repeat\": null,",
                "+      \"repeatIteration\": null,",
                "+      \"repeatRowId\": null,",
                "+      \"showTitle\": true,",
                "+      \"title\": \"Jetty Metrics\",",
                "+      \"titleSize\": \"h3\"",
                "+    },",
                "+    {",
                "+      \"collapse\": false,",
                "+      \"height\": 250,",
                "+      \"panels\": [",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 3,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_jvm_buffers{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{pool}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Buffers\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 4,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_jvm_buffers_bytes{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{pool}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Buffer Size\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"decbytes\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 5,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_jvm_gc_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"GC Count\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 6,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_jvm_gc_seconds_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"GC Time\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"decimals\": null,",
                "+              \"format\": \"s\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 7,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_jvm_memory_heap_bytes{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Heap Size\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"decbytes\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 8,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_jvm_memory_non_heap_bytes{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Non-Heap Size\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"decbytes\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 9,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_jvm_memory_pools_bytes{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{space}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Pool Size\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"decbytes\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 10,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_jvm_memory_bytes{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Memory Size\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"decbytes\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 16,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"rightSide\": true,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 12,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_jvm_threads{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Threads\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        }",
                "+      ],",
                "+      \"repeat\": null,",
                "+      \"repeatIteration\": null,",
                "+      \"repeatRowId\": null,",
                "+      \"showTitle\": true,",
                "+      \"title\": \"JVM Metrics\",",
                "+      \"titleSize\": \"h3\"",
                "+    },",
                "+    {",
                "+      \"collapse\": false,",
                "+      \"height\": 250,",
                "+      \"panels\": [",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 11,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_jvm_os_memory_bytes{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Memory Size\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"decbytes\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 12,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_jvm_os_file_descriptors{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"File Descriptors\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 13,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_jvm_os_cpu_load{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"CPU Load\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"percentunit\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 14,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_jvm_os_cpu_time_seconds{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"CPU Time\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 15,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"rightSide\": true,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 12,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_jvm_os_load_average{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Load Average\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        }",
                "+      ],",
                "+      \"repeat\": null,",
                "+      \"repeatIteration\": null,",
                "+      \"repeatRowId\": null,",
                "+      \"showTitle\": true,",
                "+      \"title\": \"OS Metrics\",",
                "+      \"titleSize\": \"h3\"",
                "+    },",
                "+    {",
                "+      \"collapse\": false,",
                "+      \"height\": 250,",
                "+      \"panels\": [",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 19,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_node_requests_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Requests\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 22,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_node_time_seconds_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Request Time\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 17,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_node_client_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Client Errors\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 20,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_node_server_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Server Errors\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 18,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_node_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Errors\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 21,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_node_timeouts_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Timeouts\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 23,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_node_cores{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Cores\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 24,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_node_core_root_fs_bytes{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Core Root File System\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"decbytes\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 25,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_node_thread_pool_completed_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{handler}} {{executor}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Thread Pool Completed\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 26,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_node_thread_pool_submitted_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{handler}} {{executor}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Thread Pool Submitted\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 27,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"rightSide\": true,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 12,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_node_thread_pool_running{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{handler}} {{executor}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Thread Pool Running\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 28,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"rightSide\": true,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 12,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_node_connections{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}} {{handler}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Connections\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        }",
                "+      ],",
                "+      \"repeat\": null,",
                "+      \"repeatIteration\": null,",
                "+      \"repeatRowId\": null,",
                "+      \"showTitle\": true,",
                "+      \"title\": \"Node Metrics\",",
                "+      \"titleSize\": \"h3\"",
                "+    },",
                "+    {",
                "+      \"collapse\": false,",
                "+      \"height\": 250,",
                "+      \"panels\": [",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 31,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_requests_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Requests\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 34,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_time_seconds_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Request Time\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 29,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_client_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Client Errors\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 32,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_server_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Server Errors\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 30,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Errors\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 33,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_timeouts_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}{{handler}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Timeouts\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 35,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_field_cache_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Field Cache\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 36,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_core_searcher_cache{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}} {{type}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Searcher Cache\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 37,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_core_searcher_warmup_time_seconds{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}} {{type}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Searcher Warm Up Time\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 38,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_searcher_cumulative_cache_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}} {{type}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Searcher Cumulative Cache\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 39,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_core_fs_bytes{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"File System\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"decbytes\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 40,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_core_index_size_bytes{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Index Size\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"decbytes\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 41,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"rightSide\": true,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 12,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_core_searcher_documents{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}} {{item}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Searcher Documents\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 42,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"rightSide\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_adds_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Adds\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 46,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"solr_metrics_core_update_handler_pending_docs{base_url=~\\\"$base_url\\\"}\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Pending Docs\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 43,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 4,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_deletes_by_id_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Deletes By ID\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 44,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 4,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_deletes_by_query_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Deletes By Query\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 47,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 4,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_expunge_deletes_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Expunge Deletes\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 48,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_merges_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Merges\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 52,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_splits_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Splits\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 49,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_optimizes_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Optimizes\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 50,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 6,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_rollbacks_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Rollbacks\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 51,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 4,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_soft_auto_commits_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Soft Auto Commits\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 53,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 4,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_auto_commits_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Auto Commits\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 54,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 4,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_commits_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Commits\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        },",
                "+        {",
                "+          \"aliasColors\": {},",
                "+          \"bars\": false,",
                "+          \"dashLength\": 10,",
                "+          \"dashes\": false,",
                "+          \"datasource\": \"${DS_PROMETHEUS}\",",
                "+          \"fill\": 1,",
                "+          \"id\": 45,",
                "+          \"legend\": {",
                "+            \"alignAsTable\": true,",
                "+            \"avg\": false,",
                "+            \"current\": false,",
                "+            \"max\": false,",
                "+            \"min\": false,",
                "+            \"rightSide\": true,",
                "+            \"show\": true,",
                "+            \"total\": false,",
                "+            \"values\": false",
                "+          },",
                "+          \"lines\": true,",
                "+          \"linewidth\": 1,",
                "+          \"links\": [],",
                "+          \"nullPointMode\": \"null\",",
                "+          \"percentage\": false,",
                "+          \"pointradius\": 5,",
                "+          \"points\": false,",
                "+          \"renderer\": \"flot\",",
                "+          \"seriesOverrides\": [],",
                "+          \"spaceLength\": 10,",
                "+          \"span\": 12,",
                "+          \"stack\": false,",
                "+          \"steppedLine\": false,",
                "+          \"targets\": [",
                "+            {",
                "+              \"expr\": \"increase(solr_metrics_core_update_handler_errors_total{base_url=~\\\"$base_url\\\"}[1m])\",",
                "+              \"format\": \"time_series\",",
                "+              \"intervalFactor\": 2,",
                "+              \"legendFormat\": \"{{base_url}}/{{core}}\",",
                "+              \"refId\": \"A\"",
                "+            }",
                "+          ],",
                "+          \"thresholds\": [],",
                "+          \"timeFrom\": null,",
                "+          \"timeShift\": null,",
                "+          \"title\": \"Update Handler Errors\",",
                "+          \"tooltip\": {",
                "+            \"shared\": true,",
                "+            \"sort\": 0,",
                "+            \"value_type\": \"individual\"",
                "+          },",
                "+          \"type\": \"graph\",",
                "+          \"xaxis\": {",
                "+            \"buckets\": null,",
                "+            \"mode\": \"time\",",
                "+            \"name\": null,",
                "+            \"show\": true,",
                "+            \"values\": []",
                "+          },",
                "+          \"yaxes\": [",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": \"0\",",
                "+              \"show\": true",
                "+            },",
                "+            {",
                "+              \"format\": \"short\",",
                "+              \"label\": null,",
                "+              \"logBase\": 1,",
                "+              \"max\": null,",
                "+              \"min\": null,",
                "+              \"show\": true",
                "+            }",
                "+          ]",
                "+        }",
                "+      ],",
                "+      \"repeat\": null,",
                "+      \"repeatIteration\": null,",
                "+      \"repeatRowId\": null,",
                "+      \"showTitle\": true,",
                "+      \"title\": \"Core Metrics\",",
                "+      \"titleSize\": \"h3\"",
                "+    }",
                "+  ],",
                "+  \"schemaVersion\": 14,",
                "+  \"style\": \"dark\",",
                "+  \"tags\": [],",
                "+  \"templating\": {",
                "+    \"list\": [",
                "+      {",
                "+        \"allValue\": \".*\",",
                "+        \"current\": {},",
                "+        \"datasource\": \"${DS_PROMETHEUS}\",",
                "+        \"hide\": 0,",
                "+        \"includeAll\": true,",
                "+        \"label\": null,",
                "+        \"multi\": true,",
                "+        \"name\": \"zk_host\",",
                "+        \"options\": [],",
                "+        \"query\": \"label_values(solr_ping{zk_host=~\\\".+\\\"},zk_host)\",",
                "+        \"refresh\": 1,",
                "+        \"regex\": \"/(.+)/\",",
                "+        \"sort\": 1,",
                "+        \"tagValuesQuery\": \"\",",
                "+        \"tags\": [],",
                "+        \"tagsQuery\": \"\",",
                "+        \"type\": \"query\",",
                "+        \"useTags\": false",
                "+      },",
                "+      {",
                "+        \"allValue\": \".*\",",
                "+        \"current\": {},",
                "+        \"datasource\": \"${DS_PROMETHEUS}\",",
                "+        \"hide\": 0,",
                "+        \"includeAll\": true,",
                "+        \"label\": null,",
                "+        \"multi\": true,",
                "+        \"name\": \"collection\",",
                "+        \"options\": [],",
                "+        \"query\": \"label_values(solr_ping{zk_host=\\\"$zk_host\\\",collection=~\\\".+\\\"},collection)\",",
                "+        \"refresh\": 1,",
                "+        \"regex\": \"/(.+)/\",",
                "+        \"sort\": 1,",
                "+        \"tagValuesQuery\": \"\",",
                "+        \"tags\": [],",
                "+        \"tagsQuery\": \"\",",
                "+        \"type\": \"query\",",
                "+        \"useTags\": false",
                "+      },",
                "+      {",
                "+        \"allValue\": \".*\",",
                "+        \"current\": {},",
                "+        \"datasource\": \"${DS_PROMETHEUS}\",",
                "+        \"hide\": 0,",
                "+        \"includeAll\": true,",
                "+        \"label\": null,",
                "+        \"multi\": true,",
                "+        \"name\": \"shard\",",
                "+        \"options\": [],",
                "+        \"query\": \"label_values(solr_collections_shard_state{zk_host=\\\"$zk_host\\\",collection=\\\"$collection\\\",shard=~\\\".+\\\"},shard)\",",
                "+        \"refresh\": 1,",
                "+        \"regex\": \"/(.+)/\",",
                "+        \"sort\": 1,",
                "+        \"tagValuesQuery\": \"\",",
                "+        \"tags\": [],",
                "+        \"tagsQuery\": \"\",",
                "+        \"type\": \"query\",",
                "+        \"useTags\": false",
                "+      },",
                "+      {",
                "+        \"allValue\": \".*\",",
                "+        \"current\": {},",
                "+        \"datasource\": \"${DS_PROMETHEUS}\",",
                "+        \"hide\": 0,",
                "+        \"includeAll\": true,",
                "+        \"label\": null,",
                "+        \"multi\": true,",
                "+        \"name\": \"replica\",",
                "+        \"options\": [],",
                "+        \"query\": \"label_values(solr_collections_replica_state{zk_host=\\\"$zk_host\\\",collection=\\\"$collection\\\",shard=\\\"$shard\\\",replica=\\\".+\\\"},replica)\",",
                "+        \"refresh\": 1,",
                "+        \"regex\": \"/(.+)/\",",
                "+        \"sort\": 1,",
                "+        \"tagValuesQuery\": \"\",",
                "+        \"tags\": [],",
                "+        \"tagsQuery\": \"\",",
                "+        \"type\": \"query\",",
                "+        \"useTags\": false",
                "+      },",
                "+      {",
                "+        \"allValue\": \".*\",",
                "+        \"current\": {},",
                "+        \"datasource\": \"${DS_PROMETHEUS}\",",
                "+        \"hide\": 0,",
                "+        \"includeAll\": true,",
                "+        \"label\": null,",
                "+        \"multi\": true,",
                "+        \"name\": \"base_url\",",
                "+        \"options\": [],",
                "+        \"query\": \"label_values(solr_ping{base_url=~\\\".+\\\"},base_url)\",",
                "+        \"refresh\": 1,",
                "+        \"regex\": \"/(.+)/\",",
                "+        \"sort\": 1,",
                "+        \"tagValuesQuery\": \"\",",
                "+        \"tags\": [],",
                "+        \"tagsQuery\": \"\",",
                "+        \"type\": \"query\",",
                "+        \"useTags\": false",
                "+      },",
                "+      {",
                "+        \"allValue\": \".*\",",
                "+        \"current\": {},",
                "+        \"datasource\": \"${DS_PROMETHEUS}\",",
                "+        \"hide\": 0,",
                "+        \"includeAll\": true,",
                "+        \"label\": null,",
                "+        \"multi\": true,",
                "+        \"name\": \"core\",",
                "+        \"options\": [],",
                "+        \"query\": \"label_values(solr_ping{base_url=~\\\"$base_url\\\"},core)\",",
                "+        \"refresh\": 1,",
                "+        \"regex\": \"/(.+)/\",",
                "+        \"sort\": 1,",
                "+        \"tagValuesQuery\": \"\",",
                "+        \"tags\": [],",
                "+        \"tagsQuery\": \"\",",
                "+        \"type\": \"query\",",
                "+        \"useTags\": false",
                "+      }",
                "+    ]",
                "+  },",
                "+  \"time\": {",
                "+    \"from\": \"now-30m\",",
                "+    \"to\": \"now\"",
                "+  },",
                "+  \"timepicker\": {",
                "+    \"refresh_intervals\": [",
                "+      \"5s\",",
                "+      \"10s\",",
                "+      \"30s\",",
                "+      \"1m\",",
                "+      \"5m\",",
                "+      \"15m\",",
                "+      \"30m\",",
                "+      \"1h\",",
                "+      \"2h\",",
                "+      \"1d\"",
                "+    ],",
                "+    \"time_options\": [",
                "+      \"5m\",",
                "+      \"15m\",",
                "+      \"1h\",",
                "+      \"6h\",",
                "+      \"12h\",",
                "+      \"24h\",",
                "+      \"2d\",",
                "+      \"7d\",",
                "+      \"30d\"",
                "+    ]",
                "+  },",
                "+  \"timezone\": \"browser\",",
                "+  \"title\": \"Solr Dashboard\",",
                "+  \"version\": 3",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/solr/contrib/prometheus-exporter/conf/log4j.properties b/solr/contrib/prometheus-exporter/conf/log4j.properties",
                "new file mode 100644",
                "index 00000000000..5dd689960d6",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/conf/log4j.properties",
                "@@ -0,0 +1,22 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one or more",
                "+# contributor license agreements.  See the NOTICE file distributed with",
                "+# this work for additional information regarding copyright ownership.",
                "+# The ASF licenses this file to You under the Apache License, Version 2.0",
                "+# (the \"License\"); you may not use this file except in compliance with",
                "+# the License.  You may obtain a copy of the License at",
                "+#",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "+#",
                "+",
                "+log4j.rootLogger=INFO, stdout",
                "+log4j.appender.stdout=org.apache.log4j.ConsoleAppender",
                "+log4j.appender.stdout.Target=System.out",
                "+log4j.appender.stdout.layout=org.apache.log4j.PatternLayout",
                "+log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd'T'HH:mm:ss.SSS} %-5p [%c] - %m%n",
                "diff --git a/solr/contrib/prometheus-exporter/ivy.xml b/solr/contrib/prometheus-exporter/ivy.xml",
                "new file mode 100644",
                "index 00000000000..8ad3e21e7ad",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/ivy.xml",
                "@@ -0,0 +1,41 @@",
                "+<!--",
                "+   Licensed to the Apache Software Foundation (ASF) under one",
                "+   or more contributor license agreements.  See the NOTICE file",
                "+   distributed with this work for additional information",
                "+   regarding copyright ownership.  The ASF licenses this file",
                "+   to you under the Apache License, Version 2.0 (the",
                "+   \"License\"); you may not use this file except in compliance",
                "+   with the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+   Unless required by applicable law or agreed to in writing,",
                "+   software distributed under the License is distributed on an",
                "+   \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+   KIND, either express or implied.  See the License for the",
                "+   specific language governing permissions and limitations",
                "+   under the License.    ",
                "+-->",
                "+<ivy-module version=\"2.0\">",
                "+  <info organisation=\"org.apache.solr\" module=\"prometheus\"/>",
                "+  <configurations defaultconfmapping=\"compile->master;test->master\">",
                "+    <conf name=\"compile\" transitive=\"false\"/>",
                "+    <conf name=\"test\" transitive=\"false\"/>",
                "+  </configurations>",
                "+  <dependencies>",
                "+    <dependency org=\"io.prometheus\" name=\"simpleclient\" rev=\"${/io.prometheus/simpleclient}\" conf=\"compile\"/>",
                "+    <dependency org=\"io.prometheus\" name=\"simpleclient_common\" rev=\"${/io.prometheus/simpleclient_common}\" conf=\"compile\"/>",
                "+    <dependency org=\"io.prometheus\" name=\"simpleclient_httpserver\" rev=\"${/io.prometheus/simpleclient_httpserver}\" conf=\"compile\"/>",
                "+    <dependency org=\"org.yaml\" name=\"snakeyaml\" rev=\"${/org.yaml/snakeyaml}\" conf=\"compile\"/>",
                "+    <dependency org=\"com.fasterxml.jackson.core\" name=\"jackson-core\" rev=\"${/com.fasterxml.jackson.core/jackson-core}\" conf=\"compile\"/>",
                "+    <dependency org=\"com.fasterxml.jackson.core\" name=\"jackson-databind\" rev=\"${/com.fasterxml.jackson.core/jackson-databind}\" conf=\"compile\"/>",
                "+    <dependency org=\"com.fasterxml.jackson.core\" name=\"jackson-annotations\" rev=\"${/com.fasterxml.jackson.core/jackson-annotations}\" conf=\"compile\"/>",
                "+    <dependency org=\"net.thisptr\" name=\"jackson-jq\" rev=\"${/net.thisptr/jackson-jq}\" conf=\"compile\"/>",
                "+    <dependency org=\"net.sourceforge.argparse4j\" name=\"argparse4j\" rev=\"${/net.sourceforge.argparse4j/argparse4j}\" conf=\"compile\"/>",
                "+    <dependency org=\"org.slf4j\" name=\"slf4j-api\" rev=\"${/org.slf4j/slf4j-api}\" conf=\"compile\"/>",
                "+    <dependency org=\"org.slf4j\" name=\"slf4j-log4j12\" rev=\"${/org.slf4j/slf4j-log4j12}\" conf=\"compile\"/>",
                "+    <dependency org=\"log4j\" name=\"log4j\" rev=\"${/log4j/log4j}\" conf=\"compile\"/>",
                "+",
                "+    <exclude org=\"*\" ext=\"*\" matcher=\"regexp\" type=\"${ivy.exclude.types}\"/>",
                "+  </dependencies>",
                "+</ivy-module>",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "new file mode 100644",
                "index 00000000000..2aa706ea05e",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "@@ -0,0 +1,405 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.prometheus.collector;",
                "+",
                "+import com.fasterxml.jackson.databind.JsonNode;",
                "+import com.fasterxml.jackson.databind.ObjectMapper;",
                "+import org.apache.solr.prometheus.collector.config.SolrCollectorConfig;",
                "+import org.apache.solr.prometheus.scraper.SolrScraper;",
                "+import org.apache.solr.prometheus.scraper.config.SolrScraperConfig;",
                "+import io.prometheus.client.Collector;",
                "+import org.apache.solr.client.solrj.SolrClient;",
                "+import org.apache.solr.client.solrj.SolrServerException;",
                "+import org.apache.solr.client.solrj.impl.CloudSolrClient;",
                "+import org.apache.solr.client.solrj.impl.HttpSolrClient;",
                "+import org.apache.solr.client.solrj.impl.NoOpResponseParser;",
                "+import org.apache.solr.client.solrj.request.CollectionAdminRequest;",
                "+import org.apache.solr.client.solrj.request.CoreAdminRequest;",
                "+import org.apache.solr.common.params.CoreAdminParams;",
                "+import org.apache.solr.common.util.NamedList;",
                "+import org.apache.solr.common.util.ExecutorUtil;",
                "+import org.apache.solr.util.DefaultSolrThreadFactory;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+import java.lang.invoke.MethodHandles;",
                "+import java.io.IOException;",
                "+import java.util.ArrayList;",
                "+import java.util.Arrays;",
                "+import java.util.Collections;",
                "+import java.util.Iterator;",
                "+import java.util.LinkedHashMap;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+import java.util.concurrent.ExecutionException;",
                "+import java.util.concurrent.ExecutorService;",
                "+import java.util.concurrent.Future;",
                "+import java.util.concurrent.TimeoutException;",
                "+import java.util.concurrent.TimeUnit;",
                "+",
                "+/**",
                "+ * SolrCollector",
                "+ */",
                "+public class SolrCollector extends Collector implements Collector.Describable {",
                "+  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "+",
                "+  private SolrClient solrClient;",
                "+  private SolrCollectorConfig config = new SolrCollectorConfig();",
                "+  private int numThreads;",
                "+",
                "+  private static ObjectMapper om = new ObjectMapper();",
                "+",
                "+  /**",
                "+   * Constructor.",
                "+   */",
                "+  public SolrCollector(SolrClient solrClient, SolrCollectorConfig config, int numThreads) {",
                "+    this.solrClient = solrClient;",
                "+    this.config = config;",
                "+    this.numThreads = numThreads;",
                "+  }",
                "+",
                "+  /**",
                "+   * Describe scrape status.",
                "+   */",
                "+  public List<Collector.MetricFamilySamples> describe() {",
                "+    List<MetricFamilySamples> metricFamilies = new ArrayList<>();",
                "+    metricFamilies.add(new MetricFamilySamples(\"solr_exporter_duration_seconds\", Type.GAUGE, \"Time this Solr scrape took, in seconds.\", new ArrayList<>()));",
                "+    return metricFamilies;",
                "+  }",
                "+",
                "+  /**",
                "+   * Collect samples.",
                "+   */",
                "+  public List<MetricFamilySamples> collect() {",
                "+    // start time of scraping.",
                "+    long startTime = System.nanoTime();",
                "+",
                "+    Map<String, MetricFamilySamples> metricFamilySamplesMap = new LinkedHashMap<>();",
                "+",
                "+    ExecutorService executorService = ExecutorUtil.newMDCAwareFixedThreadPool(numThreads, new DefaultSolrThreadFactory(\"solr-exporter\"));",
                "+    ",
                "+    List<Future<Map<String, MetricFamilySamples>>> futureList = new ArrayList<>();",
                "+",
                "+    try {",
                "+      // Ping",
                "+      if (config.getPing() != null) {",
                "+        if (solrClient instanceof CloudSolrClient) {",
                "+          List<HttpSolrClient> httpSolrClients = new ArrayList<>();",
                "+          try {",
                "+            httpSolrClients = getHttpSolrClients((CloudSolrClient) solrClient);",
                "+            for (HttpSolrClient httpSolrClient : httpSolrClients) {",
                "+              try {",
                "+                List<String> cores = getCores(httpSolrClient);",
                "+                for (String core : cores) {",
                "+                  SolrScraperConfig pingConfig;",
                "+                  try {",
                "+                    pingConfig = config.getPing().clone();",
                "+                  } catch (CloneNotSupportedException e) {",
                "+                    logger.error(e.getMessage());",
                "+                    continue;",
                "+                  }",
                "+",
                "+                  pingConfig.getQuery().setCore(core);",
                "+",
                "+                  SolrScraper scraper = new SolrScraper(httpSolrClient, pingConfig, Arrays.asList(\"zk_host\"), Arrays.asList(((CloudSolrClient) solrClient).getZkHost()));",
                "+                  Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "+                  futureList.add(future);",
                "+                }",
                "+              } catch (SolrServerException | IOException e) {",
                "+                logger.error(e.getMessage());",
                "+              }",
                "+            }",
                "+",
                "+            // get future",
                "+            for (Future<Map<String, MetricFamilySamples>> future : futureList) {",
                "+              try {",
                "+                Map<String, MetricFamilySamples> m = future.get(60, TimeUnit.SECONDS);",
                "+                mergeMetrics(metricFamilySamplesMap, m);",
                "+              } catch (InterruptedException | ExecutionException | TimeoutException e) {",
                "+                logger.error(e.getMessage());",
                "+              }",
                "+            }",
                "+          } catch (SolrServerException | IOException e) {",
                "+            logger.error(e.getMessage());",
                "+          } finally {",
                "+            for (HttpSolrClient httpSolrClient : httpSolrClients) {",
                "+              try {",
                "+                httpSolrClient.close();",
                "+              } catch (IOException e) {",
                "+                logger.error(e.getMessage());",
                "+              }",
                "+            }",
                "+          }",
                "+",
                "+          try {",
                "+            List<String> collections = getCollections((CloudSolrClient) solrClient);",
                "+            for (String collection : collections) {",
                "+              SolrScraperConfig pingConfig;",
                "+              try {",
                "+                pingConfig = config.getPing().clone();",
                "+              } catch (CloneNotSupportedException e) {",
                "+                logger.error(e.getMessage());",
                "+                continue;",
                "+              }",
                "+",
                "+              pingConfig.getQuery().setCollection(collection);",
                "+              LinkedHashMap<String, String> distrib = new LinkedHashMap<>();",
                "+              distrib.put(\"distrib\", \"true\");",
                "+              pingConfig.getQuery().setParams(Collections.singletonList(distrib));",
                "+",
                "+              SolrScraper scraper = new SolrScraper(solrClient, pingConfig);",
                "+              Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "+              futureList.add(future);",
                "+            }",
                "+          } catch (SolrServerException | IOException e) {",
                "+            logger.error(e.getMessage());",
                "+          }",
                "+        } else {",
                "+          try {",
                "+            List<String> cores = getCores((HttpSolrClient) solrClient);",
                "+            for (String core : cores) {",
                "+              SolrScraperConfig pingConfig = new SolrScraperConfig();",
                "+              pingConfig.setQuery(config.getPing().getQuery());",
                "+              pingConfig.getQuery().setCore(core);",
                "+",
                "+              pingConfig.setJsonQueries(config.getPing().getJsonQueries());",
                "+",
                "+              SolrScraper scraper = new SolrScraper(solrClient, pingConfig);",
                "+              Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "+              futureList.add(future);",
                "+            }",
                "+          } catch (SolrServerException | IOException e) {",
                "+            logger.error(e.getMessage());",
                "+          }",
                "+        }",
                "+      }",
                "+",
                "+      // Metrics",
                "+      if (config.getMetrics() != null) {",
                "+        if (solrClient instanceof CloudSolrClient) {",
                "+          List<HttpSolrClient> httpSolrClients = new ArrayList<>();",
                "+          try {",
                "+            httpSolrClients = getHttpSolrClients((CloudSolrClient) solrClient);",
                "+            for (HttpSolrClient httpSolrClient : httpSolrClients) {",
                "+              SolrScraper scraper = new SolrScraper(httpSolrClient, config.getMetrics(), Arrays.asList(\"zk_host\"), Arrays.asList(((CloudSolrClient) solrClient).getZkHost()));",
                "+              Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "+              futureList.add(future);",
                "+            }",
                "+",
                "+            // get future",
                "+            for (Future<Map<String, MetricFamilySamples>> future : futureList) {",
                "+              try {",
                "+                Map<String, MetricFamilySamples> m = future.get(60, TimeUnit.SECONDS);",
                "+                mergeMetrics(metricFamilySamplesMap, m);",
                "+              } catch (InterruptedException | ExecutionException | TimeoutException e) {",
                "+                logger.error(e.getMessage());",
                "+              }",
                "+            }",
                "+          } catch (SolrServerException | IOException e) {",
                "+            logger.error(e.getMessage());",
                "+          } finally {",
                "+            for (HttpSolrClient httpSolrClient : httpSolrClients) {",
                "+              try {",
                "+                httpSolrClient.close();",
                "+              } catch (IOException e) {",
                "+                logger.error(e.getMessage());",
                "+              }",
                "+            }",
                "+          }",
                "+        } else {",
                "+          SolrScraper scraper = new SolrScraper(solrClient, config.getMetrics());",
                "+          Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "+          futureList.add(future);",
                "+        }",
                "+      }",
                "+",
                "+      // Collections",
                "+      if (config.getCollections() != null) {",
                "+        if (solrClient instanceof CloudSolrClient) {",
                "+          SolrScraper scraper = new SolrScraper(solrClient, config.getCollections());",
                "+          Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "+          futureList.add(future);",
                "+        }",
                "+      }",
                "+",
                "+      // Query",
                "+      if (config.getQueries() != null) {",
                "+        for (SolrScraperConfig c : config.getQueries()) {",
                "+          SolrScraper scraper = new SolrScraper(solrClient, c);",
                "+          Future<Map<String, MetricFamilySamples>> future = executorService.submit(scraper);",
                "+          futureList.add(future);",
                "+        }",
                "+      }",
                "+",
                "+      // get future",
                "+      for (Future<Map<String, MetricFamilySamples>> future : futureList) {",
                "+        try {",
                "+          Map<String, MetricFamilySamples> m = future.get(60, TimeUnit.SECONDS);",
                "+          mergeMetrics(metricFamilySamplesMap, m);",
                "+        } catch (InterruptedException | ExecutionException | TimeoutException e) {",
                "+          logger.error(e.getMessage());",
                "+        }",
                "+      }",
                "+    } finally {",
                "+      executorService.shutdown();",
                "+    }",
                "+",
                "+    // return value",
                "+    List<MetricFamilySamples> metricFamiliesSamplesList = new ArrayList<>();",
                "+",
                "+    // add solr metrics",
                "+    for (String gaugeMetricName : metricFamilySamplesMap.keySet()) {",
                "+      MetricFamilySamples metricFamilySamples = metricFamilySamplesMap.get(gaugeMetricName);",
                "+      if (metricFamilySamples.samples.size() > 0) {",
                "+        metricFamiliesSamplesList.add(metricFamilySamples);",
                "+      }",
                "+    }",
                "+",
                "+    // add scrape duration metric",
                "+    List<MetricFamilySamples.Sample> durationSample = new ArrayList<>();",
                "+    durationSample.add(new MetricFamilySamples.Sample(\"solr_exporter_duration_seconds\", new ArrayList<>(), new ArrayList<>(), (System.nanoTime() - startTime) / 1.0E9));",
                "+    metricFamiliesSamplesList.add(new MetricFamilySamples(\"solr_exporter_duration_seconds\", Type.GAUGE, \"Time this Solr exporter took, in seconds.\", durationSample));",
                "+",
                "+    return metricFamiliesSamplesList;",
                "+  }",
                "+",
                "+  /**",
                "+   * Merge metrics.",
                "+   */",
                "+  private Map<String, MetricFamilySamples> mergeMetrics(Map<String, MetricFamilySamples> metrics1, Map<String, MetricFamilySamples> metrics2) {",
                "+    // marge MetricFamilySamples",
                "+    for (String k : metrics2.keySet()) {",
                "+      if (metrics1.containsKey(k)) {",
                "+        for (MetricFamilySamples.Sample sample : metrics2.get(k).samples) {",
                "+          if (!metrics1.get(k).samples.contains(sample)) {",
                "+            metrics1.get(k).samples.add(sample);",
                "+          }",
                "+        }",
                "+      } else {",
                "+        metrics1.put(k, metrics2.get(k));",
                "+      }",
                "+    }",
                "+",
                "+    return metrics1;",
                "+  }",
                "+",
                "+",
                "+  /**",
                "+   * Get target cores via CoreAdminAPI.",
                "+   */",
                "+  public static List<String> getCores(HttpSolrClient httpSolrClient) throws SolrServerException, IOException {",
                "+    List<String> cores = new ArrayList<>();",
                "+",
                "+    NoOpResponseParser responseParser = new NoOpResponseParser();",
                "+    responseParser.setWriterType(\"json\");",
                "+",
                "+    httpSolrClient.setParser(responseParser);",
                "+",
                "+    CoreAdminRequest coreAdminRequest = new CoreAdminRequest();",
                "+    coreAdminRequest.setAction(CoreAdminParams.CoreAdminAction.STATUS);",
                "+    coreAdminRequest.setIndexInfoNeeded(false);",
                "+",
                "+    NamedList<Object> coreAdminResponse = httpSolrClient.request(coreAdminRequest);",
                "+",
                "+    JsonNode statusJsonNode = om.readTree((String) coreAdminResponse.get(\"response\")).get(\"status\");",
                "+",
                "+    for (Iterator<JsonNode> i = statusJsonNode.iterator(); i.hasNext(); ) {",
                "+      String core = i.next().get(\"name\").textValue();",
                "+      if (!cores.contains(core)) {",
                "+        cores.add(core);",
                "+      }",
                "+    }",
                "+",
                "+    return cores;",
                "+  }",
                "+",
                "+  /**",
                "+   * Get target cores via CollectionsAPI.",
                "+   */",
                "+  public static List<String> getCollections(CloudSolrClient cloudSolrClient) throws SolrServerException, IOException {",
                "+    List<String> collections = new ArrayList<>();",
                "+",
                "+    NoOpResponseParser responseParser = new NoOpResponseParser();",
                "+    responseParser.setWriterType(\"json\");",
                "+",
                "+    cloudSolrClient.setParser(responseParser);",
                "+",
                "+    CollectionAdminRequest collectionAdminRequest = new CollectionAdminRequest.List();",
                "+",
                "+    NamedList<Object> collectionAdminResponse = cloudSolrClient.request(collectionAdminRequest);",
                "+",
                "+    JsonNode collectionsJsonNode = om.readTree((String) collectionAdminResponse.get(\"response\")).get(\"collections\");",
                "+",
                "+    for (Iterator<JsonNode> i = collectionsJsonNode.iterator(); i.hasNext(); ) {",
                "+      String collection = i.next().textValue();",
                "+      if (!collections.contains(collection)) {",
                "+        collections.add(collection);",
                "+      }",
                "+    }",
                "+",
                "+    return collections;",
                "+  }",
                "+",
                "+  /**",
                "+   * Get base urls via CollectionsAPI.",
                "+   */",
                "+  private List<String> getBaseUrls(CloudSolrClient cloudSolrClient) throws SolrServerException, IOException {",
                "+    List<String> baseUrls = new ArrayList<>();",
                "+",
                "+    NoOpResponseParser responseParser = new NoOpResponseParser();",
                "+    responseParser.setWriterType(\"json\");",
                "+",
                "+    cloudSolrClient.setParser(responseParser);",
                "+",
                "+    CollectionAdminRequest collectionAdminRequest = new CollectionAdminRequest.ClusterStatus();",
                "+",
                "+    NamedList<Object> collectionAdminResponse = cloudSolrClient.request(collectionAdminRequest);",
                "+",
                "+    List<JsonNode> baseUrlJsonNode = om.readTree((String) collectionAdminResponse.get(\"response\")).findValues(\"base_url\");",
                "+",
                "+    for (Iterator<JsonNode> i = baseUrlJsonNode.iterator(); i.hasNext(); ) {",
                "+      String baseUrl = i.next().textValue();",
                "+      if (!baseUrls.contains(baseUrl)) {",
                "+        baseUrls.add(baseUrl);",
                "+      }",
                "+    }",
                "+",
                "+    return baseUrls;",
                "+  }",
                "+",
                "+  /**",
                "+   * Get HTTP Solr Clients",
                "+   */",
                "+  private List<HttpSolrClient> getHttpSolrClients(CloudSolrClient cloudSolrClient) throws SolrServerException, IOException {",
                "+    List<HttpSolrClient> solrClients = new ArrayList<>();",
                "+",
                "+    for (String baseUrl : getBaseUrls(cloudSolrClient)) {",
                "+      NoOpResponseParser responseParser = new NoOpResponseParser();",
                "+      responseParser.setWriterType(\"json\");",
                "+",
                "+      HttpSolrClient.Builder builder = new HttpSolrClient.Builder();",
                "+      builder.withBaseSolrUrl(baseUrl);",
                "+",
                "+      HttpSolrClient httpSolrClient = builder.build();",
                "+      httpSolrClient.setParser(responseParser);",
                "+",
                "+      solrClients.add(httpSolrClient);",
                "+    }",
                "+",
                "+    return solrClients;",
                "+  }",
                "+}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/SolrCollectorConfig.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/SolrCollectorConfig.java",
                "new file mode 100644",
                "index 00000000000..834480259bd",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/SolrCollectorConfig.java",
                "@@ -0,0 +1,64 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.prometheus.collector.config;",
                "+",
                "+import org.apache.solr.prometheus.scraper.config.SolrScraperConfig;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+",
                "+/**",
                "+ * SolrCollectorConfig",
                "+ */",
                "+public class SolrCollectorConfig {",
                "+  private SolrScraperConfig ping = new SolrScraperConfig();",
                "+  private SolrScraperConfig metrics = new SolrScraperConfig();",
                "+  private SolrScraperConfig collections = new SolrScraperConfig();",
                "+  private List<SolrScraperConfig> queries = new ArrayList<>();",
                "+",
                "+  public SolrScraperConfig getPing() {",
                "+    return ping;",
                "+  }",
                "+",
                "+  public void setPing(SolrScraperConfig ping) {",
                "+    this.ping = ping;",
                "+  }",
                "+",
                "+  public SolrScraperConfig getMetrics() {",
                "+    return metrics;",
                "+  }",
                "+",
                "+  public void setMetrics(SolrScraperConfig metrics) {",
                "+    this.metrics = metrics;",
                "+  }",
                "+",
                "+  public SolrScraperConfig getCollections() {",
                "+    return collections;",
                "+  }",
                "+",
                "+  public void setCollections(SolrScraperConfig collections) {",
                "+    this.collections = collections;",
                "+  }",
                "+",
                "+  public List<SolrScraperConfig> getQueries() {",
                "+    return queries;",
                "+  }",
                "+",
                "+  public void setQueries(List<SolrScraperConfig> queries) {",
                "+    this.queries = queries;",
                "+  }",
                "+}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/package-info.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/package-info.java",
                "new file mode 100644",
                "index 00000000000..c688ecb39ba",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/package-info.java",
                "@@ -0,0 +1,21 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+/** ",
                "+ * Solr metrics collector config.",
                "+ */",
                "+package org.apache.solr.prometheus.collector.config;",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/package-info.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/package-info.java",
                "new file mode 100644",
                "index 00000000000..63b17fe8c3b",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/package-info.java",
                "@@ -0,0 +1,21 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+/** ",
                "+ * Solr metrics collector.",
                "+ */",
                "+package org.apache.solr.prometheus.collector;",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "new file mode 100644",
                "index 00000000000..13abaac98b4",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "@@ -0,0 +1,255 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.prometheus.exporter;",
                "+",
                "+import org.apache.solr.prometheus.collector.SolrCollector;",
                "+import org.apache.solr.prometheus.collector.config.SolrCollectorConfig;",
                "+import io.prometheus.client.CollectorRegistry;",
                "+import io.prometheus.client.Counter;",
                "+import io.prometheus.client.exporter.HTTPServer;",
                "+import net.sourceforge.argparse4j.ArgumentParsers;",
                "+import net.sourceforge.argparse4j.inf.ArgumentParser;",
                "+import net.sourceforge.argparse4j.inf.ArgumentParserException;",
                "+import net.sourceforge.argparse4j.inf.Namespace;",
                "+import org.apache.solr.client.solrj.SolrClient;",
                "+import org.apache.solr.client.solrj.impl.CloudSolrClient;",
                "+import org.apache.solr.client.solrj.impl.HttpSolrClient;",
                "+import org.apache.solr.client.solrj.impl.NoOpResponseParser;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+import org.yaml.snakeyaml.Yaml;",
                "+",
                "+import java.lang.invoke.MethodHandles;",
                "+import javax.management.MalformedObjectNameException;",
                "+import java.io.File;",
                "+import java.io.BufferedReader;",
                "+import java.io.FileInputStream;",
                "+import java.io.InputStreamReader;",
                "+import java.io.IOException;",
                "+import java.net.InetSocketAddress;",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+import java.util.regex.Matcher;",
                "+import java.util.regex.Pattern;",
                "+",
                "+/**",
                "+ * SolrExporter",
                "+ */",
                "+public class SolrExporter {",
                "+  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "+",
                "+  private static final String[] ARG_PORT_FLAGS = { \"-p\", \"--port\" };",
                "+  private static final String ARG_PORT_METAVAR = \"PORT\";",
                "+  private static final String ARG_PORT_DEST = \"port\";",
                "+  private static final Integer ARG_PORT_DEFAULT = 9983;",
                "+  private static final String ARG_PORT_HELP = \"solr-exporter listen port\";",
                "+",
                "+  private static final String[] ARG_BASE_URL_FLAGS = { \"-b\", \"--baseurl\" };",
                "+  private static final String ARG_BASE_URL_METAVAR = \"BASE_URL\";",
                "+  private static final String ARG_BASE_URL_DEST = \"baseUrl\";",
                "+  private static final String ARG_BASE_URL_DEFAULT = \"\";",
                "+  private static final String ARG_BASE_URL_HELP = \"specify Solr base URL when connecting to Solr in standalone mode (for example 'http://localhost:8983/solr')\";",
                "+",
                "+  private static final String[] ARG_ZK_HOST_FLAGS = { \"-z\", \"--zkhost\" };",
                "+  private static final String ARG_ZK_HOST_METAVAR = \"ZK_HOST\";",
                "+  private static final String ARG_ZK_HOST_DEST = \"zkHost\";",
                "+  private static final String ARG_ZK_HOST_DEFAULT = \"\";",
                "+  private static final String ARG_ZK_HOST_HELP = \"specify ZooKeeper connection string when connecting to Solr in SolrCloud mode (for example 'localhost:2181/solr')\";",
                "+",
                "+  private static final String[] ARG_CONFIG_FLAGS = { \"-f\", \"--config-file\" };",
                "+  private static final String ARG_CONFIG_METAVAR = \"CONFIG\";",
                "+  private static final String ARG_CONFIG_DEST = \"configFile\";",
                "+  private static final String ARG_CONFIG_DEFAULT = \"./conf/config.yml\";",
                "+  private static final String ARG_CONFIG_HELP = \"specify configuration file\";",
                "+",
                "+  private static final String[] ARG_NUM_THREADS_FLAGS = { \"-n\", \"--num-thread\" };",
                "+  private static final String ARG_NUM_THREADS_METAVAR = \"NUM_THREADS\";",
                "+  private static final String ARG_NUM_THREADS_DEST = \"numThreads\";",
                "+  private static final Integer ARG_NUM_THREADS_DEFAULT = 1;",
                "+  private static final String ARG_NUM_THREADS_HELP = \"specify number of threads\";",
                "+",
                "+  private int port;",
                "+  private SolrClient solrClient;",
                "+  private SolrCollectorConfig config;",
                "+  private int numThreads;",
                "+",
                "+  CollectorRegistry registry = new CollectorRegistry();",
                "+",
                "+  private HTTPServer httpServer;",
                "+  private SolrCollector collector;",
                "+",
                "+  public static final Counter scrapeErrorTotal = Counter.build()",
                "+      .name(\"solr_exporter_scrape_error_total\")",
                "+      .help(\"Number of scrape error.\").register();",
                "+",
                "+  /**",
                "+   * Constructor.",
                "+   */",
                "+  public SolrExporter(int port, SolrClient solrClient, File configFile, int numThreads) throws IOException {",
                "+    this(port, solrClient, new Yaml().loadAs(new BufferedReader(new InputStreamReader(new FileInputStream(configFile),\"UTF-8\")), SolrCollectorConfig.class), numThreads);",
                "+  }",
                "+",
                "+  /**",
                "+   * Constructor.",
                "+   */",
                "+  public SolrExporter(int port, SolrClient solrClient, SolrCollectorConfig config, int numThreads) {",
                "+    super();",
                "+",
                "+    this.port = port;",
                "+    this.solrClient = solrClient;",
                "+    this.config = config;",
                "+    this.numThreads = numThreads;",
                "+  }",
                "+",
                "+  /**",
                "+   * Start HTTP server for exporting Solr metrics.",
                "+   */",
                "+  public void start() throws MalformedObjectNameException, IOException {",
                "+    InetSocketAddress socket = new InetSocketAddress(port);",
                "+",
                "+    this.collector = new SolrCollector(solrClient, config, numThreads);",
                "+",
                "+    this.registry.register(this.collector);",
                "+    this.registry.register(scrapeErrorTotal);",
                "+",
                "+    this.httpServer = new HTTPServer(socket, this.registry);",
                "+  }",
                "+",
                "+  /**",
                "+   * Stop HTTP server for exporting Solr metrics.",
                "+   */",
                "+  public void stop() throws IOException {",
                "+    this.httpServer.stop();",
                "+    this.registry.unregister(this.collector);",
                "+  }",
                "+",
                "+  /**",
                "+   * Create Solr client",
                "+   */",
                "+  private static SolrClient createClient(String connStr) {",
                "+    SolrClient solrClient;",
                "+",
                "+    Pattern baseUrlPattern = Pattern.compile(\"^https?:\\\\/\\\\/[\\\\w\\\\/:%#\\\\$&\\\\?\\\\(\\\\)~\\\\.=\\\\+\\\\-]+$\");",
                "+    Pattern zkHostPattern = Pattern.compile(\"^(?<host>[^\\\\/]+)(?<chroot>|(?:\\\\/.*))$\");",
                "+    Matcher matcher;",
                "+",
                "+    matcher = baseUrlPattern.matcher(connStr);",
                "+    if (matcher.matches()) {",
                "+      NoOpResponseParser responseParser = new NoOpResponseParser();",
                "+      responseParser.setWriterType(\"json\");",
                "+",
                "+      HttpSolrClient.Builder builder = new HttpSolrClient.Builder();",
                "+      builder.withBaseSolrUrl(connStr);",
                "+",
                "+      HttpSolrClient httpSolrClient = builder.build();",
                "+      httpSolrClient.setParser(responseParser);",
                "+",
                "+      solrClient = httpSolrClient;",
                "+    } else {",
                "+      String host = \"\";",
                "+      String chroot = \"\";",
                "+",
                "+      matcher = zkHostPattern.matcher(connStr);",
                "+      if (matcher.matches()) {",
                "+        host = matcher.group(\"host\") != null ? matcher.group(\"host\") : \"\";",
                "+        chroot = matcher.group(\"chroot\") != null ? matcher.group(\"chroot\") : \"\";",
                "+      }",
                "+",
                "+      NoOpResponseParser responseParser = new NoOpResponseParser();",
                "+      responseParser.setWriterType(\"json\");",
                "+",
                "+      CloudSolrClient.Builder builder = new CloudSolrClient.Builder();",
                "+      if (host.contains(\",\")) {",
                "+        List<String> hosts = new ArrayList<>();",
                "+        for (String h : host.split(\",\")) {",
                "+          if (h != null && !h.equals(\"\")) {",
                "+            hosts.add(h.trim());",
                "+          }",
                "+        }",
                "+        builder.withZkHost(hosts);",
                "+      } else {",
                "+        builder.withZkHost(host);",
                "+      }",
                "+      if (chroot.equals(\"\")) {",
                "+        builder.withZkChroot(\"/\");",
                "+      } else {",
                "+        builder.withZkChroot(chroot);",
                "+      }",
                "+",
                "+      CloudSolrClient cloudSolrClient = builder.build();",
                "+      cloudSolrClient.setParser(responseParser);",
                "+",
                "+      solrClient = cloudSolrClient;",
                "+    }",
                "+",
                "+    return solrClient;",
                "+  }",
                "+",
                "+  /**",
                "+   * Entry point of SolrExporter.",
                "+   */",
                "+  public static void main( String[] args ) {",
                "+    ArgumentParser parser = ArgumentParsers.newArgumentParser(SolrCollector.class.getSimpleName())",
                "+        .description(\"Prometheus exporter for Apache Solr.\");",
                "+",
                "+    parser.addArgument(ARG_PORT_FLAGS)",
                "+        .metavar(ARG_PORT_METAVAR).dest(ARG_PORT_DEST).type(Integer.class)",
                "+        .setDefault(ARG_PORT_DEFAULT).help(ARG_PORT_HELP);",
                "+",
                "+    parser.addArgument(ARG_BASE_URL_FLAGS)",
                "+        .metavar(ARG_BASE_URL_METAVAR).dest(ARG_BASE_URL_DEST).type(String.class)",
                "+        .setDefault(ARG_BASE_URL_DEFAULT).help(ARG_BASE_URL_HELP);",
                "+",
                "+    parser.addArgument(ARG_ZK_HOST_FLAGS)",
                "+        .metavar(ARG_ZK_HOST_METAVAR).dest(ARG_ZK_HOST_DEST).type(String.class)",
                "+        .setDefault(ARG_ZK_HOST_DEFAULT).help(ARG_ZK_HOST_HELP);",
                "+",
                "+    parser.addArgument(ARG_CONFIG_FLAGS)",
                "+        .metavar(ARG_CONFIG_METAVAR).dest(ARG_CONFIG_DEST).type(String.class)",
                "+        .setDefault(ARG_CONFIG_DEFAULT).help(ARG_CONFIG_HELP);",
                "+",
                "+    parser.addArgument(ARG_NUM_THREADS_FLAGS)",
                "+        .metavar(ARG_NUM_THREADS_METAVAR).dest(ARG_NUM_THREADS_DEST).type(Integer.class)",
                "+        .setDefault(ARG_NUM_THREADS_DEFAULT).help(ARG_NUM_THREADS_HELP);",
                "+",
                "+    try {",
                "+      Namespace res = parser.parseArgs(args);",
                "+",
                "+      int port = res.getInt(ARG_PORT_DEST);",
                "+",
                "+      String connStr = \"http://localhost:8983/solr\";",
                "+      if (!res.getString(ARG_BASE_URL_DEST).equals(\"\")) {",
                "+        connStr = res.getString(ARG_BASE_URL_DEST);",
                "+      } else if (!res.getString(ARG_ZK_HOST_DEST).equals(\"\")) {",
                "+        connStr = res.getString(ARG_ZK_HOST_DEST);",
                "+      }",
                "+",
                "+      File configFile = new File(res.getString(ARG_CONFIG_DEST));",
                "+      int numThreads = res.getInt(ARG_NUM_THREADS_DEST);",
                "+",
                "+      SolrClient solrClient = createClient(connStr);",
                "+",
                "+      SolrExporter solrExporter = new SolrExporter(port, solrClient, configFile, numThreads);",
                "+      solrExporter.start();",
                "+      logger.info(\"Start server\");",
                "+    } catch (MalformedObjectNameException | IOException e) {",
                "+      logger.error(\"Start server failed: \" + e.toString());",
                "+    } catch (ArgumentParserException e) {",
                "+      parser.handleError(e);",
                "+    }",
                "+  }",
                "+}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/package-info.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/package-info.java",
                "new file mode 100644",
                "index 00000000000..81f33f91852",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/package-info.java",
                "@@ -0,0 +1,21 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+/** ",
                "+ * Solr metrics exporter.",
                "+ */",
                "+package org.apache.solr.prometheus.exporter;",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "new file mode 100644",
                "index 00000000000..30d34418426",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "@@ -0,0 +1,219 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.prometheus.scraper;",
                "+",
                "+import com.fasterxml.jackson.databind.JsonNode;",
                "+import com.fasterxml.jackson.databind.ObjectMapper;",
                "+import org.apache.solr.prometheus.exporter.SolrExporter;",
                "+import org.apache.solr.prometheus.scraper.config.SolrQueryConfig;",
                "+import org.apache.solr.prometheus.scraper.config.SolrScraperConfig;",
                "+import io.prometheus.client.Collector;",
                "+import net.thisptr.jackson.jq.JsonQuery;",
                "+import net.thisptr.jackson.jq.exception.JsonQueryException;",
                "+import org.apache.solr.client.solrj.SolrClient;",
                "+import org.apache.solr.client.solrj.SolrServerException;",
                "+import org.apache.solr.client.solrj.impl.CloudSolrClient;",
                "+import org.apache.solr.client.solrj.impl.HttpSolrClient;",
                "+import org.apache.solr.client.solrj.request.QueryRequest;",
                "+import org.apache.solr.common.params.ModifiableSolrParams;",
                "+import org.apache.solr.common.util.NamedList;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+import java.lang.invoke.MethodHandles;",
                "+import java.io.IOException;",
                "+import java.util.ArrayList;",
                "+import java.util.Iterator;",
                "+import java.util.LinkedHashMap;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+import java.util.concurrent.Callable;",
                "+",
                "+/**",
                "+ * SolrScraper",
                "+ */",
                "+public class SolrScraper implements Callable<Map<String, Collector.MetricFamilySamples>> {",
                "+  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "+",
                "+  private SolrClient solrClient;",
                "+  private SolrScraperConfig scraperConfig;",
                "+",
                "+  private List<String> labelNames;",
                "+  private List<String> labelValues;",
                "+",
                "+  /**",
                "+   * Constructor.",
                "+   */",
                "+  public SolrScraper(SolrClient solrClient, SolrScraperConfig scraperConfig) {",
                "+    this(solrClient, scraperConfig, new ArrayList<>(), new ArrayList<>());",
                "+  }",
                "+",
                "+  /**",
                "+   * Constructor.",
                "+   */",
                "+  public SolrScraper(SolrClient solrClient, SolrScraperConfig scraperConfig, List<String> labelNames, List<String> labelValues) {",
                "+    super();",
                "+",
                "+    this.solrClient = solrClient;",
                "+    this.scraperConfig = scraperConfig;",
                "+",
                "+    this.labelNames = labelNames;",
                "+    this.labelValues = labelValues;",
                "+  }",
                "+",
                "+  /**",
                "+   * Execute collectResponse",
                "+   */",
                "+  @Override",
                "+  public Map<String, Collector.MetricFamilySamples> call() throws Exception {",
                "+    return collectResponse(this.solrClient, this.scraperConfig);",
                "+  }",
                "+",
                "+  /**",
                "+   * Collect facet count.",
                "+   */",
                "+  public Map<String, Collector.MetricFamilySamples> collectResponse(SolrClient solrClient, SolrScraperConfig scraperConfig) {",
                "+    Map<String, Collector.MetricFamilySamples> metricFamilySamplesMap = new LinkedHashMap<>();",
                "+",
                "+    try {",
                "+      SolrQueryConfig queryConfig = scraperConfig.getQuery();",
                "+",
                "+      // create Solr request parameters",
                "+      ModifiableSolrParams params = new ModifiableSolrParams();",
                "+      for (Map<String, String> param : queryConfig.getParams()) {",
                "+        for (String name : param.keySet()) {",
                "+          Object obj = param.get(name);",
                "+          if (obj instanceof Number) {",
                "+            params.add(name, obj.toString());",
                "+          } else {",
                "+            params.add(name, param.get(name));",
                "+          }",
                "+        }",
                "+      }",
                "+",
                "+      // create Solr queryConfig request",
                "+      QueryRequest queryRequest = new QueryRequest(params);",
                "+      queryRequest.setPath(queryConfig.getPath());",
                "+",
                "+      // invoke Solr",
                "+      NamedList<Object> queryResponse = null;",
                "+      if (queryConfig.getCore().equals(\"\") && queryConfig.getCollection().equals(\"\")) {",
                "+        queryResponse = solrClient.request(queryRequest);",
                "+      } else if (!queryConfig.getCore().equals(\"\")) {",
                "+        queryResponse = solrClient.request(queryRequest, queryConfig.getCore());",
                "+      } else if (!queryConfig.getCollection().equals(\"\")) {",
                "+        queryResponse = solrClient.request(queryRequest, queryConfig.getCollection());",
                "+      }",
                "+",
                "+      ObjectMapper om = new ObjectMapper();",
                "+",
                "+      JsonNode metricsJson = om.readTree((String) queryResponse.get(\"response\"));",
                "+",
                "+      List<JsonQuery> jqs = new ArrayList<>();",
                "+      for (String jsonQuery : scraperConfig.getJsonQueries()) {",
                "+        JsonQuery compiledJsonQuery = JsonQuery.compile(jsonQuery);",
                "+        jqs.add(compiledJsonQuery);",
                "+      }",
                "+",
                "+      for (int i = 0; i < jqs.size(); i++) {",
                "+        JsonQuery q = jqs.get(i);",
                "+        try {",
                "+          List<JsonNode> results = q.apply(metricsJson);",
                "+          for (JsonNode result : results) {",
                "+            String type = result.get(\"type\").textValue();",
                "+            String name = result.get(\"name\").textValue();",
                "+            String help = result.get(\"help\").textValue();",
                "+            Double value = result.get(\"value\").doubleValue();",
                "+            ArrayList<String> labelNames = new ArrayList<>(this.labelNames);",
                "+            ArrayList<String> labelValues = new ArrayList<>(this.labelValues);",
                "+",
                "+            if (solrClient instanceof CloudSolrClient) {",
                "+              labelNames.add(\"zk_host\");",
                "+              labelValues.add(((CloudSolrClient) solrClient).getZkHost());",
                "+            }",
                "+",
                "+            if (!scraperConfig.getQuery().getCollection().equals(\"\")) {",
                "+              labelNames.add(\"collection\");",
                "+              labelValues.add(scraperConfig.getQuery().getCollection());",
                "+            }",
                "+",
                "+            if (solrClient instanceof HttpSolrClient) {",
                "+              labelNames.add(\"base_url\");",
                "+              labelValues.add(((HttpSolrClient) solrClient).getBaseURL());",
                "+            }",
                "+",
                "+            if (!scraperConfig.getQuery().getCore().equals(\"\")) {",
                "+              labelNames.add(\"core\");",
                "+              labelValues.add(scraperConfig.getQuery().getCore());",
                "+            }",
                "+",
                "+            for(Iterator<JsonNode> ite = result.get(\"label_names\").iterator();ite.hasNext();){",
                "+              JsonNode item = ite.next();",
                "+              labelNames.add(item.textValue());",
                "+            }",
                "+            for(Iterator<JsonNode> ite = result.get(\"label_values\").iterator();ite.hasNext();){",
                "+              JsonNode item = ite.next();",
                "+              labelValues.add(item.textValue());",
                "+            }",
                "+",
                "+            if (labelNames.indexOf(\"core\") < 0 && labelNames.indexOf(\"collection\") >= 0 && labelNames.indexOf(\"shard\") >= 0 && labelNames.indexOf(\"replica\") >= 0) {",
                "+              if (labelValues.get(labelNames.indexOf(\"collection\")).equals(\"-\") && labelValues.get(labelNames.indexOf(\"shard\")).equals(\"-\") && labelValues.get(labelNames.indexOf(\"replica\")).equals(\"-\")) {",
                "+                labelNames.add(\"core\");",
                "+                labelValues.add(\"-\");",
                "+              } else {",
                "+                StringBuffer sb = new StringBuffer();",
                "+                sb.append(labelValues.get(labelNames.indexOf(\"collection\")))",
                "+                    .append(\"_\")",
                "+                    .append(labelValues.get(labelNames.indexOf(\"shard\")))",
                "+                    .append(\"_\")",
                "+                    .append(labelValues.get(labelNames.indexOf(\"replica\")));",
                "+",
                "+                labelNames.add(\"core\");",
                "+                labelValues.add(sb.toString());",
                "+              }",
                "+            }",
                "+",
                "+            if (!metricFamilySamplesMap.containsKey(name)) {",
                "+              Collector.MetricFamilySamples metricFamilySamples = new Collector.MetricFamilySamples(",
                "+                name,",
                "+                Collector.Type.valueOf(type),",
                "+                help,",
                "+                new ArrayList<>()",
                "+              );",
                "+              metricFamilySamplesMap.put(name, metricFamilySamples);",
                "+            }",
                "+",
                "+            Collector.MetricFamilySamples.Sample sample = new Collector.MetricFamilySamples.Sample(name, labelNames, labelValues, value);",
                "+",
                "+            if (!metricFamilySamplesMap.get(name).samples.contains(sample)) {",
                "+              metricFamilySamplesMap.get(name).samples.add(sample);",
                "+            }",
                "+          }",
                "+        } catch (JsonQueryException e) {",
                "+          logger.error(e.toString() + \" \" + q.toString());",
                "+          SolrExporter.scrapeErrorTotal.inc();",
                "+        }",
                "+      }",
                "+    } catch (HttpSolrClient.RemoteSolrException | SolrServerException | IOException e) {",
                "+      logger.error(e.toString());",
                "+    } catch (Exception e) {",
                "+      logger.error(e.toString());",
                "+    }",
                "+",
                "+    return metricFamilySamplesMap;",
                "+  }",
                "+}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrQueryConfig.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrQueryConfig.java",
                "new file mode 100644",
                "index 00000000000..500bb039e6a",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrQueryConfig.java",
                "@@ -0,0 +1,99 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.prometheus.scraper.config;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.Iterator;",
                "+import java.util.LinkedHashMap;",
                "+import java.util.List;",
                "+",
                "+/**",
                "+ * SolrQueryConfig",
                "+ */",
                "+public class SolrQueryConfig implements Cloneable {",
                "+  private String core = \"\";",
                "+  private String collection = \"\";",
                "+  private String path = \"\";",
                "+  private List<LinkedHashMap<String, String>> params = new ArrayList<>();",
                "+",
                "+  public String getCore() {",
                "+    return core;",
                "+  }",
                "+",
                "+  public void setCore(String core) {",
                "+    this.core = core;",
                "+  }",
                "+",
                "+  public String getCollection() {",
                "+    return collection;",
                "+  }",
                "+",
                "+  public void setCollection(String collection) {",
                "+    this.collection = collection;",
                "+  }",
                "+",
                "+  public String getPath() {",
                "+    return path;",
                "+  }",
                "+",
                "+  public void setPath(String path) {",
                "+    this.path = path;",
                "+  }",
                "+",
                "+  public List<LinkedHashMap<String, String>> getParams() {",
                "+    return params;",
                "+  }",
                "+",
                "+  public void setParams(List<LinkedHashMap<String, String>> params) {",
                "+    this.params = params;",
                "+  }",
                "+",
                "+  public String getParamsString() {",
                "+    StringBuffer buffer = new StringBuffer();",
                "+",
                "+    for(Iterator<LinkedHashMap<String, String>> i = getParams().iterator(); i.hasNext(); ) {",
                "+      LinkedHashMap<String, String> param = i.next();",
                "+      for(Iterator<String> j = param.keySet().iterator(); j.hasNext(); ) {",
                "+        String name = j.next();",
                "+        buffer.append(name).append(\"=\").append(param.get(name));",
                "+        if (j.hasNext()) {",
                "+          buffer.append(\"&\");",
                "+        }",
                "+      }",
                "+      if (i.hasNext()) {",
                "+        buffer.append(\"&\");",
                "+      }",
                "+    }",
                "+",
                "+    return buffer.toString();",
                "+  }",
                "+",
                "+  public SolrQueryConfig clone() throws CloneNotSupportedException {",
                "+    SolrQueryConfig queryConfig = null;",
                "+",
                "+    try {",
                "+      queryConfig = (SolrQueryConfig) super.clone();",
                "+      queryConfig.setCore(new String(this.core));",
                "+      queryConfig.setCollection(new String(this.collection));",
                "+      queryConfig.setParams(new ArrayList<>(this.params));",
                "+    }catch (Exception e){",
                "+      e.printStackTrace();",
                "+    }",
                "+",
                "+    return queryConfig;",
                "+  }",
                "+}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrScraperConfig.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrScraperConfig.java",
                "new file mode 100644",
                "index 00000000000..3e3a36f6160",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrScraperConfig.java",
                "@@ -0,0 +1,60 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.prometheus.scraper.config;",
                "+",
                "+import net.thisptr.jackson.jq.exception.JsonQueryException;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+",
                "+/**",
                "+ * SolrScraperConfig",
                "+ */",
                "+public class SolrScraperConfig implements Cloneable {",
                "+  private SolrQueryConfig query = new SolrQueryConfig();",
                "+  private List<String> jsonQueries = new ArrayList<>();",
                "+",
                "+  public SolrQueryConfig getQuery() {",
                "+    return this.query;",
                "+  }",
                "+",
                "+  public void setQuery(SolrQueryConfig query) {",
                "+    this.query = query;",
                "+  }",
                "+",
                "+  public List<String> getJsonQueries() {",
                "+    return jsonQueries;",
                "+  }",
                "+",
                "+  public void setJsonQueries(List<String> jsonQueries) throws JsonQueryException {",
                "+    this.jsonQueries = jsonQueries;",
                "+  }",
                "+",
                "+  public SolrScraperConfig clone() throws CloneNotSupportedException {",
                "+    SolrScraperConfig scraperConfig = null;",
                "+",
                "+    try {",
                "+      scraperConfig = (SolrScraperConfig) super.clone();",
                "+      scraperConfig.setQuery(this.query.clone());",
                "+      scraperConfig.setJsonQueries(new ArrayList<>(this.jsonQueries));",
                "+    }catch (Exception e){",
                "+      e.printStackTrace();",
                "+    }",
                "+",
                "+    return scraperConfig;",
                "+  }",
                "+}",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/package-info.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/package-info.java",
                "new file mode 100644",
                "index 00000000000..d5a35888ed8",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/package-info.java",
                "@@ -0,0 +1,21 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+/** ",
                "+ * Solr metrics scraper config.",
                "+ */",
                "+package org.apache.solr.prometheus.scraper.config;",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/package-info.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/package-info.java",
                "new file mode 100644",
                "index 00000000000..85c4eaaaaa4",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/package-info.java",
                "@@ -0,0 +1,21 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+/** ",
                "+ * Solr metrics scraper.",
                "+ */",
                "+package org.apache.solr.prometheus.scraper;",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/overview.html b/solr/contrib/prometheus-exporter/src/java/overview.html",
                "new file mode 100644",
                "index 00000000000..df1c45a6390",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/java/overview.html",
                "@@ -0,0 +1,26 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+<html>",
                "+<body>",
                "+Apache Solr Search Server: Solr Prometheus Exporter contrib",
                "+",
                "+<p>",
                "+This package provides tools for monitoring Solr with Prometheus.",
                "+</p>",
                "+",
                "+</body>",
                "+</html>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/conf/config.yml b/solr/contrib/prometheus-exporter/src/test-files/conf/config.yml",
                "new file mode 100644",
                "index 00000000000..e441f100b5f",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/conf/config.yml",
                "@@ -0,0 +1,1840 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one or more",
                "+# contributor license agreements.  See the NOTICE file distributed with",
                "+# this work for additional information regarding copyright ownership.",
                "+# The ASF licenses this file to You under the Apache License, Version 2.0",
                "+# (the \"License\"); you may not use this file except in compliance with",
                "+# the License.  You may obtain a copy of the License at",
                "+#",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "+#",
                "+",
                "+ping:",
                "+  query:",
                "+    path: /admin/ping",
                "+  jsonQueries:",
                "+    - |-",
                "+      . as $object | $object |",
                "+      (if $object.status == \"OK\" then 1.0 else 0.0 end) as $value |",
                "+      {",
                "+        name         : \"solr_ping\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "+        label_names  : [],",
                "+        label_values : [],",
                "+        value        : $value",
                "+      }",
                "+",
                "+metrics:",
                "+  query:",
                "+    path: /admin/metrics",
                "+    params:",
                "+      - group: 'all'",
                "+      - type: 'all'",
                "+      - prefix: ''",
                "+      - property: ''",
                "+  jsonQueries:",
                "+#    ##############################",
                "+#    # jetty",
                "+#    ##############################",
                "+#    # solr_metrics_jetty_response_total",
                "+#    - |-",
                "+#      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key | startswith(\"org.eclipse.jetty.server.handler.DefaultHandler\")) | select(.key | endswith(\"xx-responses\")) as $object |",
                "+#      $object.key | split(\".\") | last | split(\"-\") | first as $status |",
                "+#      $object.value.count as $value |",
                "+#      {",
                "+#        name         : \"solr_metrics_jetty_response_total\",",
                "+#        type         : \"COUNTER\",",
                "+#        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+#        label_names  : [\"status\"],",
                "+#        label_values : [$status],",
                "+#        value        : $value",
                "+#      }",
                "+#",
                "+#    # solr_metrics_jetty_requests_total",
                "+#    - |-",
                "+#      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key | startswith(\"org.eclipse.jetty.server.handler.DefaultHandler.\")) | select(.key | endswith(\"-requests\")) | select (.value | type == \"object\") as $object |",
                "+#      $object.key | split(\".\") | last | split(\"-\") | first as $method |",
                "+#      $object.value.count as $value |",
                "+#      {",
                "+#        name         : \"solr_metrics_jetty_requests_total\",",
                "+#        type         : \"COUNTER\",",
                "+#        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+#        label_names  : [\"method\"],",
                "+#        label_values : [$method],",
                "+#        value        : $value",
                "+#      }",
                "+#",
                "+#    # solr_metrics_jetty_dispatches_total",
                "+#    - |-",
                "+#      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key == \"org.eclipse.jetty.server.handler.DefaultHandler.dispatches\") as $object |",
                "+#      $object.value.count as $value |",
                "+#      {",
                "+#        name         : \"solr_metrics_jetty_dispatches_total\",",
                "+#        type         : \"COUNTER\",",
                "+#        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+#        label_names  : [],",
                "+#        label_values : [],",
                "+#        value        : $value",
                "+#      }",
                "+",
                "+    ##############################",
                "+    # jvm",
                "+    ##############################",
                "+    # solr_metrics_jvm_buffers",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"buffers.\")) | select(.key | endswith(\".Count\")) as $object |",
                "+      $object.key | split(\".\")[1] as $pool |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_buffers\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"pool\"],",
                "+        label_values : [$pool],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_buffers_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"buffers.\")) | select(.key | (endswith(\".MemoryUsed\") or endswith(\".TotalCapacity\"))) as $object |",
                "+      $object.key | split(\".\")[1] as $pool |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_buffers_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"pool\", \"item\"],",
                "+        label_values : [$pool, $item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_gc_total",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"gc.\")) | select(.key | endswith(\".count\")) as $object |",
                "+      $object.key | split(\".\")[1] as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_gc_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_gc_seconds_total",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"gc.\")) | select(.key | endswith(\".time\")) as $object |",
                "+      $object.key | split(\".\")[1] as $item |",
                "+      ($object.value / 1000) as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_gc_seconds_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_memory_heap_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.heap.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_memory_heap_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_memory_non_heap_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.non-heap.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_memory_non_heap_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_memory_pools_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.pools.\")) | select(.key | endswith(\".usage\") | not) as $object |",
                "+      $object.key | split(\".\")[2] as $space |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_memory_pools_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"space\", \"item\"],",
                "+        label_values : [$space, $item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_memory_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"memory.total.\")) as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_memory_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_os_memory_bytes",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.committedVirtualMemorySize\" or .key == \"os.freePhysicalMemorySize\" or .key == \"os.freeSwapSpaceSize\" or .key ==\"os.totalPhysicalMemorySize\" or .key == \"os.totalSwapSpaceSize\") as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_os_memory_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_os_file_descriptors",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.maxFileDescriptorCount\" or .key == \"os.openFileDescriptorCount\") as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_os_file_descriptors\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_os_cpu_load",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.processCpuLoad\" or .key == \"os.systemCpuLoad\") as $object |",
                "+      $object.key | split(\".\") | last as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_os_cpu_load\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_os_cpu_time_seconds",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.processCpuTime\") as $object |",
                "+      ($object.value / 1000.0) as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_os_cpu_time_seconds\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [\"processCpuTime\"],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_os_load_average",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key == \"os.systemLoadAverage\") as $object |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_os_load_average\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [\"systemLoadAverage\"],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_jvm_threads",
                "+    - |-",
                "+      .metrics[\"solr.jvm\"] | to_entries | .[] | select(.key | startswith(\"threads.\")) | select(.key | endswith(\".count\")) as $object |",
                "+      $object.key | split(\".\")[1] as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jvm_threads\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"item\"],",
                "+        label_values : [$item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_client_errors_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_client_errors_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_errors_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_errors_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_requests_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".requestTimes\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_requests_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_server_errors_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".serverErrors\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_server_errors_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_timeouts_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".timeouts\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_timeouts_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_time_seconds_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\".totalTime\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      ($object.value / 1000) as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_time_seconds_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\"],",
                "+        label_values : [$category, $handler],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_cores",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | startswith(\"CONTAINER.cores.\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_cores\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"item\"],",
                "+        label_values : [$category, $item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_core_root_fs_bytes",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | startswith(\"CONTAINER.fs.coreRoot.\")) | select(.key | endswith(\".totalSpace\") or endswith(\".usableSpace\")) as $object |",
                "+      $object.key | split(\".\") as $key_items |",
                "+      $key_items | length as $label_len |",
                "+      $key_items[0] as $category |",
                "+      $key_items[3] as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_core_root_fs_bytes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"item\"],",
                "+        label_values : [$category, $item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_thread_pool_completed_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".completed\")) as $object |",
                "+      $object.key | split(\".\") as $key_items |",
                "+      $key_items | length as $label_len |",
                "+      $key_items[0] as $category |",
                "+      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "+      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_thread_pool_completed_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\", \"executor\"],",
                "+        label_values : [$category, $handler, $executor],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_thread_pool_running",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".running\")) as $object |",
                "+      $object.key | split(\".\") as $key_items |",
                "+      $key_items | length as $label_len |",
                "+      $key_items[0] as $category |",
                "+      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "+      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_thread_pool_running\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\", \"executor\"],",
                "+        label_values : [$category, $handler, $executor],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_thread_pool_submitted_total",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | contains(\".threadPool.\")) | select(.key | endswith(\".submitted\")) as $object |",
                "+      $object.key | split(\".\") as $key_items |",
                "+      $key_items | length as $label_len |",
                "+      $key_items[0] as $category |",
                "+      (if $label_len >= 5 then $key_items[1] else \"\" end) as $handler |",
                "+      (if $label_len >= 5 then $key_items[3] else $key_items[2] end) as $executor |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_thread_pool_submitted_total\",",
                "+        type         : \"COUNTER\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\", \"executor\"],",
                "+        label_values : [$category, $handler, $executor],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_metrics_node_connections",
                "+    - |-",
                "+      .metrics[\"solr.node\"] | to_entries | .[] | select(.key | endswith(\"Connections\")) as $object |",
                "+      $object.key | split(\".\") as $key_items |",
                "+      $key_items | length as $label_len |",
                "+      $key_items[0] as $category |",
                "+      $key_items[1] as $handler |",
                "+      $key_items[2] as $item |",
                "+      $object.value as $value |",
                "+      {",
                "+        name         : \"solr_metrics_node_connections\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"category\", \"handler\", \"item\"],",
                "+        label_values : [$category, $handler, $item],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    ##############################",
                "+    # core",
                "+    ##############################",
                "+    # solr_metrics_core_client_errors_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".clientErrors\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_client_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_client_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_errors_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".errors\")) | select (.value | type == \"object\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_requests_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".requestTimes\")) | select (.value | type == \"object\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_requests_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_requests_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_server_errors_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".serverErrors\")) | select (.value | type == \"object\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_server_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_server_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_timeouts_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".timeouts\")) | select (.value | type == \"object\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_timeouts_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_timeouts_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_time_seconds_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | endswith(\".totalTime\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      select($handler | startswith(\"/\")) |",
                "+      ($object.value / 1000) as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_time_seconds_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_time_seconds_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_field_cache_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select (.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"CACHE.core.fieldCache\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.value.entries_count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_field_cache_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\"],",
                "+        label_values: [$category, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_field_cache_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_cache",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $type |",
                "+      $object.value | to_entries | .[] | select(.key == \"lookups\" or .key == \"hits\" or .key == \"size\" or .key == \"evictions\" or .key == \"inserts\") as $target |",
                "+      $target.key as $item |",
                "+      $target.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cache\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cache\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_cache_ratio",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $type |",
                "+      $object.value | to_entries | .[] | select(.key == \"hitratio\") as $target |",
                "+      $target.key as $item |",
                "+      $target.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cache_ratio\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cache_ratio\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_warmup_time_seconds",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $type |",
                "+      $object.value | to_entries | .[] | select(.key == \"warmupTime\") as $target |",
                "+      $target.key as $item |",
                "+      ($target.value / 1000) as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_warmup_time_seconds\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_warmup_time_seconds\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_cumulative_cache_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $type |",
                "+      $object.value | to_entries | .[] | select(.key == \"cumulative_lookups\" or .key == \"cumulative_hits\" or .key == \"cumulative_evictions\" or .key == \"cumulative_inserts\") as $target |",
                "+      $target.key as $item |",
                "+      $target.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cumulative_cache_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cumulative_cache_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_cumulative_cache_ratio",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CACHE.searcher.\")) | select (.key | endswith(\"documentCache\") or endswith(\"fieldValueCache\") or endswith(\"filterCache\") or endswith(\"perSegFilter\") or endswith(\"queryResultCache\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $type |",
                "+      $object.value | to_entries | .[] | select(.key == \"cumulative_hitratio\") as $target |",
                "+      $target.key as $item |",
                "+      $target.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cumulative_cache_ratio\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_cumulative_cache_ratio\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"type\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $type, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_fs_bytes",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"CORE.fs.\")) | select (.key | endswith(\".totalSpace\") or endswith(\".usableSpace\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $item |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_fs_bytes\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"item\"],",
                "+        label_values: [$category, $core, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_fs_bytes\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_highlighter_request_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key | startswith(\"HIGHLIGHTER.\")) | select (.key | endswith(\".requests\")) as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $name |",
                "+      $object.key | split(\".\")[2] as $item |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_highlighter_request_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"name\", \"item\"],",
                "+        label_values: [$category, $core, $name, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_highlighter_request_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"name\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $name, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_index_size_bytes",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"INDEX.sizeInBytes\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_index_size_bytes\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\"],",
                "+        label_values: [$category, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_index_size_bytes\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_replication_master",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"REPLICATION./replication.isMaster\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      (if $object.value == true then 1.0 else 0.0 end) as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_replication_master\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_replication_master\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_replication_slave",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"REPLICATION./replication.isSlave\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      (if $object.value == true then 1.0 else 0.0 end) as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_replication_slave\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_replication_slave\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_searcher_documents",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"SEARCHER.searcher.deletedDocs\" or .key == \"SEARCHER.searcher.maxDoc\" or .key == \"SEARCHER.searcher.numDocs\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[2] as $item |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_documents\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"item\"],",
                "+        label_values: [$category, $core, $item],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_searcher_documents\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"core\", \"collection\", \"shard\", \"replica\", \"item\"],",
                "+        label_values: [$category, $core, $collection, $shard, $replica, $item],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_adds",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.adds\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_adds\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_adds\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_auto_commits_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.autoCommits\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_auto_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_auto_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_commits_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.commits\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_adds_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeAdds\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_adds_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_adds_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_deletes_by_id_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeDeletesById\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_id_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_id_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_deletes_by_query_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeDeletesByQuery\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_query_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_query_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_errors_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.cumulativeErrors\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_errors_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_deletes_by_id",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.deletesById\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_id\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_id\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_deletes_by_query",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.deletesByQuery\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_query\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_deletes_by_query\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_pending_docs",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.docsPending\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_pending_docs\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_pending_docs\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_errors",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.errors\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_errors\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_errors\",",
                "+        type: \"GAUGE\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_expunge_deletes_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.expungeDeletes\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_expunge_deletes_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_expunge_deletes_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_merges_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.merges\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_merges_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_merges_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_optimizes_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.optimizes\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_optimizes_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_optimizes_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_rollbacks_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.rollbacks\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_rollbacks_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_rollbacks_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_soft_auto_commits_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.softAutoCommits\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_soft_auto_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_soft_auto_commits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+    # solr_metrics_core_update_handler_splits_total",
                "+    - |-",
                "+      .metrics | to_entries | .[] | select(.key | startswith(\"solr.core.\")) as $parent |",
                "+      $parent.key | split(\".\") as $parent_key_items |",
                "+      $parent_key_items | length as $parent_key_item_len |",
                "+      (if $parent_key_item_len == 3 then $parent_key_items[2] else \"\" end) as $core |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[2] else \"\" end) as $collection |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[3] else \"\" end) as $shard |",
                "+      (if $parent_key_item_len == 5 then $parent_key_items[4] else \"\" end) as $replica |",
                "+      (if $parent_key_item_len == 5 then ($collection + \"_\" + $shard + \"_\" + $replica) else $core end) as $core |",
                "+      $parent.value | to_entries | .[] | select(.key == \"UPDATE.updateHandler.splits\") as $object |",
                "+      $object.key | split(\".\")[0] as $category |",
                "+      $object.key | split(\".\")[1] as $handler |",
                "+      $object.value.count as $value |",
                "+      if $parent_key_item_len == 3 then",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_splits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\"],",
                "+        label_values: [$category, $handler, $core],",
                "+        value: $value",
                "+      }",
                "+      else",
                "+      {",
                "+        name: \"solr_metrics_core_update_handler_splits_total\",",
                "+        type: \"COUNTER\",",
                "+        help: \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names: [\"category\", \"handler\", \"core\", \"collection\", \"shard\", \"replica\"],",
                "+        label_values: [$category, $handler, $core, $collection, $shard, $replica],",
                "+        value: $value",
                "+      }",
                "+      end",
                "+",
                "+",
                "+collections:",
                "+  query:",
                "+    path: /admin/collections",
                "+    params:",
                "+      - action: 'CLUSTERSTATUS'",
                "+  jsonQueries:",
                "+    # solr_collections_live_nodes",
                "+    - |-",
                "+      .cluster.live_nodes | length as $value|",
                "+      {",
                "+        name         : \"solr_collections_live_nodes\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [],",
                "+        label_values : [],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_pull_replicas",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.pullReplicas | tonumber as $value |",
                "+      {",
                "+        name         : \"solr_collections_pull_replicas\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\"],",
                "+        label_values : [$collection],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_nrt_replicas",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.nrtReplicas | tonumber as $value |",
                "+      {",
                "+        name         : \"solr_collections_nrt_replicas\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\"],",
                "+        label_values : [$collection],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_tlog_replicas",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.tlogReplicas | tonumber as $value |",
                "+      {",
                "+        name         : \"solr_collections_tlog_replicas\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\"],",
                "+        label_values : [$collection],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_shard_state",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "+      $shard_obj.key as $shard |",
                "+      (if $shard_obj.value.state == \"active\" then 1.0 else 0.0 end) as $value |",
                "+      {",
                "+        name         : \"solr_collections_shard_state\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\",\"shard\"],",
                "+        label_values : [$collection,$shard],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_replica_state",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "+      $shard_obj.key as $shard |",
                "+      $shard_obj.value.replicas | to_entries | .[] | . as $replica_obj |",
                "+      $replica_obj.key as $replica_name |",
                "+      $replica_obj.value.core as $core |",
                "+      $core[$collection + \"_\" + $shard + \"_\" | length:] as $replica |",
                "+      $replica_obj.value.base_url as $base_url |",
                "+      $replica_obj.value.node_name as $node_name |",
                "+      $replica_obj.value.type as $type |",
                "+      (if $replica_obj.value.state == \"active\" then 1.0 else 0.0 end) as $value |",
                "+      {",
                "+        name         : \"solr_collections_replica_state\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\", \"shard\", \"replica\", \"replica_name\", \"core\", \"base_url\", \"node_name\", \"type\"],",
                "+        label_values : [$collection, $shard, $replica, $replica_name, $core, $base_url, $node_name, $type],",
                "+        value        : $value",
                "+      }",
                "+",
                "+    # solr_collections_shard_leader",
                "+    - |-",
                "+      .cluster.collections | to_entries | .[] | . as $object |",
                "+      $object.key as $collection |",
                "+      $object.value.shards | to_entries | .[] | . as $shard_obj |",
                "+      $shard_obj.key as $shard |",
                "+      $shard_obj.value.replicas | to_entries | .[] | . as $replica_obj |",
                "+      $replica_obj.key as $replica_name |",
                "+      $replica_obj.value.core as $core |",
                "+      $core[$collection + \"_\" + $shard + \"_\" | length:] as $replica |",
                "+      $replica_obj.value.base_url as $base_url |",
                "+      $replica_obj.value.node_name as $node_name |",
                "+      $replica_obj.value.type as $type |",
                "+      (if $replica_obj.value.leader == \"true\" then 1.0 else 0.0 end) as $value |",
                "+      {",
                "+        name         : \"solr_collections_shard_leader\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [\"collection\", \"shard\", \"replica\", \"replica_name\", \"core\", \"base_url\", \"node_name\", \"type\"],",
                "+        label_values : [$collection, $shard, $replica, $replica_name, $core, $base_url, $node_name, $type],",
                "+        value        : $value",
                "+      }",
                "+",
                "+",
                "+queries:",
                "+ - query:",
                "+     collection: collection1",
                "+     path: /select",
                "+     params:",
                "+       - q: \"*:*\"",
                "+       - start: 0",
                "+       - rows: 0",
                "+       - json.facet: |-",
                "+           {",
                "+             category: {",
                "+               type: terms,",
                "+               field: cat",
                "+             }",
                "+           }",
                "+   jsonQueries:",
                "+     # solr_facets_category",
                "+     - |-",
                "+       .facets.category.buckets[] as $object |",
                "+       $object.val as $term |",
                "+       $object.count as $value |",
                "+       {",
                "+         name         : \"solr_facets_category\",",
                "+         type         : \"GAUGE\",",
                "+         help         : \"Category facets\",",
                "+         label_names  : [\"term\"],",
                "+         label_values : [$term],",
                "+         value        : $value",
                "+       }",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/conf/log4j.properties b/solr/contrib/prometheus-exporter/src/test-files/conf/log4j.properties",
                "new file mode 100644",
                "index 00000000000..5dd689960d6",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/conf/log4j.properties",
                "@@ -0,0 +1,22 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one or more",
                "+# contributor license agreements.  See the NOTICE file distributed with",
                "+# this work for additional information regarding copyright ownership.",
                "+# The ASF licenses this file to You under the Apache License, Version 2.0",
                "+# (the \"License\"); you may not use this file except in compliance with",
                "+# the License.  You may obtain a copy of the License at",
                "+#",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "+#",
                "+",
                "+log4j.rootLogger=INFO, stdout",
                "+log4j.appender.stdout=org.apache.log4j.ConsoleAppender",
                "+log4j.appender.stdout.Target=System.out",
                "+log4j.appender.stdout.layout=org.apache.log4j.PatternLayout",
                "+log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd'T'HH:mm:ss.SSS} %-5p [%c] - %m%n",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/managed-schema b/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/managed-schema",
                "new file mode 100644",
                "index 00000000000..caa3317e632",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/managed-schema",
                "@@ -0,0 +1,412 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<!--",
                "+",
                "+ This example schema is the recommended starting point for users.",
                "+ It should be kept correct and concise, usable out-of-the-box.",
                "+",
                "+",
                "+ For more information, on how to customize this file, please see",
                "+ http://lucene.apache.org/solr/guide/documents-fields-and-schema-design.html",
                "+",
                "+ PERFORMANCE NOTE: this schema includes many optional features and should not",
                "+ be used for benchmarking.  To improve performance one could",
                "+  - set stored=\"false\" for all fields possible (esp large fields) when you",
                "+    only need to search on the field but don't need to return the original",
                "+    value.",
                "+  - set indexed=\"false\" if you don't need to search on the field, but only",
                "+    return the field as a result of searching on other indexed fields.",
                "+  - remove all unneeded copyField statements",
                "+  - for best index size and searching performance, set \"index\" to false",
                "+    for all general text fields, use copyField to copy them to the",
                "+    catchall \"text\" field, and use that for searching.",
                "+-->",
                "+",
                "+<schema name=\"collection1-config\" version=\"1.6\">",
                "+    <!-- attribute \"name\" is the name of this schema and is only used for display purposes.",
                "+       version=\"x.y\" is Solr's version number for the schema syntax and",
                "+       semantics.  It should not normally be changed by applications.",
                "+",
                "+       1.0: multiValued attribute did not exist, all fields are multiValued",
                "+            by nature",
                "+       1.1: multiValued attribute introduced, false by default",
                "+       1.2: omitTermFreqAndPositions attribute introduced, true by default",
                "+            except for text fields.",
                "+       1.3: removed optional field compress feature",
                "+       1.4: autoGeneratePhraseQueries attribute introduced to drive QueryParser",
                "+            behavior when a single string produces multiple tokens.  Defaults",
                "+            to off for version >= 1.4",
                "+       1.5: omitNorms defaults to true for primitive field types",
                "+            (int, float, boolean, string...)",
                "+       1.6: useDocValuesAsStored defaults to true.",
                "+    -->",
                "+",
                "+    <!-- Valid attributes for fields:",
                "+     name: mandatory - the name for the field",
                "+     type: mandatory - the name of a field type from the",
                "+       fieldTypes section",
                "+     indexed: true if this field should be indexed (searchable or sortable)",
                "+     stored: true if this field should be retrievable",
                "+     docValues: true if this field should have doc values. Doc Values is",
                "+       recommended (required, if you are using *Point fields) for faceting,",
                "+       grouping, sorting and function queries. Doc Values will make the index",
                "+       faster to load, more NRT-friendly and more memory-efficient.",
                "+       They are currently only supported by StrField, UUIDField, all",
                "+       *PointFields, and depending on the field type, they might require",
                "+       the field to be single-valued, be required or have a default value",
                "+       (check the documentation of the field type you're interested in for",
                "+       more information)",
                "+     multiValued: true if this field may contain multiple values per document",
                "+     omitNorms: (expert) set to true to omit the norms associated with",
                "+       this field (this disables length normalization and index-time",
                "+       boosting for the field, and saves some memory).  Only full-text",
                "+       fields or fields that need an index-time boost need norms.",
                "+       Norms are omitted for primitive (non-analyzed) types by default.",
                "+     termVectors: [false] set to true to store the term vector for a",
                "+       given field.",
                "+       When using MoreLikeThis, fields used for similarity should be",
                "+       stored for best performance.",
                "+     termPositions: Store position information with the term vector.",
                "+       This will increase storage costs.",
                "+     termOffsets: Store offset information with the term vector. This",
                "+       will increase storage costs.",
                "+     required: The field is required.  It will throw an error if the",
                "+       value does not exist",
                "+     default: a value that should be used if no value is specified",
                "+       when adding a document.",
                "+    -->",
                "+",
                "+    <!-- field names should consist of alphanumeric or underscore characters only and",
                "+      not start with a digit.  This is not currently strictly enforced,",
                "+      but other field names will not have first class support from all components",
                "+      and back compatibility is not guaranteed.  Names with both leading and",
                "+      trailing underscores (e.g. _version_) are reserved.",
                "+    -->",
                "+",
                "+    <!-- In this _default configset, only four fields are pre-declared:",
                "+         id, _version_, and _text_ and _root_. All other fields will be type guessed and added via the",
                "+         \"add-unknown-fields-to-the-schema\" update request processor chain declared in solrconfig.xml.",
                "+",
                "+         Note that many dynamic fields are also defined - you can use them to specify a",
                "+         field's type via field naming conventions - see below.",
                "+",
                "+         WARNING: The _text_ catch-all field will significantly increase your index size.",
                "+         If you don't need it, consider removing it and the corresponding copyField directive.",
                "+    -->",
                "+",
                "+    <field name=\"id\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />",
                "+    <!-- docValues are enabled by default for long type so we don't need to index the version field  -->",
                "+    <field name=\"_version_\" type=\"plong\" indexed=\"false\" stored=\"false\"/>",
                "+    <field name=\"_root_\" type=\"string\" indexed=\"true\" stored=\"false\" docValues=\"false\" />",
                "+    <field name=\"_text_\" type=\"text_general\" indexed=\"true\" stored=\"false\" multiValued=\"true\"/>",
                "+",
                "+    <!-- This can be enabled, in case the client does not know what fields may be searched. It isn't enabled by default",
                "+         because it's very expensive to index everything twice. -->",
                "+    <!-- <copyField source=\"*\" dest=\"_text_\"/> -->",
                "+",
                "+    <!-- Dynamic field definitions allow using convention over configuration",
                "+       for fields via the specification of patterns to match field names.",
                "+       EXAMPLE:  name=\"*_i\" will match any field ending in _i (like myid_i, z_i)",
                "+       RESTRICTION: the glob-like pattern in the name attribute must have a \"*\" only at the start or the end.  -->",
                "+",
                "+    <dynamicField name=\"*_i\"  type=\"pint\"    indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_is\" type=\"pints\"    indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_s\"  type=\"string\"  indexed=\"true\"  stored=\"true\" />",
                "+    <dynamicField name=\"*_ss\" type=\"strings\"  indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_l\"  type=\"plong\"   indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_ls\" type=\"plongs\"   indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_txt\" type=\"text_general\" indexed=\"true\" stored=\"true\"/>",
                "+    <dynamicField name=\"*_b\"  type=\"boolean\" indexed=\"true\" stored=\"true\"/>",
                "+    <dynamicField name=\"*_bs\" type=\"booleans\" indexed=\"true\" stored=\"true\"/>",
                "+    <dynamicField name=\"*_f\"  type=\"pfloat\"  indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_fs\" type=\"pfloats\"  indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_d\"  type=\"pdouble\" indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_ds\" type=\"pdoubles\" indexed=\"true\"  stored=\"true\"/>",
                "+",
                "+    <!-- Type used for data-driven schema, to add a string copy for each text field -->",
                "+    <dynamicField name=\"*_str\" type=\"strings\" stored=\"false\" docValues=\"true\" indexed=\"false\" />",
                "+",
                "+    <dynamicField name=\"*_dt\"  type=\"pdate\"    indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_dts\" type=\"pdate\"    indexed=\"true\"  stored=\"true\" multiValued=\"true\"/>",
                "+    <dynamicField name=\"*_p\"  type=\"location\" indexed=\"true\" stored=\"true\"/>",
                "+    <dynamicField name=\"*_srpt\"  type=\"location_rpt\" indexed=\"true\" stored=\"true\"/>",
                "+",
                "+    <!-- payloaded dynamic fields -->",
                "+    <dynamicField name=\"*_dpf\" type=\"delimited_payloads_float\" indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_dpi\" type=\"delimited_payloads_int\" indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_dps\" type=\"delimited_payloads_string\" indexed=\"true\"  stored=\"true\"/>",
                "+",
                "+    <dynamicField name=\"attr_*\" type=\"text_general\" indexed=\"true\" stored=\"true\" multiValued=\"true\"/>",
                "+",
                "+    <!-- Field to use to determine and enforce document uniqueness.",
                "+      Unless this field is marked with required=\"false\", it will be a required field",
                "+    -->",
                "+    <uniqueKey>id</uniqueKey>",
                "+",
                "+    <!-- copyField commands copy one field to another at the time a document",
                "+       is added to the index.  It's used either to index the same field differently,",
                "+       or to add multiple fields to the same field for easier/faster searching.",
                "+",
                "+    <copyField source=\"sourceFieldName\" dest=\"destinationFieldName\"/>",
                "+    -->",
                "+",
                "+    <!-- field type definitions. The \"name\" attribute is",
                "+       just a label to be used by field definitions.  The \"class\"",
                "+       attribute and any other attributes determine the real",
                "+       behavior of the fieldType.",
                "+         Class names starting with \"solr\" refer to java classes in a",
                "+       standard package such as org.apache.solr.analysis",
                "+    -->",
                "+",
                "+    <!-- sortMissingLast and sortMissingFirst attributes are optional attributes are",
                "+         currently supported on types that are sorted internally as strings",
                "+         and on numeric types.",
                "+       This includes \"string\", \"boolean\", \"pint\", \"pfloat\", \"plong\", \"pdate\", \"pdouble\".",
                "+       - If sortMissingLast=\"true\", then a sort on this field will cause documents",
                "+         without the field to come after documents with the field,",
                "+         regardless of the requested sort order (asc or desc).",
                "+       - If sortMissingFirst=\"true\", then a sort on this field will cause documents",
                "+         without the field to come before documents with the field,",
                "+         regardless of the requested sort order.",
                "+       - If sortMissingLast=\"false\" and sortMissingFirst=\"false\" (the default),",
                "+         then default lucene sorting will be used which places docs without the",
                "+         field first in an ascending sort and last in a descending sort.",
                "+    -->",
                "+",
                "+    <!-- The StrField type is not analyzed, but indexed/stored verbatim. -->",
                "+    <fieldType name=\"string\" class=\"solr.StrField\" sortMissingLast=\"true\" docValues=\"true\" />",
                "+    <fieldType name=\"strings\" class=\"solr.StrField\" sortMissingLast=\"true\" multiValued=\"true\" docValues=\"true\" />",
                "+",
                "+    <!-- boolean type: \"true\" or \"false\" -->",
                "+    <fieldType name=\"boolean\" class=\"solr.BoolField\" sortMissingLast=\"true\"/>",
                "+    <fieldType name=\"booleans\" class=\"solr.BoolField\" sortMissingLast=\"true\" multiValued=\"true\"/>",
                "+",
                "+    <!--",
                "+      Numeric field types that index values using KD-trees.",
                "+      Point fields don't support FieldCache, so they must have docValues=\"true\" if needed for sorting, faceting, functions, etc.",
                "+    -->",
                "+    <fieldType name=\"pint\" class=\"solr.IntPointField\" docValues=\"true\"/>",
                "+    <fieldType name=\"pfloat\" class=\"solr.FloatPointField\" docValues=\"true\"/>",
                "+    <fieldType name=\"plong\" class=\"solr.LongPointField\" docValues=\"true\"/>",
                "+    <fieldType name=\"pdouble\" class=\"solr.DoublePointField\" docValues=\"true\"/>",
                "+",
                "+    <fieldType name=\"pints\" class=\"solr.IntPointField\" docValues=\"true\" multiValued=\"true\"/>",
                "+    <fieldType name=\"pfloats\" class=\"solr.FloatPointField\" docValues=\"true\" multiValued=\"true\"/>",
                "+    <fieldType name=\"plongs\" class=\"solr.LongPointField\" docValues=\"true\" multiValued=\"true\"/>",
                "+    <fieldType name=\"pdoubles\" class=\"solr.DoublePointField\" docValues=\"true\" multiValued=\"true\"/>",
                "+",
                "+    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and",
                "+         is a more restricted form of the canonical representation of dateTime",
                "+         http://www.w3.org/TR/xmlschema-2/#dateTime",
                "+         The trailing \"Z\" designates UTC time and is mandatory.",
                "+         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z",
                "+         All other components are mandatory.",
                "+",
                "+         Expressions can also be used to denote calculations that should be",
                "+         performed relative to \"NOW\" to determine the value, ie...",
                "+",
                "+               NOW/HOUR",
                "+                  ... Round to the start of the current hour",
                "+               NOW-1DAY",
                "+                  ... Exactly 1 day prior to now",
                "+               NOW/DAY+6MONTHS+3DAYS",
                "+                  ... 6 months and 3 days in the future from the start of",
                "+                      the current day",
                "+",
                "+      -->",
                "+    <!-- KD-tree versions of date fields -->",
                "+    <fieldType name=\"pdate\" class=\"solr.DatePointField\" docValues=\"true\"/>",
                "+    <fieldType name=\"pdates\" class=\"solr.DatePointField\" docValues=\"true\" multiValued=\"true\"/>",
                "+",
                "+    <!--Binary data type. The data should be sent/retrieved in as Base64 encoded Strings -->",
                "+    <fieldType name=\"binary\" class=\"solr.BinaryField\"/>",
                "+",
                "+    <!-- solr.TextField allows the specification of custom text analyzers",
                "+         specified as a tokenizer and a list of token filters. Different",
                "+         analyzers may be specified for indexing and querying.",
                "+",
                "+         The optional positionIncrementGap puts space between multiple fields of",
                "+         this type on the same document, with the purpose of preventing false phrase",
                "+         matching across fields.",
                "+",
                "+         For more info on customizing your analyzer chain, please see",
                "+         http://lucene.apache.org/solr/guide/understanding-analyzers-tokenizers-and-filters.html#understanding-analyzers-tokenizers-and-filters",
                "+     -->",
                "+",
                "+    <!-- One can also specify an existing Analyzer class that has a",
                "+         default constructor via the class attribute on the analyzer element.",
                "+         Example:",
                "+    <fieldType name=\"text_greek\" class=\"solr.TextField\">",
                "+      <analyzer class=\"org.apache.lucene.analysis.el.GreekAnalyzer\"/>",
                "+    </fieldType>",
                "+    -->",
                "+",
                "+    <!-- A text field that only splits on whitespace for exact matching of words -->",
                "+    <dynamicField name=\"*_ws\" type=\"text_ws\"  indexed=\"true\"  stored=\"true\"/>",
                "+    <fieldType name=\"text_ws\" class=\"solr.TextField\" positionIncrementGap=\"100\">",
                "+      <analyzer>",
                "+        <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>",
                "+      </analyzer>",
                "+    </fieldType>",
                "+",
                "+    <!-- A general text field that has reasonable, generic",
                "+         cross-language defaults: it tokenizes with StandardTokenizer,",
                "+\t       removes stop words from case-insensitive \"stopwords.txt\"",
                "+\t       (empty by default), and down cases.  At query time only, it",
                "+\t       also applies synonyms.",
                "+\t  -->",
                "+    <fieldType name=\"text_general\" class=\"solr.TextField\" positionIncrementGap=\"100\" multiValued=\"true\">",
                "+      <analyzer type=\"index\">",
                "+        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "+        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "+        <!-- in this example, we will only use synonyms at query time",
                "+        <filter class=\"solr.SynonymGraphFilterFactory\" synonyms=\"index_synonyms.txt\" ignoreCase=\"true\" expand=\"false\"/>",
                "+        <filter class=\"solr.FlattenGraphFilterFactory\"/>",
                "+        -->",
                "+        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "+      </analyzer>",
                "+      <analyzer type=\"query\">",
                "+        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "+        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "+        <filter class=\"solr.SynonymGraphFilterFactory\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/>",
                "+        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "+      </analyzer>",
                "+    </fieldType>",
                "+",
                "+    <!-- Just like text_general except it reverses the characters of",
                "+\t       each token, to enable more efficient leading wildcard queries.",
                "+    -->",
                "+    <dynamicField name=\"*_txt_rev\" type=\"text_general_rev\"  indexed=\"true\"  stored=\"true\"/>",
                "+    <fieldType name=\"text_general_rev\" class=\"solr.TextField\" positionIncrementGap=\"100\">",
                "+      <analyzer type=\"index\">",
                "+        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "+        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "+        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "+        <filter class=\"solr.ReversedWildcardFilterFactory\" withOriginal=\"true\"",
                "+                maxPosAsterisk=\"3\" maxPosQuestion=\"2\" maxFractionAsterisk=\"0.33\"/>",
                "+      </analyzer>",
                "+      <analyzer type=\"query\">",
                "+        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "+        <filter class=\"solr.SynonymGraphFilterFactory\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/>",
                "+        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "+        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "+      </analyzer>",
                "+    </fieldType>",
                "+",
                "+    <dynamicField name=\"*_phon_en\" type=\"phonetic_en\"  indexed=\"true\"  stored=\"true\"/>",
                "+    <fieldType name=\"phonetic_en\" stored=\"false\" indexed=\"true\" class=\"solr.TextField\" >",
                "+      <analyzer>",
                "+        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "+        <filter class=\"solr.DoubleMetaphoneFilterFactory\" inject=\"false\"/>",
                "+      </analyzer>",
                "+    </fieldType>",
                "+",
                "+    <!-- lowercases the entire field value, keeping it as a single token.  -->",
                "+    <dynamicField name=\"*_s_lower\" type=\"lowercase\"  indexed=\"true\"  stored=\"true\"/>",
                "+    <fieldType name=\"lowercase\" class=\"solr.TextField\" positionIncrementGap=\"100\">",
                "+      <analyzer>",
                "+        <tokenizer class=\"solr.KeywordTokenizerFactory\"/>",
                "+        <filter class=\"solr.LowerCaseFilterFactory\" />",
                "+      </analyzer>",
                "+    </fieldType>",
                "+",
                "+    <!--",
                "+      Example of using PathHierarchyTokenizerFactory at index time, so",
                "+      queries for paths match documents at that path, or in descendent paths",
                "+    -->",
                "+    <dynamicField name=\"*_descendent_path\" type=\"descendent_path\"  indexed=\"true\"  stored=\"true\"/>",
                "+    <fieldType name=\"descendent_path\" class=\"solr.TextField\">",
                "+      <analyzer type=\"index\">",
                "+        <tokenizer class=\"solr.PathHierarchyTokenizerFactory\" delimiter=\"/\" />",
                "+      </analyzer>",
                "+      <analyzer type=\"query\">",
                "+        <tokenizer class=\"solr.KeywordTokenizerFactory\" />",
                "+      </analyzer>",
                "+    </fieldType>",
                "+",
                "+    <!--",
                "+      Example of using PathHierarchyTokenizerFactory at query time, so",
                "+      queries for paths match documents at that path, or in ancestor paths",
                "+    -->",
                "+    <dynamicField name=\"*_ancestor_path\" type=\"ancestor_path\"  indexed=\"true\"  stored=\"true\"/>",
                "+    <fieldType name=\"ancestor_path\" class=\"solr.TextField\">",
                "+      <analyzer type=\"index\">",
                "+        <tokenizer class=\"solr.KeywordTokenizerFactory\" />",
                "+      </analyzer>",
                "+      <analyzer type=\"query\">",
                "+        <tokenizer class=\"solr.PathHierarchyTokenizerFactory\" delimiter=\"/\" />",
                "+      </analyzer>",
                "+    </fieldType>",
                "+",
                "+    <!-- This point type indexes the coordinates as separate fields (subFields)",
                "+      If subFieldType is defined, it references a type, and a dynamic field",
                "+      definition is created matching *___<typename>.  Alternately, if",
                "+      subFieldSuffix is defined, that is used to create the subFields.",
                "+      Example: if subFieldType=\"double\", then the coordinates would be",
                "+        indexed in fields myloc_0___double,myloc_1___double.",
                "+      Example: if subFieldSuffix=\"_d\" then the coordinates would be indexed",
                "+        in fields myloc_0_d,myloc_1_d",
                "+      The subFields are an implementation detail of the fieldType, and end",
                "+      users normally should not need to know about them.",
                "+     -->",
                "+    <dynamicField name=\"*_point\" type=\"point\"  indexed=\"true\"  stored=\"true\"/>",
                "+    <fieldType name=\"point\" class=\"solr.PointType\" dimension=\"2\" subFieldSuffix=\"_d\"/>",
                "+",
                "+    <!-- A specialized field for geospatial search filters and distance sorting. -->",
                "+    <fieldType name=\"location\" class=\"solr.LatLonPointSpatialField\" docValues=\"true\"/>",
                "+",
                "+    <!-- A geospatial field type that supports multiValued and polygon shapes.",
                "+      For more information about this and other spatial fields see:",
                "+      http://lucene.apache.org/solr/guide/spatial-search.html",
                "+    -->",
                "+    <fieldType name=\"location_rpt\" class=\"solr.SpatialRecursivePrefixTreeFieldType\"",
                "+               geo=\"true\" distErrPct=\"0.025\" maxDistErr=\"0.001\" distanceUnits=\"kilometers\" />",
                "+",
                "+    <!-- Payloaded field types -->",
                "+    <fieldType name=\"delimited_payloads_float\" stored=\"false\" indexed=\"true\" class=\"solr.TextField\">",
                "+      <analyzer>",
                "+        <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>",
                "+        <filter class=\"solr.DelimitedPayloadTokenFilterFactory\" encoder=\"float\"/>",
                "+      </analyzer>",
                "+    </fieldType>",
                "+    <fieldType name=\"delimited_payloads_int\" stored=\"false\" indexed=\"true\" class=\"solr.TextField\">",
                "+      <analyzer>",
                "+        <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>",
                "+        <filter class=\"solr.DelimitedPayloadTokenFilterFactory\" encoder=\"integer\"/>",
                "+      </analyzer>",
                "+    </fieldType>",
                "+    <fieldType name=\"delimited_payloads_string\" stored=\"false\" indexed=\"true\" class=\"solr.TextField\">",
                "+      <analyzer>",
                "+        <tokenizer class=\"solr.WhitespaceTokenizerFactory\"/>",
                "+        <filter class=\"solr.DelimitedPayloadTokenFilterFactory\" encoder=\"identity\"/>",
                "+      </analyzer>",
                "+    </fieldType>",
                "+",
                "+    <!-- Similarity is the scoring routine for each document vs. a query.",
                "+       A custom Similarity or SimilarityFactory may be specified here, but",
                "+       the default is fine for most applications.",
                "+       For more info: http://lucene.apache.org/solr/guide/other-schema-elements.html#OtherSchemaElements-Similarity",
                "+    -->",
                "+    <!--",
                "+     <similarity class=\"com.example.solr.CustomSimilarityFactory\">",
                "+       <str name=\"paramkey\">param value</str>",
                "+     </similarity>",
                "+    -->",
                "+",
                "+</schema>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/solrconfig.xml b/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/solrconfig.xml",
                "new file mode 100644",
                "index 00000000000..72c54304f24",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/solrconfig.xml",
                "@@ -0,0 +1,232 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<config>",
                "+",
                "+  <luceneMatchVersion>${tests.luceneMatchVersion:LATEST}</luceneMatchVersion>",
                "+",
                "+  <dataDir>${solr.data.dir:}</dataDir>",
                "+",
                "+  <directoryFactory name=\"DirectoryFactory\"",
                "+                    class=\"${solr.directoryFactory:solr.NRTCachingDirectoryFactory}\"/>",
                "+",
                "+  <codecFactory class=\"solr.SchemaCodecFactory\"/>",
                "+",
                "+  <indexConfig>",
                "+    <lockType>${solr.lock.type:native}</lockType>",
                "+  </indexConfig>",
                "+",
                "+  <jmx />",
                "+",
                "+  <updateHandler class=\"solr.DirectUpdateHandler2\">",
                "+",
                "+    <updateLog>",
                "+      <str name=\"dir\">${solr.ulog.dir:}</str>",
                "+      <int name=\"numVersionBuckets\">${solr.ulog.numVersionBuckets:65536}</int>",
                "+    </updateLog>",
                "+",
                "+    <autoCommit>",
                "+      <maxTime>${solr.autoCommit.maxTime:15000}</maxTime>",
                "+      <openSearcher>false</openSearcher>",
                "+    </autoCommit>",
                "+",
                "+    <autoSoftCommit>",
                "+      <maxTime>${solr.autoSoftCommit.maxTime:-1}</maxTime>",
                "+    </autoSoftCommit>",
                "+",
                "+  </updateHandler>",
                "+",
                "+  <query>",
                "+",
                "+    <maxBooleanClauses>1024</maxBooleanClauses>",
                "+",
                "+    <filterCache class=\"solr.FastLRUCache\"",
                "+                 size=\"512\"",
                "+                 initialSize=\"512\"",
                "+                 autowarmCount=\"0\"/>",
                "+",
                "+    <queryResultCache class=\"solr.LRUCache\"",
                "+                      size=\"512\"",
                "+                      initialSize=\"512\"",
                "+                      autowarmCount=\"0\"/>",
                "+",
                "+    <documentCache class=\"solr.LRUCache\"",
                "+                   size=\"512\"",
                "+                   initialSize=\"512\"",
                "+                   autowarmCount=\"0\"/>",
                "+",
                "+    <cache name=\"perSegFilter\"",
                "+           class=\"solr.search.LRUCache\"",
                "+           size=\"10\"",
                "+           initialSize=\"0\"",
                "+           autowarmCount=\"10\"",
                "+           regenerator=\"solr.NoOpRegenerator\" />",
                "+",
                "+    <enableLazyFieldLoading>true</enableLazyFieldLoading>",
                "+",
                "+    <queryResultWindowSize>20</queryResultWindowSize>",
                "+",
                "+    <queryResultMaxDocsCached>200</queryResultMaxDocsCached>",
                "+",
                "+    <listener event=\"newSearcher\" class=\"solr.QuerySenderListener\">",
                "+      <arr name=\"queries\">",
                "+      </arr>",
                "+    </listener>",
                "+    <listener event=\"firstSearcher\" class=\"solr.QuerySenderListener\">",
                "+      <arr name=\"queries\">",
                "+      </arr>",
                "+    </listener>",
                "+",
                "+    <useColdSearcher>false</useColdSearcher>",
                "+",
                "+  </query>",
                "+",
                "+  <requestDispatcher>",
                "+",
                "+    <httpCaching never304=\"true\" />",
                "+",
                "+  </requestDispatcher>",
                "+",
                "+  <!-- Request Handlers",
                "+",
                "+       http://wiki.apache.org/solr/SolrRequestHandler",
                "+",
                "+       Incoming queries will be dispatched to a specific handler by name",
                "+       based on the path specified in the request.",
                "+",
                "+       If a Request Handler is declared with startup=\"lazy\", then it will",
                "+       not be initialized until the first request that uses it.",
                "+",
                "+    -->",
                "+  <!-- SearchHandler",
                "+",
                "+       http://wiki.apache.org/solr/SearchHandler",
                "+",
                "+       For processing Search Queries, the primary Request Handler",
                "+       provided with Solr is \"SearchHandler\" It delegates to a sequent",
                "+       of SearchComponents (see below) and supports distributed",
                "+       queries across multiple shards",
                "+    -->",
                "+  <requestHandler name=\"/select\" class=\"solr.SearchHandler\">",
                "+    <lst name=\"defaults\">",
                "+      <str name=\"echoParams\">explicit</str>",
                "+      <int name=\"rows\">10</int>",
                "+    </lst>",
                "+  </requestHandler>",
                "+",
                "+  <!-- Update Processors",
                "+",
                "+       Chains of Update Processor Factories for dealing with Update",
                "+       Requests can be declared, and then used by name in Update",
                "+       Request Processors",
                "+",
                "+       http://wiki.apache.org/solr/UpdateRequestProcessor",
                "+",
                "+    -->",
                "+",
                "+  <!-- Add unknown fields to the schema",
                "+",
                "+       Field type guessing update processors that will",
                "+       attempt to parse string-typed field values as Booleans, Longs,",
                "+       Doubles, or Dates, and then add schema fields with the guessed",
                "+       field types. Text content will be indexed as \"text_general\" as",
                "+       well as a copy to a plain string version in *_str.",
                "+",
                "+       These require that the schema is both managed and mutable, by",
                "+       declaring schemaFactory as ManagedIndexSchemaFactory, with",
                "+       mutable specified as true.",
                "+",
                "+       See http://wiki.apache.org/solr/GuessingFieldTypes",
                "+    -->",
                "+  <updateProcessor class=\"solr.UUIDUpdateProcessorFactory\" name=\"uuid\"/>",
                "+  <updateProcessor class=\"solr.RemoveBlankFieldUpdateProcessorFactory\" name=\"remove-blank\"/>",
                "+  <updateProcessor class=\"solr.FieldNameMutatingUpdateProcessorFactory\" name=\"field-name-mutating\">",
                "+    <str name=\"pattern\">[^\\w-\\.]</str>",
                "+    <str name=\"replacement\">_</str>",
                "+  </updateProcessor>",
                "+  <updateProcessor class=\"solr.ParseBooleanFieldUpdateProcessorFactory\" name=\"parse-boolean\"/>",
                "+  <updateProcessor class=\"solr.ParseLongFieldUpdateProcessorFactory\" name=\"parse-long\"/>",
                "+  <updateProcessor class=\"solr.ParseDoubleFieldUpdateProcessorFactory\" name=\"parse-double\"/>",
                "+  <updateProcessor class=\"solr.ParseDateFieldUpdateProcessorFactory\" name=\"parse-date\">",
                "+    <arr name=\"format\">",
                "+      <str>yyyy-MM-dd'T'HH:mm:ss.SSSZ</str>",
                "+      <str>yyyy-MM-dd'T'HH:mm:ss,SSSZ</str>",
                "+      <str>yyyy-MM-dd'T'HH:mm:ss.SSS</str>",
                "+      <str>yyyy-MM-dd'T'HH:mm:ss,SSS</str>",
                "+      <str>yyyy-MM-dd'T'HH:mm:ssZ</str>",
                "+      <str>yyyy-MM-dd'T'HH:mm:ss</str>",
                "+      <str>yyyy-MM-dd'T'HH:mmZ</str>",
                "+      <str>yyyy-MM-dd'T'HH:mm</str>",
                "+      <str>yyyy-MM-dd HH:mm:ss.SSSZ</str>",
                "+      <str>yyyy-MM-dd HH:mm:ss,SSSZ</str>",
                "+      <str>yyyy-MM-dd HH:mm:ss.SSS</str>",
                "+      <str>yyyy-MM-dd HH:mm:ss,SSS</str>",
                "+      <str>yyyy-MM-dd HH:mm:ssZ</str>",
                "+      <str>yyyy-MM-dd HH:mm:ss</str>",
                "+      <str>yyyy-MM-dd HH:mmZ</str>",
                "+      <str>yyyy-MM-dd HH:mm</str>",
                "+      <str>yyyy-MM-dd</str>",
                "+    </arr>",
                "+  </updateProcessor>",
                "+  <updateProcessor class=\"solr.AddSchemaFieldsUpdateProcessorFactory\" name=\"add-schema-fields\">",
                "+    <lst name=\"typeMapping\">",
                "+      <str name=\"valueClass\">java.lang.String</str>",
                "+      <str name=\"fieldType\">text_general</str>",
                "+      <lst name=\"copyField\">",
                "+        <str name=\"dest\">*_str</str>",
                "+        <int name=\"maxChars\">256</int>",
                "+      </lst>",
                "+      <!-- Use as default mapping instead of defaultFieldType -->",
                "+      <bool name=\"default\">true</bool>",
                "+    </lst>",
                "+    <lst name=\"typeMapping\">",
                "+      <str name=\"valueClass\">java.lang.Boolean</str>",
                "+      <str name=\"fieldType\">booleans</str>",
                "+    </lst>",
                "+    <lst name=\"typeMapping\">",
                "+      <str name=\"valueClass\">java.util.Date</str>",
                "+      <str name=\"fieldType\">pdates</str>",
                "+    </lst>",
                "+    <lst name=\"typeMapping\">",
                "+      <str name=\"valueClass\">java.lang.Long</str>",
                "+      <str name=\"valueClass\">java.lang.Integer</str>",
                "+      <str name=\"fieldType\">plongs</str>",
                "+    </lst>",
                "+    <lst name=\"typeMapping\">",
                "+      <str name=\"valueClass\">java.lang.Number</str>",
                "+      <str name=\"fieldType\">pdoubles</str>",
                "+    </lst>",
                "+  </updateProcessor>",
                "+",
                "+  <!-- The update.autoCreateFields property can be turned to false to disable schemaless mode -->",
                "+  <updateRequestProcessorChain name=\"add-unknown-fields-to-the-schema\" default=\"${update.autoCreateFields:true}\"",
                "+           processor=\"uuid,remove-blank,field-name-mutating,parse-boolean,parse-long,parse-double,parse-date,add-schema-fields\">",
                "+    <processor class=\"solr.LogUpdateProcessorFactory\"/>",
                "+    <processor class=\"solr.DistributedUpdateProcessorFactory\"/>",
                "+    <processor class=\"solr.RunUpdateProcessorFactory\"/>",
                "+  </updateRequestProcessorChain>",
                "+",
                "+  <queryResponseWriter name=\"json\" class=\"solr.JSONResponseWriter\">",
                "+    <!-- For the purposes of the tutorial, JSON responses are written as",
                "+     plain text so that they are easy to read in *any* browser.",
                "+     If you expect a MIME type of \"application/json\" just remove this override.",
                "+    -->",
                "+    <str name=\"content-type\">text/plain; charset=UTF-8</str>",
                "+  </queryResponseWriter>",
                "+",
                "+</config>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/gb18030-example.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/gb18030-example.xml",
                "new file mode 100644",
                "index 00000000000..01743d3675c",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/gb18030-example.xml",
                "@@ -0,0 +1,32 @@",
                "+<?xml version=\"1.0\" encoding=\"GB18030\"?>",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add>",
                "+  <doc>",
                "+    <field name=\"id\">GB18030TEST</field>",
                "+    <field name=\"name\">Test with some GB18030 encoded characters</field>",
                "+    <field name=\"features\">No accents here</field>",
                "+    <field name=\"features\">\u00d5\u00e2\u00ca\u00c7\u00d2\u00bb\u00b8\u00f6\u00b9\u00a6\u00c4\u00dc</field>",
                "+    <field name=\"features\">This is a feature (translated)</field>",
                "+    <field name=\"features\">\u00d5\u00e2\u00b7\u00dd\u00ce\u00c4\u00bc\u00fe\u00ca\u00c7\u00ba\u00dc\u00d3\u00d0\u00b9\u00e2\u00d4\u00f3</field>",
                "+    <field name=\"features\">This document is very shiny (translated)</field>",
                "+    <field name=\"price\">0.0</field>",
                "+    <field name=\"inStock\">true</field>",
                "+  </doc>",
                "+</add>",
                "+",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/hd.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/hd.xml",
                "new file mode 100644",
                "index 00000000000..9cf7d1b05d8",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/hd.xml",
                "@@ -0,0 +1,56 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add>",
                "+<doc>",
                "+  <field name=\"id\">SP2514N</field>",
                "+  <field name=\"name\">Samsung SpinPoint P120 SP2514N - hard drive - 250 GB - ATA-133</field>",
                "+  <field name=\"manu\">Samsung Electronics Co. Ltd.</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">samsung</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">hard drive</field>",
                "+  <field name=\"features\">7200RPM, 8MB cache, IDE Ultra ATA-133</field>",
                "+  <field name=\"features\">NoiseGuard, SilentSeek technology, Fluid Dynamic Bearing (FDB) motor</field>",
                "+  <field name=\"price\">92.0</field>",
                "+  <field name=\"popularity\">6</field>",
                "+  <field name=\"inStock\">true</field>",
                "+  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "+  <!-- Near Oklahoma city -->",
                "+  <field name=\"store\">35.0752,-97.032</field>",
                "+</doc>",
                "+",
                "+<doc>",
                "+  <field name=\"id\">6H500F0</field>",
                "+  <field name=\"name\">Maxtor DiamondMax 11 - hard drive - 500 GB - SATA-300</field>",
                "+  <field name=\"manu\">Maxtor Corp.</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">maxtor</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">hard drive</field>",
                "+  <field name=\"features\">SATA 3.0Gb/s, NCQ</field>",
                "+  <field name=\"features\">8.5ms seek</field>",
                "+  <field name=\"features\">16MB cache</field>",
                "+  <field name=\"price\">350.0</field>",
                "+  <field name=\"popularity\">6</field>",
                "+  <field name=\"inStock\">true</field>",
                "+  <!-- Buffalo store -->",
                "+  <field name=\"store\">45.17614,-93.87341</field>",
                "+  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "+</doc>",
                "+</add>",
                "+",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_other.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_other.xml",
                "new file mode 100644",
                "index 00000000000..3de32f3b71c",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_other.xml",
                "@@ -0,0 +1,60 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add>",
                "+",
                "+<doc>",
                "+  <field name=\"id\">F8V7067-APL-KIT</field>",
                "+  <field name=\"name\">Belkin Mobile Power Cord for iPod w/ Dock</field>",
                "+  <field name=\"manu\">Belkin</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">belkin</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">connector</field>",
                "+  <field name=\"features\">car power adapter, white</field>",
                "+  <field name=\"weight\">4.0</field>",
                "+  <field name=\"price\">19.95</field>",
                "+  <field name=\"popularity\">1</field>",
                "+  <field name=\"inStock\">false</field>",
                "+  <!-- Buffalo store -->",
                "+  <field name=\"store\">45.18014,-93.87741</field>",
                "+  <field name=\"manufacturedate_dt\">2005-08-01T16:30:25Z</field>",
                "+</doc>",
                "+",
                "+<doc>",
                "+  <field name=\"id\">IW-02</field>",
                "+  <field name=\"name\">iPod &amp; iPod Mini USB 2.0 Cable</field>",
                "+  <field name=\"manu\">Belkin</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">belkin</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">connector</field>",
                "+  <field name=\"features\">car power adapter for iPod, white</field>",
                "+  <field name=\"weight\">2.0</field>",
                "+  <field name=\"price\">11.50</field>",
                "+  <field name=\"popularity\">1</field>",
                "+  <field name=\"inStock\">false</field>",
                "+  <!-- San Francisco store -->",
                "+  <field name=\"store\">37.7752,-122.4232</field>",
                "+  <field name=\"manufacturedate_dt\">2006-02-14T23:55:59Z</field>",
                "+</doc>",
                "+",
                "+",
                "+</add>",
                "+",
                "+",
                "+",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_video.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_video.xml",
                "new file mode 100644",
                "index 00000000000..1ca5f6f5c21",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_video.xml",
                "@@ -0,0 +1,40 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add><doc>",
                "+  <field name=\"id\">MA147LL/A</field>",
                "+  <field name=\"name\">Apple 60 GB iPod with Video Playback Black</field>",
                "+  <field name=\"manu\">Apple Computer Inc.</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">apple</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">music</field>",
                "+  <field name=\"features\">iTunes, Podcasts, Audiobooks</field>",
                "+  <field name=\"features\">Stores up to 15,000 songs, 25,000 photos, or 150 hours of video</field>",
                "+  <field name=\"features\">2.5-inch, 320x240 color TFT LCD display with LED backlight</field>",
                "+  <field name=\"features\">Up to 20 hours of battery life</field>",
                "+  <field name=\"features\">Plays AAC, MP3, WAV, AIFF, Audible, Apple Lossless, H.264 video</field>",
                "+  <field name=\"features\">Notes, Calendar, Phone book, Hold button, Date display, Photo wallet, Built-in games, JPEG photo playback, Upgradeable firmware, USB 2.0 compatibility, Playback speed control, Rechargeable capability, Battery level indication</field>",
                "+  <field name=\"includes\">earbud headphones, USB cable</field>",
                "+  <field name=\"weight\">5.5</field>",
                "+  <field name=\"price\">399.00</field>",
                "+  <field name=\"popularity\">10</field>",
                "+  <field name=\"inStock\">true</field>",
                "+  <!-- Dodge City store -->",
                "+  <field name=\"store\">37.7752,-100.0232</field>",
                "+  <field name=\"manufacturedate_dt\">2005-10-12T08:00:00Z</field>",
                "+</doc></add>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/manufacturers.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/manufacturers.xml",
                "new file mode 100644",
                "index 00000000000..e3121d5db1f",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/manufacturers.xml",
                "@@ -0,0 +1,75 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add>",
                "+  <doc>",
                "+    <field name=\"id\">adata</field>",
                "+    <field name=\"compName_s\">A-Data Technology</field>",
                "+    <field name=\"address_s\">46221 Landing Parkway Fremont, CA 94538</field>",
                "+  </doc>",
                "+  <doc>",
                "+    <field name=\"id\">apple</field>",
                "+    <field name=\"compName_s\">Apple</field>",
                "+    <field name=\"address_s\">1 Infinite Way, Cupertino CA</field>",
                "+  </doc>",
                "+  <doc>",
                "+    <field name=\"id\">asus</field>",
                "+    <field name=\"compName_s\">ASUS Computer</field>",
                "+    <field name=\"address_s\">800 Corporate Way Fremont, CA 94539</field>",
                "+  </doc>",
                "+  <doc>",
                "+    <field name=\"id\">ati</field>",
                "+    <field name=\"compName_s\">ATI Technologies</field>",
                "+    <field name=\"address_s\">33 Commerce Valley Drive East Thornhill, ON L3T 7N6 Canada</field>",
                "+  </doc>",
                "+  <doc>",
                "+    <field name=\"id\">belkin</field>",
                "+    <field name=\"compName_s\">Belkin</field>",
                "+    <field name=\"address_s\">12045 E. Waterfront Drive Playa Vista, CA 90094</field>",
                "+  </doc>",
                "+  <doc>",
                "+    <field name=\"id\">canon</field>",
                "+    <field name=\"compName_s\">Canon, Inc.</field>",
                "+    <field name=\"address_s\">One Canon Plaza Lake Success, NY 11042</field>",
                "+  </doc>",
                "+  <doc>",
                "+    <field name=\"id\">corsair</field>",
                "+    <field name=\"compName_s\">Corsair Microsystems</field>",
                "+    <field name=\"address_s\">46221 Landing Parkway Fremont, CA 94538</field>",
                "+  </doc>",
                "+  <doc>",
                "+    <field name=\"id\">dell</field>",
                "+    <field name=\"compName_s\">Dell, Inc.</field>",
                "+    <field name=\"address_s\">One Dell Way Round Rock, Texas 78682</field>",
                "+  </doc>",
                "+  <doc>",
                "+    <field name=\"id\">maxtor</field>",
                "+    <field name=\"compName_s\">Maxtor Corporation</field>",
                "+    <field name=\"address_s\">920 Disc Drive Scotts Valley, CA 95066</field>",
                "+  </doc>",
                "+  <doc>",
                "+    <field name=\"id\">samsung</field>",
                "+    <field name=\"compName_s\">Samsung Electronics Co. Ltd.</field>",
                "+    <field name=\"address_s\">105 Challenger Rd. Ridgefield Park, NJ 07660-0511</field>",
                "+  </doc>",
                "+  <doc>",
                "+    <field name=\"id\">viewsonic</field>",
                "+    <field name=\"compName_s\">ViewSonic Corp</field>",
                "+    <field name=\"address_s\">381 Brea Canyon Road Walnut, CA 91789-0708</field>",
                "+  </doc>",
                "+</add>",
                "+",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mem.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mem.xml",
                "new file mode 100644",
                "index 00000000000..48af5222fe4",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mem.xml",
                "@@ -0,0 +1,77 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add>",
                "+<doc>",
                "+  <field name=\"id\">TWINX2048-3200PRO</field>",
                "+  <field name=\"name\">CORSAIR  XMS 2GB (2 x 1GB) 184-Pin DDR SDRAM Unbuffered DDR 400 (PC 3200) Dual Channel Kit System Memory - Retail</field>",
                "+  <field name=\"manu\">Corsair Microsystems Inc.</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">corsair</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">memory</field>",
                "+  <field name=\"features\">CAS latency 2,  2-3-3-6 timing, 2.75v, unbuffered, heat-spreader</field>",
                "+  <field name=\"price\">185.00</field>",
                "+  <field name=\"popularity\">5</field>",
                "+  <field name=\"inStock\">true</field>",
                "+  <!-- San Francisco store -->",
                "+  <field name=\"store\">37.7752,-122.4232</field>",
                "+  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "+",
                "+  <!-- a field for testing payload tagged text via DelimitedPayloadTokenFilter -->",
                "+  <field name=\"payloads\">electronics|6.0 memory|3.0</field>",
                "+</doc>",
                "+",
                "+<doc>",
                "+  <field name=\"id\">VS1GB400C3</field>",
                "+  <field name=\"name\">CORSAIR ValueSelect 1GB 184-Pin DDR SDRAM Unbuffered DDR 400 (PC 3200) System Memory - Retail</field>",
                "+  <field name=\"manu\">Corsair Microsystems Inc.</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">corsair</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">memory</field>",
                "+  <field name=\"price\">74.99</field>",
                "+  <field name=\"popularity\">7</field>",
                "+  <field name=\"inStock\">true</field>",
                "+  <!-- Dodge City store -->",
                "+  <field name=\"store\">37.7752,-100.0232</field>",
                "+  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "+",
                "+  <field name=\"payloads\">electronics|4.0 memory|2.0</field>",
                "+</doc>",
                "+",
                "+<doc>",
                "+  <field name=\"id\">VDBDB1A16</field>",
                "+  <field name=\"name\">A-DATA V-Series 1GB 184-Pin DDR SDRAM Unbuffered DDR 400 (PC 3200) System Memory - OEM</field>",
                "+  <field name=\"manu\">A-DATA Technology Inc.</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">corsair</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">memory</field>",
                "+  <field name=\"features\">CAS latency 3,   2.7v</field>",
                "+  <!-- note: price & popularity is missing on this one -->",
                "+  <field name=\"popularity\">0</field>",
                "+  <field name=\"inStock\">true</field>",
                "+  <!-- Buffalo store -->",
                "+  <field name=\"store\">45.18414,-93.88141</field>",
                "+  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "+",
                "+  <field name=\"payloads\">electronics|0.9 memory|0.1</field>",
                "+</doc>",
                "+",
                "+</add>",
                "+",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/money.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/money.xml",
                "new file mode 100644",
                "index 00000000000..b1b8036c369",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/money.xml",
                "@@ -0,0 +1,65 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<!-- Example documents utilizing the CurrencyField type -->",
                "+<add>",
                "+<doc>",
                "+  <field name=\"id\">USD</field>",
                "+  <field name=\"name\">One Dollar</field>",
                "+  <field name=\"manu\">Bank of America</field>",
                "+  <field name=\"manu_id_s\">boa</field>",
                "+  <field name=\"cat\">currency</field>",
                "+  <field name=\"features\">Coins and notes</field>",
                "+  <field name=\"price_c\">1,USD</field>",
                "+  <field name=\"inStock\">true</field>",
                "+</doc>",
                "+",
                "+<doc>",
                "+  <field name=\"id\">EUR</field>",
                "+  <field name=\"name\">One Euro</field>",
                "+  <field name=\"manu\">European Union</field>",
                "+  <field name=\"manu_id_s\">eu</field>",
                "+  <field name=\"cat\">currency</field>",
                "+  <field name=\"features\">Coins and notes</field>",
                "+  <field name=\"price_c\">1,EUR</field>",
                "+  <field name=\"inStock\">true</field>",
                "+</doc>",
                "+",
                "+<doc>",
                "+  <field name=\"id\">GBP</field>",
                "+  <field name=\"name\">One British Pound</field>",
                "+  <field name=\"manu\">U.K.</field>",
                "+  <field name=\"manu_id_s\">uk</field>",
                "+  <field name=\"cat\">currency</field>",
                "+  <field name=\"features\">Coins and notes</field>",
                "+  <field name=\"price_c\">1,GBP</field>",
                "+  <field name=\"inStock\">true</field>",
                "+</doc>",
                "+",
                "+<doc>",
                "+  <field name=\"id\">NOK</field>",
                "+  <field name=\"name\">One Krone</field>",
                "+  <field name=\"manu\">Bank of Norway</field>",
                "+  <field name=\"manu_id_s\">nor</field>",
                "+  <field name=\"cat\">currency</field>",
                "+  <field name=\"features\">Coins and notes</field>",
                "+  <field name=\"price_c\">1,NOK</field>",
                "+  <field name=\"inStock\">true</field>",
                "+</doc>",
                "+",
                "+</add>",
                "+",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor.xml",
                "new file mode 100644",
                "index 00000000000..d0343af1594",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor.xml",
                "@@ -0,0 +1,34 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add><doc>",
                "+  <field name=\"id\">3007WFP</field>",
                "+  <field name=\"name\">Dell Widescreen UltraSharp 3007WFP</field>",
                "+  <field name=\"manu\">Dell, Inc.</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">dell</field>",
                "+  <field name=\"cat\">electronics and computer1</field>",
                "+  <field name=\"features\">30\" TFT active matrix LCD, 2560 x 1600, .25mm dot pitch, 700:1 contrast</field>",
                "+  <field name=\"includes\">USB cable</field>",
                "+  <field name=\"weight\">401.6</field>",
                "+  <field name=\"price\">2199.0</field>",
                "+  <field name=\"popularity\">6</field>",
                "+  <field name=\"inStock\">true</field>",
                "+  <!-- Buffalo store -->",
                "+  <field name=\"store\">43.17614,-90.57341</field>",
                "+</doc></add>",
                "+",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor2.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor2.xml",
                "new file mode 100644",
                "index 00000000000..eaf9e223ccd",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor2.xml",
                "@@ -0,0 +1,33 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add><doc>",
                "+  <field name=\"id\">VA902B</field>",
                "+  <field name=\"name\">ViewSonic VA902B - flat panel display - TFT - 19\"</field>",
                "+  <field name=\"manu\">ViewSonic Corp.</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">viewsonic</field>",
                "+  <field name=\"cat\">electronics and stuff2</field>",
                "+  <field name=\"features\">19\" TFT active matrix LCD, 8ms response time, 1280 x 1024 native resolution</field>",
                "+  <field name=\"weight\">190.4</field>",
                "+  <field name=\"price\">279.95</field>",
                "+  <field name=\"popularity\">6</field>",
                "+  <field name=\"inStock\">true</field>",
                "+  <!-- Buffalo store -->",
                "+  <field name=\"store\">45.18814,-93.88541</field>",
                "+</doc></add>",
                "+",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mp500.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mp500.xml",
                "new file mode 100644",
                "index 00000000000..a8f51b643ca",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/mp500.xml",
                "@@ -0,0 +1,43 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add><doc>",
                "+  <field name=\"id\">0579B002</field>",
                "+  <field name=\"name\">Canon PIXMA MP500 All-In-One Photo Printer</field>",
                "+  <field name=\"manu\">Canon Inc.</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">canon</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">multifunction printer</field>",
                "+  <field name=\"cat\">printer</field>",
                "+  <field name=\"cat\">scanner</field>",
                "+  <field name=\"cat\">copier</field>",
                "+  <field name=\"features\">Multifunction ink-jet color photo printer</field>",
                "+  <field name=\"features\">Flatbed scanner, optical scan resolution of 1,200 x 2,400 dpi</field>",
                "+  <field name=\"features\">2.5\" color LCD preview screen</field>",
                "+  <field name=\"features\">Duplex Copying</field>",
                "+  <field name=\"features\">Printing speed up to 29ppm black, 19ppm color</field>",
                "+  <field name=\"features\">Hi-Speed USB</field>",
                "+  <field name=\"features\">memory card: CompactFlash, Micro Drive, SmartMedia, Memory Stick, Memory Stick Pro, SD Card, and MultiMediaCard</field>",
                "+  <field name=\"weight\">352.0</field>",
                "+  <field name=\"price\">179.99</field>",
                "+  <field name=\"popularity\">6</field>",
                "+  <field name=\"inStock\">true</field>",
                "+  <!-- Buffalo store -->",
                "+  <field name=\"store\">45.19214,-93.89941</field>",
                "+</doc></add>",
                "+",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sample.html b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sample.html",
                "new file mode 100644",
                "index 00000000000..656b656b6ab",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sample.html",
                "@@ -0,0 +1,13 @@",
                "+<html>",
                "+<head>",
                "+  <title>Welcome to Solr</title>",
                "+</head>",
                "+<body>",
                "+<p>",
                "+  Here is some text",
                "+</p>",
                "+<p>distinct<br/>words</p>",
                "+<div>Here is some text in a div</div>",
                "+<div>This has a <a href=\"http://www.apache.org\">link</a>.</div>",
                "+</body>",
                "+</html>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sd500.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sd500.xml",
                "new file mode 100644",
                "index 00000000000..145c6fd5de6",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/sd500.xml",
                "@@ -0,0 +1,38 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add><doc>",
                "+  <field name=\"id\">9885A004</field>",
                "+  <field name=\"name\">Canon PowerShot SD500</field>",
                "+  <field name=\"manu\">Canon Inc.</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">canon</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">camera</field>",
                "+  <field name=\"features\">3x zoop, 7.1 megapixel Digital ELPH</field>",
                "+  <field name=\"features\">movie clips up to 640x480 @30 fps</field>",
                "+  <field name=\"features\">2.0\" TFT LCD, 118,000 pixels</field>",
                "+  <field name=\"features\">built in flash, red-eye reduction</field>",
                "+  <field name=\"includes\">32MB SD card, USB cable, AV cable, battery</field>",
                "+  <field name=\"weight\">6.4</field>",
                "+  <field name=\"price\">329.95</field>",
                "+  <field name=\"popularity\">7</field>",
                "+  <field name=\"inStock\">true</field>",
                "+  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z</field>",
                "+  <!-- Buffalo store -->",
                "+  <field name=\"store\">45.19614,-93.90341</field>",
                "+</doc></add>",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/solr.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/solr.xml",
                "new file mode 100644",
                "index 00000000000..a3656175217",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/solr.xml",
                "@@ -0,0 +1,38 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add>",
                "+<doc>",
                "+  <field name=\"id\">SOLR1000</field>",
                "+  <field name=\"name\">Solr, the Enterprise Search Server</field>",
                "+  <field name=\"manu\">Apache Software Foundation</field>",
                "+  <field name=\"cat\">software</field>",
                "+  <field name=\"cat\">search</field>",
                "+  <field name=\"features\">Advanced Full-Text Search Capabilities using Lucene</field>",
                "+  <field name=\"features\">Optimized for High Volume Web Traffic</field>",
                "+  <field name=\"features\">Standards Based Open Interfaces - XML and HTTP</field>",
                "+  <field name=\"features\">Comprehensive HTML Administration Interfaces</field>",
                "+  <field name=\"features\">Scalability - Efficient Replication to other Solr Search Servers</field>",
                "+  <field name=\"features\">Flexible and Adaptable with XML configuration and Schema</field>",
                "+  <field name=\"features\">Good unicode support: h&#xE9;llo (hello with an accent over the e)</field>",
                "+  <field name=\"price\">0.0</field>",
                "+  <field name=\"popularity\">10</field>",
                "+  <field name=\"inStock\">true</field>",
                "+  <field name=\"incubationdate_dt\">2006-01-17T00:00:00.000Z</field>",
                "+</doc>",
                "+</add>",
                "+",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/utf8-example.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/utf8-example.xml",
                "new file mode 100644",
                "index 00000000000..ee300a68306",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/utf8-example.xml",
                "@@ -0,0 +1,42 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<!-- ",
                "+  After posting this to Solr with bin/post, searching for \"\u00c3\u00aa\u00c3\u00a2\u00c3\u00ae\u00c3\u00b4\u00c3\u00bb\" from",
                "+  the solr/admin/ search page must return this document.",
                "+ -->",
                "+",
                "+<add>",
                "+  <doc>",
                "+    <field name=\"id\">UTF8TEST</field>",
                "+    <field name=\"name\">Test with some UTF-8 encoded characters</field>",
                "+    <field name=\"manu\">Apache Software Foundation</field>",
                "+    <field name=\"cat\">software</field>",
                "+    <field name=\"cat\">search</field>",
                "+    <field name=\"features\">No accents here</field>",
                "+    <field name=\"features\">This is an e acute: \u00c3\u00a9</field>",
                "+    <field name=\"features\">eaiou with circumflexes: \u00c3\u00aa\u00c3\u00a2\u00c3\u00ae\u00c3\u00b4\u00c3\u00bb</field>",
                "+    <field name=\"features\">eaiou with umlauts: \u00c3\u00ab\u00c3\u00a4\u00c3\u00af\u00c3\u00b6\u00c3\u00bc</field>",
                "+    <field name=\"features\">tag with escaped chars: &lt;nicetag/&gt;</field>",
                "+    <field name=\"features\">escaped ampersand: Bonnie &amp; Clyde</field>",
                "+    <field name=\"features\">Outside the BMP:\u00f0\u0090\u008c\u0088 codepoint=10308, a circle with an x inside. UTF8=f0908c88 UTF16=d800 df08</field>",
                "+    <field name=\"price\">0.0</field>",
                "+    <field name=\"inStock\">true</field>",
                "+  </doc>",
                "+</add>",
                "+",
                "diff --git a/solr/contrib/prometheus-exporter/src/test-files/exampledocs/vidcard.xml b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/vidcard.xml",
                "new file mode 100644",
                "index 00000000000..d867d82acd1",
                "--- /dev/null",
                "+++ b/solr/contrib/prometheus-exporter/src/test-files/exampledocs/vidcard.xml",
                "@@ -0,0 +1,62 @@",
                "+<!--",
                "+ Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ contributor license agreements.  See the NOTICE file distributed with",
                "+ this work for additional information regarding copyright ownership.",
                "+ The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ (the \"License\"); you may not use this file except in compliance with",
                "+ the License.  You may obtain a copy of the License at",
                "+",
                "+     http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+ Unless required by applicable law or agreed to in writing, software",
                "+ distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ See the License for the specific language governing permissions and",
                "+ limitations under the License.",
                "+-->",
                "+",
                "+<add>",
                "+<doc>",
                "+  <field name=\"id\">EN7800GTX/2DHTV/256M</field>",
                "+  <field name=\"name\">ASUS Extreme N7800GTX/2DHTV (256 MB)</field>",
                "+  <!-- Denormalized -->",
                "+  <field name=\"manu\">ASUS Computer Inc.</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">asus</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">graphics card</field>",
                "+  <field name=\"features\">NVIDIA GeForce 7800 GTX GPU/VPU clocked at 486MHz</field>",
                "+  <field name=\"features\">256MB GDDR3 Memory clocked at 1.35GHz</field>",
                "+  <field name=\"features\">PCI Express x16</field>",
                "+  <field name=\"features\">Dual DVI connectors, HDTV out, video input</field>",
                "+  <field name=\"features\">OpenGL 2.0, DirectX 9.0</field>",
                "+  <field name=\"weight\">16.0</field>",
                "+  <field name=\"price\">479.95</field>",
                "+  <field name=\"popularity\">7</field>",
                "+  <field name=\"store\">40.7143,-74.006</field>",
                "+  <field name=\"inStock\">false</field>",
                "+  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z/DAY</field>",
                "+</doc>",
                "+  <!-- yes, you can add more than one document at a time -->",
                "+<doc>",
                "+  <field name=\"id\">100-435805</field>",
                "+  <field name=\"name\">ATI Radeon X1900 XTX 512 MB PCIE Video Card</field>",
                "+  <field name=\"manu\">ATI Technologies</field>",
                "+  <!-- Join -->",
                "+  <field name=\"manu_id_s\">ati</field>",
                "+  <field name=\"cat\">electronics</field>",
                "+  <field name=\"cat\">graphics card</field>",
                "+  <field name=\"features\">ATI RADEON X1900 GPU/VPU clocked at 650MHz</field>",
                "+  <field name=\"features\">512MB GDDR3 SDRAM clocked at 1.55GHz</field>",
                "+  <field name=\"features\">PCI Express x16</field>",
                "+  <field name=\"features\">dual DVI, HDTV, svideo, composite out</field>",
                "+  <field name=\"features\">OpenGL 2.0, DirectX 9.0</field>",
                "+  <field name=\"weight\">48.0</field>",
                "+  <field name=\"price\">649.99</field>",
                "+  <field name=\"popularity\">7</field>",
                "+  <field name=\"inStock\">false</field>",
                "+  <field name=\"manufacturedate_dt\">2006-02-13T15:26:37Z/DAY</field>",
                "+  <!-- NYC store -->",
                "+  <field name=\"store\">40.7143,-74.006</field>",
                "+</doc>",
                "+</add>",
                "diff --git a/solr/licenses/argparse4j-0.8.1.jar.sha1 b/solr/licenses/argparse4j-0.8.1.jar.sha1",
                "new file mode 100644",
                "index 00000000000..27a0568b074",
                "--- /dev/null",
                "+++ b/solr/licenses/argparse4j-0.8.1.jar.sha1",
                "@@ -0,0 +1 @@",
                "+2c8241f84acf6c924bd75be0dbd68e8d74fbcd70",
                "diff --git a/solr/licenses/jackson-jq-0.0.8.jar.sha1 b/solr/licenses/jackson-jq-0.0.8.jar.sha1",
                "new file mode 100644",
                "index 00000000000..4b7a4d297df",
                "--- /dev/null",
                "+++ b/solr/licenses/jackson-jq-0.0.8.jar.sha1",
                "@@ -0,0 +1 @@",
                "+9bd1a7f8268a436674a4f3210f11ef4eebe14d84",
                "diff --git a/solr/licenses/simpleclient-0.2.0.jar.sha1 b/solr/licenses/simpleclient-0.2.0.jar.sha1",
                "new file mode 100644",
                "index 00000000000..ce8b16fb377",
                "--- /dev/null",
                "+++ b/solr/licenses/simpleclient-0.2.0.jar.sha1",
                "@@ -0,0 +1 @@",
                "+be8de6a5a01f25074be3b27a8db4448c9cce0168",
                "diff --git a/solr/licenses/simpleclient_common-0.2.0.jar.sha1 b/solr/licenses/simpleclient_common-0.2.0.jar.sha1",
                "new file mode 100644",
                "index 00000000000..1e1c2e94733",
                "--- /dev/null",
                "+++ b/solr/licenses/simpleclient_common-0.2.0.jar.sha1",
                "@@ -0,0 +1 @@",
                "+42d513358b26ae44137c620fa517d37b5e707ae1",
                "diff --git a/solr/licenses/simpleclient_httpserver-0.2.0.jar.sha1 b/solr/licenses/simpleclient_httpserver-0.2.0.jar.sha1",
                "new file mode 100644",
                "index 00000000000..7d188b52e3f",
                "--- /dev/null",
                "+++ b/solr/licenses/simpleclient_httpserver-0.2.0.jar.sha1",
                "@@ -0,0 +1 @@",
                "+f644860c08c787821c8c7ce78c408cea187fe1a3",
                "diff --git a/solr/licenses/snakeyaml-1.19.jar.sha1 b/solr/licenses/snakeyaml-1.19.jar.sha1",
                "new file mode 100644",
                "index 00000000000..532c92172c2",
                "--- /dev/null",
                "+++ b/solr/licenses/snakeyaml-1.19.jar.sha1",
                "@@ -0,0 +1 @@",
                "+2d998d3d674b172a588e54ab619854d073f555b5",
                "diff --git a/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/grafana-solr-dashboard.png b/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/grafana-solr-dashboard.png",
                "new file mode 100644",
                "index 00000000000..69f21a4debb",
                "Binary files /dev/null and b/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/grafana-solr-dashboard.png differ",
                "diff --git a/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/solr-exporter-diagram.png b/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/solr-exporter-diagram.png",
                "new file mode 100644",
                "index 00000000000..96efece464d",
                "Binary files /dev/null and b/solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/solr-exporter-diagram.png differ",
                "diff --git a/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc b/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "new file mode 100644",
                "index 00000000000..891d00f9f74",
                "--- /dev/null",
                "+++ b/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "@@ -0,0 +1,250 @@",
                "+= Monitoring Solr with Prometheus and Grafana",
                "+// Licensed to the Apache Software Foundation (ASF) under one",
                "+// or more contributor license agreements.  See the NOTICE file",
                "+// distributed with this work for additional information",
                "+// regarding copyright ownership.  The ASF licenses this file",
                "+// to you under the Apache License, Version 2.0 (the",
                "+// \"License\"); you may not use this file except in compliance",
                "+// with the License.  You may obtain a copy of the License at",
                "+//",
                "+//   http://www.apache.org/licenses/LICENSE-2.0",
                "+//",
                "+// Unless required by applicable law or agreed to in writing,",
                "+// software distributed under the License is distributed on an",
                "+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+// KIND, either express or implied.  See the License for the",
                "+// specific language governing permissions and limitations",
                "+// under the License.",
                "+",
                "+You can monitor Solr using solr-exporter that exposes Solr's metrics to https://prometheus.io[Prometheus], and visualize metrics using https://grafana.com[Grafana].",
                "+",
                "+It allows users to monitor not only Solr metrics which come from <<metrics-reporting.adoc#metrics-api,Metrics API>> but also facet counts which come from <<searching.adoc#searching,Searching>>.",
                "+",
                "+.solr-exporter Diagram",
                "+image::images/monitoring-solr-with-prometheus-and-grafana/solr-exporter-diagram.png[image,width=600]",
                "+",
                "+This feature is experimental status.",
                "+",
                "+== Running solr-exporter",
                "+",
                "+You can start solr-exporter by running `./bin/solr-exporter` from the solr-exporter directory.",
                "+",
                "+[source,plain]",
                "+----",
                "+$ cd ./contrib/prometheus-exporter",
                "+$ ./bin/solr-exporter -p 9983 -b http://localhost:8983/solr -f ./conf/config.yml -n 8",
                "+----",
                "+",
                "+If you are on Windows platform, you can start solr-exporter by running `.\\bin\\solr-exporter.cmd` instead.",
                "+",
                "+[source,plain]",
                "+----",
                "+> cd .\\contrib\\prometheus",
                "+> .\\bin\\solr-exporter.cmd -p 9983 -b http://localhost:8983/solr -f .\\conf\\config.yml -n 8",
                "+----",
                "+",
                "+You can also connect to Solr in SolrCloud mode like this.",
                "+",
                "+[source,plain]",
                "+----",
                "+$ cd ./contrib/prometheus",
                "+$ ./bin/solr-exporter -p 9983 -z localhost:2181/solr -f ./conf/config.yml -n 16",
                "+----",
                "+",
                "+See command help:",
                "+",
                "+[source,plain]",
                "+----",
                "+$ ./bin/solr-exporter -h",
                "+usage: SolrCollector [-h] [-v] [-p PORT] [-b BASE_URL] [-z ZK_HOST] [-f CONFIG]",
                "+                     [-n NUM_THREADS]",
                "+",
                "+Prometheus exporter for Apache Solr.",
                "+",
                "+optional arguments:",
                "+  -h, --help             show this help message and exit",
                "+  -p PORT, --port PORT   solr-exporter listen port",
                "+  -b BASE_URL, --baseurl BASE_URL",
                "+                         specify Solr base URL when connecting  to Solr in standalone mode (for",
                "+                         example 'http://localhost:8983/solr')",
                "+  -z ZK_HOST, --zkhost ZK_HOST",
                "+                         specify  ZooKeeper  connection  string  when  connecting  to  Solr  in",
                "+                         SolrCloud mode (for example 'localhost:2181/solr')",
                "+  -f CONFIG, --config-file CONFIG",
                "+                         specify configuration file",
                "+  -n NUM_THREADS, --num-thread NUM_THREADS",
                "+                         specify number of threads",
                "+----",
                "+",
                "+The Solr's metrics exposed by solr-exporter can see at the following URL.",
                "+",
                "+http://localhost:9983/metrics[http://localhost:9983/metrics]",
                "+",
                "+",
                "+== solr-exporter Configuration",
                "+",
                "+The configuration is in `./config/config.yml`. An example with all possible options:",
                "+",
                "+[source,plain]",
                "+----",
                "+ping:",
                "+  query:",
                "+    path: /admin/ping",
                "+  jsonQueries:",
                "+    - |-",
                "+      . as $object | $object |",
                "+      (if $object.status == \"OK\" then 1.0 else 0.0 end) as $value |",
                "+      {",
                "+        name         : \"solr_ping\",",
                "+        type         : \"GAUGE\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "+        label_names  : [],",
                "+        label_values : [],",
                "+        value        : $value",
                "+      }",
                "+",
                "+metrics:",
                "+  query:",
                "+    path: /admin/metrics",
                "+    params:",
                "+      - group: 'all'",
                "+      - type: 'all'",
                "+      - prefix: ''",
                "+      - property: ''",
                "+  jsonQueries:",
                "+    # solr_metrics_jetty_response_count",
                "+    - |-",
                "+      .metrics[\"solr.jetty\"] | to_entries | .[] | select(.key | startswith(\"org.eclipse.jetty.server.handler.DefaultHandler\")) | select(.key | endswith(\"xx-responses\")) as $object |",
                "+      $object.key | split(\".\") | last | split(\"-\") | first as $status |",
                "+      $object.value.count as $value |",
                "+      {",
                "+        name         : \"solr_metrics_jetty_response_count\",",
                "+        type         : \"gauge\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/metrics-reporting.html\",",
                "+        label_names  : [\"status\"],",
                "+        label_values : [$status],",
                "+        value        : $value",
                "+      }",
                "+",
                "+...",
                "+",
                "+collections:",
                "+  query:",
                "+    path: /admin/collections",
                "+    params:",
                "+      - action: 'CLUSTERSTATUS'",
                "+  jsonQueries:",
                "+    # solr_collections_cluster_status_live_nodes",
                "+    - |-",
                "+      .cluster.live_nodes | length as $value|",
                "+      {",
                "+        name         : \"solr_collections_cluster_status_live_nodes\",",
                "+        type         : \"gauge\",",
                "+        help         : \"See following URL: https://lucene.apache.org/solr/guide/collections-api.html#clusterstatus\",",
                "+        label_names  : [],",
                "+        label_values : [],",
                "+        value        : $value",
                "+      }",
                "+",
                "+...",
                "+",
                "+queries:",
                "+  - query:",
                "+      collection: collection1",
                "+      path: /select",
                "+      params:",
                "+        - q: \"*:*\"",
                "+        - start: 0",
                "+        - rows: 0",
                "+        - json.facet: |-",
                "+            {",
                "+              category: {",
                "+                type: terms,",
                "+                field: cat",
                "+              }",
                "+            }",
                "+    jsonQueries:",
                "+      # solr_facets_category",
                "+      - |-",
                "+        .facets.category.buckets[] as $object |",
                "+        $object.val as $term |",
                "+        $object.count as $value |",
                "+        {",
                "+          name         : \"solr_facets_category\",",
                "+          type         : \"gauge\",",
                "+          help         : \"Category facets\",",
                "+          label_names  : [\"term\"],",
                "+          label_values : [$term],",
                "+          value        : $value",
                "+        }",
                "+----",
                "+",
                "+|===",
                "+|Name|Description",
                "+",
                "+|ping|Scrape <<ping.adoc#ping,Ping>> response.",
                "+|metrics|Scrape <<metrics-reporting.adoc#metrics-api,Metrics API>> response.",
                "+|collections|Scrape <<collections-api.adoc#collections-api,Collections API>> response.",
                "+|queries|Scrape <<searching.adoc#searching,Search API>> response.",
                "+|*.query|Query parameter for each features. You can specify `collection`, `core`, `path`, and `params`.",
                "+|*.jsonQueries|JSON Query that is jq syntax. For more details, see https://stedolan.github.io/jq/manual/[https://stedolan.github.io/jq/manual/].",
                "+|===",
                "+",
                "+jq query has to output JSON in the following format.",
                "+",
                "+[source,json]",
                "+----",
                "+{",
                "+  name         : \"solr_ping\",",
                "+  type         : \"GAUGE\",",
                "+  help         : \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "+  label_names  : [\"base_url\",\"core\"],",
                "+  label_values : [\"http://localhost:8983/solr\",\"collection1\"],",
                "+  value        : 1.0",
                "+}",
                "+----",
                "+",
                "+It will be converted to the following exposition format.",
                "+",
                "+[source,plain]",
                "+----",
                "+# TYPE solr_ping gauge",
                "+# HELP solr_ping See following URL: https://lucene.apache.org/solr/guide/ping.html",
                "+solr_ping{base_url=\"http://localhost:8983/solr\",core=\"collection1\"} 1.0",
                "+----",
                "+",
                "+|===",
                "+|Name|Description",
                "+",
                "+|name|The metric name to set. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "+|type|The type of the metric, can be `COUNTER`, `GAUGE`, `SUMMARY`, `HISTOGRAM` or `UNTYPED`. For more detauils, see https://prometheus.io/docs/concepts/metric_types/[https://prometheus.io/docs/concepts/metric_types/].",
                "+|help|Help text for the metric.",
                "+|label_names|Label names for the metric. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "+|label_values|Label values for the metric. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "+|value|Value for the metric. Value must be set to Double type.",
                "+|===",
                "+",
                "+",
                "+== Prometheus Configuration",
                "+",
                "+You need to specify the solr-exporter listen address into `scrape_configs` in `prometheus.yml`. See following example:",
                "+",
                "+[source,plain]",
                "+----",
                "+scrape_configs:",
                "+  - job_name: 'solr'",
                "+    static_configs:",
                "+      - targets: ['localhost:9983']",
                "+----",
                "+",
                "+When you apply the above settings to prometheus, it will start to pull Solr's metrics from solr-exporter.",
                "+",
                "+",
                "+== Grafana Dashboard",
                "+",
                "+A Grafana sample dashboard is provided at the following JSON file.",
                "+",
                "+`./conf/grafana-solr-dashboard.json`",
                "+",
                "+.Grafana Dashboard",
                "+image::images/monitoring-solr-with-prometheus-and-grafana/grafana-solr-dashboard.png[image,width=800]",
                "diff --git a/solr/solr-ref-guide/src/monitoring-solr.adoc b/solr/solr-ref-guide/src/monitoring-solr.adoc",
                "index 0576e537ccd..2fb70775968 100644",
                "--- a/solr/solr-ref-guide/src/monitoring-solr.adoc",
                "+++ b/solr/solr-ref-guide/src/monitoring-solr.adoc",
                "@@ -1,3 +1,3 @@",
                " = Monitoring Solr",
                "-:page-children: metrics-reporting, mbean-request-handler, configuring-logging, using-jmx-with-solr, performance-statistics-reference",
                "+:page-children: metrics-reporting, mbean-request-handler, configuring-logging, using-jmx-with-solr, monitoring-solr-with-prometheus-and-grafana, performance-statistics-reference",
                " // Licensed to the Apache Software Foundation (ASF) under one",
                "@@ -32,2 +32,4 @@ Common administrative tasks include:",
                "+<<monitoring-solr-with-prometheus-and-grafana.adoc#monitoring-solr-with-prometheus-and-grafana,Monitoring Solr with Prometheus and Grafana>>: Describes how to monitor Solr with Prometheus and Grafana.",
                "+",
                " <<performance-statistics-reference.adoc#performance-statistics-reference,Performance Statistics Reference>>: Additional information on statistics returned from JMX."
            ],
            "changed_files": [
                "lucene/ivy-versions.properties",
                "solr/build.xml",
                "solr/contrib/prometheus-exporter/bin/solr-exporter",
                "solr/contrib/prometheus-exporter/bin/solr-exporter.cmd",
                "solr/contrib/prometheus-exporter/build.xml",
                "solr/contrib/prometheus-exporter/conf/config.yml",
                "solr/contrib/prometheus-exporter/conf/grafana-solr-dashboard.json",
                "solr/contrib/prometheus-exporter/conf/log4j.properties",
                "solr/contrib/prometheus-exporter/ivy.xml",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/SolrCollectorConfig.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/config/package-info.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/package-info.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/package-info.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrQueryConfig.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/SolrScraperConfig.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/config/package-info.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/package-info.java",
                "solr/contrib/prometheus-exporter/src/java/overview.html",
                "solr/contrib/prometheus-exporter/src/test-files/conf/config.yml",
                "solr/contrib/prometheus-exporter/src/test-files/conf/log4j.properties",
                "solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/managed-schema",
                "solr/contrib/prometheus-exporter/src/test-files/configsets/collection1/conf/solrconfig.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/gb18030-example.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/hd.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_other.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/ipod_video.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/manufacturers.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/mem.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/money.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/monitor2.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/mp500.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/sample.html",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/sd500.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/solr.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/utf8-example.xml",
                "solr/contrib/prometheus-exporter/src/test-files/exampledocs/vidcard.xml",
                "solr/licenses/argparse4j-0.8.1.jar.sha1",
                "solr/licenses/jackson-jq-0.0.8.jar.sha1",
                "solr/licenses/simpleclient-0.2.0.jar.sha1",
                "solr/licenses/simpleclient_common-0.2.0.jar.sha1",
                "solr/licenses/simpleclient_httpserver-0.2.0.jar.sha1",
                "solr/licenses/snakeyaml-1.19.jar.sha1",
                "solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/grafana-solr-dashboard.png",
                "solr/solr-ref-guide/src/images/monitoring-solr-with-prometheus-and-grafana/solr-exporter-diagram.png",
                "solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "solr/solr-ref-guide/src/monitoring-solr.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11795": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4bfcbc5c605e2823c924dbe287a67b37d2dd0ca8"
                ],
                [
                    "no-tag",
                    "90741a5d329a5cf33f880eca1ceebc6ed769d6b1"
                ],
                [
                    "no-tag",
                    "b07382c6e429fbb0db3a33d6d85044ee730a7fc0"
                ],
                [
                    "no-tag",
                    "328800efc939a52c94f7b92c2d4cc4de2066215b"
                ],
                [
                    "no-tag",
                    "d5a01e02687c4f88a2f80ac930e27188f2703385"
                ],
                [
                    "no-tag",
                    "6d66fc04b23358f58ae13020a399013e13063b4f"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file, server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c5938f79e540f81b6d61560d324b150a5efd7011",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520015275,
            "hunks": 10,
            "message": "SOLR-11597: Add contrib/ltr NeuralNetworkModel class. (Michael A. Alcorn, Yuki Yano, Christine Poerschke) Closes #270",
            "diff": [
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/model/NeuralNetworkModel.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/model/NeuralNetworkModel.java",
                "new file mode 100644",
                "index 00000000000..798b81c2916",
                "--- /dev/null",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/model/NeuralNetworkModel.java",
                "@@ -0,0 +1,297 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.ltr.model;",
                "+",
                "+import java.lang.Math;",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+",
                "+import org.apache.lucene.index.LeafReaderContext;",
                "+import org.apache.lucene.search.Explanation;",
                "+import org.apache.solr.ltr.feature.Feature;",
                "+import org.apache.solr.ltr.norm.Normalizer;",
                "+import org.apache.solr.util.SolrPluginUtils;",
                "+",
                "+/**",
                "+ * A scoring model that computes document scores using a neural network.",
                "+ * <p>",
                "+ * Supported <a href=\"https://en.wikipedia.org/wiki/Activation_function\">activation functions</a> are:",
                "+ * <code>identity</code>, <code>relu</code>, <code>sigmoid</code> and",
                "+ * contributions to support additional activation functions are welcome.",
                "+ * <p>",
                "+ * Example configuration:",
                "+<pre>{",
                "+    \"class\" : \"org.apache.solr.ltr.model.NeuralNetworkModel\",",
                "+    \"name\" : \"rankNetModel\",",
                "+    \"features\" : [",
                "+        { \"name\" : \"documentRecency\" },",
                "+        { \"name\" : \"isBook\" },",
                "+        { \"name\" : \"originalScore\" }",
                "+    ],",
                "+    \"params\" : {",
                "+        \"layers\" : [",
                "+            {",
                "+                \"matrix\" : [ [ 1.0, 2.0, 3.0 ],",
                "+                             [ 4.0, 5.0, 6.0 ],",
                "+                             [ 7.0, 8.0, 9.0 ],",
                "+                             [ 10.0, 11.0, 12.0 ] ],",
                "+                \"bias\" : [ 13.0, 14.0, 15.0, 16.0 ],",
                "+                \"activation\" : \"sigmoid\"",
                "+            },",
                "+            {",
                "+                \"matrix\" : [ [ 17.0, 18.0, 19.0, 20.0 ],",
                "+                             [ 21.0, 22.0, 23.0, 24.0 ] ],",
                "+                \"bias\" : [ 25.0, 26.0 ],",
                "+                \"activation\" : \"relu\"",
                "+            },",
                "+            {",
                "+                \"matrix\" : [ [ 27.0, 28.0 ] ],",
                "+                \"bias\" : [ 29.0 ],",
                "+                \"activation\" : \"identity\"",
                "+            }",
                "+        ]",
                "+    }",
                "+}</pre>",
                "+ * <p>",
                "+ * Training libraries:",
                "+ * <ul>",
                "+ * <li> <a href=\"https://keras.io\">Keras</a> is a high-level neural networks API, written in Python.",
                "+ * A Keras and Solr implementation of RankNet can be found at <a href=\"https://github.com/airalcorn2/RankNet\">https://github.com/airalcorn2/RankNet</a>.",
                "+ * </ul>",
                "+ * <p>",
                "+ * Background reading:",
                "+ * <ul>",
                "+ * <li> <a href=\"http://icml.cc/2015/wp-content/uploads/2015/06/icml_ranking.pdf\">",
                "+ * C. Burges, T. Shaked, E. Renshaw, A. Lazier, M. Deeds, N. Hamilton, and G. Hullender. Learning to Rank Using Gradient Descent.",
                "+ * Proceedings of the 22nd International Conference on Machine Learning (ICML), ACM, 2005.</a>",
                "+ * </ul>",
                "+ */",
                "+public class NeuralNetworkModel extends LTRScoringModel {",
                "+",
                "+  private List<Layer> layers;",
                "+",
                "+  protected interface Activation {",
                "+    // similar to UnaryOperator<Float>",
                "+    float apply(float in);",
                "+  }",
                "+",
                "+  public interface Layer {",
                "+    public float[] calculateOutput(float[] inputVec);",
                "+    public int validate(int inputDim) throws ModelException;",
                "+    public String describe();",
                "+  }",
                "+",
                "+  public class DefaultLayer implements Layer {",
                "+    private int layerID;",
                "+    private float[][] weightMatrix;",
                "+    private int matrixRows;",
                "+    private int matrixCols;",
                "+    private float[] biasVector;",
                "+    private int numUnits;",
                "+    protected String activationStr;",
                "+    protected Activation activation;",
                "+",
                "+    public DefaultLayer() {",
                "+      layerID = layers.size();",
                "+    }",
                "+",
                "+    public void setMatrix(Object matrixObj) {",
                "+      final List<List<Double>> matrix = (List<List<Double>>) matrixObj;",
                "+      this.matrixRows = matrix.size();",
                "+      this.matrixCols = matrix.get(0).size();",
                "+      this.weightMatrix = new float[this.matrixRows][this.matrixCols];",
                "+",
                "+      for (int i = 0; i < this.matrixRows; i++) {",
                "+        for (int j = 0; j < this.matrixCols; j++) {",
                "+          this.weightMatrix[i][j] = matrix.get(i).get(j).floatValue();",
                "+        }",
                "+      }",
                "+    }",
                "+",
                "+    public void setBias(Object biasObj) {",
                "+      final List<Double> vector = (List<Double>) biasObj;",
                "+      this.numUnits = vector.size();",
                "+      this.biasVector = new float[numUnits];",
                "+",
                "+      for (int i = 0; i < this.numUnits; i++) {",
                "+        this.biasVector[i] = vector.get(i).floatValue();",
                "+      }",
                "+    }",
                "+",
                "+    public void setActivation(Object activationStr) {",
                "+      this.activationStr = (String) activationStr;",
                "+      switch (this.activationStr) {",
                "+        case \"relu\":",
                "+          this.activation = new Activation() {",
                "+            @Override",
                "+            public float apply(float in) {",
                "+              return in < 0 ? 0 : in;",
                "+            }",
                "+          };",
                "+          break;",
                "+        case \"sigmoid\":",
                "+          this.activation = new Activation() {",
                "+            @Override",
                "+            public float apply(float in) {",
                "+              return (float) (1 / (1 + Math.exp(-in)));",
                "+            }",
                "+          };",
                "+          break;",
                "+        case \"identity\":",
                "+          this.activation = new Activation() {",
                "+            @Override",
                "+            public float apply(float in) {",
                "+              return in;",
                "+            }",
                "+          };",
                "+          break;",
                "+        default:",
                "+          this.activation = null;",
                "+          break;",
                "+      }",
                "+    }",
                "+",
                "+    public float[] calculateOutput(float[] inputVec) {",
                "+",
                "+      float[] outputVec = new float[this.matrixRows];",
                "+",
                "+      for (int i = 0; i < this.matrixRows; i++) {",
                "+        float outputVal = this.biasVector[i];",
                "+        for (int j = 0; j < this.matrixCols; j++) {",
                "+          outputVal += this.weightMatrix[i][j] * inputVec[j];",
                "+        }",
                "+        outputVec[i] = this.activation.apply(outputVal);",
                "+      }",
                "+",
                "+      return outputVec;",
                "+    }",
                "+",
                "+    public int validate(int inputDim) throws ModelException {",
                "+      if (this.numUnits != this.matrixRows) {",
                "+        throw new ModelException(\"Dimension mismatch in model \\\"\"  + name +  \"\\\". Layer \" +",
                "+                                 Integer.toString(this.layerID) + \" has \" + Integer.toString(this.numUnits) +",
                "+                                 \" bias weights but \" + Integer.toString(this.matrixRows) + \" weight matrix rows.\");",
                "+      }",
                "+      if (this.activation == null) {",
                "+        throw new ModelException(\"Invalid activation function (\\\"\"+this.activationStr+\"\\\") in layer \"+Integer.toString(this.layerID)+\" of model \\\"\" + name + \"\\\".\");",
                "+      }",
                "+      if (inputDim != this.matrixCols) {",
                "+        if (this.layerID == 0) {",
                "+          throw new ModelException(\"Dimension mismatch in model \\\"\" + name + \"\\\". The input has \" +",
                "+                                   Integer.toString(inputDim) + \" features, but the weight matrix for layer 0 has \" +",
                "+                                   Integer.toString(this.matrixCols) + \" columns.\");",
                "+        } else {",
                "+          throw new ModelException(\"Dimension mismatch in model \\\"\" + name + \"\\\". The weight matrix for layer \" +",
                "+                                   Integer.toString(this.layerID - 1) + \" has \" + Integer.toString(inputDim) + \" rows, but the \" +",
                "+                                   \"weight matrix for layer \" + Integer.toString(this.layerID) + \" has \" +",
                "+                                   Integer.toString(this.matrixCols) + \" columns.\");",
                "+        }",
                "+      }",
                "+      return this.matrixRows;",
                "+    }",
                "+",
                "+    public String describe() {",
                "+      final StringBuilder sb = new StringBuilder();",
                "+      sb",
                "+      .append(\"(matrix=\").append(Integer.toString(this.matrixRows)).append('x').append(Integer.toString(this.matrixCols))",
                "+      .append(\",activation=\").append(this.activationStr).append(\")\");",
                "+      return sb.toString();",
                "+    }",
                "+  }",
                "+",
                "+  protected Layer createLayer(Object o) {",
                "+    final DefaultLayer layer = new DefaultLayer();",
                "+    if (o != null) {",
                "+      SolrPluginUtils.invokeSetters(layer, ((Map<String,Object>) o).entrySet());",
                "+    }",
                "+    return layer;",
                "+  }",
                "+",
                "+  public void setLayers(Object layers) {",
                "+    this.layers = new ArrayList<Layer>();",
                "+    for (final Object o : (List<Object>) layers) {",
                "+      final Layer layer = createLayer(o);",
                "+      this.layers.add(layer);",
                "+    }",
                "+  }",
                "+",
                "+  public NeuralNetworkModel(String name, List<Feature> features,",
                "+                 List<Normalizer> norms,",
                "+                 String featureStoreName, List<Feature> allFeatures,",
                "+                 Map<String,Object> params) {",
                "+    super(name, features, norms, featureStoreName, allFeatures, params);",
                "+  }",
                "+",
                "+  @Override",
                "+  protected void validate() throws ModelException {",
                "+    super.validate();",
                "+",
                "+    int inputDim = features.size();",
                "+",
                "+    for (Layer layer : layers) {",
                "+      inputDim = layer.validate(inputDim);",
                "+    }",
                "+",
                "+    if (inputDim != 1) {",
                "+      throw new ModelException(\"The output matrix for model \\\"\" + name + \"\\\" has \" + Integer.toString(inputDim) +",
                "+                               \" rows, but should only have one.\");",
                "+    }",
                "+  }",
                "+",
                "+  @Override",
                "+  public float score(float[] inputFeatures) {",
                "+",
                "+    float[] outputVec = inputFeatures;",
                "+",
                "+    for (Layer layer : layers) {",
                "+      outputVec = layer.calculateOutput(outputVec);",
                "+    }",
                "+",
                "+    return outputVec[0];",
                "+  }",
                "+",
                "+  @Override",
                "+  public Explanation explain(LeafReaderContext context, int doc,",
                "+                             float finalScore, List<Explanation> featureExplanations) {",
                "+",
                "+    final StringBuilder modelDescription = new StringBuilder();",
                "+",
                "+    modelDescription.append(\"(name=\").append(getName());",
                "+    modelDescription.append(\",featureValues=[\");",
                "+",
                "+    for (int i = 0; i < featureExplanations.size(); i++) {",
                "+      Explanation featureExplain = featureExplanations.get(i);",
                "+      if (i > 0) {",
                "+        modelDescription.append(',');",
                "+      }",
                "+      final String key = features.get(i).getName();",
                "+      modelDescription.append(key).append('=').append(featureExplain.getValue());",
                "+    }",
                "+",
                "+    modelDescription.append(\"],layers=[\");",
                "+",
                "+    for (int i = 0; i < layers.size(); i++) {",
                "+      if (i > 0) modelDescription.append(',');",
                "+      modelDescription.append(layers.get(i).describe());",
                "+    }",
                "+    modelDescription.append(\"])\");",
                "+",
                "+    return Explanation.match(finalScore, modelDescription.toString());",
                "+  }",
                "+",
                "+}",
                "diff --git a/solr/contrib/ltr/src/test-files/featureExamples/neuralnetworkmodel_features.json b/solr/contrib/ltr/src/test-files/featureExamples/neuralnetworkmodel_features.json",
                "new file mode 100644",
                "index 00000000000..2f0bea50cde",
                "--- /dev/null",
                "+++ b/solr/contrib/ltr/src/test-files/featureExamples/neuralnetworkmodel_features.json",
                "@@ -0,0 +1,30 @@",
                "+[",
                "+    {",
                "+        \"name\": \"constantOne\",",
                "+        \"class\": \"org.apache.solr.ltr.feature.ValueFeature\",",
                "+        \"params\": {",
                "+            \"value\": 1.0",
                "+        }",
                "+    },",
                "+    {",
                "+        \"name\": \"constantTwo\",",
                "+        \"class\": \"org.apache.solr.ltr.feature.ValueFeature\",",
                "+        \"params\": {",
                "+            \"value\": 2.0",
                "+        }",
                "+    },",
                "+    {",
                "+        \"name\": \"constantThree\",",
                "+        \"class\": \"org.apache.solr.ltr.feature.ValueFeature\",",
                "+        \"params\": {",
                "+            \"value\": 3.0",
                "+        }",
                "+    },",
                "+    {",
                "+        \"name\": \"constantFour\",",
                "+        \"class\": \"org.apache.solr.ltr.feature.ValueFeature\",",
                "+        \"params\": {",
                "+            \"value\": 4.0",
                "+        }",
                "+    }",
                "+]",
                "diff --git a/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_bad_activation.json b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_bad_activation.json",
                "new file mode 100644",
                "index 00000000000..482d99f2d23",
                "--- /dev/null",
                "+++ b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_bad_activation.json",
                "@@ -0,0 +1,26 @@",
                "+{",
                "+    \"class\":\"org.apache.solr.ltr.model.NeuralNetworkModel\",",
                "+    \"name\":\"neuralnetworkmodel_bad_activation\",",
                "+    \"features\":[",
                "+        { \"name\": \"constantOne\"},",
                "+        { \"name\": \"constantTwo\"},",
                "+        { \"name\": \"constantThree\"},",
                "+        { \"name\": \"constantFour\"}",
                "+    ],",
                "+    \"params\":{",
                "+        \"layers\": [",
                "+            {",
                "+                \"matrix\": [ [ 1.0, 2.0, 3.0, 4.0 ],",
                "+                            [ 5.0, 6.0, 7.0, 8.0 ],",
                "+                            [ 9.0, 10.0, 11.0, 12.0 ] ],",
                "+                \"bias\" : [ 13.0, 14.0, 15.0 ],",
                "+                \"activation\": \"sig\"",
                "+            },",
                "+            {",
                "+                \"matrix\": [ [ 16.0, 17.0, 18.0 ] ],",
                "+                \"bias\" : [ 19.0 ],",
                "+                \"activation\": \"identity\"",
                "+            }",
                "+        ]",
                "+    }",
                "+}",
                "diff --git a/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_custom.json b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_custom.json",
                "new file mode 100644",
                "index 00000000000..78b32e96a75",
                "--- /dev/null",
                "+++ b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_custom.json",
                "@@ -0,0 +1,17 @@",
                "+{",
                "+    \"class\":\"org.apache.solr.ltr.model.TestNeuralNetworkModel$CustomNeuralNetworkModel\",",
                "+    \"name\":\"neuralnetworkmodel_custom\",",
                "+    \"features\":[",
                "+        { \"name\": \"constantFour\"},",
                "+        { \"name\": \"constantTwo\"}",
                "+    ],",
                "+    \"params\":{",
                "+        \"layers\": [",
                "+            {",
                "+                \"matrix\": [ [ 1.0, 1.0 ] ],",
                "+                \"bias\" : [ 0.0 ],",
                "+                \"activation\": \"answer\"",
                "+            }",
                "+        ]",
                "+    }",
                "+}",
                "diff --git a/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_explainable.json b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_explainable.json",
                "new file mode 100644",
                "index 00000000000..7602f89c7e7",
                "--- /dev/null",
                "+++ b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_explainable.json",
                "@@ -0,0 +1,26 @@",
                "+{",
                "+    \"class\":\"org.apache.solr.ltr.model.NeuralNetworkModel\",",
                "+    \"name\":\"neuralnetworkmodel_explainable\",",
                "+    \"features\":[",
                "+        { \"name\": \"constantOne\"},",
                "+        { \"name\": \"constantTwo\"},",
                "+        { \"name\": \"constantThree\"},",
                "+        { \"name\": \"constantFour\"}",
                "+    ],",
                "+    \"params\":{",
                "+        \"layers\": [",
                "+            {",
                "+                \"matrix\": [",
                "+                    [ 11.0, 2.0, 33.0, 4.0 ],",
                "+                    [ 1.0, 22.0, 3.0, 44.0 ] ],",
                "+                \"bias\" : [ 55.0, 66.0 ],",
                "+                \"activation\": \"relu\"",
                "+            },",
                "+            {",
                "+                \"matrix\": [ [ 11.0, 22.0 ] ],",
                "+                \"bias\" : [ 77.0 ],",
                "+                \"activation\": \"identity\"",
                "+            }",
                "+        ]",
                "+    }",
                "+}",
                "diff --git a/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_bias.json b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_bias.json",
                "new file mode 100644",
                "index 00000000000..05d6b429d3e",
                "--- /dev/null",
                "+++ b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_bias.json",
                "@@ -0,0 +1,26 @@",
                "+{",
                "+    \"class\":\"org.apache.solr.ltr.model.NeuralNetworkModel\",",
                "+    \"name\":\"neuralnetworkmodel_mismatch_bias\",",
                "+    \"features\":[",
                "+        { \"name\": \"constantOne\"},",
                "+        { \"name\": \"constantTwo\"},",
                "+        { \"name\": \"constantThree\"},",
                "+        { \"name\": \"constantFour\"}",
                "+    ],",
                "+    \"params\":{",
                "+        \"layers\": [",
                "+            {",
                "+                \"matrix\": [ [ 1.0, 2.0, 3.0, 4.0 ],",
                "+                            [ 5.0, 6.0, 7.0, 8.0 ],",
                "+                            [ 9.0, 10.0, 11.0, 12.0 ] ],",
                "+                \"bias\" : [ 13.0, 14.0 ],",
                "+                \"activation\": \"relu\"",
                "+            },",
                "+            {",
                "+                \"matrix\": [ [ 16.0, 17.0, 18.0 ] ],",
                "+                \"bias\" : [ 19.0 ],",
                "+                \"activation\": \"identity\"",
                "+            }",
                "+        ]",
                "+    }",
                "+}",
                "diff --git a/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_input.json b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_input.json",
                "new file mode 100644",
                "index 00000000000..4b1c07817d9",
                "--- /dev/null",
                "+++ b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_input.json",
                "@@ -0,0 +1,26 @@",
                "+{",
                "+    \"class\":\"org.apache.solr.ltr.model.NeuralNetworkModel\",",
                "+    \"name\":\"neuralnetworkmodel_mismatch_input\",",
                "+    \"features\":[",
                "+        { \"name\": \"constantOne\"},",
                "+        { \"name\": \"constantTwo\"},",
                "+        { \"name\": \"constantThree\"},",
                "+        { \"name\": \"constantFour\"}",
                "+    ],",
                "+    \"params\":{",
                "+        \"layers\": [",
                "+            {",
                "+                \"matrix\": [ [ 1.0, 2.0, 3.0 ],",
                "+                            [ 5.0, 6.0, 7.0 ],",
                "+                            [ 9.0, 10.0, 11.0 ] ],",
                "+                \"bias\" : [ 13.0, 14.0, 15.0 ],",
                "+                \"activation\": \"relu\"",
                "+            },",
                "+            {",
                "+                \"matrix\": [ [ 16.0, 17.0, 18.0 ] ],",
                "+                \"bias\" : [ 19.0 ],",
                "+                \"activation\": \"identity\"",
                "+            }",
                "+        ]",
                "+    }",
                "+}",
                "diff --git a/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_layers.json b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_layers.json",
                "new file mode 100644",
                "index 00000000000..e8d1dde5b35",
                "--- /dev/null",
                "+++ b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_layers.json",
                "@@ -0,0 +1,25 @@",
                "+{",
                "+    \"class\":\"org.apache.solr.ltr.model.NeuralNetworkModel\",",
                "+    \"name\":\"neuralnetworkmodel_mismatch_layers\",",
                "+    \"features\":[",
                "+        { \"name\": \"constantOne\"},",
                "+        { \"name\": \"constantTwo\"},",
                "+        { \"name\": \"constantThree\"},",
                "+        { \"name\": \"constantFour\"}",
                "+    ],",
                "+    \"params\":{",
                "+        \"layers\": [",
                "+            {",
                "+                \"matrix\": [ [ 1.0, 2.0, 3.0, 4.0 ],",
                "+                            [ 5.0, 6.0, 7.0, 8.0 ] ],",
                "+                \"bias\" : [ 13.0, 14.0 ],",
                "+                \"activation\": \"relu\"",
                "+            },",
                "+            {",
                "+                \"matrix\": [ [ 16.0, 17.0, 18.0 ] ],",
                "+                \"bias\" : [ 19.0 ],",
                "+                \"activation\": \"identity\"",
                "+            }",
                "+        ]",
                "+    }",
                "+}",
                "diff --git a/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_too_many_rows.json b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_too_many_rows.json",
                "new file mode 100644",
                "index 00000000000..b850506a64c",
                "--- /dev/null",
                "+++ b/solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_too_many_rows.json",
                "@@ -0,0 +1,27 @@",
                "+{",
                "+    \"class\":\"org.apache.solr.ltr.model.NeuralNetworkModel\",",
                "+    \"name\":\"neuralnetworkmodel_too_many_rows\",",
                "+    \"features\":[",
                "+        { \"name\": \"constantOne\"},",
                "+        { \"name\": \"constantTwo\"},",
                "+        { \"name\": \"constantThree\"},",
                "+        { \"name\": \"constantFour\"}",
                "+    ],",
                "+    \"params\":{",
                "+        \"layers\": [",
                "+            {",
                "+                \"matrix\": [ [ 1.0, 2.0, 3.0, 4.0 ],",
                "+                            [ 5.0, 6.0, 7.0, 8.0 ],",
                "+                            [ 9.0, 10.0, 11.0, 12.0 ] ],",
                "+                \"bias\" : [ 13.0, 14.0, 15.0 ],",
                "+                \"activation\": \"relu\"",
                "+            },",
                "+            {",
                "+                \"matrix\": [ [ 16.0, 17.0, 18.0 ],",
                "+                            [ 19.0, 20.0, 21.0 ] ],",
                "+                \"bias\" : [ 19.0 ],",
                "+                \"activation\": \"identity\"",
                "+            }",
                "+        ]",
                "+    }",
                "+}",
                "diff --git a/solr/solr-ref-guide/src/learning-to-rank.adoc b/solr/solr-ref-guide/src/learning-to-rank.adoc",
                "index f0b38110577..b692ed721af 100644",
                "--- a/solr/solr-ref-guide/src/learning-to-rank.adoc",
                "+++ b/solr/solr-ref-guide/src/learning-to-rank.adoc",
                "@@ -89,2 +89,3 @@ Feature selection and model training take place offline and outside Solr. The lt",
                " |Multiple Additive Trees |{solr-javadocs}/solr-ltr/org/apache/solr/ltr/model/MultipleAdditiveTreesModel.html[MultipleAdditiveTreesModel] |LambdaMART, Gradient Boosted Regression Trees (GBRT)",
                "+|Neural Network |{solr-javadocs}/solr-ltr/org/apache/solr/ltr/model/NeuralNetworkModel.html[NeuralNetworkModel] |RankNet",
                " |(wrapper) |{solr-javadocs}/solr-ltr/org/apache/solr/ltr/model/DefaultWrapperModel.html[DefaultWrapperModel] |(not applicable)"
            ],
            "changed_files": [
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/model/NeuralNetworkModel.java",
                "solr/contrib/ltr/src/test-files/featureExamples/neuralnetworkmodel_features.json",
                "solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_bad_activation.json",
                "solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_custom.json",
                "solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_explainable.json",
                "solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_bias.json",
                "solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_input.json",
                "solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_mismatch_layers.json",
                "solr/contrib/ltr/src/test-files/modelExamples/neuralnetworkmodel_too_many_rows.json",
                "solr/solr-ref-guide/src/learning-to-rank.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11597": ""
            },
            "ghissue_refs": {
                "270": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "caa43c55c4a27eeba94d59d574b996e41493f145"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: network",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file, network",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11597",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 270",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2a158c2ca56ed1dbe5f258203986388faf6afdca",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519769076,
            "hunks": 131,
            "message": "Ref Guide: Copy editing changes committed for 7.3 & fixing typos",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/about-this-guide.adoc b/solr/solr-ref-guide/src/about-this-guide.adoc",
                "index 5b8502f20c7..3d7fc245fff 100644",
                "--- a/solr/solr-ref-guide/src/about-this-guide.adoc",
                "+++ b/solr/solr-ref-guide/src/about-this-guide.adoc",
                "@@ -48,3 +48,3 @@ In many cases, this is is in the `server/solr` directory of your installation. H",
                "-In several cases of this Guide, our examples are built from the the \"techproducts\" example (i.e., you have started solr with the command `bin/solr -e techproducts`). In this case, `solr.home` will be a sub-directory of the `example/` directory created for you automatically.",
                "+In several cases of this Guide, our examples are built from the the \"techproducts\" example (i.e., you have started Solr with the command `bin/solr -e techproducts`). In this case, `solr.home` will be a sub-directory of the `example/` directory created for you automatically.",
                "diff --git a/solr/solr-ref-guide/src/analyzers.adoc b/solr/solr-ref-guide/src/analyzers.adoc",
                "index 343fd306b48..2edfe9c72fd 100644",
                "--- a/solr/solr-ref-guide/src/analyzers.adoc",
                "+++ b/solr/solr-ref-guide/src/analyzers.adoc",
                "@@ -90,3 +90,3 @@ At query time, the only normalization that happens is to convert the query terms",
                "-In some types of queries (i.e., Prefix, Wildcard, Regex, etc...) the input provided by the user is not natural language intended for Analysis. Things like Synonyms or Stop word filtering do not work in a logical way in these types of Queries.",
                "+In some types of queries (i.e., Prefix, Wildcard, Regex, etc.) the input provided by the user is not natural language intended for Analysis. Things like Synonyms or Stop word filtering do not work in a logical way in these types of Queries.",
                "diff --git a/solr/solr-ref-guide/src/collapse-and-expand-results.adoc b/solr/solr-ref-guide/src/collapse-and-expand-results.adoc",
                "index 67a2980ae4f..d967b93150e 100644",
                "--- a/solr/solr-ref-guide/src/collapse-and-expand-results.adoc",
                "+++ b/solr/solr-ref-guide/src/collapse-and-expand-results.adoc",
                "@@ -29,3 +29,3 @@ In order to use these features with SolrCloud, the documents must be located on",
                "-The `CollapsingQParser` is really a _post filter_ that provides more performant field collapsing than Solr's standard approach when the number of distinct groups in the result set is high. This parser collapses the result set to a single document per group before it forwards the result set to the rest of the search components. So all downstream components (faceting, highlighting, etc...) will work with the collapsed result set.",
                "+The `CollapsingQParser` is really a _post filter_ that provides more performant field collapsing than Solr's standard approach when the number of distinct groups in the result set is high. This parser collapses the result set to a single document per group before it forwards the result set to the rest of the search components. So all downstream components (faceting, highlighting, etc.) will work with the collapsed result set.",
                "diff --git a/solr/solr-ref-guide/src/collections-api.adoc b/solr/solr-ref-guide/src/collections-api.adoc",
                "index b2d3cc4c259..dee5443111e 100644",
                "--- a/solr/solr-ref-guide/src/collections-api.adoc",
                "+++ b/solr/solr-ref-guide/src/collections-api.adoc",
                "@@ -521,3 +521,3 @@ http://localhost:8983/solr/admin/collections?action=CREATEALIAS&name=testalias&c",
                " [[createroutedalias]]",
                "-== CREATEROUTEDALIAS: Create an alias that partitions data",
                "+== CREATEROUTEDALIAS: Create an Alias that Partitions Data",
                "@@ -530,15 +530,18 @@ automatically on the fly as new data arrives based on the parameters supplied in",
                "-*NOTE* Presently only partitioning of time based data is available, though other schemes may become available in",
                "+NOTE: Presently only partitioning of time-based data is available, though other schemes may become available in",
                " the future.",
                "+",
                " [source,text]",
                " ----",
                "-localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=timedata&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                "+admin/collections?action=CREATEROUTEDALIAS&name=timedata&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                " ----",
                "-If run on Jan 15, 2018 The above will create an alias named timedata, that contains collections with names such as",
                "+If run on Jan 15, 2018, the above will create an alias named \"timedata\", that contains collections with names such as",
                " `timedata` and an initial collection named `timedata_2018_01_15`. Updates sent to this alias with a (required) value",
                " in `evt_dt` that is before or after 2018-01-15 will be rejected, until the last 60 minutes of 2018-01-15. After",
                "-2018-01-15T23:00:00 documents for either 2018-01-15 or 2018-01-16 will be accepted. As soon as the system receives a",
                "+2018-01-15T23:00:00, documents for either 2018-01-15 or 2018-01-16 will be accepted.",
                "+",
                "+As soon as the system receives a",
                " document for an allowable time window for which there is no collection it will automatically create the next required",
                "-collection (and potentially any intervening collections if router.interval is smaller than router.maxFutureMs). Both",
                "+collection (and potentially any intervening collections if `router.interval` is smaller than `router.maxFutureMs`). Both",
                " the initial collection and any subsequent collections will be created using the specified configset. All Collection",
                "@@ -546,6 +549,8 @@ creation parameters other than `name` are allowed, prefixed by `create-collectio",
                "-This means that one could (for example) partition their collections by day, and within each daily collection route",
                "+This means that one could, for example, partition their collections by day, and within each daily collection route",
                " the data to shards based on customer id. Such shards can be of any type (NRT, PULL or TLOG), and rule based replica",
                "-placement strategies may also be used. The values supplied in this command for collection creation will be retained",
                "-in alias metadata, and can be verified by inspecting aliases.json in zookeeper.",
                "+placement strategies may also be used.",
                "+",
                "+The values supplied in this command for collection creation will be retained",
                "+in alias metadata, and can be verified by inspecting `aliases.json` in ZooKeeper.",
                "@@ -559,17 +564,23 @@ naming.",
                " `router.start`::",
                "-The start date/time of data for this time routed alias in Solr's standard date/time format (ISO-8601 or \"NOW\"",
                "-optionally with \"date math\").",
                "+The start date/time of data for this time routed alias in Solr's standard date/time format (i.e., ISO-8601 or \"NOW\"",
                "+optionally with <<working-with-dates.adoc#date-math,date math>>).",
                "++",
                " The first collection created for the alias will be internally named after this value.",
                "-If a document is submitted with an earlier value for router.field then the earliest collection the alias points to then",
                "+If a document is submitted with an earlier value for `router.field` than the earliest collection the alias points to then",
                " it will yield an error since it can't be routed.",
                "++",
                " This date/time MUST NOT have a milliseconds component other than 0.",
                " Particularly, this means `NOW` will fail 999 times out of 1000, though `NOW/SECOND`, `NOW/MINUTE`, etc. will work just fine.",
                "-This param is required.",
                "++",
                "+This parameter is required.",
                " `TZ`::",
                "-The timezone to be used when evaluating any date math in router.start or router.interval.  This is equivalent to the",
                "+The timezone to be used when evaluating any date math in router.start or router.interval. This is equivalent to the",
                " same parameter supplied to search queries, but understand in this case it's persisted with most of the other parameters",
                " as alias metadata.",
                "++",
                " If GMT-4 is supplied for this value then a document dated 2018-01-14T21:00:00:01.2345Z would be stored in the",
                "-myAlias_2018-01-15_01 collection (assumming an interval of +1HOUR). The default timezone is UTC.",
                "+myAlias_2018-01-15_01 collection (assuming an interval of +1HOUR).",
                "++",
                "+The default timezone is UTC.",
                "@@ -580,3 +591,3 @@ This field is required on all incoming documents.",
                " `router.name`::",
                "-The type of routing to use. Presently only `time` is valid.  This param is required.",
                "+The type of routing to use. Presently only `time` is valid.  This parameter is required.",
                "@@ -585,3 +596,5 @@ A date math expression that will be appended to a timestamp to determine the nex",
                " Any date math expression that can be evaluated if appended to a timestamp of the form 2018-01-15T16:17:18 will",
                "-work here. This param is required.",
                "+work here.",
                "++",
                "+This parameter is required.",
                "@@ -590,3 +603,4 @@ The maximum milliseconds into the future that a document is allowed to have in `",
                " without error.  If there was no limit, than an erroneous value could trigger many collections to be created.",
                "-The default is 10 minutes worth.",
                "++",
                "+The default is 10 minutes.",
                "@@ -594,2 +608,3 @@ The default is 10 minutes worth.",
                " A date math expression that results in the oldest collections getting deleted automatically.",
                "++",
                " The date math is relative to the timestamp of a newly created collection (typically close to the current time),",
                "@@ -598,6 +613,8 @@ Collections to be deleted must have a time range that is entirely before the com",
                " Collections are considered for deletion immediately prior to new collections getting created.",
                "-Example: `/DAY-90DAYS`.  The default is not to delete.",
                "+Example: `/DAY-90DAYS`.",
                "++",
                "+The default is not to delete.",
                " `create-collection.*`::",
                "-The * can be replaced with any parameter from the <<create,CREATE>> command except `name`. All other fields",
                "+The * wildcard can be replaced with any parameter from the <<create,CREATE>> command except `name`. All other fields",
                " are identical in requirements and naming except that we insist that the configset be explicitly specified.",
                "@@ -614,3 +631,3 @@ creation of the alias and the values of the associated metadata, you can look in",
                " section and find the `aliases.json` file. The initial collection should also be visible in various parts",
                "-of the admin UI.",
                "+of the Admin UI.",
                "@@ -627,3 +644,3 @@ partiton is to be rejected and collections are created using a config set named",
                " ----",
                "-localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=myTimeData&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                "+http://localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=myTimeData&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                " ----",
                "@@ -643,3 +660,3 @@ localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=myTimeData&r",
                " A somewhat contrived example demonstrating the <<v2-api.adoc#top-v2-api,V2 API>> usage and additional collection creation options.",
                "-Notice that the collection creation fields follow the v2 api naming convention, not the v1 naming conventions.",
                "+Notice that the collection creation parameters follow the v2 API naming convention, not the v1 naming conventions.",
                "@@ -957,3 +974,3 @@ If the exact shard name is not known, users may pass the `\\_route_` value and th",
                " +",
                "-Ignored if the `shard` param is also specified.",
                "+Ignored if the `shard` parameter is also specified.",
                "@@ -1991,3 +2008,3 @@ WARNING: This is an expert level command, and should be invoked only when regula",
                "-A expert level utility API to move a collection from shared `clusterstate.json` zookeeper node (created with `stateFormat=1`, the default in all Solr releases prior to 5.0) to the per-collection `state.json` stored in ZooKeeper (created with `stateFormat=2`, the current default) seamlessly without any application down-time.",
                "+A expert level utility API to move a collection from shared `clusterstate.json` ZooKeeper node (created with `stateFormat=1`, the default in all Solr releases prior to 5.0) to the per-collection `state.json` stored in ZooKeeper (created with `stateFormat=2`, the current default) seamlessly without any application down-time.",
                "@@ -2106,3 +2123,3 @@ The source node from which the replicas need to be copied from. This parameter i",
                " `targetNode`::",
                "-The target node where replicas will be copied. If this parameter is not provided, Solr would identify nodes automatically based on policies or no:of cores in each node",
                "+The target node where replicas will be copied. If this parameter is not provided, Solr will identify nodes automatically based on policies or number of cores in each node.",
                "diff --git a/solr/solr-ref-guide/src/command-line-utilities.adoc b/solr/solr-ref-guide/src/command-line-utilities.adoc",
                "index ae88327c7af..1e588e4212b 100644",
                "--- a/solr/solr-ref-guide/src/command-line-utilities.adoc",
                "+++ b/solr/solr-ref-guide/src/command-line-utilities.adoc",
                "@@ -113,3 +113,3 @@ If you are on Windows machine, simply replace `zkcli.sh` with `zkcli.bat` in the",
                " ====",
                "-Using the boostrap command with a zookeeper chroot in the `-zkhost` parameter, e.g., `-zkhost 127.0.0.1:2181/solr`, will automatically create the chroot path before uploading the configs.",
                "+Using the boostrap command with a ZooKeeper chroot in the `-zkhost` parameter, e.g., `-zkhost 127.0.0.1:2181/solr`, will automatically create the chroot path before uploading the configs.",
                " ====",
                "diff --git a/solr/solr-ref-guide/src/common-query-parameters.adoc b/solr/solr-ref-guide/src/common-query-parameters.adoc",
                "index 0e2f4f02fb5..83ea667f992 100644",
                "--- a/solr/solr-ref-guide/src/common-query-parameters.adoc",
                "+++ b/solr/solr-ref-guide/src/common-query-parameters.adoc",
                "@@ -28,3 +28,3 @@ The defType parameter selects the query parser that Solr should use to process t",
                "-If no defType param is specified, then by default, the <<the-standard-query-parser.adoc#the-standard-query-parser,The Standard Query Parser>> is used. (e.g., `defType=lucene`)",
                "+If no `defType` parameter is specified, then by default, the <<the-standard-query-parser.adoc#the-standard-query-parser,The Standard Query Parser>> is used. (e.g., `defType=lucene`)",
                "@@ -38,8 +38,8 @@ Solr can sort query responses according to:",
                " * <<function-queries.adoc#sort-by-function,Function results>>",
                "-* The value of any primative field (numerics, string, boolean, dates, etc...) which has `docValues=\"true\"` (or `multiValued=\"false\"` and `indexed=\"true\"` in which case the indexed terms will used to build DocValue like structures on the fly at runtime)",
                "+* The value of any primitive field (numerics, string, boolean, dates, etc.) which has `docValues=\"true\"` (or `multiValued=\"false\"` and `indexed=\"true\"`, in which case the indexed terms will used to build DocValue like structures on the fly at runtime)",
                " * A SortableTextField which implicitly uses `docValues=\"true\"` by default to allow sorting on the original input string regardless of the analyzers used for Searching.",
                "-* A single-valued TextField that uses an analyzer (such as the KeywordTokenizer) that produces only a single term per document.  TextField does not support docValues=\"true\", but a DocValue like structure will be built on the fly at runtime.",
                "+* A single-valued TextField that uses an analyzer (such as the KeywordTokenizer) that produces only a single term per document. TextField does not support `docValues=\"true\"`, but a DocValue-like structure will be built on the fly at runtime.",
                " ** *NOTE:* If you want to be able to sort on a field whose contents you want to tokenize to facilitate searching, <<copying-fields.adoc#copying-fields,use a `copyField` directive>> in the the Schema to clone the field. Then search on the field and sort on its clone.",
                "-In the case of primative fields, or SortableTextFields, that are `multiValued=\"true\"` the representantive value used for each doc when sorting depends on the sort direction: The minimum value in each document is used for ascending (`asc`) sorting, while the maximal value in each document is used for descending (`desc`) sorting.  This default behavior is equivilent to explicitly sorting using the 2 argument `<<function-queries.adoc#field-function,field()>>` function: `sort=field(name,min) asc` and `sort=field(name,max) desc`",
                "+In the case of primitive fields, or SortableTextFields, that are `multiValued=\"true\"` the representative value used for each doc when sorting depends on the sort direction: The minimum value in each document is used for ascending (`asc`) sorting, while the maximal value in each document is used for descending (`desc`) sorting.  This default behavior is equivilent to explicitly sorting using the 2 argument `<<function-queries.adoc#field-function,field()>>` function: `sort=field(name,min) asc` and `sort=field(name,max) desc`",
                "diff --git a/solr/solr-ref-guide/src/detecting-languages-during-indexing.adoc b/solr/solr-ref-guide/src/detecting-languages-during-indexing.adoc",
                "index 7caccb72054..61394f108f0 100644",
                "--- a/solr/solr-ref-guide/src/detecting-languages-during-indexing.adoc",
                "+++ b/solr/solr-ref-guide/src/detecting-languages-during-indexing.adoc",
                "@@ -24,3 +24,3 @@ Solr supports three implementations of this feature:",
                " * LangDetect language detection: https://github.com/shuyo/language-detection",
                "-* OpenNLP language detection: http://opennlp.apache.org/docs/1.8.4/manual/opennlp.html#tools.langdetect ",
                "+* OpenNLP language detection: http://opennlp.apache.org/docs/1.8.4/manual/opennlp.html#tools.langdetect",
                "@@ -79,8 +79,8 @@ Here is an example of a minimal OpenNLP `langid` configuration in `solrconfig.xm",
                "-==== OpenNLP-specific parameters ",
                "+==== OpenNLP-specific Parameters",
                " `langid.model`::",
                "-An OpenNLP language detection model. The OpenNLP project provides a pre-trained 103 language model on the http://opennlp.apache.org/models.html[OpenNLP site's model dowload page]. Model training instructions are provided on the http://opennlp.apache.org/docs/1.8.4/manual/opennlp.html#tools.langdetect[OpenNLP website]. This parameter is required. ",
                "+An OpenNLP language detection model. The OpenNLP project provides a pre-trained 103 language model on the http://opennlp.apache.org/models.html[OpenNLP site's model dowload page]. Model training instructions are provided on the http://opennlp.apache.org/docs/1.8.4/manual/opennlp.html#tools.langdetect[OpenNLP website]. This parameter is required.",
                "-==== OpenNLP language codes",
                "+==== OpenNLP Language Codes",
                "diff --git a/solr/solr-ref-guide/src/documents-screen.adoc b/solr/solr-ref-guide/src/documents-screen.adoc",
                "index 3274d4051d2..66b0cd4d16c 100644",
                "--- a/solr/solr-ref-guide/src/documents-screen.adoc",
                "+++ b/solr/solr-ref-guide/src/documents-screen.adoc",
                "@@ -25,4 +25,4 @@ The screen allows you to:",
                "-* Submit JSON, CSV or XML documents in solr-specific format to Solr",
                "-* Upload documents (in JSON, CSV or XML) to Solr",
                "+* Submit JSON, CSV or XML documents in Solr-specific format for indexing",
                "+* Upload documents (in JSON, CSV or XML) for indexing",
                " * Construct documents by selecting fields and field values",
                "@@ -63,3 +63,3 @@ The File Upload option allows choosing a prepared file and uploading it. If usin",
                "-Other document types (e.g Word, PDF etc) can be indexed using the ExtractingRequestHandler (aka Solr Cell). You must modify the Request-Handler to `/update/extract`, which must be defined in your `solrconfig.xml` file with your desired defaults. You should also add `&literal.id` shown in the \"Extracting Request Handler Params\" field so the file chosen is given a unique id.",
                "+Other document types (e.g Word, PDF, etc.) can be indexed using the ExtractingRequestHandler (aka, Solr Cell). You must modify the RequestHandler to `/update/extract`, which must be defined in your `solrconfig.xml` file with your desired defaults. You should also add `&literal.id` shown in the \"Extracting Request Handler Params\" field so the file chosen is given a unique id.",
                " More information can be found at:  <<uploading-data-with-solr-cell-using-apache-tika.adoc#uploading-data-with-solr-cell-using-apache-tika,Uploading Data with Solr Cell using Apache Tika>>",
                "diff --git a/solr/solr-ref-guide/src/enabling-ssl.adoc b/solr/solr-ref-guide/src/enabling-ssl.adoc",
                "index fd6223e0122..b641bfd6807 100644",
                "--- a/solr/solr-ref-guide/src/enabling-ssl.adoc",
                "+++ b/solr/solr-ref-guide/src/enabling-ssl.adoc",
                "@@ -136,3 +136,3 @@ NOTE: ZooKeeper does not support encrypted communication with clients like Solr.",
                "-Before you start any SolrCloud nodes, you must configure your solr cluster properties in ZooKeeper, so that Solr nodes know to communicate via SSL.",
                "+Before you start any SolrCloud nodes, you must configure your Solr cluster properties in ZooKeeper, so that Solr nodes know to communicate via SSL.",
                "@@ -232,3 +232,3 @@ curl on OS X Mavericks (10.9) has degraded SSL support. For more information and",
                "-The curl commands in the following sections will not work with the system `curl` on OS X Yosemite (10.10). Instead, the certificate supplied with the `-E` param must be in PKCS12 format, and the file supplied with the `--cacert` param must contain only the CA certificate, and no key (see <<Convert the Certificate and Key to PEM Format for Use with curl,above>> for instructions on creating this file):",
                "+The curl commands in the following sections will not work with the system `curl` on OS X Yosemite (10.10). Instead, the certificate supplied with the `-E` parameter must be in PKCS12 format, and the file supplied with the `--cacert` parametr must contain only the CA certificate, and no key (see <<Convert the Certificate and Key to PEM Format for Use with curl,above>> for instructions on creating this file):",
                "diff --git a/solr/solr-ref-guide/src/field-types-included-with-solr.adoc b/solr/solr-ref-guide/src/field-types-included-with-solr.adoc",
                "index 3c6259fda87..1e98d8696f4 100644",
                "--- a/solr/solr-ref-guide/src/field-types-included-with-solr.adoc",
                "+++ b/solr/solr-ref-guide/src/field-types-included-with-solr.adoc",
                "@@ -71,3 +71,3 @@ Configuration and usage of PreAnalyzedField is documented in the section  <<work",
                "-|SortableTextField |A specialized version of TextField that allows (and defaults to) `docValues=\"true\"` for sorting on the first 1024 characters of the original string prior to analysis -- the number of characters used for sorting can be overridden with the `maxCharsForDocValues` attribute.",
                "+|SortableTextField |A specialized version of TextField that allows (and defaults to) `docValues=\"true\"` for sorting on the first 1024 characters of the original string prior to analysis. The number of characters used for sorting can be overridden with the `maxCharsForDocValues` attribute.",
                "diff --git a/solr/solr-ref-guide/src/filter-descriptions.adoc b/solr/solr-ref-guide/src/filter-descriptions.adoc",
                "index 267e53b6787..3985e0889f9 100644",
                "--- a/solr/solr-ref-guide/src/filter-descriptions.adoc",
                "+++ b/solr/solr-ref-guide/src/filter-descriptions.adoc",
                "@@ -833,3 +833,3 @@ This filter maps single- or multi-token synonyms, producing a fully correct grap",
                "-Note: although this filter produces correct token graphs, it cannot consume an input token graph correctly.",
                "+NOTE: Although this filter produces correct token graphs, it cannot consume an input token graph correctly.",
                "@@ -1439,3 +1439,3 @@ If you use this filter during indexing, you must follow it with a Flatten Graph",
                "-Note: although this filter produces correct token graphs, it cannot consume an input token graph correctly.",
                "+NOTE: Although this filter produces correct token graphs, it cannot consume an input token graph correctly.",
                "diff --git a/solr/solr-ref-guide/src/getting-started-with-solrcloud.adoc b/solr/solr-ref-guide/src/getting-started-with-solrcloud.adoc",
                "index 2ac319e5b0b..36aff7d913c 100644",
                "--- a/solr/solr-ref-guide/src/getting-started-with-solrcloud.adoc",
                "+++ b/solr/solr-ref-guide/src/getting-started-with-solrcloud.adoc",
                "@@ -126,3 +126,3 @@ bin/solr healthcheck -c gettingstarted",
                "-The healthcheck command gathers basic information about each replica in a collection, such as number of docs, current status (active, down, etc), and address (where the replica lives in the cluster).",
                "+The healthcheck command gathers basic information about each replica in a collection, such as number of docs, current status (active, down, etc.), and address (where the replica lives in the cluster).",
                "@@ -170,3 +170,3 @@ Adding a node to an existing cluster is a bit advanced and involves a little mor",
                " ----",
                "-mkdir <solr.home for new solr node>",
                "+mkdir <solr.home for new Solr node>",
                " cp <existing solr.xml path> <new solr.home>",
                "diff --git a/solr/solr-ref-guide/src/graph-traversal.adoc b/solr/solr-ref-guide/src/graph-traversal.adoc",
                "index 29d2aefb521..9056f381f15 100644",
                "--- a/solr/solr-ref-guide/src/graph-traversal.adoc",
                "+++ b/solr/solr-ref-guide/src/graph-traversal.adoc",
                "@@ -255,3 +255,3 @@ Look closely at step 2. In large graphs, step 2 can lead to a very large travers",
                "-The `nodes` function has the `maxDocFreq` param to allow for filtering out high frequency nodes. The sample code below shows steps 1 and 2 of the recommendation:",
                "+The `nodes` function has the `maxDocFreq` parameter to allow for filtering out high frequency nodes. The sample code below shows steps 1 and 2 of the recommendation:",
                "@@ -435,3 +435,3 @@ There is a filter applied to pull back only records where the \"action:read\". It",
                " +",
                "-Note that it skips high frequency nodes using the `maxDocFreq` param to filter out articles that appear over 10,000 times in the logs. It gathers userIDs and aggregates the counts for each user. This step finds the users that have read the same articles that \"user1\" has read and counts how many of the same articles they have read.",
                "+Note that it skips high frequency nodes using the `maxDocFreq` parameter to filter out articles that appear over 10,000 times in the logs. It gathers userIDs and aggregates the counts for each user. This step finds the users that have read the same articles that \"user1\" has read and counts how many of the same articles they have read.",
                " . The inner `top` expression ranks the users emitted from step 2. It will emit the top 30 users who have the most overlap with user1's reading list.",
                "diff --git a/solr/solr-ref-guide/src/json-facet-api.adoc b/solr/solr-ref-guide/src/json-facet-api.adoc",
                "index b823d53f949..0834d46d4cd 100644",
                "--- a/solr/solr-ref-guide/src/json-facet-api.adoc",
                "+++ b/solr/solr-ref-guide/src/json-facet-api.adoc",
                "@@ -326,4 +326,4 @@ The value of `filter` can be a single query to treat as a filter, or a list of f",
                "-* a string containing a query in solr query syntax",
                "-* a reference to a request parameter containing solr query syntax, of the form: `{param : <request_param_name>}`",
                "+* a string containing a query in Solr query syntax",
                "+* a reference to a request parameter containing Solr query syntax, of the form: `{param : <request_param_name>}`",
                "diff --git a/solr/solr-ref-guide/src/language-analysis.adoc b/solr/solr-ref-guide/src/language-analysis.adoc",
                "index 8d6f73448af..ef476d70804 100644",
                "--- a/solr/solr-ref-guide/src/language-analysis.adoc",
                "+++ b/solr/solr-ref-guide/src/language-analysis.adoc",
                "@@ -513,3 +513,3 @@ Either `dictionary` or `lemmatizerModel` must be provided, and both may be provi",
                "-`dictionary`:: (optional) The path of a lemmatization dictionary file. This path may be an absolute path, or path relative to the Solr config directory. The dictionary file must be encoded as UTF-8, with one entry per line, in the form `word[tab]lemma[tab]part-of-speech`, e.g. `wrote[tab]write[tab]VBD`.",
                "+`dictionary`:: (optional) The path of a lemmatization dictionary file. This path may be an absolute path, or path relative to the Solr config directory. The dictionary file must be encoded as UTF-8, with one entry per line, in the form `word[tab]lemma[tab]part-of-speech`, e.g., `wrote[tab]write[tab]VBD`.",
                "@@ -1774,2 +1774,2 @@ Lucene also includes an example Ukrainian stopword list, in the `lucene-analyzer",
                "-The Morfologik `dictionary` param value is a constant specifying which dictionary to choose. The dictionary resource must be named `path/to/_language_.dict` and have an associated `.info` metadata file. See http://morfologik.blogspot.com/[the Morfologik project] for details. If the dictionary attribute is not provided, the Polish dictionary is loaded and used by default.",
                "+The Morfologik `dictionary` parameter value is a constant specifying which dictionary to choose. The dictionary resource must be named `path/to/_language_.dict` and have an associated `.info` metadata file. See http://morfologik.blogspot.com/[the Morfologik project] for details. If the dictionary attribute is not provided, the Polish dictionary is loaded and used by default.",
                "diff --git a/solr/solr-ref-guide/src/learning-to-rank.adoc b/solr/solr-ref-guide/src/learning-to-rank.adoc",
                "index b44e85a9ce2..f0b38110577 100644",
                "--- a/solr/solr-ref-guide/src/learning-to-rank.adoc",
                "+++ b/solr/solr-ref-guide/src/learning-to-rank.adoc",
                "@@ -372,3 +372,3 @@ Read more about model evolution in the <<LTR Lifecycle>> section of this page.",
                "-Example training data and a demo 'train and upload model' script can be found in the `solr/contrib/ltr/example` folder in the https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git[Apache lucene-solr git repository] which is mirrored on https://github.com/apache/lucene-solr/tree/releases/lucene-solr/6.4.0/solr/contrib/ltr/example[github.com] (the `solr/contrib/ltr/example` folder is not shipped in the solr binary release).",
                "+Example training data and a demo 'train and upload model' script can be found in the `solr/contrib/ltr/example` folder in the https://git-wip-us.apache.org/repos/asf?p=lucene-solr.git[Apache lucene-solr git repository] which is mirrored on https://github.com/apache/lucene-solr/tree/releases/lucene-solr/6.4.0/solr/contrib/ltr/example[github.com] (the `solr/contrib/ltr/example` folder is not shipped in the Solr binary release).",
                "diff --git a/solr/solr-ref-guide/src/major-changes-in-solr-7.adoc b/solr/solr-ref-guide/src/major-changes-in-solr-7.adoc",
                "index c351cfb6dd9..9689d276d01 100644",
                "--- a/solr/solr-ref-guide/src/major-changes-in-solr-7.adoc",
                "+++ b/solr/solr-ref-guide/src/major-changes-in-solr-7.adoc",
                "@@ -170,3 +170,3 @@ The following changes were made in SolrJ.",
                " * `HttpSolrClient#setAllowCompression` has been removed and compression must be enabled as a constructor param.",
                "-* `HttpSolrClient#setDefaultMaxConnectionsPerHost` and `HttpSolrClient#setMaxTotalConnections` have been removed. These now default very high and can only be changed via param when creating an HttpClient instance.",
                "+* `HttpSolrClient#setDefaultMaxConnectionsPerHost` and `HttpSolrClient#setMaxTotalConnections` have been removed. These now default very high and can only be changed via parameter when creating an HttpClient instance.",
                "diff --git a/solr/solr-ref-guide/src/merging-indexes.adoc b/solr/solr-ref-guide/src/merging-indexes.adoc",
                "index 2bcd49366d8..740ee333fc8 100644",
                "--- a/solr/solr-ref-guide/src/merging-indexes.adoc",
                "+++ b/solr/solr-ref-guide/src/merging-indexes.adoc",
                "@@ -40,3 +40,3 @@ java -cp $SOLR/server/solr-webapp/webapp/WEB-INF/lib/lucene-core-VERSION.jar:$SO",
                " This will create a new index at `/path/to/newindex` that contains both index1 and index2.",
                "-. Copy this new directory to the location of your application's solr index (move the old one aside first, of course) and start Solr.",
                "+. Copy this new directory to the location of your application's Solr index (move the old one aside first, of course) and start Solr.",
                "diff --git a/solr/solr-ref-guide/src/meta-docs/publish.adoc b/solr/solr-ref-guide/src/meta-docs/publish.adoc",
                "index d97754e1484..5ad35b2e522 100644",
                "--- a/solr/solr-ref-guide/src/meta-docs/publish.adoc",
                "+++ b/solr/solr-ref-guide/src/meta-docs/publish.adoc",
                "@@ -202,3 +202,3 @@ svn -m \"Add Ref Guide for Solr 6.5\" import <checkoutroot>/solr/build/solr-ref-gu",
                "-Confirm you can browse to these URLs manually, and especially that solr javadocs link back to lucene's correctly. Example:",
                "+Confirm you can browse to these URLs manually, and especially that Solr javadocs link back to lucene's correctly. Example:",
                " https://lucene.apache.org/solr/guide/6_5",
                "diff --git a/solr/solr-ref-guide/src/metrics-reporting.adoc b/solr/solr-ref-guide/src/metrics-reporting.adoc",
                "index d9b4c5fe6e1..936adcbff95 100644",
                "--- a/solr/solr-ref-guide/src/metrics-reporting.adoc",
                "+++ b/solr/solr-ref-guide/src/metrics-reporting.adoc",
                "@@ -66,3 +66,3 @@ The <<Core Level Metrics,Core (SolrCore) Registry>> includes `solr.core.<collect",
                "-* all common RequestHandler-s report: request timers / counters, timeouts, errors. Handlers that support",
                "+* all common RequestHandlers report: request timers / counters, timeouts, errors. Handlers that support",
                "   process distributed shard requests also report `shardRequests` sub-counters for each type of distributed",
                "@@ -79,3 +79,3 @@ This registry is returned at `solr.jetty` and includes the following information",
                " * connection and request timers,",
                "-* meters for responses by HTTP class (1xx, 2xx, etc)",
                "+* meters for responses by HTTP class (1xx, 2xx, etc.)",
                "@@ -320,3 +320,3 @@ and from any local registry to the Overseer node.",
                "-Metric reports from these reporters are periodically sent as batches of regular SolrInputDocument-s,",
                "+Metric reports from these reporters are periodically sent as batches of regular SolrInputDocuments,",
                " so they can be processed by any Solr handler. By default they are sent to `/admin/metrics/collector` handler",
                "@@ -516,14 +516,14 @@ A few query parameters are available to limit your request to only certain metri",
                "-group:: The metric group to retrieve. The default is `all` to retrieve all metrics for all groups. Other possible values are: `jvm`, `jetty`, `node`, and `core`. More than one group can be specified in a request; multiple group names should be separated by a comma.",
                "+`group`:: The metric group to retrieve. The default is `all` to retrieve all metrics for all groups. Other possible values are: `jvm`, `jetty`, `node`, and `core`. More than one group can be specified in a request; multiple group names should be separated by a comma.",
                "-type:: The type of metric to retrieve. The default is `all` to retrieve all metric types. Other possible values are `counter`, `gauge`, `histogram`, `meter`, and `timer`. More than one type can be specified in a request; multiple types should be separated by a comma.",
                "+`type`:: The type of metric to retrieve. The default is `all` to retrieve all metric types. Other possible values are `counter`, `gauge`, `histogram`, `meter`, and `timer`. More than one type can be specified in a request; multiple types should be separated by a comma.",
                "-prefix:: The first characters of metric name that will filter the metrics returned to those starting with the provided string. It can be combined with `group` and/or `type` parameters. More than one prefix can be specified in a request; multiple prefixes should be separated by a comma. Prefix matching is also case-sensitive.",
                "+`prefix`:: The first characters of metric name that will filter the metrics returned to those starting with the provided string. It can be combined with `group` and/or `type` parameters. More than one prefix can be specified in a request; multiple prefixes should be separated by a comma. Prefix matching is also case-sensitive.",
                "-regex:: A regular expression matching metric names. Note: dot separators in metric names must be escaped, eg.",
                "+`regex`:: A regular expression matching metric names. Note: dot separators in metric names must be escaped, eg.",
                " `QUERY\\./select\\..*` is a valid regex that matches all metrics with the `QUERY./select.` prefix.",
                "-property:: Allows requesting only this metric from any compound metric. Multiple `property` parameters can be combined to act as an OR request. For example, to only get the 99th and 999th percentile values from all metric types and groups, you can add `&property=p99_ms&property=p999_ms` to your request. This can be combined with `group`, `type`, and `prefix` as necessary.",
                "+`property`:: Allows requesting only this metric from any compound metric. Multiple `property` parameters can be combined to act as an OR request. For example, to only get the 99th and 999th percentile values from all metric types and groups, you can add `&property=p99_ms&property=p999_ms` to your request. This can be combined with `group`, `type`, and `prefix` as necessary.",
                "-key:: fully-qualified metric name, which specifies one concrete metric instance (parameter can be",
                "+`key`:: fully-qualified metric name, which specifies one concrete metric instance (parameter can be",
                " specified multiple times to retrieve multiple concrete metrics). *NOTE: when this parameter is used, other",
                "@@ -537,6 +537,7 @@ character. Examples:",
                "-compact:: When false, a more verbose format of the response will be returned. Instead of a response like this:",
                "+`compact`:: When false, a more verbose format of the response will be returned. Instead of a response like this:",
                " +",
                " [source,json]",
                "-  \"metrics\": [",
                "+----",
                "+{\"metrics\": [",
                "     \"solr.core.gettingstarted\",",
                "@@ -562,3 +563,4 @@ compact:: When false, a more verbose format of the response will be returned. In",
                "     }",
                "-  ]",
                "+  ]}",
                "+----",
                " +",
                "@@ -567,3 +569,4 @@ The response will look like this:",
                " [source,json]",
                "-  \"metrics\": [",
                "+----",
                "+{\"metrics\": [",
                "     \"solr.core.gettingstarted\",",
                "@@ -579,3 +582,4 @@ The response will look like this:",
                "     }",
                "-  ]",
                "+  ]}",
                "+----",
                "diff --git a/solr/solr-ref-guide/src/near-real-time-searching.adoc b/solr/solr-ref-guide/src/near-real-time-searching.adoc",
                "index fe91094eb84..00724c5205a 100644",
                "--- a/solr/solr-ref-guide/src/near-real-time-searching.adoc",
                "+++ b/solr/solr-ref-guide/src/near-real-time-searching.adoc",
                "@@ -53,3 +53,3 @@ Transaction logs are a \"rolling window\" of updates since the last hard commit. T",
                "-When tlogs are enabled, documents being added to the index are written to the tlog before the indexing call returns to the client. In the event of an un-graceful shutdown (power loss, JVM crash, `kill -9` etc) any documents written to the tlog but not yet committed with a hard commit when Solr was stopped are replayed on startup. Therefore the data is not lost.",
                "+When tlogs are enabled, documents being added to the index are written to the tlog before the indexing call returns to the client. In the event of an un-graceful shutdown (power loss, JVM crash, `kill -9`, etc.) any documents written to the tlog but not yet committed with a hard commit when Solr was stopped are replayed on startup. Therefore the data is not lost.",
                "@@ -87,2 +87,2 @@ TIP: For extremely high bulk indexing, especially for the initial load if there",
                "-All varieties of commits can be invoked from a SolrJ client or via a URL. The usual recommendation is to _not_ call commits externally. For those cases where it is desirable, see <<uploading-data-with-index-handlers.adoc#xml-update-commands,Update Commands>>. These options are listed for XML update commands that can be issued from a browser or curl etc and the equivalents are available from a SolrJ client.",
                "+All varieties of commits can be invoked from a SolrJ client or via a URL. The usual recommendation is to _not_ call commits externally. For those cases where it is desirable, see <<uploading-data-with-index-handlers.adoc#xml-update-commands,Update Commands>>. These options are listed for XML update commands that can be issued from a browser or curl, etc., and the equivalents are available from a SolrJ client.",
                "diff --git a/solr/solr-ref-guide/src/other-parsers.adoc b/solr/solr-ref-guide/src/other-parsers.adoc",
                "index 670aefd3304..14bed10fc77 100644",
                "--- a/solr/solr-ref-guide/src/other-parsers.adoc",
                "+++ b/solr/solr-ref-guide/src/other-parsers.adoc",
                "@@ -426,3 +426,3 @@ http://localhost:8983/solr/my_graph/query?fl=id&q={!graph+from=in_edge+to=out_ed",
                "-The examples shown so far have all used a query for a single document (`\"id:A\"`) as the root node for the graph traversal, but any query can be used to identify multiple documents to use as root nodes. The next example demonstrates using the `maxDepth` param to find all nodes that are at most one edge away from an root node with a value in the `foo` field less then or equal to 10:",
                "+The examples shown so far have all used a query for a single document (`\"id:A\"`) as the root node for the graph traversal, but any query can be used to identify multiple documents to use as root nodes. The next example demonstrates using the `maxDepth` parameter to find all nodes that are at most one edge away from an root node with a value in the `foo` field less then or equal to 10:",
                "@@ -468,3 +468,3 @@ curl -H 'Content-Type: application/json' 'http://localhost:8983/solr/alt_graph/u",
                "-With this alternative document model, all of the same queries demonstrated above can still be executed, simply by changing the \"```from```\" param to replace the \"```in_edge```\" field with the \"```id```\" field:",
                "+With this alternative document model, all of the same queries demonstrated above can still be executed, simply by changing the \"```from```\" parameter to replace the \"```in_edge```\" field with the \"```id```\" field:",
                "diff --git a/solr/solr-ref-guide/src/other-schema-elements.adoc b/solr/solr-ref-guide/src/other-schema-elements.adoc",
                "index d662dcef2b5..54224ecad07 100644",
                "--- a/solr/solr-ref-guide/src/other-schema-elements.adoc",
                "+++ b/solr/solr-ref-guide/src/other-schema-elements.adoc",
                "@@ -94,2 +94,2 @@ If `SchemaSimilarityFactory` is explicitly declared without configuring a `defau",
                "-In addition to the various factories mentioned on this page, there are several other similarity implementations that can be used such as the `SweetSpotSimilarityFactory`, `ClassicSimilarityFactory`, etc.... For details, see the Solr Javadocs for the {solr-javadocs}/solr-core/org/apache/solr/schema/SimilarityFactory.html[similarity factories].",
                "+In addition to the various factories mentioned on this page, there are several other similarity implementations that can be used such as the `SweetSpotSimilarityFactory`, `ClassicSimilarityFactory`, etc. For details, see the Solr Javadocs for the {solr-javadocs}/solr-core/org/apache/solr/schema/SimilarityFactory.html[similarity factories].",
                "diff --git a/solr/solr-ref-guide/src/pagination-of-results.adoc b/solr/solr-ref-guide/src/pagination-of-results.adoc",
                "index bb21e03742e..f3deac7a993 100644",
                "--- a/solr/solr-ref-guide/src/pagination-of-results.adoc",
                "+++ b/solr/solr-ref-guide/src/pagination-of-results.adoc",
                "@@ -41,3 +41,3 @@ function fetch_solr_page($page_number, $rows_per_page) {",
                "-The `start` param specified in a request to Solr indicates an *absolute* \"offset\" in the complete sorted list of matches that the client wants Solr to use as the beginning of the current \"page\".",
                "+The `start` parameter specified in a request to Solr indicates an *absolute* \"offset\" in the complete sorted list of matches that the client wants Solr to use as the beginning of the current \"page\".",
                "diff --git a/solr/solr-ref-guide/src/post-tool.adoc b/solr/solr-ref-guide/src/post-tool.adoc",
                "index c692995f584..3d736b52bab 100644",
                "--- a/solr/solr-ref-guide/src/post-tool.adoc",
                "+++ b/solr/solr-ref-guide/src/post-tool.adoc",
                "@@ -127,3 +127,3 @@ bin/post -c gettingstarted *.json",
                "-=== Indexing Rich Documents (PDF, Word, HTML, etc)",
                "+=== Indexing Rich Documents (PDF, Word, HTML, etc.)",
                "@@ -152,3 +152,3 @@ bin/post -c gettingstarted -filetypes ppt,html afolder/",
                "-Index a pdf as the user solr with password `SolrRocks`:",
                "+Index a PDF as the user \"solr\" with password \"SolrRocks\":",
                "diff --git a/solr/solr-ref-guide/src/running-solr-on-hdfs.adoc b/solr/solr-ref-guide/src/running-solr-on-hdfs.adoc",
                "index 62c6d9ee265..1aee1a6a67c 100644",
                "--- a/solr/solr-ref-guide/src/running-solr-on-hdfs.adoc",
                "+++ b/solr/solr-ref-guide/src/running-solr-on-hdfs.adoc",
                "@@ -220,3 +220,3 @@ curl -X POST -H 'Content-type: application/json' -d '{\"set-property\": {\"name\":\"a",
                "-Re-enable automatic addition of replicas (for those collections created with `autoAddReplica=true`) by unsetting the `autoAddReplicas` cluster property. When no `val` param is provided, the cluster property is unset:",
                "+Re-enable automatic addition of replicas (for those collections created with `autoAddReplica=true`) by unsetting the `autoAddReplicas` cluster property. When no `val` parameter is provided, the cluster property is unset:",
                "diff --git a/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc b/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc",
                "index a88d97763d0..09d62fd5e7a 100644",
                "--- a/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc",
                "+++ b/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc",
                "@@ -50,5 +50,5 @@ image::images/solr-jdbc-apache-zeppelin/zeppelin_solrjdbc_5.png[image,width=839,",
                "-To facilitate easy copying the parameters mentioned in the screenshots, here is a consolidated list",
                "+To facilitate easy copying the parameters mentioned in the screenshots, here is a consolidated list of the parameters:",
                "-[source,text]",
                "+[source,text,subs=attributes]",
                " ----",
                "@@ -59,3 +59,3 @@ default.driver : org.apache.solr.client.solrj.io.sql.DriverImpl",
                " default.user : solr",
                "-dependency : org.apache.solr:solr-solrj:-{solr-docs-version}.0",
                "+dependency : org.apache.solr:solr-solrj:{solr-docs-version}.0",
                " ----",
                "diff --git a/solr/solr-ref-guide/src/solr-tutorial.adoc b/solr/solr-ref-guide/src/solr-tutorial.adoc",
                "index 089c5e53523..4abb1305a44 100644",
                "--- a/solr/solr-ref-guide/src/solr-tutorial.adoc",
                "+++ b/solr/solr-ref-guide/src/solr-tutorial.adoc",
                "@@ -269,3 +269,3 @@ Solr has very powerful search options, and this tutorial won't be able to cover",
                "-To search for a term, enter it as the `q` param value in the Solr Admin UI Query screen, replacing `\\*:*` with the term you want to find.",
                "+To search for a term, enter it as the `q` parameter value in the Solr Admin UI Query screen, replacing `\\*:*` with the term you want to find.",
                "diff --git a/solr/solr-ref-guide/src/solrcloud-autoscaling-trigger-actions.adoc b/solr/solr-ref-guide/src/solrcloud-autoscaling-trigger-actions.adoc",
                "index 77ab9c9ae88..5571377fbeb 100644",
                "--- a/solr/solr-ref-guide/src/solrcloud-autoscaling-trigger-actions.adoc",
                "+++ b/solr/solr-ref-guide/src/solrcloud-autoscaling-trigger-actions.adoc",
                "@@ -34,3 +34,3 @@ the computed operations will only calculate collection operations that affect",
                " listed collections and ignore any other collection operations for collections",
                "-not listed here (please note that non-collection operations are not affected by this).",
                "+not listed here. Note that non-collection operations are not affected by this.",
                "@@ -39,17 +39,18 @@ Example configuration:",
                " [source,json]",
                "+----",
                " {",
                "- 'set-trigger' : {",
                "-  'name' : 'node_added_trigger',",
                "-  'event' : 'nodeAdded',",
                "-  'waitFor' : '1s',",
                "-  'enabled' : true,",
                "-  'actions' : [",
                "+ \"set-trigger\" : {",
                "+  \"name\" : \"node_added_trigger\",",
                "+  \"event\" : \"nodeAdded\",",
                "+  \"waitFor\" : \"1s\",",
                "+  \"enabled\" : true,",
                "+  \"actions\" : [",
                "    {",
                "-    'name' : 'compute_plan',",
                "-    'class' : 'solr.ComputePlanAction',",
                "-    'collections' : 'test1,test2',",
                "+    \"name\" : \"compute_plan\",",
                "+    \"class\" : \"solr.ComputePlanAction\",",
                "+    \"collections\" : \"test1,test2\",",
                "    },",
                "    {",
                "-    'name' : 'execute_plan',",
                "-    'class' : 'solr.ExecutePlanAction',",
                "+    \"name\" : \"execute_plan\",",
                "+    \"class\" : \"solr.ExecutePlanAction\",",
                "    }",
                "@@ -58,2 +59,3 @@ Example configuration:",
                " }",
                "+----",
                "diff --git a/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc b/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "index a7a8d520c9f..5ef4023b979 100644",
                "--- a/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "+++ b/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "@@ -34,6 +34,6 @@ Currently the following event types (and corresponding trigger implementations)",
                "-* `nodeAdded` - generated when a new node joins the cluster",
                "-* `nodeLost` - generated when a node leaves the cluster",
                "-* `metric` - generated when the configured metric crosses a configured lower or upper threshold value",
                "-* `searchRate` - generated when the 1 min average search rate exceeds configured upper threshold",
                "+* `nodeAdded`: generated when a new node joins the cluster",
                "+* `nodeLost`: generated when a node leaves the cluster",
                "+* `metric`: generated when the configured metric crosses a configured lower or upper threshold value",
                "+* `searchRate`: generated when the 1-minute average search rate exceeds configured upper threshold",
                "@@ -44,9 +44,13 @@ The following properties are common to all event types:",
                "-* `id` - (string) A unique time-based event id.",
                "-* `eventType` - (string) The type of event.",
                "-* `source` - (string) The name of the trigger that produced this event.",
                "-* `eventTime` - (long) Unix time when the condition that caused this event occurred. For example, for a",
                "+`id`:: (string) A unique time-based event id.",
                "+",
                "+`eventType`:: (string) The type of event.",
                "+",
                "+`source`:: (string) The name of the trigger that produced this event.",
                "+",
                "+`eventTime`:: (long) Unix time when the condition that caused this event occurred. For example, for a",
                " `nodeAdded` event this will be the time when the node was added and not when the event was actually",
                " generated, which may significantly differ due to the rate limits set by `waitFor`.",
                "-* `properties` - (map, optional) Any additional properties. Currently includes `nodeName` property that",
                "+",
                "+`properties`:: (map, optional) Any additional properties. Currently includes `nodeName` property that",
                " indicates the node that was lost or added.",
                "@@ -63,3 +67,3 @@ You can see the section <<solrcloud-autoscaling-auto-add-replicas.adoc#solrcloud",
                "-The metric trigger can be used to monitor any metric exposed by the Metrics API. It supports lower and upper threshold configurations as well as optional filters to limit operation to specific collection, shards and nodes.",
                "+The metric trigger can be used to monitor any metric exposed by the <<metrics-reporting.adoc#metrics-reporting,Metrics API>>. It supports lower and upper threshold configurations as well as optional filters to limit operation to specific collection, shards, and nodes.",
                "@@ -67,11 +71,17 @@ This trigger supports the following configuration:",
                "-* `metric` - (string, required) The metric property name to be watched in the format metrics:group:prefix e.g. `metric:solr.node:CONTAINER.fs.coreRoot.usableSpace`",
                "-* `below` - (double, optional) The lower threshold for the metric value. The trigger produces a metric breached event if the metric's value falls below this value",
                "-* `above` - (double, optional) The upper threshold for the metric value. The trigger produces a metric breached event if the metric's value crosses above this value",
                "-* `collection` - (string, optional) The collection used to limit the nodes on which the given metric is watched. When the metric is breached, trigger actions will limit operations to this collection only.",
                "-* `shard` - (string, optional) The shard used to limit the nodes on which the given metric is watched. When the metric is breached, trigger actions will limit operations to this shard only.",
                "-* `node` - (string, optional) The node on which the given metric is watched. Trigger actions will operate on this node only.",
                "-* `preferredOperation` (string, optional, defaults to `MOVEREPLICA`) - The operation to be performed in response to an event generated by this trigger. By default, replicas will be moved from the hot node to others. The only other supported value is `ADDREPLICA` which adds more replicas if the metric is breached.",
                "+`metric`:: (string, required) The metric property name to be watched in the format metrics:group:prefix, e.g., `metric:solr.node:CONTAINER.fs.coreRoot.usableSpace`.",
                "+",
                "+`below`:: (double, optional) The lower threshold for the metric value. The trigger produces a metric breached event if the metric's value falls below this value.",
                "+",
                "+`above`:: (double, optional) The upper threshold for the metric value. The trigger produces a metric breached event if the metric's value crosses above this value.",
                "-.Example: Metric Trigger that fires when total usable space on a node having replicas of \"mycollection\" falls below 100GB",
                "+`collection`:: (string, optional) The collection used to limit the nodes on which the given metric is watched. When the metric is breached, trigger actions will limit operations to this collection only.",
                "+",
                "+`shard`:: (string, optional) The shard used to limit the nodes on which the given metric is watched. When the metric is breached, trigger actions will limit operations to this shard only.",
                "+",
                "+`node`:: (string, optional) The node on which the given metric is watched. Trigger actions will operate on this node only.",
                "+",
                "+`preferredOperation`:: (string, optional, defaults to `MOVEREPLICA`) The operation to be performed in response to an event generated by this trigger. By default, replicas will be moved from the hot node to others. The only other supported value is `ADDREPLICA` which adds more replicas if the metric is breached.",
                "+",
                "+.Example: a metric trigger that fires when total usable space on a node having replicas of \"mycollection\" falls below 100GB",
                " [source,json]",
                "@@ -90,8 +100,8 @@ This trigger supports the following configuration:",
                "-== Search Rate trigger",
                "+== Search Rate Trigger",
                "-The search rate trigger can be used for monitoring 1-min average search rates in a selected",
                "+The search rate trigger can be used for monitoring 1-minute average search rates in a selected",
                " collection, and request that either replicas be moved to different nodes or new replicas be added",
                "-to reduce the per-replica search rate for a collection / shard with search rate hot spots.",
                "-(Note: future versions of Solr will also be able to automatically remove some replicas",
                "+to reduce the per-replica search rate for a collection or shard with search rate hot spots.",
                "+(Future versions of Solr will also be able to automatically remove some replicas",
                " when search rate falls below the configured lower threshold).",
                "@@ -100,9 +110,13 @@ This trigger support the following configuration:",
                "-* `collection` - (string, optional) collection name to monitor, or any collection if empty",
                "-* `shard` - (string, optional) shard name within the collection (requires `collection` to be set), or any shard if empty",
                "-* `node` - (string, optional) node name to monitor, or any if empty",
                "-* `handler` - (string, optional) handler name whose request rate represents the search rate",
                "+`collection`:: (string, optional) collection name to monitor, or any collection if empty.",
                "+",
                "+`shard`:: (string, optional) shard name within the collection (requires `collection` to be set), or any shard if empty.",
                "+",
                "+`node`:: (string, optional) node name to monitor, or any if empty.",
                "+",
                "+`handler`:: (string, optional) handler name whose request rate represents the search rate",
                " (default is `/select`). This name is used for creating the full metric key, in",
                "-this case `solr.core.<coreName>:QUERY./select.requestTimes:1minRate`",
                "-* `rate` - (double, required) the upper bound for the request rate metric value.",
                "+this case `solr.core.<coreName>:QUERY./select.requestTimes:1minRate`.",
                "+",
                "+`rate`:: (double, required) the upper bound for the request rate metric value.",
                "@@ -110,3 +124,3 @@ If a rate is exceeded for a node (but not for individual replicas placed on this",
                " the action requested by this event is to move one replica (with the highest rate) to another",
                "-node. If a rate is exceeded for a collection / shard then the action requested is to add some",
                "+node. If a rate is exceeded for a collection or shard then the action requested is to add some",
                " replicas - currently at least 1 and at most 3, depending on how much the rate is exceeded, proportional to",
                "@@ -114,3 +128,3 @@ the threshold rate and the current request rate.",
                "-.Example: a trigger configuration that monitors collection \"test\" and adds new replicas if 1-min average request rate of \"/select\" handler exceeds 100 reqs/sec:",
                "+.Example: a search rate trigger that monitors collection \"test\" and adds new replicas if 1-minute average request rate of \"/select\" handler exceeds 100 requests/sec:",
                " [source,json]",
                "@@ -146,8 +160,13 @@ Trigger configuration consists of the following properties:",
                "-* `name` - (string, required) A unique trigger configuration name.",
                "-* `event` - (string, required) One of the predefined event types (`nodeAdded` or `nodeLost`).",
                "-* `actions` - (list of action configs, optional) An ordered list of actions to execute when event is fired.",
                "-* `waitFor` - (string, optional) The time to wait between generating new events, as an integer number immediately followed by unit symbol, one of `s` (seconds), `m` (minutes), or `h` (hours). Default is `0s`.",
                "-* `enabled` - (boolean, optional) When `true` the trigger is enabled. Default is `true`.",
                "-* Additional implementation-specific properties may be provided.",
                "+`name`:: (string, required) A unique trigger configuration name.",
                "+",
                "+`event`:: (string, required) One of the predefined event types (`nodeAdded` or `nodeLost`).",
                "+",
                "+`actions`:: (list of action configs, optional) An ordered list of actions to execute when event is fired.",
                "+",
                "+`waitFor`:: (string, optional) The time to wait between generating new events, as an integer number immediately followed by unit symbol, one of `s` (seconds), `m` (minutes), or `h` (hours). Default is `0s`.",
                "+",
                "+`enabled`:: (boolean, optional) When `true` the trigger is enabled. Default is `true`.",
                "+",
                "+Additional implementation-specific properties may be provided.",
                "@@ -155,9 +174,11 @@ Action configuration consists of the following properties:",
                "-* `name` - (string, required) A unique name of the action configuration.",
                "-* `class` - (string, required) The action implementation class.",
                "-* Additional implementation-specific properties may be provided",
                "+`name`:: (string, required) A unique name of the action configuration.",
                "+",
                "+`class`:: (string, required) The action implementation class.",
                "+",
                "+Additional implementation-specific properties may be provided",
                "-If the Action configuration is omitted, then by default, the `ComputePlanAction` and the `ExecutePlanAction` are automatically added to the trigger configuration.",
                "+If the `actions` configuration is omitted, then by default, the `ComputePlanAction` and the `ExecutePlanAction` are automatically added to the trigger configuration.",
                "-.Example: adding or updating a trigger for `nodeAdded` events ",
                "+.Example: adding or updating a trigger for `nodeAdded` events",
                " [source,json]",
                "diff --git a/solr/solr-ref-guide/src/spell-checking.adoc b/solr/solr-ref-guide/src/spell-checking.adoc",
                "index 9936ece1ead..7911b84d2c1 100644",
                "--- a/solr/solr-ref-guide/src/spell-checking.adoc",
                "+++ b/solr/solr-ref-guide/src/spell-checking.adoc",
                "@@ -194,3 +194,3 @@ This parameter specifies the maximum number of suggestions that the spellchecker",
                " `spellcheck.queryAnalyzerFieldtype`::",
                "-This field type's analyzer is used by the QueryConverter to tokenize the value for \"q\" parameter. The field specified by this parameter should do minimal transformations, it's usually a best practice to avoid types that aggressively stem or ngram for instance.",
                "+A field type from Solr's schema. The analyzer configured for the provided field type is used by the QueryConverter to tokenize the value for \"q\" parameter. The field type specified by this parameter should do minimal transformations. It's usually a best practice to avoid types that aggressively stem or NGram, for instance, since those types of analysis can throw off spell checking.",
                "diff --git a/solr/solr-ref-guide/src/stream-decorator-reference.adoc b/solr/solr-ref-guide/src/stream-decorator-reference.adoc",
                "index cfdfb1111d8..61608c8fe52 100644",
                "--- a/solr/solr-ref-guide/src/stream-decorator-reference.adoc",
                "+++ b/solr/solr-ref-guide/src/stream-decorator-reference.adoc",
                "@@ -551,3 +551,3 @@ topicQueryparams.put(\"fl\", \"id\", \"title\"); // The field list to return with the",
                "-TopicStream topicStream = new TopicStream(zkHost,        // Host address for the zookeeper service housing the collections",
                "+TopicStream topicStream = new TopicStream(zkHost,        // Host address for the ZooKeeper service housing the collections",
                "                                          \"checkpoints\",  // The collection to store the topic checkpoints",
                "@@ -1090,3 +1090,3 @@ See section in <<graph-traversal.adoc#using-the-scorenodes-function-to-make-a-re",
                "-The `select` function wraps a streaming expression and outputs tuples containing a subset or modified set of fields from the incoming tuples. The list of fields included in the output tuple can contain aliases to effectively rename fields. The `select` stream supports both operations and evaluators. One can provide a list of operations and evaluators to perform on any fields, such as `replace, add, if`, etc....",
                "+The `select` function wraps a streaming expression and outputs tuples containing a subset or modified set of fields from the incoming tuples. The list of fields included in the output tuple can contain aliases to effectively rename fields. The `select` stream supports both operations and evaluators. One can provide a list of operations and evaluators to perform on any fields, such as `replace, add, if`, etc.",
                "diff --git a/solr/solr-ref-guide/src/stream-evaluator-reference.adoc b/solr/solr-ref-guide/src/stream-evaluator-reference.adoc",
                "index 4938a29dfd4..3bf819bbc41 100644",
                "--- a/solr/solr-ref-guide/src/stream-evaluator-reference.adoc",
                "+++ b/solr/solr-ref-guide/src/stream-evaluator-reference.adoc",
                "@@ -332,3 +332,3 @@ colAt(matrix, 10)",
                "-numeric array : the column of the matrix",
                "+numeric array: the column of the matrix",
                "@@ -349,3 +349,3 @@ columnCount(matrix)",
                "-integer : number columns in the matrix.",
                "+integer: number columns in the matrix.",
                "@@ -966,3 +966,3 @@ also set attributes on the `matrix` with additional information. The `setAttribu",
                " to set attributes on a `matrix`. The key to an attribute is always a string. The value of attribute can be any object",
                "-including numerics, arrays, maps, matrixes etc...",
                "+including numerics, arrays, maps, matrixes, etc.",
                "@@ -970,4 +970,4 @@ including numerics, arrays, maps, matrixes etc...",
                "-* `matrix` : The matrix to set the attribute on",
                "-* `string` : The key for the attribute",
                "+* `matrix`: The matrix to set the attribute on",
                "+* `string`: The key for the attribute",
                "@@ -980,3 +980,3 @@ getAttribute(matrix, key)",
                "-object : any object",
                "+object: any object",
                "@@ -989,3 +989,3 @@ on attributes.",
                "-* `matrix` : The matrix to retrieve the attribute map from.",
                "+* `matrix`: The matrix to retrieve the attribute map from.",
                "@@ -998,3 +998,3 @@ getAttributes(matrix)",
                "-map : The map of attributes.",
                "+map: The map of attributes.",
                "@@ -1019,3 +1019,3 @@ getColumnLabels(matrix)",
                "-string array : The labels for each column in the matrix",
                "+string array: The labels for each column in the matrix",
                "@@ -1038,3 +1038,3 @@ getRowLabels(matrix)",
                "-string array : The labels for each row in the matrix",
                "+string array: The labels for each row in the matrix",
                "@@ -1159,4 +1159,4 @@ The `indexOf` function returns the index of a string in an array of strings.",
                "-* `string array` : The array to operate on.",
                "-* `string` : The string to search for in the array.",
                "+* `string array`: The array to operate on.",
                "+* `string`: The string to search for in the array.",
                "@@ -1169,3 +1169,3 @@ indexOf(stringArray, string)",
                "-integer : The index of the string in the array or -1 if the string is not found.",
                "+integer: The index of the string in the array or -1 if the string is not found.",
                "@@ -1177,5 +1177,5 @@ The `integrate` function computes the integral of an interpolation function for",
                "-* `spline` | `akima` | `lerp` | `loess` : The interpolation function to compute the integral for.",
                "-* `numeric` : start of integral range",
                "-* `numeric` : end of integral range",
                "+* `spline` | `akima` | `lerp` | `loess`: The interpolation function to compute the integral for.",
                "+* `numeric`: start of integral range",
                "+* `numeric`: end of integral range",
                "@@ -1188,3 +1188,3 @@ integrate(function, start, end)",
                "-numeric : The integral",
                "+numeric: The integral",
                "@@ -1893,3 +1893,3 @@ rowAt(matrix, 10)",
                "-numeric array : the row of the matrix",
                "+numeric array: the row of the matrix",
                "@@ -1910,3 +1910,3 @@ rowCount(matrix)",
                "-integer : number rows in the matrix.",
                "+integer: number rows in the matrix.",
                "@@ -2053,4 +2053,4 @@ The `setAttributes` function sets an attributes map of a `matrix`.",
                "-* `matrix` : The matrix to set the attributes map to.",
                "-* `map` : The map of attributes to set on the matrix.",
                "+* `matrix`: The matrix to set the attributes map to.",
                "+* `map`: The map of attributes to set on the matrix.",
                "@@ -2063,3 +2063,3 @@ setAttributes(matrix, map)",
                "-matrix : The matrix with the attributes set.",
                "+matrix: The matrix with the attributes set.",
                "@@ -2072,3 +2072,3 @@ The `setColumnLabels` function sets the columns labels of a matrix.",
                " * `matrix`: The matrix to set the column labels to.",
                "-* `string array` : The column labels to set the matrix",
                "+* `string array`: The column labels to set the matrix",
                "@@ -2080,3 +2080,3 @@ setColumnLabels(matrix, labels)",
                "-matrix : The matrix with the labels set.",
                "+matrix: The matrix with the labels set.",
                "@@ -2089,3 +2089,3 @@ The `setRowLabels` function sets the row labels of a matrix.",
                " * `matrix`: The matrix to set the row labels to.",
                "-* `string array` : The row labels to set to the matrix",
                "+* `string array`: The row labels to set to the matrix",
                "@@ -2097,3 +2097,3 @@ setRowLabels(matrix, labels)",
                "-matrix : The matrix with the labels set.",
                "+matrix: The matrix with the labels set.",
                "@@ -2259,3 +2259,3 @@ The `sumSq` function returns the sum-of-squares of the values in a numeric array",
                "-* `numeric array` : The numeric array to compute the sumSq of.",
                "+* `numeric array`: The numeric array to compute the sumSq of.",
                "@@ -2268,3 +2268,3 @@ sumSq(numericArray)",
                "-numeric : result of the sumSq calculation",
                "+numeric: result of the sumSq calculation",
                "diff --git a/solr/solr-ref-guide/src/taking-solr-to-production.adoc b/solr/solr-ref-guide/src/taking-solr-to-production.adoc",
                "index ca0f4ebe760..88f127cfc83 100644",
                "--- a/solr/solr-ref-guide/src/taking-solr-to-production.adoc",
                "+++ b/solr/solr-ref-guide/src/taking-solr-to-production.adoc",
                "@@ -250,3 +250,7 @@ SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoSoftCommit.maxTime=10000\"",
                "-Two common settings that result in errors on *nix systems are file handles and user processes. It is common for the default limits for number of processes and file handles to default to values that are too low for a large Solr installation. The required number of each of these will increase based on a combination of the number of replicas hosted per node and the number of segments in the index for each replica. The usual recommendation is to make processes and file handles at least 65,000 each, unlimited if possible. On most *nix systems, this command:",
                "+Two common settings that result in errors on *nix systems are file handles and user processes.",
                "+",
                "+It is common for the default limits for number of processes and file handles to default to values that are too low for a large Solr installation. The required number of each of these will increase based on a combination of the number of replicas hosted per node and the number of segments in the index for each replica.",
                "+",
                "+The usual recommendation is to make processes and file handles at least 65,000 each, unlimited if possible. On most *nix systems, this command will show the currently-defined limits:",
                "@@ -256,10 +260,13 @@ ulimit -a",
                " ----",
                "-will show the currently-defined limits. It is strongly recommended that file handle and process limits be permanently raised as above. The exact form of the command will vary per operating system, and some systems require editing configuration files and restarting your server. Consult your system administrators for guidance in your particular environment.",
                "-[TIP]",
                "+It is strongly recommended that file handle and process limits be permanently raised as above. The exact form of the command will vary per operating system, and some systems require editing configuration files and restarting your server. Consult your system administrators for guidance in your particular environment.",
                "+",
                "+[WARNING]",
                " ====",
                "-If these limits are exceeded, the problems reported by Solr vary depending on the specific operation responsible for exceeding the limit. Errors such as to \"too many open files\", \"connection error\", and \"max processes exceeded\" have been reported, as well as SolrCloud recovery failures. Since exceeding these limits can result in such varied symptoms it is _strongly_ recommended that these limits be permanently raised as recommended above.",
                "+If these limits are exceeded, the problems reported by Solr vary depending on the specific operation responsible for exceeding the limit. Errors such as \"too many open files\", \"connection error\", and \"max processes exceeded\" have been reported, as well as SolrCloud recovery failures.",
                "+",
                "+Since exceeding these limits can result in such varied symptoms it is _strongly_ recommended that these limits be permanently raised as recommended above.",
                " ====",
                "-== Running Multiple Solr Nodes Per Host",
                "+== Running Multiple Solr Nodes per Host",
                "diff --git a/solr/solr-ref-guide/src/the-dismax-query-parser.adoc b/solr/solr-ref-guide/src/the-dismax-query-parser.adoc",
                "index db899324f8a..bb06ae1a113 100644",
                "--- a/solr/solr-ref-guide/src/the-dismax-query-parser.adoc",
                "+++ b/solr/solr-ref-guide/src/the-dismax-query-parser.adoc",
                "@@ -137,3 +137,3 @@ recip(rord(myfield),1,2,3)^1.5",
                "-Specifying functions with the bf parameter is essentially just shorthand for using the `bq` param combined with the `{!func}` parser.",
                "+Specifying functions with the bf parameter is essentially just shorthand for using the `bq` parameter combined with the `{!func}` parser.",
                "diff --git a/solr/solr-ref-guide/src/update-request-processors.adoc b/solr/solr-ref-guide/src/update-request-processors.adoc",
                "index 921677a0b52..1c14cd21d58 100644",
                "--- a/solr/solr-ref-guide/src/update-request-processors.adoc",
                "+++ b/solr/solr-ref-guide/src/update-request-processors.adoc",
                "@@ -261,3 +261,3 @@ What follows are brief descriptions of the currently available update request pr",
                "-{solr-javadocs}/solr-core/org/apache/solr/update/processor/AtomicUpdateRequestProcessorFactory.html[AtomicUpdateProcessorFactory]:: This processor will convert conventional field-value documents to atomic update documents. This processor can be used at runtime (without defining it in `solrconfig.xml`), see the section <<atomicupdateprocessorfactory>> below.",
                "+{solr-javadocs}/solr-core/org/apache/solr/update/processor/AtomicUpdateProcessorFactory.html[AtomicUpdateProcessorFactory]:: This processor will convert conventional field-value documents to atomic update documents. This processor can be used at runtime (without defining it in `solrconfig.xml`), see the section <<atomicupdateprocessorfactory>> below.",
                "diff --git a/solr/solr-ref-guide/src/uploading-data-with-index-handlers.adoc b/solr/solr-ref-guide/src/uploading-data-with-index-handlers.adoc",
                "index 49f1f6221c6..fe1f17ab809 100644",
                "--- a/solr/solr-ref-guide/src/uploading-data-with-index-handlers.adoc",
                "+++ b/solr/solr-ref-guide/src/uploading-data-with-index-handlers.adoc",
                "@@ -91,3 +91,3 @@ The `<optimize>` operation requests Solr to merge internal data structures. For",
                "-WARNING: You should only consider using optimize on static indexes, i.e. indexes that can be optimized as part of the regular update process (say once-a-day updates). Applications requiring NRT functionalty are discouraged from using optimize.",
                "+WARNING: You should only consider using optimize on static indexes, i.e., indexes that can be optimized as part of the regular update process (say once-a-day updates). Applications requiring NRT functionalty are discouraged from using optimize."
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/about-this-guide.adoc",
                "solr/solr-ref-guide/src/analyzers.adoc",
                "solr/solr-ref-guide/src/collapse-and-expand-results.adoc",
                "solr/solr-ref-guide/src/collections-api.adoc",
                "solr/solr-ref-guide/src/command-line-utilities.adoc",
                "solr/solr-ref-guide/src/common-query-parameters.adoc",
                "solr/solr-ref-guide/src/detecting-languages-during-indexing.adoc",
                "solr/solr-ref-guide/src/documents-screen.adoc",
                "solr/solr-ref-guide/src/enabling-ssl.adoc",
                "solr/solr-ref-guide/src/field-types-included-with-solr.adoc",
                "solr/solr-ref-guide/src/filter-descriptions.adoc",
                "solr/solr-ref-guide/src/getting-started-with-solrcloud.adoc",
                "solr/solr-ref-guide/src/graph-traversal.adoc",
                "solr/solr-ref-guide/src/json-facet-api.adoc",
                "solr/solr-ref-guide/src/language-analysis.adoc",
                "solr/solr-ref-guide/src/learning-to-rank.adoc",
                "solr/solr-ref-guide/src/major-changes-in-solr-7.adoc",
                "solr/solr-ref-guide/src/merging-indexes.adoc",
                "solr/solr-ref-guide/src/meta-docs/publish.adoc",
                "solr/solr-ref-guide/src/metrics-reporting.adoc",
                "solr/solr-ref-guide/src/near-real-time-searching.adoc",
                "solr/solr-ref-guide/src/other-parsers.adoc",
                "solr/solr-ref-guide/src/other-schema-elements.adoc",
                "solr/solr-ref-guide/src/pagination-of-results.adoc",
                "solr/solr-ref-guide/src/post-tool.adoc",
                "solr/solr-ref-guide/src/running-solr-on-hdfs.adoc",
                "solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc",
                "solr/solr-ref-guide/src/solr-tutorial.adoc",
                "solr/solr-ref-guide/src/solrcloud-autoscaling-trigger-actions.adoc",
                "solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "solr/solr-ref-guide/src/spell-checking.adoc",
                "solr/solr-ref-guide/src/stream-decorator-reference.adoc",
                "solr/solr-ref-guide/src/stream-evaluator-reference.adoc",
                "solr/solr-ref-guide/src/taking-solr-to-production.adoc",
                "solr/solr-ref-guide/src/the-dismax-query-parser.adoc",
                "solr/solr-ref-guide/src/update-request-processors.adoc",
                "solr/solr-ref-guide/src/uploading-data-with-index-handlers.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "601c7350ce459f60b7e9fea4dfa46793f254f7c8"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: parameter",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bdd9cdd8198be84cebca93f1db63a99dfc580264",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519350604,
            "hunks": 8,
            "message": "SOLR-11795: add more stuff under dev-tools for prometheus-exporter",
            "diff": [
                "diff --git a/dev-tools/idea/.idea/ant.xml b/dev-tools/idea/.idea/ant.xml",
                "index 6c7bc8c6c5d..172c2657381 100644",
                "--- a/dev-tools/idea/.idea/ant.xml",
                "+++ b/dev-tools/idea/.idea/ant.xml",
                "@@ -49,2 +49,3 @@",
                "     <buildFile url=\"file://$PROJECT_DIR$/solr/contrib/langid/build.xml\" />",
                "+    <buildFile url=\"file://$PROJECT_DIR$/solr/contrib/prometheus-exporter/build.xml\" />",
                "     <buildFile url=\"file://$PROJECT_DIR$/solr/contrib/uima/build.xml\" />",
                "diff --git a/dev-tools/idea/.idea/libraries/Solr_prometheus_exporter_library.xml b/dev-tools/idea/.idea/libraries/Solr_prometheus_exporter_library.xml",
                "new file mode 100644",
                "index 00000000000..0fd86701018",
                "--- /dev/null",
                "+++ b/dev-tools/idea/.idea/libraries/Solr_prometheus_exporter_library.xml",
                "@@ -0,0 +1,10 @@",
                "+<component name=\"libraryTable\">",
                "+  <library name=\"Solr prometheus exporter library\">",
                "+    <CLASSES>",
                "+      <root url=\"file://$PROJECT_DIR$/solr/contrib/prometheus-exporter/lib\" />",
                "+    </CLASSES>",
                "+    <JAVADOC />",
                "+    <SOURCES />",
                "+    <jarDirectory url=\"file://$PROJECT_DIR$/solr/contrib/prometheus-exporter/lib\" recursive=\"false\" />",
                "+  </library>",
                "+</component>",
                "\\ No newline at end of file",
                "diff --git a/dev-tools/idea/.idea/modules.xml b/dev-tools/idea/.idea/modules.xml",
                "index 4df1000bc34..207a675ef48 100644",
                "--- a/dev-tools/idea/.idea/modules.xml",
                "+++ b/dev-tools/idea/.idea/modules.xml",
                "@@ -59,2 +59,3 @@",
                "       <module group=\"Solr/Contrib\" filepath=\"$PROJECT_DIR$/solr/contrib/ltr/ltr.iml\" />",
                "+      <module group=\"Solr/Contrib\" filepath=\"$PROJECT_DIR$/solr/contrib/prometheus-exporter/prometheus-exporter.iml\" />",
                "       <module group=\"Solr/Contrib\" filepath=\"$PROJECT_DIR$/solr/contrib/uima/uima.iml\" />",
                "diff --git a/dev-tools/idea/.idea/workspace.xml b/dev-tools/idea/.idea/workspace.xml",
                "index 11794af5fc6..ba9a383c380 100644",
                "--- a/dev-tools/idea/.idea/workspace.xml",
                "+++ b/dev-tools/idea/.idea/workspace.xml",
                "@@ -326,2 +326,10 @@",
                "     </configuration>",
                "+    <configuration default=\"false\" name=\"Solr prometheus-exporter contrib\" type=\"JUnit\" factoryName=\"JUnit\">",
                "+      <module name=\"prometheus-exporter\" />",
                "+      <option name=\"TEST_OBJECT\" value=\"pattern\" />",
                "+      <option name=\"WORKING_DIRECTORY\" value=\"file://$PROJECT_DIR$/idea-build/solr/contrib/prometheus-exporter\" />",
                "+      <option name=\"VM_PARAMETERS\" value=\"-ea\" />",
                "+      <option name=\"TEST_SEARCH_SCOPE\"><value defaultName=\"singleModule\" /></option>",
                "+      <patterns><pattern testClass=\".*\\.Test[^.]*|.*\\.[^.]*Test\" /></patterns>",
                "+    </configuration>",
                "     <configuration default=\"false\" name=\"Solr uima contrib\" type=\"JUnit\" factoryName=\"JUnit\">",
                "@@ -384,4 +392,5 @@",
                "       <item index=\"39\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr ltr contrib\" />",
                "-      <item index=\"40\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr uima contrib\" />",
                "-      <item index=\"41\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr velocity contrib\" />",
                "+      <item index=\"40\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr prometheus-exporter contrib\" />",
                "+      <item index=\"41\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr uima contrib\" />",
                "+      <item index=\"42\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr velocity contrib\" />",
                "     </list>",
                "diff --git a/dev-tools/idea/solr/contrib/prometheus-exporter/prometheus-exporter.iml b/dev-tools/idea/solr/contrib/prometheus-exporter/prometheus-exporter.iml",
                "new file mode 100644",
                "index 00000000000..652ac305544",
                "--- /dev/null",
                "+++ b/dev-tools/idea/solr/contrib/prometheus-exporter/prometheus-exporter.iml",
                "@@ -0,0 +1,32 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                "+<module type=\"JAVA_MODULE\" version=\"4\">",
                "+  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"false\">",
                "+    <output url=\"file://$MODULE_DIR$/../../../idea-build/solr/contrib/prometheus-exporter/classes/java\" />",
                "+    <output-test url=\"file://$MODULE_DIR$/../../../idea-build/solr/contrib/prometheus-exporter/classes/test\" />",
                "+    <exclude-output />",
                "+    <content url=\"file://$MODULE_DIR$\">",
                "+      <sourceFolder url=\"file://$MODULE_DIR$/src/test\" isTestSource=\"true\" />",
                "+      <sourceFolder url=\"file://$MODULE_DIR$/src/test-files\" type=\"java-test-resource\" />",
                "+      <sourceFolder url=\"file://$MODULE_DIR$/src/java\" isTestSource=\"false\" />",
                "+    </content>",
                "+    <orderEntry type=\"inheritedJdk\" />",
                "+    <orderEntry type=\"sourceFolder\" forTests=\"false\" />",
                "+    <orderEntry type=\"library\" scope=\"TEST\" name=\"JUnit\" level=\"project\" />",
                "+    <orderEntry type=\"library\" name=\"Solr core library\" level=\"project\" />",
                "+    <orderEntry type=\"library\" name=\"Solrj library\" level=\"project\" />",
                "+    <orderEntry type=\"module-library\" scope=\"TEST\">",
                "+      <library>",
                "+        <CLASSES>",
                "+          <root url=\"file://$MODULE_DIR$/lib\" />",
                "+        </CLASSES>",
                "+        <JAVADOC />",
                "+        <SOURCES />",
                "+        <jarDirectory url=\"file://$MODULE_DIR$/lib\" recursive=\"false\" />",
                "+      </library>",
                "+    </orderEntry>",
                "+    <orderEntry type=\"module\" scope=\"TEST\" module-name=\"lucene-test-framework\" />",
                "+    <orderEntry type=\"module\" scope=\"TEST\" module-name=\"solr-test-framework\" />",
                "+    <orderEntry type=\"module\" module-name=\"solr-core\" />",
                "+    <orderEntry type=\"module\" module-name=\"solrj\" />",
                "+  </component>",
                "+</module>",
                "diff --git a/dev-tools/maven/solr/contrib/pom.xml.template b/dev-tools/maven/solr/contrib/pom.xml.template",
                "index fec3385e373..733e308a5aa 100644",
                "--- a/dev-tools/maven/solr/contrib/pom.xml.template",
                "+++ b/dev-tools/maven/solr/contrib/pom.xml.template",
                "@@ -41,2 +41,3 @@",
                "     <module>ltr</module>",
                "+    <module>prometheus-exporter</module>",
                "     <module>uima</module>",
                "diff --git a/dev-tools/maven/solr/contrib/prometheus-exporter/pom.xml.template b/dev-tools/maven/solr/contrib/prometheus-exporter/pom.xml.template",
                "new file mode 100644",
                "index 00000000000..1d2d5087ff0",
                "--- /dev/null",
                "+++ b/dev-tools/maven/solr/contrib/prometheus-exporter/pom.xml.template",
                "@@ -0,0 +1,80 @@",
                "+<!--",
                "+  Licensed to the Apache Software Foundation (ASF) under one",
                "+  or more contributor license agreements.  See the NOTICE file",
                "+  distributed with this work for additional information",
                "+  regarding copyright ownership.  The ASF licenses this file",
                "+  to you under the Apache License, Version 2.0 (the",
                "+  \"License\"); you may not use this file except in compliance",
                "+  with the License.  You may obtain a copy of the License at",
                "+",
                "+  http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+  Unless required by applicable law or agreed to in writing,",
                "+  software distributed under the License is distributed on an",
                "+  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+  KIND, either express or implied.  See the License for the",
                "+  specific language governing permissions and limitations",
                "+  under the License.",
                "+-->",
                "+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"",
                "+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
                "+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">",
                "+  <modelVersion>4.0.0</modelVersion>",
                "+  <parent>",
                "+    <groupId>org.apache.solr</groupId>",
                "+    <artifactId>solr-parent</artifactId>",
                "+    <version>@version@</version>",
                "+    <relativePath>../../pom.xml</relativePath>",
                "+  </parent>",
                "+  <groupId>org.apache.solr</groupId>",
                "+  <artifactId>solr-prometheus-exporter</artifactId>",
                "+  <packaging>jar</packaging>",
                "+  <name>Apache Solr Prometheus Exporter Package</name>",
                "+  <description>",
                "+    Apache Solr Prometheus Exporter Package",
                "+  </description>",
                "+  <properties>",
                "+    <module-directory>solr/contrib/prometheus-exporter</module-directory>",
                "+    <relative-top-level>../../../..</relative-top-level>",
                "+    <module-path>${relative-top-level}/${module-directory}</module-path>",
                "+  </properties>",
                "+  <scm>",
                "+    <connection>scm:git:${vc-anonymous-base-url}</connection>",
                "+    <developerConnection>scm:git:${vc-dev-base-url}</developerConnection>",
                "+    <url>${vc-browse-base-url};f=${module-directory}</url>",
                "+  </scm>",
                "+  <dependencies>",
                "+    <dependency>",
                "+      <!-- lucene-test-framework dependency must be declared before lucene-core -->",
                "+      <!-- This dependency cannot be put into solr-parent, because local        -->",
                "+      <!-- dependencies are always ordered before inherited dependencies.       -->",
                "+      <groupId>org.apache.lucene</groupId>",
                "+      <artifactId>lucene-test-framework</artifactId>",
                "+      <scope>test</scope>",
                "+    </dependency>",
                "+    <dependency>",
                "+      <groupId>org.apache.solr</groupId>",
                "+      <artifactId>solr-test-framework</artifactId>",
                "+      <scope>test</scope>",
                "+    </dependency>",
                "+    @solr-prometheus-exporter.internal.dependencies@",
                "+    @solr-prometheus-exporter.external.dependencies@",
                "+    @solr-prometheus-exporter.internal.test.dependencies@",
                "+    @solr-prometheus-exporter.external.test.dependencies@",
                "+  </dependencies>",
                "+  <build>",
                "+    <sourceDirectory>${module-path}/src/java</sourceDirectory>",
                "+    <testSourceDirectory>${module-path}/src/test</testSourceDirectory>",
                "+    <testResources>",
                "+      <testResource>",
                "+        <directory>${module-path}/src/test-files</directory>",
                "+      </testResource>",
                "+      <testResource>",
                "+        <directory>${top-level}/dev-tools/maven/solr</directory>",
                "+        <includes>",
                "+          <include>maven.testlogging.properties</include>",
                "+        </includes>",
                "+      </testResource>",
                "+    </testResources>",
                "+  </build>",
                "+</project>"
            ],
            "changed_files": [
                "dev-tools/idea/.idea/ant.xml",
                "dev-tools/idea/.idea/libraries/Solr_prometheus_exporter_library.xml",
                "dev-tools/idea/.idea/modules.xml",
                "dev-tools/idea/.idea/workspace.xml",
                "dev-tools/idea/solr/contrib/prometheus-exporter/prometheus-exporter.iml",
                "dev-tools/maven/solr/contrib/pom.xml.template",
                "dev-tools/maven/solr/contrib/prometheus-exporter/pom.xml.template"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11795": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "df0f141907b0701d7b1f1fc297ae33ef901844a0"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "720eba0ae40edbff47bd4de059d03b9ed8475f94",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519435523,
            "hunks": 8,
            "message": "Revert \"SOLR-11795: add more stuff under dev-tools for prometheus-exporter\" This reverts commit df0f141907b0701d7b1f1fc297ae33ef901844a0.",
            "diff": [
                "diff --git a/dev-tools/idea/.idea/ant.xml b/dev-tools/idea/.idea/ant.xml",
                "index 172c2657381..6c7bc8c6c5d 100644",
                "--- a/dev-tools/idea/.idea/ant.xml",
                "+++ b/dev-tools/idea/.idea/ant.xml",
                "@@ -49,3 +49,2 @@",
                "     <buildFile url=\"file://$PROJECT_DIR$/solr/contrib/langid/build.xml\" />",
                "-    <buildFile url=\"file://$PROJECT_DIR$/solr/contrib/prometheus-exporter/build.xml\" />",
                "     <buildFile url=\"file://$PROJECT_DIR$/solr/contrib/uima/build.xml\" />",
                "diff --git a/dev-tools/idea/.idea/libraries/Solr_prometheus_exporter_library.xml b/dev-tools/idea/.idea/libraries/Solr_prometheus_exporter_library.xml",
                "deleted file mode 100644",
                "index 0fd86701018..00000000000",
                "--- a/dev-tools/idea/.idea/libraries/Solr_prometheus_exporter_library.xml",
                "+++ /dev/null",
                "@@ -1,10 +0,0 @@",
                "-<component name=\"libraryTable\">",
                "-  <library name=\"Solr prometheus exporter library\">",
                "-    <CLASSES>",
                "-      <root url=\"file://$PROJECT_DIR$/solr/contrib/prometheus-exporter/lib\" />",
                "-    </CLASSES>",
                "-    <JAVADOC />",
                "-    <SOURCES />",
                "-    <jarDirectory url=\"file://$PROJECT_DIR$/solr/contrib/prometheus-exporter/lib\" recursive=\"false\" />",
                "-  </library>",
                "-</component>",
                "\\ No newline at end of file",
                "diff --git a/dev-tools/idea/.idea/modules.xml b/dev-tools/idea/.idea/modules.xml",
                "index 207a675ef48..4df1000bc34 100644",
                "--- a/dev-tools/idea/.idea/modules.xml",
                "+++ b/dev-tools/idea/.idea/modules.xml",
                "@@ -59,3 +59,2 @@",
                "       <module group=\"Solr/Contrib\" filepath=\"$PROJECT_DIR$/solr/contrib/ltr/ltr.iml\" />",
                "-      <module group=\"Solr/Contrib\" filepath=\"$PROJECT_DIR$/solr/contrib/prometheus-exporter/prometheus-exporter.iml\" />",
                "       <module group=\"Solr/Contrib\" filepath=\"$PROJECT_DIR$/solr/contrib/uima/uima.iml\" />",
                "diff --git a/dev-tools/idea/.idea/workspace.xml b/dev-tools/idea/.idea/workspace.xml",
                "index ba9a383c380..11794af5fc6 100644",
                "--- a/dev-tools/idea/.idea/workspace.xml",
                "+++ b/dev-tools/idea/.idea/workspace.xml",
                "@@ -326,10 +326,2 @@",
                "     </configuration>",
                "-    <configuration default=\"false\" name=\"Solr prometheus-exporter contrib\" type=\"JUnit\" factoryName=\"JUnit\">",
                "-      <module name=\"prometheus-exporter\" />",
                "-      <option name=\"TEST_OBJECT\" value=\"pattern\" />",
                "-      <option name=\"WORKING_DIRECTORY\" value=\"file://$PROJECT_DIR$/idea-build/solr/contrib/prometheus-exporter\" />",
                "-      <option name=\"VM_PARAMETERS\" value=\"-ea\" />",
                "-      <option name=\"TEST_SEARCH_SCOPE\"><value defaultName=\"singleModule\" /></option>",
                "-      <patterns><pattern testClass=\".*\\.Test[^.]*|.*\\.[^.]*Test\" /></patterns>",
                "-    </configuration>",
                "     <configuration default=\"false\" name=\"Solr uima contrib\" type=\"JUnit\" factoryName=\"JUnit\">",
                "@@ -392,5 +384,4 @@",
                "       <item index=\"39\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr ltr contrib\" />",
                "-      <item index=\"40\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr prometheus-exporter contrib\" />",
                "-      <item index=\"41\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr uima contrib\" />",
                "-      <item index=\"42\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr velocity contrib\" />",
                "+      <item index=\"40\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr uima contrib\" />",
                "+      <item index=\"41\" class=\"java.lang.String\" itemvalue=\"JUnit.Solr velocity contrib\" />",
                "     </list>",
                "diff --git a/dev-tools/idea/solr/contrib/prometheus-exporter/prometheus-exporter.iml b/dev-tools/idea/solr/contrib/prometheus-exporter/prometheus-exporter.iml",
                "deleted file mode 100644",
                "index 652ac305544..00000000000",
                "--- a/dev-tools/idea/solr/contrib/prometheus-exporter/prometheus-exporter.iml",
                "+++ /dev/null",
                "@@ -1,32 +0,0 @@",
                "-<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                "-<module type=\"JAVA_MODULE\" version=\"4\">",
                "-  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"false\">",
                "-    <output url=\"file://$MODULE_DIR$/../../../idea-build/solr/contrib/prometheus-exporter/classes/java\" />",
                "-    <output-test url=\"file://$MODULE_DIR$/../../../idea-build/solr/contrib/prometheus-exporter/classes/test\" />",
                "-    <exclude-output />",
                "-    <content url=\"file://$MODULE_DIR$\">",
                "-      <sourceFolder url=\"file://$MODULE_DIR$/src/test\" isTestSource=\"true\" />",
                "-      <sourceFolder url=\"file://$MODULE_DIR$/src/test-files\" type=\"java-test-resource\" />",
                "-      <sourceFolder url=\"file://$MODULE_DIR$/src/java\" isTestSource=\"false\" />",
                "-    </content>",
                "-    <orderEntry type=\"inheritedJdk\" />",
                "-    <orderEntry type=\"sourceFolder\" forTests=\"false\" />",
                "-    <orderEntry type=\"library\" scope=\"TEST\" name=\"JUnit\" level=\"project\" />",
                "-    <orderEntry type=\"library\" name=\"Solr core library\" level=\"project\" />",
                "-    <orderEntry type=\"library\" name=\"Solrj library\" level=\"project\" />",
                "-    <orderEntry type=\"module-library\" scope=\"TEST\">",
                "-      <library>",
                "-        <CLASSES>",
                "-          <root url=\"file://$MODULE_DIR$/lib\" />",
                "-        </CLASSES>",
                "-        <JAVADOC />",
                "-        <SOURCES />",
                "-        <jarDirectory url=\"file://$MODULE_DIR$/lib\" recursive=\"false\" />",
                "-      </library>",
                "-    </orderEntry>",
                "-    <orderEntry type=\"module\" scope=\"TEST\" module-name=\"lucene-test-framework\" />",
                "-    <orderEntry type=\"module\" scope=\"TEST\" module-name=\"solr-test-framework\" />",
                "-    <orderEntry type=\"module\" module-name=\"solr-core\" />",
                "-    <orderEntry type=\"module\" module-name=\"solrj\" />",
                "-  </component>",
                "-</module>",
                "diff --git a/dev-tools/maven/solr/contrib/pom.xml.template b/dev-tools/maven/solr/contrib/pom.xml.template",
                "index 733e308a5aa..fec3385e373 100644",
                "--- a/dev-tools/maven/solr/contrib/pom.xml.template",
                "+++ b/dev-tools/maven/solr/contrib/pom.xml.template",
                "@@ -41,3 +41,2 @@",
                "     <module>ltr</module>",
                "-    <module>prometheus-exporter</module>",
                "     <module>uima</module>",
                "diff --git a/dev-tools/maven/solr/contrib/prometheus-exporter/pom.xml.template b/dev-tools/maven/solr/contrib/prometheus-exporter/pom.xml.template",
                "deleted file mode 100644",
                "index 1d2d5087ff0..00000000000",
                "--- a/dev-tools/maven/solr/contrib/prometheus-exporter/pom.xml.template",
                "+++ /dev/null",
                "@@ -1,80 +0,0 @@",
                "-<!--",
                "-  Licensed to the Apache Software Foundation (ASF) under one",
                "-  or more contributor license agreements.  See the NOTICE file",
                "-  distributed with this work for additional information",
                "-  regarding copyright ownership.  The ASF licenses this file",
                "-  to you under the Apache License, Version 2.0 (the",
                "-  \"License\"); you may not use this file except in compliance",
                "-  with the License.  You may obtain a copy of the License at",
                "-",
                "-  http://www.apache.org/licenses/LICENSE-2.0",
                "-",
                "-  Unless required by applicable law or agreed to in writing,",
                "-  software distributed under the License is distributed on an",
                "-  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "-  KIND, either express or implied.  See the License for the",
                "-  specific language governing permissions and limitations",
                "-  under the License.",
                "--->",
                "-<project xmlns=\"http://maven.apache.org/POM/4.0.0\"",
                "-         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
                "-         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">",
                "-  <modelVersion>4.0.0</modelVersion>",
                "-  <parent>",
                "-    <groupId>org.apache.solr</groupId>",
                "-    <artifactId>solr-parent</artifactId>",
                "-    <version>@version@</version>",
                "-    <relativePath>../../pom.xml</relativePath>",
                "-  </parent>",
                "-  <groupId>org.apache.solr</groupId>",
                "-  <artifactId>solr-prometheus-exporter</artifactId>",
                "-  <packaging>jar</packaging>",
                "-  <name>Apache Solr Prometheus Exporter Package</name>",
                "-  <description>",
                "-    Apache Solr Prometheus Exporter Package",
                "-  </description>",
                "-  <properties>",
                "-    <module-directory>solr/contrib/prometheus-exporter</module-directory>",
                "-    <relative-top-level>../../../..</relative-top-level>",
                "-    <module-path>${relative-top-level}/${module-directory}</module-path>",
                "-  </properties>",
                "-  <scm>",
                "-    <connection>scm:git:${vc-anonymous-base-url}</connection>",
                "-    <developerConnection>scm:git:${vc-dev-base-url}</developerConnection>",
                "-    <url>${vc-browse-base-url};f=${module-directory}</url>",
                "-  </scm>",
                "-  <dependencies>",
                "-    <dependency>",
                "-      <!-- lucene-test-framework dependency must be declared before lucene-core -->",
                "-      <!-- This dependency cannot be put into solr-parent, because local        -->",
                "-      <!-- dependencies are always ordered before inherited dependencies.       -->",
                "-      <groupId>org.apache.lucene</groupId>",
                "-      <artifactId>lucene-test-framework</artifactId>",
                "-      <scope>test</scope>",
                "-    </dependency>",
                "-    <dependency>",
                "-      <groupId>org.apache.solr</groupId>",
                "-      <artifactId>solr-test-framework</artifactId>",
                "-      <scope>test</scope>",
                "-    </dependency>",
                "-    @solr-prometheus-exporter.internal.dependencies@",
                "-    @solr-prometheus-exporter.external.dependencies@",
                "-    @solr-prometheus-exporter.internal.test.dependencies@",
                "-    @solr-prometheus-exporter.external.test.dependencies@",
                "-  </dependencies>",
                "-  <build>",
                "-    <sourceDirectory>${module-path}/src/java</sourceDirectory>",
                "-    <testSourceDirectory>${module-path}/src/test</testSourceDirectory>",
                "-    <testResources>",
                "-      <testResource>",
                "-        <directory>${module-path}/src/test-files</directory>",
                "-      </testResource>",
                "-      <testResource>",
                "-        <directory>${top-level}/dev-tools/maven/solr</directory>",
                "-        <includes>",
                "-          <include>maven.testlogging.properties</include>",
                "-        </includes>",
                "-      </testResource>",
                "-    </testResources>",
                "-  </build>",
                "-</project>"
            ],
            "changed_files": [
                "dev-tools/idea/.idea/ant.xml",
                "dev-tools/idea/.idea/libraries/Solr_prometheus_exporter_library.xml",
                "dev-tools/idea/.idea/modules.xml",
                "dev-tools/idea/.idea/workspace.xml",
                "dev-tools/idea/solr/contrib/prometheus-exporter/prometheus-exporter.iml",
                "dev-tools/maven/solr/contrib/pom.xml.template",
                "dev-tools/maven/solr/contrib/prometheus-exporter/pom.xml.template"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11795": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a3452cc28d45da6164da399fe2425415692009c0"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "298d90b6215b824b779af7e09c2b855eb82481b4",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518457431,
            "hunks": 2,
            "message": "LUCENE-8167: fix two incompleteEnumSwitch warnings in solr/solrj",
            "diff": [
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/XMLResponseParser.java b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/XMLResponseParser.java",
                "index 953da6a2a9d..867b2c5e526 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/XMLResponseParser.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/XMLResponseParser.java",
                "@@ -254,2 +254,11 @@ public class XMLResponseParser extends ResponseParser",
                "           case DOC:    nl.add( name, readDocument(  parser ) ); depth--; continue;",
                "+          case BOOL:",
                "+          case DATE:",
                "+          case DOUBLE:",
                "+          case FLOAT:",
                "+          case INT:",
                "+          case LONG:",
                "+          case NULL:",
                "+          case STR:",
                "+            break;",
                "           }",
                "@@ -318,2 +327,11 @@ public class XMLResponseParser extends ResponseParser",
                "           case DOC:    vals.add( readDocument( parser ) ); depth--; continue;",
                "+          case BOOL:",
                "+          case DATE:",
                "+          case DOUBLE:",
                "+          case FLOAT:",
                "+          case INT:",
                "+          case LONG:",
                "+          case NULL:",
                "+          case STR:",
                "+            break;",
                "           }"
            ],
            "changed_files": [
                "solr/solrj/src/java/org/apache/solr/client/solrj/impl/XMLResponseParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8167": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f756c547936e9d142cb95b21eb78039ee29e339f"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8167",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fc8c239f93da4deb2adc1a2953793377ae5f4a53",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520244905,
            "hunks": 2,
            "message": "SOLR-11957: Increase MaxFileSize=32MB and MaxBackupIndex=10 for RollingFileAppender in log4j.properties",
            "diff": [
                "diff --git a/solr/example/resources/log4j.properties b/solr/example/resources/log4j.properties",
                "index 02f91c5daef..c6e90367f81 100644",
                "--- a/solr/example/resources/log4j.properties",
                "+++ b/solr/example/resources/log4j.properties",
                "@@ -11,4 +11,4 @@ log4j.appender.CONSOLE.layout.ConversionPattern=%-4r [%t] %-5p %c %x [%X{collect",
                " log4j.appender.file=org.apache.log4j.RollingFileAppender",
                "-log4j.appender.file.MaxFileSize=4MB",
                "-log4j.appender.file.MaxBackupIndex=9",
                "+log4j.appender.file.MaxFileSize=32MB",
                "+log4j.appender.file.MaxBackupIndex=10",
                "diff --git a/solr/server/resources/log4j.properties b/solr/server/resources/log4j.properties",
                "index 9f9c4a0f749..c0ed34c0106 100644",
                "--- a/solr/server/resources/log4j.properties",
                "+++ b/solr/server/resources/log4j.properties",
                "@@ -12,4 +12,4 @@ log4j.appender.CONSOLE.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p",
                " log4j.appender.file=org.apache.log4j.RollingFileAppender",
                "-log4j.appender.file.MaxFileSize=4MB",
                "-log4j.appender.file.MaxBackupIndex=9",
                "+log4j.appender.file.MaxFileSize=32MB",
                "+log4j.appender.file.MaxBackupIndex=10"
            ],
            "changed_files": [
                "solr/example/resources/log4j.properties",
                "solr/server/resources/log4j.properties"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11957": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f65300d9ae11bb875a98d1d865154d3b5879fa97"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11957",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a0c0fb89b23fa62c495287ff5b110a73b64a8c97",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518708667,
            "hunks": 74,
            "message": "SOLR-8090: Make text elements in the UI darker for better contrast and readability",
            "diff": [
                "diff --git a/solr/webapp/web/css/angular/analysis.css b/solr/webapp/web/css/angular/analysis.css",
                "index 800964e5faf..1e66c7b61db 100644",
                "--- a/solr/webapp/web/css/angular/analysis.css",
                "+++ b/solr/webapp/web/css/angular/analysis.css",
                "@@ -72,3 +72,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   margin-left: 5px;",
                "@@ -118,3 +118,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  color: #999;",
                "+  color: #4D4D4D;",
                "   display: block;",
                "@@ -235,3 +235,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                " }",
                "@@ -248,3 +248,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                " }",
                "@@ -262,3 +262,3 @@ limitations under the License.",
                "-#content #analysis #analysis-result td.details ",
                "+#content #analysis #analysis-result td.details",
                " {",
                "diff --git a/solr/webapp/web/css/angular/cloud.css b/solr/webapp/web/css/angular/cloud.css",
                "index 80e53e8137c..d90df8d0952 100644",
                "--- a/solr/webapp/web/css/angular/cloud.css",
                "+++ b/solr/webapp/web/css/angular/cloud.css",
                "@@ -216,3 +216,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4d4d4d;",
                " }",
                "@@ -333,3 +333,3 @@ limitations under the License.",
                "   stroke: #C43C35;",
                "-  font-style: italic; ",
                "+  font-style: italic;",
                " }",
                "@@ -339,3 +339,3 @@ limitations under the License.",
                "   fill: #C43C35;",
                "-  font-style: italic; ",
                "+  font-style: italic;",
                " }",
                "@@ -361,3 +361,3 @@ limitations under the License.",
                "   stroke: #d5dd00;",
                "-  font-style: italic; ",
                "+  font-style: italic;",
                " }",
                "@@ -367,3 +367,3 @@ limitations under the License.",
                "   fill: #d5dd00;",
                "-  font-style: italic; ",
                "+  font-style: italic;",
                " }",
                "@@ -435,2 +435,2 @@ limitations under the License.",
                "   stroke: #e9e9e9;",
                "-}",
                "\\ No newline at end of file",
                "+}",
                "diff --git a/solr/webapp/web/css/angular/collections.css b/solr/webapp/web/css/angular/collections.css",
                "index e4b61bc257d..43360c05cfe 100644",
                "--- a/solr/webapp/web/css/angular/collections.css",
                "+++ b/solr/webapp/web/css/angular/collections.css",
                "@@ -70,3 +70,3 @@ limitations under the License.",
                "   background-position: 22% 1px;",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                " }",
                "@@ -369,2 +369,2 @@ limitations under the License.",
                "   width: 65%;",
                "-}",
                "\\ No newline at end of file",
                "+}",
                "diff --git a/solr/webapp/web/css/angular/common.css b/solr/webapp/web/css/angular/common.css",
                "index d9604464d6c..a0bc24dd550 100644",
                "--- a/solr/webapp/web/css/angular/common.css",
                "+++ b/solr/webapp/web/css/angular/common.css",
                "@@ -344,3 +344,3 @@ ul",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   padding-top: 0;",
                "@@ -589,3 +589,3 @@ pre.syntax .tex .formula",
                "-#content .tree li, ",
                "+#content .tree li,",
                " #content .tree ins",
                "@@ -594,3 +594,3 @@ pre.syntax .tex .formula",
                "   background-image: url( ../../img/tree.png );",
                "-  background-repeat: no-repeat; ",
                "+  background-repeat: no-repeat;",
                " }",
                "@@ -719,3 +719,3 @@ pre.syntax .tex .formula",
                "   -webkit-box-shadow: 1px 1px 0 #f0f0f0;",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   display: block;",
                "@@ -767,2 +767 @@ pre.syntax .tex .formula",
                " }",
                "-",
                "diff --git a/solr/webapp/web/css/angular/cores.css b/solr/webapp/web/css/angular/cores.css",
                "index 96e6f968040..0d10d603f58 100644",
                "--- a/solr/webapp/web/css/angular/cores.css",
                "+++ b/solr/webapp/web/css/angular/cores.css",
                "@@ -70,3 +70,3 @@ limitations under the License.",
                "   background-position: 22% 1px;",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                " }",
                "diff --git a/solr/webapp/web/css/angular/dataimport.css b/solr/webapp/web/css/angular/dataimport.css",
                "index 97fc5c74256..f72fa2dfc47 100644",
                "--- a/solr/webapp/web/css/angular/dataimport.css",
                "+++ b/solr/webapp/web/css/angular/dataimport.css",
                "@@ -127,3 +127,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   display: block;",
                "@@ -158,3 +158,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   font-size: 11px;",
                "@@ -324,3 +324,3 @@ limitations under the License.",
                "   background-image: url( ../../img/ico/hammer.png );",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                " }",
                "@@ -367,3 +367,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   font-style: normal;",
                "diff --git a/solr/webapp/web/css/angular/index.css b/solr/webapp/web/css/angular/index.css",
                "index e07b8d62686..c53e3230a76 100644",
                "--- a/solr/webapp/web/css/angular/index.css",
                "+++ b/solr/webapp/web/css/angular/index.css",
                "@@ -21,3 +21,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   font-weight: normal;",
                "@@ -60,3 +60,3 @@ limitations under the License.",
                "   border-color: #f0f0f0;",
                "-  color: #d6d6d6;",
                "+  color: #8D8D8D;",
                " }",
                "@@ -71,3 +71,3 @@ limitations under the License.",
                "   border-color: #c0c0c0;",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                " }",
                "@@ -146,3 +146,3 @@ limitations under the License.",
                " {",
                "-  color: #999;",
                "+  background-color: #f0f0f0;",
                " }",
                "@@ -205,3 +205,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   display: none;",
                "diff --git a/solr/webapp/web/css/angular/java-properties.css b/solr/webapp/web/css/angular/java-properties.css",
                "index ab5b67bf643..d23fadfa44a 100644",
                "--- a/solr/webapp/web/css/angular/java-properties.css",
                "+++ b/solr/webapp/web/css/angular/java-properties.css",
                "@@ -22,3 +22,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  padding-left: 21px;   ",
                "+  padding-left: 21px;",
                " }",
                "@@ -47,6 +47 @@ limitations under the License.",
                " }",
                "-",
                "-#content #java-properties li dd.odd",
                "-{",
                "-  color: #999;",
                "-}",
                "diff --git a/solr/webapp/web/css/angular/logging.css b/solr/webapp/web/css/angular/logging.css",
                "index f56497b1517..67df73aa988 100644",
                "--- a/solr/webapp/web/css/angular/logging.css",
                "+++ b/solr/webapp/web/css/angular/logging.css",
                "@@ -57,3 +57,3 @@ limitations under the License.",
                "   float: left;",
                "-  color: #8D8D8D;",
                "+  color: #4D4D4D;",
                "   width: 45%;",
                "@@ -70,3 +70,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  color: #8D8D8D;",
                "+  color: #4D4D4D;",
                "   display: block;",
                "@@ -179,3 +179,3 @@ limitations under the License.",
                " {",
                "-  color: #8D8D8D;",
                "+  color: #4D4D4D;",
                " }",
                "diff --git a/solr/webapp/web/css/angular/menu.css b/solr/webapp/web/css/angular/menu.css",
                "index 998c5e3fd66..549d737f96c 100644",
                "--- a/solr/webapp/web/css/angular/menu.css",
                "+++ b/solr/webapp/web/css/angular/menu.css",
                "@@ -73,3 +73,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #8D8D8D;",
                "   display: block;",
                "@@ -222,3 +222,2 @@ limitations under the License.",
                "   border-bottom: 1px solid #f0f0f0;",
                "-  color: #bbb;",
                "   margin-left: 15px;",
                "@@ -245,3 +244,3 @@ limitations under the License.",
                "   border-color: #d0d0d0;",
                "-  color: #333;",
                "+  color: #FFF;",
                " }",
                "@@ -269,3 +268,3 @@ limitations under the License.",
                " {",
                "-  ",
                "+",
                "   background-color: #ffcccc;",
                "diff --git a/solr/webapp/web/css/angular/plugins.css b/solr/webapp/web/css/angular/plugins.css",
                "index 3b7830dd238..e4398bda20c 100644",
                "--- a/solr/webapp/web/css/angular/plugins.css",
                "+++ b/solr/webapp/web/css/angular/plugins.css",
                "@@ -36,3 +36,3 @@ limitations under the License.",
                " #content #plugins #navigation .NOTE { margin-top: 20px; }",
                "-#content #plugins #navigation .NOTE p { color: #c0c0c0; font-style: italic; }",
                "+#content #plugins #navigation .NOTE p { color: #4D4D4D; font-style: italic; }",
                "diff --git a/solr/webapp/web/css/angular/replication.css b/solr/webapp/web/css/angular/replication.css",
                "index a8b1f8802da..4eb608878d4 100644",
                "--- a/solr/webapp/web/css/angular/replication.css",
                "+++ b/solr/webapp/web/css/angular/replication.css",
                "@@ -128,3 +128,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   height: 30px;",
                "@@ -137,3 +137,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   position: absolute;",
                "@@ -145,3 +145,3 @@ limitations under the License.",
                " {",
                "-  background-color: #c0c0c0;",
                "+  background-color: #4D4D4D;",
                "   box-shadow: 5px 5px 10px #c0c0c0;",
                "@@ -208,3 +208,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   margin-left: 20px;",
                "@@ -275,3 +275,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   padding-left: 21px;",
                "@@ -309,3 +309,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                " }",
                "@@ -442,3 +442,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   margin-right: 1px;",
                "@@ -453,3 +453,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                " }",
                "diff --git a/solr/webapp/web/css/angular/schema.css b/solr/webapp/web/css/angular/schema.css",
                "index 98a857f219e..05d947890ad 100644",
                "--- a/solr/webapp/web/css/angular/schema.css",
                "+++ b/solr/webapp/web/css/angular/schema.css",
                "@@ -22,3 +22,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  padding-left: 21px;   ",
                "+  padding-left: 21px;",
                " }",
                "@@ -78,3 +78,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                " }",
                "@@ -169,3 +169,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   padding-right: 5px;",
                "@@ -212,3 +212,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                " }",
                "@@ -307,3 +307,3 @@ limitations under the License.",
                " {",
                "-  color: #999;",
                "+  color: #4D4D4D;",
                "   margin-right: 5px;",
                "@@ -322,3 +322,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   padding-left: 21px;",
                "@@ -384,3 +384,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  color: #c0c0c0;",
                "+  color: #8D8D8D;",
                "   display: block;",
                "@@ -420,3 +420,3 @@ limitations under the License.",
                " {",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                " }",
                "@@ -432,3 +432,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   padding-left: 21px;",
                "@@ -726,2 +726,2 @@ limitations under the License.",
                "   bottom: -20px;",
                "-}",
                "\\ No newline at end of file",
                "+}",
                "diff --git a/solr/webapp/web/css/angular/segments.css b/solr/webapp/web/css/angular/segments.css",
                "index a18b53db6ba..05f5f7bbd1b 100644",
                "--- a/solr/webapp/web/css/angular/segments.css",
                "+++ b/solr/webapp/web/css/angular/segments.css",
                "@@ -34,3 +34,3 @@ limitations under the License.",
                "   top: 10px;",
                "-  width: 30px; ",
                "+  width: 30px;",
                " }",
                "@@ -48,3 +48,3 @@ limitations under the License.",
                " #content #segments #result",
                "-{   ",
                "+{",
                "   width: 77%;",
                "@@ -68,3 +68,3 @@ limitations under the License.",
                "   display: none;",
                "-    background: #C8C8C8;",
                "+    background: #f0f0f0;",
                "     position: absolute;",
                "@@ -82,3 +82,3 @@ limitations under the License.",
                "   float: left;",
                "-  width: 20%;  ",
                "+  width: 20%;",
                "   opacity: 1;",
                "@@ -87,6 +87,6 @@ limitations under the License.",
                " #content #segments .segments-holder li:hover .tooltip {",
                "-  display:block;  ",
                "+  display:block;",
                " }",
                "-#content #segments .segments-holder li dl, ",
                "+#content #segments .segments-holder li dl,",
                " #content #segments .segments-holder li dt {",
                "@@ -99,3 +99,3 @@ limitations under the License.",
                " #content #segments .segments-holder li dt {",
                "-    color: #a0a0a0;",
                "+    color: #4D4D4D;",
                "     left: -45px;",
                "@@ -119,4 +119,4 @@ limitations under the License.",
                " #content #segments .segments-holder li dd div.deleted {",
                "-    background-color: #808080;    ",
                "-    padding-left: 5px;    ",
                "+    background-color: #808080;",
                "+    padding-left: 5px;",
                " }",
                "@@ -125,3 +125,3 @@ limitations under the License.",
                "   background-color: #DDDDDD;",
                "-  float: left;  ",
                "+  float: left;",
                " }",
                "@@ -159,3 +159,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   display: block;",
                "@@ -172,2 +172 @@ limitations under the License.",
                " }",
                "-",
                "diff --git a/solr/webapp/web/css/angular/threads.css b/solr/webapp/web/css/angular/threads.css",
                "index c998733babb..a457c86797b 100644",
                "--- a/solr/webapp/web/css/angular/threads.css",
                "+++ b/solr/webapp/web/css/angular/threads.css",
                "@@ -98,3 +98,3 @@ limitations under the License.",
                " #content #threads #thread-dump tbody .stacktrace .name a span",
                "-{    ",
                "+{",
                "   background-image: url( ../../img/ico/chevron-small-expand.png );",
                "@@ -105,3 +105,3 @@ limitations under the License.",
                " #content #threads #thread-dump tbody .stacktrace.open .name a span",
                "-{   ",
                "+{",
                "   background-image: url( ../../img/ico/chevron-small.png );",
                "@@ -113,3 +113,3 @@ limitations under the License.",
                "   background-position: 0 50%;",
                "-  color: #c0c0c0;",
                "+  color: #4D4D4D;",
                "   font-size: 11px;",
                "@@ -160,2 +160 @@ limitations under the License.",
                " }",
                "-"
            ],
            "changed_files": [
                "solr/webapp/web/css/angular/analysis.css",
                "solr/webapp/web/css/angular/cloud.css",
                "solr/webapp/web/css/angular/collections.css",
                "solr/webapp/web/css/angular/common.css",
                "solr/webapp/web/css/angular/cores.css",
                "solr/webapp/web/css/angular/dataimport.css",
                "solr/webapp/web/css/angular/index.css",
                "solr/webapp/web/css/angular/java-properties.css",
                "solr/webapp/web/css/angular/logging.css",
                "solr/webapp/web/css/angular/menu.css",
                "solr/webapp/web/css/angular/plugins.css",
                "solr/webapp/web/css/angular/replication.css",
                "solr/webapp/web/css/angular/schema.css",
                "solr/webapp/web/css/angular/segments.css",
                "solr/webapp/web/css/angular/threads.css"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-8090": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "540af70ab344f27c09a4448a3b400d4b410c733a"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: read",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-8090",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c663d2c736e393b9e57f4e434254912899c3a611",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519960601,
            "hunks": 2,
            "message": "SOLR-11993: LeaderInitiatedRecoveryThread does not retry on UnknownHostException",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/LeaderInitiatedRecoveryThread.java b/solr/core/src/java/org/apache/solr/cloud/LeaderInitiatedRecoveryThread.java",
                "index 4389d9e2d73..d6b5d64d1d0 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/LeaderInitiatedRecoveryThread.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/LeaderInitiatedRecoveryThread.java",
                "@@ -40,2 +40,3 @@ import java.net.ConnectException;",
                " import java.net.SocketException;",
                "+import java.net.UnknownHostException;",
                " import java.util.List;",
                "@@ -219,3 +220,4 @@ public class LeaderInitiatedRecoveryThread extends Thread {",
                "                   rootCause instanceof NoHttpResponseException ||",
                "-                  rootCause instanceof SocketException);",
                "+                  rootCause instanceof SocketException ||",
                "+                  rootCause instanceof UnknownHostException);"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/LeaderInitiatedRecoveryThread.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11993": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/6.6.3",
                "releases/lucene-solr/6.6.4",
                "releases/lucene-solr/6.6.5",
                "releases/lucene-solr/6.6.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: read",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11993",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d67b66b5f989ce32b24d2e6300ef5629ef98fc00",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518723840,
            "hunks": 23,
            "message": "SOLR-11912: Improve TriggerIntegrationTest to avoid side-effects between tests (spurious autoscaling events). Add a convenience method to DistribStateManager to remove data recursively.",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/Overseer.java b/solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "index dbadcde7d44..b94af278fe7 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "@@ -470,2 +470,6 @@ public class Overseer implements SolrCloseable {",
                "+    public Closeable getThread() {",
                "+      return thread;",
                "+    }",
                "+",
                "     public boolean isClosed() {",
                "@@ -568,2 +572,11 @@ public class Overseer implements SolrCloseable {",
                "   }",
                "+",
                "+  /**",
                "+   * For tests.",
                "+   * @lucene.internal",
                "+   * @return trigger thread",
                "+   */",
                "+  public synchronized OverseerThread getTriggerThread() {",
                "+    return triggerThread;",
                "+  }",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateCollectionCmd.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateCollectionCmd.java",
                "index 428ad837d64..f1388a400ca 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateCollectionCmd.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateCollectionCmd.java",
                "@@ -38,2 +38,3 @@ import org.apache.solr.client.solrj.cloud.autoscaling.BadVersionException;",
                " import org.apache.solr.client.solrj.cloud.autoscaling.DistribStateManager;",
                "+import org.apache.solr.client.solrj.cloud.autoscaling.NotEmptyException;",
                " import org.apache.solr.client.solrj.cloud.autoscaling.Policy;",
                "@@ -398,9 +399,3 @@ public class CreateCollectionCmd implements OverseerCollectionMessageHandler.Cmd",
                "     try {",
                "-      if (stateManager.hasData(termsPath)) {",
                "-        List<String> paths = stateManager.listData(termsPath);",
                "-        for (String path : paths) {",
                "-          stateManager.removeData(termsPath + \"/\" + path, -1);",
                "-        }",
                "-        stateManager.removeData(termsPath, -1);",
                "-      }",
                "+      stateManager.removeRecursively(termsPath, true, true);",
                "     } catch (InterruptedException e) {",
                "@@ -408,3 +403,3 @@ public class CreateCollectionCmd implements OverseerCollectionMessageHandler.Cmd",
                "       throw new SolrException(ErrorCode.SERVER_ERROR, \"Error deleting old term nodes for collection from Zookeeper\", e);",
                "-    } catch (KeeperException | IOException | BadVersionException e) {",
                "+    } catch (KeeperException | IOException | NotEmptyException | BadVersionException e) {",
                "       throw new SolrException(ErrorCode.SERVER_ERROR, \"Error deleting old term nodes for collection from Zookeeper\", e);",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread.java",
                "index 7a9390bb569..717e666510d 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread.java",
                "@@ -104,2 +104,11 @@ public class OverseerTriggerThread implements Runnable, SolrCloseable {",
                "+  /**",
                "+   * For tests.",
                "+   * @lucene.internal",
                "+   * @return current {@link ScheduledTriggers} instance",
                "+   */",
                "+  public ScheduledTriggers getScheduledTriggers() {",
                "+    return scheduledTriggers;",
                "+  }",
                "+",
                "   @Override",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "index 46e77d388f7..d80416af3ec 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "@@ -30,3 +30,2 @@ import java.util.Locale;",
                " import java.util.Map;",
                "-import java.util.NoSuchElementException;",
                " import java.util.Set;",
                "@@ -61,3 +60,2 @@ import org.apache.solr.core.SolrResourceLoader;",
                " import org.apache.solr.util.DefaultSolrThreadFactory;",
                "-import org.apache.zookeeper.Op;",
                " import org.slf4j.Logger;",
                "@@ -352,4 +350,5 @@ public class ScheduledTriggers implements Closeable {",
                "    * Pauses all scheduled trigger invocations without interrupting any that are in progress",
                "+   * @lucene.internal",
                "    */",
                "-  private synchronized void pauseTriggers()  {",
                "+  public synchronized void pauseTriggers()  {",
                "     if (log.isDebugEnabled()) {",
                "@@ -363,4 +362,5 @@ public class ScheduledTriggers implements Closeable {",
                "    * @param afterDelayMillis the initial delay in milliseconds after which triggers should be resumed",
                "+   * @lucene.internal",
                "    */",
                "-  private synchronized void resumeTriggers(long afterDelayMillis) {",
                "+  public synchronized void resumeTriggers(long afterDelayMillis) {",
                "     scheduledTriggers.forEach((s, scheduledTrigger) ->  {",
                "@@ -433,2 +433,13 @@ public class ScheduledTriggers implements Closeable {",
                "+  /**",
                "+   * Remove and stop all triggers. Also cleans up any leftover",
                "+   * state / events in ZK.",
                "+   */",
                "+  public synchronized void removeAll() {",
                "+    getScheduledTriggerNames().forEach(t -> {",
                "+      log.info(\"-- removing trigger: \" + t);",
                "+      remove(t);",
                "+    });",
                "+  }",
                "+",
                "   /**",
                "@@ -449,7 +460,3 @@ public class ScheduledTriggers implements Closeable {",
                "     try {",
                "-      if (stateManager.hasData(statePath)) {",
                "-        stateManager.removeData(statePath, -1);",
                "-      }",
                "-    } catch (NoSuchElementException e) {",
                "-      // already removed by someone else",
                "+      stateManager.removeRecursively(statePath, true, true);",
                "     } catch (Exception e) {",
                "@@ -458,13 +465,3 @@ public class ScheduledTriggers implements Closeable {",
                "     try {",
                "-      if (stateManager.hasData(eventsPath)) {",
                "-        List<String> events = stateManager.listData(eventsPath);",
                "-        List<Op> ops = new ArrayList<>(events.size() + 1);",
                "-        events.forEach(ev -> {",
                "-          ops.add(Op.delete(eventsPath + \"/\" + ev, -1));",
                "-        });",
                "-        ops.add(Op.delete(eventsPath, -1));",
                "-        stateManager.multi(ops);",
                "-      }",
                "-    } catch (NoSuchElementException e) {",
                "-      // already removed by someone else",
                "+      stateManager.removeRecursively(eventsPath, true, true);",
                "     } catch (Exception e) {",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/DelegatingDistribStateManager.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/DelegatingDistribStateManager.java",
                "index 2fea23be1fb..1adc6432429 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/DelegatingDistribStateManager.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/DelegatingDistribStateManager.java",
                "@@ -77,3 +77,3 @@ public class DelegatingDistribStateManager implements DistribStateManager {",
                "   @Override",
                "-  public void removeData(String path, int version) throws NoSuchElementException, IOException, BadVersionException, KeeperException, InterruptedException {",
                "+  public void removeData(String path, int version) throws NoSuchElementException, NotEmptyException, IOException, BadVersionException, KeeperException, InterruptedException {",
                "     delegate.removeData(path, version);",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/DistribStateManager.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/DistribStateManager.java",
                "index 26aaeadd515..e2ddbcf775d 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/DistribStateManager.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/DistribStateManager.java",
                "@@ -19,2 +19,6 @@ package org.apache.solr.client.solrj.cloud.autoscaling;",
                " import java.io.IOException;",
                "+import java.util.ArrayList;",
                "+import java.util.Collections;",
                "+import java.util.Deque;",
                "+import java.util.LinkedList;",
                " import java.util.List;",
                "@@ -64,3 +68,3 @@ public interface DistribStateManager extends SolrCloseable {",
                "-  void removeData(String path, int version) throws NoSuchElementException, IOException, KeeperException, InterruptedException, BadVersionException;",
                "+  void removeData(String path, int version) throws NoSuchElementException, IOException, NotEmptyException, KeeperException, InterruptedException, BadVersionException;",
                "@@ -75,2 +79,65 @@ public interface DistribStateManager extends SolrCloseable {",
                "   }",
                "+",
                "+  /**",
                "+   * List a subtree including the root path, using breadth-first traversal.",
                "+   * @param root root path",
                "+   * @return list of full paths, with the root path being the first element",
                "+   */",
                "+  default List<String> listTree(String root) throws NoSuchElementException, IOException, KeeperException, InterruptedException {",
                "+    Deque<String> queue = new LinkedList<String>();",
                "+    List<String> tree = new ArrayList<String>();",
                "+    if (!root.startsWith(\"/\")) {",
                "+      root = \"/\" + root;",
                "+    }",
                "+    queue.add(root);",
                "+    tree.add(root);",
                "+    while (true) {",
                "+      String node = queue.pollFirst();",
                "+      if (node == null) {",
                "+        break;",
                "+      }",
                "+      List<String> children = listData(node);",
                "+      for (final String child : children) {",
                "+        final String childPath = node + \"/\" + child;",
                "+        queue.add(childPath);",
                "+        tree.add(childPath);",
                "+      }",
                "+    }",
                "+    return tree;",
                "+  }",
                "+",
                "+  /**",
                "+   * Remove data recursively.",
                "+   * @param root root path",
                "+   * @param ignoreMissing ignore errors if root or any children path is missing",
                "+   * @param includeRoot when true delete also the root path",
                "+   */",
                "+  default void removeRecursively(String root, boolean ignoreMissing, boolean includeRoot) throws NoSuchElementException, IOException, NotEmptyException, KeeperException, InterruptedException, BadVersionException {",
                "+    List<String> tree;",
                "+    try {",
                "+      tree = listTree(root);",
                "+    } catch (NoSuchElementException e) {",
                "+      if (ignoreMissing) {",
                "+        return;",
                "+      } else {",
                "+        throw e;",
                "+      }",
                "+    }",
                "+    Collections.reverse(tree);",
                "+    for (String p : tree) {",
                "+      if (p.equals(\"/\")) {",
                "+        continue;",
                "+      }",
                "+      if (p.equals(root) && !includeRoot) {",
                "+        continue;",
                "+      }",
                "+      try {",
                "+        removeData(p, -1);",
                "+      } catch (NoSuchElementException e) {",
                "+        if (!ignoreMissing) {",
                "+          throw e;",
                "+        }",
                "+      }",
                "+    }",
                "+  }",
                " }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/NotEmptyException.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/NotEmptyException.java",
                "new file mode 100644",
                "index 00000000000..1480cd911e1",
                "--- /dev/null",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/NotEmptyException.java",
                "@@ -0,0 +1,35 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.client.solrj.cloud.autoscaling;",
                "+",
                "+/**",
                "+ *",
                "+ */",
                "+public class NotEmptyException extends Exception {",
                "+",
                "+  private final String path;",
                "+",
                "+  public NotEmptyException(String path) {",
                "+    super(\"Path not empty: \" + path);",
                "+    this.path = path;",
                "+  }",
                "+",
                "+  public String getPath() {",
                "+    return path;",
                "+  }",
                "+",
                "+}",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ZkDistribStateManager.java b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ZkDistribStateManager.java",
                "index 1662d5b7ec8..632f549de8f 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ZkDistribStateManager.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ZkDistribStateManager.java",
                "@@ -29,2 +29,3 @@ import org.apache.solr.client.solrj.cloud.autoscaling.BadVersionException;",
                " import org.apache.solr.client.solrj.cloud.autoscaling.DistribStateManager;",
                "+import org.apache.solr.client.solrj.cloud.autoscaling.NotEmptyException;",
                " import org.apache.solr.client.solrj.cloud.autoscaling.VersionedData;",
                "@@ -127,3 +128,3 @@ public class ZkDistribStateManager implements DistribStateManager {",
                "   @Override",
                "-  public void removeData(String path, int version) throws NoSuchElementException, BadVersionException, IOException, KeeperException, InterruptedException {",
                "+  public void removeData(String path, int version) throws NoSuchElementException, BadVersionException, NotEmptyException, IOException, KeeperException, InterruptedException {",
                "     try {",
                "@@ -132,2 +133,4 @@ public class ZkDistribStateManager implements DistribStateManager {",
                "       throw new NoSuchElementException(path);",
                "+    } catch (KeeperException.NotEmptyException e) {",
                "+      throw new NotEmptyException(path);",
                "     } catch (KeeperException.BadVersionException e) {"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "solr/core/src/java/org/apache/solr/cloud/api/collections/CreateCollectionCmd.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/DelegatingDistribStateManager.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/DistribStateManager.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/NotEmptyException.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/impl/ZkDistribStateManager.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11912": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "26a037636da8ea61dc275bbda6c320f617aae6e8"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11912",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "72f23c89ec0a845d25129be2462c79147f6ff0e5",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519539873,
            "hunks": 16,
            "message": "SOLR-8327: Cluster state caching for nodes not hosting the collection",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/Overseer.java b/solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "index b94af278fe7..608fb208330 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "@@ -72,3 +72,3 @@ public class Overseer implements SolrCloseable {",
                "   // System properties are used in tests to make them run fast",
                "-  public static final int STATE_UPDATE_DELAY = Integer.getInteger(\"solr.OverseerStateUpdateDelay\", 2000);  // delay between cloud state updates",
                "+  public static final int STATE_UPDATE_DELAY = ZkStateReader.STATE_UPDATE_DELAY;",
                "   public static final int STATE_UPDATE_BATCH_SIZE = Integer.getInteger(\"solr.OverseerStateUpdateBatchSize\", 10000);",
                "diff --git a/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java b/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java",
                "index 6b10f588225..50fa71c0452 100644",
                "--- a/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java",
                "+++ b/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java",
                "@@ -821,3 +821,3 @@ public class HttpSolrCall {",
                "     ClusterState clusterState = zkStateReader.getClusterState();",
                "-    DocCollection collection = clusterState.getCollectionOrNull(collectionName);",
                "+    DocCollection collection = clusterState.getCollectionOrNull(collectionName, true);",
                "     if (collection == null) {",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java",
                "index 02f40c4b2be..59a1a146bfe 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java",
                "@@ -125,2 +125,10 @@ public class ClusterState implements JSONWriter.Writable {",
                "+  /**",
                "+   * Returns the corresponding {@link DocCollection} object for the given collection name",
                "+   * if such a collection exists. Returns null otherwise.  Equivalent to getCollectionOrNull(collectionName, false)",
                "+   */",
                "+  public DocCollection getCollectionOrNull(String collectionName) {",
                "+    return getCollectionOrNull(collectionName, false);",
                "+  }",
                "+",
                "   /**",
                "@@ -129,2 +137,5 @@ public class ClusterState implements JSONWriter.Writable {",
                "    *",
                "+   * @param collectionName Name of the collection",
                "+   * @param allowCached allow LazyCollectionRefs to use a time-based cached value",
                "+   *",
                "    * Implementation note: This method resolves the collection reference by calling",
                "@@ -134,5 +145,5 @@ public class ClusterState implements JSONWriter.Writable {",
                "    */",
                "-  public DocCollection getCollectionOrNull(String collectionName) {",
                "+  public DocCollection getCollectionOrNull(String collectionName, boolean allowCached) {",
                "     CollectionRef ref = collectionStates.get(collectionName);",
                "-    return ref == null ? null : ref.get();",
                "+    return ref == null ? null : ref.get(allowCached);",
                "   }",
                "@@ -370,3 +381,14 @@ public class ClusterState implements JSONWriter.Writable {",
                "+    /** Return the DocCollection, always refetching if lazy. Equivalent to get(false)",
                "+     * @return The collection state modeled in zookeeper",
                "+     */",
                "     public DocCollection get(){",
                "+      return get(false);",
                "+    }",
                "+",
                "+    /** Return the DocCollection",
                "+     * @param allowCached Determines if cached value can be used.  Applies only to LazyCollectionRef.",
                "+     * @return The collection state modeled in zookeeper",
                "+     */",
                "+    public DocCollection get(boolean allowCached) {",
                "       gets.incrementAndGet();",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "index f4e4d1af902..dbda3d883cf 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "@@ -72,2 +72,3 @@ import static org.apache.solr.common.util.Utils.fromJSON;",
                " public class ZkStateReader implements Closeable {",
                "+  public static final int STATE_UPDATE_DELAY = Integer.getInteger(\"solr.OverseerStateUpdateDelay\", 2000);  // delay between cloud state updates",
                "   private static final Logger LOG = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "@@ -138,3 +139,3 @@ public class ZkStateReader implements Closeable {",
                "   public static final String ELECTION_NODE = \"election\";",
                "-  ",
                "+",
                "   /** Collections tracked in the legacy (shared) state format, reflects the contents of clusterstate.json. */",
                "@@ -165,2 +166,4 @@ public class ZkStateReader implements Closeable {",
                "+  private static final long LAZY_CACHE_TIME = TimeUnit.NANOSECONDS.convert(STATE_UPDATE_DELAY, TimeUnit.MILLISECONDS);",
                "+",
                "   /**",
                "@@ -634,4 +637,5 @@ public class ZkStateReader implements Closeable {",
                "   private class LazyCollectionRef extends ClusterState.CollectionRef {",
                "-",
                "     private final String collName;",
                "+    private long lastUpdateTime;",
                "+    private DocCollection cachedDocCollection;",
                "@@ -640,2 +644,3 @@ public class ZkStateReader implements Closeable {",
                "       this.collName = collName;",
                "+      this.lastUpdateTime = -1;",
                "     }",
                "@@ -643,6 +648,21 @@ public class ZkStateReader implements Closeable {",
                "     @Override",
                "-    public DocCollection get() {",
                "+    public synchronized DocCollection get(boolean allowCached) {",
                "       gets.incrementAndGet();",
                "-      // TODO: consider limited caching",
                "-      return getCollectionLive(ZkStateReader.this, collName);",
                "+      if (!allowCached || lastUpdateTime < 0 || System.nanoTime() - lastUpdateTime > LAZY_CACHE_TIME) {",
                "+        boolean shouldFetch = true;",
                "+        if (cachedDocCollection != null) {",
                "+          Stat exists = null;",
                "+          try {",
                "+            exists = zkClient.exists(getCollectionPath(collName), null, true);",
                "+          } catch (Exception e) {}",
                "+          if (exists != null && exists.getVersion() == cachedDocCollection.getZNodeVersion()) {",
                "+            shouldFetch = false;",
                "+          }",
                "+        }",
                "+        if (shouldFetch) {",
                "+          cachedDocCollection = getCollectionLive(ZkStateReader.this, collName);",
                "+          lastUpdateTime = System.nanoTime();",
                "+        }",
                "+      }",
                "+      return cachedDocCollection;",
                "     }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java",
                "solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState.java",
                "solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-8327": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b212f2e9b7b5d20ab8d6168b5ddcb164f536d1af"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-8327",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f2c4ca5ed3c6b46a006d5bf0ec45c2a17c25855a",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518290673,
            "hunks": 13,
            "message": "LUCENE-8168: Move Groovy scripts in build files to separate files. Update Groovy to 2.4.13",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index 2346d540587..b5d3015944d 100755",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -127,173 +127,3 @@",
                "   <target name=\"-validate-source-patterns\" unless=\"disable.source-patterns\" depends=\"resolve-groovy,rat-sources-typedef\">",
                "-    <!-- check that there are no @author javadoc tags, tabs, svn keywords, javadoc-style licenses, or nocommits: -->",
                "-    <property name=\"validate.baseDir\" location=\".\"/>",
                "-    <groovy taskname=\"source-patterns\" classpathref=\"rat.classpath\"><![CDATA[",
                "-      import org.apache.tools.ant.BuildException;",
                "-      import org.apache.tools.ant.Project;",
                "-      import org.apache.rat.Defaults;",
                "-      import org.apache.rat.document.impl.FileDocument;",
                "-      import org.apache.rat.api.MetaData;",
                "-      ",
                "-      def extensions = [",
                "-        'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',",
                "-        'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',",
                "-        'properties', 'mdtext',",
                "-        'template', 'adoc', 'json',",
                "-      ];",
                "-      def invalidPatterns = [",
                "-        (~$/@author\\b/$) : '@author javadoc tag',",
                "-        (~$/(?i)\\bno(n|)commit\\b/$) : 'nocommit',",
                "-        (~$/\\bTOOD:/$) : 'TOOD instead TODO',",
                "-        (~$/\\t/$) : 'tabs instead spaces',",
                "-        (~$/\\Q/**\\E((?:\\s)|(?:\\*))*\\Q{@inheritDoc}\\E((?:\\s)|(?:\\*))*\\Q*/\\E/$) : '{@inheritDoc} on its own is unnecessary',",
                "-        (~$/\\$$(?:LastChanged)?Date\\b/$) : 'svn keyword',",
                "-        (~$/\\$$(?:(?:LastChanged)?Revision|Rev)\\b/$) : 'svn keyword',",
                "-        (~$/\\$$(?:LastChangedBy|Author)\\b/$) : 'svn keyword',",
                "-        (~$/\\$$(?:Head)?URL\\b/$) : 'svn keyword',",
                "-        (~$/\\$$Id\\b/$) : 'svn keyword',",
                "-        (~$/\\$$Header\\b/$) : 'svn keyword',",
                "-        (~$/\\$$Source\\b/$) : 'svn keyword',",
                "-        (~$/^\\uFEFF/$) : 'UTF-8 byte order mark'",
                "-      ];",
                "-      ",
                "-      def baseDir = properties['validate.baseDir'];",
                "-      def baseDirLen = baseDir.length() + 1;",
                "-      ",
                "-      def found = 0;",
                "-      def violations = new TreeSet();",
                "-      def reportViolation = { f, name ->",
                "-        task.log(name + ': ' + f.toString().substring(baseDirLen).replace(File.separatorChar, (char)'/'), Project.MSG_ERR);",
                "-        violations.add(name);",
                "-        found++;",
                "-      }",
                "-      ",
                "-      def javadocsPattern = ~$/(?sm)^\\Q/**\\E(.*?)\\Q*/\\E/$;",
                "-      def javaCommentPattern = ~$/(?sm)^\\Q/*\\E(.*?)\\Q*/\\E/$;",
                "-      def xmlCommentPattern = ~$/(?sm)\\Q<!--\\E(.*?)\\Q-->\\E/$;",
                "-      def lineSplitter = ~$/[\\r\\n]+/$;",
                "-      def singleLineSplitter = ~$/\\n\\r?/$;",
                "-      def licenseMatcher = Defaults.createDefaultMatcher();",
                "-      def validLoggerPattern = ~$/(?s)\\b(private\\s|static\\s|final\\s){3}+\\s*Logger\\s+\\p{javaJavaIdentifierStart}+\\s+=\\s+\\QLoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\\E/$;",
                "-      def packagePattern = ~$/(?m)^\\s*package\\s+org\\.apache.*;/$;",
                "-      def xmlTagPattern = ~$/(?m)\\s*<[a-zA-Z].*/$;",
                "-      def sourceHeaderPattern = ~$/\\[source\\b.*/$;",
                "-      def blockBoundaryPattern = ~$/----\\s*/$;",
                "-      def blockTitlePattern = ~$/\\..*/$;",
                "-      def unescapedSymbolPattern = ~$/(?<=[^\\\\]|^)([-=]>|<[-=])/$; // SOLR-10883",
                "-      ",
                "-      def isLicense = { matcher, ratDocument ->",
                "-        licenseMatcher.reset();",
                "-        return lineSplitter.split(matcher.group(1)).any{ licenseMatcher.match(ratDocument, it) };",
                "-      }",
                "-",
                "-      def checkLicenseHeaderPrecedes = { f, description, contentPattern, commentPattern, text, ratDocument ->",
                "-        def contentMatcher = contentPattern.matcher(text);",
                "-        if (contentMatcher.find()) {",
                "-          def contentStartPos = contentMatcher.start();",
                "-          def commentMatcher = commentPattern.matcher(text);",
                "-          while (commentMatcher.find()) {",
                "-            if (isLicense(commentMatcher, ratDocument)) {",
                "-              if (commentMatcher.start() < contentStartPos) {",
                "-                break; // This file is all good, so break loop: license header precedes 'description' definition",
                "-              } else {",
                "-                reportViolation(f, description+' declaration precedes license header');",
                "-              }",
                "-            }",
                "-          }",
                "-        }",
                "-      }",
                "-",
                "-      def checkMockitoAssume = { f, text ->",
                "-        if (text.contains(\"mockito\") && !text.contains(\"assumeWorkingMockito()\")) {",
                "-          reportViolation(f, 'File uses Mockito but has no assumeWorkingMockito() call');",
                "-        }",
                "-      }",
                "-",
                "-      def checkForUnescapedSymbolSubstitutions = { f, text ->",
                "-        def inCodeBlock = false;",
                "-        def underSourceHeader = false;",
                "-        def lineNumber = 0;",
                "-        singleLineSplitter.split(text).each {",
                "-          ++lineNumber;",
                "-          if (underSourceHeader) { // This line is either a single source line, or the boundary of a code block",
                "-            inCodeBlock = blockBoundaryPattern.matcher(it).matches();",
                "-            if ( ! blockTitlePattern.matcher(it).matches()) {",
                "-              underSourceHeader = false;",
                "-            }",
                "-          } else {",
                "-            if (inCodeBlock) {",
                "-              inCodeBlock = ! blockBoundaryPattern.matcher(it).matches();",
                "-            } else {",
                "-              underSourceHeader = sourceHeaderPattern.matcher(it).lookingAt();",
                "-              if ( ! underSourceHeader) {",
                "-                def unescapedSymbolMatcher = unescapedSymbolPattern.matcher(it);",
                "-                if (unescapedSymbolMatcher.find()) {",
                "-                  reportViolation(f, 'Unescaped symbol \"' + unescapedSymbolMatcher.group(1) + '\" on line #' + lineNumber);",
                "-                }",
                "-              }",
                "-            }",
                "-          }",
                "-        }",
                "-      }",
                "-",
                "-      ant.fileScanner{",
                "-        fileset(dir: baseDir){",
                "-          extensions.each{",
                "-            include(name: 'lucene/**/*.' + it)",
                "-            include(name: 'solr/**/*.' + it)",
                "-            include(name: 'dev-tools/**/*.' + it)",
                "-            include(name: '*.' + it)",
                "-          }",
                "-          // TODO: For now we don't scan txt files, so we",
                "-          // check licenses in top-level folders separately:",
                "-          include(name: '*.txt')",
                "-          include(name: '*/*.txt')",
                "-          // excludes:",
                "-          exclude(name: '**/build/**')",
                "-          exclude(name: '**/dist/**')",
                "-          exclude(name: 'lucene/benchmark/work/**')",
                "-          exclude(name: 'lucene/benchmark/temp/**')",
                "-          exclude(name: '**/CheckLoggingConfiguration.java')",
                "-          exclude(name: 'build.xml') // ourselves :-)",
                "-        }",
                "-      }.each{ f ->",
                "-        task.log('Scanning file: ' + f, Project.MSG_VERBOSE);",
                "-        def text = f.getText('UTF-8');",
                "-        invalidPatterns.each{ pattern,name ->",
                "-          if (pattern.matcher(text).find()) {",
                "-            reportViolation(f, name);",
                "-          }",
                "-        }",
                "-        def javadocsMatcher = javadocsPattern.matcher(text);",
                "-        def ratDocument = new FileDocument(f);",
                "-        while (javadocsMatcher.find()) {",
                "-          if (isLicense(javadocsMatcher, ratDocument)) {",
                "-            reportViolation(f, String.format(Locale.ENGLISH, 'javadoc-style license header [%s]',",
                "-              ratDocument.getMetaData().value(MetaData.RAT_URL_LICENSE_FAMILY_NAME)));",
                "-          }",
                "-        }",
                "-        if (f.name.endsWith('.java')) {",
                "-          if (text.contains('org.slf4j.LoggerFactory')) {",
                "-            if (!validLoggerPattern.matcher(text).find()) {",
                "-              reportViolation(f, 'invalid logging pattern [not private static final, uses static class name]');",
                "-            }",
                "-          }",
                "-          checkLicenseHeaderPrecedes(f, 'package', packagePattern, javaCommentPattern, text, ratDocument);",
                "-          if (f.name.contains(\"Test\")) {",
                "-            checkMockitoAssume(f, text);",
                "-          }",
                "-        }",
                "-        if (f.name.endsWith('.xml') || f.name.endsWith('.xml.template')) {",
                "-          checkLicenseHeaderPrecedes(f, '<tag>', xmlTagPattern, xmlCommentPattern, text, ratDocument);",
                "-        }",
                "-        if (f.name.endsWith('.adoc')) {",
                "-          checkForUnescapedSymbolSubstitutions(f, text);",
                "-        }",
                "-      };",
                "-      ",
                "-      if (found) {",
                "-        throw new BuildException(String.format(Locale.ENGLISH, 'Found %d violations in source files (%s).',",
                "-          found, violations.join(', ')));",
                "-      }",
                "-    ]]></groovy>",
                "+    <groovy taskname=\"source-patterns\" classpathref=\"rat.classpath\" src=\"${common.dir}/tools/src/groovy/check-source-patterns.groovy\"/>",
                "   </target>",
                "@@ -412,27 +242,3 @@",
                "   <target name=\"run-maven-build\" depends=\"get-maven-poms,install-maven-tasks,resolve-groovy\" description=\"Runs the Maven build using automatically generated POMs\">",
                "-    <groovy><![CDATA[",
                "-      import groovy.xml.NamespaceBuilder;",
                "-      import org.apache.tools.ant.Project;",
                "-      def userHome = properties['user.home'], commonDir = properties['common.dir'];",
                "-      def propPrefix = '-mvn.inject.'; int propPrefixLen = propPrefix.length();",
                "-      def subProject = project.createSubProject();",
                "-      project.copyUserProperties(subProject);",
                "-      subProject.initProperties();",
                "-      new AntBuilder(subProject).sequential{",
                "-        property(file: userHome+'/lucene.build.properties', prefix: propPrefix);",
                "-        property(file: userHome+'/build.properties', prefix: propPrefix);",
                "-        property(file: commonDir+'/build.properties', prefix: propPrefix);",
                "-      };",
                "-      def cmdlineProps = subProject.properties",
                "-        .findAll{ k, v -> k.startsWith(propPrefix) }",
                "-        .collectEntries{ k, v -> [k.substring(propPrefixLen), v] };",
                "-      cmdlineProps << project.userProperties.findAll{ k, v -> !k.startsWith('ant.') };",
                "-      def artifact = NamespaceBuilder.newInstance(ant, 'antlib:org.apache.maven.artifact.ant');",
                "-      task.log('Running Maven with props: ' + cmdlineProps.toString(), Project.MSG_INFO);",
                "-      artifact.mvn(pom: properties['maven-build-dir']+'/pom.xml', mavenVersion: properties['maven-version'], failonerror: true, fork: true) {",
                "-        cmdlineProps.each{ k, v -> arg(value: '-D' + k + '=' + v) };",
                "-        arg(value: '-fae');",
                "-        arg(value: 'install');",
                "-      };",
                "-    ]]></groovy>",
                "+    <groovy src=\"${common.dir}/tools/src/groovy/run-maven-build.groovy\"/>",
                "   </target>",
                "@@ -669,44 +475,3 @@ File | Project Structure | Platform Settings | SDKs):",
                "         inline=\"true\" conf=\"default\" transitive=\"true\" pathid=\"jgit.classpath\"/>",
                "-      <groovy taskname=\"wc-checker\" classpathref=\"jgit.classpath\"><![CDATA[",
                "-        import org.apache.tools.ant.BuildException;",
                "-        import org.apache.tools.ant.Project;",
                "-        import org.eclipse.jgit.api.Git;",
                "-        import org.eclipse.jgit.api.Status;",
                "-        import org.eclipse.jgit.lib.Repository;",
                "-        import org.eclipse.jgit.storage.file.FileRepositoryBuilder;",
                "-        import org.eclipse.jgit.errors.*;",
                "-",
                "-        def setProjectPropertyFromSet(prop, set) {",
                "-          if (set) {",
                "-            properties[prop] = '* ' + set.join(properties['line.separator'] + '* ');",
                "-          }",
                "-        };",
                "-",
                "-        try {",
                "-          task.log('Initializing working copy...', Project.MSG_INFO);",
                "-          final Repository repository = new FileRepositoryBuilder()",
                "-            .setWorkTree(project.getBaseDir())",
                "-            .setMustExist(true)",
                "-            .build();",
                "-",
                "-          task.log('Checking working copy status...', Project.MSG_INFO);",
                "-          final Status status = new Git(repository).status().call();",
                "-          if (!status.isClean()) {",
                "-            final SortedSet unversioned = new TreeSet(), modified = new TreeSet();",
                "-            status.properties.each{ prop, val ->",
                "-              if (val instanceof Set) {",
                "-                if (prop in ['untracked', 'untrackedFolders', 'missing']) {",
                "-                  unversioned.addAll(val);",
                "-                } else if (prop != 'ignoredNotInIndex') {",
                "-                  modified.addAll(val);",
                "-                }",
                "-              }",
                "-            };",
                "-            setProjectPropertyFromSet('wc.unversioned.files', unversioned);",
                "-            setProjectPropertyFromSet('wc.modified.files', modified);",
                "-          }",
                "-        } catch (RepositoryNotFoundException | NoWorkTreeException | NotSupportedException e) {",
                "-          task.log('WARNING: Development directory is not a valid GIT checkout! Disabling checks...', Project.MSG_WARN);",
                "-        }",
                "-      ]]></groovy>",
                "+      <groovy taskname=\"wc-checker\" classpathref=\"jgit.classpath\" src=\"${common.dir}/tools/src/groovy/check-working-copy.groovy\"/>",
                "       <fail if=\"wc.unversioned.files\"",
                "diff --git a/lucene/common-build.xml b/lucene/common-build.xml",
                "index e63b116cabc..539d206a1ad 100644",
                "--- a/lucene/common-build.xml",
                "+++ b/lucene/common-build.xml",
                "@@ -570,3 +570,3 @@",
                "       inline=\"true\" conf=\"default\" transitive=\"true\" log=\"download-only\" pathid=\"asm.classpath\"/>",
                "-    <groovy classpathref=\"asm.classpath\" src=\"${common.dir}/tools/src/groovy/patch-mrjar-classes.groovy\"/>",
                "+    <groovy taskname=\"patch-cls\" classpathref=\"asm.classpath\" src=\"${common.dir}/tools/src/groovy/patch-mrjar-classes.groovy\"/>",
                "     <touch file=\"${build.dir}/patch-mrjar.stamp\"/>",
                "@@ -1570,54 +1570,3 @@ ${tests-output}/junit4-*.suites     - per-JVM executed suites",
                "     </fail>",
                "-    <groovy taskname=\"beaster\"><![CDATA[",
                "-      import org.apache.tools.ant.BuildException;",
                "-      import org.apache.tools.ant.BuildLogger;",
                "-      import org.apache.tools.ant.Project;",
                "-      ",
                "-      int iters = (properties['beast.iters'] ?: '1') as int;",
                "-      if (iters <= 1) {",
                "-        throw new BuildException(\"Please give -Dbeast.iters with an int value > 1.\");",
                "-      }",
                "-      ",
                "-      def antcall = project.createTask('antcall');",
                "-      antcall.with {",
                "-        target = '-test';",
                "-        inheritAll = true;",
                "-        inheritRefs = true;",
                "-        createParam().with {",
                "-          name = \"tests.isbeasting\";",
                "-          value = \"true\";",
                "-        };",
                "-      };",
                "-      ",
                "-      (1..iters).each { i ->",
                "-        task.log('Beast round: ' + i, Project.MSG_INFO);",
                "-        try {",
                "-          // disable verbose build logging:",
                "-          project.buildListeners.each { listener ->",
                "-            if (listener instanceof BuildLogger) {",
                "-              listener.messageOutputLevel = Project.MSG_WARN;",
                "-            }",
                "-          };",
                "-          ",
                "-          antcall.execute();",
                "-          ",
                "-        } catch (BuildException be) {",
                "-          def logFile = new File(properties[\"junit.output.dir\"], \"tests-failures.txt\");",
                "-          if (logFile.exists()) {",
                "-            logFile.eachLine(\"UTF-8\", { line ->",
                "-              task.log(line, Project.MSG_ERR);",
                "-            });",
                "-          }",
                "-          throw be;",
                "-        } finally {",
                "-          // restore build logging (unfortunately there is no way to get the original logging level (write-only property):",
                "-          project.buildListeners.each { listener ->",
                "-            if (listener instanceof BuildLogger) {",
                "-              listener.messageOutputLevel = Project.MSG_INFO;",
                "-            }",
                "-          };",
                "-        }",
                "-      };",
                "-      task.log('Beasting finished.', Project.MSG_INFO);",
                "-    ]]></groovy>",
                "+    <groovy taskname=\"beaster\" src=\"${common.dir}/tools/src/groovy/run-beaster.groovy\"/>",
                "   </target>",
                "@@ -2486,3 +2435,3 @@ ${ant.project.name}.test.dependencies=${test.classpath.list}",
                "   <target name=\"resolve-groovy\" unless=\"groovy.loaded\" depends=\"ivy-availability-check,ivy-configure\">",
                "-    <ivy:cachepath organisation=\"org.codehaus.groovy\" module=\"groovy-all\" revision=\"2.4.12\"",
                "+    <ivy:cachepath organisation=\"org.codehaus.groovy\" module=\"groovy-all\" revision=\"2.4.13\"",
                "       inline=\"true\" conf=\"default\" type=\"jar\" transitive=\"true\" pathid=\"groovy.classpath\"/>",
                "@@ -2569,44 +2518,3 @@ ${ant.project.name}.test.dependencies=${test.classpath.list}",
                "     </ivy:cachepath>",
                "-    <groovy classpathref=\"markdown.classpath\"><![CDATA[",
                "-      import org.apache.tools.ant.AntTypeDefinition;",
                "-      import org.apache.tools.ant.ComponentHelper;",
                "-      import org.apache.tools.ant.filters.TokenFilter.ChainableReaderFilter;",
                "-      import com.vladsch.flexmark.ast.Node;",
                "-      import com.vladsch.flexmark.ast.Heading;",
                "-      import com.vladsch.flexmark.html.HtmlRenderer;",
                "-      import com.vladsch.flexmark.parser.Parser;",
                "-      import com.vladsch.flexmark.parser.ParserEmulationProfile;",
                "-      import com.vladsch.flexmark.util.html.Escaping;",
                "-      import com.vladsch.flexmark.util.options.MutableDataSet;",
                "-      import com.vladsch.flexmark.ext.abbreviation.AbbreviationExtension;",
                "-      import com.vladsch.flexmark.ext.autolink.AutolinkExtension;",
                "-      ",
                "-      public final class MarkdownFilter extends ChainableReaderFilter {",
                "-        @Override",
                "-        public String filter(String markdownSource) {",
                "-          MutableDataSet options = new MutableDataSet();",
                "-          options.setFrom(ParserEmulationProfile.MARKDOWN);",
                "-          options.set(Parser.EXTENSIONS, [ AbbreviationExtension.create(), AutolinkExtension.create() ]);",
                "-          options.set(HtmlRenderer.RENDER_HEADER_ID, true);",
                "-          options.set(HtmlRenderer.MAX_TRAILING_BLANK_LINES, 0);",
                "-          Node parsed = Parser.builder(options).build().parse(markdownSource);",
                "-",
                "-          StringBuilder html = new StringBuilder('<html>\\n<head>\\n');",
                "-          CharSequence title = parsed.getFirstChildAny(Heading.class)?.getText();          ",
                "-          if (title != null) {",
                "-            html.append('<title>').append(Escaping.escapeHtml(title, false)).append('</title>\\n');",
                "-          }",
                "-          html.append('<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\\n')",
                "-            .append('</head>\\n<body>\\n');",
                "-          HtmlRenderer.builder(options).build().render(parsed, html);",
                "-          html.append('</body>\\n</html>\\n');",
                "-          return html;",
                "-        }",
                "-      }",
                "-      ",
                "-      AntTypeDefinition t = new AntTypeDefinition();",
                "-      t.setName('markdownfilter');",
                "-      t.setClass(MarkdownFilter.class);",
                "-      ComponentHelper.getComponentHelper(project).addDataTypeDefinition(t);",
                "-    ]]></groovy>",
                "+    <groovy classpathref=\"markdown.classpath\" src=\"${common.dir}/tools/src/groovy/install-markdown-filter.groovy\"/>",
                "     <property name=\"markdown.loaded\" value=\"true\"/>",
                "diff --git a/lucene/tools/src/groovy/check-source-patterns.groovy b/lucene/tools/src/groovy/check-source-patterns.groovy",
                "new file mode 100644",
                "index 00000000000..f0007f56872",
                "--- /dev/null",
                "+++ b/lucene/tools/src/groovy/check-source-patterns.groovy",
                "@@ -0,0 +1,189 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+/** Task script that is called by Ant's build.xml file:",
                "+ * Checks that there are no @author javadoc tags, tabs, ",
                "+ * svn keywords, javadoc-style licenses, or nocommits.",
                "+ */",
                "+",
                "+import org.apache.tools.ant.BuildException;",
                "+import org.apache.tools.ant.Project;",
                "+import org.apache.rat.Defaults;",
                "+import org.apache.rat.document.impl.FileDocument;",
                "+import org.apache.rat.api.MetaData;",
                "+",
                "+def extensions = [",
                "+  'java', 'jflex', 'py', 'pl', 'g4', 'jj', 'html', 'js',",
                "+  'css', 'xml', 'xsl', 'vm', 'sh', 'cmd', 'bat', 'policy',",
                "+  'properties', 'mdtext', 'groovy',",
                "+  'template', 'adoc', 'json',",
                "+];",
                "+def invalidPatterns = [",
                "+  (~$/@author\\b/$) : '@author javadoc tag',",
                "+  (~$/(?i)\\bno(n|)commit\\b/$) : 'nocommit',",
                "+  (~$/\\bTOOD:/$) : 'TOOD instead TODO',",
                "+  (~$/\\t/$) : 'tabs instead spaces',",
                "+  (~$/\\Q/**\\E((?:\\s)|(?:\\*))*\\Q{@inheritDoc}\\E((?:\\s)|(?:\\*))*\\Q*/\\E/$) : '{@inheritDoc} on its own is unnecessary',",
                "+  (~$/\\$$(?:LastChanged)?Date\\b/$) : 'svn keyword',",
                "+  (~$/\\$$(?:(?:LastChanged)?Revision|Rev)\\b/$) : 'svn keyword',",
                "+  (~$/\\$$(?:LastChangedBy|Author)\\b/$) : 'svn keyword',",
                "+  (~$/\\$$(?:Head)?URL\\b/$) : 'svn keyword',",
                "+  (~$/\\$$Id\\b/$) : 'svn keyword',",
                "+  (~$/\\$$Header\\b/$) : 'svn keyword',",
                "+  (~$/\\$$Source\\b/$) : 'svn keyword',",
                "+  (~$/^\\uFEFF/$) : 'UTF-8 byte order mark'",
                "+];",
                "+",
                "+def baseDir = properties['basedir'];",
                "+def baseDirLen = baseDir.length() + 1;",
                "+",
                "+def found = 0;",
                "+def violations = new TreeSet();",
                "+def reportViolation = { f, name ->",
                "+  task.log(name + ': ' + f.toString().substring(baseDirLen).replace(File.separatorChar, (char)'/'), Project.MSG_ERR);",
                "+  violations.add(name);",
                "+  found++;",
                "+}",
                "+",
                "+def javadocsPattern = ~$/(?sm)^\\Q/**\\E(.*?)\\Q*/\\E/$;",
                "+def javaCommentPattern = ~$/(?sm)^\\Q/*\\E(.*?)\\Q*/\\E/$;",
                "+def xmlCommentPattern = ~$/(?sm)\\Q<!--\\E(.*?)\\Q-->\\E/$;",
                "+def lineSplitter = ~$/[\\r\\n]+/$;",
                "+def singleLineSplitter = ~$/\\n\\r?/$;",
                "+def licenseMatcher = Defaults.createDefaultMatcher();",
                "+def validLoggerPattern = ~$/(?s)\\b(private\\s|static\\s|final\\s){3}+\\s*Logger\\s+\\p{javaJavaIdentifierStart}+\\s+=\\s+\\QLoggerFactory.getLogger(MethodHandles.lookup().lookupClass());\\E/$;",
                "+def packagePattern = ~$/(?m)^\\s*package\\s+org\\.apache.*;/$;",
                "+def xmlTagPattern = ~$/(?m)\\s*<[a-zA-Z].*/$;",
                "+def sourceHeaderPattern = ~$/\\[source\\b.*/$;",
                "+def blockBoundaryPattern = ~$/----\\s*/$;",
                "+def blockTitlePattern = ~$/\\..*/$;",
                "+def unescapedSymbolPattern = ~$/(?<=[^\\\\]|^)([-=]>|<[-=])/$; // SOLR-10883",
                "+",
                "+def isLicense = { matcher, ratDocument ->",
                "+  licenseMatcher.reset();",
                "+  return lineSplitter.split(matcher.group(1)).any{ licenseMatcher.match(ratDocument, it) };",
                "+}",
                "+",
                "+def checkLicenseHeaderPrecedes = { f, description, contentPattern, commentPattern, text, ratDocument ->",
                "+  def contentMatcher = contentPattern.matcher(text);",
                "+  if (contentMatcher.find()) {",
                "+    def contentStartPos = contentMatcher.start();",
                "+    def commentMatcher = commentPattern.matcher(text);",
                "+    while (commentMatcher.find()) {",
                "+      if (isLicense(commentMatcher, ratDocument)) {",
                "+        if (commentMatcher.start() < contentStartPos) {",
                "+          break; // This file is all good, so break loop: license header precedes 'description' definition",
                "+        } else {",
                "+          reportViolation(f, description+' declaration precedes license header');",
                "+        }",
                "+      }",
                "+    }",
                "+  }",
                "+}",
                "+",
                "+def checkMockitoAssume = { f, text ->",
                "+  if (text.contains(\"mockito\") && !text.contains(\"assumeWorkingMockito()\")) {",
                "+    reportViolation(f, 'File uses Mockito but has no assumeWorkingMockito() call');",
                "+  }",
                "+}",
                "+",
                "+def checkForUnescapedSymbolSubstitutions = { f, text ->",
                "+  def inCodeBlock = false;",
                "+  def underSourceHeader = false;",
                "+  def lineNumber = 0;",
                "+  singleLineSplitter.split(text).each {",
                "+    ++lineNumber;",
                "+    if (underSourceHeader) { // This line is either a single source line, or the boundary of a code block",
                "+      inCodeBlock = blockBoundaryPattern.matcher(it).matches();",
                "+      if ( ! blockTitlePattern.matcher(it).matches()) {",
                "+        underSourceHeader = false;",
                "+      }",
                "+    } else {",
                "+      if (inCodeBlock) {",
                "+        inCodeBlock = ! blockBoundaryPattern.matcher(it).matches();",
                "+      } else {",
                "+        underSourceHeader = sourceHeaderPattern.matcher(it).lookingAt();",
                "+        if ( ! underSourceHeader) {",
                "+          def unescapedSymbolMatcher = unescapedSymbolPattern.matcher(it);",
                "+          if (unescapedSymbolMatcher.find()) {",
                "+            reportViolation(f, 'Unescaped symbol \"' + unescapedSymbolMatcher.group(1) + '\" on line #' + lineNumber);",
                "+          }",
                "+        }",
                "+      }",
                "+    }",
                "+  }",
                "+}",
                "+",
                "+ant.fileScanner{",
                "+  fileset(dir: baseDir){",
                "+    extensions.each{",
                "+      include(name: 'lucene/**/*.' + it)",
                "+      include(name: 'solr/**/*.' + it)",
                "+      include(name: 'dev-tools/**/*.' + it)",
                "+      include(name: '*.' + it)",
                "+    }",
                "+    // TODO: For now we don't scan txt files, so we",
                "+    // check licenses in top-level folders separately:",
                "+    include(name: '*.txt')",
                "+    include(name: '*/*.txt')",
                "+    // excludes:",
                "+    exclude(name: '**/build/**')",
                "+    exclude(name: '**/dist/**')",
                "+    exclude(name: 'lucene/benchmark/work/**')",
                "+    exclude(name: 'lucene/benchmark/temp/**')",
                "+    exclude(name: '**/CheckLoggingConfiguration.java')",
                "+    exclude(name: 'lucene/tools/src/groovy/check-source-patterns.groovy') // ourselves :-)",
                "+  }",
                "+}.each{ f ->",
                "+  task.log('Scanning file: ' + f, Project.MSG_VERBOSE);",
                "+  def text = f.getText('UTF-8');",
                "+  invalidPatterns.each{ pattern,name ->",
                "+    if (pattern.matcher(text).find()) {",
                "+      reportViolation(f, name);",
                "+    }",
                "+  }",
                "+  def javadocsMatcher = javadocsPattern.matcher(text);",
                "+  def ratDocument = new FileDocument(f);",
                "+  while (javadocsMatcher.find()) {",
                "+    if (isLicense(javadocsMatcher, ratDocument)) {",
                "+      reportViolation(f, String.format(Locale.ENGLISH, 'javadoc-style license header [%s]',",
                "+        ratDocument.getMetaData().value(MetaData.RAT_URL_LICENSE_FAMILY_NAME)));",
                "+    }",
                "+  }",
                "+  if (f.name.endsWith('.java')) {",
                "+    if (text.contains('org.slf4j.LoggerFactory')) {",
                "+      if (!validLoggerPattern.matcher(text).find()) {",
                "+        reportViolation(f, 'invalid logging pattern [not private static final, uses static class name]');",
                "+      }",
                "+    }",
                "+    checkLicenseHeaderPrecedes(f, 'package', packagePattern, javaCommentPattern, text, ratDocument);",
                "+    if (f.name.contains(\"Test\")) {",
                "+      checkMockitoAssume(f, text);",
                "+    }",
                "+  }",
                "+  if (f.name.endsWith('.xml') || f.name.endsWith('.xml.template')) {",
                "+    checkLicenseHeaderPrecedes(f, '<tag>', xmlTagPattern, xmlCommentPattern, text, ratDocument);",
                "+  }",
                "+  if (f.name.endsWith('.adoc')) {",
                "+    checkForUnescapedSymbolSubstitutions(f, text);",
                "+  }",
                "+};",
                "+",
                "+if (found) {",
                "+  throw new BuildException(String.format(Locale.ENGLISH, 'Found %d violations in source files (%s).',",
                "+    found, violations.join(', ')));",
                "+}",
                "diff --git a/lucene/tools/src/groovy/check-working-copy.groovy b/lucene/tools/src/groovy/check-working-copy.groovy",
                "new file mode 100644",
                "index 00000000000..079a18b967d",
                "--- /dev/null",
                "+++ b/lucene/tools/src/groovy/check-working-copy.groovy",
                "@@ -0,0 +1,61 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+/** Task script that is called by Ant's build.xml file:",
                "+ * Checks GIT working copy for unversioned or modified files.",
                "+ */",
                "+",
                "+import org.apache.tools.ant.BuildException;",
                "+import org.apache.tools.ant.Project;",
                "+import org.eclipse.jgit.api.Git;",
                "+import org.eclipse.jgit.api.Status;",
                "+import org.eclipse.jgit.lib.Repository;",
                "+import org.eclipse.jgit.storage.file.FileRepositoryBuilder;",
                "+import org.eclipse.jgit.errors.*;",
                "+",
                "+def setProjectPropertyFromSet = { prop, set ->",
                "+  if (set) {",
                "+    properties[prop] = '* ' + set.join(properties['line.separator'] + '* ');",
                "+  }",
                "+};",
                "+",
                "+try {",
                "+  task.log('Initializing working copy...', Project.MSG_INFO);",
                "+  final Repository repository = new FileRepositoryBuilder()",
                "+    .setWorkTree(project.getBaseDir())",
                "+    .setMustExist(true)",
                "+    .build();",
                "+",
                "+  task.log('Checking working copy status...', Project.MSG_INFO);",
                "+  final Status status = new Git(repository).status().call();",
                "+  if (!status.isClean()) {",
                "+    final SortedSet unversioned = new TreeSet(), modified = new TreeSet();",
                "+    status.properties.each{ prop, val ->",
                "+      if (val instanceof Set) {",
                "+        if (prop in ['untracked', 'untrackedFolders', 'missing']) {",
                "+          unversioned.addAll(val);",
                "+        } else if (prop != 'ignoredNotInIndex') {",
                "+          modified.addAll(val);",
                "+        }",
                "+      }",
                "+    };",
                "+    setProjectPropertyFromSet('wc.unversioned.files', unversioned);",
                "+    setProjectPropertyFromSet('wc.modified.files', modified);",
                "+  }",
                "+} catch (RepositoryNotFoundException | NoWorkTreeException | NotSupportedException e) {",
                "+  task.log('WARNING: Development directory is not a valid GIT checkout! Disabling checks...', Project.MSG_WARN);",
                "+}",
                "diff --git a/lucene/tools/src/groovy/install-markdown-filter.groovy b/lucene/tools/src/groovy/install-markdown-filter.groovy",
                "new file mode 100644",
                "index 00000000000..2b5544b99e6",
                "--- /dev/null",
                "+++ b/lucene/tools/src/groovy/install-markdown-filter.groovy",
                "@@ -0,0 +1,61 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+/** Task script that is called by Ant's common-build.xml file:",
                "+ * Installs markdown filter into Ant.",
                "+ */",
                "+",
                "+import org.apache.tools.ant.AntTypeDefinition;",
                "+import org.apache.tools.ant.ComponentHelper;",
                "+import org.apache.tools.ant.filters.TokenFilter.ChainableReaderFilter;",
                "+import com.vladsch.flexmark.ast.Node;",
                "+import com.vladsch.flexmark.ast.Heading;",
                "+import com.vladsch.flexmark.html.HtmlRenderer;",
                "+import com.vladsch.flexmark.parser.Parser;",
                "+import com.vladsch.flexmark.parser.ParserEmulationProfile;",
                "+import com.vladsch.flexmark.util.html.Escaping;",
                "+import com.vladsch.flexmark.util.options.MutableDataSet;",
                "+import com.vladsch.flexmark.ext.abbreviation.AbbreviationExtension;",
                "+import com.vladsch.flexmark.ext.autolink.AutolinkExtension;",
                "+",
                "+public final class MarkdownFilter extends ChainableReaderFilter {",
                "+  @Override",
                "+  public String filter(String markdownSource) {",
                "+    MutableDataSet options = new MutableDataSet();",
                "+    options.setFrom(ParserEmulationProfile.MARKDOWN);",
                "+    options.set(Parser.EXTENSIONS, [ AbbreviationExtension.create(), AutolinkExtension.create() ]);",
                "+    options.set(HtmlRenderer.RENDER_HEADER_ID, true);",
                "+    options.set(HtmlRenderer.MAX_TRAILING_BLANK_LINES, 0);",
                "+    Node parsed = Parser.builder(options).build().parse(markdownSource);",
                "+",
                "+    StringBuilder html = new StringBuilder('<html>\\n<head>\\n');",
                "+    CharSequence title = parsed.getFirstChildAny(Heading.class)?.getText();          ",
                "+    if (title != null) {",
                "+      html.append('<title>').append(Escaping.escapeHtml(title, false)).append('</title>\\n');",
                "+    }",
                "+    html.append('<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\\n')",
                "+      .append('</head>\\n<body>\\n');",
                "+    HtmlRenderer.builder(options).build().render(parsed, html);",
                "+    html.append('</body>\\n</html>\\n');",
                "+    return html;",
                "+  }",
                "+}",
                "+",
                "+AntTypeDefinition t = new AntTypeDefinition();",
                "+t.setName('markdownfilter');",
                "+t.setClass(MarkdownFilter.class);",
                "+ComponentHelper.getComponentHelper(project).addDataTypeDefinition(t);",
                "diff --git a/lucene/tools/src/groovy/patch-mrjar-classes.groovy b/lucene/tools/src/groovy/patch-mrjar-classes.groovy",
                "index d1699970eec..07f285c6ff7 100644",
                "--- a/lucene/tools/src/groovy/patch-mrjar-classes.groovy",
                "+++ b/lucene/tools/src/groovy/patch-mrjar-classes.groovy",
                "@@ -17,2 +17,7 @@",
                "+/** Task script that is called by Ant's common-build.xml file:",
                "+ * Patches Java 8 class files to replace method signatures by",
                "+ * native Java 9 optimized ones (to be placed in MR-JAR).",
                "+ */",
                "+",
                " import org.apache.tools.ant.Project;",
                "diff --git a/lucene/tools/src/groovy/run-beaster.groovy b/lucene/tools/src/groovy/run-beaster.groovy",
                "new file mode 100644",
                "index 00000000000..f94a4560f1c",
                "--- /dev/null",
                "+++ b/lucene/tools/src/groovy/run-beaster.groovy",
                "@@ -0,0 +1,71 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+/** Task script that is called by Ant's common-build.xml file:",
                "+ * Runs test beaster.",
                "+ */",
                "+",
                "+import org.apache.tools.ant.BuildException;",
                "+import org.apache.tools.ant.BuildLogger;",
                "+import org.apache.tools.ant.Project;",
                "+",
                "+int iters = (properties['beast.iters'] ?: '1') as int;",
                "+if (iters <= 1) {",
                "+  throw new BuildException(\"Please give -Dbeast.iters with an int value > 1.\");",
                "+}",
                "+",
                "+def antcall = project.createTask('antcall');",
                "+antcall.with {",
                "+  target = '-test';",
                "+  inheritAll = true;",
                "+  inheritRefs = true;",
                "+  createParam().with {",
                "+    name = \"tests.isbeasting\";",
                "+    value = \"true\";",
                "+  };",
                "+};",
                "+",
                "+(1..iters).each { i ->",
                "+  task.log('Beast round: ' + i, Project.MSG_INFO);",
                "+  try {",
                "+    // disable verbose build logging:",
                "+    project.buildListeners.each { listener ->",
                "+      if (listener instanceof BuildLogger) {",
                "+        listener.messageOutputLevel = Project.MSG_WARN;",
                "+      }",
                "+    };",
                "+    ",
                "+    antcall.execute();",
                "+    ",
                "+  } catch (BuildException be) {",
                "+    def logFile = new File(properties[\"junit.output.dir\"], \"tests-failures.txt\");",
                "+    if (logFile.exists()) {",
                "+      logFile.eachLine(\"UTF-8\", { line ->",
                "+        task.log(line, Project.MSG_ERR);",
                "+      });",
                "+    }",
                "+    throw be;",
                "+  } finally {",
                "+    // restore build logging (unfortunately there is no way to get the original logging level (write-only property):",
                "+    project.buildListeners.each { listener ->",
                "+      if (listener instanceof BuildLogger) {",
                "+        listener.messageOutputLevel = Project.MSG_INFO;",
                "+      }",
                "+    };",
                "+  }",
                "+};",
                "+task.log('Beasting finished.', Project.MSG_INFO);",
                "diff --git a/lucene/tools/src/groovy/run-maven-build.groovy b/lucene/tools/src/groovy/run-maven-build.groovy",
                "new file mode 100644",
                "index 00000000000..c26c7bf865a",
                "--- /dev/null",
                "+++ b/lucene/tools/src/groovy/run-maven-build.groovy",
                "@@ -0,0 +1,49 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+/** Task script that is called by Ant's build.xml file:",
                "+ * Runs maven build from within Ant after creating POMs.",
                "+ */",
                "+",
                "+import groovy.xml.NamespaceBuilder;",
                "+import org.apache.tools.ant.Project;",
                "+",
                "+def userHome = properties['user.home'], commonDir = properties['common.dir'];",
                "+def propPrefix = '-mvn.inject.'; int propPrefixLen = propPrefix.length();",
                "+",
                "+def subProject = project.createSubProject();",
                "+project.copyUserProperties(subProject);",
                "+subProject.initProperties();",
                "+new AntBuilder(subProject).sequential{",
                "+  property(file: userHome+'/lucene.build.properties', prefix: propPrefix);",
                "+  property(file: userHome+'/build.properties', prefix: propPrefix);",
                "+  property(file: commonDir+'/build.properties', prefix: propPrefix);",
                "+};",
                "+",
                "+def cmdlineProps = subProject.properties",
                "+  .findAll{ k, v -> k.startsWith(propPrefix) }",
                "+  .collectEntries{ k, v -> [k.substring(propPrefixLen), v] };",
                "+cmdlineProps << project.userProperties.findAll{ k, v -> !k.startsWith('ant.') };",
                "+",
                "+def artifact = NamespaceBuilder.newInstance(ant, 'antlib:org.apache.maven.artifact.ant');",
                "+",
                "+task.log('Running Maven with props: ' + cmdlineProps.toString(), Project.MSG_INFO);",
                "+artifact.mvn(pom: properties['maven-build-dir']+'/pom.xml', mavenVersion: properties['maven-version'], failonerror: true, fork: true) {",
                "+  cmdlineProps.each{ k, v -> arg(value: '-D' + k + '=' + v) };",
                "+  arg(value: '-fae');",
                "+  arg(value: 'install');",
                "+};"
            ],
            "changed_files": [
                "build.xml",
                "lucene/common-build.xml",
                "lucene/tools/src/groovy/check-source-patterns.groovy",
                "lucene/tools/src/groovy/check-working-copy.groovy",
                "lucene/tools/src/groovy/install-markdown-filter.groovy",
                "lucene/tools/src/groovy/patch-mrjar-classes.groovy",
                "lucene/tools/src/groovy/run-beaster.groovy",
                "lucene/tools/src/groovy/run-maven-build.groovy"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8168": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a6e4f16b7a88e4f458003174895f2ea7ea38aa16"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8168",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7dba350c7a02fe603faec49227ff2672e4d8e6ae",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519775220,
            "hunks": 6,
            "message": "SOLR-12028: Make initialization of constants dynamic (by reading the annotation), also add missing reproduce info",
            "diff": [
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java",
                "index f2b3da0d5ec..1b7ee618cb0 100644",
                "--- a/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java",
                "@@ -430,12 +430,18 @@ public abstract class LuceneTestCase extends Assert {",
                "   /** Whether or not {@link Nightly} tests should run. */",
                "-  public static final boolean TEST_NIGHTLY = systemPropertyAsBoolean(SYSPROP_NIGHTLY, false);",
                "+  public static final boolean TEST_NIGHTLY = systemPropertyAsBoolean(SYSPROP_NIGHTLY, Nightly.class.getAnnotation(TestGroup.class).enabled());",
                "   /** Whether or not {@link Weekly} tests should run. */",
                "-  public static final boolean TEST_WEEKLY = systemPropertyAsBoolean(SYSPROP_WEEKLY, false);",
                "+  public static final boolean TEST_WEEKLY = systemPropertyAsBoolean(SYSPROP_WEEKLY, Weekly.class.getAnnotation(TestGroup.class).enabled());",
                "+  /** Whether or not {@link Monster} tests should run. */",
                "+  public static final boolean TEST_MONSTER = systemPropertyAsBoolean(SYSPROP_MONSTER, Monster.class.getAnnotation(TestGroup.class).enabled());",
                "+",
                "   /** Whether or not {@link AwaitsFix} tests should run. */",
                "-  public static final boolean TEST_AWAITSFIX = systemPropertyAsBoolean(SYSPROP_AWAITSFIX, false);",
                "+  public static final boolean TEST_AWAITSFIX = systemPropertyAsBoolean(SYSPROP_AWAITSFIX, AwaitsFix.class.getAnnotation(TestGroup.class).enabled());",
                "+",
                "+  /** Whether or not {@link BadApple} tests should run. */",
                "+  public static final boolean TEST_BADAPPLES = systemPropertyAsBoolean(SYSPROP_BADAPPLES, BadApple.class.getAnnotation(TestGroup.class).enabled());",
                "   /** Whether or not {@link Slow} tests should run. */",
                "-  public static final boolean TEST_SLOW = systemPropertyAsBoolean(SYSPROP_SLOW, false);",
                "+  public static final boolean TEST_SLOW = systemPropertyAsBoolean(SYSPROP_SLOW, Slow.class.getAnnotation(TestGroup.class).enabled());",
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/util/RunListenerPrintReproduceInfo.java b/lucene/test-framework/src/java/org/apache/lucene/util/RunListenerPrintReproduceInfo.java",
                "index 7e4c7867ffa..5ce69998919 100644",
                "--- a/lucene/test-framework/src/java/org/apache/lucene/util/RunListenerPrintReproduceInfo.java",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/util/RunListenerPrintReproduceInfo.java",
                "@@ -168,3 +168,5 @@ public final class RunListenerPrintReproduceInfo extends RunListener {",
                "     if (TEST_SLOW) addVmOpt(b, SYSPROP_SLOW, TEST_SLOW);",
                "+    if (TEST_MONSTER) addVmOpt(b, SYSPROP_MONSTER, TEST_MONSTER);",
                "     if (TEST_AWAITSFIX) addVmOpt(b, SYSPROP_AWAITSFIX, TEST_AWAITSFIX);",
                "+    if (TEST_BADAPPLES) addVmOpt(b, SYSPROP_BADAPPLES, TEST_BADAPPLES);"
            ],
            "changed_files": [
                "lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java",
                "lucene/test-framework/src/java/org/apache/lucene/util/RunListenerPrintReproduceInfo.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12028": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "9b7e35e69b694d9006c0964ae7a26ed2694ea055"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12028",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d7824a3793f8ec697a6f9a4f12eeb052a68b4782",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520242425,
            "hunks": 7,
            "message": "SOLR-12011: Remove FORCEPREPAREFORLEADERSHIP",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "index db707964db2..9824970355e 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "@@ -52,3 +52,2 @@ import org.apache.solr.cloud.ZkController;",
                " import org.apache.solr.cloud.ZkShardTerms;",
                "-import org.apache.solr.cloud.api.collections.OverseerCollectionMessageHandler;",
                " import org.apache.solr.cloud.overseer.SliceMutator;",
                "@@ -75,5 +74,3 @@ import org.apache.solr.common.params.CollectionParams;",
                " import org.apache.solr.common.params.CollectionParams.CollectionAction;",
                "-import org.apache.solr.common.params.CommonParams;",
                " import org.apache.solr.common.params.CoreAdminParams;",
                "-import org.apache.solr.common.params.CoreAdminParams.CoreAdminAction;",
                " import org.apache.solr.common.params.ModifiableSolrParams;",
                "@@ -89,3 +86,2 @@ import org.apache.solr.core.snapshots.SolrSnapshotManager;",
                " import org.apache.solr.handler.RequestHandlerBase;",
                "-import org.apache.solr.handler.component.ShardHandler;",
                " import org.apache.solr.request.LocalSolrQueryRequest;",
                "@@ -1155,16 +1151,2 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "-      // Call all live replicas to prepare themselves for leadership, e.g. set last published",
                "-      // state to active.",
                "-      for (Replica rep : liveReplicas) {",
                "-        ShardHandler shardHandler = handler.coreContainer.getShardHandlerFactory().getShardHandler();",
                "-",
                "-        ModifiableSolrParams params = new ModifiableSolrParams();",
                "-        params.set(CoreAdminParams.ACTION, CoreAdminAction.FORCEPREPAREFORLEADERSHIP.toString());",
                "-        params.set(CoreAdminParams.CORE, rep.getStr(\"core\"));",
                "-        String nodeName = rep.getNodeName();",
                "-",
                "-        OverseerCollectionMessageHandler.sendShardRequest(nodeName, params, shardHandler, null, null,",
                "-            CommonParams.CORES_HANDLER_PATH, handler.coreContainer.getZkController().getZkStateReader()); // synchronous request",
                "-      }",
                "-",
                "       // Wait till we have an active leader",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation.java b/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation.java",
                "index 179589b5790..6e5144653b5 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation.java",
                "@@ -222,17 +222,2 @@ enum CoreAdminOperation implements CoreAdminOp {",
                "   INVOKE_OP(INVOKE, new InvokeOp()),",
                "-  FORCEPREPAREFORLEADERSHIP_OP(FORCEPREPAREFORLEADERSHIP, it -> {",
                "-    final SolrParams params = it.req.getParams();",
                "-",
                "-    log().info(\"I have been forcefully prepare myself for leadership.\");",
                "-    ZkController zkController = it.handler.coreContainer.getZkController();",
                "-    if (zkController == null) {",
                "-      throw new SolrException(ErrorCode.BAD_REQUEST, \"Only valid for SolrCloud\");",
                "-    }",
                "-",
                "-    String cname = params.get(CoreAdminParams.CORE);",
                "-    if (cname == null) {",
                "-      throw new IllegalArgumentException(CoreAdminParams.CORE + \" is required\");",
                "-    }",
                "-  }),",
                "-",
                "   BACKUPCORE_OP(BACKUPCORE, new BackupCoreOp()),",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreApiMapping.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreApiMapping.java",
                "index b5ce92045cd..9d8aa6eadd6 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreApiMapping.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreApiMapping.java",
                "@@ -58,4 +58,3 @@ public class CoreApiMapping {",
                "     REJOINLEADERELECTION(NODEAPIS, POST, CoreAdminAction.REJOINLEADERELECTION, \"rejoin-leader-election\", null),",
                "-    INVOKE(NODEINVOKE, GET, CoreAdminAction.INVOKE,\"invoke\",  null),",
                "-    FORCEPREPAREFORLEADERSHIP(PER_CORE_COMMANDS, POST, CoreAdminAction.FORCEPREPAREFORLEADERSHIP, \"force-prepare-for-leadership\", null);",
                "+    INVOKE(NODEINVOKE, GET, CoreAdminAction.INVOKE,\"invoke\",  null);"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/request/CoreApiMapping.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12011": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "27eb6ba0620abc096aeabf5817e54c9e27976074"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12011",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b5155ffd19674917b6354ec4abf274c62f1af864",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518473684,
            "hunks": 6,
            "message": "SOLR-11978: use new SortableTextField in _default and sample_techproducts_configs configsets (cherry picked from commit 034677d5ca0e31a0f3b6bdf25661e5e84e64d06f)",
            "diff": [
                "diff --git a/solr/core/src/test-files/solr/configsets/_default/conf/managed-schema b/solr/core/src/test-files/solr/configsets/_default/conf/managed-schema",
                "index abc72a0c9fd..5a2ebaf2ee6 100644",
                "--- a/solr/core/src/test-files/solr/configsets/_default/conf/managed-schema",
                "+++ b/solr/core/src/test-files/solr/configsets/_default/conf/managed-schema",
                "@@ -291,2 +291,26 @@",
                "+    ",
                "+    <!-- SortableTextField generaly functions exactly like TextField,",
                "+         except that it supports, and by default uses, docValues for sorting (or faceting)",
                "+         on the first 1024 characters of the original field values (which is configurable).",
                "+         ",
                "+         This makes it a bit more useful then TextField in many situations, but the trade-off",
                "+         is that it takes up more space on disk; which is why it's not used in place of TextField",
                "+         for every fieldType in this _default schema.",
                "+\t  -->",
                "+    <dynamicField name=\"*_txt_sort\" type=\"text_gen_sort\" indexed=\"true\" stored=\"true\"/>",
                "+    <fieldType name=\"text_gen_sort\" class=\"solr.SortableTextField\" positionIncrementGap=\"100\" multiValued=\"true\">",
                "+      <analyzer type=\"index\">",
                "+        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "+        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "+        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "+      </analyzer>",
                "+      <analyzer type=\"query\">",
                "+        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "+        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "+        <filter class=\"solr.SynonymGraphFilterFactory\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/>",
                "+        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "+      </analyzer>",
                "+    </fieldType>",
                "+",
                "     <!-- A text field with defaults appropriate for English: it tokenizes with StandardTokenizer,",
                "diff --git a/solr/server/solr/configsets/_default/conf/managed-schema b/solr/server/solr/configsets/_default/conf/managed-schema",
                "index abc72a0c9fd..5a2ebaf2ee6 100644",
                "--- a/solr/server/solr/configsets/_default/conf/managed-schema",
                "+++ b/solr/server/solr/configsets/_default/conf/managed-schema",
                "@@ -291,2 +291,26 @@",
                "+    ",
                "+    <!-- SortableTextField generaly functions exactly like TextField,",
                "+         except that it supports, and by default uses, docValues for sorting (or faceting)",
                "+         on the first 1024 characters of the original field values (which is configurable).",
                "+         ",
                "+         This makes it a bit more useful then TextField in many situations, but the trade-off",
                "+         is that it takes up more space on disk; which is why it's not used in place of TextField",
                "+         for every fieldType in this _default schema.",
                "+\t  -->",
                "+    <dynamicField name=\"*_txt_sort\" type=\"text_gen_sort\" indexed=\"true\" stored=\"true\"/>",
                "+    <fieldType name=\"text_gen_sort\" class=\"solr.SortableTextField\" positionIncrementGap=\"100\" multiValued=\"true\">",
                "+      <analyzer type=\"index\">",
                "+        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "+        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "+        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "+      </analyzer>",
                "+      <analyzer type=\"query\">",
                "+        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "+        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "+        <filter class=\"solr.SynonymGraphFilterFactory\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/>",
                "+        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "+      </analyzer>",
                "+    </fieldType>",
                "+",
                "     <!-- A text field with defaults appropriate for English: it tokenizes with StandardTokenizer,",
                "diff --git a/solr/server/solr/configsets/sample_techproducts_configs/conf/managed-schema b/solr/server/solr/configsets/sample_techproducts_configs/conf/managed-schema",
                "index 6d6b9fd3dee..5751806dd64 100644",
                "--- a/solr/server/solr/configsets/sample_techproducts_configs/conf/managed-schema",
                "+++ b/solr/server/solr/configsets/sample_techproducts_configs/conf/managed-schema",
                "@@ -136,3 +136,3 @@",
                "    <field name=\"name\" type=\"text_general\" indexed=\"true\" stored=\"true\"/>",
                "-   <field name=\"manu\" type=\"text_general\" indexed=\"true\" stored=\"true\" omitNorms=\"true\"/>",
                "+   <field name=\"manu\" type=\"text_gen_sort\" indexed=\"true\" stored=\"true\" omitNorms=\"true\" multiValued=\"false\"/>",
                "    <field name=\"cat\" type=\"string\" indexed=\"true\" stored=\"true\" multiValued=\"true\"/>",
                "@@ -156,7 +156,7 @@",
                "    -->",
                "-   <field name=\"title\" type=\"text_general\" indexed=\"true\" stored=\"true\" multiValued=\"true\"/>",
                "-   <field name=\"subject\" type=\"text_general\" indexed=\"true\" stored=\"true\"/>",
                "+   <field name=\"title\" type=\"text_gen_sort\" indexed=\"true\" stored=\"true\" multiValued=\"true\"/>",
                "+   <field name=\"subject\" type=\"text_gen_sort\" indexed=\"true\" stored=\"true\" multiValued=\"false\"/>",
                "    <field name=\"description\" type=\"text_general\" indexed=\"true\" stored=\"true\"/>",
                "    <field name=\"comments\" type=\"text_general\" indexed=\"true\" stored=\"true\"/>",
                "-   <field name=\"author\" type=\"text_general\" indexed=\"true\" stored=\"true\"/>",
                "+   <field name=\"author\" type=\"text_gen_sort\" indexed=\"true\" stored=\"true\" multiValued=\"false\"/>",
                "    <field name=\"keywords\" type=\"text_general\" indexed=\"true\" stored=\"true\"/>",
                "@@ -425,2 +425,24 @@",
                "     </fieldType>",
                "+    ",
                "+    <!-- SortableTextField generaly functions exactly like TextField,",
                "+         except that it supports, and by default uses, docValues for sorting (or faceting)",
                "+         on the first 1024 characters of the original field values (which is configurable).",
                "+         ",
                "+         This makes it a bit more useful then TextField in many situations, but the trade-off",
                "+         is that it takes up more space on disk; which is why it's not used in place of TextField",
                "+         for every fieldType in this _default schema.",
                "+\t  -->",
                "+    <fieldType name=\"text_gen_sort\" class=\"solr.SortableTextField\" positionIncrementGap=\"100\" multiValued=\"true\">",
                "+      <analyzer type=\"index\">",
                "+        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "+        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "+        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "+      </analyzer>",
                "+      <analyzer type=\"query\">",
                "+        <tokenizer class=\"solr.StandardTokenizerFactory\"/>",
                "+        <filter class=\"solr.StopFilterFactory\" ignoreCase=\"true\" words=\"stopwords.txt\" />",
                "+        <filter class=\"solr.SynonymGraphFilterFactory\" synonyms=\"synonyms.txt\" ignoreCase=\"true\" expand=\"true\"/>",
                "+        <filter class=\"solr.LowerCaseFilterFactory\"/>",
                "+      </analyzer>",
                "+    </fieldType>"
            ],
            "changed_files": [
                "solr/core/src/test-files/solr/configsets/_default/conf/managed-schema",
                "solr/server/solr/configsets/_default/conf/managed-schema",
                "solr/server/solr/configsets/sample_techproducts_configs/conf/managed-schema"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11978": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "034677d5ca0e31a0f3b6bdf25661e5e84e64d06f"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file, server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11978",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9de4225e9a54ba987c2c7c9d4510bea3e4f9de97",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520143025,
            "hunks": 63,
            "message": "SOLR-12011: Consistence problem when in-sync replicas are DOWN",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/CloudDescriptor.java b/solr/core/src/java/org/apache/solr/cloud/CloudDescriptor.java",
                "index 32cb65bde48..068191eb5fe 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/CloudDescriptor.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/CloudDescriptor.java",
                "@@ -44,3 +44,3 @@ public class CloudDescriptor {",
                "   private volatile boolean hasRegistered = false;",
                "-  volatile Replica.State lastPublished = Replica.State.ACTIVE;",
                "+  private volatile Replica.State lastPublished = Replica.State.ACTIVE;",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java b/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java",
                "index 2d00151b53a..3ba4dfce939 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java",
                "@@ -22,5 +22,6 @@ import java.lang.invoke.MethodHandles;",
                " import java.util.ArrayList;",
                "-import java.util.Collections;",
                " import java.util.EnumSet;",
                "+import java.util.HashSet;",
                " import java.util.List;",
                "+import java.util.Set;",
                " import java.util.concurrent.Future;",
                "@@ -361,5 +362,7 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "         replicaType = core.getCoreDescriptor().getCloudDescriptor().getReplicaType();",
                "-        ",
                "+        String coreNodeName = core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName();",
                "         // should I be leader?",
                "-        if (weAreReplacement && !shouldIBeLeader(leaderProps, core, weAreReplacement)) {",
                "+        if (zkController.getShardTerms(collection, shardId).registered(coreNodeName)",
                "+            && !zkController.getShardTerms(collection, shardId).canBecomeLeader(coreNodeName)) {",
                "+          log.info(\"Can't become leader, term of replica {} less than leader\", coreNodeName);",
                "           rejoinLeaderElection(core);",
                "@@ -367,2 +370,6 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "         }",
                "+",
                "+        if (isClosed) {",
                "+          return;",
                "+        }",
                "@@ -518,4 +525,3 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "         Replica rep = getReplica(clusterState, collection, leaderProps.getStr(ZkStateReader.CORE_NODE_NAME_PROP));",
                "-        if (rep != null && rep.getState() != Replica.State.ACTIVE",
                "-            && rep.getState() != Replica.State.RECOVERING) {",
                "+        if (rep != null && rep.getState() != Replica.State.ACTIVE) {",
                "           log.debug(\"We have become the leader after core registration but are not in an ACTIVE state - publishing ACTIVE\");",
                "@@ -595,2 +601,4 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "       if (replicas != null && replicas.size() > 0) {",
                "+        // set of replicas which is running in new LIR but lirState=DOWN",
                "+        Set<String> replicasMustBeInLowerTerm = new HashSet<>();",
                "         for (String replicaCoreNodeName : replicas) {",
                "@@ -600,9 +608,2 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "-          if (zkController.getShardTerms(collection, shardId).registered(replicaCoreNodeName)) {",
                "-            // the replica registered its term so it is running with the new LIR implementation",
                "-            // we can put this replica into recovery by increase our terms",
                "-            zkController.getShardTerms(collection, shardId).ensureTermsIsHigher(coreNodeName, Collections.singleton(replicaCoreNodeName));",
                "-            continue;",
                "-          }",
                "-",
                "           final Replica.State lirState = zkController.getLeaderInitiatedRecoveryState(coll, shardId, replicaCoreNodeName);",
                "@@ -611,10 +612,11 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "                 + lirState.toString() + \" and needing recovery.\", coreName, coreNodeName, replicaCoreNodeName);",
                "-            List<ZkCoreNodeProps> replicaProps =",
                "-                zkController.getZkStateReader().getReplicaProps(collection, shardId, coreNodeName);",
                "+            List<Replica> replicasProps =",
                "+                zkController.getZkStateReader().getClusterState().getCollection(collection)",
                "+                    .getSlice(shardId).getReplicas(EnumSet.of(Replica.Type.NRT, Replica.Type.TLOG));",
                "-            if (replicaProps != null && replicaProps.size() > 0) {",
                "+            if (replicasProps != null && replicasProps.size() > 0) {",
                "               ZkCoreNodeProps coreNodeProps = null;",
                "-              for (ZkCoreNodeProps p : replicaProps) {",
                "-                if (((Replica)p.getNodeProps()).getName().equals(replicaCoreNodeName)) {",
                "-                  coreNodeProps = p;",
                "+              for (Replica p : replicasProps) {",
                "+                if (p.getName().equals(replicaCoreNodeName)) {",
                "+                  coreNodeProps = new ZkCoreNodeProps(p);",
                "                   break;",
                "@@ -623,5 +625,9 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "-              zkController.ensureReplicaInLeaderInitiatedRecovery(cc,",
                "-                  collection, shardId, coreNodeProps, core.getCoreDescriptor(),",
                "-                  false /* forcePublishState */);",
                "+              if (zkController.getShardTerms(collection, shardId).registered(replicaCoreNodeName)) {",
                "+                replicasMustBeInLowerTerm.add(replicaCoreNodeName);",
                "+              } else {",
                "+                zkController.ensureReplicaInLeaderInitiatedRecovery(cc,",
                "+                    collection, shardId, coreNodeProps, core.getCoreDescriptor(),",
                "+                    false /* forcePublishState */);",
                "+              }",
                "             }",
                "@@ -629,2 +635,5 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "         }",
                "+        // these replicas registered their terms so it is running with the new LIR implementation",
                "+        // we can put this replica into recovery by increase our terms",
                "+        zkController.getShardTerms(collection, shardId).ensureTermsIsHigher(coreNodeName, replicasMustBeInLowerTerm);",
                "       }",
                "@@ -743,35 +752,2 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "-  private boolean shouldIBeLeader(ZkNodeProps leaderProps, SolrCore core, boolean weAreReplacement) {",
                "-    log.debug(\"Checking if I should try and be the leader.\");",
                "-    ",
                "-    if (isClosed) {",
                "-      log.debug(\"Bailing on leader process because we have been closed\");",
                "-      return false;",
                "-    }",
                "-    ",
                "-    if (!weAreReplacement) {",
                "-      // we are the first node starting in the shard - there is a configurable wait",
                "-      // to make sure others participate in sync and leader election, we can be leader",
                "-      return true;",
                "-    }",
                "-",
                "-    String coreNodeName = core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName();",
                "-    if (zkController.getShardTerms(collection, shardId).registered(coreNodeName)",
                "-        && !zkController.getShardTerms(collection, shardId).canBecomeLeader(coreNodeName)) {",
                "-      log.info(\"Can't become leader, term of replica {} less than leader\", coreNodeName);",
                "-      return false;",
                "-    }",
                "-",
                "-    if (core.getCoreDescriptor().getCloudDescriptor().getLastPublished() == Replica.State.ACTIVE) {",
                "-      log.debug(\"My last published State was Active, it's okay to be the leader.\");",
                "-      return true;",
                "-    }",
                "-    log.debug(\"My last published State was \"",
                "-        + core.getCoreDescriptor().getCloudDescriptor().getLastPublished()",
                "-        + \", I won't be the leader.\");",
                "-    // TODO: and if no one is a good candidate?",
                "-    ",
                "-    return false;",
                "-  }",
                "-  ",
                " }",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/RecoveringCoreTermWatcher.java b/solr/core/src/java/org/apache/solr/cloud/RecoveringCoreTermWatcher.java",
                "index 26fec974a1f..90a500aec29 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/RecoveringCoreTermWatcher.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/RecoveringCoreTermWatcher.java",
                "@@ -50,3 +50,3 @@ public class RecoveringCoreTermWatcher implements ZkShardTerms.CoreTermWatcher {",
                "     String coreNodeName = solrCore.getCoreDescriptor().getCloudDescriptor().getCoreNodeName();",
                "-    if (terms.canBecomeLeader(coreNodeName)) return true;",
                "+    if (terms.haveHighestTermValue(coreNodeName)) return true;",
                "     if (lastTermDoRecovery.get() < terms.getTerm(coreNodeName)) {",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkController.java b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "index cb1fcea5ba8..a159db5c5b2 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "@@ -1047,3 +1047,3 @@ public class ZkController {",
                "       boolean isRunningInNewLIR = \"new\".equals(desc.getCoreProperty(\"lirVersion\", \"new\"));",
                "-      if (isRunningInNewLIR) {",
                "+      if (isRunningInNewLIR && cloudDesc.getReplicaType() != Type.PULL) {",
                "         shardTerms.registerTerm(coreZkNodeName);",
                "@@ -1457,5 +1457,12 @@ public class ZkController {",
                "       boolean isRunningInNewLIR = \"new\".equals(cd.getCoreProperty(\"lirVersion\", \"new\"));",
                "-      if (state == Replica.State.RECOVERING && isRunningInNewLIR) {",
                "-        getShardTerms(collection, shardId).setEqualsToMax(coreNodeName);",
                "+      // pull replicas are excluded because their terms are not considered",
                "+      if (state == Replica.State.RECOVERING && isRunningInNewLIR && cd.getCloudDescriptor().getReplicaType() != Type.PULL) {",
                "+        // state is used by client, state of replica can change from RECOVERING to DOWN without needed to finish recovery",
                "+        // by calling this we will know that a replica actually finished recovery or not",
                "+        getShardTerms(collection, shardId).startRecovering(coreNodeName);",
                "       }",
                "+      if (state == Replica.State.ACTIVE && isRunningInNewLIR && cd.getCloudDescriptor().getReplicaType() != Type.PULL) {",
                "+        getShardTerms(collection, shardId).doneRecovering(coreNodeName);",
                "+      }",
                "+",
                "       ZkNodeProps m = new ZkNodeProps(props);",
                "@@ -1463,3 +1470,3 @@ public class ZkController {",
                "       if (updateLastState) {",
                "-        cd.getCloudDescriptor().lastPublished = state;",
                "+        cd.getCloudDescriptor().setLastPublished(state);",
                "       }",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java b/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "index 7dc0d575627..50b424c083f 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "@@ -24,3 +24,2 @@ import java.util.HashSet;",
                " import java.util.Map;",
                "-import java.util.NoSuchElementException;",
                " import java.util.Objects;",
                "@@ -102,2 +101,4 @@ public class ZkShardTerms implements AutoCloseable{",
                "   public void ensureTermsIsHigher(String leader, Set<String> replicasNeedingRecovery) {",
                "+    if (replicasNeedingRecovery.isEmpty()) return;",
                "+",
                "     Terms newTerms;",
                "@@ -109,3 +110,3 @@ public class ZkShardTerms implements AutoCloseable{",
                "   /**",
                "-   * Can this replica become leader or is this replica's term equals to leader's term?",
                "+   * Can this replica become leader?",
                "    * @param coreNodeName of the replica",
                "@@ -117,2 +118,11 @@ public class ZkShardTerms implements AutoCloseable{",
                "+  /**",
                "+   * Should leader skip sending updates to this replica?",
                "+   * @param coreNodeName of the replica",
                "+   * @return true if this replica has term equals to leader's term, false if otherwise",
                "+   */",
                "+  public boolean skipSendingUpdatesTo(String coreNodeName) {",
                "+    return !terms.haveHighestTermValue(coreNodeName);",
                "+  }",
                "+",
                "   /**",
                "@@ -186,8 +196,36 @@ public class ZkShardTerms implements AutoCloseable{",
                "   /**",
                "-   * Set a replica's term equals to leader's term",
                "+   * Set a replica's term equals to leader's term.",
                "+   * This call should only be used by {@link org.apache.solr.common.params.CollectionParams.CollectionAction#FORCELEADER}",
                "    * @param coreNodeName of the replica",
                "    */",
                "-  public void setEqualsToMax(String coreNodeName) {",
                "+  public void setTermEqualsToLeader(String coreNodeName) {",
                "+    Terms newTerms;",
                "+    while ( (newTerms = terms.setTermEqualsToLeader(coreNodeName)) != null) {",
                "+      if (forceSaveTerms(newTerms)) break;",
                "+    }",
                "+  }",
                "+",
                "+  public void setTermToZero(String coreNodeName) {",
                "+    Terms newTerms;",
                "+    while ( (newTerms = terms.setTermToZero(coreNodeName)) != null) {",
                "+      if (forceSaveTerms(newTerms)) break;",
                "+    }",
                "+  }",
                "+",
                "+  /**",
                "+   * Mark {@code coreNodeName} as recovering",
                "+   */",
                "+  public void startRecovering(String coreNodeName) {",
                "+    Terms newTerms;",
                "+    while ( (newTerms = terms.startRecovering(coreNodeName)) != null) {",
                "+      if (forceSaveTerms(newTerms)) break;",
                "+    }",
                "+  }",
                "+",
                "+  /**",
                "+   * Mark {@code coreNodeName} as finished recovering",
                "+   */",
                "+  public void doneRecovering(String coreNodeName) {",
                "     Terms newTerms;",
                "-    while ( (newTerms = terms.setEqualsToMax(coreNodeName)) != null) {",
                "+    while ( (newTerms = terms.doneRecovering(coreNodeName)) != null) {",
                "       if (forceSaveTerms(newTerms)) break;",
                "@@ -196,2 +234,17 @@ public class ZkShardTerms implements AutoCloseable{",
                "+  /**",
                "+   * When first updates come in, all replicas have some data now,",
                "+   * so we must switch from term 0 (registered) to 1 (have some data)",
                "+   */",
                "+  public void ensureHighestTermsAreNotZero() {",
                "+    Terms newTerms;",
                "+    while ( (newTerms = terms.ensureHighestTermsAreNotZero()) != null) {",
                "+      if (forceSaveTerms(newTerms)) break;",
                "+    }",
                "+  }",
                "+",
                "+  public long getHighestTerm() {",
                "+    return terms.getMaxTerm();",
                "+  }",
                "+",
                "   public long getTerm(String coreNodeName) {",
                "@@ -234,2 +287,3 @@ public class ZkShardTerms implements AutoCloseable{",
                "       setNewTerms(new Terms(newTerms.values, stat.getVersion()));",
                "+      log.info(\"Successful update terms at {} to {}\", znodePath, newTerms);",
                "       return true;",
                "@@ -369,2 +423,3 @@ public class ZkShardTerms implements AutoCloseable{",
                "     private final Map<String, Long> values;",
                "+    private final long maxTerm;",
                "     // ZK node version",
                "@@ -379,2 +434,4 @@ public class ZkShardTerms implements AutoCloseable{",
                "       this.version = version;",
                "+      if (values.isEmpty()) this.maxTerm = 0;",
                "+      else this.maxTerm = Collections.max(values.values());",
                "     }",
                "@@ -382,7 +439,16 @@ public class ZkShardTerms implements AutoCloseable{",
                "     /**",
                "-     * Can this replica become leader or is this replica's term equals to leader's term?",
                "+     * Can {@code coreNodeName} become leader?",
                "      * @param coreNodeName of the replica",
                "-     * @return true if this replica can become leader, false if otherwise",
                "+     * @return true if {@code coreNodeName} can become leader, false if otherwise",
                "      */",
                "     boolean canBecomeLeader(String coreNodeName) {",
                "+      return haveHighestTermValue(coreNodeName) && !values.containsKey(coreNodeName + \"_recovering\");",
                "+    }",
                "+",
                "+    /**",
                "+     * Is {@code coreNodeName}'s term highest?",
                "+     * @param coreNodeName of the replica",
                "+     * @return true if term of {@code coreNodeName} is highest",
                "+     */",
                "+    boolean haveHighestTermValue(String coreNodeName) {",
                "       if (values.isEmpty()) return true;",
                "@@ -429,2 +495,17 @@ public class ZkShardTerms implements AutoCloseable{",
                "+    /**",
                "+     * Return a new {@link Terms} in which highest terms are not zero",
                "+     * @return null if highest terms are already larger than zero",
                "+     */",
                "+    Terms ensureHighestTermsAreNotZero() {",
                "+      if (maxTerm > 0) return null;",
                "+      else {",
                "+        HashMap<String, Long> newValues = new HashMap<>(values);",
                "+        for (String replica : values.keySet()) {",
                "+          newValues.put(replica, 1L);",
                "+        }",
                "+        return new Terms(newValues, version);",
                "+      }",
                "+    }",
                "+",
                "     /**",
                "@@ -455,2 +536,11 @@ public class ZkShardTerms implements AutoCloseable{",
                "+    Terms setTermToZero(String coreNodeName) {",
                "+      if (values.getOrDefault(coreNodeName, -1L) == 0) {",
                "+        return null;",
                "+      }",
                "+      HashMap<String, Long> newValues = new HashMap<>(values);",
                "+      newValues.put(coreNodeName, 0L);",
                "+      return new Terms(newValues, version);",
                "+    }",
                "+",
                "     /**",
                "@@ -460,9 +550,4 @@ public class ZkShardTerms implements AutoCloseable{",
                "      */",
                "-    Terms setEqualsToMax(String coreNodeName) {",
                "-      long maxTerm;",
                "-      try {",
                "-        maxTerm = Collections.max(values.values());",
                "-      } catch (NoSuchElementException e){",
                "-        maxTerm = 0;",
                "-      }",
                "+    Terms setTermEqualsToLeader(String coreNodeName) {",
                "+      long maxTerm = getMaxTerm();",
                "       if (values.get(coreNodeName) == maxTerm) return null;",
                "@@ -473,2 +558,45 @@ public class ZkShardTerms implements AutoCloseable{",
                "     }",
                "+",
                "+    long getMaxTerm() {",
                "+      return maxTerm;",
                "+    }",
                "+",
                "+    /**",
                "+     * Mark {@code coreNodeName} as recovering",
                "+     * @param coreNodeName of the replica",
                "+     * @return null if {@code coreNodeName} is already marked as doing recovering",
                "+     */",
                "+    Terms startRecovering(String coreNodeName) {",
                "+      long maxTerm = getMaxTerm();",
                "+      if (values.get(coreNodeName) == maxTerm && values.getOrDefault(coreNodeName+\"_recovering\", -1L) == maxTerm)",
                "+        return null;",
                "+",
                "+      HashMap<String, Long> newValues = new HashMap<>(values);",
                "+      newValues.put(coreNodeName, maxTerm);",
                "+      newValues.put(coreNodeName+\"_recovering\", maxTerm);",
                "+      return new Terms(newValues, version);",
                "+    }",
                "+",
                "+    /**",
                "+     * Mark {@code coreNodeName} as finished recovering",
                "+     * @param coreNodeName of the replica",
                "+     * @return null if term of {@code coreNodeName} is already finished doing recovering",
                "+     */",
                "+    Terms doneRecovering(String coreNodeName) {",
                "+      if (!values.containsKey(coreNodeName+\"_recovering\")) {",
                "+        return null;",
                "+      }",
                "+",
                "+      HashMap<String, Long> newValues = new HashMap<>(values);",
                "+      newValues.remove(coreNodeName+\"_recovering\");",
                "+      return new Terms(newValues, version);",
                "+    }",
                "+",
                "+    @Override",
                "+    public String toString() {",
                "+      return \"Terms{\" +",
                "+          \"values=\" + values +",
                "+          \", version=\" + version +",
                "+          '}';",
                "+    }",
                "   }",
                "diff --git a/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "index bf25d69077b..c73507154de 100644",
                "--- a/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "+++ b/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "@@ -1134,2 +1134,4 @@ public class CoreContainer {",
                "               resetIndexDirectory(dcore, coreConfig);",
                "+              // the index of this core is emptied, its term should be set to 0",
                "+              getZkController().getShardTerms(desc.getCollectionName(), desc.getShardId()).setTermToZero(desc.getCoreNodeName());",
                "               return new SolrCore(this, dcore, coreConfig);",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "index 4933559cc1a..db707964db2 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "@@ -1151,3 +1151,3 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "               .filter(rep -> zkShardTerms.getTerm(rep.getName()) == optionalMaxTerm.getAsLong())",
                "-              .forEach(rep -> zkShardTerms.setEqualsToMax(rep.getName()));",
                "+              .forEach(rep -> zkShardTerms.setTermEqualsToLeader(rep.getName()));",
                "         }",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation.java b/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation.java",
                "index fbf24a119e0..179589b5790 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation.java",
                "@@ -30,3 +30,2 @@ import org.apache.solr.common.SolrException;",
                " import org.apache.solr.common.SolrException.ErrorCode;",
                "-import org.apache.solr.common.cloud.Replica;",
                " import org.apache.solr.common.params.CoreAdminParams;",
                "@@ -236,12 +235,2 @@ enum CoreAdminOperation implements CoreAdminOp {",
                "     }",
                "-    try (SolrCore core = it.handler.coreContainer.getCore(cname)) {",
                "-",
                "-      // Setting the last published state for this core to be ACTIVE",
                "-      if (core != null) {",
                "-        core.getCoreDescriptor().getCloudDescriptor().setLastPublished(Replica.State.ACTIVE);",
                "-        log().info(\"Setting the last published state for this core, {}, to {}\", core.getName(), Replica.State.ACTIVE);",
                "-      } else {",
                "-        SolrException.log(log(), \"Could not find core: \" + cname);",
                "-      }",
                "-    }",
                "   }),",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/PrepRecoveryOp.java b/solr/core/src/java/org/apache/solr/handler/admin/PrepRecoveryOp.java",
                "index 36477359d0f..d064e78526a 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/PrepRecoveryOp.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/PrepRecoveryOp.java",
                "@@ -129,3 +129,6 @@ class PrepRecoveryOp implements CoreAdminHandler.CoreAdminOp {",
                "               // if the replica is waiting for leader to see recovery state, the leader should refresh its terms",
                "-              if (waitForState == Replica.State.RECOVERING && shardTerms.registered(coreNodeName) && !shardTerms.canBecomeLeader(coreNodeName)) {",
                "+              if (waitForState == Replica.State.RECOVERING && shardTerms.registered(coreNodeName) && shardTerms.skipSendingUpdatesTo(coreNodeName)) {",
                "+                // The replica changed it term, then published itself as RECOVERING.",
                "+                // This core already see replica as RECOVERING",
                "+                // so it is guarantees that a live-fetch will be enough for this core to see max term published",
                "                 shardTerms.refreshTerms();",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/RestoreCoreOp.java b/solr/core/src/java/org/apache/solr/handler/admin/RestoreCoreOp.java",
                "index 03d1478caac..dbb2af0537e 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/RestoreCoreOp.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/RestoreCoreOp.java",
                "@@ -22,4 +22,6 @@ import java.util.Optional;",
                "+import org.apache.solr.cloud.CloudDescriptor;",
                " import org.apache.solr.cloud.ZkController;",
                " import org.apache.solr.common.SolrException;",
                "+import org.apache.solr.common.cloud.Slice;",
                " import org.apache.solr.common.params.CoreAdminParams;",
                "@@ -63,2 +65,10 @@ class RestoreCoreOp implements CoreAdminHandler.CoreAdminOp {",
                "     try (SolrCore core = it.handler.coreContainer.getCore(cname)) {",
                "+      CloudDescriptor cd = core.getCoreDescriptor().getCloudDescriptor();",
                "+      // this core must be the only replica in its shard otherwise",
                "+      // we cannot guarantee consistency between replicas because when we add data (or restore index) to this replica",
                "+      Slice slice = zkController.getClusterState().getCollection(cd.getCollectionName()).getSlice(cd.getShardId());",
                "+      if (slice.getReplicas().size() != 1) {",
                "+        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,",
                "+            \"Failed to restore core=\" + core.getName() + \", the core must be the only replica in its shard\");",
                "+      }",
                "       RestoreCore restoreCore = new RestoreCore(repository, core, locationUri, name);",
                "@@ -68,2 +78,5 @@ class RestoreCoreOp implements CoreAdminHandler.CoreAdminOp {",
                "       }",
                "+      // other replicas to-be-created will know that they are out of date by",
                "+      // looking at their term : 0 compare to term of this core : 1",
                "+      zkController.getShardTerms(cd.getCollectionName(), cd.getShardId()).ensureHighestTermsAreNotZero();",
                "     }",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/SplitOp.java b/solr/core/src/java/org/apache/solr/handler/admin/SplitOp.java",
                "index 5267c75a8c0..5e924d8b82e 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/SplitOp.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/SplitOp.java",
                "@@ -25,2 +25,4 @@ import java.util.Map;",
                "+import org.apache.solr.cloud.CloudDescriptor;",
                "+import org.apache.solr.cloud.ZkShardTerms;",
                " import org.apache.solr.common.SolrException;",
                "@@ -113,2 +115,12 @@ class SplitOp implements CoreAdminHandler.CoreAdminOp {",
                "             newCores.add(newcore);",
                "+            if (it.handler.coreContainer.isZooKeeperAware()) {",
                "+              // this core must be the only replica in its shard otherwise",
                "+              // we cannot guarantee consistency between replicas because when we add data to this replica",
                "+              CloudDescriptor cd = newcore.getCoreDescriptor().getCloudDescriptor();",
                "+              ClusterState clusterState = it.handler.coreContainer.getZkController().getClusterState();",
                "+              if (clusterState.getCollection(cd.getCollectionName()).getSlice(cd.getShardId()).getReplicas().size() != 1) {",
                "+                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,",
                "+                    \"Core with core name \" + newCoreName + \" must be the only replica in shard \" + cd.getShardId());",
                "+              }",
                "+            }",
                "           } else {",
                "@@ -125,2 +137,11 @@ class SplitOp implements CoreAdminHandler.CoreAdminOp {",
                "+      if (it.handler.coreContainer.isZooKeeperAware()) {",
                "+        for (SolrCore newcore : newCores) {",
                "+          // the index of the core changed from empty to have some data, its term must be not zero",
                "+          CloudDescriptor cd = newcore.getCoreDescriptor().getCloudDescriptor();",
                "+          ZkShardTerms zkShardTerms = it.handler.coreContainer.getZkController().getShardTerms(cd.getCollectionName(), cd.getShardId());",
                "+          zkShardTerms.ensureHighestTermsAreNotZero();",
                "+        }",
                "+      }",
                "+",
                "       // After the split has completed, someone (here?) should start the process of replaying the buffered updates.",
                "diff --git a/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java b/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java",
                "index b37cb9c915f..50705825e3d 100644",
                "--- a/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java",
                "+++ b/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java",
                "@@ -25,3 +25,2 @@ import java.util.Collections;",
                " import java.util.EnumSet;",
                "-import java.util.HashMap;",
                " import java.util.HashSet;",
                "@@ -175,2 +174,4 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "   private List<Node> nodes;",
                "+  private Set<String> skippedCoreNodeNames;",
                "+  private boolean isIndexChanged = false;",
                "@@ -336,5 +337,9 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "         forwardToLeader = false;",
                "-        List<ZkCoreNodeProps> replicaProps = zkController.getZkStateReader()",
                "-            .getReplicaProps(collection, shardId, leaderReplica.getName(), null, Replica.State.DOWN);",
                "-        if (replicaProps == null) {",
                "+        ClusterState clusterState = zkController.getZkStateReader().getClusterState();",
                "+        String leaderCoreNodeName = leaderReplica.getName();",
                "+        List<Replica> replicas = clusterState.getCollection(collection)",
                "+            .getSlice(shardId)",
                "+            .getReplicas(EnumSet.of(Replica.Type.NRT, Replica.Type.TLOG));",
                "+        replicas.removeIf((replica) -> replica.getName().equals(leaderCoreNodeName));",
                "+        if (replicas.isEmpty()) {",
                "           return null;",
                "@@ -351,12 +356,16 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "-        List<Node> nodes = new ArrayList<>(replicaProps.size());",
                "+        List<Node> nodes = new ArrayList<>(replicas.size());",
                "+        skippedCoreNodeNames = new HashSet<>();",
                "         ZkShardTerms zkShardTerms = zkController.getShardTerms(collection, shardId);",
                "-        for (ZkCoreNodeProps props : replicaProps) {",
                "-          String coreNodeName = ((Replica) props.getNodeProps()).getName();",
                "-          if (skipList != null && skipListSet.contains(props.getCoreUrl())) {",
                "-            log.info(\"check url:\" + props.getCoreUrl() + \" against:\" + skipListSet + \" result:true\");",
                "-          } else if(!isOldLIRMode && zkShardTerms.registered(coreNodeName) && !zkShardTerms.canBecomeLeader(coreNodeName)) {",
                "-            log.info(\"skip url:{} cause its term is less than leader\", props.getCoreUrl());",
                "+        for (Replica replica: replicas) {",
                "+          String coreNodeName = replica.getName();",
                "+          if (skipList != null && skipListSet.contains(replica.getCoreUrl())) {",
                "+            log.info(\"check url:\" + replica.getCoreUrl() + \" against:\" + skipListSet + \" result:true\");",
                "+          } else if(!isOldLIRMode && zkShardTerms.registered(coreNodeName) && zkShardTerms.skipSendingUpdatesTo(coreNodeName)) {",
                "+            log.debug(\"skip url:{} cause its term is less than leader\", replica.getCoreUrl());",
                "+            skippedCoreNodeNames.add(replica.getName());",
                "+          } else if (!clusterState.getLiveNodes().contains(replica.getNodeName()) || replica.getState() == Replica.State.DOWN) {",
                "+            skippedCoreNodeNames.add(replica.getName());",
                "           } else {",
                "-            nodes.add(new StdNode(props, collection, shardId));",
                "+            nodes.add(new StdNode(new ZkCoreNodeProps(replica), collection, shardId));",
                "           }",
                "@@ -752,2 +761,10 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "   private void doFinish() {",
                "+    boolean shouldUpdateTerms = isLeader && !isOldLIRMode && isIndexChanged;",
                "+    if (shouldUpdateTerms) {",
                "+      ZkShardTerms zkShardTerms = zkController.getShardTerms(cloudDesc.getCollectionName(), cloudDesc.getShardId());",
                "+      if (skippedCoreNodeNames != null) {",
                "+        zkShardTerms.ensureTermsIsHigher(cloudDesc.getCoreNodeName(), skippedCoreNodeNames);",
                "+      }",
                "+      zkController.getShardTerms(collection, cloudDesc.getShardId()).ensureHighestTermsAreNotZero();",
                "+    }",
                "     // TODO: if not a forward and replication req is not specified, we could",
                "@@ -760,3 +777,3 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "     List<Error> errorsForClient = new ArrayList<>(errors.size());",
                "-    Map<ShardInfo, Set<String>> failedReplicas = new HashMap<>();",
                "+    Set<String> replicasShouldBeInLowerTerms = new HashSet<>();",
                "     for (final SolrCmdDistributor.Error error : errors) {",
                "@@ -858,5 +875,3 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "               log.error(\"Setting up to try to start recovery on replica {} with url {} by increasing leader term\", coreNodeName, replicaUrl, rootCause);",
                "-              ShardInfo shardInfo = new ShardInfo(collection, shardId, leaderCoreNodeName);",
                "-              failedReplicas.putIfAbsent(shardInfo, new HashSet<>());",
                "-              failedReplicas.get(shardInfo).add(coreNodeName);",
                "+              replicasShouldBeInLowerTerms.add(coreNodeName);",
                "             } else {",
                "@@ -893,7 +908,5 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "     }",
                "-    if (!isOldLIRMode) {",
                "-      for (Map.Entry<ShardInfo, Set<String>> entry : failedReplicas.entrySet()) {",
                "-        ShardInfo shardInfo = entry.getKey();",
                "-        zkController.getShardTerms(shardInfo.collection, shardInfo.shard).ensureTermsIsHigher(shardInfo.leader, entry.getValue());",
                "-      }",
                "+    if (!isOldLIRMode && !replicasShouldBeInLowerTerms.isEmpty()) {",
                "+      zkController.getShardTerms(cloudDesc.getCollectionName(), cloudDesc.getShardId())",
                "+          .ensureTermsIsHigher(cloudDesc.getCoreNodeName(), replicasShouldBeInLowerTerms);",
                "     }",
                "@@ -930,35 +943,2 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "   }",
                "-",
                "-  private class ShardInfo {",
                "-    private String collection;",
                "-    private String shard;",
                "-    private String leader;",
                "-",
                "-    public ShardInfo(String collection, String shard, String leader) {",
                "-      this.collection = collection;",
                "-      this.shard = shard;",
                "-      this.leader = leader;",
                "-    }",
                "-",
                "-    @Override",
                "-    public boolean equals(Object o) {",
                "-      if (this == o) return true;",
                "-      if (o == null || getClass() != o.getClass()) return false;",
                "-",
                "-      ShardInfo shardInfo = (ShardInfo) o;",
                "-",
                "-      if (!collection.equals(shardInfo.collection)) return false;",
                "-      if (!shard.equals(shardInfo.shard)) return false;",
                "-      return leader.equals(shardInfo.leader);",
                "-    }",
                "-",
                "-    @Override",
                "-    public int hashCode() {",
                "-      int result = collection.hashCode();",
                "-      result = 31 * result + shard.hashCode();",
                "-      result = 31 * result + leader.hashCode();",
                "-      return result;",
                "-    }",
                "-  }",
                "-",
                "@@ -967,2 +947,3 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "     super.processAdd(cmd);",
                "+    isIndexChanged = true;",
                "   }",
                "@@ -972,2 +953,3 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "     super.processDelete(cmd);",
                "+    isIndexChanged = true;",
                "   }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/CloudDescriptor.java",
                "solr/core/src/java/org/apache/solr/cloud/ElectionContext.java",
                "solr/core/src/java/org/apache/solr/cloud/RecoveringCoreTermWatcher.java",
                "solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "solr/core/src/java/org/apache/solr/handler/admin/CoreAdminOperation.java",
                "solr/core/src/java/org/apache/solr/handler/admin/PrepRecoveryOp.java",
                "solr/core/src/java/org/apache/solr/handler/admin/RestoreCoreOp.java",
                "solr/core/src/java/org/apache/solr/handler/admin/SplitOp.java",
                "solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12011": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "59f67468b7f9f90f2377033d358521d451508f9a"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12011",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ee1c742c199c47894396c2e614a076d971e2d1df",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520453762,
            "hunks": 21,
            "message": "SOLR-11722: Merge CREATEDROUTEDALIAS command into CREATEALIAS.  Only an API & docs change; the implementation was already there.",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "index b7cf013e603..0beec09ecee 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "@@ -228,3 +228,2 @@ public class OverseerCollectionMessageHandler implements OverseerMessageHandler,",
                "         .put(CREATEALIAS, new CreateAliasCmd(this))",
                "-        .put(CREATEROUTEDALIAS, new CreateAliasCmd(this))",
                "         .put(DELETEALIAS, new DeleteAliasCmd(this))",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "index 70fb504b96e..b7d7b2846cb 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "@@ -521,12 +521,19 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "     CREATEALIAS_OP(CREATEALIAS, (req, rsp, h) -> {",
                "-      SolrIdentifierValidator.validateAliasName(req.getParams().get(NAME));",
                "-      return req.getParams().required().getAll(null, NAME, \"collections\");",
                "-    }),",
                "-",
                "-    CREATEROUTEDALIAS_OP(CREATEROUTEDALIAS, (req, rsp, h) -> {",
                "       String alias = req.getParams().get(NAME);",
                "       SolrIdentifierValidator.validateAliasName(alias);",
                "-      Map<String, Object> result = req.getParams().required().getAll(null, REQUIRED_ROUTER_PARAMS);",
                "+      String collections = req.getParams().get(\"collections\");",
                "+      Map<String, Object> result = req.getParams().getAll(null, REQUIRED_ROUTER_PARAMS);",
                "       req.getParams().getAll(result, OPTIONAL_ROUTER_PARAMS);",
                "+      if (collections != null) {",
                "+        if (result.size() > 1) { // (NAME should be there, and if it's not we will fail below)",
                "+          throw new SolrException(BAD_REQUEST, \"Collections cannot be specified when creating a time routed alias.\");",
                "+        }",
                "+        // regular alias creation...",
                "+        return req.getParams().required().getAll(null, NAME, \"collections\");",
                "+      }",
                "+",
                "+      // Ok so we are creating a time routed alias from here",
                "+      // for validation....",
                "+      req.getParams().required().getAll(null, REQUIRED_ROUTER_PARAMS);",
                "       ModifiableSolrParams createCollParams = new ModifiableSolrParams(); // without prefix",
                "@@ -535,3 +542,2 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "       //   Additionally, save these without the prefix to createCollParams",
                "-",
                "       forEach(req.getParams(), (p, v) -> {",
                "diff --git a/solr/solr-ref-guide/src/collections-api.adoc b/solr/solr-ref-guide/src/collections-api.adoc",
                "index 77f054ad148..022efe4ab25 100644",
                "--- a/solr/solr-ref-guide/src/collections-api.adoc",
                "+++ b/solr/solr-ref-guide/src/collections-api.adoc",
                "@@ -478,56 +478,26 @@ http://localhost:8983/solr/admin/collections?action=DELETESHARD&collection=anoth",
                "-The `CREATEALIAS` action will create a new alias pointing to one or more collections. If an alias by the same name already exists, this action will replace the existing alias, effectively acting like an atomic \"MOVE\" command.",
                "+The `CREATEALIAS` action will create a new alias pointing to one or more collections. If an alias by the same name",
                "+already exists, this action will replace the existing alias, effectively acting like an atomic \"MOVE\" command. Aliases",
                "+come in 2 flavors: routed and non-routed.",
                "-`/admin/collections?action=CREATEALIAS&name=_name_&collections=_collectionlist_`",
                "-",
                "-=== CREATEALIAS Parameters",
                "-",
                "-`name`::",
                "-The alias name to be created. This parameter is required.",
                "-",
                "-`collections`::",
                "-A comma-separated list of collections to be aliased. The collections must already exist in the cluster. This parameter is required.",
                "-",
                "-`async`::",
                "-Request ID to track this action which will be <<Asynchronous Calls,processed asynchronously>>.",
                "-",
                "-=== CREATEALIAS Response",
                "-",
                "-The output will simply be a responseHeader with details of the time it took to process the request. To confirm the creation of the alias, you can look in the Solr Admin UI, under the Cloud section and find the `aliases.json` file.",
                "-",
                "-=== Examples using CREATEALIAS",
                "-",
                "-*Input*",
                "-",
                "-Create an alias named \"testalias\" and link it to the collections named \"anotherCollection\" and \"testCollection\".",
                "+Non-routed aliases are simpler and can serve to rename a collection or to distribute queries across several collections.",
                "+While it is possible to send updates to an alias spanning multiple collections, non-routed alias have no logic for",
                "+distributing documents among the referenced collections so all updates will go to the first collection in the list.",
                "-[source,text]",
                "-----",
                "-http://localhost:8983/solr/admin/collections?action=CREATEALIAS&name=testalias&collections=anotherCollection,testCollection&wt=xml",
                "-----",
                "-",
                "-*Output*",
                "-",
                "-[source,xml]",
                "-----",
                "-<response>",
                "-  <lst name=\"responseHeader\">",
                "-    <int name=\"status\">0</int>",
                "-    <int name=\"QTime\">122</int>",
                "-  </lst>",
                "-</response>",
                "-----",
                "-",
                "-[[createroutedalias]]",
                "-== CREATEROUTEDALIAS: Create an Alias that Partitions Data",
                "-",
                "-CREATEROUTEDALIAS will create a special type of alias that automates the partitioning of data across a series of",
                "-collections. This feature allows for indefinite indexing of data without degradation of performance otherwise",
                "-experienced due to the continuous growth of an index. As new data arrives, a field on the document is inspected and",
                "-the document is then potentially re-routed to another collection. The underlying collections can",
                "-can be queried independently but more likely the alias created by this command will be used. These collections are created",
                "-automatically on the fly as new data arrives based on the parameters supplied in this command.",
                "+`/admin/collections?action=CREATEALIAS&name=_name_&collections=_collectionlist_`",
                "-NOTE: Presently only partitioning of time-based data is available, though other schemes may become available in",
                "-the future.",
                "+Routed aliases are more complex to configure, but include logic for automatically inspecting a field on the document",
                "+and using the value in that field to select a destination collection. Additionally the routed alias automates the",
                "+partitioning of data across a series of collections by creating new collections periodically. This feature allows for",
                "+indefinite indexing of data without degradation of performance otherwise experienced due to the continuous growth of",
                "+an index. As new data arrives, a field on the document is inspected and the document is then potentially re-routed to",
                "+another collection. The underlying collections can can be queried independently but usually the alias will be used.",
                "+These collections are created automatically on the fly as new data arrives based on the parameters supplied in this",
                "+command. Also for very high volume use cases or for use cases requiring only a limited span of data to be retained,",
                "+collections older than a given age can be deleted. This delete of old collections only occurs if new documents are",
                "+sent to the alias.",
                "+",
                "+*NOTE:* Presently this is only supported for temporal fields stored as a",
                "+<<field-types-included-with-solr.adoc#field-types-included-with-solr,DatePointField or TrieDateField>> type. Other",
                "+well ordered field types may be added in future versions.",
                "@@ -535,15 +505,14 @@ the future.",
                " ----",
                "-admin/collections?action=CREATEROUTEDALIAS&name=timedata&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                "+localhost:8983/solr/admin/collections?action=CREATEALIAS&name=timedata&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                " ----",
                "-If run on Jan 15, 2018, the above will create an alias named \"timedata\", that contains collections with names such as",
                "-`timedata` and an initial collection named `timedata_2018_01_15`. Updates sent to this alias with a (required) value",
                "-in `evt_dt` that is before or after 2018-01-15 will be rejected, until the last 60 minutes of 2018-01-15. After",
                "-2018-01-15T23:00:00, documents for either 2018-01-15 or 2018-01-16 will be accepted.",
                "-",
                "-As soon as the system receives a",
                "-document for an allowable time window for which there is no collection it will automatically create the next required",
                "-collection (and potentially any intervening collections if `router.interval` is smaller than `router.maxFutureMs`). Both",
                "-the initial collection and any subsequent collections will be created using the specified configset. All Collection",
                "-creation parameters other than `name` are allowed, prefixed by `create-collection.`",
                "+If run on Jan 15, 2018 The above will create an alias named timedata, that contains collections with names prefixed with",
                "+`timedata` and an initial collection named `timedata_2018_01_15` will be created immediately. Updates sent to this",
                "+alias with a (required) value in `evt_dt` that is before or after 2018-01-15 will be rejected, until the last 60",
                "+minutes of 2018-01-15. After 2018-01-15T23:00:00 documents for either 2018-01-15 or 2018-01-16 will be accepted.",
                "+As soon as the system receives a document for an allowable time window for which there is no collection it will",
                "+automatically create the next required collection (and potentially any intervening collections if router.interval is",
                "+smaller than router.maxFutureMs). Both the initial collection and any subsequent collections will be created using",
                "+the specified configset. All Collection creation parameters other than `name` are allowed, prefixed",
                "+by `create-collection.`",
                "@@ -556,8 +525,24 @@ in alias metadata, and can be verified by inspecting `aliases.json` in ZooKeeper",
                "-=== CREATEROUTEDALIAS Parameters",
                "+*NOTE:* Presently only updates are routed and queries are distributed to all collections in the alias, but future",
                "+features may enable routing of the query to the single appropriate collection based on a special parameter or perhaps",
                "+a filter on the routed field.",
                "+",
                "+=== CREATEALIAS Parameters",
                " `name`::",
                "-The alias name to be created. This parameter is required, and also functions as a prefix for the names of the",
                "-dependent collections that will be created. It must therefore adhere to normal requirements for alias and collection",
                "-naming.",
                "+The alias name to be created. This parameter is required. If the alias is to be routed it also functions",
                "+as a prefix for the names of the dependent collections that will be created. It must therefore adhere to normal",
                "+requirements for collection naming.",
                "+",
                "+`async`::",
                "+Request ID to track this action which will be <<Asynchronous Calls,processed asynchronously>>.",
                "+",
                "+==== Non-Routed Alias Parameters",
                "+",
                "+`collections`::",
                "+A comma-separated list of collections to be aliased. The collections must already exist in the cluster.",
                "+This parameter signals the creation of a simple (non-routed) alias. If it is present all routing parameters are",
                "+prohibited. If routing parameters are present this parameter is prohibited.",
                "+",
                "+==== Routed Alias Parameters",
                "@@ -568,9 +553,6 @@ optionally with <<working-with-dates.adoc#date-math,date math>>).",
                " The first collection created for the alias will be internally named after this value.",
                "-If a document is submitted with an earlier value for `router.field` than the earliest collection the alias points to then",
                "-it will yield an error since it can't be routed.",
                "-+",
                "-This date/time MUST NOT have a milliseconds component other than 0.",
                "-Particularly, this means `NOW` will fail 999 times out of 1000, though `NOW/SECOND`, `NOW/MINUTE`, etc. will work just fine.",
                "-+",
                "-This parameter is required.",
                "+If a document is submitted with an earlier value for router.field then the earliest collection the alias points to then",
                "+it will yield an error since it can't be routed. This date/time MUST NOT have a milliseconds component other than 0.",
                "+Particularly, this means `NOW` will fail 999 times out of 1000, though `NOW/SECOND`, `NOW/MINUTE`, etc. will work",
                "+just fine. This parameter is required.",
                "@@ -623,13 +605,30 @@ It's probably a bad idea to use \"data driven\" mode as schema mutations might hap",
                "-`async`::",
                "-Request ID to track this action which will be <<Asynchronous Calls,processed asynchronously>>.",
                "+=== CREATEALIAS Response",
                "+",
                "+The output will simply be a responseHeader with details of the time it took to process the request.",
                "+To confirm the creation of the alias, you can look in the Solr Admin UI, under the Cloud section and find the",
                "+`aliases.json` file. The initial collection for routed aliases should also be visible in various parts of the admin UI.",
                "-=== CREATEROUTEDALIAS Response",
                "+=== Examples using CREATEALIAS",
                "-The output will simply be a responseHeader with details of the time it took to process the request. To confirm the",
                "-creation of the alias and the values of the associated metadata, you can look in the Solr Admin UI, under the Cloud",
                "-section and find the `aliases.json` file. The initial collection should also be visible in various parts",
                "-of the Admin UI.",
                "+*Input*",
                "-=== Examples using CREATEROUTEDALIAS",
                "+Create an alias named \"testalias\" and link it to the collections named \"anotherCollection\" and \"testCollection\".",
                "+",
                "+[source,text]",
                "+----",
                "+http://localhost:8983/solr/admin/collections?action=CREATEALIAS&name=testalias&collections=anotherCollection,testCollection&wt=xml",
                "+----",
                "+",
                "+*Output*",
                "+",
                "+[source,xml]",
                "+----",
                "+<response>",
                "+  <lst name=\"responseHeader\">",
                "+    <int name=\"status\">0</int>",
                "+    <int name=\"QTime\">122</int>",
                "+  </lst>",
                "+</response>",
                "+----",
                "@@ -644,3 +643,3 @@ partiton is to be rejected and collections are created using a config set named",
                " ----",
                "-http://localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=myTimeData&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                "+http://localhost:8983/solr/admin/collections?action=CREATEALIAS&name=myTimeData&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                " ----",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "index b7bbf2f8f84..1c4750e96a9 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "@@ -1436,3 +1436,3 @@ public abstract class CollectionAdminRequest<T extends CollectionAdminResponse>",
                "     public CreateTimeRoutedAlias(String aliasName, String routerField, String start, String interval, Create createCollTemplate) {",
                "-      super(CollectionAction.CREATEROUTEDALIAS);",
                "+      super(CollectionAction.CREATEALIAS);",
                "       this.aliasName = aliasName;",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "index d950f1195c6..f3d5ca5a275 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "@@ -118,8 +118,2 @@ public class CollectionApiMapping {",
                "         \"create-alias\",",
                "-        null),",
                "-    CREATE_ROUTED_ALIAS(COLLECTIONS_COMMANDS,",
                "-        POST,",
                "-        CREATEROUTEDALIAS,",
                "-        \"create-routed-alias\",",
                "-        // same as the CREATE_COLLECTION but with \"create-collection\" prefix",
                "         CREATE_COLLECTION.paramsToAttrs.entrySet().stream().collect(Collectors.toMap(",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "index cbf14cc0e4b..f9f3df86952 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "@@ -78,3 +78,2 @@ public interface CollectionParams {",
                "     CREATEALIAS(true, LockLevel.COLLECTION),",
                "-    CREATEROUTEDALIAS(true, LockLevel.COLLECTION),",
                "     DELETEALIAS(true, LockLevel.COLLECTION),",
                "diff --git a/solr/solrj/src/resources/apispec/collections.Commands.json b/solr/solrj/src/resources/apispec/collections.Commands.json",
                "index dfdfd5207f8..245a2243715 100644",
                "--- a/solr/solrj/src/resources/apispec/collections.Commands.json",
                "+++ b/solr/solrj/src/resources/apispec/collections.Commands.json",
                "@@ -130,3 +130,3 @@",
                "       \"documentation\": \"https://lucene.apache.org/solr/guide/collections-api.html#createalias\",",
                "-      \"description\": \"Allows one or more collections to be known by another name. If this command is used on an existing alias, the existing alias will be replaced with the new collection details.\",",
                "+      \"description\": \"Allows one or more collections to be known by another name, or creates an alias that manages a series of time-partitioned collections.. If this command is used on an existing alias, the existing alias will be replaced with the new collection details.\",",
                "       \"type\": \"object\",",
                "@@ -139,3 +139,3 @@",
                "           \"type\": \"array\",",
                "-          \"description\": \"The list of collections to be known as this alias.\",",
                "+          \"description\": \"The list of collections to be known as this alias. Incompatible with any of the routing parameters. Either this parameter or a complete set of routing parameters is required\",",
                "           \"items\": {",
                "@@ -144,21 +144,2 @@",
                "         },",
                "-        \"async\": {",
                "-          \"type\": \"string\",",
                "-          \"description\": \"Defines a request ID that can be used to track this action after it's submitted. The action will be processed asynchronously.\"",
                "-        }",
                "-      },",
                "-      \"required\": [",
                "-        \"name\",",
                "-        \"collections\"",
                "-      ]",
                "-    },",
                "-    \"create-routed-alias\": {",
                "-      \"type\": \"object\",",
                "-      \"documentation\": \"https://lucene.apache.org/solr/guide/collections-api.html#createalias\",",
                "-      \"description\": \"Creates an alias that manages a series of time-partitioned collections.\",",
                "-      \"properties\": {",
                "-        \"name\": {",
                "-          \"type\": \"string\",",
                "-          \"description\": \"The alias name to be created.\"",
                "-        },",
                "         \"router\" : {",
                "@@ -187,3 +168,3 @@",
                "               \"description\":\"How many milliseconds into the future to accept document. Documents with a value in router.field that is greater than now() + maxFutureMs will be rejected to avoid provisioning too much resources.\"",
                "-            }",
                "+            },",
                "             \"autoDeleteAge\": {",
                "@@ -210,5 +191,3 @@",
                "       \"required\": [",
                "-        \"name\",",
                "-        \"router\",",
                "-        \"create-collection\"",
                "+        \"name\"",
                "       ]"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "solr/solr-ref-guide/src/collections-api.adoc",
                "solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "solr/solrj/src/resources/apispec/collections.Commands.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11722": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "ae97500ec2198280e4dc96bd8b5d64b65034cd5c"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11722",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7f651bd713dbc9f4a390b74009c444ba5e56a0c9",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518522879,
            "hunks": 1,
            "message": "SOLR-11950: Parse CLUSTERSTATUS 'shard' param as comma-delim list The documentation for the 'shard' parameter on CLUSTERSTATUS requests, indicates that users should be able to provide a comma-separated list of shards they are interested in.  However, prior to this commit the parameter value was parsed as a single shard name, causing requests with more than one shard to return as a 400. This commit changes this behavior to correctly parse the param value.",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/ClusterStatus.java b/solr/core/src/java/org/apache/solr/handler/admin/ClusterStatus.java",
                "index 63c1a078fd2..0f159544f0f 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/ClusterStatus.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/ClusterStatus.java",
                "@@ -117,3 +117,6 @@ public class ClusterStatus {",
                "       if (shard != null) {",
                "-        requestedShards.add(shard);",
                "+        String[] paramShards = shard.split(\",\");",
                "+        for(String paramShard : paramShards){",
                "+            requestedShards.add(paramShard);",
                "+        }",
                "       }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/admin/ClusterStatus.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11950": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "9040307787a093af2dc2289bb661d0f86cc06a2c"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: parameter",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11950",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f6b6f5070270c93fa7d8604ed456c9df041e7454",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518738108,
            "hunks": 35,
            "message": "SOLR-11739: Don't accept duplicate async IDs in collection API operations",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/DistributedMap.java b/solr/core/src/java/org/apache/solr/cloud/DistributedMap.java",
                "index 7518208fb34..c9f12e906fd 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/DistributedMap.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/DistributedMap.java",
                "@@ -18,2 +18,5 @@ package org.apache.solr.cloud;",
                "+import java.util.ArrayList;",
                "+import java.util.Collection;",
                "+import java.util.List;",
                " import org.apache.solr.common.SolrException;",
                "@@ -24,6 +27,5 @@ import org.apache.zookeeper.CreateMode;",
                " import org.apache.zookeeper.KeeperException;",
                "+import org.apache.zookeeper.KeeperException.NodeExistsException;",
                " import org.apache.zookeeper.data.Stat;",
                "-import java.util.List;",
                "-",
                " /**",
                "@@ -60,2 +62,15 @@ public class DistributedMap {",
                "   }",
                "+  ",
                "+  /**",
                "+   * Puts an element in the map only if there isn't one with the same trackingId already",
                "+   * @return True if the the element was added. False if it wasn't (because the key already exists)",
                "+   */",
                "+  public boolean putIfAbsent(String trackingId, byte[] data) throws KeeperException, InterruptedException {",
                "+    try {",
                "+      zookeeper.makePath(dir + \"/\" + PREFIX + trackingId, data, CreateMode.PERSISTENT, null, true, true);",
                "+      return true;",
                "+    } catch (NodeExistsException e) {",
                "+      return false;",
                "+    }",
                "+  }",
                "@@ -99,2 +114,13 @@ public class DistributedMap {",
                "   }",
                "+  ",
                "+  /**",
                "+   * Returns the keys of all the elements in the map",
                "+   */",
                "+  public Collection<String> keys() throws KeeperException, InterruptedException {",
                "+    List<String> childs = zookeeper.getChildren(dir, null, true);",
                "+    final List<String> ids = new ArrayList<>(childs.size());",
                "+    childs.stream().forEach((child) -> ids.add(child.substring(PREFIX.length())));",
                "+    return ids;",
                "+",
                "+  }",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/Overseer.java b/solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "index edf383884ea..dbadcde7d44 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "@@ -681,3 +681,3 @@ public class Overseer implements SolrCloseable {",
                "     createOverseerNode(zkClient);",
                "-    return new SizeLimitedDistributedMap(zkClient, \"/overseer/collection-map-completed\", NUM_RESPONSES_TO_STORE);",
                "+    return new SizeLimitedDistributedMap(zkClient, \"/overseer/collection-map-completed\", NUM_RESPONSES_TO_STORE, (child) -> getAsyncIdsMap(zkClient).remove(child));",
                "   }",
                "@@ -687,3 +687,9 @@ public class Overseer implements SolrCloseable {",
                "     createOverseerNode(zkClient);",
                "-    return new SizeLimitedDistributedMap(zkClient, \"/overseer/collection-map-failure\", NUM_RESPONSES_TO_STORE);",
                "+    return new SizeLimitedDistributedMap(zkClient, \"/overseer/collection-map-failure\", NUM_RESPONSES_TO_STORE, (child) -> getAsyncIdsMap(zkClient).remove(child));",
                "+  }",
                "+  ",
                "+  /* Map of async IDs currently in use*/",
                "+  static DistributedMap getAsyncIdsMap(final SolrZkClient zkClient) {",
                "+    createOverseerNode(zkClient);",
                "+    return new DistributedMap(zkClient, \"/overseer/async_ids\");",
                "   }",
                "@@ -772,2 +778,3 @@ public class Overseer implements SolrCloseable {",
                "   }",
                "+  ",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/OverseerTaskQueue.java b/solr/core/src/java/org/apache/solr/cloud/OverseerTaskQueue.java",
                "index 276725861e9..3df650109a5 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/OverseerTaskQueue.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/OverseerTaskQueue.java",
                "@@ -72,3 +72,3 @@ public class OverseerTaskQueue extends ZkDistributedQueue {",
                "             if (message.containsKey(requestIdKey)) {",
                "-              LOG.debug(\">>>> {}\", message.get(requestIdKey));",
                "+              LOG.debug(\"Looking for {}, found {}\", message.get(requestIdKey), requestId);",
                "               if(message.get(requestIdKey).equals(requestId)) return true;",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/SizeLimitedDistributedMap.java b/solr/core/src/java/org/apache/solr/cloud/SizeLimitedDistributedMap.java",
                "index 6501b8c32e4..7f7e75f7cfe 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/SizeLimitedDistributedMap.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/SizeLimitedDistributedMap.java",
                "@@ -19,3 +19,2 @@ package org.apache.solr.cloud;",
                " import java.util.List;",
                "-",
                " import org.apache.lucene.util.PriorityQueue;",
                "@@ -36,5 +35,15 @@ public class SizeLimitedDistributedMap extends DistributedMap {",
                "+  /**",
                "+   * This observer will be called when this map overflows, and deletes the excess of elements",
                "+   */",
                "+  private final OnOverflowObserver onOverflowObserver;",
                "+",
                "   public SizeLimitedDistributedMap(SolrZkClient zookeeper, String dir, int maxSize) {",
                "+    this(zookeeper, dir, maxSize, null);",
                "+  }",
                "+  ",
                "+  public SizeLimitedDistributedMap(SolrZkClient zookeeper, String dir, int maxSize, OnOverflowObserver onOverflowObserver) {",
                "     super(zookeeper, dir);",
                "     this.maxSize = maxSize;",
                "+    this.onOverflowObserver = onOverflowObserver;",
                "   }",
                "@@ -49,3 +58,3 @@ public class SizeLimitedDistributedMap extends DistributedMap {",
                "-      final PriorityQueue priorityQueue = new PriorityQueue<Long>(cleanupSize) {",
                "+      final PriorityQueue<Long> priorityQueue = new PriorityQueue<Long>(cleanupSize) {",
                "         @Override",
                "@@ -65,4 +74,6 @@ public class SizeLimitedDistributedMap extends DistributedMap {",
                "         Stat stat = zookeeper.exists(dir + \"/\" + child, null, true);",
                "-        if (stat.getMzxid() <= topElementMzxId)",
                "+        if (stat.getMzxid() <= topElementMzxId) {",
                "           zookeeper.delete(dir + \"/\" + child, -1, true);",
                "+          if (onOverflowObserver != null) onOverflowObserver.onChildDelete(child.substring(PREFIX.length()));",
                "+        }",
                "       }",
                "@@ -72,2 +83,6 @@ public class SizeLimitedDistributedMap extends DistributedMap {",
                "   }",
                "+  ",
                "+  interface OnOverflowObserver {",
                "+    void onChildDelete(String child) throws KeeperException, InterruptedException;",
                "+  }",
                " }",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkController.java b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "index 7898e9637cd..cb1fcea5ba8 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "@@ -151,2 +151,3 @@ public class ZkController {",
                "   private final DistributedMap overseerFailureMap;",
                "+  private final DistributedMap asyncIdsMap;",
                "@@ -438,2 +439,4 @@ public class ZkController {",
                "     this.overseerFailureMap = Overseer.getFailureMap(zkClient);",
                "+    this.asyncIdsMap = Overseer.getAsyncIdsMap(zkClient);",
                "+",
                "     zkStateReader = new ZkStateReader(zkClient, () -> {",
                "@@ -1932,2 +1935,41 @@ public class ZkController {",
                "+  /**",
                "+   * When an operation needs to be performed in an asynchronous mode, the asyncId needs",
                "+   * to be claimed by calling this method to make sure it's not duplicate (hasn't been",
                "+   * claimed by other request). If this method returns true, the asyncId in the parameter",
                "+   * has been reserved for the operation, meaning that no other thread/operation can claim",
                "+   * it. If for whatever reason, the operation is not scheduled, the asuncId needs to be",
                "+   * cleared using {@link #clearAsyncId(String)}.",
                "+   * If this method returns false, no reservation has been made, and this asyncId can't ",
                "+   * be used, since it's being used by another operation (currently or in the past)",
                "+   * @param asyncId A string representing the asyncId of an operation. Can't be null.",
                "+   * @return True if the reservation succeeds.",
                "+   *         False if this ID is already in use.",
                "+   */",
                "+  public boolean claimAsyncId(String asyncId) throws KeeperException {",
                "+    try {",
                "+      return asyncIdsMap.putIfAbsent(asyncId, new byte[0]);",
                "+    } catch (InterruptedException e) {",
                "+      log.error(\"Could not claim asyncId=\" + asyncId, e);",
                "+      Thread.currentThread().interrupt();",
                "+      throw new RuntimeException(e);",
                "+    }",
                "+  }",
                "+  ",
                "+  /**",
                "+   * Clears an asyncId previously claimed by calling {@link #claimAsyncId(String)}",
                "+   * @param asyncId A string representing the asyncId of an operation. Can't be null.",
                "+   * @return True if the asyncId existed and was cleared.",
                "+   *         False if the asyncId didn't exist before.",
                "+   */",
                "+  public boolean clearAsyncId(String asyncId) throws KeeperException {",
                "+    try {",
                "+      return asyncIdsMap.remove(asyncId);",
                "+    } catch (InterruptedException e) {",
                "+      log.error(\"Could not release asyncId=\" + asyncId, e);",
                "+      Thread.currentThread().interrupt();",
                "+      throw new RuntimeException(e);",
                "+    }",
                "+  }",
                "+",
                "   public int getClientTimeout() {",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "index 10d08fe8dcc..8b4d0b8e687 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "@@ -812,3 +812,3 @@ public class OverseerCollectionMessageHandler implements OverseerMessageHandler,",
                "                      NamedList results, Replica.State stateMatcher, String asyncId, Map<String, String> requestMap, Set<String> okayExceptions) {",
                "-    log.info(\"Executing Collection Cmd : \" + params);",
                "+    log.info(\"Executing Collection Cmd={}, asyncId={}\", params, asyncId);",
                "     String collectionName = message.getStr(NAME);",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "index 63b9f166f29..4933559cc1a 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "@@ -281,2 +281,10 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "+  /*",
                "+   * In SOLR-11739 we change the way the async IDs are checked to decide if one has",
                "+   * already been used or not. For backward compatibility, we continue to check in the",
                "+   * old way (meaning, in all the queues) for now. This extra check should be removed",
                "+   * in Solr 9 ",
                "+   */",
                "+  private static final boolean CHECK_ASYNC_ID_BACK_COMPAT_LOCATIONS = true;",
                "+",
                "   public static long DEFAULT_COLLECTION_OP_TIMEOUT = 180*1000;",
                "@@ -296,3 +304,3 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "-       if(asyncId.equals(\"-1\")) {",
                "+       if (asyncId.equals(\"-1\")) {",
                "          throw new SolrException(ErrorCode.BAD_REQUEST, \"requestid can not be -1. It is reserved for cleanup purposes.\");",
                "@@ -301,12 +309,31 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "        NamedList<String> r = new NamedList<>();",
                "-",
                "-       if (coreContainer.getZkController().getOverseerCompletedMap().contains(asyncId) ||",
                "+       ",
                "+       if (CHECK_ASYNC_ID_BACK_COMPAT_LOCATIONS && (",
                "+           coreContainer.getZkController().getOverseerCompletedMap().contains(asyncId) ||",
                "            coreContainer.getZkController().getOverseerFailureMap().contains(asyncId) ||",
                "            coreContainer.getZkController().getOverseerRunningMap().contains(asyncId) ||",
                "-           overseerCollectionQueueContains(asyncId)) {",
                "+           overseerCollectionQueueContains(asyncId))) {",
                "+         // for back compatibility, check in the old places. This can be removed in Solr 9",
                "          r.add(\"error\", \"Task with the same requestid already exists.\");",
                "-",
                "        } else {",
                "-         coreContainer.getZkController().getOverseerCollectionQueue()",
                "+         if (coreContainer.getZkController().claimAsyncId(asyncId)) {",
                "+           boolean success = false;",
                "+           try {",
                "+             coreContainer.getZkController().getOverseerCollectionQueue()",
                "              .offer(Utils.toJSON(m));",
                "+             success = true;",
                "+           } finally {",
                "+             if (!success) {",
                "+               try {",
                "+                 coreContainer.getZkController().clearAsyncId(asyncId);",
                "+               } catch (Exception e) {",
                "+                 // let the original exception bubble up",
                "+                 log.error(\"Unable to release async ID={}\", asyncId, e);",
                "+                 SolrZkClient.checkInterrupted(e);",
                "+               }",
                "+             }",
                "+           }",
                "+         } else {",
                "+           r.add(\"error\", \"Task with the same requestid already exists.\");",
                "+         }",
                "        }",
                "@@ -710,4 +737,12 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "         if (flush) {",
                "-          zkController.getOverseerCompletedMap().clear();",
                "-          zkController.getOverseerFailureMap().clear();",
                "+          Collection<String> completed = zkController.getOverseerCompletedMap().keys();",
                "+          Collection<String> failed = zkController.getOverseerFailureMap().keys();",
                "+          for (String asyncId:completed) {",
                "+            zkController.getOverseerCompletedMap().remove(asyncId);",
                "+            zkController.clearAsyncId(asyncId);",
                "+          }",
                "+          for (String asyncId:failed) {",
                "+            zkController.getOverseerFailureMap().remove(asyncId);",
                "+            zkController.clearAsyncId(asyncId);",
                "+          }",
                "           rsp.getValues().add(\"status\", \"successfully cleared stored collection api responses\");",
                "@@ -717,4 +752,6 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "           if (zkController.getOverseerCompletedMap().remove(requestId)) {",
                "+            zkController.clearAsyncId(requestId);",
                "             rsp.getValues().add(\"status\", \"successfully removed stored response for [\" + requestId + \"]\");",
                "           } else if (zkController.getOverseerFailureMap().remove(requestId)) {",
                "+            zkController.clearAsyncId(requestId);",
                "             rsp.getValues().add(\"status\", \"successfully removed stored response for [\" + requestId + \"]\");",
                "@@ -722,2 +759,3 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "             rsp.getValues().add(\"status\", \"[\" + requestId + \"] not found in stored responses\");",
                "+            // Don't call zkController.clearAsyncId for this, since it could be a running/pending task",
                "           }",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders.java b/solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders.java",
                "index 53e9fde5ad9..f0819bdded9 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders.java",
                "@@ -289,2 +289,3 @@ class RebalanceLeaders {",
                "           coreContainer.getZkController().getOverseerFailureMap().remove(asyncId);",
                "+          coreContainer.getZkController().clearAsyncId(asyncId);",
                "           NamedList<Object> fails = (NamedList<Object>) results.get(\"failures\");",
                "@@ -302,2 +303,3 @@ class RebalanceLeaders {",
                "           coreContainer.getZkController().getOverseerCompletedMap().remove(asyncId);",
                "+          coreContainer.getZkController().clearAsyncId(asyncId);",
                "           NamedList<Object> successes = (NamedList<Object>) results.get(\"successes\");",
                "diff --git a/solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java b/solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java",
                "index 75418c60a2a..e432bb04ea5 100644",
                "--- a/solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java",
                "+++ b/solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java",
                "@@ -522,3 +522,2 @@ public class ZkTestServer {",
                "-  @SuppressWarnings(\"deprecation\")",
                "   public void shutdown() throws IOException, InterruptedException {"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/DistributedMap.java",
                "solr/core/src/java/org/apache/solr/cloud/Overseer.java",
                "solr/core/src/java/org/apache/solr/cloud/OverseerTaskQueue.java",
                "solr/core/src/java/org/apache/solr/cloud/SizeLimitedDistributedMap.java",
                "solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders.java",
                "solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11739": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "61ea8f60b1c69ba9ed753fe533d571fcbb452887"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11739",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c1a44251fefabb0ed743f1bdaf287ac89ac38758",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520297996,
            "hunks": 31,
            "message": "SOLR-11960: Add collection-level properties Similar to cluster properties, but apply to a single collection.",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/BackupCmd.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/BackupCmd.java",
                "index c411fbc0ae1..7589c5570ca 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/BackupCmd.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/BackupCmd.java",
                "@@ -126,2 +126,4 @@ public class BackupCmd implements OverseerCollectionMessageHandler.Cmd {",
                "+    backupMgr.downloadCollectionProperties(location, backupName, collectionName);",
                "+",
                "     log.info(\"Completed backing up ZK data for backupName={}\", backupName);",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/RestoreCmd.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/RestoreCmd.java",
                "index 09ceb559697..1823fe3339f 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/RestoreCmd.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/RestoreCmd.java",
                "@@ -193,2 +193,5 @@ public class RestoreCmd implements OverseerCollectionMessageHandler.Cmd {",
                "+    // Restore collection properties",
                "+    backupMgr.uploadCollectionProperties(location, backupName, restoreCollectionName);",
                "+",
                "     DocCollection restoreCollection = zkStateReader.getClusterState().getCollection(restoreCollectionName);",
                "diff --git a/solr/core/src/java/org/apache/solr/core/backup/BackupManager.java b/solr/core/src/java/org/apache/solr/core/backup/BackupManager.java",
                "index d2094d6ac52..afba4b132e1 100644",
                "--- a/solr/core/src/java/org/apache/solr/core/backup/BackupManager.java",
                "+++ b/solr/core/src/java/org/apache/solr/core/backup/BackupManager.java",
                "@@ -46,2 +46,3 @@ import org.apache.solr.core.backup.repository.BackupRepository.PathType;",
                " import org.apache.solr.util.PropertiesInputStream;",
                "+import org.apache.zookeeper.CreateMode;",
                " import org.apache.zookeeper.KeeperException;",
                "@@ -194,2 +195,42 @@ public class BackupManager {",
                "+  public void uploadCollectionProperties(URI backupLoc, String backupId, String collectionName) throws IOException {",
                "+    URI sourceDir = repository.resolve(backupLoc, backupId, ZK_STATE_DIR);",
                "+    URI source = repository.resolve(sourceDir, ZkStateReader.COLLECTION_PROPS_ZKNODE);",
                "+    if (!repository.exists(source)) {",
                "+      // No collection properties to restore",
                "+      return;",
                "+    }",
                "+    String zkPath = ZkStateReader.COLLECTIONS_ZKNODE + '/' + collectionName + '/' + ZkStateReader.COLLECTION_PROPS_ZKNODE;",
                "+",
                "+    try (IndexInput is = repository.openInput(sourceDir, ZkStateReader.COLLECTION_PROPS_ZKNODE, IOContext.DEFAULT)) {",
                "+      byte[] arr = new byte[(int) is.length()];",
                "+      is.readBytes(arr, 0, (int) is.length());",
                "+      zkStateReader.getZkClient().create(zkPath, arr, CreateMode.PERSISTENT, true);",
                "+    } catch (KeeperException | InterruptedException e) {",
                "+      throw new IOException(\"Error uploading file to zookeeper path \" + source.toString() + \" to \" + zkPath,",
                "+          SolrZkClient.checkInterrupted(e));",
                "+    }",
                "+  }",
                "+",
                "+  public void downloadCollectionProperties(URI backupLoc, String backupId, String collectionName) throws IOException {",
                "+    URI dest = repository.resolve(backupLoc, backupId, ZK_STATE_DIR, ZkStateReader.COLLECTION_PROPS_ZKNODE);",
                "+    String zkPath = ZkStateReader.COLLECTIONS_ZKNODE + '/' + collectionName + '/' + ZkStateReader.COLLECTION_PROPS_ZKNODE;",
                "+",
                "+",
                "+    try {",
                "+      if (!zkStateReader.getZkClient().exists(zkPath, true)) {",
                "+        // Nothing to back up",
                "+        return;",
                "+      }",
                "+",
                "+      try (OutputStream os = repository.createOutput(dest)) {",
                "+        byte[] data = zkStateReader.getZkClient().getData(zkPath, null, null, true);",
                "+        os.write(data);",
                "+      }",
                "+    } catch (KeeperException | InterruptedException e) {",
                "+      throw new IOException(\"Error downloading file from zookeeper path \" + zkPath + \" to \" + dest.toString(),",
                "+          SolrZkClient.checkInterrupted(e));",
                "+    }",
                "+  }",
                "+",
                "   private void downloadFromZK(SolrZkClient zkClient, String zkPath, URI dir) throws IOException {",
                "@@ -234,3 +275,3 @@ public class BackupManager {",
                "           } catch (KeeperException | InterruptedException e) {",
                "-            throw new IOException(e);",
                "+            throw new IOException(SolrZkClient.checkInterrupted(e));",
                "           }",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "index 9824970355e..f4855ebeeee 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "@@ -60,2 +60,3 @@ import org.apache.solr.common.cloud.ClusterProperties;",
                " import org.apache.solr.common.cloud.ClusterState;",
                "+import org.apache.solr.common.cloud.CollectionProperties;",
                " import org.apache.solr.common.cloud.DocCollection;",
                "@@ -135,2 +136,4 @@ import static org.apache.solr.common.cloud.ZkStateReader.TLOG_REPLICAS;",
                " import static org.apache.solr.common.params.CollectionAdminParams.COUNT_PROP;",
                "+import static org.apache.solr.common.params.CollectionAdminParams.PROPERTY_NAME;",
                "+import static org.apache.solr.common.params.CollectionAdminParams.PROPERTY_VALUE;",
                " import static org.apache.solr.common.params.CollectionParams.CollectionAction.*;",
                "@@ -686,2 +689,10 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "     }),",
                "+    COLLECTIONPROP_OP(COLLECTIONPROP, (req, rsp, h) -> {",
                "+      String collection = req.getParams().required().get(NAME);",
                "+      String name = req.getParams().required().get(PROPERTY_NAME);",
                "+      String val = req.getParams().get(PROPERTY_VALUE);",
                "+      CollectionProperties cp = new CollectionProperties(h.coreContainer.getZkController().getZkClient());",
                "+      cp.setCollectionProperty(collection, name, val);",
                "+      return null;",
                "+    }),",
                "     REQUESTSTATUS_OP(REQUESTSTATUS, (req, rsp, h) -> {",
                "diff --git a/solr/solr-ref-guide/src/collections-api.adoc b/solr/solr-ref-guide/src/collections-api.adoc",
                "index dee5443111e..77f054ad148 100644",
                "--- a/solr/solr-ref-guide/src/collections-api.adoc",
                "+++ b/solr/solr-ref-guide/src/collections-api.adoc",
                "@@ -1075,2 +1075,45 @@ http://localhost:8983/solr/admin/collections?action=CLUSTERPROP&name=urlScheme&v",
                "+[[collectionprop]]",
                "+== COLLECTIONPROP: Collection Properties",
                "+",
                "+Add, edit or delete a collection property.",
                "+",
                "+`/admin/collections?action=COLLECTIONPROP&name=_collectionName_&propertyName=_propertyName_&propertyValue=_propertyValue_`",
                "+",
                "+=== COLLECTIONPROP Parameters",
                "+",
                "+`name`::",
                "+The name of the collection for which the property would be set.",
                "+",
                "+`propertyName`::",
                "+The name of the property.",
                "+",
                "+`propertyValue`::",
                "+The value of the property. When not provided, the property is deleted.",
                "+",
                "+=== COLLECTIONPROP Response",
                "+",
                "+The response will include the status of the request and the properties that were updated or removed. If the status is anything other than \"0\", an error message will explain why the request failed.",
                "+",
                "+=== Examples using COLLECTIONPROP",
                "+",
                "+*Input*",
                "+",
                "+[source,text]",
                "+----",
                "+http://localhost:8983/solr/admin/collections?action=COLLECTIONPROP&name=coll&propertyName=foo&val=bar&wt=xml",
                "+----",
                "+",
                "+*Output*",
                "+",
                "+[source,xml]",
                "+----",
                "+<response>",
                "+  <lst name=\"responseHeader\">",
                "+    <int name=\"status\">0</int>",
                "+    <int name=\"QTime\">0</int>",
                "+  </lst>",
                "+</response>",
                "+----",
                "+",
                " [[migrate]]",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "index 8826384956f..b7bbf2f8f84 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "@@ -1825,2 +1825,41 @@ public abstract class CollectionAdminRequest<T extends CollectionAdminResponse>",
                "+  public static CollectionProp setCollectionProperty(String collection, String propertyName, String propertyValue) {",
                "+    return new CollectionProp(collection, propertyName, propertyValue);",
                "+  }",
                "+",
                "+  // COLLECTIONPROP request",
                "+  public static class CollectionProp extends AsyncCollectionSpecificAdminRequest {",
                "+",
                "+    private String propertyName;",
                "+    private String propertyValue;",
                "+",
                "+    private CollectionProp(String collection, String propertyName, String propertyValue) {",
                "+      super(CollectionAction.COLLECTIONPROP, collection);",
                "+      this.propertyName = checkNotNull(\"propertyName\", propertyName);",
                "+      this.propertyValue = propertyValue;",
                "+    }",
                "+",
                "+    public String getPropertyName() {",
                "+      return this.propertyName;",
                "+    }",
                "+",
                "+    public String getPropertyValue() {",
                "+      return this.propertyValue;",
                "+    }",
                "+",
                "+    @Override",
                "+    public SolrParams getParams() {",
                "+      ModifiableSolrParams params = new ModifiableSolrParams(super.getParams());",
                "+      params.add(CollectionAdminParams.PROPERTY_NAME, propertyName);",
                "+      params.add(CollectionAdminParams.PROPERTY_VALUE, propertyValue);",
                "+",
                "+      return params;",
                "+    }",
                "+",
                "+    @Override",
                "+    protected CollectionAdminResponse createResponse(SolrClient client) {",
                "+      return new CollectionAdminResponse();",
                "+    }",
                "+  }",
                "+",
                "   /**",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "index 56fe93051fe..95e7008e92e 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "@@ -189,2 +189,9 @@ public class CollectionApiMapping {",
                "         null),",
                "+    SET_COLLECTION_PROPERTY(PER_COLLECTION,",
                "+        POST,",
                "+        COLLECTIONPROP,",
                "+        \"set-collection-property\",",
                "+        Utils.makeMap(NAME, \"collection\",",
                "+            \"propertyName\", \"name\",",
                "+            \"propertyValue\", \"value\")),",
                "     ADD_ROLE(CLUSTER_CMD,",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/CollectionProperties.java b/solr/solrj/src/java/org/apache/solr/common/cloud/CollectionProperties.java",
                "new file mode 100644",
                "index 00000000000..b5ea1298e53",
                "--- /dev/null",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/CollectionProperties.java",
                "@@ -0,0 +1,117 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.solr.common.cloud;",
                "+",
                "+import java.io.IOException;",
                "+import java.util.Collections;",
                "+import java.util.LinkedHashMap;",
                "+import java.util.Map;",
                "+",
                "+import org.apache.solr.common.util.Utils;",
                "+import org.apache.zookeeper.CreateMode;",
                "+import org.apache.zookeeper.KeeperException;",
                "+import org.apache.zookeeper.data.Stat;",
                "+",
                "+/**",
                "+ * Interact with solr collection properties",
                "+ *",
                "+ * Note that all methods on this class make calls to ZK on every invocation.  For",
                "+ * read-only eventually-consistent uses, clients should instead call",
                "+ * {@link ZkStateReader#getCollectionProperties(String)}",
                "+ */",
                "+public class CollectionProperties {",
                "+",
                "+  private final SolrZkClient client;",
                "+",
                "+  /**",
                "+   * Creates a CollectionProperties object using a provided SolrZkClient",
                "+   */",
                "+  public CollectionProperties(SolrZkClient client) {",
                "+    this.client = client;",
                "+  }",
                "+",
                "+  /**",
                "+   * Read the value of a collection property, returning a default if it is not set",
                "+   * @param key           the property name",
                "+   * @param defaultValue  the default value",
                "+   * @return the property value",
                "+   * @throws IOException if there is an error reading the value from zookeeper",
                "+   */",
                "+  public String getCollectionProperty(String collection, String key, String defaultValue) throws IOException {",
                "+    String value = getCollectionProperties(collection).get(key);",
                "+    if (value == null)",
                "+      return defaultValue;",
                "+    return value;",
                "+  }",
                "+",
                "+  /**",
                "+   * Return the collection properties",
                "+   * @throws IOException if there is an error reading properties from zookeeper",
                "+   */",
                "+  @SuppressWarnings(\"unchecked\")",
                "+  public Map<String, String> getCollectionProperties(String collection) throws IOException {",
                "+    try {",
                "+      return (Map<String, String>) Utils.fromJSON(client.getData(ZkStateReader.getCollectionPropsPath(collection), null, new Stat(), true));",
                "+    } catch (KeeperException.NoNodeException e) {",
                "+      return Collections.emptyMap();",
                "+    } catch (KeeperException | InterruptedException e) {",
                "+      throw new IOException(\"Error reading properties for collection \" + collection, SolrZkClient.checkInterrupted(e));",
                "+    }",
                "+  }",
                "+",
                "+  /**",
                "+   * This method sets a collection property.",
                "+   *",
                "+   * @param collection    The property name to be set.",
                "+   * @param propertyName  The property name to be set.",
                "+   * @param propertyValue The value of the property.",
                "+   * @throws IOException if there is an error writing data to zookeeper",
                "+   */",
                "+  @SuppressWarnings(\"unchecked\")",
                "+  public void setCollectionProperty(String collection, String propertyName, String propertyValue) throws IOException {",
                "+    String znodePath = ZkStateReader.getCollectionPropsPath(collection);",
                "+",
                "+    while (true) {",
                "+      Stat s = new Stat();",
                "+      try {",
                "+        if (client.exists(znodePath, true)) {",
                "+          Map<String, String> properties = (Map<String, String>) Utils.fromJSON(client.getData(znodePath, null, s, true));",
                "+          if (propertyValue == null) {",
                "+            if (properties.remove(propertyName) != null) { // Don't update ZK unless absolutely necessary.",
                "+              client.setData(znodePath, Utils.toJSON(properties), s.getVersion(), true);",
                "+            }",
                "+          } else {",
                "+            if (!propertyValue.equals(properties.put(propertyName, propertyValue))) { // Don't update ZK unless absolutely necessary.",
                "+              client.setData(znodePath, Utils.toJSON(properties), s.getVersion(), true);",
                "+            }",
                "+          }",
                "+        } else {",
                "+          Map<String, String> properties = new LinkedHashMap<>();",
                "+          properties.put(propertyName, propertyValue);",
                "+          client.create(znodePath, Utils.toJSON(properties), CreateMode.PERSISTENT, true);",
                "+        }",
                "+      } catch (KeeperException.BadVersionException | KeeperException.NodeExistsException e) {",
                "+        //race condition",
                "+        continue;",
                "+      } catch (InterruptedException | KeeperException e) {",
                "+        throw new IOException(\"Error setting property for collection \" + collection, SolrZkClient.checkInterrupted(e));",
                "+      }",
                "+      break;",
                "+    }",
                "+  }",
                "+}",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/CollectionPropsWatcher.java b/solr/solrj/src/java/org/apache/solr/common/cloud/CollectionPropsWatcher.java",
                "new file mode 100644",
                "index 00000000000..8c9ef48bfbb",
                "--- /dev/null",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/CollectionPropsWatcher.java",
                "@@ -0,0 +1,40 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.solr.common.cloud;",
                "+",
                "+import java.util.Map;",
                "+",
                "+/**",
                "+ * Callback registered with {@link ZkStateReader#registerCollectionPropsWatcher(String, CollectionPropsWatcher)}",
                "+ * and called whenever the collection properties change.",
                "+ */",
                "+public interface CollectionPropsWatcher {",
                "+",
                "+  /**",
                "+   * Called when the collection properties we are registered against has a change of state",
                "+   *",
                "+   * Note that, due to the way Zookeeper watchers are implemented, a single call may be",
                "+   * the result of several state changes",
                "+   *",
                "+   * @param collectionProperties the new collection properties",
                "+   *",
                "+   * @return true if the watcher should be removed",
                "+   */",
                "+  boolean onStateChanged(Map<String, String> collectionProperties);",
                "+",
                "+}",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "index 51872c5a6cb..cd2de97073c 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "@@ -102,2 +102,3 @@ public class ZkStateReader implements Closeable {",
                "   public static final String CLUSTER_PROPS = \"/clusterprops.json\";",
                "+  public static final String COLLECTION_PROPS_ZKNODE = \"collectionprops.json\";",
                "   public static final String REJOIN_AT_HEAD_PROP = \"rejoinAtHead\";",
                "@@ -152,2 +153,5 @@ public class ZkStateReader implements Closeable {",
                "+  /** Collection properties being actively watched */",
                "+  private final ConcurrentHashMap<String, Map<String, String>> watchedCollectionProps = new ConcurrentHashMap<>();",
                "+",
                "   private volatile SortedSet<String> liveNodes = emptySortedSet();",
                "@@ -162,3 +166,5 @@ public class ZkStateReader implements Closeable {",
                "-  private ConcurrentHashMap<String, CollectionWatch> collectionWatches = new ConcurrentHashMap<>();",
                "+  private ConcurrentHashMap<String, CollectionWatch<CollectionStateWatcher>> collectionWatches = new ConcurrentHashMap<>();",
                "+",
                "+  private ConcurrentHashMap<String, CollectionWatch<CollectionPropsWatcher>> collectionPropsWatches = new ConcurrentHashMap<>();",
                "@@ -199,6 +205,6 @@ public class ZkStateReader implements Closeable {",
                "-  private static class CollectionWatch {",
                "+  private static class CollectionWatch <T> {",
                "     int coreRefCount = 0;",
                "-    Set<CollectionStateWatcher> stateWatchers = ConcurrentHashMap.newKeySet();",
                "+    Set<T> stateWatchers = ConcurrentHashMap.newKeySet();",
                "@@ -937,2 +943,49 @@ public class ZkStateReader implements Closeable {",
                "+  /**",
                "+   * Get collection properties for a given collection. If the collection is watched, simply return it from the cache,",
                "+   * otherwise fetch it directly from zookeeper.",
                "+   */",
                "+  public Map<String, String> getCollectionProperties(final String collection) {",
                "+    Map<String, String> properties = watchedCollectionProps.get(collection);",
                "+    if (properties == null) {",
                "+      try {",
                "+        properties = fetchCollectionProperties(collection, null);",
                "+        // Not storing the value in watchedCollectionProps, because it can gat stale, since we have no watcher set.",
                "+      } catch (Exception e) {",
                "+        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error reading collection properties\", SolrZkClient.checkInterrupted(e));",
                "+      }",
                "+    }",
                "+",
                "+    return properties;",
                "+  }",
                "+",
                "+  static String getCollectionPropsPath(final String collection) {",
                "+    return COLLECTIONS_ZKNODE + '/' + collection + '/' + COLLECTION_PROPS_ZKNODE;",
                "+  }",
                "+",
                "+  @SuppressWarnings(\"unchecked\")",
                "+  private Map<String, String> fetchCollectionProperties(String collection, Watcher watcher) throws KeeperException, InterruptedException {",
                "+    final String znodePath = getCollectionPropsPath(collection);",
                "+    while (true) {",
                "+      try {",
                "+        Stat stat = new Stat();",
                "+        byte[] data = zkClient.getData(znodePath, watcher, stat, true);",
                "+        return (Map<String, String>) Utils.fromJSON(data);",
                "+      } catch (ClassCastException e) {",
                "+        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to parse collection properties for collection \" + collection, e);",
                "+      } catch (KeeperException.NoNodeException e) {",
                "+        if (watcher != null) {",
                "+          // Leave an exists watch in place in case a collectionprops.json is created later.",
                "+          Stat exists = zkClient.exists(znodePath, watcher, true);",
                "+          if (exists != null) {",
                "+            // Rare race condition, we tried to fetch the data and couldn't find it, then we found it exists.",
                "+            // Loop and try again.",
                "+            continue;",
                "+          }",
                "+        }",
                "+        return Collections.emptyMap();",
                "+      }",
                "+    }",
                "+  }",
                "+",
                "   /**",
                "@@ -1061,2 +1114,52 @@ public class ZkStateReader implements Closeable {",
                "+  /** Watches collection properties */",
                "+  class PropsWatcher implements Watcher {",
                "+    private final String coll;",
                "+",
                "+    PropsWatcher(String coll) {",
                "+      this.coll = coll;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void process(WatchedEvent event) {",
                "+      // session events are not change events, and do not remove the watcher",
                "+      if (EventType.None.equals(event.getType())) {",
                "+        return;",
                "+      }",
                "+",
                "+      if (!collectionPropsWatches.containsKey(coll)) {",
                "+        // No one can be notified of the change, we can ignore it and \"unset\" the watch",
                "+        LOG.debug(\"Ignoring property change for collection {}\", coll);",
                "+        return;",
                "+      }",
                "+",
                "+      LOG.info(\"A collection property change: [{}] for collection [{}] has occurred - updating...\",",
                "+          event, coll);",
                "+",
                "+      refreshAndWatch(true);",
                "+    }",
                "+",
                "+    /**",
                "+     * Refresh collection properties from ZK and leave a watch for future changes. Updates the properties in",
                "+     * watchedCollectionProps with the results of the refresh. Optionally notifies watchers",
                "+     */",
                "+    void refreshAndWatch(boolean notifyWatchers) {",
                "+      try {",
                "+        Map<String, String> properties = fetchCollectionProperties(coll, this);",
                "+        watchedCollectionProps.put(coll, properties);",
                "+        if (notifyWatchers) {",
                "+          notifyPropsWatchers(coll, properties);",
                "+        }",
                "+      } catch (KeeperException.SessionExpiredException | KeeperException.ConnectionLossException e) {",
                "+        LOG.warn(\"ZooKeeper watch triggered, but Solr cannot talk to ZK: [{}]\", e.getMessage());",
                "+      } catch (KeeperException e) {",
                "+        LOG.error(\"Lost collection property watcher for {} due to ZK error\", coll, e);",
                "+        throw new ZooKeeperException(ErrorCode.SERVER_ERROR, \"A ZK error has occurred\", e);",
                "+      } catch (InterruptedException e) {",
                "+        Thread.currentThread().interrupt();",
                "+        LOG.error(\"Lost collection property watcher for {} due to the thread being interrupted\", coll, e);",
                "+      }",
                "+    }",
                "+  }",
                "+",
                "   /** Watches /collections children . */",
                "@@ -1158,3 +1261,3 @@ public class ZkStateReader implements Closeable {",
                "   }",
                "-  ",
                "+",
                "   public static String getCollectionPathRoot(String coll) {",
                "@@ -1185,3 +1288,3 @@ public class ZkStateReader implements Closeable {",
                "         reconstructState.set(true);",
                "-        v = new CollectionWatch();",
                "+        v = new CollectionWatch<>();",
                "       }",
                "@@ -1193,2 +1296,16 @@ public class ZkStateReader implements Closeable {",
                "     }",
                "+",
                "+    AtomicBoolean addPropsWatch = new AtomicBoolean(false);",
                "+    collectionPropsWatches.compute(collection, (k, v) -> {",
                "+      if (v == null) {",
                "+        addPropsWatch.set(true);",
                "+        v = new CollectionWatch<>();",
                "+      }",
                "+      v.coreRefCount++;",
                "+      return v;",
                "+    });",
                "+",
                "+    if (addPropsWatch.get()) {",
                "+      new PropsWatcher(collection).refreshAndWatch(false);",
                "+    }",
                "   }",
                "@@ -1225,2 +1342,14 @@ public class ZkStateReader implements Closeable {",
                "     }",
                "+",
                "+    collectionPropsWatches.compute(collection, (k, v) -> {",
                "+      if (v == null)",
                "+        return null;",
                "+      if (v.coreRefCount > 0)",
                "+        v.coreRefCount--;",
                "+      if (v.canBeRemoved()) {",
                "+        watchedCollectionProps.remove(collection);",
                "+        return null;",
                "+      }",
                "+      return v;",
                "+    });",
                "   }",
                "@@ -1234,3 +1363,3 @@ public class ZkStateReader implements Closeable {",
                "       if (v == null) {",
                "-        v = new CollectionWatch();",
                "+        v = new CollectionWatch<>();",
                "         watchSet.set(true);",
                "@@ -1376,2 +1505,31 @@ public class ZkStateReader implements Closeable {",
                "+  public void registerCollectionPropsWatcher(final String collection, CollectionPropsWatcher propsWatcher) {",
                "+    AtomicBoolean watchSet = new AtomicBoolean(false);",
                "+    collectionPropsWatches.compute(collection, (k, v) -> {",
                "+      if (v == null) {",
                "+        v = new CollectionWatch<>();",
                "+        watchSet.set(true);",
                "+      }",
                "+      v.stateWatchers.add(propsWatcher);",
                "+      return v;",
                "+    });",
                "+",
                "+    if (watchSet.get()) {",
                "+      new PropsWatcher(collection).refreshAndWatch(false);",
                "+    }",
                "+  }",
                "+",
                "+  public void removeCollectionPropsWatcher(String collection, CollectionPropsWatcher watcher) {",
                "+    collectionPropsWatches.compute(collection, (k, v) -> {",
                "+      if (v == null)",
                "+        return null;",
                "+      v.stateWatchers.remove(watcher);",
                "+      if (v.canBeRemoved()) {",
                "+        watchedCollectionProps.remove(collection);",
                "+        return null;",
                "+      }",
                "+      return v;",
                "+    });",
                "+  }",
                "+",
                "   public static class ConfigData {",
                "@@ -1585,2 +1743,41 @@ public class ZkStateReader implements Closeable {",
                "+  private void notifyPropsWatchers(String collection, Map<String, String> properties) {",
                "+    try {",
                "+      notifications.submit(new PropsNotification(collection, properties));",
                "+    }",
                "+    catch (RejectedExecutionException e) {",
                "+      if (!closed) {",
                "+        LOG.error(\"Couldn't run collection properties notifications for {}\", collection, e);",
                "+      }",
                "+    }",
                "+  }",
                "+",
                "+  private class PropsNotification implements Runnable {",
                "+",
                "+    final String collection;",
                "+    final Map<String, String> collectionProperties;",
                "+",
                "+    private PropsNotification(String collection, Map<String, String> collectionProperties) {",
                "+      this.collection = collection;",
                "+      this.collectionProperties = collectionProperties;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void run() {",
                "+      List<CollectionPropsWatcher> watchers = new ArrayList<>();",
                "+      collectionPropsWatches.compute(collection, (k, v) -> {",
                "+        if (v == null)",
                "+          return null;",
                "+        watchers.addAll(v.stateWatchers);",
                "+        return v;",
                "+      });",
                "+      for (CollectionPropsWatcher watcher : watchers) {",
                "+        if (watcher.onStateChanged(collectionProperties)) {",
                "+          removeCollectionPropsWatcher(collection, watcher);",
                "+        }",
                "+      }",
                "+    }",
                "+",
                "+  }",
                "+",
                " }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/params/CollectionAdminParams.java b/solr/solrj/src/java/org/apache/solr/common/params/CollectionAdminParams.java",
                "index 04acd9f200c..cdd9458592f 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/params/CollectionAdminParams.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/params/CollectionAdminParams.java",
                "@@ -66,2 +66,12 @@ public interface CollectionAdminParams {",
                "       Arrays.asList(COPY_FILES_STRATEGY, NO_INDEX_BACKUP_STRATEGY);",
                "+",
                "+  /**",
                "+   * Name of collection property to set",
                "+   */",
                "+  public static final String PROPERTY_NAME = \"propertyName\";",
                "+",
                "+  /**",
                "+   * Value of collection property to set",
                "+   */",
                "+  public static final String PROPERTY_VALUE = \"propertyValue\";",
                " }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "index d404d60f3c6..cbf14cc0e4b 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "@@ -93,2 +93,3 @@ public interface CollectionParams {",
                "     CLUSTERPROP(true, LockLevel.NONE),",
                "+    COLLECTIONPROP(true, LockLevel.COLLECTION),",
                "     REQUESTSTATUS(false, LockLevel.NONE),",
                "diff --git a/solr/solrj/src/resources/apispec/collections.collection.Commands.json b/solr/solrj/src/resources/apispec/collections.collection.Commands.json",
                "index 0cd3644b48d..b4e87b01259 100644",
                "--- a/solr/solrj/src/resources/apispec/collections.collection.Commands.json",
                "+++ b/solr/solrj/src/resources/apispec/collections.collection.Commands.json",
                "@@ -86,3 +86,3 @@",
                "       \"documentation\": \"https://lucene.apache.org/solr/guide/collections-api.html#balanceshardunique\",",
                "-      \"description\": \"Insures a property is distributed equally across all physical nodes of a collection. If the property already exists on a replica, effort is made to leave it there. However, if it does not exist on any repica, a shard will be chosen and the property added.\",",
                "+      \"description\": \"Ensures a property is distributed equally across all physical nodes of a collection. If the property already exists on a replica, effort is made to leave it there. However, if it does not exist on any repica, a shard will be chosen and the property added.\",",
                "       \"properties\":{",
                "@@ -173,2 +173,20 @@",
                "       \"required\":[\"shard\",\"replica\",\"property\"]",
                "+    },",
                "+    \"set-collection-property\": {",
                "+      \"documentation\": \"https://lucene.apache.org/solr/guide/collections-api.html#collectionprop\",",
                "+      \"description\": \"Sets a property for the collection\",",
                "+      \"type\": \"object\",",
                "+      \"properties\": {",
                "+        \"name\": {",
                "+          \"type\": \"string\",",
                "+          \"description\": \"The name of the property\"",
                "+        },",
                "+        \"value\": {",
                "+          \"type\": \"string\",",
                "+          \"description\": \"The value of the property. When not provided, the property is deleted\"",
                "+        }",
                "+      },",
                "+      \"required\": [",
                "+        \"name\"",
                "+      ]",
                "     }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/api/collections/BackupCmd.java",
                "solr/core/src/java/org/apache/solr/cloud/api/collections/RestoreCmd.java",
                "solr/core/src/java/org/apache/solr/core/backup/BackupManager.java",
                "solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "solr/solr-ref-guide/src/collections-api.adoc",
                "solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "solr/solrj/src/java/org/apache/solr/common/cloud/CollectionProperties.java",
                "solr/solrj/src/java/org/apache/solr/common/cloud/CollectionPropsWatcher.java",
                "solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "solr/solrj/src/java/org/apache/solr/common/params/CollectionAdminParams.java",
                "solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "solr/solrj/src/resources/apispec/collections.collection.Commands.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11960": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "cfafc47e9c9229fe94b0d367249db66ec6b54132"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11960",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d3ef153b09461aa0bd2f735954905321d6b72aed",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519589907,
            "hunks": 2,
            "message": "SOLR-12027: Increasing thread lingering to 80s Sometimes Jetty can't stop for a minute. We need tests wait more than a minute in the worst case to avoid test noise like ThreadLeakError: 1 thread leaked from SUITE scope.",
            "diff": [
                "diff --git a/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java b/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java",
                "index 706f1ebe8b6..bef95195624 100644",
                "--- a/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java",
                "+++ b/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java",
                "@@ -66,2 +66,3 @@ import com.carrotsearch.randomizedtesting.TraceFormatting;",
                " import com.carrotsearch.randomizedtesting.annotations.ThreadLeakFilters;",
                "+import com.carrotsearch.randomizedtesting.annotations.ThreadLeakLingering;",
                " import com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule;",
                "@@ -161,2 +162,3 @@ import static org.apache.solr.update.processor.DistributingUpdateProcessorFactor",
                " @RandomizeSSL()",
                "+@ThreadLeakLingering(linger = 80000)",
                " public abstract class SolrTestCaseJ4 extends LuceneTestCase {"
            ],
            "changed_files": [
                "solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12027": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "aa9b7d834e42b6a9dddb4eadec5df8e97b129e83"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12027",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fe9030c48f993fd4bbbe7e1e826bfce78748aa33",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520324055,
            "hunks": 13,
            "message": "SOLR-11795: use README.txt rather than .md and add description for default values",
            "diff": [
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "index 752f1765c2f..01ebd748828 100644",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "@@ -58,3 +58,3 @@ public class SolrExporter {",
                "   private static final Integer ARG_PORT_DEFAULT = 9983;",
                "-  private static final String ARG_PORT_HELP = \"solr-exporter listen port\";",
                "+  private static final String ARG_PORT_HELP = \"Specify the solr-exporter HTTP listen port; default is \" + String.valueOf(ARG_PORT_DEFAULT) + \".\";",
                "@@ -64,3 +64,3 @@ public class SolrExporter {",
                "   private static final String ARG_BASE_URL_DEFAULT = \"\";",
                "-  private static final String ARG_BASE_URL_HELP = \"specify Solr base URL when connecting to Solr in standalone mode (for example 'http://localhost:8983/solr')\";",
                "+  private static final String ARG_BASE_URL_HELP = \"Specify the Solr base URL when connecting to Solr in standalone mode. If omitted both the -b parameter and the -z parameter, connect to http://localhost:8983/solr. For example 'http://localhost:8983/solr'.\";",
                "@@ -70,3 +70,3 @@ public class SolrExporter {",
                "   private static final String ARG_ZK_HOST_DEFAULT = \"\";",
                "-  private static final String ARG_ZK_HOST_HELP = \"specify ZooKeeper connection string when connecting to Solr in SolrCloud mode (for example 'localhost:2181/solr')\";",
                "+  private static final String ARG_ZK_HOST_HELP = \"Specify the ZooKeeper connection string when connecting to Solr in SolrCloud mode. If omitted both the -b parameter and the -z parameter, connect to http://localhost:8983/solr. For example 'localhost:2181/solr'.\";",
                "@@ -76,5 +76,5 @@ public class SolrExporter {",
                "   private static final String ARG_CONFIG_DEFAULT = \"./conf/solr-exporter-config.xml\";",
                "-  private static final String ARG_CONFIG_HELP = \"specify configuration file\";",
                "+  private static final String ARG_CONFIG_HELP = \"Specify the configuration file; default is \" + ARG_CONFIG_DEFAULT + \".\";",
                "-  private static final String[] ARG_NUM_THREADS_FLAGS = { \"-n\", \"--num-thread\" };",
                "+  private static final String[] ARG_NUM_THREADS_FLAGS = { \"-n\", \"--num-threads\" };",
                "   private static final String ARG_NUM_THREADS_METAVAR = \"NUM_THREADS\";",
                "@@ -82,3 +82,3 @@ public class SolrExporter {",
                "   private static final Integer ARG_NUM_THREADS_DEFAULT = 1;",
                "-  private static final String ARG_NUM_THREADS_HELP = \"specify number of threads\";",
                "+  private static final String ARG_NUM_THREADS_HELP = \"Specify the number of threads. solr-exporter creates a thread pools for request to Solr. If you need to improve request latency via solr-exporter, you can increase the number of threads; default is \" + String.valueOf(ARG_NUM_THREADS_DEFAULT) + \".\";",
                "@@ -137,3 +137,2 @@ public class SolrExporter {",
                "     this.registry.unregister(this.collector);",
                "-//    this.collector.shutdown();",
                "   }",
                "diff --git a/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc b/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "index 0d5295b9cc5..5348cfbba66 100644",
                "--- a/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "+++ b/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "@@ -27,2 +27,3 @@ This feature is experimental status.",
                "+",
                " == Running solr-exporter",
                "@@ -58,22 +59,24 @@ See command help:",
                " $ ./bin/solr-exporter -h",
                "-usage: SolrCollector [-h] [-v] [-p PORT] [-b BASE_URL] [-z ZK_HOST] [-f CONFIG]",
                "-                     [-n NUM_THREADS]",
                "-",
                "-Prometheus exporter for Apache Solr.",
                "-",
                "-optional arguments:",
                "-  -h, --help             show this help message and exit",
                "-  -p PORT, --port PORT   solr-exporter listen port",
                "-  -b BASE_URL, --baseurl BASE_URL",
                "-                         specify Solr base URL when connecting  to Solr in standalone mode (for",
                "-                         example 'http://localhost:8983/solr')",
                "-  -z ZK_HOST, --zkhost ZK_HOST",
                "-                         specify  ZooKeeper  connection  string  when  connecting  to  Solr  in",
                "-                         SolrCloud mode (for example 'localhost:2181/solr')",
                "-  -f CONFIG, --config-file CONFIG",
                "-                         specify configuration file",
                "-  -n NUM_THREADS, --num-thread NUM_THREADS",
                "-                         specify number of threads",
                " ----",
                "+=== Command Line Parameters",
                "+",
                "+`-p`, `--port`::",
                "+Specify the solr-exporter HTTP listen port; default is `9983`.",
                "+",
                "+`-b`, `--baseurl`::",
                "+Specify the Solr base URL when connecting to Solr in standalone mode. If omitted both the `-b` parameter and the `-z` parameter, connect to `http://localhost:8983/solr`. For example `http://localhost:8983/solr`.",
                "+",
                "+`-z`, `--zkhost`::",
                "+Specify the ZooKeeper connection string when connecting to Solr in SolrCloud mode. If omitted both the `-b` parameter and the `-z` parameter, connect to `http://localhost:8983/solr`. For example `localhost:2181/solr`.",
                "+",
                "+`-f`, `--config-file`::",
                "+Specify the configuration file; default is `./conf/solr-exporter-config.xml`.",
                "+",
                "+`-n`, `--num-threads`::",
                "+Specify the number of threads. solr-exporter creates a thread pools for request to Solr. If you need to improve request latency via solr-exporter, you can increase the number of threads; default is `1`.",
                "+",
                "+",
                "+== Metrics Exposition URL",
                "+",
                " The Solr's metrics exposed by solr-exporter can see at the following URL.",
                "@@ -219,12 +222,21 @@ The configuration is in `./config/solr-exporter-config.xml`. An example with all",
                "-|===",
                "-|Name|Description",
                "+===  solr-exporter Configuration Tags and Elements",
                "+",
                "+`/config/rules/ping`::",
                "+Scrape <<ping.adoc#ping,Ping>> response.",
                "+",
                "+`/config/rules/metrics`::",
                "+Scrape <<metrics-reporting.adoc#metrics-api,Metrics API>> response.",
                "+",
                "+`/config/rules/collections`::",
                "+Scrape <<collections-api.adoc#collections-api,Collections API>> response.",
                "+",
                "+`/config/rules/search`::",
                "+Scrape <<searching.adoc#searching,Search API>> response.",
                "+",
                "+`*[@query]`::",
                "+Query parameter for each features. You can specify `collection`, `core`, `path`, and `params`.",
                "-|ping|Scrape <<ping.adoc#ping,Ping>> response.",
                "-|metrics|Scrape <<metrics-reporting.adoc#metrics-api,Metrics API>> response.",
                "-|collections|Scrape <<collections-api.adoc#collections-api,Collections API>> response.",
                "-|search|Scrape <<searching.adoc#searching,Search API>> response.",
                "-|*.query|Query parameter for each features. You can specify `collection`, `core`, `path`, and `params`.",
                "-|*.jsonQueries|JSON Query that is jq syntax. For more details, see https://stedolan.github.io/jq/manual/[https://stedolan.github.io/jq/manual/].",
                "-|===",
                "+`*[@jsonQueries]`::",
                "+JSON Query that is jq syntax. For more details, see https://stedolan.github.io/jq/manual/[https://stedolan.github.io/jq/manual/].",
                "@@ -235,8 +247,8 @@ jq query has to output JSON in the following format.",
                " {",
                "-  name         : \"solr_ping\",",
                "-  type         : \"GAUGE\",",
                "-  help         : \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "-  label_names  : [\"base_url\",\"core\"],",
                "-  label_values : [\"http://localhost:8983/solr\",\"collection1\"],",
                "-  value        : 1.0",
                "+  \"name\"         : \"solr_ping\",",
                "+  \"type\"         : \"GAUGE\",",
                "+  \"help\"         : \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "+  \"label_names\"  : [\"base_url\",\"core\"],",
                "+  \"label_values\" : [\"http://localhost:8983/solr\",\"collection1\"],",
                "+  \"value\"        : 1.0",
                " }",
                "@@ -244,3 +256,32 @@ jq query has to output JSON in the following format.",
                "-It will be converted to the following exposition format.",
                "+===  solr-exporter Exposition Format",
                "+",
                "+solr-exporter converts the JSON to the following exposition format:",
                "+",
                "+[source,plain]",
                "+----",
                "+# TYPE <name> <type>",
                "+# HELP <name> <help>",
                "+<name>{<label_names[0]>=<label_values[0]>,<label_names[1]>=<labelvalues[1]>,...} <value>",
                "+----",
                "+",
                "+`name`::",
                "+The metric name to set. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "+",
                "+`type`::",
                "+The type of the metric, can be `COUNTER`, `GAUGE`, `SUMMARY`, `HISTOGRAM` or `UNTYPED`. For more detauils, see https://prometheus.io/docs/concepts/metric_types/[https://prometheus.io/docs/concepts/metric_types/].",
                "+",
                "+`help`::",
                "+Help text for the metric.",
                "+",
                "+`label_names`::",
                "+Label names for the metric. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "+",
                "+`label_values`::",
                "+Label values for the metric. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "+",
                "+`value`::",
                "+Value for the metric. Value must be set to Double type.",
                "+",
                "+For example, solr-exporter converts the above JSON to the following:",
                "@@ -253,13 +294,2 @@ solr_ping{base_url=\"http://localhost:8983/solr\",core=\"collection1\"} 1.0",
                "-|===",
                "-|Name|Description",
                "-",
                "-|name|The metric name to set. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "-|type|The type of the metric, can be `COUNTER`, `GAUGE`, `SUMMARY`, `HISTOGRAM` or `UNTYPED`. For more detauils, see https://prometheus.io/docs/concepts/metric_types/[https://prometheus.io/docs/concepts/metric_types/].",
                "-|help|Help text for the metric.",
                "-|label_names|Label names for the metric. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "-|label_values|Label values for the metric. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "-|value|Value for the metric. Value must be set to Double type.",
                "-|===",
                "-"
            ],
            "changed_files": [
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11795": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "122271f28deb739e3d7fe84c86c6a359d367abd8"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9e0e301f9fe4a1b5e33925ae4d2848ead71cca25",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519407802,
            "hunks": 7,
            "message": "SOLR-12021: Fixed a bug in ApiSpec and other JSON resource loading that was causing unclosed file handles",
            "diff": [
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/util/Utils.java b/solr/solrj/src/java/org/apache/solr/common/util/Utils.java",
                "index 4ab24d2be3e..d35486e6c76 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/util/Utils.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/util/Utils.java",
                "@@ -25,2 +25,3 @@ import java.io.UnsupportedEncodingException;",
                " import java.lang.invoke.MethodHandles;",
                "+import java.net.URL;",
                " import java.net.URLDecoder;",
                "@@ -202,5 +203,13 @@ public class Utils {",
                "-  public static Object fromJSONResource(String resourceName){",
                "-   return fromJSON(Utils.class.getClassLoader().getResourceAsStream(resourceName));",
                "-",
                "+  public static Object fromJSONResource(String resourceName) {",
                "+    final URL resource = Utils.class.getClassLoader().getResource(resourceName);",
                "+    if (null == resource) {",
                "+      throw new IllegalArgumentException(\"invalid resource name: \" + resourceName);",
                "+    }",
                "+    try (InputStream stream = resource.openStream()) {",
                "+      return fromJSON(stream);",
                "+    } catch (IOException e) {",
                "+      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,",
                "+                              \"Resource error: \" + e.getMessage(), e);",
                "+    }",
                "   }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap.java b/solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap.java",
                "index 4edef90b43d..28c001935df 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap.java",
                "@@ -23,2 +23,3 @@ import java.io.InputStreamReader;",
                " import java.io.Reader;",
                "+import java.net.URL;",
                " import java.util.ArrayList;",
                "@@ -315,13 +316,18 @@ public class ValidatingJsonMap implements Map<String, Object> {",
                "   public static ValidatingJsonMap parse(String resourceName, String includeLocation) {",
                "-    InputStream is = ValidatingJsonMap.class.getClassLoader().getResourceAsStream(resourceName);",
                "-    if (is == null)",
                "+    final URL resource = ValidatingJsonMap.class.getClassLoader().getResource(resourceName);",
                "+    if (null == resource) {",
                "       throw new RuntimeException(\"invalid API spec: \" + resourceName);",
                "+    }",
                "     ValidatingJsonMap map = null;",
                "-    try {",
                "-      map = fromJSON(is, includeLocation);",
                "-    } catch (Exception e) {",
                "-      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);",
                "+    try (InputStream is = resource.openStream()) {",
                "+      try {",
                "+        map = fromJSON(is, includeLocation);",
                "+      } catch (Exception e) {",
                "+        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Error in JSON : \" + resourceName, e);",
                "+      }",
                "+    } catch (IOException ioe) {",
                "+      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,",
                "+                              \"Unable to read resource: \" + resourceName, ioe);",
                "     }",
                "     if (map == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Empty value for \" + resourceName);",
                "-",
                "     return getDeepCopy(map, 5, false);"
            ],
            "changed_files": [
                "solr/solrj/src/java/org/apache/solr/common/util/Utils.java",
                "solr/solrj/src/java/org/apache/solr/common/util/ValidatingJsonMap.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12021": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "378c743bd286478236bd5ba18d2fc3535afc3b08"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12021",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cc1efdb4a345de6e57b4da5d4210c1fe54531022",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519134053,
            "hunks": 25,
            "message": "Revert \"LUCENE-8122: Upgrade analysis/icu to ICU 60.2\" This reverts commit 07407a5b53bf4d790c316ecf3b71046242f1e2da.",
            "diff": [
                "diff --git a/lucene/analysis/icu/src/data/uax29/Default.rbbi b/lucene/analysis/icu/src/data/uax29/Default.rbbi",
                "index afda68f47b5..6c6d1f9ef23 100644",
                "--- a/lucene/analysis/icu/src/data/uax29/Default.rbbi",
                "+++ b/lucene/analysis/icu/src/data/uax29/Default.rbbi",
                "@@ -16,8 +16,5 @@",
                " #",
                "-# This file is from ICU (with some small modifications, to avoid CJK dictionary break,",
                "-# and status code change related to that)",
                "+# This file is from ICU (with some small modifications, to avoid CJK dictionary break)",
                " #",
                "-# Copyright (C) 2016 and later: Unicode, Inc. and others.",
                "-# License & terms of use: http://www.unicode.org/copyright.html",
                "-# Copyright (C) 2002-2016, International Business Machines Corporation",
                "+# Copyright (C) 2002-2013, International Business Machines Corporation ",
                " # and others. All Rights Reserved.",
                "@@ -28,5 +25,3 @@",
                " #      See Unicode Standard Annex #29.",
                "-#      These rules are based on UAX #29 Revision 29 for Unicode Version 9.0",
                "-#      with additions for Emoji Sequences from https://goo.gl/cluFCn",
                "-#      Plus additional characters introduces with Emoji 5, http://www.unicode.org/reports/tr51/proposed.html",
                "+#      These rules are based on UAX #29 Revision 22 for Unicode Version 6.3",
                " #",
                "@@ -42,3 +37,2 @@",
                " !!chain;",
                "-!!quoted_literals_only;",
                "@@ -51,5 +45,4 @@ $CR                 = [\\p{Word_Break = CR}];",
                " $LF                 = [\\p{Word_Break = LF}];",
                "-$Newline            = [\\p{Word_Break = Newline} ];",
                "+$Newline            = [\\p{Word_Break = Newline}];",
                " $Extend             = [\\p{Word_Break = Extend}];",
                "-$ZWJ                = [\\p{Word_Break = ZWJ}];",
                " $Regional_Indicator = [\\p{Word_Break = Regional_Indicator}];",
                "@@ -66,9 +59,2 @@ $Numeric            = [\\p{Word_Break = Numeric}[[:Decomposition_Type=Wide:]&[:Ge",
                " $ExtendNumLet       = [\\p{Word_Break = ExtendNumLet}];",
                "-$E_Base             = [\\p{Word_Break = EB}];",
                "-$E_Modifier         = [\\p{Word_Break = EM}];",
                "-",
                "-# Data for Extended Pictographic scraped from CLDR common/properties/ExtendedPictographic.txt, r13267",
                "-$Extended_Pict = [\\U0001F774-\\U0001F77F\\U00002700-\\U00002701\\U00002703-\\U00002704\\U0000270E\\U00002710-\\U00002711\\U00002765-\\U00002767\\U0001F030-\\U0001F093\\U0001F094-\\U0001F09F\\U0001F10D-\\U0001F10F\\U0001F12F\\U0001F16C-\\U0001F16F\\U0001F1AD-\\U0001F1E5\\U0001F260-\\U0001F265\\U0001F203-\\U0001F20F\\U0001F23C-\\U0001F23F\\U0001F249-\\U0001F24F\\U0001F252-\\U0001F25F\\U0001F266-\\U0001F2FF\\U0001F7D5-\\U0001F7FF\\U0001F000-\\U0001F003\\U0001F005-\\U0001F02B\\U0001F02C-\\U0001F02F\\U0001F322-\\U0001F323\\U0001F394-\\U0001F395\\U0001F398\\U0001F39C-\\U0001F39D\\U0001F3F1-\\U0001F3F2\\U0001F3F6\\U0001F4FE\\U0001F53E-\\U0001F548\\U0001F54F\\U0001F568-\\U0001F56E\\U0001F571-\\U0001F572\\U0001F57B-\\U0001F586\\U0001F588-\\U0001F589\\U0001F58E-\\U0001F58F\\U0001F591-\\U0001F594\\U0001F597-\\U0001F5A3\\U0001F5A6-\\U0001F5A7\\U0001F5A9-\\U0001F5B0\\U0001F5B3-\\U0001F5BB\\U0001F5BD-\\U0001F5C1\\U0001F5C5-\\U0001F5D0\\U0001F5D4-\\U0001F5DB\\U0001F5DF-\\U0001F5E0\\U0001F5E2\\U0001F5E4-\\U0001F5E7\\U0001F5E9-\\U0001F5EE\\U0001F5F0-\\U0001F5F2\\U0001F5F4-\\U0001F5F9\\U00002605\\U00002607-\\U0000260D\\U0000260F-\\U00002610\\U00002612\\U00002616-\\U00002617\\U00002619-\\U0000261C\\U0000261E-\\U0000261F\\U00002621\\U00002624-\\U00002625\\U00002627-\\U00002629\\U0000262B-\\U0000262D\\U00002630-\\U00002637\\U0000263B-\\U00002647\\U00002654-\\U0000265F\\U00002661-\\U00002662\\U00002664\\U00002667\\U00002669-\\U0000267A\\U0000267C-\\U0000267E\\U00002680-\\U00002691\\U00002695\\U00002698\\U0000269A\\U0000269D-\\U0000269F\\U000026A2-\\U000026A9\\U000026AC-\\U000026AF\\U000026B2-\\U000026BC\\U000026BF-\\U000026C3\\U000026C6-\\U000026C7\\U000026C9-\\U000026CD\\U000026D0\\U000026D2\\U000026D5-\\U000026E8\\U000026EB-\\U000026EF\\U000026F6\\U000026FB-\\U000026FC\\U000026FE-\\U000026FF\\U00002388\\U0001FA00-\\U0001FFFD\\U0001F0A0-\\U0001F0AE\\U0001F0B1-\\U0001F0BF\\U0001F0C1-\\U0001F0CF\\U0001F0D1-\\U0001F0F5\\U0001F0AF-\\U0001F0B0\\U0001F0C0\\U0001F0D0\\U0001F0F6-\\U0001F0FF\\U0001F80C-\\U0001F80F\\U0001F848-\\U0001F84F\\U0001F85A-\\U0001F85F\\U0001F888-\\U0001F88F\\U0001F8AE-\\U0001F8FF\\U0001F900-\\U0001F90B\\U0001F91F\\U0001F928-\\U0001F92F\\U0001F931-\\U0001F932\\U0001F94C\\U0001F95F-\\U0001F96B\\U0001F992-\\U0001F997\\U0001F9D0-\\U0001F9E6\\U0001F90C-\\U0001F90F\\U0001F93F\\U0001F94D-\\U0001F94F\\U0001F96C-\\U0001F97F\\U0001F998-\\U0001F9BF\\U0001F9C1-\\U0001F9CF\\U0001F9E7-\\U0001F9FF\\U0001F6C6-\\U0001F6CA\\U0001F6D3-\\U0001F6D4\\U0001F6E6-\\U0001F6E8\\U0001F6EA\\U0001F6F1-\\U0001F6F2\\U0001F6F7-\\U0001F6F8\\U0001F6D5-\\U0001F6DF\\U0001F6ED-\\U0001F6EF\\U0001F6F9-\\U0001F6FF];",
                "-$EBG                = [\\p{Word_Break = EBG}];",
                "-$EmojiNRK           = [[\\p{Emoji}] - [\\p{Word_Break = Regional_Indicator}\\u002a\\u00230-9\u00c2\u00a9\u00c2\u00ae\u00e2\u0084\u00a2\u00e3\u0080\u00b0\u00e3\u0080\u00bd]];",
                "@@ -99,17 +85,17 @@ $ALetterPlus  = [$ALetter-$dictionaryCJK [$ComplexContext-$Extend-$Control]];",
                " # TODO: check if handling of katakana in dictionary makes rules incorrect/void",
                "-$KatakanaEx           = $Katakana           ($Extend |  $Format | $ZWJ)*;",
                "-$Hebrew_LetterEx      = $Hebrew_Letter      ($Extend |  $Format | $ZWJ)*;",
                "-$ALetterEx            = $ALetterPlus        ($Extend |  $Format | $ZWJ)*;",
                "-$Single_QuoteEx       = $Single_Quote       ($Extend |  $Format | $ZWJ)*;",
                "-$Double_QuoteEx       = $Double_Quote       ($Extend |  $Format | $ZWJ)*;",
                "-$MidNumLetEx          = $MidNumLet          ($Extend |  $Format | $ZWJ)*;",
                "-$MidLetterEx          = $MidLetter          ($Extend |  $Format | $ZWJ)*;",
                "-$MidNumEx             = $MidNum             ($Extend |  $Format | $ZWJ)*;",
                "-$NumericEx            = $Numeric            ($Extend |  $Format | $ZWJ)*;",
                "-$ExtendNumLetEx       = $ExtendNumLet       ($Extend |  $Format | $ZWJ)*;",
                "-$Regional_IndicatorEx = $Regional_Indicator ($Extend |  $Format | $ZWJ)*;",
                "+$KatakanaEx           = $Katakana           ($Extend |  $Format)*;",
                "+$Hebrew_LetterEx      = $Hebrew_Letter      ($Extend |  $Format)*;",
                "+$ALetterEx            = $ALetterPlus        ($Extend |  $Format)*;",
                "+$Single_QuoteEx       = $Single_Quote       ($Extend |  $Format)*;",
                "+$Double_QuoteEx       = $Double_Quote       ($Extend |  $Format)*;",
                "+$MidNumLetEx          = $MidNumLet          ($Extend |  $Format)*;",
                "+$MidLetterEx          = $MidLetter          ($Extend |  $Format)*;",
                "+$MidNumEx             = $MidNum             ($Extend |  $Format)*;",
                "+$NumericEx            = $Numeric            ($Extend |  $Format)*;",
                "+$ExtendNumLetEx       = $ExtendNumLet       ($Extend |  $Format)*;",
                "+$Regional_IndicatorEx = $Regional_Indicator ($Extend |  $Format)*;",
                " $Ideographic    = [\\p{Ideographic}];",
                "-$HiraganaEx     = $Hiragana     ($Extend |  $Format | $ZWJ)*;",
                "-$IdeographicEx  = $Ideographic  ($Extend |  $Format | $ZWJ)*;",
                "+$HiraganaEx     = $Hiragana     ($Extend |  $Format)*;",
                "+$IdeographicEx  = $Ideographic  ($Extend |  $Format)*;",
                "@@ -124,7 +110,2 @@ $CR $LF;",
                "-# Rule 3c   ZWJ x (Extended_Pict | EmojiNRK).  Precedes WB4, so no intervening Extend chars allowed.",
                "-#",
                "-$ZWJ ($Extended_Pict | $EmojiNRK);",
                "-",
                "-",
                " # Rule 4 - ignore Format and Extend characters, except when they appear at the beginning",
                "@@ -134,3 +115,3 @@ $ZWJ ($Extended_Pict | $EmojiNRK);",
                " #          format char(s), or is not a CJK dictionary character.",
                "-[^$CR $LF $Newline]? ($Extend |  $Format | $ZWJ)+;",
                "+[^$CR $LF $Newline]? ($Extend |  $Format)+;",
                "@@ -144,6 +125,2 @@ $IdeographicEx {400};    #",
                "-$E_Base ($Extend | $Format | $ZWJ)*;",
                "-$E_Modifier ($Extend | $Format | $ZWJ)*;",
                "-$Extended_Pict ($Extend | $Format | $ZWJ)*;",
                "-",
                " #",
                "@@ -195,13 +172,5 @@ $ExtendNumLetEx  $KatakanaEx     {300};    #  (13b)",
                "-# rule 14",
                "-#    Do not break within emoji modifier sequences",
                "-",
                "-($E_Base | $EBG) ($Format | $Extend | $ZWJ)* $E_Modifier;",
                "+# rule 13c",
                "-# rules 15 - 17",
                "-#    Pairs of Regional Indicators stay together.",
                "-#    With rule chaining disabled by ^, this rule will match exactly two of them.",
                "-#    No other rule begins with a Regional_Indicator, so chaining cannot extend the match.",
                "-#",
                "-^$Regional_IndicatorEx $Regional_IndicatorEx;",
                "+$Regional_IndicatorEx $Regional_IndicatorEx;",
                "@@ -209,26 +178 @@ $ExtendNumLetEx  $KatakanaEx     {300};    #  (13b)",
                " $HangulSyllable $HangulSyllable {200};",
                "-",
                "-# Rule 999",
                "-#     Match a single code point if no other rule applies.",
                "-.;",
                "-",
                "-",
                "-## -------------------------------------------------",
                "-",
                "-!!safe_reverse;",
                "-",
                "-# rule 3",
                "-($Extend | $Format | $ZWJ)+ .?;",
                "-",
                "-# rule 6",
                "-($MidLetter | $MidNumLet | $Single_Quote) ($Format | $Extend | $ZWJ)* ($Hebrew_Letter | $ALetterPlus);",
                "-",
                "-# rule 7b",
                "-$Double_Quote ($Format | $Extend | $ZWJ)* $Hebrew_Letter;",
                "-",
                "-",
                "-# rule 11",
                "-($MidNum | $MidNumLet | $Single_Quote) ($Format | $Extend | $ZWJ)* $Numeric;",
                "-",
                "-# rule 13c",
                "-$Regional_Indicator ($Format | $Extend | $ZWJ)* $Regional_Indicator;",
                "diff --git a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer.java b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer.java",
                "index 8b62ddbea67..09415516479 100644",
                "--- a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer.java",
                "+++ b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer.java",
                "@@ -202,3 +202,4 @@ public final class ICUTokenizer extends Tokenizer {",
                "     int start = breaker.current();",
                "-    assert start != BreakIterator.DONE;",
                "+    if (start == BreakIterator.DONE)",
                "+      return false; // BreakIterator exhausted",
                "@@ -206,3 +207,3 @@ public final class ICUTokenizer extends Tokenizer {",
                "     int end = breaker.next();",
                "-    while (end != BreakIterator.DONE && breaker.getRuleStatus() == 0) {",
                "+    while (start != BreakIterator.DONE && breaker.getRuleStatus() == 0) {",
                "       start = end;",
                "@@ -211,5 +212,4 @@ public final class ICUTokenizer extends Tokenizer {",
                "-    if (end == BreakIterator.DONE) {",
                "+    if (start == BreakIterator.DONE)",
                "       return false; // BreakIterator exhausted",
                "-    }",
                "diff --git a/lucene/analysis/icu/src/java/overview.html b/lucene/analysis/icu/src/java/overview.html",
                "index 6fa5821c242..bdace97b4c6 100644",
                "--- a/lucene/analysis/icu/src/java/overview.html",
                "+++ b/lucene/analysis/icu/src/java/overview.html",
                "@@ -355,3 +355,3 @@ and",
                " This module exists to provide up-to-date Unicode functionality that supports",
                "-the most recent version of Unicode (currently 10.0). However, some users who wish",
                "+the most recent version of Unicode (currently 8.0). However, some users who wish",
                " for stronger backwards compatibility can restrict",
                "diff --git a/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/segmentation/Default.brk b/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/segmentation/Default.brk",
                "index 4a9df159935..c94a023c2ce 100644",
                "Binary files a/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/segmentation/Default.brk and b/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/segmentation/Default.brk differ",
                "diff --git a/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/segmentation/MyanmarSyllable.brk b/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/segmentation/MyanmarSyllable.brk",
                "index a9d0673aa8d..c3357efa7ce 100644",
                "Binary files a/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/segmentation/MyanmarSyllable.brk and b/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/segmentation/MyanmarSyllable.brk differ",
                "diff --git a/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/utr30.nrm b/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/utr30.nrm",
                "index 1c3de121cad..1a16f3eb182 100644",
                "Binary files a/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/utr30.nrm and b/lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/utr30.nrm differ",
                "diff --git a/lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/GenerateUTR30DataFiles.java b/lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/GenerateUTR30DataFiles.java",
                "index 042fa37a2f4..0f2bffecfb0 100644",
                "--- a/lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/GenerateUTR30DataFiles.java",
                "+++ b/lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/GenerateUTR30DataFiles.java",
                "@@ -64,5 +64,5 @@ public class GenerateUTR30DataFiles {",
                "   private static final String ICU_SVN_TAG_URL",
                "-      = \"http://source.icu-project.org/repos/icu/tags\";",
                "-  private static final String ICU_RELEASE_TAG = \"release-60-2\";",
                "-  private static final String ICU_DATA_NORM2_PATH = \"icu4c/source/data/unidata/norm2\";",
                "+      = \"http://source.icu-project.org/repos/icu/icu/tags\";",
                "+  private static final String ICU_RELEASE_TAG = \"release-58-1\";",
                "+  private static final String ICU_DATA_NORM2_PATH = \"source/data/unidata/norm2\";",
                "   private static final String NFC_TXT = \"nfc.txt\";",
                "diff --git a/lucene/ivy-versions.properties b/lucene/ivy-versions.properties",
                "index a37e306b909..5ab36ddfa2c 100644",
                "--- a/lucene/ivy-versions.properties",
                "+++ b/lucene/ivy-versions.properties",
                "@@ -33,3 +33,3 @@ com.fasterxml.jackson.core.version = 2.5.4",
                " /com.healthmarketscience.jackcess/jackcess-encrypt = 2.1.4",
                "-/com.ibm.icu/icu4j = 60.2",
                "+/com.ibm.icu/icu4j = 59.1",
                " /com.pff/java-libpst = 0.8.1",
                "diff --git a/lucene/licenses/icu4j-59.1.jar.sha1 b/lucene/licenses/icu4j-59.1.jar.sha1",
                "new file mode 100644",
                "index 00000000000..f3f0018f053",
                "--- /dev/null",
                "+++ b/lucene/licenses/icu4j-59.1.jar.sha1",
                "@@ -0,0 +1 @@",
                "+6f06e820cf4c8968bbbaae66ae0b33f6a256b57f",
                "diff --git a/lucene/licenses/icu4j-60.2.jar.sha1 b/lucene/licenses/icu4j-60.2.jar.sha1",
                "deleted file mode 100644",
                "index e6131111834..00000000000",
                "--- a/lucene/licenses/icu4j-60.2.jar.sha1",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-e452cba3caaf93b997ff543c7246a6da74ed70f1",
                "diff --git a/solr/licenses/icu4j-59.1.jar.sha1 b/solr/licenses/icu4j-59.1.jar.sha1",
                "new file mode 100644",
                "index 00000000000..f3f0018f053",
                "--- /dev/null",
                "+++ b/solr/licenses/icu4j-59.1.jar.sha1",
                "@@ -0,0 +1 @@",
                "+6f06e820cf4c8968bbbaae66ae0b33f6a256b57f",
                "diff --git a/solr/licenses/icu4j-60.2.jar.sha1 b/solr/licenses/icu4j-60.2.jar.sha1",
                "deleted file mode 100644",
                "index e6131111834..00000000000",
                "--- a/solr/licenses/icu4j-60.2.jar.sha1",
                "+++ /dev/null",
                "@@ -1 +0,0 @@",
                "-e452cba3caaf93b997ff543c7246a6da74ed70f1"
            ],
            "changed_files": [
                "lucene/analysis/icu/src/data/uax29/Default.rbbi",
                "lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizer.java",
                "lucene/analysis/icu/src/java/overview.html",
                "lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/segmentation/Default.brk",
                "lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/segmentation/MyanmarSyllable.brk",
                "lucene/analysis/icu/src/resources/org/apache/lucene/analysis/icu/utr30.nrm",
                "lucene/analysis/icu/src/tools/java/org/apache/lucene/analysis/icu/GenerateUTR30DataFiles.java",
                "lucene/ivy-versions.properties",
                "lucene/licenses/icu4j-59.1.jar.sha1",
                "lucene/licenses/icu4j-60.2.jar.sha1",
                "solr/licenses/icu4j-59.1.jar.sha1",
                "solr/licenses/icu4j-60.2.jar.sha1"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8122": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "9f02097e2880bf51783029dfec92d763fcb69148"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8122",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5ce83237e804ac1130eaf5cf793955667793fee0",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518149529,
            "hunks": 84,
            "message": "SOLR-11925: Time Routed Aliases: router.autoDeleteAge feature (cherry picked from commit 02b5172)",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd.java",
                "index 9a5b1a75f6e..b0e6f442e5f 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd.java",
                "@@ -86,3 +86,3 @@ public class CreateAliasCmd implements OverseerCollectionMessageHandler.Cmd {",
                "     validateAllCollectionsExistAndNoDups(canonicalCollectionList, zkStateReader);",
                "-    zkStateReader.aliasesHolder",
                "+    zkStateReader.aliasesManager",
                "         .applyModificationAndExportToZk(aliases -> aliases.cloneWithCollectionAlias(aliasName, canonicalCollectionsString));",
                "@@ -123,4 +123,3 @@ public class CreateAliasCmd implements OverseerCollectionMessageHandler.Cmd {",
                "     // Create the collection",
                "-    NamedList createResults = new NamedList();",
                "-    RoutedAliasCreateCollectionCmd.createCollectionAndWait(state, createResults, aliasName, aliasMetadata, initialCollectionName, ocmh);",
                "+    RoutedAliasCreateCollectionCmd.createCollectionAndWait(state, aliasName, aliasMetadata, initialCollectionName, ocmh);",
                "     validateAllCollectionsExistAndNoDups(Collections.singletonList(initialCollectionName), zkStateReader);",
                "@@ -128,3 +127,3 @@ public class CreateAliasCmd implements OverseerCollectionMessageHandler.Cmd {",
                "     // Create/update the alias",
                "-    zkStateReader.aliasesHolder.applyModificationAndExportToZk(aliases -> aliases",
                "+    zkStateReader.aliasesManager.applyModificationAndExportToZk(aliases -> aliases",
                "         .cloneWithCollectionAlias(aliasName, initialCollectionName)",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/DeleteAliasCmd.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/DeleteAliasCmd.java",
                "index e199d7dbb24..6cc2eecc99a 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/DeleteAliasCmd.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/DeleteAliasCmd.java",
                "@@ -39,3 +39,3 @@ public class DeleteAliasCmd implements OverseerCollectionMessageHandler.Cmd {",
                "     ZkStateReader zkStateReader = ocmh.zkStateReader;",
                "-    zkStateReader.aliasesHolder.applyModificationAndExportToZk(a -> a.cloneWithCollectionAlias(aliasName, null));",
                "+    zkStateReader.aliasesManager.applyModificationAndExportToZk(a -> a.cloneWithCollectionAlias(aliasName, null));",
                "   }",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/ModifyAliasCmd.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/ModifyAliasCmd.java",
                "index 992f20d4632..fa6a25a76d0 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/ModifyAliasCmd.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/ModifyAliasCmd.java",
                "@@ -62,3 +62,3 @@ public class ModifyAliasCmd implements Cmd {",
                "-    zkStateReader.aliasesHolder.applyModificationAndExportToZk(aliases1 -> {",
                "+    zkStateReader.aliasesManager.applyModificationAndExportToZk(aliases1 -> {",
                "       for (Map.Entry<String, String> entry : metadata.entrySet()) {",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/RoutedAliasCreateCollectionCmd.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/RoutedAliasCreateCollectionCmd.java",
                "index 938ac8b59f6..2bba70dfb8d 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/RoutedAliasCreateCollectionCmd.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/RoutedAliasCreateCollectionCmd.java",
                "@@ -20,4 +20,9 @@ package org.apache.solr.cloud.api.collections;",
                " import java.lang.invoke.MethodHandles;",
                "+import java.text.ParseException;",
                " import java.time.Instant;",
                " import java.util.ArrayList;",
                "+import java.util.Collection;",
                "+import java.util.Date;",
                "+import java.util.HashMap;",
                "+import java.util.LinkedHashSet;",
                " import java.util.List;",
                "@@ -25,2 +30,4 @@ import java.util.Map;",
                "+import org.apache.solr.client.solrj.SolrResponse;",
                "+import org.apache.solr.client.solrj.request.CollectionAdminRequest;",
                " import org.apache.solr.cloud.Overseer;",
                "@@ -34,2 +41,3 @@ import org.apache.solr.common.params.CollectionParams;",
                " import org.apache.solr.common.params.ModifiableSolrParams;",
                "+import org.apache.solr.common.params.SolrParams;",
                " import org.apache.solr.common.util.NamedList;",
                "@@ -38,2 +46,4 @@ import org.apache.solr.handler.admin.CollectionsHandler;",
                " import org.apache.solr.request.LocalSolrQueryRequest;",
                "+import org.apache.solr.response.SolrQueryResponse;",
                "+import org.apache.solr.util.DateMathParser;",
                " import org.slf4j.Logger;",
                "@@ -47,5 +57,4 @@ import static org.apache.solr.common.params.CommonParams.NAME;",
                " /**",
                "- * For \"routed aliases\", creates another collection and adds it to the alias. In some cases it will not",
                "- * add a new collection.",
                "- * If a collection is created, then collection creation info is returned.",
                "+ * (Internal) For \"time routed aliases\", both deletes old collections and creates new collections",
                "+ * associated with routed aliases.",
                "  *",
                "@@ -53,4 +62,7 @@ import static org.apache.solr.common.params.CommonParams.NAME;",
                "  * property afforded by the lock it obtains on the alias name.",
                "+ *",
                "  * @since 7.3",
                "+ * @lucene.internal",
                "  */",
                "+// TODO rename class to MaintainRoutedAliasCmd",
                " public class RoutedAliasCreateCollectionCmd implements OverseerCollectionMessageHandler.Cmd {",
                "@@ -58,3 +70,3 @@ public class RoutedAliasCreateCollectionCmd implements OverseerCollectionMessage",
                "-  public static final String IF_MOST_RECENT_COLL_NAME = \"ifMostRecentCollName\";",
                "+  public static final String IF_MOST_RECENT_COLL_NAME = \"ifMostRecentCollName\"; //TODO rename to createAfter",
                "@@ -66,2 +78,17 @@ public class RoutedAliasCreateCollectionCmd implements OverseerCollectionMessage",
                "+  /** Invokes this command from the client.  If there's a problem it will throw an exception. */",
                "+  public static NamedList remoteInvoke(CollectionsHandler collHandler, String aliasName, String mostRecentCollName)",
                "+      throws Exception {",
                "+    final String operation = CollectionParams.CollectionAction.ROUTEDALIAS_CREATECOLL.toLower();",
                "+    Map<String, Object> msg = new HashMap<>();",
                "+    msg.put(Overseer.QUEUE_OPERATION, operation);",
                "+    msg.put(CollectionParams.NAME, aliasName);",
                "+    msg.put(RoutedAliasCreateCollectionCmd.IF_MOST_RECENT_COLL_NAME, mostRecentCollName);",
                "+    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));",
                "+    if (rsp.getException() != null) {",
                "+      throw rsp.getException();",
                "+    }",
                "+    return rsp.getResponse();",
                "+  }",
                "+",
                "   @Override",
                "@@ -77,4 +104,4 @@ public class RoutedAliasCreateCollectionCmd implements OverseerCollectionMessage",
                "     //---- PARSE ALIAS INFO FROM ZK",
                "-    final ZkStateReader.AliasesManager aliasesHolder = ocmh.zkStateReader.aliasesHolder;",
                "-    final Aliases aliases = aliasesHolder.getAliases();",
                "+    final ZkStateReader.AliasesManager aliasesManager = ocmh.zkStateReader.aliasesManager;",
                "+    final Aliases aliases = aliasesManager.getAliases();",
                "     final Map<String, String> aliasMetadata = aliases.getCollectionAliasMetadata(aliasName);",
                "@@ -83,3 +110,2 @@ public class RoutedAliasCreateCollectionCmd implements OverseerCollectionMessage",
                "     }",
                "-",
                "     final TimeRoutedAlias timeRoutedAlias = new TimeRoutedAlias(aliasName, aliasMetadata);",
                "@@ -115,9 +141,17 @@ public class RoutedAliasCreateCollectionCmd implements OverseerCollectionMessage",
                "-    //---- CREATE THE COLLECTION",
                "-    createCollectionAndWait(clusterState, results, aliasName, aliasMetadata, createCollName, ocmh);",
                "+    //---- DELETE OLDEST COLLECTIONS AND REMOVE FROM ALIAS (if configured)",
                "+    NamedList deleteResults = deleteOldestCollectionsAndUpdateAlias(timeRoutedAlias, aliasesManager, nextCollTimestamp);",
                "+    if (deleteResults != null) {",
                "+      results.add(\"delete\", deleteResults);",
                "+    }",
                "-    //TODO delete some of the oldest collection(s) ?",
                "+    //---- CREATE THE COLLECTION",
                "+    NamedList createResults = createCollectionAndWait(clusterState, aliasName, aliasMetadata,",
                "+        createCollName, ocmh);",
                "+    if (createResults != null) {",
                "+      results.add(\"create\", createResults);",
                "+    }",
                "-    //---- UPDATE THE ALIAS",
                "-    aliasesHolder.applyModificationAndExportToZk(curAliases -> {",
                "+    //---- UPDATE THE ALIAS WITH NEW COLLECTION",
                "+    aliasesManager.applyModificationAndExportToZk(curAliases -> {",
                "       final List<String> curTargetCollections = curAliases.getCollectionAliasListMap().get(aliasName);",
                "@@ -136,2 +170,81 @@ public class RoutedAliasCreateCollectionCmd implements OverseerCollectionMessage",
                "+  /**",
                "+   * Deletes some of the oldest collection(s) based on {@link TimeRoutedAlias#getAutoDeleteAgeMath()}. If not present",
                "+   * then does nothing.  Returns non-null results if something was deleted (or if we tried to).",
                "+   * {@code now} is the date from which the math is relative to.",
                "+   */",
                "+  NamedList deleteOldestCollectionsAndUpdateAlias(TimeRoutedAlias timeRoutedAlias,",
                "+                                                  ZkStateReader.AliasesManager aliasesManager,",
                "+                                                  Instant now) throws Exception {",
                "+    final String autoDeleteAgeMathStr = timeRoutedAlias.getAutoDeleteAgeMath();",
                "+    if (autoDeleteAgeMathStr == null) {",
                "+      return null;",
                "+    }",
                "+    final Instant delBefore;",
                "+    try {",
                "+      delBefore = new DateMathParser(Date.from(now), timeRoutedAlias.getTimeZone()).parseMath(autoDeleteAgeMathStr).toInstant();",
                "+    } catch (ParseException e) {",
                "+      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e); // note: should not happen by this point",
                "+    }",
                "+",
                "+    String aliasName = timeRoutedAlias.getAliasName();",
                "+",
                "+    Collection<String> collectionsToDelete = new LinkedHashSet<>();",
                "+",
                "+    // First update the alias    (there may be no change to make!)",
                "+    aliasesManager.applyModificationAndExportToZk(curAliases -> {",
                "+      // note: we could re-parse the TimeRoutedAlias object from curAliases but I don't think there's a point to it.",
                "+",
                "+      final List<Map.Entry<Instant, String>> parsedCollections =",
                "+          timeRoutedAlias.parseCollections(curAliases, () -> newAliasMustExistException(aliasName));",
                "+",
                "+      //iterating from newest to oldest, find the first collection that has a time <= \"before\".  We keep this collection",
                "+      // (and all newer to left) but we delete older collections, which are the ones that follow.",
                "+      // This logic will always keep the first collection, which we can't delete.",
                "+      int numToKeep = 0;",
                "+      for (Map.Entry<Instant, String> parsedCollection : parsedCollections) {",
                "+        numToKeep++;",
                "+        final Instant colInstant = parsedCollection.getKey();",
                "+        if (colInstant.isBefore(delBefore) || colInstant.equals(delBefore)) {",
                "+          break;",
                "+        }",
                "+      }",
                "+      if (numToKeep == parsedCollections.size()) {",
                "+        log.debug(\"No old time routed collections to delete.\");",
                "+        return curAliases;",
                "+      }",
                "+",
                "+      final List<String> targetList = curAliases.getCollectionAliasListMap().get(aliasName);",
                "+      // remember to delete these... (oldest to newest)",
                "+      for (int i = targetList.size() - 1; i >= numToKeep; i--) {",
                "+        collectionsToDelete.add(targetList.get(i));",
                "+      }",
                "+      // new alias list has only \"numToKeep\" first items",
                "+      final List<String> collectionsToKeep = targetList.subList(0, numToKeep);",
                "+      final String collectionsToKeepStr = StrUtils.join(collectionsToKeep, ',');",
                "+      return curAliases.cloneWithCollectionAlias(aliasName, collectionsToKeepStr);",
                "+    });",
                "+",
                "+    if (collectionsToDelete.isEmpty()) {",
                "+      return null;",
                "+    }",
                "+",
                "+    log.info(\"Removing old time routed collections: {}\", collectionsToDelete);",
                "+    // Should this be done asynchronously?  If we got \"ASYNC\" then probably.",
                "+    //   It would shorten the time the Overseer holds a lock on the alias name",
                "+    //   (deleting the collections will be done later and not use that lock).",
                "+    //   Don't bother about parallel; it's unusual to have more than 1.",
                "+    // Note we don't throw an exception here under most cases; instead the response will have information about",
                "+    //   how each delete request went, possibly including a failure message.",
                "+    final CollectionsHandler collHandler = ocmh.overseer.getCoreContainer().getCollectionsHandler();",
                "+    NamedList results = new NamedList();",
                "+    for (String collection : collectionsToDelete) {",
                "+      final SolrParams reqParams = CollectionAdminRequest.deleteCollection(collection).getParams();",
                "+      SolrQueryResponse rsp = new SolrQueryResponse();",
                "+      collHandler.handleRequestBody(new LocalSolrQueryRequest(null, reqParams), rsp);",
                "+      results.add(collection, rsp.getValues());",
                "+    }",
                "+    return results;",
                "+  }",
                "+",
                "   /**",
                "@@ -141,3 +254,4 @@ public class RoutedAliasCreateCollectionCmd implements OverseerCollectionMessage",
                "    */",
                "-  static void createCollectionAndWait(ClusterState clusterState, NamedList results, String aliasName, Map<String, String> aliasMetadata, String createCollName, OverseerCollectionMessageHandler ocmh) throws Exception {",
                "+  static NamedList createCollectionAndWait(ClusterState clusterState, String aliasName, Map<String, String> aliasMetadata,",
                "+                                           String createCollName, OverseerCollectionMessageHandler ocmh) throws Exception {",
                "     // Map alias metadata starting with a prefix to a create-collection API request",
                "@@ -163,2 +277,3 @@ public class RoutedAliasCreateCollectionCmd implements OverseerCollectionMessage",
                "+    NamedList results = new NamedList();",
                "     try {",
                "@@ -175,3 +290,5 @@ public class RoutedAliasCreateCollectionCmd implements OverseerCollectionMessage",
                "-    CollectionsHandler.waitForActiveCollection(createCollName, null, ocmh.overseer.getCoreContainer(), new OverseerSolrResponse(results));",
                "+    CollectionsHandler.waitForActiveCollection(createCollName, ocmh.overseer.getCoreContainer(),",
                "+        new OverseerSolrResponse(results));",
                "+    return results;",
                "   }",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "index c3407aafda5..0ffaaa900c4 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "@@ -19,3 +19,2 @@ package org.apache.solr.cloud.api.collections;",
                "-import java.text.ParseException;",
                " import java.time.Instant;",
                "@@ -66,2 +65,3 @@ public class TimeRoutedAlias {",
                "   public static final String ROUTER_MAX_FUTURE = ROUTER_PREFIX + \"max-future-ms\";",
                "+  public static final String ROUTER_AUTO_DELETE_AGE = ROUTER_PREFIX + \"autoDeleteAge\";",
                "   public static final String CREATE_COLLECTION_PREFIX = \"create-collection.\";",
                "@@ -124,4 +124,5 @@ public class TimeRoutedAlias {",
                "   private final String routeField;",
                "+  private final String intervalMath; // ex: +1DAY",
                "   private final long maxFutureMs;",
                "-  private final String intervalDateMath; // ex: +1DAY",
                "+  private final String autoDeleteAgeMath; // ex: /DAY-30DAYS  *optional*",
                "   private final TimeZone timeZone;",
                "@@ -136,3 +137,3 @@ public class TimeRoutedAlias {",
                "     routeField = required.get(ROUTER_FIELD);",
                "-    intervalDateMath = required.get(ROUTER_INTERVAL);",
                "+    intervalMath = required.get(ROUTER_INTERVAL);",
                "@@ -140,2 +141,3 @@ public class TimeRoutedAlias {",
                "     maxFutureMs = params.getLong(ROUTER_MAX_FUTURE, TimeUnit.MINUTES.toMillis(10));",
                "+    autoDeleteAgeMath = params.get(ROUTER_AUTO_DELETE_AGE); // no default",
                "     timeZone = TimeZoneUtils.parseTimezone(aliasMetadata.get(CommonParams.TZ));",
                "@@ -144,6 +146,10 @@ public class TimeRoutedAlias {",
                "-    // check that the interval is valid date math",
                "+    // check that the date math is valid",
                "+    final Date now = new Date();",
                "     try {",
                "-      new DateMathParser(timeZone).parseMath(intervalDateMath);",
                "-    } catch (ParseException e) {",
                "+      final Date after = new DateMathParser(now, timeZone).parseMath(intervalMath);",
                "+      if (!after.after(now)) {",
                "+        throw new SolrException(BAD_REQUEST, \"duration must add to produce a time in the future\");",
                "+      }",
                "+    } catch (Exception e) {",
                "       throw new SolrException(BAD_REQUEST, \"bad \" + TimeRoutedAlias.ROUTER_INTERVAL + \", \" + e, e);",
                "@@ -151,2 +157,13 @@ public class TimeRoutedAlias {",
                "+    if (autoDeleteAgeMath != null) {",
                "+      try {",
                "+        final Date before =  new DateMathParser(now, timeZone).parseMath(autoDeleteAgeMath);",
                "+        if (now.before(before)) {",
                "+          throw new SolrException(BAD_REQUEST, \"duration must round or subtract to produce a time in the past\");",
                "+        }",
                "+      } catch (Exception e) {",
                "+        throw new SolrException(BAD_REQUEST, \"bad \" + TimeRoutedAlias.ROUTER_AUTO_DELETE_AGE + \", \" + e, e);",
                "+      }",
                "+    }",
                "+",
                "     if (maxFutureMs < 0) {",
                "@@ -164,2 +181,6 @@ public class TimeRoutedAlias {",
                "+  public String getIntervalMath() {",
                "+    return intervalMath;",
                "+  }",
                "+",
                "   public long getMaxFutureMs() {",
                "@@ -168,4 +189,4 @@ public class TimeRoutedAlias {",
                "-  public String getIntervalDateMath() {",
                "-    return intervalDateMath;",
                "+  public String getAutoDeleteAgeMath() {",
                "+    return autoDeleteAgeMath;",
                "   }",
                "@@ -181,4 +202,5 @@ public class TimeRoutedAlias {",
                "         .add(\"routeField\", routeField)",
                "+        .add(\"intervalMath\", intervalMath)",
                "         .add(\"maxFutureMs\", maxFutureMs)",
                "-        .add(\"intervalDateMath\", intervalDateMath)",
                "+        .add(\"autoDeleteAgeMath\", autoDeleteAgeMath)",
                "         .add(\"timeZone\", timeZone)",
                "@@ -206,3 +228,3 @@ public class TimeRoutedAlias {",
                "     final Instant nextCollTimestamp =",
                "-        DateMathParser.parseMath(Date.from(fromTimestamp), \"NOW\" + intervalDateMath, timeZone).toInstant();",
                "+        DateMathParser.parseMath(Date.from(fromTimestamp), \"NOW\" + intervalMath, timeZone).toInstant();",
                "     assert nextCollTimestamp.isAfter(fromTimestamp);",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "index 4e0170052fd..63b9f166f29 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "@@ -243,22 +243,35 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "     }",
                "-    SolrResponse response = null;",
                "     Map<String, Object> props = operation.execute(req, rsp, this);",
                "+    if (props == null) {",
                "+      return;",
                "+    }",
                "+",
                "     String asyncId = req.getParams().get(ASYNC);",
                "-    if (props != null) {",
                "-      if (asyncId != null) {",
                "-        props.put(ASYNC, asyncId);",
                "-      }",
                "-      props.put(QUEUE_OPERATION, operation.action.toLower());",
                "+    if (asyncId != null) {",
                "+      props.put(ASYNC, asyncId);",
                "+    }",
                "+",
                "+    props.put(QUEUE_OPERATION, operation.action.toLower());",
                "+",
                "+    if (operation.sendToOCPQueue) {",
                "       ZkNodeProps zkProps = new ZkNodeProps(props);",
                "-      if (operation.sendToOCPQueue) {",
                "-        response = handleResponse(operation.action.toLower(), zkProps, rsp, operation.timeOut);",
                "+      SolrResponse overseerResponse = sendToOCPQueue(zkProps, operation.timeOut);",
                "+      rsp.getValues().addAll(overseerResponse.getResponse());",
                "+      Exception exp = overseerResponse.getException();",
                "+      if (exp != null) {",
                "+        rsp.setException(exp);",
                "       }",
                "-      else Overseer.getStateUpdateQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));",
                "-      final String collectionName = zkProps.getStr(NAME);",
                "+",
                "+      //TODO yuck; shouldn't create-collection at the overseer do this?  (conditionally perhaps)",
                "       if (action.equals(CollectionAction.CREATE) && asyncId == null) {",
                "         if (rsp.getException() == null) {",
                "-          waitForActiveCollection(collectionName, zkProps, cores, response);",
                "+          waitForActiveCollection(zkProps.getStr(NAME), cores, overseerResponse);",
                "         }",
                "       }",
                "+",
                "+    } else {",
                "+      // submits and doesn't wait for anything (no response)",
                "+      Overseer.getStateUpdateQueue(coreContainer.getZkController().getZkClient()).offer(Utils.toJSON(props));",
                "     }",
                "+",
                "   }",
                "@@ -270,12 +283,9 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "-  //TODO rename to submitToOverseerRPC",
                "-  public void handleResponse(String operation, ZkNodeProps m,",
                "-                              SolrQueryResponse rsp) throws KeeperException, InterruptedException {",
                "-    handleResponse(operation, m, rsp, DEFAULT_COLLECTION_OP_TIMEOUT);",
                "+  public SolrResponse sendToOCPQueue(ZkNodeProps m) throws KeeperException, InterruptedException {",
                "+    return sendToOCPQueue(m, DEFAULT_COLLECTION_OP_TIMEOUT);",
                "   }",
                "-  //TODO rename to submitToOverseerRPC",
                "-  public SolrResponse handleResponse(String operation, ZkNodeProps m,",
                "-      SolrQueryResponse rsp, long timeout) throws KeeperException, InterruptedException {",
                "-    if (!m.containsKey(QUEUE_OPERATION)) {",
                "+  public SolrResponse sendToOCPQueue(ZkNodeProps m, long timeout) throws KeeperException, InterruptedException {",
                "+    String operation = m.getStr(QUEUE_OPERATION);",
                "+    if (operation == null) {",
                "       throw new SolrException(ErrorCode.BAD_REQUEST, \"missing key \" + QUEUE_OPERATION);",
                "@@ -303,8 +313,5 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "        r.add(CoreAdminParams.REQUESTID, (String) m.get(ASYNC));",
                "-       SolrResponse response = new OverseerSolrResponse(r);",
                "-",
                "-       rsp.getValues().addAll(response.getResponse());",
                "-       return response;",
                "-     }",
                "+      return new OverseerSolrResponse(r);",
                "+    }",
                "@@ -315,10 +322,3 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "     if (event.getBytes() != null) {",
                "-      SolrResponse response = SolrResponse.deserialize(event.getBytes());",
                "-      rsp.getValues().addAll(response.getResponse());",
                "-      SimpleOrderedMap exp = (SimpleOrderedMap) response.getResponse().get(\"exception\");",
                "-      if (exp != null) {",
                "-        Integer code = (Integer) exp.get(\"rspCode\");",
                "-        rsp.setException(new SolrException(code != null && code != -1 ? ErrorCode.getErrorCode(code) : ErrorCode.SERVER_ERROR, (String)exp.get(\"msg\")));",
                "-      }",
                "-      return response;",
                "+      return SolrResponse.deserialize(event.getBytes());",
                "     } else {",
                "@@ -1158,8 +1158,8 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "-  public static void waitForActiveCollection(String collectionName, ZkNodeProps message, CoreContainer cc, SolrResponse response)",
                "+  public static void waitForActiveCollection(String collectionName, CoreContainer cc, SolrResponse createCollResponse)",
                "       throws KeeperException, InterruptedException {",
                "-    if (response.getResponse().get(\"exception\") != null) {",
                "+    if (createCollResponse.getResponse().get(\"exception\") != null) {",
                "       // the main called failed, don't wait",
                "-      log.info(\"Not waiting for active collection due to exception: \" + response.getResponse().get(\"exception\"));",
                "+      log.info(\"Not waiting for active collection due to exception: \" + createCollResponse.getResponse().get(\"exception\"));",
                "       return;",
                "@@ -1167,3 +1167,3 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "-    if (response.getResponse().get(\"failure\") != null) {",
                "+    if (createCollResponse.getResponse().get(\"failure\") != null) {",
                "       // TODO: we should not wait for Replicas we know failed",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders.java b/solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders.java",
                "index 98e796da73d..53e9fde5ad9 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders.java",
                "@@ -18,17 +18,3 @@ package org.apache.solr.handler.admin;",
                "-import static org.apache.solr.cloud.Overseer.QUEUE_OPERATION;",
                "-import static org.apache.solr.common.cloud.ZkStateReader.COLLECTION_PROP;",
                "-import static org.apache.solr.common.cloud.ZkStateReader.CORE_NAME_PROP;",
                "-import static org.apache.solr.common.cloud.ZkStateReader.CORE_NODE_NAME_PROP;",
                "-import static org.apache.solr.common.cloud.ZkStateReader.ELECTION_NODE_PROP;",
                "-import static org.apache.solr.common.cloud.ZkStateReader.LEADER_PROP;",
                "-import static org.apache.solr.common.cloud.ZkStateReader.MAX_AT_ONCE_PROP;",
                "-import static org.apache.solr.common.cloud.ZkStateReader.MAX_WAIT_SECONDS_PROP;",
                "-import static org.apache.solr.common.cloud.ZkStateReader.REJOIN_AT_HEAD_PROP;",
                "-import static org.apache.solr.common.cloud.ZkStateReader.SHARD_ID_PROP;",
                "-import static org.apache.solr.common.params.CollectionParams.CollectionAction.REBALANCELEADERS;",
                "-import static org.apache.solr.common.params.CommonAdminParams.ASYNC;",
                "-",
                " import java.lang.invoke.MethodHandles;",
                "-",
                " import java.util.HashMap;",
                "@@ -58,2 +44,15 @@ import org.slf4j.LoggerFactory;",
                "+import static org.apache.solr.cloud.Overseer.QUEUE_OPERATION;",
                "+import static org.apache.solr.common.cloud.ZkStateReader.COLLECTION_PROP;",
                "+import static org.apache.solr.common.cloud.ZkStateReader.CORE_NAME_PROP;",
                "+import static org.apache.solr.common.cloud.ZkStateReader.CORE_NODE_NAME_PROP;",
                "+import static org.apache.solr.common.cloud.ZkStateReader.ELECTION_NODE_PROP;",
                "+import static org.apache.solr.common.cloud.ZkStateReader.LEADER_PROP;",
                "+import static org.apache.solr.common.cloud.ZkStateReader.MAX_AT_ONCE_PROP;",
                "+import static org.apache.solr.common.cloud.ZkStateReader.MAX_WAIT_SECONDS_PROP;",
                "+import static org.apache.solr.common.cloud.ZkStateReader.REJOIN_AT_HEAD_PROP;",
                "+import static org.apache.solr.common.cloud.ZkStateReader.SHARD_ID_PROP;",
                "+import static org.apache.solr.common.params.CollectionParams.CollectionAction.REBALANCELEADERS;",
                "+import static org.apache.solr.common.params.CommonAdminParams.ASYNC;",
                "+",
                " class RebalanceLeaders {",
                "@@ -268,5 +267,3 @@ class RebalanceLeaders {",
                "     propMap.put(ASYNC, asyncId);",
                "-    ZkNodeProps m = new ZkNodeProps(propMap);",
                "-    SolrQueryResponse rspIgnore = new SolrQueryResponse(); // I'm constructing my own response",
                "-    collectionsHandler.handleResponse(REBALANCELEADERS.toLower(), m, rspIgnore); // Want to construct my own response here.",
                "+    collectionsHandler.sendToOCPQueue(new ZkNodeProps(propMap)); // ignore response; we construct our own",
                "   }",
                "diff --git a/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java b/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java",
                "index ba4aa137ed2..6b10f588225 100644",
                "--- a/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java",
                "+++ b/solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java",
                "@@ -446,3 +446,3 @@ public class HttpSolrCall {",
                "         // TODO: it would be nice if admin ui elements skipped this...",
                "-        cores.getZkController().getZkStateReader().aliasesHolder.update();",
                "+        cores.getZkController().getZkStateReader().aliasesManager.update();",
                "         action = RETRY;",
                "diff --git a/solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor.java b/solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor.java",
                "index 12358429ee6..cd47c5ce42e 100644",
                "--- a/solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor.java",
                "+++ b/solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor.java",
                "@@ -25,3 +25,2 @@ import java.util.Collections;",
                " import java.util.Date;",
                "-import java.util.HashMap;",
                " import java.util.List;",
                "@@ -33,3 +32,2 @@ import java.util.stream.Collectors;",
                "-import org.apache.solr.cloud.Overseer;",
                " import org.apache.solr.cloud.ZkController;",
                "@@ -42,4 +40,2 @@ import org.apache.solr.common.cloud.Slice;",
                " import org.apache.solr.common.cloud.ZkCoreNodeProps;",
                "-import org.apache.solr.common.cloud.ZkNodeProps;",
                "-import org.apache.solr.common.params.CollectionParams;",
                " import org.apache.solr.common.params.ModifiableSolrParams;",
                "@@ -82,3 +78,6 @@ public class TimeRoutedAliasUpdateProcessor extends UpdateRequestProcessor {",
                "-  // used to limit unnecessary concurrent collection creation requests",
                "+  // To avoid needless/redundant concurrent communication with the Overseer from this JVM, we",
                "+  //   maintain a Semaphore from an alias name keyed ConcurrentHashMap.",
                "+  //   Alternatively a Lock or CountDownLatch could have been used but they didn't seem",
                "+  //   to make it any easier.",
                "   private static ConcurrentHashMap<String, Semaphore> aliasToSemaphoreMap = new ConcurrentHashMap<>(4);",
                "@@ -165,3 +164,3 @@ public class TimeRoutedAliasUpdateProcessor extends UpdateRequestProcessor {",
                "     String targetCollection;",
                "-    do {",
                "+    do { // typically we don't loop; it's only when we need to create a collection",
                "       targetCollection = findTargetCollectionGivenTimestamp(routeTimestamp);",
                "@@ -273,7 +272,4 @@ public class TimeRoutedAliasUpdateProcessor extends UpdateRequestProcessor {",
                "     //   what we think so here, otherwise it will return (without error).",
                "-    // To avoid needless concurrent communication with the Overseer from this JVM, we",
                "-    //   maintain a Semaphore from an alias name keyed ConcurrentHashMap.",
                "-    //   Alternatively a Lock or CountDownLatch could have been used but they didn't seem",
                "-    //   to make it any easier.",
                "+    // (see docs on aliasToSemaphoreMap)",
                "     final Semaphore semaphore = aliasToSemaphoreMap.computeIfAbsent(getAliasName(), n -> new Semaphore(1));",
                "@@ -281,27 +277,14 @@ public class TimeRoutedAliasUpdateProcessor extends UpdateRequestProcessor {",
                "       try {",
                "-        final String operation = CollectionParams.CollectionAction.ROUTEDALIAS_CREATECOLL.toLower();",
                "-        Map<String, Object> msg = new HashMap<>();",
                "-        msg.put(Overseer.QUEUE_OPERATION, operation);",
                "-        msg.put(CollectionParams.NAME, getAliasName());",
                "-        msg.put(RoutedAliasCreateCollectionCmd.IF_MOST_RECENT_COLL_NAME, mostRecentCollName);",
                "-        SolrQueryResponse rsp = new SolrQueryResponse();",
                "-        try {",
                "-          this.collHandler.handleResponse(",
                "-              operation,",
                "-              new ZkNodeProps(msg),",
                "-              rsp);",
                "-          if (rsp.getException() != null) {",
                "-            throw rsp.getException();",
                "-          } // otherwise don't care about the response.  It's possible no collection was created because",
                "-          //  of a race and that's okay... we'll ultimately retry any way.",
                "-",
                "-          // Ensure our view of the aliases has updated. If we didn't do this, our zkStateReader might",
                "-          //  not yet know about the new alias (thus won't see the newly added collection to it), and we might think",
                "-          //  we failed.",
                "-          zkController.getZkStateReader().aliasesHolder.update();",
                "-        } catch (RuntimeException e) {",
                "-          throw e;",
                "-        } catch (Exception e) {",
                "-          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);",
                "-        }",
                "+        RoutedAliasCreateCollectionCmd.remoteInvoke(collHandler, getAliasName(), mostRecentCollName);",
                "+        // we don't care about the response.  It's possible no collection was created because",
                "+        //  of a race and that's okay... we'll ultimately retry any way.",
                "+",
                "+        // Ensure our view of the aliases has updated. If we didn't do this, our zkStateReader might",
                "+        //  not yet know about the new alias (thus won't see the newly added collection to it), and we might think",
                "+        //  we failed.",
                "+        zkController.getZkStateReader().aliasesManager.update();",
                "+      } catch (RuntimeException e) {",
                "+        throw e;",
                "+      } catch (Exception e) {",
                "+        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);",
                "       } finally {",
                "diff --git a/solr/core/src/java/org/apache/solr/util/DateMathParser.java b/solr/core/src/java/org/apache/solr/util/DateMathParser.java",
                "index f5af734d205..efb06912ddc 100644",
                "--- a/solr/core/src/java/org/apache/solr/util/DateMathParser.java",
                "+++ b/solr/core/src/java/org/apache/solr/util/DateMathParser.java",
                "@@ -288,9 +288,13 @@ public class DateMathParser  {",
                "   /**",
                "-   * Default constructor that assumes UTC should be used for rounding unless ",
                "-   * otherwise specified in the SolrRequestInfo",
                "-   * ",
                "+   * Chooses defaults based on the current request.",
                "    * @see SolrRequestInfo#getClientTimeZone",
                "+   * @see SolrRequestInfo#getNOW()",
                "    */",
                "   public DateMathParser() {",
                "-    this(null);",
                "+    this(null, null);",
                "+  }",
                "+",
                "+  //TODO Deprecate?",
                "+  public DateMathParser(TimeZone tz) {",
                "+    this(null, tz);",
                "   }",
                "@@ -298,2 +302,4 @@ public class DateMathParser  {",
                "   /**",
                "+   * @param now The current time. If null, it defaults to {@link SolrRequestInfo#getNOW()}.",
                "+   *            otherwise the current time is assumed.",
                "    * @param tz The TimeZone used for rounding (to determine when hours/days begin).  If null, then this method defaults",
                "@@ -304,3 +310,5 @@ public class DateMathParser  {",
                "    */",
                "-  public DateMathParser(TimeZone tz) {",
                "+  public DateMathParser(Date now, TimeZone tz) {",
                "+    this.now = now;// potentially null; it's okay",
                "+",
                "     if (null == tz) {",
                "@@ -309,3 +317,3 @@ public class DateMathParser  {",
                "     }",
                "-    zone = (null != tz) ? tz : DEFAULT_MATH_TZ;",
                "+    this.zone = (null != tz) ? tz : DEFAULT_MATH_TZ;",
                "   }",
                "diff --git a/solr/solr-ref-guide/src/collections-api.adoc b/solr/solr-ref-guide/src/collections-api.adoc",
                "index 7fc4902fbdf..ac8881b848f 100644",
                "--- a/solr/solr-ref-guide/src/collections-api.adoc",
                "+++ b/solr/solr-ref-guide/src/collections-api.adoc",
                "@@ -583,3 +583,3 @@ The type of routing to use. Presently only `time` is valid.  This param is requi",
                " `router.interval`::",
                "-A fragment of a date math expression that will be appended to a timestamp to determine the next collection in the series.",
                "+A date math expression that will be appended to a timestamp to determine the next collection in the series.",
                " Any date math expression that can be evaluated if appended to a timestamp of the form 2018-01-15T16:17:18 will",
                "@@ -592,2 +592,10 @@ The default is 10 minutes worth.",
                "+`router.autoDeleteAge`::",
                "+A date math expression that results in the oldest collections getting deleted automatically.",
                "+The date math is relative to the timestamp of a newly created collection (typically close to the current time),",
                "+and thus this must produce an earlier time via rounding and/or subtracting.",
                "+Collections to be deleted must have a time range that is entirely before the computed age.",
                "+Collections are considered for deletion immediately prior to new collections getting created.",
                "+Example: `/DAY-90DAYS`.  The default is not to delete.",
                "+",
                " `create-collection.*`::",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/SolrResponse.java b/solr/solrj/src/java/org/apache/solr/client/solrj/SolrResponse.java",
                "index d3da1514a5c..ef52eb22393 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/SolrResponse.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/SolrResponse.java",
                "@@ -18,6 +18,2 @@ package org.apache.solr.client.solrj;",
                "-import org.apache.solr.common.SolrException;",
                "-import org.apache.solr.common.SolrException.ErrorCode;",
                "-import org.apache.solr.common.util.NamedList;",
                "-",
                " import java.io.ByteArrayInputStream;",
                "@@ -28,2 +24,6 @@ import java.io.Serializable;",
                "+import org.apache.solr.common.SolrException;",
                "+import org.apache.solr.common.SolrException.ErrorCode;",
                "+import org.apache.solr.common.util.NamedList;",
                "+",
                "@@ -44,2 +44,12 @@ public abstract class SolrResponse implements Serializable {",
                "   public abstract NamedList<Object> getResponse();",
                "+",
                "+  public Exception getException() {",
                "+    NamedList exp = (NamedList) getResponse().get(\"exception\");",
                "+    if (exp == null) {",
                "+      return null;",
                "+    }",
                "+    Integer rspCode = (Integer) exp.get(\"rspCode\");",
                "+    ErrorCode errorCode = rspCode != null && rspCode != -1 ? ErrorCode.getErrorCode(rspCode) : ErrorCode.SERVER_ERROR;",
                "+    return new SolrException(errorCode, (String)exp.get(\"msg\"));",
                "+  }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "index 1738bb002ef..182bfce95b3 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "@@ -1343,4 +1343,5 @@ public abstract class CollectionAdminRequest<T extends CollectionAdminResponse>",
                "-    public void addMetadata(String key, String value) {",
                "+    public ModifyAlias addMetadata(String key, String value) {",
                "       metadata.put(key,value);",
                "+      return this;",
                "     }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "index 5a1abd91f46..f4e4d1af902 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "@@ -431,3 +431,3 @@ public class ZkStateReader implements Closeable {",
                "     refreshCollectionList(new CollectionsChildWatcher());",
                "-    refreshAliases(aliasesHolder);",
                "+    refreshAliases(aliasesManager);",
                "@@ -1416,3 +1416,3 @@ public class ZkStateReader implements Closeable {",
                "   /** Access to the {@link Aliases}. */",
                "-  public final AliasesManager aliasesHolder = new AliasesManager();",
                "+  public final AliasesManager aliasesManager = new AliasesManager();",
                "@@ -1425,3 +1425,3 @@ public class ZkStateReader implements Closeable {",
                "   public Aliases getAliases() {",
                "-    return aliasesHolder.getAliases();",
                "+    return aliasesManager.getAliases();",
                "   }",
                "@@ -1434,3 +1434,3 @@ public class ZkStateReader implements Closeable {",
                "     }",
                "-    aliasesHolder.update();",
                "+    aliasesManager.update();",
                "   }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "index fe472e17a05..74fbb95d3ca 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "@@ -83,2 +83,3 @@ public interface CollectionParams {",
                "     ROUTEDALIAS_CREATECOLL(true, LockLevel.COLLECTION),",
                "+    DELETEROUTEDALIASCOLLECTIONS(true, LockLevel.COLLECTION),",
                "     SPLITSHARD(true, LockLevel.SHARD),",
                "diff --git a/solr/solrj/src/resources/apispec/collections.Commands.json b/solr/solrj/src/resources/apispec/collections.Commands.json",
                "index 0a88f6c16c2..ec44348f276 100644",
                "--- a/solr/solrj/src/resources/apispec/collections.Commands.json",
                "+++ b/solr/solrj/src/resources/apispec/collections.Commands.json",
                "@@ -188,2 +188,6 @@",
                "             }",
                "+            \"autoDeleteAge\": {",
                "+              \"type\": \"string\",",
                "+              \"description\": \"A date math expressions yielding a time in the past. Collections covering a period of time entirely before this age will be automatically deleted.\"",
                "+            }",
                "           }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd.java",
                "solr/core/src/java/org/apache/solr/cloud/api/collections/DeleteAliasCmd.java",
                "solr/core/src/java/org/apache/solr/cloud/api/collections/ModifyAliasCmd.java",
                "solr/core/src/java/org/apache/solr/cloud/api/collections/RoutedAliasCreateCollectionCmd.java",
                "solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "solr/core/src/java/org/apache/solr/handler/admin/RebalanceLeaders.java",
                "solr/core/src/java/org/apache/solr/servlet/HttpSolrCall.java",
                "solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor.java",
                "solr/core/src/java/org/apache/solr/util/DateMathParser.java",
                "solr/solr-ref-guide/src/collections-api.adoc",
                "solr/solrj/src/java/org/apache/solr/client/solrj/SolrResponse.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "solr/solrj/src/resources/apispec/collections.Commands.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11925": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "02b5172ea2e677e137b1d8563b335434433e048f"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11925",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "342e38217a85e9f2e6573e3635f0fed8b6c53262",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518167597,
            "hunks": 1,
            "message": "LUCENE-8163: BaseDirectoryTestCase produces random filenames that fail on Windows",
            "diff": [
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase.java",
                "index 2860ff9b507..733681b3f64 100644",
                "--- a/lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase.java",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase.java",
                "@@ -1188,6 +1188,4 @@ public abstract class BaseDirectoryTestCase extends LuceneTestCase {",
                "       while(names.size() < count) {",
                "-        String name = TestUtil.randomSimpleString(random());",
                "-        if (name.length() == 0) {",
                "-          continue;",
                "-        }",
                "+        // create a random filename (segment file name style), so it cannot hit windows problem with special filenames (\"con\", \"com1\",...):",
                "+        String name = IndexFileNames.segmentFileName(TestUtil.randomSimpleString(random(), 1, 6), TestUtil.randomSimpleString(random()), \"test\");",
                "         if (random().nextInt(5) == 1) {"
            ],
            "changed_files": [
                "lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8163": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "840831fae0af9fe9c887c0501431932e813a5143"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8163",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a42e4b36f106f6e0e609127b7956e02bb8aa4cfa",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519176627,
            "hunks": 4,
            "message": "SOLR-12006: Add a '*_t' and '*_t_sort' dynamic field for single valued text fields (cherry picked from commit a9f0272)",
            "diff": [
                "diff --git a/solr/core/src/test-files/solr/configsets/_default/conf/managed-schema b/solr/core/src/test-files/solr/configsets/_default/conf/managed-schema",
                "index 5a2ebaf2ee6..4168a83feef 100644",
                "--- a/solr/core/src/test-files/solr/configsets/_default/conf/managed-schema",
                "+++ b/solr/core/src/test-files/solr/configsets/_default/conf/managed-schema",
                "@@ -133,2 +133,3 @@",
                "     <dynamicField name=\"*_ls\" type=\"plongs\"   indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_t\" type=\"text_general\" indexed=\"true\" stored=\"true\" multiValued=\"false\"/>",
                "     <dynamicField name=\"*_txt\" type=\"text_general\" indexed=\"true\" stored=\"true\"/>",
                "@@ -300,2 +301,3 @@",
                " \t  -->",
                "+    <dynamicField name=\"*_t_sort\" type=\"text_gen_sort\" indexed=\"true\" stored=\"true\" multiValued=\"false\"/>",
                "     <dynamicField name=\"*_txt_sort\" type=\"text_gen_sort\" indexed=\"true\" stored=\"true\"/>",
                "diff --git a/solr/server/solr/configsets/_default/conf/managed-schema b/solr/server/solr/configsets/_default/conf/managed-schema",
                "index 5a2ebaf2ee6..4168a83feef 100644",
                "--- a/solr/server/solr/configsets/_default/conf/managed-schema",
                "+++ b/solr/server/solr/configsets/_default/conf/managed-schema",
                "@@ -133,2 +133,3 @@",
                "     <dynamicField name=\"*_ls\" type=\"plongs\"   indexed=\"true\"  stored=\"true\"/>",
                "+    <dynamicField name=\"*_t\" type=\"text_general\" indexed=\"true\" stored=\"true\" multiValued=\"false\"/>",
                "     <dynamicField name=\"*_txt\" type=\"text_general\" indexed=\"true\" stored=\"true\"/>",
                "@@ -300,2 +301,3 @@",
                " \t  -->",
                "+    <dynamicField name=\"*_t_sort\" type=\"text_gen_sort\" indexed=\"true\" stored=\"true\" multiValued=\"false\"/>",
                "     <dynamicField name=\"*_txt_sort\" type=\"text_gen_sort\" indexed=\"true\" stored=\"true\"/>"
            ],
            "changed_files": [
                "solr/core/src/test-files/solr/configsets/_default/conf/managed-schema",
                "solr/server/solr/configsets/_default/conf/managed-schema"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12006": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a9f0272380438df88d29ed7c41572136f999f8db"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file, server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12006",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9d82e793a1b716bd886cdb94a1bdf688a2dee1d2",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518457408,
            "hunks": 6,
            "message": "LUCENE-8167: fix some incompleteEnumSwitch warnings in solr/core",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java b/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java",
                "index dcd1cbc81fa..be6e9560599 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java",
                "@@ -733,2 +733,4 @@ public class ExpandComponent extends SearchComponent implements PluginInfoInitia",
                "           return Double.toString(Double.longBitsToDouble(val));",
                "+        case DATE:",
                "+          break;",
                "       }",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/component/RangeFacetProcessor.java b/solr/core/src/java/org/apache/solr/handler/component/RangeFacetProcessor.java",
                "index f8ab7b71811..6f2fc266c76 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/component/RangeFacetProcessor.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/component/RangeFacetProcessor.java",
                "@@ -198,2 +198,5 @@ public class RangeFacetProcessor extends SimpleFacets {",
                "               break;",
                "+            case ALL:",
                "+            case NONE:",
                "+              break;",
                "           }",
                "diff --git a/solr/core/src/java/org/apache/solr/search/PointMerger.java b/solr/core/src/java/org/apache/solr/search/PointMerger.java",
                "index 22ae05c7b36..59a6fb38cbc 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/PointMerger.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/PointMerger.java",
                "@@ -81,2 +81,4 @@ public class PointMerger {",
                "             break;",
                "+          case DATE:",
                "+            break;",
                "         }",
                "diff --git a/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java b/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java",
                "index 714d1270be3..4d944d239ba 100644",
                "--- a/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java",
                "+++ b/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java",
                "@@ -390,2 +390,7 @@ public class SolrDispatchFilter extends BaseSolrFilter {",
                "             break;",
                "+          case ADMIN:",
                "+          case PROCESS:",
                "+          case REMOTEQUERY:",
                "+          case RETURN:",
                "+            break;",
                "         }",
                "diff --git a/solr/core/src/java/org/apache/solr/uninverting/UninvertingReader.java b/solr/core/src/java/org/apache/solr/uninverting/UninvertingReader.java",
                "index 7158e316380..967db541414 100644",
                "--- a/solr/core/src/java/org/apache/solr/uninverting/UninvertingReader.java",
                "+++ b/solr/core/src/java/org/apache/solr/uninverting/UninvertingReader.java",
                "@@ -311,2 +311,10 @@ public class UninvertingReader extends FilterLeafReader {",
                "         case LEGACY_DOUBLE: return FieldCache.DEFAULT.getNumerics(in, field, FieldCache.LEGACY_DOUBLE_PARSER);",
                "+        case BINARY:",
                "+        case SORTED:",
                "+        case SORTED_SET_BINARY:",
                "+        case SORTED_SET_DOUBLE:",
                "+        case SORTED_SET_FLOAT:",
                "+        case SORTED_SET_INTEGER:",
                "+        case SORTED_SET_LONG:",
                "+          break;",
                "       }",
                "@@ -361,2 +369,13 @@ public class UninvertingReader extends FilterLeafReader {",
                "           return FieldCache.DEFAULT.getDocTermOrds(in, field, null);",
                "+        case BINARY:",
                "+        case LEGACY_DOUBLE:",
                "+        case LEGACY_FLOAT:",
                "+        case LEGACY_INTEGER:",
                "+        case LEGACY_LONG:",
                "+        case DOUBLE_POINT:",
                "+        case FLOAT_POINT:",
                "+        case INTEGER_POINT:",
                "+        case LONG_POINT:",
                "+        case SORTED:",
                "+          break;",
                "       }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java",
                "solr/core/src/java/org/apache/solr/handler/component/RangeFacetProcessor.java",
                "solr/core/src/java/org/apache/solr/search/PointMerger.java",
                "solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java",
                "solr/core/src/java/org/apache/solr/uninverting/UninvertingReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8167": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "af5acc898ed8da7b459dd44e9accb19baf3cedd5"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8167",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7d07fbee5f991d97db2dd08bbc16348f6a83b465",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1517620224,
            "hunks": 11,
            "message": "LUCENE-8033: FieldInfos always use dense encoding FieldInfos always use an array to store FieldInfo byNumber Signed-off-by: Adrien Grand <jpountz@gmail.com> Closes #320",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java b/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java",
                "index 3e68693253a..9666fd9f356 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java",
                "@@ -27,4 +27,4 @@ import java.util.Map;",
                " import java.util.Set;",
                "-import java.util.SortedMap;",
                "-import java.util.TreeMap;",
                "+import java.util.Arrays;",
                "+import java.util.List;",
                "@@ -47,4 +47,3 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "   // used only by fieldInfo(int)",
                "-  private final FieldInfo[] byNumberTable; // contiguous",
                "-  private final SortedMap<Integer,FieldInfo> byNumberMap; // sparse",
                "+  private final FieldInfo[] byNumber;",
                "@@ -65,4 +64,5 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "     boolean hasPointValues = false;",
                "-    ",
                "-    TreeMap<Integer, FieldInfo> byNumber = new TreeMap<>();",
                "+",
                "+    int size = 0; // number of elements in byNumberTemp, number of used array slots",
                "+    FieldInfo[] byNumberTemp = new FieldInfo[10]; // initial array capacity of 10",
                "     for (FieldInfo info : infos) {",
                "@@ -71,3 +71,7 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "       }",
                "-      FieldInfo previous = byNumber.put(info.number, info);",
                "+      size = info.number >= size ? info.number+1 : size;",
                "+      if (info.number >= byNumberTemp.length){ //grow array",
                "+        byNumberTemp = ArrayUtil.grow(byNumberTemp, info.number + 1);",
                "+      }",
                "+      FieldInfo previous = byNumberTemp[info.number];",
                "       if (previous != null) {",
                "@@ -75,2 +79,4 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "       }",
                "+      byNumberTemp[info.number] = info;",
                "+",
                "       previous = byName.put(info.name, info);",
                "@@ -79,3 +85,3 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "       }",
                "-      ",
                "+",
                "       hasVectors |= info.hasVectors();",
                "@@ -98,21 +104,12 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "     this.hasPointValues = hasPointValues;",
                "-    Integer max = byNumber.isEmpty() ? null : byNumber.lastKey();",
                "-    ",
                "-    // Only usee TreeMap in the very sparse case (< 1/16th of the numbers are used),",
                "-    // because TreeMap uses ~ 64 (32 bit JVM) or 120 (64 bit JVM w/o compressed oops)",
                "-    // overall bytes per entry, but array uses 4 (32 bit JMV) or 8",
                "-    // (64 bit JVM w/o compressed oops):",
                "-    if (max != null && max < ArrayUtil.MAX_ARRAY_LENGTH && max < 16L*byNumber.size()) {",
                "-      // Pull infos into an arraylist to avoid holding a reference to the TreeMap",
                "-      values = Collections.unmodifiableCollection(new ArrayList<>(byNumber.values()));",
                "-      byNumberMap = null;",
                "-      byNumberTable = new FieldInfo[max+1];",
                "-      for (Map.Entry<Integer,FieldInfo> entry : byNumber.entrySet()) {",
                "-        byNumberTable[entry.getKey()] = entry.getValue();",
                "+",
                "+    List<FieldInfo> valuesTemp = new ArrayList<>();",
                "+    byNumber = new FieldInfo[size];",
                "+    for(int i=0; i<size; i++){",
                "+      byNumber[i] = byNumberTemp[i];",
                "+      if (byNumberTemp[i] != null) {",
                "+        valuesTemp.add(byNumberTemp[i]);",
                "       }",
                "-    } else {",
                "-      byNumberMap = byNumber;",
                "-      values = Collections.unmodifiableCollection(byNumber.values());",
                "-      byNumberTable = null;",
                "     }",
                "+    values = Collections.unmodifiableCollection(Arrays.asList(valuesTemp.toArray(new FieldInfo[0])));",
                "   }",
                "@@ -194,10 +191,6 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "     }",
                "-    if (byNumberTable != null) {",
                "-      if (fieldNumber >= byNumberTable.length) {",
                "-        return null;",
                "-      }",
                "-      return byNumberTable[fieldNumber];",
                "-    } else {",
                "-      return byNumberMap.get(fieldNumber);",
                "+    if (fieldNumber >= byNumber.length) {",
                "+      return null;",
                "     }",
                "+    return byNumber[fieldNumber];",
                "   }"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/index/FieldInfos.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8033": ""
            },
            "ghissue_refs": {
                "320": "Should FieldInfos always use a dense encoding? [LUCENE-8033] apache/lucene#9081"
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c87b58cf78062989d406592e6b816d86179c4171"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8033",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 320",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b17052e8520bb57bcfe126aa2f8e6bd0b9aa76c5",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520515900,
            "hunks": 50,
            "message": "SOLR-11670: Implement a periodic house-keeping task.",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "index 3b7802b5b7b..a9c83291617 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "@@ -168,5 +168,7 @@ public class AutoScaling {",
                "+  public static final String AUTO_ADD_REPLICAS_TRIGGER_NAME = \".auto_add_replicas\";",
                "+",
                "   public static final String AUTO_ADD_REPLICAS_TRIGGER_DSL =",
                "       \"    {\" +",
                "-      \"        'name' : '.auto_add_replicas',\" +",
                "+      \"        'name' : '\" + AUTO_ADD_REPLICAS_TRIGGER_NAME + \"',\" +",
                "       \"        'event' : 'nodeLost',\" +",
                "@@ -187,2 +189,25 @@ public class AutoScaling {",
                "   public static final Map<String, Object> AUTO_ADD_REPLICAS_TRIGGER_PROPS = (Map) Utils.fromJSONString(AUTO_ADD_REPLICAS_TRIGGER_DSL);",
                "+",
                "+  public static final String SCHEDULED_MAINTENANCE_TRIGGER_NAME = \".scheduled_maintenance\";",
                "+",
                "+  public static final String SCHEDULED_MAINTENANCE_TRIGGER_DSL =",
                "+          \"    {\" +",
                "+          \"        'name' : '\" + SCHEDULED_MAINTENANCE_TRIGGER_NAME + \"',\" +",
                "+          \"        'event' : 'scheduled',\" +",
                "+          \"        'startTime' : 'NOW',\" +",
                "+          \"        'every' : '+1DAY',\" +",
                "+          \"        'enabled' : true,\" +",
                "+          \"        'actions' : [\" +",
                "+          \"            {\" +",
                "+          \"                'name':'inactive_shard_plan',\" +",
                "+          \"                'class':'solr.InactiveShardPlanAction'\" +",
                "+          \"            },\" +",
                "+          \"            {\" +",
                "+          \"                'name':'execute_plan',\" +",
                "+          \"                'class':'solr.ExecutePlanAction'\" +",
                "+          \"            }\" +",
                "+          \"        ]\" +",
                "+          \"    }\";",
                "+",
                "+  public static final Map<String, Object> SCHEDULED_MAINTENANCE_TRIGGER_PROPS = (Map) Utils.fromJSONString(SCHEDULED_MAINTENANCE_TRIGGER_DSL);",
                " }",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ExecutePlanAction.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ExecutePlanAction.java",
                "index bce080613f5..fd318a1076b 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ExecutePlanAction.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ExecutePlanAction.java",
                "@@ -47,3 +47,3 @@ import org.slf4j.LoggerFactory;",
                "  * This class is responsible for executing cluster operations read from the {@link ActionContext}'s properties",
                "- * with the key name \"operations\"",
                "+ * with the key name \"operations\".",
                "  */",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/InactiveShardPlanAction.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/InactiveShardPlanAction.java",
                "new file mode 100644",
                "index 00000000000..6667d1273e2",
                "--- /dev/null",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/InactiveShardPlanAction.java",
                "@@ -0,0 +1,102 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.cloud.autoscaling;",
                "+",
                "+import java.lang.invoke.MethodHandles;",
                "+import java.util.ArrayList;",
                "+import java.util.LinkedHashMap;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+import java.util.concurrent.TimeUnit;",
                "+",
                "+import org.apache.solr.client.solrj.SolrRequest;",
                "+import org.apache.solr.client.solrj.cloud.autoscaling.SolrCloudManager;",
                "+import org.apache.solr.client.solrj.request.CollectionAdminRequest;",
                "+import org.apache.solr.common.cloud.ClusterState;",
                "+import org.apache.solr.common.cloud.Slice;",
                "+import org.apache.solr.common.cloud.ZkStateReader;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+/**",
                "+ * This class checks whether there are shards that have been inactive for a long",
                "+ * time (which usually means they are left-overs from shard splitting) and requests their removal",
                "+ * after their cleanup TTL period elapsed.",
                "+ * <p>Shard delete requests are put into the {@link ActionContext}'s properties",
                "+ * with the key name \"operations\". The value is a List of SolrRequest objects.</p>",
                "+ */",
                "+public class InactiveShardPlanAction extends TriggerActionBase {",
                "+  private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "+",
                "+  public static final String TTL_PROP = \"ttl\";",
                "+",
                "+  public static final int DEFAULT_TTL_SECONDS = 3600 * 24 * 2;",
                "+",
                "+  private int cleanupTTL;",
                "+",
                "+  @Override",
                "+  public void init(Map<String, String> args) {",
                "+    super.init(args);",
                "+    String cleanupStr = args.getOrDefault(TTL_PROP, String.valueOf(DEFAULT_TTL_SECONDS));",
                "+    try {",
                "+      cleanupTTL = Integer.parseInt(cleanupStr);",
                "+    } catch (Exception e) {",
                "+      log.warn(\"Invalid \" + TTL_PROP + \" value: '\" + cleanupStr + \"', using default \" + DEFAULT_TTL_SECONDS);",
                "+      cleanupTTL = DEFAULT_TTL_SECONDS;",
                "+    }",
                "+    if (cleanupTTL < 0) {",
                "+      log.warn(\"Invalid \" + TTL_PROP + \" value: '\" + cleanupStr + \"', using default \" + DEFAULT_TTL_SECONDS);",
                "+      cleanupTTL = DEFAULT_TTL_SECONDS;",
                "+    }",
                "+  }",
                "+",
                "+  @Override",
                "+  public void process(TriggerEvent event, ActionContext context) throws Exception {",
                "+    SolrCloudManager cloudManager = context.getCloudManager();",
                "+    ClusterState state = cloudManager.getClusterStateProvider().getClusterState();",
                "+    Map<String, List<String>> cleanup = new LinkedHashMap<>();",
                "+    Map<String, List<String>> inactive = new LinkedHashMap<>();",
                "+    state.forEachCollection(coll ->",
                "+      coll.getSlices().forEach(s -> {",
                "+        if (Slice.State.INACTIVE.equals(s.getState())) {",
                "+          inactive.computeIfAbsent(coll.getName(), c -> new ArrayList<>()).add(s.getName());",
                "+          String tstampStr = s.getStr(ZkStateReader.STATE_TIMESTAMP_PROP);",
                "+          if (tstampStr == null || tstampStr.isEmpty()) {",
                "+            return;",
                "+          }",
                "+          long timestamp = Long.parseLong(tstampStr);",
                "+          // this timestamp uses epoch time",
                "+          long currentTime = cloudManager.getTimeSource().getEpochTime();",
                "+          long delta = TimeUnit.NANOSECONDS.toSeconds(currentTime - timestamp);",
                "+          log.debug(\"{}/{}: tstamp={}, time={}, delta={}\", coll.getName(), s.getName(), timestamp, currentTime, delta);",
                "+          if (delta > cleanupTTL) {",
                "+            log.debug(\"-- delete inactive {} / {}\", coll.getName(), s.getName());",
                "+            List<SolrRequest> operations = (List<SolrRequest>)context.getProperties().computeIfAbsent(\"operations\", k -> new ArrayList<>());",
                "+            operations.add(CollectionAdminRequest.deleteShard(coll.getName(), s.getName()));",
                "+            cleanup.computeIfAbsent(coll.getName(), c -> new ArrayList<>()).add(s.getName());",
                "+          }",
                "+        }",
                "+      })",
                "+    );",
                "+    if (!cleanup.isEmpty()) {",
                "+      Map<String, Object> results = new LinkedHashMap<>();",
                "+      results.put(\"inactive\", inactive);",
                "+      results.put(\"cleanup\", cleanup);",
                "+      context.getProperties().put(getName(), results);",
                "+    }",
                "+  }",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread.java",
                "index 717e666510d..d75453af4b1 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread.java",
                "@@ -123,2 +123,3 @@ public class OverseerTriggerThread implements Runnable, SolrCloseable {",
                "     // we automatically add a trigger for auto add replicas if it does not exists already",
                "+    // we also automatically add a scheduled maintenance trigger",
                "     while (!isClosed)  {",
                "@@ -126,6 +127,7 @@ public class OverseerTriggerThread implements Runnable, SolrCloseable {",
                "         AutoScalingConfig autoScalingConfig = cloudManager.getDistribStateManager().getAutoScalingConfig();",
                "-        AutoScalingConfig withAutoAddReplicasTrigger = withAutoAddReplicasTrigger(autoScalingConfig);",
                "-        if (withAutoAddReplicasTrigger.equals(autoScalingConfig)) break;",
                "-        log.debug(\"Adding .autoAddReplicas trigger\");",
                "-        cloudManager.getDistribStateManager().setData(SOLR_AUTOSCALING_CONF_PATH, Utils.toJSON(withAutoAddReplicasTrigger), withAutoAddReplicasTrigger.getZkVersion());",
                "+        AutoScalingConfig updatedConfig = withAutoAddReplicasTrigger(autoScalingConfig);",
                "+        updatedConfig = withScheduledMaintenanceTrigger(updatedConfig);",
                "+        if (updatedConfig.equals(autoScalingConfig)) break;",
                "+        log.debug(\"Adding .auto_add_replicas and .scheduled_maintenance triggers\");",
                "+        cloudManager.getDistribStateManager().setData(SOLR_AUTOSCALING_CONF_PATH, Utils.toJSON(updatedConfig), updatedConfig.getZkVersion());",
                "         break;",
                "@@ -340,2 +342,11 @@ public class OverseerTriggerThread implements Runnable, SolrCloseable {",
                "     Map<String, Object> triggerProps = AutoScaling.AUTO_ADD_REPLICAS_TRIGGER_PROPS;",
                "+    return withDefaultTrigger(triggerProps, autoScalingConfig);",
                "+  }",
                "+",
                "+  private AutoScalingConfig withScheduledMaintenanceTrigger(AutoScalingConfig autoScalingConfig) {",
                "+    Map<String, Object> triggerProps = AutoScaling.SCHEDULED_MAINTENANCE_TRIGGER_PROPS;",
                "+    return withDefaultTrigger(triggerProps, autoScalingConfig);",
                "+  }",
                "+",
                "+  private AutoScalingConfig withDefaultTrigger(Map<String, Object> triggerProps, AutoScalingConfig autoScalingConfig) {",
                "     String triggerName = (String) triggerProps.get(\"name\");",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "index 6aeac2cf261..2bfa7f5b2b5 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "@@ -30,2 +30,3 @@ import java.util.Map;",
                " import java.util.TimeZone;",
                "+import java.util.concurrent.TimeUnit;",
                "@@ -34,2 +35,3 @@ import org.apache.solr.client.solrj.cloud.autoscaling.TriggerEventType;",
                " import org.apache.solr.common.SolrException;",
                "+import org.apache.solr.common.util.TimeSource;",
                " import org.apache.solr.core.SolrResourceLoader;",
                "@@ -145,2 +147,3 @@ public class ScheduledTrigger extends TriggerBase {",
                "+    TimeSource timeSource = cloudManager.getTimeSource();",
                "     DateMathParser dateMathParser = new DateMathParser(timeZone);",
                "@@ -158,3 +161,4 @@ public class ScheduledTrigger extends TriggerBase {",
                "-    Instant now = Instant.now(); // todo how to play well with simulation framework?",
                "+    Instant now = Instant.ofEpochMilli(",
                "+        TimeUnit.NANOSECONDS.toMillis(timeSource.getEpochTime()));",
                "     AutoScaling.TriggerEventProcessor processor = processorRef.get();",
                "@@ -184,3 +188,3 @@ public class ScheduledTrigger extends TriggerBase {",
                "       }",
                "-      if (processor.process(new ScheduledEvent(getEventType(), getName(), nextRunTime.toEpochMilli(),",
                "+      if (processor.process(new ScheduledEvent(getEventType(), getName(), timeSource.getTime(),",
                "           preferredOp, now.toEpochMilli()))) {",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "index b46fd58c8af..e313aaa4bb0 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "@@ -150,2 +150,6 @@ public class ScheduledTriggers implements Closeable {",
                "     }",
                "+",
                "+    // reset listeners early in order to capture first execution of newly scheduled triggers",
                "+    listeners.setAutoScalingConfig(autoScalingConfig);",
                "+",
                "     for (Map.Entry<String, Object> entry : currentProps.entrySet()) {",
                "@@ -180,8 +184,6 @@ public class ScheduledTriggers implements Closeable {",
                "     }",
                "-    this.autoScalingConfig = autoScalingConfig;",
                "+    this.autoScalingConfig = autoScalingConfig;",
                "     // reset cooldown",
                "     cooldownStart.set(cloudManager.getTimeSource().getTime() - cooldownPeriod.get());",
                "-",
                "-    listeners.setAutoScalingConfig(autoScalingConfig);",
                "   }",
                "@@ -228,2 +230,3 @@ public class ScheduledTriggers implements Closeable {",
                "     newTrigger.setProcessor(event -> {",
                "+      TriggerListeners triggerListeners = listeners.copy();",
                "       if (cloudManager.isClosed()) {",
                "@@ -231,3 +234,3 @@ public class ScheduledTriggers implements Closeable {",
                "         log.warn(msg);",
                "-        listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.ABORTED, msg);",
                "+        triggerListeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.ABORTED, msg);",
                "         return false;",
                "@@ -237,3 +240,3 @@ public class ScheduledTriggers implements Closeable {",
                "         String msg = String.format(Locale.ROOT, \"Ignoring autoscaling event %s because the source trigger: %s doesn't exist.\", event.toString(), event.getSource());",
                "-        listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.FAILED, msg);",
                "+        triggerListeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.FAILED, msg);",
                "         log.warn(msg);",
                "@@ -245,3 +248,3 @@ public class ScheduledTriggers implements Closeable {",
                "         String msg = String.format(Locale.ROOT, \"Ignoring autoscaling event %s because the source trigger: %s has already been closed\", event.toString(), source);",
                "-        listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.ABORTED, msg);",
                "+        triggerListeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.ABORTED, msg);",
                "         log.warn(msg);",
                "@@ -253,3 +256,3 @@ public class ScheduledTriggers implements Closeable {",
                "         event.getProperties().put(TriggerEvent.IGNORED, true);",
                "-        listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.IGNORED, \"Event was ignored.\");",
                "+        triggerListeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.IGNORED, \"Event was ignored.\");",
                "         return true; // always return true for ignored events",
                "@@ -261,3 +264,3 @@ public class ScheduledTriggers implements Closeable {",
                "         event.getProperties().put(TriggerEvent.COOLDOWN, true);",
                "-        listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.IGNORED, \"In cooldown period.\");",
                "+        triggerListeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.IGNORED, \"In cooldown period.\");",
                "         return false;",
                "@@ -277,3 +280,3 @@ public class ScheduledTriggers implements Closeable {",
                "         // fire STARTED event listeners after enqueuing the event is successful",
                "-        listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.STARTED);",
                "+        triggerListeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.STARTED);",
                "         List<TriggerAction> actions = source.getActions();",
                "@@ -282,3 +285,3 @@ public class ScheduledTriggers implements Closeable {",
                "             String msg = String.format(Locale.ROOT, \"Ignoring autoscaling event %s from trigger %s because the executor has already been closed\", event.toString(), source);",
                "-            listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.ABORTED, msg);",
                "+            triggerListeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.ABORTED, msg);",
                "             log.warn(msg);",
                "@@ -290,2 +293,3 @@ public class ScheduledTriggers implements Closeable {",
                "             long eventProcessingStart = cloudManager.getTimeSource().getTime();",
                "+            TriggerListeners triggerListeners1 = triggerListeners.copy();",
                "             log.debug(\"-- processing actions for \" + event);",
                "@@ -300,3 +304,3 @@ public class ScheduledTriggers implements Closeable {",
                "                 beforeActions.add(action.getName());",
                "-                listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.BEFORE_ACTION, action.getName(), actionContext);",
                "+                triggerListeners1.fireListeners(event.getSource(), event, TriggerEventProcessorStage.BEFORE_ACTION, action.getName(), actionContext);",
                "                 try {",
                "@@ -304,3 +308,3 @@ public class ScheduledTriggers implements Closeable {",
                "                 } catch (Exception e) {",
                "-                  listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.FAILED, action.getName(), actionContext, e, null);",
                "+                  triggerListeners1.fireListeners(event.getSource(), event, TriggerEventProcessorStage.FAILED, action.getName(), actionContext, e, null);",
                "                   throw new Exception(\"Error executing action: \" + action.getName() + \" for trigger event: \" + event, e);",
                "@@ -309,3 +313,3 @@ public class ScheduledTriggers implements Closeable {",
                "                 afterActions.add(action.getName());",
                "-                listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.AFTER_ACTION, action.getName(), actionContext);",
                "+                triggerListeners1.fireListeners(event.getSource(), event, TriggerEventProcessorStage.AFTER_ACTION, action.getName(), actionContext);",
                "               }",
                "@@ -315,3 +319,3 @@ public class ScheduledTriggers implements Closeable {",
                "               }",
                "-              listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.SUCCEEDED);",
                "+              triggerListeners1.fireListeners(event.getSource(), event, TriggerEventProcessorStage.SUCCEEDED);",
                "             } catch (Exception e) {",
                "@@ -335,3 +339,3 @@ public class ScheduledTriggers implements Closeable {",
                "           }",
                "-          listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.SUCCEEDED);",
                "+          triggerListeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.SUCCEEDED);",
                "           hasPendingActions.set(false);",
                "@@ -343,3 +347,3 @@ public class ScheduledTriggers implements Closeable {",
                "         // there is an action in the queue and we don't want to enqueue another until it is complete",
                "-        listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.IGNORED, \"Already processing another event.\");",
                "+        triggerListeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.IGNORED, \"Already processing another event.\");",
                "         return false;",
                "@@ -598,2 +602,23 @@ public class ScheduledTriggers implements Closeable {",
                "+    public TriggerListeners() {",
                "+",
                "+    }",
                "+",
                "+    private TriggerListeners(Map<String, Map<TriggerEventProcessorStage, List<TriggerListener>>> listenersPerStage,",
                "+                             Map<String, TriggerListener> listenersPerName) {",
                "+      this.listenersPerStage = new HashMap<>();",
                "+      listenersPerStage.forEach((n, listeners) -> {",
                "+        Map<TriggerEventProcessorStage, List<TriggerListener>> perStage = this.listenersPerStage.computeIfAbsent(n, name -> new HashMap<>());",
                "+        listeners.forEach((s, lst) -> {",
                "+          List<TriggerListener> newLst = perStage.computeIfAbsent(s, stage -> new ArrayList<>());",
                "+          newLst.addAll(lst);",
                "+        });",
                "+      });",
                "+      this.listenersPerName = new HashMap<>(listenersPerName);",
                "+    }",
                "+",
                "+    public TriggerListeners copy() {",
                "+      return new TriggerListeners(listenersPerStage, listenersPerName);",
                "+    }",
                "+",
                "     void setAutoScalingConfig(AutoScalingConfig autoScalingConfig) {",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator.java b/solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator.java",
                "index 87bf48160a1..1cd198d2a35 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator.java",
                "@@ -180,2 +180,4 @@ public class SliceMutator {",
                "       props.put(ZkStateReader.STATE_PROP, message.getStr(key));",
                "+      // we need to use epoch time so that it's comparable across Overseer restarts",
                "+      props.put(ZkStateReader.STATE_TIMESTAMP_PROP, String.valueOf(dataProvider.getTimeSource().getEpochTime()));",
                "       Slice newSlice = new Slice(slice.getName(), slice.getReplicasCopy(), props);",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AlreadyExistsException.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AlreadyExistsException.java",
                "index 608b254d123..e29bd6f0231 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AlreadyExistsException.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AlreadyExistsException.java",
                "@@ -23,11 +23,11 @@ public class AlreadyExistsException extends Exception {",
                "-  private final String path;",
                "+  private final String id;",
                "-  public AlreadyExistsException(String path) {",
                "-    super(\"Path already exists: \" + path);",
                "-    this.path = path;",
                "+  public AlreadyExistsException(String id) {",
                "+    super(\"Already exists: \" + id);",
                "+    this.id = id;",
                "   }",
                "-  public String getPath() {",
                "-    return path;",
                "+  public String getId() {",
                "+    return id;",
                "   }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "index cd2de97073c..1a4e7ad94b4 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "@@ -97,2 +97,3 @@ public class ZkStateReader implements Closeable {",
                "   public static final String MAX_WAIT_SECONDS_PROP = \"maxWaitSeconds\";",
                "+  public static final String STATE_TIMESTAMP_PROP = \"stateTimestamp\";",
                "   public static final String COLLECTIONS_ZKNODE = \"/collections\";",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "index f9f3df86952..8409a041801 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "@@ -120,3 +120,4 @@ public interface CollectionParams {",
                "     DELETENODE(true, LockLevel.NONE),",
                "-    MOCK_REPLICA_TASK(false, LockLevel.REPLICA)",
                "+    MOCK_REPLICA_TASK(false, LockLevel.REPLICA),",
                "+    NONE(false, LockLevel.NONE)",
                "     ;",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/util/TimeSource.java b/solr/solrj/src/java/org/apache/solr/common/util/TimeSource.java",
                "index ca535cb3bd1..35ef0699489 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/util/TimeSource.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/util/TimeSource.java",
                "@@ -27,5 +27,6 @@ import org.slf4j.LoggerFactory;",
                " /**",
                "- * Source of time. NOTE: depending on implementation returned values may not be related in any way to the",
                "- * current Epoch or calendar time, and they may even be negative - but the API guarantees that they are",
                "- * always monotonically increasing.",
                "+ * Source of time.",
                "+ * <p>NOTE: depending on implementation returned values may not be related in any way to the",
                "+ * current Epoch or calendar time, and they may even be negative - but the API guarantees that",
                "+ * they are always monotonically increasing.</p>",
                "  */",
                "@@ -34,3 +35,7 @@ public abstract class TimeSource {",
                "-  /** Implementation that uses {@link System#currentTimeMillis()}. */",
                "+  /**",
                "+   * Implementation that uses {@link System#currentTimeMillis()}.",
                "+   * This implementation's {@link #getTime()} returns the same values as",
                "+   * {@link #getEpochTime()}.",
                "+   */",
                "   public static final class CurrentTimeSource extends TimeSource {",
                "@@ -43,2 +48,7 @@ public abstract class TimeSource {",
                "+    @Override",
                "+    public long getEpochTime() {",
                "+      return getTime();",
                "+    }",
                "+",
                "     @Override",
                "@@ -54,4 +64,16 @@ public abstract class TimeSource {",
                "-  /** Implementation that uses {@link System#nanoTime()}. */",
                "+  /**",
                "+   * Implementation that uses {@link System#nanoTime()}.",
                "+   * Epoch time is initialized using {@link CurrentTimeSource}, and then",
                "+   * calculated as the elapsed number of nanoseconds as measured by this",
                "+   * implementation.",
                "+   */",
                "   public static final class NanoTimeSource extends TimeSource {",
                "+    private final long epochStart;",
                "+    private final long nanoStart;",
                "+",
                "+    public NanoTimeSource() {",
                "+      epochStart = CURRENT_TIME.getTime();",
                "+      nanoStart = System.nanoTime();",
                "+    }",
                "@@ -62,2 +84,7 @@ public abstract class TimeSource {",
                "+    @Override",
                "+    public long getEpochTime() {",
                "+      return epochStart + getTime() - nanoStart;",
                "+    }",
                "+",
                "     @Override",
                "@@ -77,6 +104,7 @@ public abstract class TimeSource {",
                "     final double multiplier;",
                "-    long start;",
                "+    final long nanoStart;",
                "+    final long epochStart;",
                "     /**",
                "-     * Create a simulated time source that runs faster than real time by a multipler.",
                "+     * Create a simulated time source that runs faster than real time by a multiplier.",
                "      * @param multiplier must be greater than 0.0",
                "@@ -85,7 +113,9 @@ public abstract class TimeSource {",
                "       this.multiplier = multiplier;",
                "-      start = NANO_TIME.getTime();",
                "+      epochStart = CURRENT_TIME.getTime();",
                "+      nanoStart = NANO_TIME.getTime();",
                "     }",
                "-    public void advance(long delta) {",
                "-      start = getTime() + delta;",
                "+    @Override",
                "+    public long getTime() {",
                "+      return nanoStart + Math.round((double)(NANO_TIME.getTime() - nanoStart) * multiplier);",
                "     }",
                "@@ -93,4 +123,4 @@ public abstract class TimeSource {",
                "     @Override",
                "-    public long getTime() {",
                "-      return start + Math.round((double)(NANO_TIME.getTime() - start) * multiplier);",
                "+    public long getEpochTime() {",
                "+      return epochStart + getTime() - nanoStart;",
                "     }",
                "@@ -153,3 +183,4 @@ public abstract class TimeSource {",
                "   /**",
                "-   * Return a time value, in nanosecond unit.",
                "+   * Return a time value, in nanosecond units. Depending on implementation this value may or",
                "+   * may not be related to Epoch time.",
                "    */",
                "@@ -157,2 +188,9 @@ public abstract class TimeSource {",
                "+  /**",
                "+   * Return Epoch time. Implementations that are not natively based on epoch time may",
                "+   * return values that are consistently off by a (small) fixed number of milliseconds from",
                "+   * the actual epoch time.",
                "+   */",
                "+  public abstract long getEpochTime();",
                "+",
                "   public abstract void sleep(long ms) throws InterruptedException;"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ExecutePlanAction.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/InactiveShardPlanAction.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/OverseerTriggerThread.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "solr/core/src/java/org/apache/solr/cloud/overseer/SliceMutator.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AlreadyExistsException.java",
                "solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "solr/solrj/src/java/org/apache/solr/common/util/TimeSource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11670": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11670",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "51e712c068a87fb92ee489c449a2664313fcb6b1",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519909928,
            "hunks": 13,
            "message": "Add version 6.6.3",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/util/Version.java b/lucene/core/src/java/org/apache/lucene/util/Version.java",
                "index 1d4ad0057cb..ef0320ec214 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/util/Version.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/util/Version.java",
                "@@ -231,2 +231,9 @@ public final class Version {",
                "    * Match settings and bugs in Lucene's 6.6.2 release.",
                "+   * @deprecated (6.6.3) Use latest",
                "+   */",
                "+  @Deprecated",
                "+  public static final Version LUCENE_6_6_2 = new Version(6, 6, 2);",
                "+",
                "+  /**",
                "+   * Match settings and bugs in Lucene's 6.6.3 release.",
                "    * <p>",
                "@@ -235,3 +242,3 @@ public final class Version {",
                "    */",
                "-  public static final Version LUCENE_6_6_2 = new Version(6, 6, 2);",
                "+  public static final Version LUCENE_6_6_3 = new Version(6, 6, 3);",
                "@@ -256,3 +263,3 @@ public final class Version {",
                "    */",
                "-  public static final Version LATEST = LUCENE_6_6_2;",
                "+  public static final Version LATEST = LUCENE_6_6_3;",
                "diff --git a/lucene/version.properties b/lucene/version.properties",
                "index c914798518b..681b1dad772 100644",
                "--- a/lucene/version.properties",
                "+++ b/lucene/version.properties",
                "@@ -4,3 +4,3 @@",
                " # enter new base version (format \"x.y.z\", no prefix/appendix): ",
                "-version.base=6.6.2",
                "+version.base=6.6.3",
                "diff --git a/solr/example/example-DIH/solr/atom/conf/solrconfig.xml b/solr/example/example-DIH/solr/atom/conf/solrconfig.xml",
                "index 71203f7d522..c03100db7d8 100644",
                "--- a/solr/example/example-DIH/solr/atom/conf/solrconfig.xml",
                "+++ b/solr/example/example-DIH/solr/atom/conf/solrconfig.xml",
                "@@ -38,3 +38,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.2</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "diff --git a/solr/example/example-DIH/solr/db/conf/solrconfig.xml b/solr/example/example-DIH/solr/db/conf/solrconfig.xml",
                "index 37859a6b327..54b6afad752 100644",
                "--- a/solr/example/example-DIH/solr/db/conf/solrconfig.xml",
                "+++ b/solr/example/example-DIH/solr/db/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.2</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "diff --git a/solr/example/example-DIH/solr/mail/conf/solrconfig.xml b/solr/example/example-DIH/solr/mail/conf/solrconfig.xml",
                "index faa3ec664b3..8dc89230956 100644",
                "--- a/solr/example/example-DIH/solr/mail/conf/solrconfig.xml",
                "+++ b/solr/example/example-DIH/solr/mail/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.2</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "diff --git a/solr/example/example-DIH/solr/solr/conf/solrconfig.xml b/solr/example/example-DIH/solr/solr/conf/solrconfig.xml",
                "index 340962d692e..53aec4edafc 100644",
                "--- a/solr/example/example-DIH/solr/solr/conf/solrconfig.xml",
                "+++ b/solr/example/example-DIH/solr/solr/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.2</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "diff --git a/solr/example/example-DIH/solr/tika/conf/solrconfig.xml b/solr/example/example-DIH/solr/tika/conf/solrconfig.xml",
                "index 975f49d3095..5c3f0756487 100644",
                "--- a/solr/example/example-DIH/solr/tika/conf/solrconfig.xml",
                "+++ b/solr/example/example-DIH/solr/tika/conf/solrconfig.xml",
                "@@ -38,3 +38,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.2</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "diff --git a/solr/example/files/conf/solrconfig.xml b/solr/example/files/conf/solrconfig.xml",
                "index 524cd7aa15a..38b5dfeae14 100644",
                "--- a/solr/example/files/conf/solrconfig.xml",
                "+++ b/solr/example/files/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.2</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "diff --git a/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml b/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml",
                "index c54d3604a7f..d8f09f9112f 100644",
                "--- a/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml",
                "+++ b/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.2</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "diff --git a/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml b/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml",
                "index c70bf46aeac..97ef7da2cf5 100644",
                "--- a/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml",
                "+++ b/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.2</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "diff --git a/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml b/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml",
                "index a2315f91ca3..7541fa3d5f0 100644",
                "--- a/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml",
                "+++ b/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.2</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.3</luceneMatchVersion>"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/util/Version.java",
                "lucene/version.properties",
                "solr/example/example-DIH/solr/atom/conf/solrconfig.xml",
                "solr/example/example-DIH/solr/db/conf/solrconfig.xml",
                "solr/example/example-DIH/solr/mail/conf/solrconfig.xml",
                "solr/example/example-DIH/solr/solr/conf/solrconfig.xml",
                "solr/example/example-DIH/solr/tika/conf/solrconfig.xml",
                "solr/example/files/conf/solrconfig.xml",
                "solr/server/solr/configsets/basic_configs/conf/solrconfig.xml",
                "solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml",
                "solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "32b894aaa0313bd12e2d0a9579465f271380333d"
                ],
                [
                    "no-tag",
                    "b61d1e377f7b5126ae7c4b6f8576ba2adb59eb82"
                ],
                [
                    "no-tag",
                    "a1a9794a86ecd9d16a7b9a4161cae2e638032b0f"
                ],
                [
                    "no-tag",
                    "a1eab0ed1cbf1d570f01db3bf959c6e8c875fb73"
                ]
            ],
            "tags": [
                "releases/lucene-solr/6.6.3",
                "releases/lucene-solr/6.6.4",
                "releases/lucene-solr/6.6.5",
                "releases/lucene-solr/6.6.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file, server",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6ace2123f4cedcb9f73eda9cb5381136daacb8d7",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520358529,
            "hunks": 2,
            "message": "Add release 6.6.3 to DOAP files",
            "diff": [
                "diff --git a/dev-tools/doap/lucene.rdf b/dev-tools/doap/lucene.rdf",
                "index 12caed36f6e..c33666d4c68 100644",
                "--- a/dev-tools/doap/lucene.rdf",
                "+++ b/dev-tools/doap/lucene.rdf",
                "@@ -104,2 +104,9 @@",
                "     </release>",
                "+    <release>",
                "+      <Version>",
                "+        <name>lucene-6.6.3</name>",
                "+        <created>2018-03-07</created>",
                "+        <revision>6.6.3</revision>",
                "+      </Version>",
                "+    </release>",
                "     <release>",
                "diff --git a/dev-tools/doap/solr.rdf b/dev-tools/doap/solr.rdf",
                "index 105e711c490..09bdb6bd2e6 100644",
                "--- a/dev-tools/doap/solr.rdf",
                "+++ b/dev-tools/doap/solr.rdf",
                "@@ -104,2 +104,9 @@",
                "     </release>",
                "+    <release>",
                "+      <Version>",
                "+        <name>solr-6.6.3</name>",
                "+        <created>2018-03-07</created>",
                "+        <revision>6.6.3</revision>",
                "+      </Version>",
                "+    </release>",
                "     <release>"
            ],
            "changed_files": [
                "dev-tools/doap/lucene.rdf",
                "dev-tools/doap/solr.rdf"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "378d799a22b9468e94d5f5ff3acc51bd7e8cc86e"
                ],
                [
                    "no-tag",
                    "b555f5c80cc60fdd6c3fc0fa8e389ee665edd95e"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "890e8a51f83f3d892b8553c282c2ae144b502030",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518696009,
            "hunks": 16,
            "message": "LUCENE-8134: Index options are no longer automatically downgraded.",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java b/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "index 4e05aa6c69e..f4627aa05f8 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "@@ -610,7 +610,3 @@ final class DefaultIndexingChain extends DocConsumer {",
                "       FieldInfo fi = fieldInfos.getOrAdd(name);",
                "-      // Messy: must set this here because e.g. FreqProxTermsWriterPerField looks at the initial",
                "-      // IndexOptions to decide what arrays it must create).  Then, we also must set it in",
                "-      // PerField.invert to allow for later downgrading of the index options:",
                "-      fi.setIndexOptions(fieldType.indexOptions());",
                "-      ",
                "+      initIndexOptions(fi, fieldType.indexOptions());",
                "       fp = new PerField(docWriter.getIndexCreatedVersionMajor(), fi, invert);",
                "@@ -632,6 +628,3 @@ final class DefaultIndexingChain extends DocConsumer {",
                "     } else if (invert && fp.invertState == null) {",
                "-      // Messy: must set this here because e.g. FreqProxTermsWriterPerField looks at the initial",
                "-      // IndexOptions to decide what arrays it must create).  Then, we also must set it in",
                "-      // PerField.invert to allow for later downgrading of the index options:",
                "-      fp.fieldInfo.setIndexOptions(fieldType.indexOptions());",
                "+      initIndexOptions(fp.fieldInfo, fieldType.indexOptions());",
                "       fp.setInvertState();",
                "@@ -642,2 +635,13 @@ final class DefaultIndexingChain extends DocConsumer {",
                "+  private void initIndexOptions(FieldInfo info, IndexOptions indexOptions) {",
                "+    // Messy: must set this here because e.g. FreqProxTermsWriterPerField looks at the initial",
                "+    // IndexOptions to decide what arrays it must create).",
                "+    assert info.getIndexOptions() == IndexOptions.NONE;",
                "+    info.setIndexOptions(indexOptions);",
                "+    // This is the first time we are seeing this field indexed, so we now",
                "+    // record the index options so that any future attempt to (illegally)",
                "+    // change the index options of this field, will throw an IllegalArgExc:",
                "+    fieldInfos.globalFieldNumbers.setIndexOptions(info.number, info.name, indexOptions);",
                "+  }",
                "+",
                "   /** NOTE: not static: accesses at least docState, termsHash. */",
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/FieldInfo.java b/lucene/core/src/java/org/apache/lucene/index/FieldInfo.java",
                "index 422292b98db..037fe5c1bc7 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/FieldInfo.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/FieldInfo.java",
                "@@ -139,4 +139,3 @@ public final class FieldInfo {",
                "       } else if (indexOptions != IndexOptions.NONE) {",
                "-        // downgrade",
                "-        this.indexOptions = this.indexOptions.compareTo(indexOptions) < 0 ? this.indexOptions : indexOptions;",
                "+        throw new IllegalArgumentException(\"cannot change field \\\"\" + name + \"\\\" from index options=\" + this.indexOptions + \" to inconsistent index options=\" + indexOptions);",
                "       }",
                "@@ -228,4 +227,3 @@ public final class FieldInfo {",
                "       } else if (newIndexOptions != IndexOptions.NONE) {",
                "-        // downgrade",
                "-        indexOptions = indexOptions.compareTo(newIndexOptions) < 0 ? indexOptions : newIndexOptions;",
                "+        throw new IllegalArgumentException(\"cannot change field \\\"\" + name + \"\\\" from index options=\" + indexOptions + \" to inconsistent index options=\" + newIndexOptions);",
                "       }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java b/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java",
                "index 9666fd9f356..6036112b395 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java",
                "@@ -211,2 +211,3 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "     private final Map<String,Integer> nameToNumber;",
                "+    private final Map<String, IndexOptions> indexOptions;",
                "     // We use this to enforce that a given field never",
                "@@ -226,2 +227,3 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "       this.numberToName = new HashMap<>();",
                "+      this.indexOptions = new HashMap<>();",
                "       this.docValuesType = new HashMap<>();",
                "@@ -236,3 +238,11 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "      */",
                "-    synchronized int addOrGet(String fieldName, int preferredFieldNumber, DocValuesType dvType, int dimensionCount, int dimensionNumBytes) {",
                "+    synchronized int addOrGet(String fieldName, int preferredFieldNumber, IndexOptions indexOptions, DocValuesType dvType, int dimensionCount, int dimensionNumBytes) {",
                "+      if (indexOptions != IndexOptions.NONE) {",
                "+        IndexOptions currentOpts = this.indexOptions.get(fieldName);",
                "+        if (currentOpts == null) {",
                "+          this.indexOptions.put(fieldName, indexOptions);",
                "+        } else if (currentOpts != IndexOptions.NONE && currentOpts != indexOptions) {",
                "+          throw new IllegalArgumentException(\"cannot change field \\\"\" + fieldName + \"\\\" from index options=\" + currentOpts + \" to inconsistent index options=\" + indexOptions);",
                "+        }",
                "+      }",
                "       if (dvType != DocValuesType.NONE) {",
                "@@ -279,2 +289,15 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "+    synchronized void verifyConsistent(Integer number, String name, IndexOptions indexOptions) {",
                "+      if (name.equals(numberToName.get(number)) == false) {",
                "+        throw new IllegalArgumentException(\"field number \" + number + \" is already mapped to field name \\\"\" + numberToName.get(number) + \"\\\", not \\\"\" + name + \"\\\"\");",
                "+      }",
                "+      if (number.equals(nameToNumber.get(name)) == false) {",
                "+        throw new IllegalArgumentException(\"field name \\\"\" + name + \"\\\" is already mapped to field number \\\"\" + nameToNumber.get(name) + \"\\\", not \\\"\" + number + \"\\\"\");",
                "+      }",
                "+      IndexOptions currentIndexOptions = this.indexOptions.get(name);",
                "+      if (indexOptions != IndexOptions.NONE && currentIndexOptions != null && currentIndexOptions != IndexOptions.NONE && indexOptions != currentIndexOptions) {",
                "+        throw new IllegalArgumentException(\"cannot change index options from \" + currentIndexOptions + \" to \" + indexOptions + \" for field \\\"\" + name + \"\\\"\");",
                "+      }",
                "+    }",
                "+",
                "     synchronized void verifyConsistent(Integer number, String name, DocValuesType dvType) {",
                "@@ -331,2 +354,3 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "       nameToNumber.clear();",
                "+      indexOptions.clear();",
                "       docValuesType.clear();",
                "@@ -335,2 +359,7 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "+    synchronized void setIndexOptions(int number, String name, IndexOptions indexOptions) {",
                "+      verifyConsistent(number, name, indexOptions);",
                "+      this.indexOptions.put(name, indexOptions);",
                "+    }",
                "+",
                "     synchronized void setDocValuesType(int number, String name, DocValuesType dvType) {",
                "@@ -386,3 +415,3 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "         // else we'll allocate a new one:",
                "-        final int fieldNumber = globalFieldNumbers.addOrGet(name, -1, DocValuesType.NONE, 0, 0);",
                "+        final int fieldNumber = globalFieldNumbers.addOrGet(name, -1, IndexOptions.NONE, DocValuesType.NONE, 0, 0);",
                "         fi = new FieldInfo(name, fieldNumber, false, false, false, IndexOptions.NONE, DocValuesType.NONE, -1, new HashMap<>(), 0, 0);",
                "@@ -412,3 +441,3 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "         // else we'll allocate a new one:",
                "-        final int fieldNumber = globalFieldNumbers.addOrGet(name, preferredFieldNumber, docValues, dimensionCount, dimensionNumBytes);",
                "+        final int fieldNumber = globalFieldNumbers.addOrGet(name, preferredFieldNumber, indexOptions, docValues, dimensionCount, dimensionNumBytes);",
                "         fi = new FieldInfo(name, fieldNumber, storeTermVector, omitNorms, storePayloads, indexOptions, docValues, dvGen, new HashMap<>(), dimensionCount, dimensionNumBytes);",
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java",
                "index c03964266d0..dcc3be5d071 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/IndexWriter.java",
                "@@ -1221,3 +1221,3 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable {",
                "       for(FieldInfo fi : fis) {",
                "-        map.addOrGet(fi.name, fi.number, fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());",
                "+        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());",
                "       }",
                "@@ -2880,3 +2880,3 @@ public class IndexWriter implements Closeable, TwoPhaseCommit, Accountable {",
                "               // This will throw exceptions if any of the incoming fields have an illegal schema change:",
                "-              globalFieldNumberMap.addOrGet(fi.name, fi.number, fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());",
                "+              globalFieldNumberMap.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());",
                "             }",
                "diff --git a/solr/core/src/test-files/solr/configsets/backcompat/conf/schema.xml b/solr/core/src/test-files/solr/configsets/backcompat/conf/schema.xml",
                "index b49edd2592b..6bcc4e0e5e6 100644",
                "--- a/solr/core/src/test-files/solr/configsets/backcompat/conf/schema.xml",
                "+++ b/solr/core/src/test-files/solr/configsets/backcompat/conf/schema.xml",
                "@@ -19,3 +19,3 @@",
                "   <fieldType name=\"string\" class=\"solr.StrField\"/>",
                "-  <field name=\"id\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" />",
                "+  <field name=\"id\" type=\"string\" indexed=\"true\" stored=\"true\" required=\"true\" multiValued=\"false\" omitTermFreqAndPositions=\"true\" />",
                "   <uniquekey>id</uniquekey>"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "lucene/core/src/java/org/apache/lucene/index/FieldInfo.java",
                "lucene/core/src/java/org/apache/lucene/index/FieldInfos.java",
                "lucene/core/src/java/org/apache/lucene/index/IndexWriter.java",
                "solr/core/src/test-files/solr/configsets/backcompat/conf/schema.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8134": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8134",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "34d3282edee1ce63e3554b5008c86888f403ea21",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519032476,
            "hunks": 3,
            "message": "LUCENE-8134: Fix validation of index options. There were test failures in case inconsistent index options were introduced in a new segment because checks were not done in the right order.",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java b/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "index f4627aa05f8..e4e9773f272 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "@@ -639,3 +639,2 @@ final class DefaultIndexingChain extends DocConsumer {",
                "     assert info.getIndexOptions() == IndexOptions.NONE;",
                "-    info.setIndexOptions(indexOptions);",
                "     // This is the first time we are seeing this field indexed, so we now",
                "@@ -644,2 +643,3 @@ final class DefaultIndexingChain extends DocConsumer {",
                "     fieldInfos.globalFieldNumbers.setIndexOptions(info.number, info.name, indexOptions);",
                "+    info.setIndexOptions(indexOptions);",
                "   }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java b/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java",
                "index 6036112b395..78e8e14711c 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/FieldInfos.java",
                "@@ -298,3 +298,3 @@ public class FieldInfos implements Iterable<FieldInfo> {",
                "       if (indexOptions != IndexOptions.NONE && currentIndexOptions != null && currentIndexOptions != IndexOptions.NONE && indexOptions != currentIndexOptions) {",
                "-        throw new IllegalArgumentException(\"cannot change index options from \" + currentIndexOptions + \" to \" + indexOptions + \" for field \\\"\" + name + \"\\\"\");",
                "+        throw new IllegalArgumentException(\"cannot change field \\\"\" + name + \"\\\" from index options=\" + currentIndexOptions + \" to inconsistent index options=\" + indexOptions);",
                "       }"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "lucene/core/src/java/org/apache/lucene/index/FieldInfos.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8134": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: order",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8134",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0ba5124a1c0dcec651762724d0ccd6fb69911757",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518810921,
            "hunks": 3,
            "message": "SOLR-11897: Add toggle to disable auto-refresh of Logging page in the UI",
            "diff": [
                "diff --git a/solr/webapp/web/css/angular/logging.css b/solr/webapp/web/css/angular/logging.css",
                "index 67df73aa988..e28e771cfaf 100644",
                "--- a/solr/webapp/web/css/angular/logging.css",
                "+++ b/solr/webapp/web/css/angular/logging.css",
                "@@ -86,2 +86,16 @@ limitations under the License.",
                "+#content #logging #viewer #refresh-toggle {",
                "+  background-position: 0 50%;",
                "+  padding-left: 21px;",
                "+  width:45%;",
                "+}",
                "+",
                "+#content #logging #viewer #refresh-toggle.active {",
                "+  background-image: url( ../../img/ico/cross-button.png );",
                "+}",
                "+",
                "+#content #logging #viewer #refresh-toggle.stopped {",
                "+  background-image: url( ../../img/ico/arrow-circle.png ) ;",
                "+}",
                "+",
                " #content #logging #viewer table",
                "diff --git a/solr/webapp/web/js/angular/controllers/logging.js b/solr/webapp/web/js/angular/controllers/logging.js",
                "index 31747460a57..585c90a21c2 100644",
                "--- a/solr/webapp/web/js/angular/controllers/logging.js",
                "+++ b/solr/webapp/web/js/angular/controllers/logging.js",
                "@@ -80,3 +80,11 @@ solrAdminApp.controller('LoggingController',",
                "     $scope.refresh();",
                "-",
                "+    $scope.toggleRefresh = function() {",
                "+      if(!$scope.stopped) {",
                "+        $scope.stopped = true;",
                "+        $timeout.cancel($scope.timeout);",
                "+      } else {",
                "+        $scope.stopped = false;",
                "+        $scope.timeout = $timeout($scope.refresh, 10000);",
                "+      }",
                "+    };",
                "     $scope.toggleTimezone = function() {",
                "diff --git a/solr/webapp/web/partials/logging.html b/solr/webapp/web/partials/logging.html",
                "index 833806a7f34..9952360b302 100644",
                "--- a/solr/webapp/web/partials/logging.html",
                "+++ b/solr/webapp/web/partials/logging.html",
                "@@ -53,2 +53,3 @@ limitations under the License.",
                "       <div id=\"date-format\" ng-click=\"toggleTimezone()\"><a ng-class=\"{on: timezone=='UTC'}\">Show dates in UTC</a></div>",
                "+      <a id=\"refresh-toggle\" ng-class=\"{'active': !stopped, 'stopped': stopped}\" ng-click=\"toggleRefresh()\">Auto-Refresh</a>",
                "     </div>"
            ],
            "changed_files": [
                "solr/webapp/web/css/angular/logging.css",
                "solr/webapp/web/js/angular/controllers/logging.js",
                "solr/webapp/web/partials/logging.html"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11897": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "35cf4f6b316204114f94577ce283dcb49769f601"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11897",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "450a3d949006ce884d8d04535330d90581122a6f",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520212953,
            "hunks": 7,
            "message": "SOLR-12054: ebeAdd and ebeSubtract should support matrix operations",
            "diff": [
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/EBEAddEvaluator.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/EBEAddEvaluator.java",
                "index d385770210c..0c86a95a114 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/EBEAddEvaluator.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/EBEAddEvaluator.java",
                "@@ -24,2 +24,4 @@ import java.util.Locale;",
                " import org.apache.commons.math3.util.MathArrays;",
                "+import org.apache.commons.math3.linear.RealMatrix;",
                "+import org.apache.commons.math3.linear.Array2DRowRealMatrix;",
                " import org.apache.solr.client.solrj.io.stream.expr.StreamExpression;",
                "@@ -27,3 +29,3 @@ import org.apache.solr.client.solrj.io.stream.expr.StreamFactory;",
                "-public class EBEAddEvaluator extends RecursiveNumericEvaluator implements TwoValueWorker {",
                "+public class EBEAddEvaluator extends RecursiveObjectEvaluator implements TwoValueWorker {",
                "   protected static final long serialVersionUID = 1L;",
                "@@ -42,20 +44,25 @@ public class EBEAddEvaluator extends RecursiveNumericEvaluator implements TwoVal",
                "     }",
                "-    if(!(first instanceof List<?>)){",
                "-      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the first value, expecting a list of numbers\",toExpression(constructingFactory), first.getClass().getSimpleName()));",
                "-    }",
                "-    if(!(second instanceof List<?>)){",
                "-      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the second value, expecting a list of numbers\",toExpression(constructingFactory), first.getClass().getSimpleName()));",
                "-    }",
                "-    double[] result =  MathArrays.ebeAdd(",
                "-        ((List) first).stream().mapToDouble(value -> ((Number) value).doubleValue()).toArray(),",
                "-        ((List) second).stream().mapToDouble(value -> ((Number) value).doubleValue()).toArray()",
                "-    );",
                "+    if(first instanceof List && second instanceof List) {",
                "+      double[] result = MathArrays.ebeAdd(",
                "+          ((List) first).stream().mapToDouble(value -> ((Number) value).doubleValue()).toArray(),",
                "+          ((List) second).stream().mapToDouble(value -> ((Number) value).doubleValue()).toArray()",
                "+      );",
                "-    List<Number> numbers = new ArrayList();",
                "-    for(double d : result) {",
                "-      numbers.add(d);",
                "-    }",
                "+      List<Number> numbers = new ArrayList();",
                "+      for (double d : result) {",
                "+        numbers.add(d);",
                "+      }",
                "-    return numbers;",
                "+      return numbers;",
                "+    } else if(first instanceof Matrix && second instanceof Matrix) {",
                "+      double[][] data1 = ((Matrix) first).getData();",
                "+      double[][] data2 = ((Matrix) second).getData();",
                "+      Array2DRowRealMatrix matrix1 = new Array2DRowRealMatrix(data1);",
                "+      Array2DRowRealMatrix matrix2 = new Array2DRowRealMatrix(data2);",
                "+      RealMatrix matrix3 = matrix1.add(matrix2);",
                "+      return new Matrix(matrix3.getData());",
                "+    } else {",
                "+      throw new IOException(\"Parameters for ebeAdd must either be two numeric arrays or two matrices. \");",
                "+    }",
                "   }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/EBESubtractEvaluator.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/EBESubtractEvaluator.java",
                "index cd36e2361ba..ac7a96821cb 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/EBESubtractEvaluator.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/EBESubtractEvaluator.java",
                "@@ -23,2 +23,4 @@ import java.util.Locale;",
                "+import org.apache.commons.math3.linear.Array2DRowRealMatrix;",
                "+import org.apache.commons.math3.linear.RealMatrix;",
                " import org.apache.commons.math3.util.MathArrays;",
                "@@ -27,3 +29,3 @@ import org.apache.solr.client.solrj.io.stream.expr.StreamFactory;",
                "-public class EBESubtractEvaluator extends RecursiveNumericEvaluator implements TwoValueWorker {",
                "+public class EBESubtractEvaluator extends RecursiveObjectEvaluator implements TwoValueWorker {",
                "   protected static final long serialVersionUID = 1L;",
                "@@ -42,20 +44,24 @@ public class EBESubtractEvaluator extends RecursiveNumericEvaluator implements T",
                "     }",
                "-    if(!(first instanceof List<?>)){",
                "-      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the first value, expecting a list of numbers\",toExpression(constructingFactory), first.getClass().getSimpleName()));",
                "-    }",
                "-    if(!(second instanceof List<?>)){",
                "-      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the second value, expecting a list of numbers\",toExpression(constructingFactory), first.getClass().getSimpleName()));",
                "-    }",
                "+    if(first instanceof List && second instanceof List) {",
                "+      double[] result = MathArrays.ebeSubtract(",
                "+          ((List) first).stream().mapToDouble(value -> ((Number) value).doubleValue()).toArray(),",
                "+          ((List) second).stream().mapToDouble(value -> ((Number) value).doubleValue()).toArray()",
                "+      );",
                "-    double[] result =  MathArrays.ebeSubtract(",
                "-        ((List) first).stream().mapToDouble(value -> ((Number) value).doubleValue()).toArray(),",
                "-        ((List) second).stream().mapToDouble(value -> ((Number) value).doubleValue()).toArray()",
                "-    );",
                "+      List<Number> numbers = new ArrayList();",
                "+      for (double d : result) {",
                "+        numbers.add(d);",
                "+      }",
                "-    List<Number> numbers = new ArrayList();",
                "-    for(double d : result) {",
                "-      numbers.add(d);",
                "+      return numbers;",
                "+    } else if(first instanceof Matrix && second instanceof Matrix) {",
                "+      double[][] data1 = ((Matrix) first).getData();",
                "+      double[][] data2 = ((Matrix) second).getData();",
                "+      Array2DRowRealMatrix matrix1 = new Array2DRowRealMatrix(data1);",
                "+      Array2DRowRealMatrix matrix2 = new Array2DRowRealMatrix(data2);",
                "+      RealMatrix matrix3 = matrix1.subtract(matrix2);",
                "+      return new Matrix(matrix3.getData());",
                "+    } else {",
                "+      throw new IOException(\"Parameters for ebeSubtract must either be two numeric arrays or two matrices. \");",
                "     }",
                "-",
                "-    return numbers;",
                "   }"
            ],
            "changed_files": [
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/EBEAddEvaluator.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/EBESubtractEvaluator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12054": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "dc5db9b2f1050f1d1fc545c33f117ae4ec867983"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12054",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4ccf500800ee497fceb93f4727a89a8a4533bb10",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519772761,
            "hunks": 1,
            "message": "SOLR-12041: Fix random test failure in ChaosMonkeyNothingIsSafeWithPullReplicasTest",
            "diff": [
                "diff --git a/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java b/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java",
                "index be2b7dbac2a..c92329c80a0 100644",
                "--- a/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java",
                "+++ b/solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java",
                "@@ -2106,3 +2106,3 @@ public abstract class AbstractFullDistribZkTestBase extends AbstractDistribZkTes",
                "     for(Slice s:collection.getSlices()) {",
                "-      Replica leader = s.getLeader();",
                "+      Replica leader = zkStateReader.getLeaderRetry(collectionName, s.getName(), (int)timeout.timeLeft(TimeUnit.MILLISECONDS));",
                "       long leaderIndexVersion = -1;"
            ],
            "changed_files": [
                "solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12041": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "029432e9360b9e90610332e83b136e2334c0517f"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12041",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ce2386aaabc401bc89990597279eefeb67a914b0",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519975758,
            "hunks": 3,
            "message": "SOLR-11702: Remove old LIR call in SolrCmdDistributor and let DistributedUpdateProcessor handle it on finish()",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.java b/solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.java",
                "index b200f892f6f..08b397fbb20 100644",
                "--- a/solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.java",
                "+++ b/solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.java",
                "@@ -280,20 +280,10 @@ public class SolrCmdDistributor implements Closeable {",
                "       } catch (Exception e) {",
                "-        try {",
                "-          // if false, then the node is probably not \"live\" anymore",
                "-          // and we do not need to send a recovery message",
                "-          Throwable rootCause = SolrException.getRootCause(e);",
                "-          log.error(\"Setting up to try to start recovery on replica {}\", req.node.getUrl(), rootCause);",
                "-          req.cmd.getReq().getCore().getCoreContainer().getZkController().ensureReplicaInLeaderInitiatedRecovery(",
                "-              req.cmd.getReq().getCore().getCoreContainer(),",
                "-              req.node.getCollection(),",
                "-              req.node.getShardId(),",
                "-              req.node.getNodeProps(),",
                "-              req.cmd.getReq().getCore().getCoreDescriptor(),",
                "-              false /* forcePublishState */",
                "-          );",
                "-        } catch (Exception exc) {",
                "-          Throwable setLirZnodeFailedCause = SolrException.getRootCause(exc);",
                "-          log.error(\"Leader failed to set replica \" +",
                "-              req.node.getUrl() + \" state to DOWN due to: \" + setLirZnodeFailedCause, setLirZnodeFailedCause);",
                "+        SolrException.log(log, e);",
                "+        Error error = new Error();",
                "+        error.e = e;",
                "+        error.req = req;",
                "+        if (e instanceof SolrException) {",
                "+          error.statusCode = ((SolrException) e).code();",
                "         }",
                "+        errors.add(error);",
                "       }",
                "diff --git a/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java b/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java",
                "index 3cff1719782..b37cb9c915f 100644",
                "--- a/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java",
                "+++ b/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java",
                "@@ -884,2 +884,4 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "                 \"No request recovery command will be sent!\");",
                "+            // some replicas did not receive the updates, exception must be notified to clients",
                "+            errorsForClient.add(error);",
                "           } else {"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.java",
                "solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11702": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f1ce5419eebfa361f572802eb4a8b637c2849bb5"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11702",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1f3d971a757edd694adbc492f2de08263921eb01",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518272291,
            "hunks": 1,
            "message": "SOLR-3089: RequestBuilder now exposes isDistrib() method",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java b/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java",
                "index df0623e11fc..1f9e2d51183 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java",
                "@@ -141,2 +141,9 @@ public class ResponseBuilder",
                "+  /**",
                "+   * This function will return true if this was a distributed search request.",
                "+   */",
                "+  public boolean isDistributed() {",
                "+    return this.isDistrib;",
                "+  }",
                "+",
                "   public int getShardNum(String shard) {"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-3089": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f473329aac43e39f785d79385ad02a5baf692fc7"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-3089",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "939aedfed7a66065e2dfa42efb6fd4b53f9fab12",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519769292,
            "hunks": 1,
            "message": "SOLR-12028: add jenkins-nightly-badapples target",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index 09c5919af68..93415fba9a5 100755",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -643,3 +643,13 @@ Test args: [${args}]</echo>",
                "   </target>",
                "-  ",
                "+",
                "+  <target name=\"jenkins-nightly-badapples\">",
                "+    <antcall>",
                "+      <param name=\"is.jenkins.build\" value=\"true\"/>",
                "+      <param name=\"tests.haltonfailure\" value=\"false\"/>",
                "+      <param name=\"tests.nightly\" value=\"true\"/>",
                "+      <param name=\"tests.badapples\" value=\"true\"/>",
                "+      <target name=\"-jenkins-base\"/>",
                "+    </antcall>",
                "+  </target>",
                "+",
                "   <target name=\"jenkins-maven-nightly\" depends=\"-print-java-info,clean,clean-maven-build,resolve-groovy,resolve-markdown,install-maven-tasks\">"
            ],
            "changed_files": [
                "build.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12028": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "7f72a4a5262aaf9276d8f3b17c56ac35abe6d48f"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12028",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b4f8cd7ea6bcbf3974228857ff9d92b545e2c33e",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518912506,
            "hunks": 10,
            "message": "SOLR-11108: Shorten/improve _default-configset msg The bin/solr scripts print a warning message when a user creates a collection that makes use of the default config (which has settings not recommended for production). While helpful, this warning was a little too noisy.  It also suggested users resolve the issue with a provided curl command, but bin/solr is also capable of performing the same action. This commit cleans up the error message a bit.",
            "diff": [
                "diff --git a/solr/bin/solr b/solr/bin/solr",
                "index 1ef18fc68c8..4e178de9450 100755",
                "--- a/solr/bin/solr",
                "+++ b/solr/bin/solr",
                "@@ -297,3 +297,3 @@ function print_usage() {",
                "     echo \"Usage: solr COMMAND OPTIONS\"",
                "-    echo \"       where COMMAND is one of: start, stop, restart, status, healthcheck, create, create_core, create_collection, delete, version, zk, auth, assert\"",
                "+    echo \"       where COMMAND is one of: start, stop, restart, status, healthcheck, create, create_core, create_collection, delete, version, zk, auth, assert, config\"",
                "     echo \"\"",
                "@@ -897,2 +897,7 @@ fi",
                "+if [[ \"$SCRIPT_CMD\" == \"config\" ]]; then",
                "+  run_tool config $*",
                "+  exit $?",
                "+fi",
                "+",
                " # create a core or collection",
                "@@ -1017,7 +1022,4 @@ if [[ \"$SCRIPT_CMD\" == \"create\" || \"$SCRIPT_CMD\" == \"create_core\" || \"$SCRIPT_CM",
                "   if [[ \"$CREATE_CONFDIR\" == \"_default\" ]] && ([[ \"$CREATE_CONFNAME\" == \"\" ]] || [[ \"$CREATE_CONFNAME\" == \"_default\" ]]); then",
                "-    echo \"WARNING: Using _default configset. Data driven schema functionality is enabled by default, which is\"",
                "-    echo \"         NOT RECOMMENDED for production use.\"",
                "-    echo",
                "-    echo \"         To turn it off:\"",
                "-    echo \"            curl http://$SOLR_TOOL_HOST:$CREATE_PORT/solr/$CREATE_NAME/config -d '{\\\"set-user-property\\\": {\\\"update.autoCreateFields\\\":\\\"false\\\"}}'\"",
                "+    echo \"WARNING: Using _default configset with data driven schema functionality. NOT RECOMMENDED for production use.\"",
                "+    echo \"         To turn off: bin/solr config -c $CREATE_NAME -p $CREATE_PORT -property update.autoCreateFields -value false\"",
                "   fi",
                "diff --git a/solr/bin/solr.cmd b/solr/bin/solr.cmd",
                "index 40a0cf38510..dcff0c6af7a 100644",
                "--- a/solr/bin/solr.cmd",
                "+++ b/solr/bin/solr.cmd",
                "@@ -202,2 +202,3 @@ IF \"%1\"==\"-version\" goto get_version",
                " IF \"%1\"==\"assert\" goto run_assert",
                "+if \"%1\"==\"config\" goto run_config",
                "@@ -270,3 +271,3 @@ goto done",
                " @echo Usage: solr COMMAND OPTIONS",
                "-@echo        where COMMAND is one of: start, stop, restart, healthcheck, create, create_core, create_collection, delete, version, zk, auth, assert",
                "+@echo        where COMMAND is one of: start, stop, restart, healthcheck, create, create_core, create_collection, delete, version, zk, auth, assert, config",
                " @echo.",
                "@@ -1365,2 +1366,12 @@ goto done",
                "+:run_config",
                "+\"%JAVA%\" %SOLR_SSL_OPTS% %AUTHC_OPTS% %SOLR_ZK_CREDS_AND_ACLS% -Dsolr.install.dir=\"%SOLR_TIP%\" ^",
                "+  -Dlog4j.configuration=\"file:%DEFAULT_SERVER_DIR%\\scripts\\cloud-scripts\\log4j.properties\" ^",
                "+  -classpath \"%DEFAULT_SERVER_DIR%\\solr-webapp\\webapp\\WEB-INF\\lib\\*;%DEFAULT_SERVER_DIR%\\lib\\ext\\*\" ^",
                "+  org.apache.solr.util.SolrCLI %* ",
                "+if errorlevel 1 (",
                "+   exit /b 1",
                "+)",
                "+goto done",
                "+",
                " :get_version",
                "@@ -1477,6 +1488,4 @@ if \"!CREATE_PORT!\"==\"\" (",
                " if \"!CREATE_CONFDIR!\"==\"_default\" (",
                "-  echo WARNING: Using _default configset. Data driven schema functionality is enabled by default, which is",
                "-  echo          NOT RECOMMENDED for production use.",
                "-  echo          To turn it off:",
                "-  echo             curl http://%SOLR_TOOL_HOST%:!CREATE_PORT!/solr/!CREATE_NAME!/config -d '{\"set-user-property\": {\"update.autoCreateFields\":\"false\"}}'",
                "+  echo WARNING: Using _default configset with data driven schema functionality. NOT RECOMMENDED for production use.",
                "+  echo          To turn off: bin\\solr config -c !CREATE_NAME! -p !CREATE_PORT! -property update.autoCreateFields -value false",
                " )",
                "diff --git a/solr/core/src/java/org/apache/solr/util/SolrCLI.java b/solr/core/src/java/org/apache/solr/util/SolrCLI.java",
                "index f4cd7c7823f..266ef3a28a3 100644",
                "--- a/solr/core/src/java/org/apache/solr/util/SolrCLI.java",
                "+++ b/solr/core/src/java/org/apache/solr/util/SolrCLI.java",
                "@@ -240,3 +240,4 @@ public class SolrCLI {",
                "         .withDescription(\"Name of collection; no default\")",
                "-        .create(\"collection\"),",
                "+        .withLongOpt(\"collection\")",
                "+        .create(\"c\"),",
                "     OptionBuilder",
                "@@ -2527,3 +2528,17 @@ public class SolrCLI {",
                "               .withDescription(\"Base Solr URL, which can be used to determine the zkHost if that's not known\")",
                "-              .create(\"solrUrl\")",
                "+              .create(\"solrUrl\"),",
                "+          OptionBuilder",
                "+              .withArgName(\"PORT\")",
                "+              .hasArg()",
                "+              .isRequired(false)",
                "+              .withDescription(\"The port of the Solr node to use when applying configuration change\")",
                "+              .withLongOpt(\"port\")",
                "+              .create('p'),",
                "+          OptionBuilder",
                "+              .withArgName(\"SCHEME\")",
                "+              .hasArg()",
                "+              .isRequired(false)",
                "+              .withDescription(\"The scheme for accessing Solr.  Accepted values: http or https.  Default: http\")",
                "+              .withLongOpt(\"scheme\")",
                "+              .create('s')",
                "       };",
                "@@ -2533,3 +2548,15 @@ public class SolrCLI {",
                "     protected void runImpl(CommandLine cli) throws Exception {",
                "-      String solrUrl = resolveSolrUrl(cli);",
                "+      String solrUrl;",
                "+      try {",
                "+        solrUrl = resolveSolrUrl(cli);",
                "+      } catch (IllegalStateException e) {",
                "+        // Fallback to using the provided scheme and port",
                "+        final String scheme = cli.getOptionValue(\"scheme\", \"http\");",
                "+        if (cli.hasOption(\"port\")) {",
                "+          solrUrl = scheme + \"://localhost:\" + cli.getOptionValue(\"port\", \"8983\") + \"/solr\";",
                "+        } else {",
                "+          throw e;",
                "+        }",
                "+      }",
                "+",
                "       String action = cli.getOptionValue(\"action\", \"set-property\");"
            ],
            "changed_files": [
                "solr/bin/solr",
                "solr/bin/solr.cmd",
                "solr/core/src/java/org/apache/solr/util/SolrCLI.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11108": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a9435219d98940abbf24deb9098dcbf75d873dfc"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11108",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "96cd9c5d6279d23da8e86c241310d8aaf69bdf12",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520180625,
            "hunks": 5,
            "message": "LUCENE-8191: if a tokenstream has broken offsets, its broken. IndexWriter always checks, so a separate whitelist can't work",
            "diff": [
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/analysis/ValidatingTokenFilter.java b/lucene/test-framework/src/java/org/apache/lucene/analysis/ValidatingTokenFilter.java",
                "index b31b604fb75..7901eea5bf2 100644",
                "--- a/lucene/test-framework/src/java/org/apache/lucene/analysis/ValidatingTokenFilter.java",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/analysis/ValidatingTokenFilter.java",
                "@@ -51,3 +51,2 @@ public final class ValidatingTokenFilter extends TokenFilter {",
                "   private final CharTermAttribute termAtt = getAttribute(CharTermAttribute.class);",
                "-  private final boolean offsetsAreCorrect;",
                "@@ -58,6 +57,5 @@ public final class ValidatingTokenFilter extends TokenFilter {",
                "    *  instance in your chain). */",
                "-  public ValidatingTokenFilter(TokenStream in, String name, boolean offsetsAreCorrect) {",
                "+  public ValidatingTokenFilter(TokenStream in, String name) {",
                "     super(in);",
                "     this.name = name;",
                "-    this.offsetsAreCorrect = offsetsAreCorrect;",
                "   }",
                "@@ -87,3 +85,3 @@ public final class ValidatingTokenFilter extends TokenFilter {",
                "-      if (offsetsAreCorrect && offsetAtt.startOffset() < lastStartOffset) {",
                "+      if (offsetAtt.startOffset() < lastStartOffset) {",
                "         throw new IllegalStateException(name + \": offsets must not go backwards startOffset=\" + startOffset + \" is < lastStartOffset=\" + lastStartOffset);",
                "@@ -95,3 +93,3 @@ public final class ValidatingTokenFilter extends TokenFilter {",
                "-    if (offsetAtt != null && posIncAtt != null && offsetsAreCorrect) {",
                "+    if (offsetAtt != null && posIncAtt != null) {"
            ],
            "changed_files": [
                "lucene/test-framework/src/java/org/apache/lucene/analysis/ValidatingTokenFilter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8191": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "97299ed00699c248fc38465ee1b0eb0bb1561d3d"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8191",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "31d2a8eb631d867d94c05da1f949fd35be05b60e",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519086433,
            "hunks": 2,
            "message": "SOLR-11588: Add matrixMult Stream Evaluator to support matrix multiplication",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/StreamHandler.java b/solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "index f59c8ae5c26..d1c14229b45 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "@@ -318,2 +318,3 @@ public class StreamHandler extends RequestHandlerBase implements SolrCoreAware,",
                "         .withFunctionName(\"linfnorm\", LInfNormEvaluator.class)",
                "+        .withFunctionName(\"matrixMult\", MatrixMultiplyEvaluator.class)",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MatrixMultiplyEvaluator.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MatrixMultiplyEvaluator.java",
                "new file mode 100644",
                "index 00000000000..5f4f0d1c279",
                "--- /dev/null",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MatrixMultiplyEvaluator.java",
                "@@ -0,0 +1,67 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.client.solrj.io.eval;",
                "+",
                "+import java.io.IOException;",
                "+import java.util.List;",
                "+import java.util.Locale;",
                "+",
                "+import org.apache.commons.math3.linear.Array2DRowRealMatrix;",
                "+import org.apache.commons.math3.linear.RealMatrix;",
                "+",
                "+import org.apache.solr.client.solrj.io.stream.expr.StreamExpression;",
                "+import org.apache.solr.client.solrj.io.stream.expr.StreamFactory;",
                "+",
                "+public class MatrixMultiplyEvaluator extends RecursiveObjectEvaluator implements TwoValueWorker {",
                "+  protected static final long serialVersionUID = 1L;",
                "+",
                "+  public MatrixMultiplyEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{",
                "+    super(expression, factory);",
                "+  }",
                "+",
                "+  @Override",
                "+  public Object doWork(Object first, Object second) throws IOException {",
                "+    if(null == first){",
                "+      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the first value\",toExpression(constructingFactory)));",
                "+    }",
                "+    if(null == second){",
                "+      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the second value\",toExpression(constructingFactory)));",
                "+    }",
                "+",
                "+    RealMatrix realMatrix1 = getMatrix(first);",
                "+    RealMatrix realMatrix2 = getMatrix(second);",
                "+    RealMatrix realMatrix3 = realMatrix1.multiply(realMatrix2);",
                "+    return new Matrix(realMatrix3.getData());",
                "+",
                "+  }",
                "+",
                "+  private RealMatrix getMatrix(Object o) throws IOException {",
                "+    if(o instanceof Matrix) {",
                "+      Matrix matrix = (Matrix)o;",
                "+      return new Array2DRowRealMatrix(matrix.getData());",
                "+    } else if(o instanceof List) {",
                "+      List<Number> vec = (List<Number>)o;",
                "+      double[][] data1 = new double[1][vec.size()];",
                "+      for(int i=0; i<vec.size(); i++) {",
                "+        data1[0][i] = vec.get(i).doubleValue();",
                "+      }",
                "+      return new Array2DRowRealMatrix(data1);",
                "+    } else {",
                "+      throw new IOException(\"The matrixMult function can only be applied to numeric arrays and matrices:\"+o.getClass().toString());",
                "+    }",
                "+  }",
                "+}"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/MatrixMultiplyEvaluator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11588": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e746d7a00101cc919e396067110a5a1f004108b4"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11588",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e71286c8263646efe465ac7230a2f0000d7b34f9",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518795946,
            "hunks": 3,
            "message": "LUCENE-8106: always fast-forward merge after checkout",
            "diff": [
                "diff --git a/dev-tools/scripts/reproduceJenkinsFailures.py b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "index aa11ff36d86..fa561ec3a89 100644",
                "--- a/dev-tools/scripts/reproduceJenkinsFailures.py",
                "+++ b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "@@ -40,2 +40,3 @@ reTestOutputFile = re.compile(r'TEST-(.*\\.([^-.]+))(?:-\\d+)?\\.xml\\Z')",
                " reErrorFailure = re.compile(r'(?:errors|failures)=\"[^0]')",
                "+reGitMainBranch = re.compile(r'^(?:master|branch_[x_\\d]+)$')",
                "@@ -134,7 +135,4 @@ def prepareWorkspace(fetch, gitRef):",
                "     raise RuntimeError('ERROR: \"%s\" failed.  See above.' % checkoutCmd)",
                "-  if fetch:",
                "-    code = run('git pull')",
                "-    if 0 != code:",
                "-      raise RuntimeError('ERROR: \"git pull\" failed.  See above.')",
                "   gitCheckoutSucceeded = True",
                "+  run('git merge --ff-only', rememberFailure=False) # Ignore failure on non-branch ref",
                "   code = run('ant clean')"
            ],
            "changed_files": [
                "dev-tools/scripts/reproduceJenkinsFailures.py"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8106": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1a6d896dfc1bdafff3067a513bade205f6e1ad11"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8106",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "aa9bf0c6f65b3cae3288e64fa7811cdbce600470",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518720011,
            "hunks": 1,
            "message": "SOLR-11944: Ref Guide: Add examples of GeoJSON and WKT",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/spatial-search.adoc b/solr/solr-ref-guide/src/spatial-search.adoc",
                "index 2739d05433f..315fa2ae79c 100644",
                "--- a/solr/solr-ref-guide/src/spatial-search.adoc",
                "+++ b/solr/solr-ref-guide/src/spatial-search.adoc",
                "@@ -57,3 +57,15 @@ For indexing non-geodetic points, it depends. Use `x y` (a space) if RPT. For Po",
                "-If you'd rather use a standard industry format, Solr supports WKT and GeoJSON. However it's much bulkier than the raw coordinates for such simple data. (Not supported by the deprecated LatLonType or PointType)",
                "+If you'd rather use a standard industry format, Solr supports https://en.wikipedia.org/wiki/Well-known_text[WKT] and http://geojson.org/[GeoJSON]. However it's much bulkier than the raw coordinates for such simple data. (Not supported by the deprecated LatLonType or PointType)",
                "+",
                "+=== Indexing GeoJSON and WKT",
                "+",
                "+Using the `bin/post` tool:",
                "+",
                "+[source,text]",
                "+bin/post -type \"application/json\" -url \"http://localhost:8983/solr/mycollection/update?format=geojson\" /path/to/geojson.file",
                "+",
                "+The key parameter to pass in with your request is:",
                "+",
                "+`format`::",
                "+The format of the file to pass in.  Accepted values: `WKT` or `geojson`."
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/spatial-search.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11944": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "fa158f50e6a03b31ff038a1bc08515bc07838f22"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11944",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8b9a1adbae20309b4bda1583ad08bf7978b4323a",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520362551,
            "hunks": 23,
            "message": "SOLR-11066: Renamed the internal ScheduledTriggers.ScheduledTrigger inner class to TriggerWrapper to avoid confusion with the ScheduledTrigger added in this issue",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "index 0f2b705b0a4..b46fd58c8af 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "@@ -89,3 +89,3 @@ public class ScheduledTriggers implements Closeable {",
                "-  private final Map<String, ScheduledTrigger> scheduledTriggers = new ConcurrentHashMap<>();",
                "+  private final Map<String, TriggerWrapper> scheduledTriggerWrappers = new ConcurrentHashMap<>();",
                "@@ -159,6 +159,6 @@ public class ScheduledTriggers implements Closeable {",
                "             synchronized (this) {",
                "-              scheduledTriggers.forEach((s, scheduledTrigger) -> {",
                "-                if (scheduledTrigger.scheduledFuture.cancel(false)) {",
                "-                  scheduledTrigger.scheduledFuture = scheduledThreadPoolExecutor.scheduleWithFixedDelay(",
                "-                      scheduledTrigger, 0,",
                "+              scheduledTriggerWrappers.forEach((s, triggerWrapper) -> {",
                "+                if (triggerWrapper.scheduledFuture.cancel(false)) {",
                "+                  triggerWrapper.scheduledFuture = scheduledThreadPoolExecutor.scheduleWithFixedDelay(",
                "+                      triggerWrapper, 0,",
                "                       cloudManager.getTimeSource().convertDelay(TimeUnit.SECONDS, triggerDelay.get(), TimeUnit.MILLISECONDS),",
                "@@ -200,5 +200,5 @@ public class ScheduledTriggers implements Closeable {",
                "     }",
                "-    ScheduledTrigger st;",
                "+    TriggerWrapper st;",
                "     try {",
                "-      st = new ScheduledTrigger(newTrigger, cloudManager, queueStats);",
                "+      st = new TriggerWrapper(newTrigger, cloudManager, queueStats);",
                "     } catch (Exception e) {",
                "@@ -214,5 +214,5 @@ public class ScheduledTriggers implements Closeable {",
                "     }",
                "-    ScheduledTrigger scheduledTrigger = st;",
                "+    TriggerWrapper triggerWrapper = st;",
                "-    ScheduledTrigger old = scheduledTriggers.putIfAbsent(newTrigger.getName(), scheduledTrigger);",
                "+    TriggerWrapper old = scheduledTriggerWrappers.putIfAbsent(newTrigger.getName(), triggerWrapper);",
                "     if (old != null) {",
                "@@ -224,4 +224,4 @@ public class ScheduledTriggers implements Closeable {",
                "       newTrigger.restoreState(old.trigger);",
                "-      scheduledTrigger.setReplay(false);",
                "-      scheduledTriggers.replace(newTrigger.getName(), scheduledTrigger);",
                "+      triggerWrapper.setReplay(false);",
                "+      scheduledTriggerWrappers.replace(newTrigger.getName(), triggerWrapper);",
                "     }",
                "@@ -234,3 +234,3 @@ public class ScheduledTriggers implements Closeable {",
                "       }",
                "-      ScheduledTrigger scheduledSource = scheduledTriggers.get(event.getSource());",
                "+      TriggerWrapper scheduledSource = scheduledTriggerWrappers.get(event.getSource());",
                "       if (scheduledSource == null) {",
                "@@ -274,3 +274,3 @@ public class ScheduledTriggers implements Closeable {",
                "         } else {",
                "-          enqueued = scheduledTrigger.enqueue(event);",
                "+          enqueued = triggerWrapper.enqueue(event);",
                "         }",
                "@@ -312,3 +312,3 @@ public class ScheduledTriggers implements Closeable {",
                "               if (enqueued) {",
                "-                TriggerEvent ev = scheduledTrigger.dequeue();",
                "+                TriggerEvent ev = triggerWrapper.dequeue();",
                "                 assert ev.getId().equals(event.getId());",
                "@@ -329,5 +329,5 @@ public class ScheduledTriggers implements Closeable {",
                "           if (enqueued) {",
                "-            TriggerEvent ev = scheduledTrigger.dequeue();",
                "+            TriggerEvent ev = triggerWrapper.dequeue();",
                "             if (!ev.getId().equals(event.getId())) {",
                "-              throw new RuntimeException(\"Wrong event dequeued, queue of \" + scheduledTrigger.trigger.getName()",
                "+              throw new RuntimeException(\"Wrong event dequeued, queue of \" + triggerWrapper.trigger.getName()",
                "               + \" is broken! Expected event=\" + event + \" but got \" + ev);",
                "@@ -348,3 +348,3 @@ public class ScheduledTriggers implements Closeable {",
                "     newTrigger.init(); // mark as ready for scheduling",
                "-    scheduledTrigger.scheduledFuture = scheduledThreadPoolExecutor.scheduleWithFixedDelay(scheduledTrigger, 0,",
                "+    triggerWrapper.scheduledFuture = scheduledThreadPoolExecutor.scheduleWithFixedDelay(triggerWrapper, 0,",
                "         cloudManager.getTimeSource().convertDelay(TimeUnit.SECONDS, triggerDelay.get(), TimeUnit.MILLISECONDS),",
                "@@ -359,5 +359,5 @@ public class ScheduledTriggers implements Closeable {",
                "     if (log.isDebugEnabled()) {",
                "-      log.debug(\"Pausing all triggers: {}\", scheduledTriggers.keySet());",
                "+      log.debug(\"Pausing all triggers: {}\", scheduledTriggerWrappers.keySet());",
                "     }",
                "-    scheduledTriggers.forEach((s, scheduledTrigger) -> scheduledTrigger.scheduledFuture.cancel(false));",
                "+    scheduledTriggerWrappers.forEach((s, triggerWrapper) -> triggerWrapper.scheduledFuture.cancel(false));",
                "   }",
                "@@ -370,6 +370,6 @@ public class ScheduledTriggers implements Closeable {",
                "   public synchronized void resumeTriggers(long afterDelayMillis) {",
                "-    scheduledTriggers.forEach((s, scheduledTrigger) ->  {",
                "-      if (scheduledTrigger.scheduledFuture.isCancelled()) {",
                "+    scheduledTriggerWrappers.forEach((s, triggerWrapper) ->  {",
                "+      if (triggerWrapper.scheduledFuture.isCancelled()) {",
                "         log.debug(\"Resuming trigger: {} after {}ms\", s, afterDelayMillis);",
                "-        scheduledTrigger.scheduledFuture = scheduledThreadPoolExecutor.scheduleWithFixedDelay(scheduledTrigger, afterDelayMillis,",
                "+        triggerWrapper.scheduledFuture = scheduledThreadPoolExecutor.scheduleWithFixedDelay(triggerWrapper, afterDelayMillis,",
                "             cloudManager.getTimeSource().convertDelay(TimeUnit.SECONDS, triggerDelay.get(), TimeUnit.MILLISECONDS), TimeUnit.MILLISECONDS);",
                "@@ -456,3 +456,3 @@ public class ScheduledTriggers implements Closeable {",
                "   public synchronized void remove(String triggerName) {",
                "-    ScheduledTrigger removed = scheduledTriggers.remove(triggerName);",
                "+    TriggerWrapper removed = scheduledTriggerWrappers.remove(triggerName);",
                "     IOUtils.closeQuietly(removed);",
                "@@ -480,3 +480,3 @@ public class ScheduledTriggers implements Closeable {",
                "   public synchronized Set<String> getScheduledTriggerNames() {",
                "-    return Collections.unmodifiableSet(new HashSet<>(scheduledTriggers.keySet())); // shallow copy",
                "+    return Collections.unmodifiableSet(new HashSet<>(scheduledTriggerWrappers.keySet())); // shallow copy",
                "   }",
                "@@ -488,6 +488,6 @@ public class ScheduledTriggers implements Closeable {",
                "       isClosed = true;",
                "-      for (ScheduledTrigger scheduledTrigger : scheduledTriggers.values()) {",
                "-        IOUtils.closeQuietly(scheduledTrigger);",
                "+      for (TriggerWrapper triggerWrapper : scheduledTriggerWrappers.values()) {",
                "+        IOUtils.closeQuietly(triggerWrapper);",
                "       }",
                "-      scheduledTriggers.clear();",
                "+      scheduledTriggerWrappers.clear();",
                "     }",
                "@@ -500,3 +500,3 @@ public class ScheduledTriggers implements Closeable {",
                "-  private class ScheduledTrigger implements Runnable, Closeable {",
                "+  private class TriggerWrapper implements Runnable, Closeable {",
                "     AutoScaling.Trigger trigger;",
                "@@ -507,3 +507,3 @@ public class ScheduledTriggers implements Closeable {",
                "-    ScheduledTrigger(AutoScaling.Trigger trigger, SolrCloudManager cloudManager, Stats stats) throws IOException {",
                "+    TriggerWrapper(AutoScaling.Trigger trigger, SolrCloudManager cloudManager, Stats stats) throws IOException {",
                "       this.trigger = trigger;",
                "@@ -547,3 +547,3 @@ public class ScheduledTriggers implements Closeable {",
                "         // execution of the same trigger instance",
                "-        synchronized (ScheduledTrigger.this) {",
                "+        synchronized (TriggerWrapper.this) {",
                "           // replay accumulated events on first run, if any"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11066": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "052972780dd058d47a284221a035c58967d9f933"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11066",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "11a23a90292d9eec39af6b61984e11ac6bb169b2",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518217545,
            "hunks": 13,
            "message": "SOLR-11902: Clarify bin/solr -h text to describe which commands can be run remotely The bin/solr scripts contain a number of independent tools.  Many of these can be run anywhere and just pointed at the correct Solr or ZK host.  Some must run on the machine hosting Solr itself. This commit clarifies help text for each bin/solr command, indicating whether it can be run remotely, or must be run locally.",
            "diff": [
                "diff --git a/solr/bin/solr b/solr/bin/solr",
                "index 0ce19cbd4e5..1ef18fc68c8 100755",
                "--- a/solr/bin/solr",
                "+++ b/solr/bin/solr",
                "@@ -384,2 +384,4 @@ function print_usage() {",
                "     echo \"\"",
                "+    echo \"Can be run from remote (non-Solr) hosts, as long as a proper ZooKeeper connection is provided\"",
                "+    echo \"\"",
                "     echo \"  -c <collection>  Collection to run healthcheck against.\"",
                "@@ -394,3 +396,4 @@ function print_usage() {",
                "     echo \"\"",
                "-    echo \"  NOTE: This command will show the status of all running Solr servers\"",
                "+    echo \"  This command will show the status of all running Solr servers.\"",
                "+    echo \"  It can only detect those Solr servers running on the current host.\"",
                "     echo \"\"",
                "@@ -419,2 +422,4 @@ function print_usage() {",
                "     echo \"\"",
                "+    echo \"  Can be run on remote (non-Solr) hosts, as long as a valid SOLR_HOST is provided in solr.in.sh\"",
                "+    echo \"\"",
                "     echo \"  -c <name>               Name of the core / collection to delete\"",
                "@@ -433,2 +438,5 @@ function print_usage() {",
                "     echo \"\"",
                "+    echo \"When a configSet is used, this can be run from remote (non-Solr) hosts.  If pointing at a non-configSet directory, this\"",
                "+    echo \"must be run from the host that you wish to create the core on\"",
                "+    echo \"\"",
                "     echo \"  -c <core>     Name of core to create\"",
                "@@ -456,2 +464,3 @@ function print_usage() {",
                "     echo \"\"",
                "+    echo \"Can be run from remote (non-Solr) hosts, as long as a valid SOLR_HOST is provided in solr.in.sh\"",
                "     echo \"  -c <collection>         Name of collection to create\"",
                "@@ -490,2 +499,3 @@ function print_usage() {",
                "     print_short_zk_usage \"\"",
                "+    echo \"         Can be run on remote (non-Solr) hosts, as long as valid ZK_HOST information is provided\"",
                "     echo \"         Be sure to check the Solr logs in case of errors.\"",
                "@@ -571,2 +581,4 @@ function print_usage() {",
                "     echo \"\"",
                "+    echo \"  Updates or enables/disables authentication.  Must be run on the machine hosting Solr.\"",
                "+    echo \"\"",
                "     echo \"  -type <type>                           The authentication mechanism (basicAuth or kerberos) to enable. Defaults to 'basicAuth'.\"",
                "diff --git a/solr/bin/solr.cmd b/solr/bin/solr.cmd",
                "index 035a9db5ad7..40a0cf38510 100644",
                "--- a/solr/bin/solr.cmd",
                "+++ b/solr/bin/solr.cmd",
                "@@ -358,2 +358,4 @@ goto done",
                " @echo.",
                "+@echo Can be run from remote (non-Solr^) hosts, as long as a proper ZooKeeper connection is provided",
                "+@echo.",
                " @echo   -c collection  Collection to run healthcheck against.",
                "@@ -391,2 +393,4 @@ echo  You can override this behavior by passing -deleteConfig false when running",
                " echo.",
                "+echo  Can be run on remote (non-Solr^) hosts, as long as a valid SOLR_HOST is provided in solr.in.cmd",
                "+echo.",
                " echo   -c name     Name of core to create",
                "@@ -407,2 +411,5 @@ echo Usage: solr create_core [-c name] [-d confdir] [-p port] [-V]",
                " echo.",
                "+echo When a configSet is used, this can be run from any host.  If pointing at a non-configSet directory, this",
                "+echo must be run from the host that you wish to create the core on.",
                "+echo.",
                " echo   -c name     Name of core to create",
                "@@ -432,2 +439,4 @@ echo Usage: solr create_collection [-c name] [-d confdir] [-n confname] [-shards",
                " echo.",
                "+echo Can be run from remote (non-Solr^) hosts, as long as a valid SOLR_HOST is provided in solr.in.cmd.",
                "+echo.",
                " echo   -c name               Name of collection to create",
                "@@ -470,2 +479,3 @@ goto zk_short_usage",
                " :zk_full_usage",
                "+echo         Can be run on remote (non-Solr^) hosts, as long as valid ZK_HOST information is provided.",
                " echo         Be sure to check the Solr logs in case of errors.",
                "@@ -570,2 +580,4 @@ echo        solr auth disable [-updateIncludeFileOnly ^<true|false^>] [-V]",
                " echo",
                "+echo  Updates or enables/disables authentication.  Must be run on the machine hosting Solr.",
                "+echo",
                " echo   -type ^<type^>                 The authentication mechanism to enable. Defaults to 'basicAuth'."
            ],
            "changed_files": [
                "solr/bin/solr",
                "solr/bin/solr.cmd"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11902": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "09de0da79b09591f967d99648ef229c84a68d836"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11902",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "be7a811f61135890554a2a165a8ef6765b0a4310",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519074473,
            "hunks": 2,
            "message": "SOLR-11964: SOLR-11874: Docs for ulimits (system) and queryAnalyzerFieldType (spellcheck)",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/spell-checking.adoc b/solr/solr-ref-guide/src/spell-checking.adoc",
                "index 26ec194abb2..9936ece1ead 100644",
                "--- a/solr/solr-ref-guide/src/spell-checking.adoc",
                "+++ b/solr/solr-ref-guide/src/spell-checking.adoc",
                "@@ -193,2 +193,5 @@ This parameter specifies the maximum number of suggestions that the spellchecker",
                "+`spellcheck.queryAnalyzerFieldtype`::",
                "+This field type's analyzer is used by the QueryConverter to tokenize the value for \"q\" parameter. The field specified by this parameter should do minimal transformations, it's usually a best practice to avoid types that aggressively stem or ngram for instance.",
                "+",
                " `spellcheck.onlyMorePopular`::",
                "diff --git a/solr/solr-ref-guide/src/taking-solr-to-production.adoc b/solr/solr-ref-guide/src/taking-solr-to-production.adoc",
                "index 7097526424e..ca0f4ebe760 100644",
                "--- a/solr/solr-ref-guide/src/taking-solr-to-production.adoc",
                "+++ b/solr/solr-ref-guide/src/taking-solr-to-production.adoc",
                "@@ -248,2 +248,17 @@ SOLR_OPTS=\"$SOLR_OPTS -Dsolr.autoSoftCommit.maxTime=10000\"",
                "+=== File Handles and Processes (ulimit settings)",
                "+",
                "+Two common settings that result in errors on *nix systems are file handles and user processes. It is common for the default limits for number of processes and file handles to default to values that are too low for a large Solr installation. The required number of each of these will increase based on a combination of the number of replicas hosted per node and the number of segments in the index for each replica. The usual recommendation is to make processes and file handles at least 65,000 each, unlimited if possible. On most *nix systems, this command:",
                "+",
                "+[source,bash]",
                "+----",
                "+ulimit -a",
                "+----",
                "+will show the currently-defined limits. It is strongly recommended that file handle and process limits be permanently raised as above. The exact form of the command will vary per operating system, and some systems require editing configuration files and restarting your server. Consult your system administrators for guidance in your particular environment.",
                "+",
                "+[TIP]",
                "+====",
                "+If these limits are exceeded, the problems reported by Solr vary depending on the specific operation responsible for exceeding the limit. Errors such as to \"too many open files\", \"connection error\", and \"max processes exceeded\" have been reported, as well as SolrCloud recovery failures. Since exceeding these limits can result in such varied symptoms it is _strongly_ recommended that these limits be permanently raised as recommended above.",
                "+====",
                "+",
                " == Running Multiple Solr Nodes Per Host"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/spell-checking.adoc",
                "solr/solr-ref-guide/src/taking-solr-to-production.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11964": "",
                "SOLR-11874": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "aac11fc1209e7afeee49b112630ec421000e9195"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11964, SOLR-11874",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d317b130ecbe4e7811466a0bd335b6ff88fb39e7",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518457294,
            "hunks": 1,
            "message": "LUCENE-8167: fix three incompleteEnumSwitch warnings",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum.java b/lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum.java",
                "index 6498dc0f325..16f04abc6db 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum.java",
                "@@ -245,3 +245,5 @@ public abstract class FilteredTermsEnum extends TermsEnum {",
                "           return null;",
                "-        // NO: we just fall through and iterate again",
                "+        case NO:",
                "+          // we just iterate again",
                "+          break;",
                "       }"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/index/FilteredTermsEnum.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8167": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4e40679d257e665b0f408cc217dcd6877e4f1715"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8167",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dd08400a3db1c4119a704610ccc4db0d055d8d7f",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518535873,
            "hunks": 3,
            "message": "LUCENE-8171: Check only for exactly zero magnitude vector, and otherwise let the iterative code try to converge.",
            "diff": [
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "index 5209df8fb96..62b3f5ed4a1 100755",
                "--- a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "@@ -108,6 +108,5 @@ public class Vector {",
                "     final double magnitude = magnitude(thisX, thisY, thisZ);",
                "-    if (magnitude < MINIMUM_RESOLUTION) {",
                "+    if (magnitude == 0.0) {",
                "       throw new IllegalArgumentException(\"Degenerate/parallel vector constructed\");",
                "     }",
                "-    ",
                "     final double inverseMagnitude = 1.0/magnitude;",
                "@@ -217,3 +216,3 @@ public class Vector {",
                "     final double magnitude = magnitude(thisX, thisY, thisZ);",
                "-    if (magnitude < MINIMUM_RESOLUTION) {",
                "+    if (magnitude == 0.0) {",
                "       return true;"
            ],
            "changed_files": [
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8171": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "9d222fc7c7e33f8deb192227d703f00edd8e38ce"
                ],
                [
                    "no-tag",
                    "2de7a05f34e8e7a5a8a345c0d68e24be179f7f2c"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8171",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "16c57501a96aa8ecb77e88f81f044df8dc0add60",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520641756,
            "hunks": 1,
            "message": "SOLR-12067: Increase autoAddReplicas default 30 second wait time to 120 seconds (cherry picked from commit f0d46ea)",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/core/CloudConfig.java b/solr/core/src/java/org/apache/solr/core/CloudConfig.java",
                "index b971a0b7f3e..6248b457d03 100644",
                "--- a/solr/core/src/java/org/apache/solr/core/CloudConfig.java",
                "+++ b/solr/core/src/java/org/apache/solr/core/CloudConfig.java",
                "@@ -132,4 +132,3 @@ public class CloudConfig {",
                "-    // TODO: tune defaults",
                "-    private static final int DEFAULT_AUTO_REPLICA_FAILOVER_WAIT_AFTER_EXPIRATION = 30000;",
                "+    private static final int DEFAULT_AUTO_REPLICA_FAILOVER_WAIT_AFTER_EXPIRATION = 120000;"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/core/CloudConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12067": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f0d46ead45dbdd40540db958a621b0a583f6f9e8"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12067",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "08b9de9970a90d31dfec07e36faf8c1bc0a6c593",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518583677,
            "hunks": 25,
            "message": "LUCENE-8106: reproduceJenkinsFailures.py improvements: add cmdline option parsing; sort max failures to the bottom of the report; retest at branch tip first with and then without the seed if 100% of iterations fail.",
            "diff": [
                "diff --git a/dev-tools/scripts/reproduceJenkinsFailures.py b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "index bb3212376fc..aa11ff36d86 100644",
                "--- a/dev-tools/scripts/reproduceJenkinsFailures.py",
                "+++ b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "@@ -15,2 +15,3 @@",
                "+import argparse",
                " import os",
                "@@ -19,2 +20,3 @@ import subprocess",
                " import sys",
                "+import traceback",
                " import urllib.error",
                "@@ -23,22 +25,4 @@ from textwrap import dedent",
                "-# Number of iterations per test suite",
                "-testIters = 5",
                "-",
                "-usage = dedent('''\\",
                "-               Usage:\\n",
                "-                 python3 -u %s URL\\n",
                "-               Must be run from a Lucene/Solr git workspace. Downloads the Jenkins",
                "-               log pointed to by the given URL, parses it for Git revision and failed",
                "-               Lucene/Solr tests, checks out the Git revision in the local workspace,",
                "-               groups the failed tests by module, then runs",
                "-               'ant test -Dtest.dups=%d -Dtests.class=\"*.test1[|*.test2[...]]\" ...'",
                "-               in each module of interest, failing at the end if any of the runs fails.",
                "-               To control the maximum number of concurrent JVMs used for each module's",
                "-               test run, set 'tests.jvms', e.g. in ~/lucene.build.properties",
                "-               ''' % (sys.argv[0], testIters))",
                "-",
                "-reHelpArg = re.compile(r'-{1,2}(?:\\?|h(?:elp)?)')",
                "-",
                " # Example: Checking out Revision e441a99009a557f82ea17ee9f9c3e9b89c75cee6 (refs/remotes/origin/master)",
                "-reGitRev = re.compile(r'Checking out Revision (\\S+)')",
                "+reGitRev = re.compile(r'Checking out Revision (\\S+)\\s+\\(refs/remotes/origin/([^)]+)')",
                "@@ -47,2 +31,3 @@ reGitRev = re.compile(r'Checking out Revision (\\S+)')",
                " reReproLine = re.compile(r'NOTE:\\s+reproduce\\s+with:(\\s+ant\\s+test\\s+-Dtestcase=(\\S+)\\s+(?:-Dtests.method=\\S+\\s+)?(.*))')",
                "+reTestsSeed = re.compile(r'-Dtests.seed=\\S+\\s*')",
                "@@ -59,5 +44,2 @@ encoding = 'iso-8859-1'",
                "-tests = {}",
                "-modules = {}",
                "-",
                " lastFailureCode = 0",
                "@@ -65,2 +47,25 @@ gitCheckoutSucceeded = False",
                "+description = dedent('''\\",
                "+                     Must be run from a Lucene/Solr git workspace. Downloads the Jenkins",
                "+                     log pointed to by the given URL, parses it for Git revision and failed",
                "+                     Lucene/Solr tests, checks out the Git revision in the local workspace,",
                "+                     groups the failed tests by module, then runs",
                "+                     'ant test -Dtest.dups=%d -Dtests.class=\"*.test1[|*.test2[...]]\" ...'",
                "+                     in each module of interest, failing at the end if any of the runs fails.",
                "+                     To control the maximum number of concurrent JVMs used for each module's",
                "+                     test run, set 'tests.jvms', e.g. in ~/lucene.build.properties",
                "+                     ''')",
                "+defaultIters = 5",
                "+",
                "+def readConfig():",
                "+  parser = argparse.ArgumentParser(formatter_class=argparse.RawDescriptionHelpFormatter,",
                "+                                   description=description)",
                "+  parser.add_argument('url', metavar='URL',",
                "+                      help='Points to the Jenkins log to parse')",
                "+  parser.add_argument('--no-fetch', dest='fetch', action='store_false', default=True,",
                "+                      help='Do not run \"git fetch\" prior to \"git checkout\"')",
                "+  parser.add_argument('--iters', dest='testIters', type=int, default=defaultIters, metavar='N',",
                "+                      help='Number of iterations per test suite (default: %d)' % defaultIters)",
                "+  return parser.parse_args()",
                "+",
                " def runOutput(cmd):",
                "@@ -84,4 +89,6 @@ def run(cmd, rememberFailure=True):",
                " def fetchAndParseJenkinsLog(url):",
                "-  global revision",
                "-  revision = None",
                "+  global revisionFromLog",
                "+  global branchFromLog",
                "+  revisionFromLog = None",
                "+  tests = {}",
                "   print('[repro] Jenkins log URL: %s\\n' % url)",
                "@@ -93,4 +100,5 @@ def fetchAndParseJenkinsLog(url):",
                "         if match is not None:",
                "-          revision = match.group(1)",
                "-          print('[repro] Revision: %s\\n' % revision)",
                "+          revisionFromLog = match.group(1)",
                "+          branchFromLog = match.group(2)",
                "+          print('[repro] Revision: %s\\n' % revisionFromLog)",
                "         else:",
                "@@ -105,3 +113,3 @@ def fetchAndParseJenkinsLog(url):",
                "-  if revision == None:",
                "+  if revisionFromLog == None:",
                "     if reJenkinsURLWithoutConsoleText.match(url):",
                "@@ -114,8 +122,18 @@ def fetchAndParseJenkinsLog(url):",
                "     sys.exit(0)",
                "+  return tests",
                "-def prepareWorkspace():",
                "+def prepareWorkspace(fetch, gitRef):",
                "   global gitCheckoutSucceeded",
                "-  code = run('git checkout %s' % revision)",
                "+  if fetch:",
                "+    code = run('git fetch')",
                "+    if 0 != code:",
                "+      raise RuntimeError('ERROR: \"git fetch\" failed.  See above.')",
                "+  checkoutCmd = 'git checkout %s' % gitRef",
                "+  code = run(checkoutCmd)",
                "   if 0 != code:",
                "-    raise RuntimeError('ERROR: \"git checkout %s\" failed.  See above.  Maybe try \"git pull\"?' % revision)",
                "+    raise RuntimeError('ERROR: \"%s\" failed.  See above.' % checkoutCmd)",
                "+  if fetch:",
                "+    code = run('git pull')",
                "+    if 0 != code:",
                "+      raise RuntimeError('ERROR: \"git pull\" failed.  See above.')",
                "   gitCheckoutSucceeded = True",
                "@@ -125,3 +143,4 @@ def prepareWorkspace():",
                "-def groupTestsByModule():",
                "+def groupTestsByModule(tests):",
                "+  modules = {}",
                "   for (dir, _, files) in os.walk('.'):",
                "@@ -142,5 +161,5 @@ def groupTestsByModule():",
                "       print('[repro]       %s' % test)",
                "+  return modules",
                "-def runTests():",
                "-  global lastFailureCode",
                "+def runTests(testIters, modules, tests):",
                "   cwd = os.getcwd()",
                "@@ -155,3 +174,3 @@ def runTests():",
                "     try:",
                "-      if (0 != code):",
                "+      if 0 != code:",
                "         raise RuntimeError(\"ERROR: Compile failed in %s/ with code %d.  See above.\" % (module, code))",
                "@@ -161,3 +180,3 @@ def runTests():",
                "-def printReport():",
                "+def printReport(testIters, location):",
                "   failures = {}",
                "@@ -177,27 +196,54 @@ def printReport():",
                "                 break",
                "-  print(\"[repro] Failures:\")",
                "-  for testcase in sorted(failures):",
                "+  print(\"[repro] Failures%s:\" % location)",
                "+  for testcase in sorted(failures, key=lambda t: (failures[t],t)): # sort by failure count, then by testcase ",
                "     print(\"[repro]   %d/%d failed: %s\" % (failures[testcase], testIters, testcase))",
                "+  return failures",
                "-def rememberGitBranch():",
                "-  global origGitBranch",
                "+def getLocalGitBranch():",
                "   origGitBranch = runOutput('git rev-parse --abbrev-ref HEAD')",
                "-  if (origGitBranch == 'HEAD'):                     # In detached HEAD state",
                "+  if origGitBranch == 'HEAD':                       # In detached HEAD state",
                "     origGitBranch = runOutput('git rev-parse HEAD') # Use the SHA when not on a branch",
                "   print('[repro] Initial local git branch/revision: %s' % origGitBranch)",
                "+  return origGitBranch",
                " def main():",
                "-  if 2 != len(sys.argv) or reHelpArg.match(sys.argv[1]):",
                "-    print(usage)",
                "-    sys.exit(0)",
                "-  fetchAndParseJenkinsLog(sys.argv[1])",
                "-  rememberGitBranch()",
                "+  config = readConfig()",
                "+  tests = fetchAndParseJenkinsLog(config.url)",
                "+  localGitBranch = getLocalGitBranch()",
                "   try:",
                "-    prepareWorkspace()",
                "-    groupTestsByModule()",
                "-    runTests()",
                "-    printReport()",
                "+    prepareWorkspace(config.fetch, revisionFromLog)",
                "+    modules = groupTestsByModule(tests)",
                "+    runTests(config.testIters, modules, tests)",
                "+    failures = printReport(config.testIters, '')",
                "+    ",
                "+    # Retest 100% failures at the tip of the branch",
                "+    oldTests = tests",
                "+    tests = {}",
                "+    for fullClass in failures:",
                "+      testcase = fullClass[(fullClass.rindex('.') + 1):]",
                "+      if failures[fullClass] == config.testIters:",
                "+        tests[testcase] = oldTests[testcase]",
                "+    if len(tests) > 0:",
                "+      print('\\n[repro] Re-testing 100%% failures at the tip of %s' % branchFromLog)",
                "+      prepareWorkspace(False, branchFromLog)",
                "+      modules = groupTestsByModule(tests)",
                "+      runTests(config.testIters, modules, tests)",
                "+      failures = printReport(config.testIters, ' at the tip of %s' % branchFromLog)",
                "+      ",
                "+      # Retest 100% tip-of-branch failures without a seed",
                "+      oldTests = tests",
                "+      tests = {}",
                "+      for fullClass in failures:",
                "+        testcase = fullClass[(fullClass.rindex('.') + 1):]",
                "+        if failures[fullClass] == config.testIters:",
                "+          tests[testcase] = re.sub(reTestsSeed, '', oldTests[testcase])",
                "+      if len(tests) > 0:",
                "+        print('\\n[repro] Re-testing 100%% failures at the tip of %s without a seed' % branchFromLog)",
                "+        prepareWorkspace(False, branchFromLog)",
                "+        modules = groupTestsByModule(tests)",
                "+        runTests(config.testIters, modules, tests)",
                "+        printReport(config.testIters, ' at the tip of %s without a seed' % branchFromLog)",
                "   except Exception as e:",
                "-    print('[repro] %s' % e)",
                "+    print('[repro] %s' % traceback.format_exc())",
                "     sys.exit(1)",
                "@@ -205,3 +251,3 @@ def main():",
                "     if gitCheckoutSucceeded:",
                "-      run('git checkout %s' % origGitBranch, rememberFailure=False) # Restore original git branch/sha",
                "+      run('git checkout %s' % localGitBranch, rememberFailure=False) # Restore original git branch/sha"
            ],
            "changed_files": [
                "dev-tools/scripts/reproduceJenkinsFailures.py"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8106": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a07493d508dce52bcfc584d001a0240cd835f9ba"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8106",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "74793a91346bebe8953e2d66d3ed6e86ee664dc9",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519140293,
            "hunks": 3,
            "message": "Revert \"SOLR-11795: avoid using static class name for logger\" This reverts commit a31a8dae2e8a40c5c6a7c7a07ab4a7c27e4f7ed6.",
            "diff": [
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "index 0b9fa7d588d..9341fa22aaa 100644",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "@@ -55,3 +55,3 @@ import java.util.concurrent.TimeUnit;",
                " public class SolrCollector extends Collector implements Collector.Describable {",
                "-  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "+  private static final Logger logger = LoggerFactory.getLogger(SolrCollector.class);",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "index 7be76aefdbc..a51207d4d24 100644",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "@@ -51,3 +51,3 @@ import java.util.regex.Pattern;",
                " public class SolrExporter {",
                "-  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "+  private static final Logger logger = LoggerFactory.getLogger(SolrExporter.class);",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "index becf3ff128a..56929fc512e 100644",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "@@ -48,3 +48,3 @@ import java.util.concurrent.Callable;",
                " public class SolrScraper implements Callable<Map<String, Collector.MetricFamilySamples>> {",
                "-  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "+  private static final Logger logger = LoggerFactory.getLogger(SolrScraper.class);"
            ],
            "changed_files": [
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11795": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c24c45a0b77bb3c9a0a93f2d496f08c3ef013cd7"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4cb5e8a2807bf43542f822aa32c666727b1162e1",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519137147,
            "hunks": 3,
            "message": "SOLR-11795: avoid using static class name for logger",
            "diff": [
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "index 9341fa22aaa..0b9fa7d588d 100644",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "@@ -55,3 +55,3 @@ import java.util.concurrent.TimeUnit;",
                " public class SolrCollector extends Collector implements Collector.Describable {",
                "-  private static final Logger logger = LoggerFactory.getLogger(SolrCollector.class);",
                "+  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "index a51207d4d24..7be76aefdbc 100644",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "@@ -51,3 +51,3 @@ import java.util.regex.Pattern;",
                " public class SolrExporter {",
                "-  private static final Logger logger = LoggerFactory.getLogger(SolrExporter.class);",
                "+  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "diff --git a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "index 56929fc512e..becf3ff128a 100644",
                "--- a/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "+++ b/solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java",
                "@@ -48,3 +48,3 @@ import java.util.concurrent.Callable;",
                " public class SolrScraper implements Callable<Map<String, Collector.MetricFamilySamples>> {",
                "-  private static final Logger logger = LoggerFactory.getLogger(SolrScraper.class);",
                "+  private static final Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());"
            ],
            "changed_files": [
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/collector/SolrCollector.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/exporter/SolrExporter.java",
                "solr/contrib/prometheus-exporter/src/java/org/apache/solr/prometheus/scraper/SolrScraper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11795": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a31a8dae2e8a40c5c6a7c7a07ab4a7c27e4f7ed6"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fa0aa34bdc7d67585b2bcf243ad9110331e77bba",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518543473,
            "hunks": 2,
            "message": "LUCENE-8167: fail precommit on incompleteEnumSwitch",
            "diff": [
                "diff --git a/dev-tools/eclipse/dot.settings/org.eclipse.jdt.core.prefs b/dev-tools/eclipse/dot.settings/org.eclipse.jdt.core.prefs",
                "index 070fb23bca9..6014c221847 100644",
                "--- a/dev-tools/eclipse/dot.settings/org.eclipse.jdt.core.prefs",
                "+++ b/dev-tools/eclipse/dot.settings/org.eclipse.jdt.core.prefs",
                "@@ -15,2 +15,3 @@ org.eclipse.jdt.core.compiler.problem.hiddenCatchBlock=error",
                " org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=error",
                "+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error",
                " org.eclipse.jdt.core.compiler.problem.invalidJavadoc=error",
                "diff --git a/lucene/tools/javadoc/ecj.javadocs.prefs b/lucene/tools/javadoc/ecj.javadocs.prefs",
                "index 5d96e88b5f4..9fcbf88d578 100644",
                "--- a/lucene/tools/javadoc/ecj.javadocs.prefs",
                "+++ b/lucene/tools/javadoc/ecj.javadocs.prefs",
                "@@ -30,3 +30,3 @@ org.eclipse.jdt.core.compiler.problem.includeNullInfoFromAsserts=disabled",
                " org.eclipse.jdt.core.compiler.problem.incompatibleNonInheritedInterfaceMethod=error",
                "-org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=ignore",
                "+org.eclipse.jdt.core.compiler.problem.incompleteEnumSwitch=error",
                " org.eclipse.jdt.core.compiler.problem.indirectStaticAccess=ignore"
            ],
            "changed_files": [
                "dev-tools/eclipse/dot.settings/org.eclipse.jdt.core.prefs",
                "lucene/tools/javadoc/ecj.javadocs.prefs"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8167": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "3c24eb108e39fe346139fa6b57e8eac4e885648c"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8167",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1c504c974e2fe30809e5b68762caa3b31ad01072",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520532554,
            "hunks": 1,
            "message": "SOLR-12068: Remove unnecessary config from example",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/cdcr-config.adoc b/solr/solr-ref-guide/src/cdcr-config.adoc",
                "index ad74629fad4..e7b4806f5fb 100644",
                "--- a/solr/solr-ref-guide/src/cdcr-config.adoc",
                "+++ b/solr/solr-ref-guide/src/cdcr-config.adoc",
                "@@ -32,13 +32,2 @@ Here is a sample of a Source configuration file, a section in `solrconfig.xml`.",
                " ----",
                "-<updateRequestProcessorChain name=\"cdcr-processor-chain\">",
                "-  <processor class=\"solr.CdcrUpdateProcessorFactory\"/>",
                "-  <processor class=\"solr.RunUpdateProcessorFactory\"/>",
                "-</updateRequestProcessorChain>",
                "-",
                "-<requestHandler name=\"/update\" class=\"solr.UpdateRequestHandler\">",
                "-  <lst name=\"defaults\">",
                "-    <str name=\"update.chain\">cdcr-processor-chain</str>",
                "-  </lst>",
                "-</requestHandler>",
                "-",
                " <requestHandler name=\"/cdcr\" class=\"solr.CdcrRequestHandler\">"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/cdcr-config.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12068": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "ab4cd42903925f3edc3d06c41a4726e78a6b08ca"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12068",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "88e00d08894cd58f8cf1f51f9de6f36ce3183031",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519431614,
            "hunks": 6,
            "message": "LUCENE-8106: collect Ant test sysprops from Jenkins log and add them to test repro lines",
            "diff": [
                "diff --git a/dev-tools/scripts/reproduceJenkinsFailures.py b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "index 775a22a9fc5..5e081cbd2d1 100644",
                "--- a/dev-tools/scripts/reproduceJenkinsFailures.py",
                "+++ b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "@@ -28,2 +28,13 @@ reGitRev = re.compile(r'Checking out Revision (\\S+)\\s+\\(refs/remotes/origin/([^)",
                "+#         Policeman Jenkins example:           [Lucene-Solr-7.x-Linux] $ /var/lib/jenkins/tools/hudson.tasks.Ant_AntInstallation/ANT_1.8.2/bin/ant \"-Dargs=-XX:-UseCompressedOops -XX:+UseConcMarkSweepGC\" jenkins-hourly",
                "+# Policeman Jenkins Windows example:      [Lucene-Solr-master-Windows] $ cmd.exe /C \"C:\\Users\\jenkins\\tools\\hudson.tasks.Ant_AntInstallation\\ANT_1.8.2\\bin\\ant.bat '\"-Dargs=-client -XX:+UseConcMarkSweepGC\"' jenkins-hourly && exit %%ERRORLEVEL%%\"",
                "+#               ASF Jenkins example:        [Lucene-Solr-Tests-master] $ /home/jenkins/tools/ant/apache-ant-1.8.4/bin/ant jenkins-hourly",
                "+#       ASF Jenkins nightly example:                        [checkout] $ /home/jenkins/tools/ant/apache-ant-1.8.4/bin/ant -file build.xml -Dtests.multiplier=2 -Dtests.linedocsfile=/home/jenkins/jenkins-slave/workspace/Lucene-Solr-NightlyTests-master/test-data/enwiki.random.lines.txt jenkins-nightly",
                "+#        ASF Jenkins smoker example: [Lucene-Solr-SmokeRelease-master] $ /home/jenkins/tools/ant/apache-ant-1.8.4/bin/ant nightly-smoke",
                "+reAntInvocation = re.compile(r'\\bant(?:\\.bat)?\\s+.*(?:jenkins-(?:hourly|nightly)|nightly-smoke)')",
                "+reAntSysprops = re.compile(r'\"-D[^\"]+\"|-D[^=]+=\"[^\"]*\"|-D\\S+')",
                "+",
                "+#            sarowe Jenkins example: + export 'ANT_OPTS=-Xmx1150m -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dargs=\"-Xmx1g\"'",
                "+reAntOptions = re.compile(r\"export\\s+'?\\s*ANT_OPTS=([^'\\n\\r]+)\")",
                "+",
                " # Method example: NOTE: reproduce with: ant test  -Dtestcase=ZkSolrClientTest -Dtests.method=testMultipleWatchesAsync -Dtests.seed=6EF5AB70F0032849 -Dtests.slow=true -Dtests.locale=he-IL -Dtests.timezone=NST -Dtests.asserts=true -Dtests.file.encoding=UTF-8",
                "@@ -92,3 +103,5 @@ def fetchAndParseJenkinsLog(url):",
                "   global branchFromLog",
                "+  global antOptions",
                "   revisionFromLog = None",
                "+  antOptions = ''",
                "   tests = {}",
                "@@ -111,2 +124,12 @@ def fetchAndParseJenkinsLog(url):",
                "             tests[testcase] = reproLineWithoutMethod",
                "+          else:",
                "+            match = reAntInvocation.search(line)",
                "+            if match is not None:",
                "+              antOptions = ' '.join(reAntSysprops.findall(line))",
                "+            else:",
                "+              match = reAntOptions.search(line)",
                "+              if match is not None:",
                "+                antOptions = ' '.join(reAntSysprops.findall(line))",
                "+    if len(antOptions) > 0:",
                "+      print('[repro] Ant options: %s' % antOptions)",
                "   except urllib.error.URLError as e:",
                "@@ -164,3 +187,3 @@ def runTests(testIters, modules, tests):",
                "   cwd = os.getcwd()",
                "-  testCmdline = 'ant test-nocompile -Dtests.dups=%d -Dtests.maxfailures=%d -Dtests.class=\"%s\" -Dtests.showOutput=onerror %s'",
                "+  testCmdline = 'ant test-nocompile -Dtests.dups=%d -Dtests.maxfailures=%d -Dtests.class=\"%s\" -Dtests.showOutput=onerror %s %s'",
                "   for module in modules:",
                "@@ -175,3 +198,3 @@ def runTests(testIters, modules, tests):",
                "         raise RuntimeError(\"ERROR: Compile failed in %s/ with code %d.  See above.\" % (module, code))",
                "-      run(testCmdline % (testIters, testIters * numTests, testList, params))",
                "+      run(testCmdline % (testIters, testIters * numTests, testList, antOptions, params))",
                "     finally:"
            ],
            "changed_files": [
                "dev-tools/scripts/reproduceJenkinsFailures.py"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8106": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "07f7a7b5ddd08aa86dd65f31cf475546da084204"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8106",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "277dd050869d458a370fb7adb837a035e091b89f",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520449097,
            "hunks": 10,
            "message": "SOLR-12061: Fix substitution bug in API V1 to V2 migration",
            "diff": [
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "index 95e7008e92e..d950f1195c6 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "@@ -193,3 +193,4 @@ public class CollectionApiMapping {",
                "         \"set-collection-property\",",
                "-        Utils.makeMap(NAME, \"collection\",",
                "+        Utils.makeMap(",
                "+            NAME, \"collection\",",
                "             \"propertyName\", \"name\",",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/V1toV2ApiMapper.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/V1toV2ApiMapper.java",
                "index c34f92c7aee..0ec1112c214 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/V1toV2ApiMapper.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/V1toV2ApiMapper.java",
                "@@ -83,5 +83,5 @@ public class V1toV2ApiMapper {",
                "-    public V2Request.Builder convert(SolrParams params) {",
                "+    public V2Request.Builder convert(SolrParams paramsV1) {",
                "       String[] list = new String[template.variables.size()];",
                "-      MapWriter data = serializeToV2Format(params, list);",
                "+      MapWriter data = serializeToV2Format(paramsV1, list);",
                "       Map o = data.toMap(new LinkedHashMap<>());",
                "@@ -96,5 +96,5 @@ public class V1toV2ApiMapper {",
                "-    private MapWriter serializeToV2Format(SolrParams params, String[] list) {",
                "+    private MapWriter serializeToV2Format(SolrParams paramsV1, String[] list) {",
                "       return ew -> ew.put(meta.commandName, (MapWriter) ew1 -> {",
                "-        Iterator<String> iter = params.getParameterNamesIterator();",
                "+        Iterator<String> iter = paramsV1.getParameterNamesIterator();",
                "         Map<String, Map<String, String>> subProperties = null;",
                "@@ -106,3 +106,3 @@ public class V1toV2ApiMapper {",
                "           if (idx > -1) {",
                "-            String val = params.get(String.valueOf(substitute));",
                "+            String val = paramsV1.get(key);",
                "             if (val == null) throw new RuntimeException(\"null value is not valid for \" + key);",
                "@@ -112,7 +112,8 @@ public class V1toV2ApiMapper {",
                "           if (substitute instanceof Pair) {//this is a nested object",
                "+            @SuppressWarnings(\"unchecked\")",
                "             Pair<String, String> p = (Pair<String, String>) substitute;",
                "             if (subProperties == null) subProperties = new HashMap<>();",
                "-            subProperties.computeIfAbsent(p.first(), s -> new HashMap<>()).put(p.second(), params.get(key));",
                "+            subProperties.computeIfAbsent(p.first(), s -> new HashMap<>()).put(p.second(), paramsV1.get(key));",
                "           } else {",
                "-            Object val = params.get(key);",
                "+            Object val = paramsV1.get(key);",
                "             ew1.put(substitute.toString(), val);",
                "@@ -130,3 +131,3 @@ public class V1toV2ApiMapper {",
                "-  public static V2Request.Builder convert(CollectionAdminRequest request) {",
                "+  public static V2Request.Builder convert(CollectionAdminRequest<?> request) {",
                "     ActionInfo info = mapping.get(request.action);"
            ],
            "changed_files": [
                "solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionApiMapping.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/request/V1toV2ApiMapper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12061": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "132fa989bf36daab4e4613d4d464b8e562fcc02f"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12061",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b94054fc64343e728adb08449f5cc0e7ca319ede",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520510596,
            "hunks": 1,
            "message": "SOLR-11648: Ensure cluster-suggestions page resets menu so that collection and core list are displayed on page load (cherry picked from commit 2bb6b98)",
            "diff": [
                "diff --git a/solr/webapp/web/js/angular/controllers/cluster-suggestions.js b/solr/webapp/web/js/angular/controllers/cluster-suggestions.js",
                "index 47e428fe38d..723a92e13d3 100644",
                "--- a/solr/webapp/web/js/angular/controllers/cluster-suggestions.js",
                "+++ b/solr/webapp/web/js/angular/controllers/cluster-suggestions.js",
                "@@ -17,4 +17,5 @@",
                " solrAdminApp.controller('ClusterSuggestionsController',",
                "-function($scope,$http) {",
                "-    $scope.data={}",
                "+function($scope, $http, Constants) {",
                "+    $scope.resetMenu(\"cluster-suggestions\", Constants.IS_ROOT_PAGE);",
                "+    $scope.data={};",
                "     var dataArr =[];"
            ],
            "changed_files": [
                "solr/webapp/web/js/angular/controllers/cluster-suggestions.js"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11648": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2bb6b98582010f8d81a7b58d4130f8ea942aebb6"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11648",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c4c6b2a7962b2ddcbd929b5b1eb11f71f3084bb0",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518690602,
            "hunks": 8,
            "message": "LUCENE-8174: Fixed toString method of (Double|Float|Int|Long)Range classes. The previous implementation produced an ArrayOutOfBoundsException because of an incorrect calculation of the dimension index. Also, the ranges for each dimension were never appended to the StringBuilder at all (which, however, could not actually be observed due to the exception). Signed-off-by: Adrien Grand <jpountz@gmail.com>",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/document/DoubleRange.java b/lucene/core/src/java/org/apache/lucene/document/DoubleRange.java",
                "index c1d2dc50aac..cf308c37a6f 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/document/DoubleRange.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/document/DoubleRange.java",
                "@@ -246,5 +246,5 @@ public class DoubleRange extends Field {",
                "     toString(b, 0);",
                "-    for (int d=1; d<type.pointDimensionCount(); ++d) {",
                "+    for (int d = 0; d < type.pointDimensionCount() / 2; ++d) {",
                "       sb.append(' ');",
                "-      toString(b, d);",
                "+      sb.append(toString(b, d));",
                "     }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/document/FloatRange.java b/lucene/core/src/java/org/apache/lucene/document/FloatRange.java",
                "index facf23b660f..9b555d68f7a 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/document/FloatRange.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/document/FloatRange.java",
                "@@ -246,5 +246,5 @@ public class FloatRange extends Field {",
                "     toString(b, 0);",
                "-    for (int d=1; d<type.pointDimensionCount(); ++d) {",
                "+    for (int d = 0; d < type.pointDimensionCount() / 2; ++d) {",
                "       sb.append(' ');",
                "-      toString(b, d);",
                "+      sb.append(toString(b, d));",
                "     }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/document/IntRange.java b/lucene/core/src/java/org/apache/lucene/document/IntRange.java",
                "index b4266133bfe..e67b94f31d6 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/document/IntRange.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/document/IntRange.java",
                "@@ -246,5 +246,5 @@ public class IntRange extends Field {",
                "     toString(b, 0);",
                "-    for (int d=1; d<type.pointDimensionCount(); ++d) {",
                "+    for (int d = 0; d < type.pointDimensionCount() / 2; ++d) {",
                "       sb.append(' ');",
                "-      toString(b, d);",
                "+      sb.append(toString(b, d));",
                "     }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/document/LongRange.java b/lucene/core/src/java/org/apache/lucene/document/LongRange.java",
                "index 5c1c7632c69..1a1b19a5a8e 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/document/LongRange.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/document/LongRange.java",
                "@@ -244,5 +244,5 @@ public class LongRange extends Field {",
                "     toString(b, 0);",
                "-    for (int d=1; d<type.pointDimensionCount(); ++d) {",
                "+    for (int d = 0; d < type.pointDimensionCount() / 2; ++d) {",
                "       sb.append(' ');",
                "-      toString(b, d);",
                "+      sb.append(toString(b, d));",
                "     }"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/document/DoubleRange.java",
                "lucene/core/src/java/org/apache/lucene/document/FloatRange.java",
                "lucene/core/src/java/org/apache/lucene/document/IntRange.java",
                "lucene/core/src/java/org/apache/lucene/document/LongRange.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8174": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1b62572b585675f25fc62c2dfd2d6d5bcf82a19b"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8174",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2c8bbc8c181f282006ea5f66e883199e10c54f61",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518547765,
            "hunks": 10,
            "message": "SOLR-11941: Add abstract contrib/ltr AdapterModel.",
            "diff": [
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/model/AdapterModel.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/model/AdapterModel.java",
                "new file mode 100644",
                "index 00000000000..e9ca3eaa009",
                "--- /dev/null",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/model/AdapterModel.java",
                "@@ -0,0 +1,43 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.ltr.model;",
                "+",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+",
                "+import org.apache.solr.core.SolrResourceLoader;",
                "+import org.apache.solr.ltr.feature.Feature;",
                "+import org.apache.solr.ltr.norm.Normalizer;",
                "+",
                "+/**",
                "+ * A scoring model whose initialization is completed via its",
                "+ * {@link #init(SolrResourceLoader)} method.",
                "+ */",
                "+public abstract class AdapterModel extends LTRScoringModel {",
                "+",
                "+  protected SolrResourceLoader solrResourceLoader;",
                "+",
                "+  public AdapterModel(String name, List<Feature> features, List<Normalizer> norms, String featureStoreName,",
                "+      List<Feature> allFeatures, Map<String,Object> params) {",
                "+    super(name, features, norms, featureStoreName, allFeatures, params);",
                "+  }",
                "+",
                "+  public void init(SolrResourceLoader solrResourceLoader) throws ModelException {",
                "+    this.solrResourceLoader = solrResourceLoader;",
                "+  }",
                "+",
                "+}",
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/model/WrapperModel.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/model/WrapperModel.java",
                "index cf66135ba98..aeaf578e018 100644",
                "--- a/solr/contrib/ltr/src/java/org/apache/solr/ltr/model/WrapperModel.java",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/model/WrapperModel.java",
                "@@ -25,3 +25,2 @@ import org.apache.lucene.index.LeafReaderContext;",
                " import org.apache.lucene.search.Explanation;",
                "-import org.apache.solr.core.SolrResourceLoader;",
                " import org.apache.solr.ltr.feature.Feature;",
                "@@ -53,5 +52,4 @@ import org.apache.solr.ltr.norm.Normalizer;",
                "  */",
                "-public abstract class WrapperModel extends LTRScoringModel {",
                "+public abstract class WrapperModel extends AdapterModel {",
                "-  protected SolrResourceLoader solrResourceLoader;",
                "   protected LTRScoringModel model;",
                "@@ -109,6 +107,2 @@ public abstract class WrapperModel extends LTRScoringModel {",
                "-  public void setSolrResourceLoader(SolrResourceLoader solrResourceLoader) {",
                "-    this.solrResourceLoader = solrResourceLoader;",
                "-  }",
                "-",
                "   public void updateModel(LTRScoringModel model) {",
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedModelStore.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedModelStore.java",
                "index bdc4cfd9df2..60cabccab55 100644",
                "--- a/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedModelStore.java",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedModelStore.java",
                "@@ -29,2 +29,3 @@ import org.apache.solr.core.SolrResourceLoader;",
                " import org.apache.solr.ltr.feature.Feature;",
                "+import org.apache.solr.ltr.model.AdapterModel;",
                " import org.apache.solr.ltr.model.WrapperModel;",
                "@@ -243,4 +244,4 @@ public class ManagedModelStore extends ManagedResource implements ManagedResourc",
                "-    if (ltrScoringModel instanceof WrapperModel) {",
                "-      initWrapperModel(solrResourceLoader, (WrapperModel)ltrScoringModel, managedFeatureStore);",
                "+    if (ltrScoringModel instanceof AdapterModel) {",
                "+      initAdapterModel(solrResourceLoader, (AdapterModel)ltrScoringModel, managedFeatureStore);",
                "     }",
                "@@ -250,5 +251,12 @@ public class ManagedModelStore extends ManagedResource implements ManagedResourc",
                "+  private static void initAdapterModel(SolrResourceLoader solrResourceLoader,",
                "+      AdapterModel adapterModel, ManagedFeatureStore managedFeatureStore) {",
                "+    adapterModel.init(solrResourceLoader);",
                "+    if (adapterModel instanceof WrapperModel) {",
                "+      initWrapperModel(solrResourceLoader, (WrapperModel)adapterModel, managedFeatureStore);",
                "+    }",
                "+  }",
                "+",
                "   private static void initWrapperModel(SolrResourceLoader solrResourceLoader,",
                "                                        WrapperModel wrapperModel, ManagedFeatureStore managedFeatureStore) {",
                "-    wrapperModel.setSolrResourceLoader(solrResourceLoader);",
                "     final LTRScoringModel model = fromLTRScoringModelMap(",
                "@@ -257,7 +265,4 @@ public class ManagedModelStore extends ManagedResource implements ManagedResourc",
                "         managedFeatureStore);",
                "-    if (model instanceof WrapperModel) {",
                "-      log.warn(\"It is unusual for one WrapperModel ({}) to wrap another WrapperModel ({})\",",
                "-          wrapperModel.getName(),",
                "-          model.getName());",
                "-      initWrapperModel(solrResourceLoader, (WrapperModel)model, managedFeatureStore);",
                "+    if (model instanceof AdapterModel) {",
                "+      initAdapterModel(solrResourceLoader, (AdapterModel)model, managedFeatureStore);",
                "     }",
                "diff --git a/solr/solr-ref-guide/src/learning-to-rank.adoc b/solr/solr-ref-guide/src/learning-to-rank.adoc",
                "index c165a3679d6..b44e85a9ce2 100644",
                "--- a/solr/solr-ref-guide/src/learning-to-rank.adoc",
                "+++ b/solr/solr-ref-guide/src/learning-to-rank.adoc",
                "@@ -90,2 +90,3 @@ Feature selection and model training take place offline and outside Solr. The lt",
                " |(wrapper) |{solr-javadocs}/solr-ltr/org/apache/solr/ltr/model/DefaultWrapperModel.html[DefaultWrapperModel] |(not applicable)",
                "+|(custom) |(custom class extending {solr-javadocs}/solr-ltr/org/apache/solr/ltr/model/AdapterModel.html[AdapterModel]) |(not applicable)",
                " |(custom) |(custom class extending {solr-javadocs}/solr-ltr/org/apache/solr/ltr/model/LTRScoringModel.html[LTRScoringModel]) |(not applicable)"
            ],
            "changed_files": [
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/model/AdapterModel.java",
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/model/WrapperModel.java",
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedModelStore.java",
                "solr/solr-ref-guide/src/learning-to-rank.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11941": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "11e5aa071e4d27fab0ffe2210d4868806103e863"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11941",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "05d4a9320cfe95d93655feb39a6c6a2945e98c76",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520641205,
            "hunks": 4,
            "message": "SOLR-12051: Adding error log in case of data loss",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java b/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java",
                "index a7c21b4f305..7d64717e139 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java",
                "@@ -349,2 +349,3 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "       String coreNodeName;",
                "+      boolean setTermToMax = false;",
                "       try (SolrCore core = cc.getCore(coreName)) {",
                "@@ -367,5 +368,7 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "           if (!waitForEligibleBecomeLeaderAfterTimeout(zkShardTerms, coreNodeName, leaderVoteWait)) {",
                "-            log.info(\"Can't become leader, term of replica {} less than leader\", coreNodeName);",
                "             rejoinLeaderElection(core);",
                "             return;",
                "+          } else {",
                "+            // only log an error if this replica win the election",
                "+            setTermToMax = true;",
                "           }",
                "@@ -472,3 +475,5 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "           // in case of leaderVoteWait timeout, a replica with lower term can win the election",
                "-          if (zkController.getShardTerms(collection, shardId).registered(coreNodeName)) {",
                "+          if (setTermToMax) {",
                "+            log.error(\"WARNING: Potential data loss -- Replica {} became leader after timeout (leaderVoteWait) \" +",
                "+                \"without being up-to-date with the previous leader\", coreNodeName);",
                "             zkController.getShardTerms(collection, shardId).setTermEqualsToLeader(coreNodeName);"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/ElectionContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12051": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4abdb24667f28777be512047bb012a7346d8039b"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12051",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fc2fd1dc25dbfda1764e044090dce60c22f724c6",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520265828,
            "hunks": 8,
            "message": "SOLR-12020: fix refinement of terms facet on date field (don't use Date.toString)",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor.java b/solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor.java",
                "index 143cfd64c5f..50f4676152a 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor.java",
                "@@ -20,4 +20,6 @@ package org.apache.solr.search.facet;",
                " import java.io.IOException;",
                "+import java.time.Instant;",
                " import java.util.ArrayList;",
                " import java.util.Collections;",
                "+import java.util.Date;",
                " import java.util.HashMap;",
                "@@ -684,5 +686,6 @@ abstract class FacetFieldProcessor extends FacetProcessor<FacetField> {",
                "     bucket.add(\"val\", bucketVal);",
                "-    // String internal = ft.toInternal( tobj.toString() );  // TODO - we need a better way to get from object to query...",
                "-    Query domainQ = ft.getFieldQuery(null, sf, bucketVal.toString());",
                "+    // fieldQuery currently relies on a string input of the value...",
                "+    String bucketStr = bucketVal instanceof Date ? Instant.ofEpochMilli(((Date)bucketVal).getTime()).toString() : bucketVal.toString();",
                "+    Query domainQ = ft.getFieldQuery(null, sf, bucketStr);",
                "diff --git a/solr/core/src/java/org/apache/solr/search/facet/FacetModule.java b/solr/core/src/java/org/apache/solr/search/facet/FacetModule.java",
                "index 7fc016bc4b8..759ece7354d 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/facet/FacetModule.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/facet/FacetModule.java",
                "@@ -19,3 +19,5 @@ package org.apache.solr.search.facet;",
                " import java.io.IOException;",
                "+import java.time.Instant;",
                " import java.util.Collection;",
                "+import java.util.Date;",
                " import java.util.HashMap;",
                "@@ -40,3 +42,5 @@ import org.apache.solr.search.SyntaxError;",
                " import org.apache.solr.util.RTimer;",
                "+import org.noggit.CharArr;",
                " import org.noggit.JSONUtil;",
                "+import org.noggit.JSONWriter;",
                " import org.noggit.ObjectBuilder;",
                "@@ -236,3 +240,19 @@ public class FacetModule extends SearchComponent {",
                "       finfo.put(FACET_REFINE, refinement);",
                "-      String finfoStr = JSONUtil.toJSON(finfo, -1);",
                "+",
                "+      // String finfoStr = JSONUtil.toJSON(finfo, -1);  // this doesn't handle formatting of Date objects the way we want",
                "+      CharArr out = new CharArr();",
                "+      JSONWriter jsonWriter = new JSONWriter(out, -1) {",
                "+        @Override",
                "+        public void handleUnknownClass(Object o) {",
                "+          // handle date formatting correctly",
                "+          if (o instanceof Date) {",
                "+            String s = Instant.ofEpochMilli(((Date)o).getTime()).toString();",
                "+            writeString(s);",
                "+            return;",
                "+          }",
                "+          super.handleUnknownClass(o);",
                "+        }",
                "+      };",
                "+      jsonWriter.write(finfo);",
                "+      String finfoStr = out.toString();",
                "       // System.err.println(\"##################### REFINE=\" + finfoStr);"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessor.java",
                "solr/core/src/java/org/apache/solr/search/facet/FacetModule.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12020": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e428f0d58d5a6fffe71d25a52a5d58c74e729991"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12020",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "00fe0b06fcc0b2c5339ebb4b8e5dac8483cd7ca4",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518373462,
            "hunks": 6,
            "message": "LUCENE-8170: Improve OpenClover reports (separate test from production code);  enable coverage reports inside test-frameworks",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index 00360527f26..a5f09e48711 100755",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -526,2 +526,7 @@ File | Project Structure | Platform Settings | SDKs):",
                "     </fileset>",
                "+    <fileset dir=\".\" id=\"clover.test.src.files\">",
                "+      <include name=\"**/src/test/**/*.java\"/>",
                "+      <!-- test framework source files are all test code: -->",
                "+      <include name=\"*/test-framework/src/**/*.java\"/>",
                "+    </fileset>",
                "     <clover-report projectName=\"Apache Lucene/Solr\">",
                "@@ -530,2 +535,3 @@ File | Project Structure | Platform Settings | SDKs):",
                "         <testresults refid=\"clover.test.result.files\"/>",
                "+        <testsources refid=\"clover.test.src.files\"/>",
                "       </current>",
                "@@ -534,2 +540,3 @@ File | Project Structure | Platform Settings | SDKs):",
                "         <testresults refid=\"clover.test.result.files\"/>",
                "+        <testsources refid=\"clover.test.src.files\"/>",
                "       </current>",
                "diff --git a/lucene/tools/build.xml b/lucene/tools/build.xml",
                "index 4f4ed51b247..4736ea59cb2 100644",
                "--- a/lucene/tools/build.xml",
                "+++ b/lucene/tools/build.xml",
                "@@ -42,2 +42,5 @@",
                "+  <!-- disable clover -->",
                "+  <target name=\"-clover.setup\" if=\"run.clover\"/>",
                "+",
                "   <!--  ",
                "diff --git a/solr/test-framework/build.xml b/solr/test-framework/build.xml",
                "index baea9969f35..1e275f2688d 100644",
                "--- a/solr/test-framework/build.xml",
                "+++ b/solr/test-framework/build.xml",
                "@@ -39,3 +39,3 @@",
                "-  <target name=\"compile-core\" depends=\"resolve, compile-solr-core, compile-test-framework\">",
                "+  <target name=\"compile-core\" depends=\"resolve, clover, compile-solr-core, compile-test-framework\">",
                "     <!-- TODO: why does test-framework override compile-core to use this special classpath? -->",
                "@@ -51,5 +51,2 @@",
                "-  <!-- redefine the clover setup, because we dont want to run clover for the test-framework -->",
                "-  <target name=\"-clover.setup\" if=\"run.clover\"/>",
                "-  ",
                "   <!-- redefine the forbidden apis for tests, as we check ourselves -->"
            ],
            "changed_files": [
                "build.xml",
                "lucene/tools/build.xml",
                "solr/test-framework/build.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8170": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "95e94ab9d961ad5a490dd13e8e7ea834119dcf7f"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8170",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4bdc99a465f830c5fe71abc2833327b9c27b221c",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520301098,
            "hunks": 1,
            "message": "SOLR-12047: Increase checkStateInZk timeout",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkController.java b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "index a159db5c5b2..9d9d2bb8cf0 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "@@ -1706,3 +1706,3 @@ public class ZkController {",
                "       try {",
                "-        zkStateReader.waitForState(cd.getCollectionName(), 3, TimeUnit.SECONDS, (n, c) -> {",
                "+        zkStateReader.waitForState(cd.getCollectionName(), 10, TimeUnit.SECONDS, (n, c) -> {",
                "           collectionState.set(c);"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/ZkController.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12047": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "d72c369fb2f5d4f7904d0821037fcee924516258"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12047",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1a4627d385fcd5174e38061d136b87187ba45706",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518278934,
            "hunks": 2,
            "message": "SOLR-10261: Failure in replica didn't cause LIR; now it does",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.java b/solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.java",
                "index 1851f3dc633..b200f892f6f 100644",
                "--- a/solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.java",
                "+++ b/solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.java",
                "@@ -28,3 +28,2 @@ import org.apache.solr.client.solrj.request.UpdateRequest;",
                " import org.apache.solr.common.SolrException;",
                "-import org.apache.solr.common.SolrException.ErrorCode;",
                " import org.apache.solr.common.cloud.ZkCoreNodeProps;",
                "@@ -281,3 +280,20 @@ public class SolrCmdDistributor implements Closeable {",
                "       } catch (Exception e) {",
                "-        throw new SolrException(ErrorCode.SERVER_ERROR, \"Failed synchronous update on shard \" + req.node + \" update: \" + req.uReq , e);",
                "+        try {",
                "+          // if false, then the node is probably not \"live\" anymore",
                "+          // and we do not need to send a recovery message",
                "+          Throwable rootCause = SolrException.getRootCause(e);",
                "+          log.error(\"Setting up to try to start recovery on replica {}\", req.node.getUrl(), rootCause);",
                "+          req.cmd.getReq().getCore().getCoreContainer().getZkController().ensureReplicaInLeaderInitiatedRecovery(",
                "+              req.cmd.getReq().getCore().getCoreContainer(),",
                "+              req.node.getCollection(),",
                "+              req.node.getShardId(),",
                "+              req.node.getNodeProps(),",
                "+              req.cmd.getReq().getCore().getCoreDescriptor(),",
                "+              false /* forcePublishState */",
                "+          );",
                "+        } catch (Exception exc) {",
                "+          Throwable setLirZnodeFailedCause = SolrException.getRootCause(exc);",
                "+          log.error(\"Leader failed to set replica \" +",
                "+              req.node.getUrl() + \" state to DOWN due to: \" + setLirZnodeFailedCause, setLirZnodeFailedCause);",
                "+        }",
                "       }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/update/SolrCmdDistributor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-10261": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5dd5a5aae2b926eac4452ce55d4f20886381aee6"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-10261",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "443cc19db2afa28ab258a577d4bbd6e9e0b24b57",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519688632,
            "hunks": 1,
            "message": "LUCENE-8106: fix module regex to recognize Windows path backslashes",
            "diff": [
                "diff --git a/dev-tools/scripts/reproduceJenkinsFailures.py b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "index 5e081cbd2d1..f6da613d7a6 100644",
                "--- a/dev-tools/scripts/reproduceJenkinsFailures.py",
                "+++ b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "@@ -48,3 +48,3 @@ reJenkinsURLWithoutConsoleText = re.compile(r'https?://.*/\\d+/?\\Z', re.IGNORECAS",
                " reJavaFile = re.compile(r'(.*)\\.java\\Z')",
                "-reModule = re.compile(r'\\./(.*)/src/')",
                "+reModule = re.compile(r'\\.[\\\\/](.*)[\\\\/]src[\\\\/]')",
                " reTestOutputFile = re.compile(r'TEST-(.*\\.([^-.]+))(?:-\\d+)?\\.xml\\Z')"
            ],
            "changed_files": [
                "dev-tools/scripts/reproduceJenkinsFailures.py"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8106": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "606e91c2aeb2cb8678fcd40918e04cd3aef3022c"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8106",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9876e8832ad40288e8a852f1594e520495da2cfa",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518805689,
            "hunks": 6,
            "message": "SOLR-11988: Fix exists() method in EphemeralDirectoryFactory/MockDirectoryFactory to prevent false positives (cherry picked from commit ee51b658ece5b23431a2200e763f5198b53952fa)",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java b/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java",
                "index e7e33a56992..fab33005e93 100644",
                "--- a/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java",
                "+++ b/solr/core/src/java/org/apache/solr/core/DirectoryFactory.java",
                "@@ -111,5 +111,10 @@ public abstract class DirectoryFactory implements NamedListInitializedPlugin,",
                "   /**",
                "-   * Returns true if a Directory exists for a given path.",
                "+   * Returns true if a Directory exists for a given path in the underlying (stable) storage <em>and</em> ",
                "+   * contains at least one file.  ",
                "+   * Note that the existence of a {@link Directory} <em>Object</em> as returned by a previous call to the ",
                "+   * {@link #get} method (on the specified <code>path</code>) is not enough to cause this method to return ",
                "+   * true.  Some prior user of that Directory must have written &amp; synced at least one file to that ",
                "+   * Directory (and at least one file must still exist)",
                "+   *",
                "    * @throws IOException If there is a low-level I/O error.",
                "-   * ",
                "    */",
                "diff --git a/solr/core/src/java/org/apache/solr/core/EphemeralDirectoryFactory.java b/solr/core/src/java/org/apache/solr/core/EphemeralDirectoryFactory.java",
                "index d5bcbb8fb3f..c7708ea3d20 100644",
                "--- a/solr/core/src/java/org/apache/solr/core/EphemeralDirectoryFactory.java",
                "+++ b/solr/core/src/java/org/apache/solr/core/EphemeralDirectoryFactory.java",
                "@@ -35,12 +35,14 @@ public abstract class EphemeralDirectoryFactory extends CachingDirectoryFactory",
                "     synchronized (this) {",
                "-      CacheValue cacheValue = byPathCache.get(fullPath);",
                "-      Directory directory = null;",
                "-      if (cacheValue != null) {",
                "-        directory = cacheValue.directory;",
                "+      final CacheValue cacheValue = byPathCache.get(fullPath);",
                "+      if (null == cacheValue) {",
                "+        return false;",
                "       }",
                "-      if (directory == null) {",
                "+      final Directory directory = cacheValue.directory;",
                "+      if (null == directory) {",
                "         return false;",
                "-      } else {",
                "-        return true;",
                "       }",
                "+      if (0 < directory.listAll().length) {",
                "+        return true;",
                "+      } ",
                "+      return false;",
                "     }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/core/DirectoryFactory.java",
                "solr/core/src/java/org/apache/solr/core/EphemeralDirectoryFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11988": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "ee51b658ece5b23431a2200e763f5198b53952fa"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11988",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1ab2f5adbac08b27b7aff484075fb4733277d4a2",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519852670,
            "hunks": 2,
            "message": "Ref Guide: fix line height changed in SOLR-11646 which inadvertently vertically stretched the left-hand nav;  adds a new CSS rule for tabbed sections on a page with the larger line height and changes back left-hand nav line height",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/css/customstyles.css b/solr/solr-ref-guide/src/css/customstyles.css",
                "index ca2071e67ea..8ead55c7b9b 100755",
                "--- a/solr/solr-ref-guide/src/css/customstyles.css",
                "+++ b/solr/solr-ref-guide/src/css/customstyles.css",
                "@@ -235,3 +235,3 @@ background-color: #347DBE;",
                " .nav > li > a {",
                "-    line-height: 30px;",
                "+    line-height: 20px;",
                "     padding: 4px 10px;",
                "@@ -239,2 +239,6 @@ background-color: #347DBE;",
                "+.nav-pills > li > a {",
                "+  line-height: 30px;",
                "+}",
                "+",
                " ul#mysidebar {"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/css/customstyles.css"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11646": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "57cfdb1a48a836569c09930b65b6159652c74107"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11646",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "130a0c0907ae946c893daec73efcfbe5068a4799",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518352825,
            "hunks": 3,
            "message": "LUCENE-8169: Update link to OpenNLP test issue; remove instrumentation restriction to org.apache package, as we no longer need a license for OpenClover; remove permgen (no longer valid in Java 8+)",
            "diff": [
                "diff --git a/lucene/common-build.xml b/lucene/common-build.xml",
                "index 43a6aa1e6f5..4fa59ac9364 100644",
                "--- a/lucene/common-build.xml",
                "+++ b/lucene/common-build.xml",
                "@@ -145,3 +145,3 @@",
                "-  <condition property=\"tests.clover.args\" value=\"-XX:ReservedCodeCacheSize=192m -XX:MaxPermSize=256m -Dclover.pertest.coverage=off\" else=\"\">",
                "+  <condition property=\"tests.clover.args\" value=\"-XX:ReservedCodeCacheSize=192m -Dclover.pertest.coverage=off\" else=\"\">",
                "     <isset property=\"run.clover\"/>",
                "@@ -1631,8 +1631,5 @@ ${tests-output}/junit4-*.suites     - per-JVM executed suites",
                "     <clover-setup initString=\"${clover.db.dir}/coverage.db\" encoding=\"${build.encoding}\">",
                "-      <fileset dir=\"${src.dir}\" erroronmissingdir=\"no\">",
                "-        <include name=\"org/apache/**/*.java\" />",
                "-      </fileset>",
                "+      <fileset dir=\"${src.dir}\" erroronmissingdir=\"no\"/>",
                "       <testsources dir=\"${tests.src.dir}\" erroronmissingdir=\"no\">",
                "-        <include name=\"org/apache/**/*.java\" />",
                "-        <exclude name=\"**/TestOpenNLP*Factory.java\"/><!-- https://jira.atlassian.com/browse/CLOV-1984 -->",
                "+        <exclude name=\"**/TestOpenNLP*Factory.java\"/><!-- https://bitbucket.org/openclover/clover/issues/59 -->",
                "       </testsources>"
            ],
            "changed_files": [
                "lucene/common-build.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8169": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "26dbe6538b72703f11de823d1cd06354ea0510d3"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8169",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ef989124f345af46a905d1196bc589ef37b221c9",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519839500,
            "hunks": 1,
            "message": "SOLR-11769: optimize useFilterForSortedQuery=true when no filter queries",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java b/solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java",
                "index 34374764807..8dadd37c1fe 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java",
                "@@ -1399,4 +1399,6 @@ public class SolrIndexSearcher extends IndexSearcher implements Closeable, SolrI",
                "         out.docSet = getDocSet(cmd.getQuery(), cmd.getFilter());",
                "-        DocSet bigFilt = getDocSet(cmd.getFilterList());",
                "-        if (bigFilt != null) out.docSet = out.docSet.intersection(bigFilt);",
                "+        List<Query> filterList = cmd.getFilterList();",
                "+        if (filterList != null && !filterList.isEmpty()) {",
                "+          out.docSet = out.docSet.intersection(getDocSet(cmd.getFilterList()));",
                "+        }",
                "       }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/search/SolrIndexSearcher.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11769": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "9b3d68843beb5e0a834d6847446a480742665805"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11769",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "98337f9af5075cc60ddcdd0e1751e9c7ab7d8895",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518267216,
            "hunks": 10,
            "message": "LUCENE-8157: Do a better job of handling coplanar points in polygon construction.  Thanks to Ignacio Vera for his help on this code.",
            "diff": [
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPolygonFactory.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPolygonFactory.java",
                "index 5de93fe528f..8105b80529e 100755",
                "--- a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPolygonFactory.java",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPolygonFactory.java",
                "@@ -496,4 +496,3 @@ public class GeoPolygonFactory {",
                "         }",
                "-        Plane nextPlane = new Plane(startPoint, nextPoint);",
                "-        if (Math.abs(nextPlane.evaluate(endPoint)) > Vector.MINIMUM_RESOLUTION + leniencyValue) {",
                "+        if (!Plane.arePointsCoplanar(startPoint, endPoint, nextPoint)) {",
                "           //no coplanar.",
                "@@ -523,3 +522,2 @@ public class GeoPolygonFactory {",
                "-",
                "   /** Pick a random pole that has a good chance of being inside the polygon described by the points.",
                "@@ -1081,2 +1079,5 @@ public class GeoPolygonFactory {",
                "       final Edge newLastEdge = edgeBuffer.getNext(lastEdge);",
                "+      if (Plane.arePointsCoplanar(lastEdge.startPoint, lastEdge.endPoint, newLastEdge.endPoint)) {",
                "+        break;",
                "+      }",
                "       if (isWithin(newLastEdge.endPoint, includedEdges)) {",
                "@@ -1087,2 +1088,6 @@ public class GeoPolygonFactory {",
                "         if (firstEdge.startPoint != newLastEdge.endPoint) {",
                "+          if (Plane.arePointsCoplanar(firstEdge.endPoint, firstEdge.startPoint, newLastEdge.endPoint) ||",
                "+            Plane.arePointsCoplanar(firstEdge.startPoint, newLastEdge.endPoint, newLastEdge.startPoint)) {",
                "+            break;",
                "+          }",
                "           returnBoundary = new SidedPlane(firstEdge.endPoint, firstEdge.startPoint, newLastEdge.endPoint);",
                "@@ -1137,2 +1142,5 @@ public class GeoPolygonFactory {",
                "       final Edge newFirstEdge = edgeBuffer.getPrevious(firstEdge);",
                "+      if (Plane.arePointsCoplanar(newFirstEdge.startPoint, newFirstEdge.endPoint, firstEdge.endPoint)) {",
                "+        break;",
                "+      }",
                "       if (isWithin(newFirstEdge.startPoint, includedEdges)) {",
                "@@ -1143,2 +1151,6 @@ public class GeoPolygonFactory {",
                "         if (newFirstEdge.startPoint != lastEdge.endPoint) {",
                "+          if(Plane.arePointsCoplanar(lastEdge.startPoint, lastEdge.endPoint, newFirstEdge.startPoint) ||",
                "+            Plane.arePointsCoplanar(lastEdge.endPoint, newFirstEdge.startPoint, newFirstEdge.endPoint)) {",
                "+            break;",
                "+          }",
                "           returnBoundary = new SidedPlane(lastEdge.startPoint, lastEdge.endPoint, newFirstEdge.startPoint);",
                "@@ -1227,23 +1239,2 @@ public class GeoPolygonFactory {",
                "       returnIsInternal = lastEdge.isInternal;",
                "-      ",
                "-      // Look for coplanarity; abort if so",
                "-      for (int i = 0; i < points.size(); i++) {",
                "-        final GeoPoint start = points.get(i);",
                "-        final GeoPoint end = points.get(getLegalIndex(i + 1, points.size()));",
                "-        // We have to find the next point that is not on the plane between start and end.",
                "-        // If there is no such point, it's an error.",
                "-        final Plane planeToFind = new Plane(start, end);",
                "-        int endPointIndex = -1;",
                "-        for (int j = 0; j < points.size(); j++) {",
                "-          final int index = getLegalIndex(j + i + 2, points.size());",
                "-          if (!planeToFind.evaluateIsZero(points.get(index))) {",
                "-            endPointIndex = index;",
                "-            break;",
                "-          }",
                "-        }",
                "-        if (endPointIndex == -1) {",
                "-          return false;",
                "-        }",
                "-      }",
                "-",
                "       edgeBuffer.clear();",
                "@@ -1272,23 +1263,2 @@ public class GeoPolygonFactory {",
                "       }",
                "-      ",
                "-      // Look for coplanarity; abort if so",
                "-      for (int i = 0; i < points.size(); i++) {",
                "-        final GeoPoint start = points.get(i);",
                "-        final GeoPoint end = points.get(getLegalIndex(i + 1, points.size()));",
                "-        // We have to find the next point that is not on the plane between start and end.",
                "-        // If there is no such point, it's an error.",
                "-        final Plane planeToFind = new Plane(start, end);",
                "-        int endPointIndex = -1;",
                "-        for (int j = 0; j < points.size(); j++) {",
                "-          final int index = getLegalIndex(j + i + 2, points.size());",
                "-          if (!planeToFind.evaluateIsZero(points.get(index))) {",
                "-            endPointIndex = index;",
                "-            break;",
                "-          }",
                "-        }",
                "-        if (endPointIndex == -1) {",
                "-          return false;",
                "-        }",
                "-      }",
                "-",
                "       // Modify the edge buffer",
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane.java",
                "index c72c8c61f2a..e40fb271d03 100755",
                "--- a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane.java",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane.java",
                "@@ -668,2 +668,17 @@ public class Plane extends Vector {",
                "   }",
                "+",
                "+  /**",
                "+   * Checks if three points are coplanar in any of the three planes they can describe.",
                "+   * The planes are all assumed to go through the origin.",
                "+   *",
                "+   * @param A The first point.",
                "+   * @param B The second point.",
                "+   * @param C The third point",
                "+   * @return true if provided points are coplanar in any of the three planes they can describe.",
                "+   */",
                "+  public static boolean arePointsCoplanar(final GeoPoint A, final GeoPoint B, final GeoPoint C) {",
                "+    return Vector.crossProductEvaluateIsZero(A, B, C) ||",
                "+      Vector.crossProductEvaluateIsZero(A, C, B) ||",
                "+      Vector.crossProductEvaluateIsZero(B, C, A);",
                "+  }",
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "index 454439b3088..f901d291f21 100755",
                "--- a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "@@ -182,2 +182,75 @@ public class Vector {",
                "+  /**",
                "+    * Evaluate the cross product of two vectors against a point.",
                "+    * If the dot product of the resultant vector resolves to \"zero\", then",
                "+    * return true.",
                "+    * @param A is the first vector to use for the cross product.",
                "+    * @param B is the second vector to use for the cross product.",
                "+    * @param point is the point to evaluate.",
                "+    * @return true if we get a zero dot product.",
                "+    */",
                "+  public static boolean crossProductEvaluateIsZero(final Vector A, final Vector B, final Vector point) {",
                "+    // Include Gram-Schmidt in-line so we avoid creating objects unnecessarily",
                "+    // Compute the naive perpendicular",
                "+    final double thisX = A.y * B.z - A.z * B.y;",
                "+    final double thisY = A.z * B.x - A.x * B.z;",
                "+    final double thisZ = A.x * B.y - A.y * B.x;",
                "+    ",
                "+    final double magnitude = magnitude(thisX, thisY, thisZ);",
                "+    if (magnitude < MINIMUM_RESOLUTION) {",
                "+      return true;",
                "+    }",
                "+    ",
                "+    final double inverseMagnitude = 1.0/magnitude;",
                "+    ",
                "+    double normalizeX = thisX * inverseMagnitude;",
                "+    double normalizeY = thisY * inverseMagnitude;",
                "+    double normalizeZ = thisZ * inverseMagnitude;",
                "+    // For a plane to work, the dot product between the normal vector",
                "+    // and the points needs to be less than the minimum resolution.",
                "+    // This is sometimes not true for points that are very close. Therefore",
                "+    // we need to adjust",
                "+    int i = 0;",
                "+    while (true) {",
                "+      final double currentDotProdA = A.x * normalizeX + A.y * normalizeY + A.z * normalizeZ;",
                "+      final double currentDotProdB = B.x * normalizeX + B.y * normalizeY + B.z * normalizeZ;",
                "+      if (Math.abs(currentDotProdA) < MINIMUM_RESOLUTION && Math.abs(currentDotProdB) < MINIMUM_RESOLUTION) {",
                "+        break;",
                "+      }",
                "+      // Converge on the one that has largest dot product",
                "+      final double currentVectorX;",
                "+      final double currentVectorY;",
                "+      final double currentVectorZ;",
                "+      final double currentDotProd;",
                "+      if (Math.abs(currentDotProdA) > Math.abs(currentDotProdB)) {",
                "+        currentVectorX = A.x;",
                "+        currentVectorY = A.y;",
                "+        currentVectorZ = A.z;",
                "+        currentDotProd = currentDotProdA;",
                "+      } else {",
                "+        currentVectorX = B.x;",
                "+        currentVectorY = B.y;",
                "+        currentVectorZ = B.z;",
                "+        currentDotProd = currentDotProdB;",
                "+      }",
                "+",
                "+      // Adjust",
                "+      normalizeX = normalizeX - currentDotProd * currentVectorX;",
                "+      normalizeY = normalizeY - currentDotProd * currentVectorY;",
                "+      normalizeZ = normalizeZ - currentDotProd * currentVectorZ;",
                "+      // Normalize",
                "+      final double correctedMagnitude = magnitude(normalizeX, normalizeY, normalizeZ);",
                "+      final double inverseCorrectedMagnitude = 1.0 / correctedMagnitude;",
                "+      normalizeX = normalizeX * inverseCorrectedMagnitude;",
                "+      normalizeY = normalizeY * inverseCorrectedMagnitude;",
                "+      normalizeZ = normalizeZ * inverseCorrectedMagnitude;",
                "+      //This is  probably not needed as the method seems to converge",
                "+      //quite quickly. But it is safer to have a way out.",
                "+      if (i++ > 10) {",
                "+        throw new IllegalArgumentException(\"Plane could not be constructed! Could not find a normal vector.\");",
                "+      }",
                "+    }",
                "+    return Math.abs(normalizeX * point.x + normalizeY * point.y + normalizeZ * point.z) < MINIMUM_RESOLUTION;",
                "+  }",
                "+",
                "   /**"
            ],
            "changed_files": [
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPolygonFactory.java",
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane.java",
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8157": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e9cfcd282abb82c2f58d6040de9bfe3828517fe8"
                ],
                [
                    "no-tag",
                    "1fe34f1e89f978788dba002c433806bbeb6344a9"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8157",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1d55336d0f50ddc4fcbabfa94b62a8cebb285306",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520692257,
            "hunks": 78,
            "message": "SOLR-11629: Add new CloudSolrClient.Builder ctors CloudSolrClient.Builder can be pointed at a Solr cluster in two ways: a ZK connection string, or one or more Solr base URLs.  One of these two values must be provided to create a working CloudSolrClient. Since these values are required, this commit introduces two new ctors, one for each means of CloudSolrClient setup.  It deprecates the existing no-arg CloudSolrClient ctor. Together, these changes make it clearer to our users that these options are required (and mutually exclusive).",
            "diff": [
                "diff --git a/solr/contrib/analytics/src/java/org/apache/solr/analytics/stream/AnalyticsShardRequestManager.java b/solr/contrib/analytics/src/java/org/apache/solr/analytics/stream/AnalyticsShardRequestManager.java",
                "index f65e58f459c..7a53500ca94 100644",
                "--- a/solr/contrib/analytics/src/java/org/apache/solr/analytics/stream/AnalyticsShardRequestManager.java",
                "+++ b/solr/contrib/analytics/src/java/org/apache/solr/analytics/stream/AnalyticsShardRequestManager.java",
                "@@ -23,2 +23,3 @@ import java.util.Collections;",
                " import java.util.List;",
                "+import java.util.Optional;",
                " import java.util.Random;",
                "@@ -85,5 +86,3 @@ public class AnalyticsShardRequestManager {",
                "     this.replicaUrls = new ArrayList<>();",
                "-    this.cloudSolrClient = new Builder()",
                "-        .withZkHost(zkHost)",
                "-        .build();",
                "+    this.cloudSolrClient = new Builder(Collections.singletonList(zkHost), Optional.empty()).build();",
                "     try {",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkController.java b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "index 9d9d2bb8cf0..b7b0b6233c6 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "@@ -40,2 +40,3 @@ import java.util.Locale;",
                " import java.util.Map;",
                "+import java.util.Optional;",
                " import java.util.Set;",
                "@@ -58,3 +59,2 @@ import org.apache.solr.client.solrj.impl.HttpSolrClient.Builder;",
                " import org.apache.solr.client.solrj.impl.SolrClientCloudManager;",
                "-import org.apache.solr.client.solrj.impl.ZkClientClusterStateProvider;",
                " import org.apache.solr.client.solrj.request.CoreAdminRequest.WaitForState;",
                "@@ -616,5 +616,3 @@ public class ZkController {",
                "       }",
                "-      cloudSolrClient = new CloudSolrClient.Builder()",
                "-          .withClusterStateProvider(new ZkClientClusterStateProvider(zkStateReader))",
                "-          .build();",
                "+      cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkServerAddress), Optional.empty()).build();",
                "       cloudManager = new SolrClientCloudManager(new ZkDistributedQueueFactory(zkClient), cloudSolrClient);",
                "diff --git a/solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool.java b/solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool.java",
                "index 76e5bebe2eb..062f434b65c 100644",
                "--- a/solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool.java",
                "+++ b/solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool.java",
                "@@ -34,2 +34,3 @@ import java.util.Arrays;",
                " import java.util.Collection;",
                "+import java.util.Collections;",
                " import java.util.Comparator;",
                "@@ -92,3 +93,3 @@ public class SolrSnapshotsTool implements Closeable {",
                "   public SolrSnapshotsTool(String solrZkEnsemble) {",
                "-    solrClient = (new CloudSolrClient.Builder()).withZkHost(solrZkEnsemble).build();",
                "+    solrClient = new CloudSolrClient.Builder(Collections.singletonList(solrZkEnsemble), Optional.empty()).build();",
                "   }",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/CdcrReplicatorManager.java b/solr/core/src/java/org/apache/solr/handler/CdcrReplicatorManager.java",
                "index d8f3d522b68..abd6ed72f3e 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/CdcrReplicatorManager.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/CdcrReplicatorManager.java",
                "@@ -22,2 +22,3 @@ import java.lang.invoke.MethodHandles;",
                " import java.util.ArrayList;",
                "+import java.util.Collections;",
                " import java.util.List;",
                "@@ -25,2 +26,3 @@ import java.util.Locale;",
                " import java.util.Map;",
                "+import java.util.Optional;",
                " import java.util.concurrent.Callable;",
                "@@ -92,4 +94,3 @@ class CdcrReplicatorManager implements CdcrStateManager.CdcrStateObserver {",
                "-        CloudSolrClient client = new Builder()",
                "-            .withZkHost(zkHost)",
                "+        CloudSolrClient client = new Builder(Collections.singletonList(zkHost), Optional.empty())",
                "             .sendUpdatesOnlyToShardLeaders()",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/AutoscalingHistoryHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/AutoscalingHistoryHandler.java",
                "index f21bd2cdd18..332d3e5a413 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/AutoscalingHistoryHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/AutoscalingHistoryHandler.java",
                "@@ -19,2 +19,3 @@ package org.apache.solr.handler.admin;",
                " import java.lang.invoke.MethodHandles;",
                "+import java.util.Collections;",
                " import java.util.HashMap;",
                "@@ -22,2 +23,3 @@ import java.util.Locale;",
                " import java.util.Map;",
                "+import java.util.Optional;",
                "@@ -122,4 +124,3 @@ public class AutoscalingHistoryHandler extends RequestHandlerBase implements Per",
                "     }",
                "-    try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder()",
                "-        .withZkHost(coreContainer.getZkController().getZkServerAddress())",
                "+    try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(coreContainer.getZkController().getZkServerAddress()), Optional.empty())",
                "         .withHttpClient(coreContainer.getUpdateShardHandler().getHttpClient())",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/sql/SolrSchema.java b/solr/core/src/java/org/apache/solr/handler/sql/SolrSchema.java",
                "index c1bb06547d7..f7318cfabf3 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/sql/SolrSchema.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/sql/SolrSchema.java",
                "@@ -18,4 +18,14 @@ package org.apache.solr.handler.sql;",
                "-import com.google.common.collect.ImmutableMap;",
                "-import org.apache.calcite.rel.type.*;",
                "+import java.io.IOException;",
                "+import java.util.Collections;",
                "+import java.util.EnumSet;",
                "+import java.util.Map;",
                "+import java.util.Optional;",
                "+import java.util.Properties;",
                "+",
                "+import org.apache.calcite.rel.type.RelDataType;",
                "+import org.apache.calcite.rel.type.RelDataTypeFactory;",
                "+import org.apache.calcite.rel.type.RelDataTypeImpl;",
                "+import org.apache.calcite.rel.type.RelDataTypeSystem;",
                "+import org.apache.calcite.rel.type.RelProtoDataType;",
                " import org.apache.calcite.schema.Table;",
                "@@ -32,6 +42,3 @@ import org.apache.solr.common.luke.FieldFlag;",
                "-import java.io.IOException;",
                "-import java.util.EnumSet;",
                "-import java.util.Map;",
                "-import java.util.Properties;",
                "+import com.google.common.collect.ImmutableMap;",
                "@@ -48,3 +55,3 @@ class SolrSchema extends AbstractSchema {",
                "     String zk = this.properties.getProperty(\"zk\");",
                "-    try(CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zk).build()) {",
                "+    try(CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zk), Optional.empty()).build()) {",
                "       cloudSolrClient.connect();",
                "@@ -72,3 +79,3 @@ class SolrSchema extends AbstractSchema {",
                "     String zk = this.properties.getProperty(\"zk\");",
                "-    try(CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zk).build()) {",
                "+    try(CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zk), Optional.empty()).build()) {",
                "       cloudSolrClient.connect();",
                "diff --git a/solr/core/src/java/org/apache/solr/util/SolrCLI.java b/solr/core/src/java/org/apache/solr/util/SolrCLI.java",
                "index d8772ee1d48..a768a321573 100644",
                "--- a/solr/core/src/java/org/apache/solr/util/SolrCLI.java",
                "+++ b/solr/core/src/java/org/apache/solr/util/SolrCLI.java",
                "@@ -18,8 +18,3 @@ package org.apache.solr.util;",
                "-import static java.nio.charset.StandardCharsets.UTF_8;",
                "-import static org.apache.solr.common.SolrException.ErrorCode.FORBIDDEN;",
                "-import static org.apache.solr.common.SolrException.ErrorCode.UNAUTHORIZED;",
                "-import static org.apache.solr.common.params.CommonParams.DISTRIB;",
                "-import static org.apache.solr.common.params.CommonParams.NAME;",
                "-",
                "+import javax.net.ssl.SSLPeerUnverifiedException;",
                " import java.io.Console;",
                "@@ -47,2 +42,3 @@ import java.util.Base64;",
                " import java.util.Collection;",
                "+import java.util.Collections;",
                " import java.util.Enumeration;",
                "@@ -64,4 +60,2 @@ import java.util.zip.ZipInputStream;",
                "-import javax.net.ssl.SSLPeerUnverifiedException;",
                "-",
                " import org.apache.commons.cli.CommandLine;",
                "@@ -133,2 +127,8 @@ import org.slf4j.LoggerFactory;",
                "+import static java.nio.charset.StandardCharsets.UTF_8;",
                "+import static org.apache.solr.common.SolrException.ErrorCode.FORBIDDEN;",
                "+import static org.apache.solr.common.SolrException.ErrorCode.UNAUTHORIZED;",
                "+import static org.apache.solr.common.params.CommonParams.DISTRIB;",
                "+import static org.apache.solr.common.params.CommonParams.NAME;",
                "+",
                " /**",
                "@@ -208,3 +208,3 @@ public class SolrCLI {",
                "       log.debug(\"Connecting to Solr cluster: \" + zkHost);",
                "-      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zkHost).build()) {",
                "+      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {",
                "@@ -1377,3 +1377,3 @@ public class SolrCLI {",
                "-      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zkHost).build()) {",
                "+      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {",
                "         cloudSolrClient.connect();",
                "@@ -1503,3 +1503,3 @@ public class SolrCLI {",
                "-      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zkHost).build()) {",
                "+      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {",
                "         echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\", cli);",
                "@@ -2382,3 +2382,3 @@ public class SolrCLI {",
                "       String zkHost = getZkHost(cli);",
                "-      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zkHost).build()) {",
                "+      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {",
                "         echoIfVerbose(\"Connecting to ZooKeeper at \" + zkHost, cli);",
                "@@ -2986,4 +2986,3 @@ public class SolrCLI {",
                "       try {",
                "-        cloudClient = new CloudSolrClient.Builder()",
                "-            .withZkHost(zkHost)",
                "+        cloudClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty())",
                "             .build();",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.java b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.java",
                "index dfe15dffa65..17b64abc627 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.java",
                "@@ -32,2 +32,3 @@ import java.util.List;",
                " import java.util.Map;",
                "+import java.util.Optional;",
                " import java.util.Random;",
                "@@ -1358,2 +1359,31 @@ public class CloudSolrClient extends SolrClient {",
                "     protected ClusterStateProvider stateProvider;",
                "+    ",
                "+    /**",
                "+     * @deprecated use other constructors instead.  This constructor will be changing visibility in an upcoming release.",
                "+     */",
                "+    @Deprecated",
                "+    public Builder() {}",
                "+    ",
                "+    /**",
                "+     * Provide a series of Solr URLs to be used when configuring {@link CloudSolrClient} instances.",
                "+     * The solr client will use these urls to understand the cluster topology, which solr nodes are active etc.",
                "+     * ",
                "+     * Provided Solr URLs are expected to point to the root Solr path (\"http://hostname:8983/solr\"); it should not",
                "+     * include any collections, cores, or other path components.",
                "+     */",
                "+    public Builder(List<String> solrUrls) {",
                "+      this.solrUrls = solrUrls;",
                "+    }",
                "+    ",
                "+    /**",
                "+     * Provide a series of ZK hosts which will be used when configuring {@link CloudSolrClient} instances.",
                "+     * ",
                "+     * @param zkHosts a List of at least one ZooKeeper host and port",
                "+     * @param zkChroot the path to the root ZooKeeper node containing Solr data.  May be empty if Solr-data is located",
                "+     * at the ZooKeeper root",
                "+     */",
                "+    public Builder(List<String> zkHosts, Optional<String> zkChroot) {",
                "+      this.zkHosts = zkHosts;",
                "+      if (zkChroot.isPresent()) this.zkChroot = zkChroot.get();",
                "+    }",
                "@@ -1367,3 +1397,6 @@ public class CloudSolrClient extends SolrClient {",
                "      *          state.",
                "+     *          ",
                "+     * @deprecated use Zk-host constructor instead",
                "      */",
                "+    @Deprecated",
                "     public Builder withZkHost(String zkHost) {",
                "@@ -1381,3 +1414,6 @@ public class CloudSolrClient extends SolrClient {",
                "      * include any collections, cores, or other path components.",
                "+     * ",
                "+     * @deprecated use Solr-URL constructor instead",
                "      */",
                "+    @Deprecated",
                "     public Builder withSolrUrl(String solrUrl) {",
                "@@ -1394,3 +1430,6 @@ public class CloudSolrClient extends SolrClient {",
                "      * include any collections, cores, or other path components.",
                "+     * ",
                "+     * @deprecated use Solr URL constructors instead",
                "      */",
                "+    @Deprecated",
                "     public Builder withSolrUrl(Collection<String> solrUrls) {",
                "@@ -1418,3 +1457,6 @@ public class CloudSolrClient extends SolrClient {",
                "      *          connect string may not be in the same order you added them.",
                "+     *          ",
                "+     * @deprecated use Zk-host constructor instead",
                "      */",
                "+    @Deprecated",
                "     public Builder withZkHost(Collection<String> zkHosts) {",
                "@@ -1426,3 +1468,6 @@ public class CloudSolrClient extends SolrClient {",
                "      * Provides a ZooKeeper chroot for the builder to use when creating clients.",
                "+     * ",
                "+     * @deprecated use Zk-host constructor instead",
                "      */",
                "+    @Deprecated",
                "     public Builder withZkChroot(String zkChroot) {",
                "@@ -1479,2 +1524,10 @@ public class CloudSolrClient extends SolrClient {",
                "+    /**",
                "+     * Expert feature where you want to implement a custom cluster discovery mechanism of the solr nodes as part of the",
                "+     * cluster.",
                "+     *",
                "+     * @deprecated since this is an expert feature we don't want to expose this to regular users. To use this feature",
                "+     * extend CloudSolrClient.Builder and pass your custom ClusterStateProvider",
                "+     */",
                "+    @Deprecated",
                "     public Builder withClusterStateProvider(ClusterStateProvider stateProvider) {",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/SolrClientCache.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/SolrClientCache.java",
                "index 132a1a89576..a45c5de2a20 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/SolrClientCache.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/SolrClientCache.java",
                "@@ -22,3 +22,6 @@ import java.lang.invoke.MethodHandles;",
                " import java.util.Map;",
                "+import java.util.Optional;",
                "+import java.util.ArrayList;",
                " import java.util.HashMap;",
                "+import java.util.List;",
                "@@ -56,4 +59,5 @@ public class SolrClientCache implements Serializable {",
                "     } else {",
                "-      CloudSolrClient.Builder builder = new CloudSolrClient.Builder()",
                "-          .withZkHost(zkHost);",
                "+      final List<String> hosts = new ArrayList<String>();",
                "+      hosts.add(zkHost);",
                "+      CloudSolrClient.Builder builder = new CloudSolrClient.Builder(hosts, Optional.empty());",
                "       if (httpClient != null) {",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java",
                "index 29e485b696e..b1910850dfa 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java",
                "@@ -25,2 +25,3 @@ import java.util.Locale;",
                " import java.util.Map;",
                "+import java.util.Optional;",
                " import java.util.Map.Entry;",
                "@@ -325,5 +326,5 @@ public class FacetStream extends TupleStream implements Expressible  {",
                "     } else {",
                "-      cloudSolrClient = new Builder()",
                "-          .withZkHost(zkHost)",
                "-          .build();",
                "+      final List<String> hosts = new ArrayList<>();",
                "+      hosts.add(zkHost);",
                "+      cloudSolrClient = new Builder(hosts, Optional.empty()).build();",
                "     }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream.java",
                "index b26603fb93d..01aa0475407 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream.java",
                "@@ -27,2 +27,3 @@ import java.util.Map;",
                " import java.util.Map.Entry;",
                "+import java.util.Optional;",
                " import java.util.Random;",
                "@@ -177,3 +178,5 @@ public class RandomStream extends TupleStream implements Expressible  {",
                "     } else {",
                "-      cloudSolrClient = (new CloudSolrClient.Builder()).withZkHost(zkHost).build();",
                "+      final List<String> hosts = new ArrayList<>();",
                "+      hosts.add(zkHost);",
                "+      cloudSolrClient = new CloudSolrClient.Builder(hosts, Optional.empty()).build();",
                "     }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java",
                "index 3c2c2b51115..610a6df2bd4 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java",
                "@@ -27,2 +27,3 @@ import java.util.Locale;",
                " import java.util.Map;",
                "+import java.util.Optional;",
                " import java.util.Map.Entry;",
                "@@ -275,8 +276,8 @@ public class TimeSeriesStream extends TupleStream implements Expressible  {",
                "   public void open() throws IOException {",
                "-    if(cache != null) {",
                "+    if (cache != null) {",
                "       cloudSolrClient = cache.getCloudSolrClient(zkHost);",
                "     } else {",
                "-      cloudSolrClient = new Builder()",
                "-          .withZkHost(zkHost)",
                "-          .build();",
                "+      final List<String> hosts = new ArrayList<>();",
                "+      hosts.add(zkHost);",
                "+      cloudSolrClient = new Builder(hosts, Optional.empty()).build();",
                "     }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream.java",
                "index 4bb62235997..9f3cfb6cb38 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream.java",
                "@@ -28,2 +28,3 @@ import java.util.Locale;",
                " import java.util.Map;",
                "+import java.util.Optional;",
                " import java.util.Map.Entry;",
                "@@ -296,4 +297,5 @@ public class TopicStream extends CloudSolrStream implements Expressible  {",
                "     } else {",
                "-      cloudSolrClient = new Builder()",
                "-          .withZkHost(zkHost)",
                "+      final List<String> hosts = new ArrayList<String>();",
                "+      hosts.add(zkHost);",
                "+      cloudSolrClient = new Builder(hosts, Optional.empty())",
                "           .build();",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/UpdateStream.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/UpdateStream.java",
                "index 22fbfd8d69e..a08f838c0c9 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/UpdateStream.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/UpdateStream.java",
                "@@ -25,2 +25,3 @@ import java.util.Locale;",
                " import java.util.Map;",
                "+import java.util.Optional;",
                "@@ -263,5 +264,5 @@ public class UpdateStream extends TupleStream implements Expressible {",
                "     } else {",
                "-      this.cloudSolrClient = new Builder()",
                "-          .withZkHost(zkHost)",
                "-          .build();",
                "+      final List<String> hosts = new ArrayList<>();",
                "+      hosts.add(zkHost);",
                "+      this.cloudSolrClient = new Builder(hosts, Optional.empty()).build();",
                "       this.cloudSolrClient.connect();",
                "diff --git a/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java b/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java",
                "index bef95195624..e090246d5f2 100644",
                "--- a/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java",
                "+++ b/solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java",
                "@@ -57,2 +57,3 @@ import java.util.Map;",
                " import java.util.Map.Entry;",
                "+import java.util.Optional;",
                " import java.util.Properties;",
                "@@ -68,2 +69,3 @@ import com.carrotsearch.randomizedtesting.annotations.ThreadLeakLingering;",
                " import com.carrotsearch.randomizedtesting.rules.SystemPropertiesRestoreRule;",
                "+",
                " import org.apache.commons.io.FileUtils;",
                "@@ -81,3 +83,5 @@ import org.apache.solr.client.solrj.ResponseParser;",
                " import org.apache.solr.client.solrj.embedded.JettyConfig;",
                "+import org.apache.solr.client.solrj.embedded.JettySolrRunner;",
                " import org.apache.solr.client.solrj.impl.CloudSolrClient;",
                "+import org.apache.solr.client.solrj.impl.ClusterStateProvider;",
                " import org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrClient;",
                "@@ -2236,18 +2240,39 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "   public static class CloudSolrClientBuilder extends CloudSolrClient.Builder {",
                "-",
                "-    public CloudSolrClientBuilder() {",
                "-      this.directUpdatesToLeadersOnly = random().nextBoolean();",
                "-      this.shardLeadersOnly = random().nextBoolean();",
                "-      this.parallelUpdates = random().nextBoolean();",
                "+    ",
                "+    public CloudSolrClientBuilder(List<String> zkHosts, Optional<String> zkChroot) {",
                "+      super(zkHosts, zkChroot);",
                "+      randomizeCloudSolrClient();",
                "     }",
                "-",
                "-    /** Randomly chooses the cluster state provider -- either ZK based or HTTP. */",
                "-    public CloudSolrClient.Builder withCluster(MiniSolrCloudCluster cluster) {",
                "+    ",
                "+    public CloudSolrClientBuilder(ClusterStateProvider stateProvider) {",
                "+      this.stateProvider = stateProvider;",
                "+      randomizeCloudSolrClient();",
                "+    }",
                "+    ",
                "+    public CloudSolrClientBuilder(MiniSolrCloudCluster cluster) {",
                "       if (random().nextBoolean()) {",
                "-        return withZkHost(cluster.getZkServer().getZkAddress());",
                "+        this.zkHosts.add(cluster.getZkServer().getZkAddress());",
                "       } else {",
                "-        return withSolrUrl(cluster.getRandomJetty(random()).getBaseUrl().toString());",
                "+        populateSolrUrls(cluster);",
                "       }",
                "+      ",
                "+      randomizeCloudSolrClient();",
                "+    }",
                "+    ",
                "+    private void populateSolrUrls(MiniSolrCloudCluster cluster) {",
                "+      if (random().nextBoolean()) {",
                "+        final List<JettySolrRunner> solrNodes = cluster.getJettySolrRunners();",
                "+        for (JettySolrRunner node : solrNodes) {",
                "+          this.solrUrls.add(node.getBaseUrl().toString());",
                "+        }",
                "+      } else {",
                "+        this.solrUrls.add(cluster.getRandomJetty(random()).getBaseUrl().toString());",
                "+      }",
                "+    }",
                "+    ",
                "+    private void randomizeCloudSolrClient() {",
                "+      this.directUpdatesToLeadersOnly = random().nextBoolean();",
                "+      this.shardLeadersOnly = random().nextBoolean();",
                "+      this.parallelUpdates = random().nextBoolean();",
                "     }",
                "-",
                "   }",
                "@@ -2260,5 +2285,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "   public static CloudSolrClient getCloudSolrClient(String zkHost) {",
                "-    return new CloudSolrClientBuilder()",
                "-        .withZkHost(zkHost)",
                "-        .build();",
                "+    return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty()).build();",
                "   }",
                "@@ -2271,5 +2294,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "   public static CloudSolrClient getCloudSolrClient(MiniSolrCloudCluster cluster) {",
                "-    return new CloudSolrClientBuilder()",
                "-        .withCluster(cluster)",
                "-        .build();",
                "+    return new CloudSolrClientBuilder(cluster).build();",
                "   }",
                "@@ -2282,4 +2303,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "   public static CloudSolrClient getCloudSolrClient(String zkHost, HttpClient httpClient) {",
                "-    return new CloudSolrClientBuilder()",
                "-        .withZkHost(zkHost)",
                "+    return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())",
                "         .withHttpClient(httpClient)",
                "@@ -2295,4 +2315,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "     if (shardLeadersOnly) {",
                "-      return new CloudSolrClientBuilder()",
                "-          .withZkHost(zkHost)",
                "+      return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())",
                "           .sendUpdatesOnlyToShardLeaders()",
                "@@ -2300,4 +2319,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "     }",
                "-    return new CloudSolrClientBuilder()",
                "-        .withZkHost(zkHost)",
                "+    return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())",
                "         .sendUpdatesToAllReplicasInShard()",
                "@@ -2307,3 +2325,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "   public static CloudSolrClientBuilder newCloudSolrClient(String zkHost) {",
                "-    return (CloudSolrClientBuilder) new CloudSolrClientBuilder().withZkHost(zkHost);",
                "+    return (CloudSolrClientBuilder) new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty());",
                "   }",
                "@@ -2317,4 +2335,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "     if (shardLeadersOnly) {",
                "-      return new CloudSolrClientBuilder()",
                "-          .withZkHost(zkHost)",
                "+      return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())",
                "           .sendUpdatesOnlyToShardLeaders()",
                "@@ -2323,4 +2340,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "     }",
                "-    return new CloudSolrClientBuilder()",
                "-        .withZkHost(zkHost)",
                "+    return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())",
                "         .sendUpdatesToAllReplicasInShard()",
                "@@ -2337,4 +2353,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "     if (shardLeadersOnly) {",
                "-      return new CloudSolrClientBuilder()",
                "-          .withZkHost(zkHost)",
                "+      return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())",
                "           .sendUpdatesOnlyToShardLeaders()",
                "@@ -2344,4 +2359,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "     }",
                "-    return new CloudSolrClientBuilder()",
                "-        .withZkHost(zkHost)",
                "+    return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())",
                "         .sendUpdatesToAllReplicasInShard()",
                "@@ -2361,4 +2375,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "     if (shardLeadersOnly) {",
                "-      return new CloudSolrClientBuilder()",
                "-          .withZkHost(zkHost)",
                "+      return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())",
                "           .withHttpClient(httpClient)",
                "@@ -2367,4 +2380,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "     }",
                "-    return new CloudSolrClientBuilder()",
                "-        .withZkHost(zkHost)",
                "+    return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())",
                "         .withHttpClient(httpClient)",
                "@@ -2382,4 +2394,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "     if (shardLeadersOnly) {",
                "-      return new CloudSolrClientBuilder()",
                "-          .withZkHost(zkHost)",
                "+      return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())",
                "           .withHttpClient(httpClient)",
                "@@ -2390,4 +2401,3 @@ public abstract class SolrTestCaseJ4 extends LuceneTestCase {",
                "     }",
                "-    return new CloudSolrClientBuilder()",
                "-        .withZkHost(zkHost)",
                "+    return new CloudSolrClientBuilder(Collections.singletonList(zkHost), Optional.empty())",
                "         .withHttpClient(httpClient)",
                "diff --git a/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java b/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "index 9ffea0f009e..2f9ef12d555 100644",
                "--- a/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "+++ b/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "@@ -500,4 +500,3 @@ public class MiniSolrCloudCluster {",
                "   protected CloudSolrClient buildSolrClient() {",
                "-    return new Builder()",
                "-        .withZkHost(getZkServer().getZkAddress())",
                "+    return new Builder(Collections.singletonList(getZkServer().getZkAddress()), Optional.empty())",
                "         .build();"
            ],
            "changed_files": [
                "solr/contrib/analytics/src/java/org/apache/solr/analytics/stream/AnalyticsShardRequestManager.java",
                "solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "solr/core/src/java/org/apache/solr/core/snapshots/SolrSnapshotsTool.java",
                "solr/core/src/java/org/apache/solr/handler/CdcrReplicatorManager.java",
                "solr/core/src/java/org/apache/solr/handler/admin/AutoscalingHistoryHandler.java",
                "solr/core/src/java/org/apache/solr/handler/sql/SolrSchema.java",
                "solr/core/src/java/org/apache/solr/util/SolrCLI.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/SolrClientCache.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/RandomStream.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/UpdateStream.java",
                "solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4.java",
                "solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11629": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "971bd26df6ecfa9c266910a8008a2dad52d4443a"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11629",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3c153ccd0e649cec361846a41cd518c7fc64d902",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520388592,
            "hunks": 4,
            "message": "SOLR-12011: FORCELEADER should also remove recovering flag of a replica so it can win the election",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java b/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "index 50b424c083f..ca79982b1ef 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "@@ -196,3 +196,3 @@ public class ZkShardTerms implements AutoCloseable{",
                "   /**",
                "-   * Set a replica's term equals to leader's term.",
                "+   * Set a replica's term equals to leader's term, and remove recovering flag of a replica.",
                "    * This call should only be used by {@link org.apache.solr.common.params.CollectionParams.CollectionAction#FORCELEADER}",
                "@@ -556,2 +556,3 @@ public class ZkShardTerms implements AutoCloseable{",
                "       newValues.put(coreNodeName, maxTerm);",
                "+      newValues.remove(coreNodeName+\"_recovering\");",
                "       return new Terms(newValues, version);",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "index f4855ebeeee..13f0f98f3cd 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "@@ -1150,12 +1150,6 @@ public class CollectionsHandler extends RequestHandlerBase implements Permission",
                "       if (shouldIncreaseReplicaTerms) {",
                "-        OptionalLong optionalMaxTerm = liveReplicas.stream()",
                "+        //TODO only increase terms of replicas less out-of-sync",
                "+        liveReplicas.stream()",
                "             .filter(rep -> zkShardTerms.registered(rep.getName()))",
                "-            .mapToLong(rep -> zkShardTerms.getTerm(rep.getName()))",
                "-            .max();",
                "-        // increase terms of replicas less out-of-sync",
                "-        if (optionalMaxTerm.isPresent()) {",
                "-          liveReplicas.stream()",
                "-              .filter(rep -> zkShardTerms.getTerm(rep.getName()) == optionalMaxTerm.getAsLong())",
                "-              .forEach(rep -> zkShardTerms.setTermEqualsToLeader(rep.getName()));",
                "-        }",
                "+            .forEach(rep -> zkShardTerms.setTermEqualsToLeader(rep.getName()));",
                "       }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12011": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "85b7a2d0bf3398d53394bbc8ec08f6e48bdca4a2"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12011",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "401e4a806c23e3ad899da152e50e816a3a50691a",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518826018,
            "hunks": 9,
            "message": "SOLR-11689: Add l1norm, l2norm and linfnorm Stream Evaluators",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/StreamHandler.java b/solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "index c9616af60f6..f59c8ae5c26 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "@@ -315,2 +315,5 @@ public class StreamHandler extends RequestHandlerBase implements SolrCoreAware,",
                "         .withFunctionName(\"multiKmeans\", MultiKmeansEvaluator.class)",
                "+        .withFunctionName(\"l2norm\", NormEvaluator.class)",
                "+        .withFunctionName(\"l1norm\", L1NormEvaluator.class)",
                "+        .withFunctionName(\"linfnorm\", LInfNormEvaluator.class)",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AbsoluteValueEvaluator.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AbsoluteValueEvaluator.java",
                "index 0757c4ac4cc..1467ec8be2b 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AbsoluteValueEvaluator.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AbsoluteValueEvaluator.java",
                "@@ -21,2 +21,3 @@ import java.util.List;",
                " import java.util.Locale;",
                "+import java.util.stream.Collectors;",
                "@@ -42,3 +43,3 @@ public class AbsoluteValueEvaluator extends RecursiveNumericEvaluator implements",
                "     else if(value instanceof List){",
                "-      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue));",
                "+      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue)).collect(Collectors.toList());",
                "     }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/L1NormEvaluator.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/L1NormEvaluator.java",
                "new file mode 100644",
                "index 00000000000..8ab316e6a6c",
                "--- /dev/null",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/L1NormEvaluator.java",
                "@@ -0,0 +1,56 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.client.solrj.io.eval;",
                "+",
                "+import java.io.IOException;",
                "+import java.util.List;",
                "+import java.util.Locale;",
                "+",
                "+import org.apache.commons.math3.linear.ArrayRealVector;",
                "+import org.apache.solr.client.solrj.io.stream.expr.StreamExpression;",
                "+import org.apache.solr.client.solrj.io.stream.expr.StreamFactory;",
                "+",
                "+public class L1NormEvaluator extends RecursiveObjectEvaluator implements OneValueWorker {",
                "+  protected static final long serialVersionUID = 1L;",
                "+",
                "+  public L1NormEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{",
                "+    super(expression, factory);",
                "+",
                "+    if(1 != containedEvaluators.size()){",
                "+      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting exactly 1 value but found %d\",expression,containedEvaluators.size()));",
                "+    }",
                "+  }",
                "+",
                "+  @Override",
                "+  public Object doWork(Object value) throws IOException{",
                "+    if(null == value){",
                "+      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is null\", constructingFactory.getFunctionName(getClass())));",
                "+    }",
                "+    else if(value instanceof List){",
                "+      List<Number> c = (List<Number>) value;",
                "+      double[] data = new double[c.size()];",
                "+      for(int i=0; i< c.size(); i++) {",
                "+        data[i] = c.get(i).doubleValue();",
                "+      }",
                "+",
                "+      return new ArrayRealVector(data).getL1Norm();",
                "+    }",
                "+    else{",
                "+      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is not a collection, instead a %s was found\", constructingFactory.getFunctionName(getClass()), value.getClass().getSimpleName()));",
                "+    }",
                "+  }",
                "+}",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/LInfNormEvaluator.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/LInfNormEvaluator.java",
                "new file mode 100644",
                "index 00000000000..e354e4e7f95",
                "--- /dev/null",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/LInfNormEvaluator.java",
                "@@ -0,0 +1,56 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.client.solrj.io.eval;",
                "+",
                "+import java.io.IOException;",
                "+import java.util.List;",
                "+import java.util.Locale;",
                "+",
                "+import org.apache.commons.math3.linear.ArrayRealVector;",
                "+import org.apache.solr.client.solrj.io.stream.expr.StreamExpression;",
                "+import org.apache.solr.client.solrj.io.stream.expr.StreamFactory;",
                "+",
                "+public class LInfNormEvaluator extends RecursiveObjectEvaluator implements OneValueWorker {",
                "+  protected static final long serialVersionUID = 1L;",
                "+",
                "+  public LInfNormEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{",
                "+    super(expression, factory);",
                "+",
                "+    if(1 != containedEvaluators.size()){",
                "+      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting exactly 1 value but found %d\",expression,containedEvaluators.size()));",
                "+    }",
                "+  }",
                "+",
                "+  @Override",
                "+  public Object doWork(Object value) throws IOException{",
                "+    if(null == value){",
                "+      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is null\", constructingFactory.getFunctionName(getClass())));",
                "+    }",
                "+    else if(value instanceof List){",
                "+      List<Number> c = (List<Number>) value;",
                "+      double[] data = new double[c.size()];",
                "+      for(int i=0; i< c.size(); i++) {",
                "+        data[i] = c.get(i).doubleValue();",
                "+      }",
                "+",
                "+      return new ArrayRealVector(data).getLInfNorm();",
                "+    }",
                "+    else{",
                "+      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is not a collection, instead a %s was found\", constructingFactory.getFunctionName(getClass()), value.getClass().getSimpleName()));",
                "+    }",
                "+  }",
                "+}",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/NormEvaluator.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/NormEvaluator.java",
                "new file mode 100644",
                "index 00000000000..72258c20f39",
                "--- /dev/null",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/NormEvaluator.java",
                "@@ -0,0 +1,56 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.client.solrj.io.eval;",
                "+",
                "+import java.io.IOException;",
                "+import java.util.List;",
                "+import java.util.Locale;",
                "+",
                "+import org.apache.commons.math3.linear.ArrayRealVector;",
                "+import org.apache.solr.client.solrj.io.stream.expr.StreamExpression;",
                "+import org.apache.solr.client.solrj.io.stream.expr.StreamFactory;",
                "+",
                "+public class NormEvaluator extends RecursiveObjectEvaluator implements OneValueWorker {",
                "+  protected static final long serialVersionUID = 1L;",
                "+",
                "+  public NormEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{",
                "+    super(expression, factory);",
                "+",
                "+    if(1 != containedEvaluators.size()){",
                "+      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting exactly 1 value but found %d\",expression,containedEvaluators.size()));",
                "+    }",
                "+  }",
                "+",
                "+  @Override",
                "+  public Object doWork(Object value) throws IOException{",
                "+    if(null == value){",
                "+      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is null\", constructingFactory.getFunctionName(getClass())));",
                "+    }",
                "+    else if(value instanceof List){",
                "+      List<Number> c = (List<Number>) value;",
                "+      double[] data = new double[c.size()];",
                "+      for(int i=0; i< c.size(); i++) {",
                "+        data[i] = c.get(i).doubleValue();",
                "+      }",
                "+",
                "+      return new ArrayRealVector(data).getNorm();",
                "+    }",
                "+    else{",
                "+      throw new IOException(String.format(Locale.ROOT, \"Unable to find %s(...) because the value is not a collection, instead a %s was found\", constructingFactory.getFunctionName(getClass()), value.getClass().getSimpleName()));",
                "+    }",
                "+  }",
                "+}",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PowerEvaluator.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PowerEvaluator.java",
                "index 12957f7ca46..38d71c08e45 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PowerEvaluator.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PowerEvaluator.java",
                "@@ -19,4 +19,5 @@ package org.apache.solr.client.solrj.io.eval;",
                " import java.io.IOException;",
                "-import java.math.BigDecimal;",
                "+import java.util.ArrayList;",
                " import java.util.Locale;",
                "+import java.util.List;",
                "@@ -42,7 +43,18 @@ public class PowerEvaluator extends RecursiveNumericEvaluator implements TwoValu",
                "     }",
                "-    ",
                "-    BigDecimal value = (BigDecimal)first;",
                "-    BigDecimal exponent = (BigDecimal)second;",
                "-        ",
                "-    return Math.pow(value.doubleValue(), exponent.doubleValue());",
                "+",
                "+    if(first instanceof Number) {",
                "+      Number value = (Number) first;",
                "+      Number exponent = (Number) second;",
                "+      return Math.pow(value.doubleValue(), exponent.doubleValue());",
                "+    } else {",
                "+      List<Number> values = (List<Number>) first;",
                "+      Number exponent = (Number) second;",
                "+",
                "+      List<Number> out = new ArrayList(values.size());",
                "+      for(Number value : values) {",
                "+        out.add(Math.pow(value.doubleValue(), exponent.doubleValue()));",
                "+      }",
                "+",
                "+      return out;",
                "+    }",
                "   }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/AbsoluteValueEvaluator.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/L1NormEvaluator.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/LInfNormEvaluator.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/NormEvaluator.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PowerEvaluator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11689": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "6c0f9ac8c701cb5b4afab437a849c2d3f66fb403"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11689",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fb29cd5fc25a094b4f8578a2c96066340aa2e060",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518305860,
            "hunks": 1,
            "message": "LUCENE-7966: More Solr build dependency fixes",
            "diff": [
                "diff --git a/solr/common-build.xml b/solr/common-build.xml",
                "index 3eec2027cf3..ef852aa4b3b 100644",
                "--- a/solr/common-build.xml",
                "+++ b/solr/common-build.xml",
                "@@ -164,3 +164,3 @@",
                "-  <target name=\"init-dist\" >",
                "+  <target name=\"init-dist\" depends=\"resolve-groovy\">",
                "     <mkdir dir=\"${build.dir}\"/>"
            ],
            "changed_files": [
                "solr/common-build.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-7966": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "9e9ed0d7b11f1f2542a076c76ef91824bb636037"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-7966",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e926f435d7e318b30b2d9ec38be87ad9ab7eed45",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520726746,
            "hunks": 2,
            "message": "SOLR-11702: Remove noise of exception messages on failed to ping leader",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy.java b/solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy.java",
                "index 912f6ec52f0..023b2e3b481 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy.java",
                "@@ -782,3 +782,3 @@ public class RecoveryStrategy implements Runnable, Closeable {",
                "       } catch (IOException e) {",
                "-        LOG.info(\"Failed to connect leader {} on recovery, try again\", leaderReplica.getBaseUrl(), e);",
                "+        LOG.info(\"Failed to connect leader {} on recovery, try again\", leaderReplica.getBaseUrl());",
                "         Thread.sleep(500);",
                "@@ -786,3 +786,3 @@ public class RecoveryStrategy implements Runnable, Closeable {",
                "         if (e.getCause() instanceof IOException) {",
                "-          LOG.info(\"Failed to connect leader {} on recovery, try again\", leaderReplica.getBaseUrl(), e);",
                "+          LOG.info(\"Failed to connect leader {} on recovery, try again\", leaderReplica.getBaseUrl());",
                "           Thread.sleep(500);"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11702": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1f994c97301fbe8926115925102c78a8a133e26b"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11702",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e0d6465af94b6c6f7b8d570dee97c98de572c876",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520265122,
            "hunks": 2,
            "message": "LUCENE-8126: Add \"s2\" to SpatialPrefixTreeFactory lookup table",
            "diff": [
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeFactory.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeFactory.java",
                "index 67480d52ff8..d88e41a76bb 100644",
                "--- a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeFactory.java",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeFactory.java",
                "@@ -45,2 +45,3 @@ public abstract class SpatialPrefixTreeFactory {",
                "   public static SpatialPrefixTree makeSPT(Map<String,String> args, ClassLoader classLoader, SpatialContext ctx) {",
                "+    //TODO refactor to use Java SPI like how Lucene already does for codecs/postingsFormats, etc",
                "     SpatialPrefixTreeFactory instance;",
                "@@ -55,2 +56,4 @@ public abstract class SpatialPrefixTreeFactory {",
                "       instance = new PackedQuadPrefixTree.Factory();",
                "+    else if (\"s2\".equalsIgnoreCase(cname))",
                "+      instance = new S2PrefixTree.Factory();",
                "     else {"
            ],
            "changed_files": [
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8126": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c50a05becd62d620fcb2b39e8ac00eaee5e7f8f8"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8126",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c59e2e98d2cef7c220f3b5dbea67fc4adbea0914",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520012563,
            "hunks": 2,
            "message": "SOLR-11843: Fix Admin UI handling of router.field and router.name params; change routerField label to match param name",
            "diff": [
                "diff --git a/solr/webapp/web/js/angular/controllers/collections.js b/solr/webapp/web/js/angular/controllers/collections.js",
                "index 251298aefc7..c67bc7efa3b 100644",
                "--- a/solr/webapp/web/js/angular/controllers/collections.js",
                "+++ b/solr/webapp/web/js/angular/controllers/collections.js",
                "@@ -142,4 +142,3 @@ solrAdminApp.controller('CollectionsController',",
                "             if (coll.shards) params.shards = coll.shards;",
                "-            if (coll.routerField) params.routerField = coll.routerField;",
                "-            if (coll.routerName) params.routerName = coll.routerName;",
                "+            if (coll.routerField) params[\"router.field\"] = coll.routerField;",
                "             Collections.add(params, function(data) {",
                "diff --git a/solr/webapp/web/partials/collections.html b/solr/webapp/web/partials/collections.html",
                "index f958e149ff0..6f0c4219345 100644",
                "--- a/solr/webapp/web/partials/collections.html",
                "+++ b/solr/webapp/web/partials/collections.html",
                "@@ -68,3 +68,3 @@ limitations under the License.",
                "-              <p class=\"clearfix\"><label for=\"add_routerField\">routerField:</label>",
                "+              <p class=\"clearfix\"><label for=\"add_routerField\">router.field:</label>",
                "               <input type=\"text\" name=\"routerField\" id=\"add_routerField\" ng-model=\"newCollection.routerField\"></p>"
            ],
            "changed_files": [
                "solr/webapp/web/js/angular/controllers/collections.js",
                "solr/webapp/web/partials/collections.html"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11843": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "62e6a7ca2b63b8a4d287ec26570ed41598987bb2"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11843",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8775f3f19dd5d7f5cee03fd4653d27087596783d",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520297793,
            "hunks": 1,
            "message": "SOLR-12020: Remove unused import",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/search/facet/FacetModule.java b/solr/core/src/java/org/apache/solr/search/facet/FacetModule.java",
                "index 759ece7354d..9d94281ea27 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/facet/FacetModule.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/facet/FacetModule.java",
                "@@ -43,3 +43,2 @@ import org.apache.solr.util.RTimer;",
                " import org.noggit.CharArr;",
                "-import org.noggit.JSONUtil;",
                " import org.noggit.JSONWriter;"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/search/facet/FacetModule.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12020": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c4c391ad15098c172941bd29aa41f564a338ae47"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12020",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f70477db0196bb07a2a8fbee461f3a5da9afd2b2",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518215501,
            "hunks": 2,
            "message": "LUCENE-8155: Disable Smoker Javadocs checking on Java 9 (like in Ant)",
            "diff": [
                "diff --git a/dev-tools/scripts/smokeTestRelease.py b/dev-tools/scripts/smokeTestRelease.py",
                "index df0fcfd64d6..b8989c9aa17 100644",
                "--- a/dev-tools/scripts/smokeTestRelease.py",
                "+++ b/dev-tools/scripts/smokeTestRelease.py",
                "@@ -734,5 +734,5 @@ def verifyUnpacked(java, project, artifact, unpackPath, gitRevision, version, te",
                "-        print('    generate javadocs w/ Java 9...')",
                "-        java.run_java9('ant javadocs', '%s/javadocs.log' % unpackPath)",
                "-        checkJavadocpathFull('%s/build/docs' % unpackPath)",
                "+        #print('    generate javadocs w/ Java 9...')",
                "+        #java.run_java9('ant javadocs', '%s/javadocs.log' % unpackPath)",
                "+        #checkJavadocpathFull('%s/build/docs' % unpackPath)",
                "@@ -757,5 +757,5 @@ def verifyUnpacked(java, project, artifact, unpackPath, gitRevision, version, te",
                "-        print('    generate javadocs w/ Java 9...')",
                "-        java.run_java9('ant clean javadocs', '%s/javadocs.log' % unpackPath)",
                "-        checkJavadocpathFull('%s/solr/build/docs' % unpackPath, False)",
                "+        #print('    generate javadocs w/ Java 9...')",
                "+        #java.run_java9('ant clean javadocs', '%s/javadocs.log' % unpackPath)",
                "+        #checkJavadocpathFull('%s/solr/build/docs' % unpackPath, False)"
            ],
            "changed_files": [
                "dev-tools/scripts/smokeTestRelease.py"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8155": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "d3e960633db1d7275af24a5b0a0e297a605145f6"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8155",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9d66dc27328816a845d4f448bf2efa33f289207e",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518442757,
            "hunks": 1,
            "message": "LUCENE-8127: Speed up rewriteNoScoring when there are no MUST clauses.",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/BooleanQuery.java b/lucene/core/src/java/org/apache/lucene/search/BooleanQuery.java",
                "index a3f5ae0416d..7d487cc4ed1 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/BooleanQuery.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/BooleanQuery.java",
                "@@ -185,2 +185,5 @@ public class BooleanQuery extends Query implements Iterable<BooleanClause> {",
                "   private BooleanQuery rewriteNoScoring() {",
                "+    if (clauseSets.get(Occur.MUST).size() == 0) {",
                "+      return this;",
                "+    }",
                "     BooleanQuery.Builder newQuery = new BooleanQuery.Builder();"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/search/BooleanQuery.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8127": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "7a383947653e8bce05ffdad7ea7d0620f9e08dac"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8127",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7dfb04ee5e9f973fbad20c529ec091c201743398",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520575216,
            "hunks": 1,
            "message": "SOLR-12072: Invalid path string using ZkConfigManager.copyConfigDir(String fromConfig, String toConfig)",
            "diff": [
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager.java",
                "index 312cb907eb3..015793c03b0 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager.java",
                "@@ -164,3 +164,3 @@ public class ZkConfigManager {",
                "   public void copyConfigDir(String fromConfig, String toConfig) throws IOException {",
                "-    copyConfigDir(CONFIGS_ZKNODE + \"/\" + fromConfig, CONFIGS_ZKNODE + \"/\" + toConfig, null);",
                "+    copyConfigDir(fromConfig, toConfig, null);",
                "   }"
            ],
            "changed_files": [
                "solr/solrj/src/java/org/apache/solr/common/cloud/ZkConfigManager.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12072": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "3d805dea8b9f97743ba46e71381cdbd0e1350cc4"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12072",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1922e5b956fa0257a46c4beac113b045bc3cf819",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518342541,
            "hunks": 12,
            "message": "LUCENE-8169: Migrate build to use OpenClover 4.2.1 for checking code coverage",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index b5d3015944d..00360527f26 100755",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -493,3 +493,3 @@ File | Project Structure | Platform Settings | SDKs):",
                "-  <target name=\"run-clover\" description=\"Runs all tests to measure coverage and generates report (pass &quot;ANT_OPTS=-Xmx1536M&quot; as environment)\" depends=\"clean\">",
                "+  <target name=\"run-clover\" description=\"Runs all tests to measure coverage and generates report (pass &quot;ANT_OPTS=-Xmx2G&quot; as environment)\" depends=\"clean\">",
                "     <antcall inheritAll=\"false\">",
                "diff --git a/lucene/build.xml b/lucene/build.xml",
                "index f2ce68dae2c..0061d29cb81 100644",
                "--- a/lucene/build.xml",
                "+++ b/lucene/build.xml",
                "@@ -355,4 +355,2 @@",
                "     <delete dir=\"${src.export.dir}/tools/javadoc/java8\"/>",
                "-    <!-- Exclude clover license files incompatible with the ASL -->",
                "-    <delete dir=\"${src.export.dir}/tools/clover\"/>",
                "diff --git a/lucene/common-build.xml b/lucene/common-build.xml",
                "index 539d206a1ad..43a6aa1e6f5 100644",
                "--- a/lucene/common-build.xml",
                "+++ b/lucene/common-build.xml",
                "@@ -141,3 +141,3 @@",
                "-  <condition property=\"tests.heapsize\" value=\"768M\" else=\"512M\">",
                "+  <condition property=\"tests.heapsize\" value=\"1024M\" else=\"512M\">",
                "     <isset property=\"run.clover\"/>",
                "@@ -145,3 +145,3 @@",
                "-  <condition property=\"tests.clover.args\" value=\"-XX:ReservedCodeCacheSize=128m -XX:MaxPermSize=192m\" else=\"\">",
                "+  <condition property=\"tests.clover.args\" value=\"-XX:ReservedCodeCacheSize=192m -XX:MaxPermSize=256m -Dclover.pertest.coverage=off\" else=\"\">",
                "     <isset property=\"run.clover\"/>",
                "@@ -236,3 +236,2 @@",
                "-  <property name=\"clover.license.path\" location=\"${common.dir}/tools/clover/clover.license\"/>",
                "   <property name=\"clover.db.dir\" location=\"${common.dir}/build/clover/db\"/>",
                "@@ -268,3 +267,3 @@",
                "   <patternset id=\"lucene.local.src.package.patterns\"",
                "-              excludes=\"**/pom.xml,**/*.iml,**/*.jar,build/**,dist/**,benchmark/work/**,benchmark/temp/**,tools/javadoc/java8/**,tools/clover/**\"",
                "+              excludes=\"**/pom.xml,**/*.iml,**/*.jar,build/**,dist/**,benchmark/work/**,benchmark/temp/**,tools/javadoc/java8/**\"",
                "   />",
                "@@ -575,3 +574,3 @@",
                "   <target name=\"-mrjar-check\" depends=\"patch-mrjar-classes\">",
                "-    <zipfileset id=\"mrjar-patched-files\" prefix=\"META-INF/versions/9\" dir=\"${build.dir}/classes/java9\"/>",
                "+    <zipfileset id=\"mrjar-patched-files\" prefix=\"META-INF/versions/9\" dir=\"${build.dir}/classes/java9\" erroronmissingdir=\"false\"/>",
                "     <condition property=\"has-mrjar-patched-files\">",
                "@@ -1614,23 +1613,4 @@ ${tests-output}/junit4-*.suites     - per-JVM executed suites",
                "   <target name=\"-clover.load\" depends=\"ivy-availability-check,ivy-configure\" if=\"run.clover\" unless=\"clover.loaded\">",
                "-    <available file=\"${clover.license.path}\" property=\"clover.license.available\" />",
                "-    <fail unless=\"clover.license.available\"><![CDATA[.",
                "-",
                "-  #########################################################################",
                "-  Atlassian Clover License not found!",
                "-  ",
                "-  Current License path: ${clover.license.path}",
                "-",
                "-  To use Atlassian Clover with Lucene build, you need a proper license",
                "-  and let the system property 'clover.license.path' point to it.",
                "-  You can pass it to ANT with:",
                "-  ",
                "-  $ ant -Dclover.license.path=/path/to/clover.license -Drun.clover=true ...",
                "-  ",
                "-  Apache Lucene/Solr source checkouts from Git already contain the",
                "-  file, but source distributions cannot because of legal reasons.",
                "-  #########################################################################",
                "-  ",
                "-]]></fail>",
                "-    <echo>Code coverage with Atlassian Clover enabled.</echo>",
                "-    <ivy:cachepath organisation=\"com.atlassian.clover\" module=\"clover\" revision=\"4.0.4\"",
                "+    <echo>Code coverage with OpenClover enabled.</echo>",
                "+    <ivy:cachepath organisation=\"org.openclover\" module=\"clover\" revision=\"4.2.1\"",
                "       inline=\"true\" conf=\"master\" pathid=\"clover.classpath\"/>",
                "@@ -1656,2 +1636,3 @@ ${tests-output}/junit4-*.suites     - per-JVM executed suites",
                "         <include name=\"org/apache/**/*.java\" />",
                "+        <exclude name=\"**/TestOpenNLP*Factory.java\"/><!-- https://jira.atlassian.com/browse/CLOV-1984 -->",
                "       </testsources>",
                "diff --git a/lucene/tools/clover/clover.license b/lucene/tools/clover/clover.license",
                "deleted file mode 100644",
                "index 1a46f878ac9..00000000000",
                "--- a/lucene/tools/clover/clover.license",
                "+++ /dev/null",
                "@@ -1,5 +0,0 @@",
                "-nRQNWtwTDKNQARUudFdtDsicMRPIUONPsMvQXbqMkHLoFB",
                "-mi2Kv8XgEIr0AKkpEyRKsl2L2KSZDO6fk1Eio5G7RKZiUc",
                "-OoroXsoPoMPqOQrNrPRTtnNpPOMmMOnnOoTsXVsTvXXvQp",
                "-moNnmqmUUnqmptmqummmmmUUnqmptmqummmmmUU1mXZebU",
                "-Unmmmm",
                "diff --git a/lucene/tools/src/groovy/patch-mrjar-classes.groovy b/lucene/tools/src/groovy/patch-mrjar-classes.groovy",
                "index 07f285c6ff7..1ba6a983691 100644",
                "--- a/lucene/tools/src/groovy/patch-mrjar-classes.groovy",
                "+++ b/lucene/tools/src/groovy/patch-mrjar-classes.groovy",
                "@@ -34,2 +34,7 @@ def mappings = [",
                "+if (properties['run.clover'] != null) {",
                "+  task.log(\"Disabled class file remapping for Java 9, because Clover code coverage is enabled.\", Project.MSG_INFO);",
                "+  return;",
                "+}",
                "+",
                " File inputDir = new File(properties['build.dir'], 'classes/java');",
                "diff --git a/solr/build.xml b/solr/build.xml",
                "index 9b0bdabd416..400c71180d5 100644",
                "--- a/solr/build.xml",
                "+++ b/solr/build.xml",
                "@@ -490,4 +490,2 @@",
                "     <delete dir=\"${src.export.dir}/lucene/tools/javadoc/java8\"/>",
                "-    <!-- Exclude clover license files incompatible with the ASL -->",
                "-    <delete dir=\"${src.export.dir}/lucene/tools/clover\"/>"
            ],
            "changed_files": [
                "build.xml",
                "lucene/build.xml",
                "lucene/common-build.xml",
                "lucene/tools/clover/clover.license",
                "lucene/tools/src/groovy/patch-mrjar-classes.groovy",
                "solr/build.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8169": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2a7e6d282fb05662ef56e13ec9aff125e8f70d2a"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8169",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9341be83701cf5d3675e9cde85da9ccb97044521",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520644491,
            "hunks": 3,
            "message": "SOLR-12077: Add support for autoAddReplicas in the collection creation dialog in Admin UI (cherry picked from commit 2eeed51)",
            "diff": [
                "diff --git a/solr/webapp/web/js/angular/controllers/collections.js b/solr/webapp/web/js/angular/controllers/collections.js",
                "index c67bc7efa3b..111d7ea5602 100644",
                "--- a/solr/webapp/web/js/angular/controllers/collections.js",
                "+++ b/solr/webapp/web/js/angular/controllers/collections.js",
                "@@ -85,3 +85,4 @@ solrAdminApp.controller('CollectionsController',",
                "           replicationFactor: 1,",
                "-          maxShardsPerNode: 1",
                "+          maxShardsPerNode: 1,",
                "+          autoAddReplicas: 'false'",
                "         };",
                "@@ -139,3 +140,4 @@ solrAdminApp.controller('CollectionsController',",
                "                 replicationFactor: coll.replicationFactor,",
                "-                maxShardsPerNode: coll.maxShardsPerNode",
                "+                maxShardsPerNode: coll.maxShardsPerNode,",
                "+                autoAddReplicas: coll.autoAddReplicas",
                "             };",
                "diff --git a/solr/webapp/web/partials/collections.html b/solr/webapp/web/partials/collections.html",
                "index 6f0c4219345..60ef47ad0a1 100644",
                "--- a/solr/webapp/web/partials/collections.html",
                "+++ b/solr/webapp/web/partials/collections.html",
                "@@ -71,2 +71,9 @@ limitations under the License.",
                "+              <p class=\"clearfix\"><label for=\"add_autoAddReplicas\">autoAddReplicas:</label>",
                "+                <select name=\"autoAddReplicas\" id=\"add_autoAddReplicas\" ng-model=\"newCollection.autoAddReplicas\">",
                "+                  <option value=\"true\">true</option>",
                "+                  <option value=\"false\">false</option>",
                "+                </select>",
                "+              </p>",
                "+",
                "           </div>"
            ],
            "changed_files": [
                "solr/webapp/web/js/angular/controllers/collections.js",
                "solr/webapp/web/partials/collections.html"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12077": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2eeed51cdf006bdee7dec87b6adf144e7cc0d56e"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12077",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "71fc9cd43d0001ca0e66a443654b091485b21a46",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520019351,
            "hunks": 18,
            "message": "SOLR-11066: Implement a scheduled autoscaling trigger that runs on a fixed interval beginning with a given start time",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "index 3ebfbd0d331..3b7802b5b7b 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "@@ -159,2 +159,4 @@ public class AutoScaling {",
                "           return new MetricTrigger(name, props, loader, cloudManager);",
                "+        case SCHEDULED:",
                "+          return new ScheduledTrigger(name, props, loader, cloudManager);",
                "         default:",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "index 91990dba0de..9eb6382a6bb 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "@@ -210,2 +210,7 @@ public class ComputePlanAction extends TriggerActionBase {",
                "         break;",
                "+      case SCHEDULED:",
                "+        String preferredOp = (String) event.getProperty(AutoScalingParams.PREFERRED_OP);",
                "+        CollectionParams.CollectionAction action = CollectionParams.CollectionAction.get(preferredOp);",
                "+        suggester = session.getSuggester(action);",
                "+        break;",
                "       default:",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "new file mode 100644",
                "index 00000000000..9c8ee6dea0b",
                "--- /dev/null",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "@@ -0,0 +1,198 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.solr.cloud.autoscaling;",
                "+",
                "+import java.lang.invoke.MethodHandles;",
                "+import java.text.ParseException;",
                "+import java.time.Instant;",
                "+import java.time.ZoneId;",
                "+import java.time.format.DateTimeFormatter;",
                "+import java.time.format.DateTimeFormatterBuilder;",
                "+import java.time.temporal.ChronoField;",
                "+import java.util.Collections;",
                "+import java.util.Date;",
                "+import java.util.Locale;",
                "+import java.util.Map;",
                "+import java.util.TimeZone;",
                "+",
                "+import org.apache.solr.client.solrj.cloud.autoscaling.SolrCloudManager;",
                "+import org.apache.solr.client.solrj.cloud.autoscaling.TriggerEventType;",
                "+import org.apache.solr.common.SolrException;",
                "+import org.apache.solr.common.params.CollectionParams;",
                "+import org.apache.solr.core.SolrResourceLoader;",
                "+import org.apache.solr.util.DateMathParser;",
                "+import org.apache.solr.util.TimeZoneUtils;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+import static org.apache.solr.common.params.AutoScalingParams.PREFERRED_OP;",
                "+",
                "+/**",
                "+ * A trigger which creates {@link TriggerEventType#SCHEDULED} events as per the configured schedule",
                "+ */",
                "+public class ScheduledTrigger extends TriggerBase {",
                "+  private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "+",
                "+  private static final String DEFAULT_GRACE_DURATION = \"+15MINUTES\";",
                "+  static final String ACTUAL_EVENT_TIME = \"actualEventTime\";",
                "+",
                "+  private final String everyStr;",
                "+",
                "+  private final String graceDurationStr;",
                "+",
                "+  private final String preferredOp;",
                "+",
                "+  private final TimeZone timeZone;",
                "+",
                "+  private Instant lastRunAt;",
                "+",
                "+  public ScheduledTrigger(String name, Map<String, Object> properties,",
                "+                          SolrResourceLoader loader, SolrCloudManager cloudManager) {",
                "+    super(TriggerEventType.SCHEDULED, name, properties, loader, cloudManager);",
                "+",
                "+    String timeZoneStr = (String) properties.get(\"timeZone\");",
                "+    this.timeZone = TimeZoneUtils.parseTimezone(timeZoneStr); // defaults to UTC",
                "+",
                "+    String startTimeStr = (String) properties.get(\"startTime\");",
                "+    this.everyStr = (String) properties.get(\"every\");",
                "+    this.graceDurationStr = (String) properties.getOrDefault(\"graceDuration\", DEFAULT_GRACE_DURATION);",
                "+",
                "+    preferredOp = (String) properties.getOrDefault(PREFERRED_OP, CollectionParams.CollectionAction.MOVEREPLICA.toLower());",
                "+",
                "+    // attempt parsing to validate date math strings",
                "+    Instant startTime = parseStartTime(startTimeStr, timeZoneStr);",
                "+    DateMathParser.parseMath(null, startTime + everyStr, timeZone);",
                "+    DateMathParser.parseMath(null, startTime + graceDurationStr, timeZone);",
                "+",
                "+    this.lastRunAt = startTime;",
                "+  }",
                "+",
                "+  private Instant parseStartTime(String startTimeStr, String timeZoneStr) {",
                "+    if (startTimeStr == null) {",
                "+      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Parameter 'startTime' cannot be null\");",
                "+    }",
                "+    try {",
                "+      // try parsing startTime as an ISO-8601 date time string",
                "+      return DateMathParser.parseMath(null, startTimeStr).toInstant();",
                "+    } catch (SolrException e) {",
                "+      if (e.code() != SolrException.ErrorCode.BAD_REQUEST.code)  throw e;",
                "+    }",
                "+    if (timeZoneStr == null)  {",
                "+      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,",
                "+          \"Either 'startTime' should be an ISO-8601 date time string or 'timeZone' must be not be null\");",
                "+    }",
                "+    DateTimeFormatter dateTimeFormatter = new DateTimeFormatterBuilder()",
                "+        .append(DateTimeFormatter.ISO_LOCAL_DATE).appendPattern(\"['T'[HH[:mm[:ss]]]]\")",
                "+        .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)",
                "+        .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)",
                "+        .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)",
                "+        .toFormatter(Locale.ROOT).withZone(ZoneId.of(timeZoneStr));",
                "+    return Instant.from(dateTimeFormatter.parse(startTimeStr));",
                "+  }",
                "+",
                "+  @Override",
                "+  protected Map<String, Object> getState() {",
                "+    return Collections.singletonMap(\"lastRunAt\", lastRunAt.toEpochMilli());",
                "+  }",
                "+",
                "+  @Override",
                "+  protected void setState(Map<String, Object> state) {",
                "+    if (state.containsKey(\"lastRunAt\")) {",
                "+      this.lastRunAt = Instant.ofEpochMilli((Long) state.get(\"lastRunAt\"));",
                "+    }",
                "+  }",
                "+",
                "+  @Override",
                "+  public void restoreState(AutoScaling.Trigger old) {",
                "+    assert old.isClosed();",
                "+    if (old instanceof ScheduledTrigger) {",
                "+      ScheduledTrigger scheduledTrigger = (ScheduledTrigger) old;",
                "+      this.lastRunAt = scheduledTrigger.lastRunAt;",
                "+    } else  {",
                "+      throw new SolrException(SolrException.ErrorCode.INVALID_STATE,",
                "+          \"Unable to restore state from an unknown type of trigger\");",
                "+    }",
                "+  }",
                "+",
                "+  @Override",
                "+  public void run() {",
                "+    synchronized (this) {",
                "+      if (isClosed) {",
                "+        log.warn(\"ScheduledTrigger ran but was already closed\");",
                "+        throw new RuntimeException(\"Trigger has been closed\");",
                "+      }",
                "+    }",
                "+",
                "+    DateMathParser dateMathParser = new DateMathParser(timeZone);",
                "+    dateMathParser.setNow(new Date(lastRunAt.toEpochMilli()));",
                "+    Instant nextRunTime, nextPlusGrace;",
                "+    try {",
                "+      Date next = dateMathParser.parseMath(everyStr);",
                "+      dateMathParser.setNow(next);",
                "+      nextPlusGrace = dateMathParser.parseMath(graceDurationStr).toInstant();",
                "+      nextRunTime = next.toInstant();",
                "+    } catch (ParseException e) {",
                "+      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,",
                "+          \"Unable to calculate next run time. lastRan: \" + lastRunAt.toString() + \" and date math string: \" + everyStr, e);",
                "+    }",
                "+",
                "+    Instant now = Instant.now(); // todo how to play well with simulation framework?",
                "+    AutoScaling.TriggerEventProcessor processor = processorRef.get();",
                "+",
                "+    if (now.isBefore(nextRunTime)) {",
                "+      return; // it's not time yet",
                "+    }",
                "+    if (now.isAfter(nextPlusGrace)) {",
                "+      // we are past time and we could not run per schedule so skip this event",
                "+      if (log.isWarnEnabled())  {",
                "+        log.warn(\"ScheduledTrigger was not able to run event at scheduled time: {}. Now: {}\",",
                "+            nextRunTime, now);",
                "+      }",
                "+      if (processor.process(new ScheduledEvent(getEventType(), getName(), nextRunTime.toEpochMilli(),",
                "+          preferredOp, now.toEpochMilli(), true)))  {",
                "+        lastRunAt = nextRunTime;",
                "+        return;",
                "+      }",
                "+    }",
                "+",
                "+    if (processor != null)  {",
                "+      if (log.isDebugEnabled()) {",
                "+        log.debug(\"ScheduledTrigger {} firing registered processor for scheduled time {}, now={}\", name,",
                "+            nextRunTime, now);",
                "+      }",
                "+      if (processor.process(new ScheduledEvent(getEventType(), getName(), nextRunTime.toEpochMilli(),",
                "+          preferredOp, now.toEpochMilli()))) {",
                "+        lastRunAt = nextRunTime; // set to nextRunTime instead of now to avoid drift",
                "+      }",
                "+    } else  {",
                "+      lastRunAt = nextRunTime; // set to nextRunTime instead of now to avoid drift",
                "+    }",
                "+  }",
                "+",
                "+  public static class ScheduledEvent extends TriggerEvent {",
                "+    public ScheduledEvent(TriggerEventType eventType, String source, long eventTime, String preferredOp, long actualEventTime) {",
                "+      this(eventType, source, eventTime, preferredOp, actualEventTime, false);",
                "+    }",
                "+",
                "+    public ScheduledEvent(TriggerEventType eventType, String source, long eventTime, String preferredOp, long actualEventTime, boolean ignored) {",
                "+      super(eventType, source, eventTime, null, ignored);",
                "+      properties.put(PREFERRED_OP, preferredOp);",
                "+      properties.put(ACTUAL_EVENT_TIME, actualEventTime);",
                "+    }",
                "+  }",
                "+}",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "index ee091182aff..0f2b705b0a4 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "@@ -250,2 +250,8 @@ public class ScheduledTriggers implements Closeable {",
                "       }",
                "+      if (event.isIgnored())  {",
                "+        log.debug(\"-------- Ignoring event: \" + event);",
                "+        event.getProperties().put(TriggerEvent.IGNORED, true);",
                "+        listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.IGNORED, \"Event was ignored.\");",
                "+        return true; // always return true for ignored events",
                "+      }",
                "       // even though we pause all triggers during action execution there is a possibility that a trigger was already",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.java",
                "index fe11cf9bb59..e4a4b3d0b35 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.java",
                "@@ -34,2 +34,3 @@ import org.apache.solr.util.IdUtils;",
                " public class TriggerEvent implements MapWriter {",
                "+  public static final String IGNORED = \"ignored\";",
                "   public static final String COOLDOWN = \"cooldown\";",
                "@@ -79,2 +80,3 @@ public class TriggerEvent implements MapWriter {",
                "   protected final Map<String, Object> properties = new HashMap<>();",
                "+  protected final boolean ignored;",
                "@@ -82,3 +84,8 @@ public class TriggerEvent implements MapWriter {",
                "                       Map<String, Object> properties) {",
                "-    this(IdUtils.timeRandomId(eventTime), eventType, source, eventTime, properties);",
                "+    this(IdUtils.timeRandomId(eventTime), eventType, source, eventTime, properties, false);",
                "+  }",
                "+",
                "+  public TriggerEvent(TriggerEventType eventType, String source, long eventTime,",
                "+                      Map<String, Object> properties, boolean ignored) {",
                "+    this(IdUtils.timeRandomId(eventTime), eventType, source, eventTime, properties, ignored);",
                "   }",
                "@@ -87,2 +94,7 @@ public class TriggerEvent implements MapWriter {",
                "                       Map<String, Object> properties) {",
                "+    this(id, eventType, source, eventTime, properties, false);",
                "+  }",
                "+",
                "+  public TriggerEvent(String id, TriggerEventType eventType, String source, long eventTime,",
                "+                      Map<String, Object> properties, boolean ignored) {",
                "     this.id = id;",
                "@@ -94,2 +106,3 @@ public class TriggerEvent implements MapWriter {",
                "     }",
                "+    this.ignored = ignored;",
                "   }",
                "@@ -152,2 +165,6 @@ public class TriggerEvent implements MapWriter {",
                "+  public boolean isIgnored() {",
                "+    return ignored;",
                "+  }",
                "+",
                "   /**",
                "@@ -171,2 +188,5 @@ public class TriggerEvent implements MapWriter {",
                "     ew.put(\"properties\", properties);",
                "+    if (ignored)  {",
                "+      ew.put(\"ignored\", true);",
                "+    }",
                "   }",
                "@@ -184,2 +204,3 @@ public class TriggerEvent implements MapWriter {",
                "     if (eventType != that.eventType) return false;",
                "+    if (ignored != that.ignored)  return false;",
                "     return properties.equals(that.properties);",
                "@@ -194,2 +215,3 @@ public class TriggerEvent implements MapWriter {",
                "     result = 31 * result + properties.hashCode();",
                "+    result = 31 * result + Boolean.hashCode(ignored);",
                "     return result;",
                "diff --git a/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc b/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "index 5ef4023b979..ec09a79b95c 100644",
                "--- a/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "+++ b/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "@@ -18,3 +18,3 @@",
                "-Triggers are used in autoscaling to watch for cluster events such as nodes joining or leaving.",
                "+Triggers are used in autoscaling to watch for cluster events such as nodes joining, leaving, search rate or any other metric breaching a threshold.",
                "@@ -29,3 +29,3 @@ resources (e.g., move replicas). Solr provides predefined implementations of tri",
                " Triggers execute on the node that runs `Overseer`. They are scheduled to run periodically,",
                "-currently at fixed interval of 1 second between each execution (not every execution produces events).",
                "+currently at default interval of 1 second between each execution (not every execution produces events).",
                "@@ -38,2 +38,3 @@ Currently the following event types (and corresponding trigger implementations)",
                " * `searchRate`: generated when the 1-minute average search rate exceeds configured upper threshold",
                "+* `scheduled` - generated according to a scheduled time period such as every 24 hours etc",
                "@@ -154,2 +155,19 @@ the threshold rate and the current request rate.",
                "+== Scheduled trigger",
                "+",
                "+The Scheduled trigger generates events according to a fixed rate schedule.",
                "+",
                "+The trigger supports the following configuration:",
                "+",
                "+* `startTime` - (string, required) the start date/time of the schedule. This should either be an ISO-8601 date time string (the same standard used during search and indexing in Solr, thus defaulting to UTC) or be specified with the `timeZone` parameter.",
                "+* `every` - (string, required) a positive Solr date math string which is added to the `startTime` or the last run time to arrive at the next scheduled time",
                "+* `graceTime` - (string, optional) a positive Solr date math string. This is the additional grace time over the scheduled time within which the trigger is allowed to generate an event.",
                "+* `timeZone` - (string, optional) a time zone string which is used for calculating the scheduled times",
                "+* `preferredOp` - (string, optional, defaults to `MOVEREPLICA`) the preferred operation to perform in response to an event generated by this trigger. The only supported values are `MOVEREPLICA` and `ADDREPLICA`.",
                "+",
                "+This trigger applies the `every` date math expression on the `startTime` or the last event time to derive the next scheduled time and if current time is greater than next scheduled time but within `graceTime` then an event is generated.",
                "+",
                "+Apart from the common event properties described in the Event Types section, the trigger adds an additional `actualEventTime` event property which has the actual event time as opposed to the scheduled time.",
                "+For example, if the scheduled time was `2018-01-31T15:30:00Z` and grace time was `+15MINUTES` then an event may be fired at `2018-01-31T15:45:00Z`. Such an event will have `eventTime` as `2018-01-31T15:30:00Z` i.e. the scheduled time but the `actualEventTime` property will have a value of `2018-01-31T15:45:00Z`.",
                "+",
                " == Trigger Configuration",
                "diff --git a/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java b/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "index 360632c6a7b..07e440a1bfc 100644",
                "--- a/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "+++ b/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "@@ -293,2 +293,9 @@ public class MiniSolrCloudCluster {",
                "+  /**",
                "+   * Wait for all Solr nodes to be live",
                "+   *",
                "+   * @param timeout number of seconds to wait before throwing an IllegalStateException",
                "+   * @throws IOException if there was an error communicating with ZooKeeper",
                "+   * @throws InterruptedException if the calling thread is interrupted during the wait operation",
                "+   */",
                "   public void waitForAllNodes(int timeout) throws IOException, InterruptedException {"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.java",
                "solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11066": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a7dc153a22f46e1d14307c57ab815ac5c96321b7"
                ],
                [
                    "no-tag",
                    "137e647f2c9ab6885e21471f3219488eed512b32"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11066",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ffe482db1cf55f1b729433598002c044ef3dc149",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520225454,
            "hunks": 19,
            "message": "SOLR-9510: introducting {!filter param=$fq excludeTags=t,q}foo:bar, also adding filters and excludeTags local params into {!parent} and {!child}",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/search/QParserPlugin.java b/solr/core/src/java/org/apache/solr/search/QParserPlugin.java",
                "index 893783d8e3a..f80bc9c3cda 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/QParserPlugin.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/QParserPlugin.java",
                "@@ -29,2 +29,3 @@ import org.apache.solr.search.join.BlockJoinChildQParserPlugin;",
                " import org.apache.solr.search.join.BlockJoinParentQParserPlugin;",
                "+import org.apache.solr.search.join.FiltersQParserPlugin;",
                " import org.apache.solr.search.join.GraphQParserPlugin;",
                "@@ -68,2 +69,3 @@ public abstract class QParserPlugin implements NamedListInitializedPlugin, SolrI",
                "     map.put(BlockJoinChildQParserPlugin.NAME, BlockJoinChildQParserPlugin.class);",
                "+    map.put(FiltersQParserPlugin.NAME, FiltersQParserPlugin.class);",
                "     map.put(CollapsingQParserPlugin.NAME, CollapsingQParserPlugin.class);",
                "diff --git a/solr/core/src/java/org/apache/solr/search/QueryParsing.java b/solr/core/src/java/org/apache/solr/search/QueryParsing.java",
                "index f636aca26e8..c7cd49cfab7 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/QueryParsing.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/QueryParsing.java",
                "@@ -99,3 +99,3 @@ public class QueryParsing {",
                "       }",
                "-      String val = null;",
                "+      String[] val = new String[1];",
                "@@ -104,3 +104,3 @@ public class QueryParsing {",
                "         // single word... treat {!func} as type=func for easy lookup",
                "-        val = id;",
                "+        val[0] = id;",
                "         id = TYPE;",
                "@@ -118,3 +118,3 @@ public class QueryParsing {",
                "         if (ch == '\\\"' || ch == '\\'') {",
                "-          val = p.getQuotedString();",
                "+          val[0] = p.getQuotedString();",
                "         } else {",
                "@@ -129,3 +129,3 @@ public class QueryParsing {",
                "             if (c == endChar || Character.isWhitespace(c)) {",
                "-              val = p.val.substring(valStart, p.pos);",
                "+              val[0] = p.val.substring(valStart, p.pos);",
                "               break;",
                "@@ -138,3 +138,3 @@ public class QueryParsing {",
                "           if (params != null) {",
                "-            val = params.get(val);",
                "+            val = params.getParams(val[0]);",
                "           }",
                "diff --git a/solr/core/src/java/org/apache/solr/search/join/BlockJoinChildQParser.java b/solr/core/src/java/org/apache/solr/search/join/BlockJoinChildQParser.java",
                "index faf4c5be960..0c5c4e8523f 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/join/BlockJoinChildQParser.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/join/BlockJoinChildQParser.java",
                "@@ -18,2 +18,5 @@ package org.apache.solr.search.join;",
                "+import org.apache.lucene.search.BooleanClause.Occur;",
                "+import org.apache.lucene.search.BooleanQuery;",
                "+import org.apache.lucene.search.MatchAllDocsQuery;",
                " import org.apache.lucene.search.Query;",
                "@@ -22,2 +25,4 @@ import org.apache.solr.common.params.SolrParams;",
                " import org.apache.solr.request.SolrQueryRequest;",
                "+import org.apache.solr.search.SolrConstantScoreQuery;",
                "+import org.apache.solr.search.SyntaxError;",
                "@@ -38,2 +43,14 @@ public class BlockJoinChildQParser extends BlockJoinParentQParser {",
                "   }",
                "+  ",
                "+  @Override",
                "+  protected Query noClausesQuery() throws SyntaxError {",
                "+    final Query parents = parseParentFilter();",
                "+    final BooleanQuery notParents = new BooleanQuery.Builder()",
                "+        .add(new MatchAllDocsQuery(), Occur.MUST)",
                "+        .add(parents, Occur.MUST_NOT)",
                "+      .build();",
                "+    SolrConstantScoreQuery wrapped = new SolrConstantScoreQuery(getFilter(notParents));",
                "+    wrapped.setCache(false);",
                "+    return wrapped;",
                "+  }",
                " }",
                "diff --git a/solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser.java b/solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser.java",
                "index a3b74c06385..b91cd624df1 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser.java",
                "@@ -36,3 +36,2 @@ import org.apache.solr.search.Filter;",
                " import org.apache.solr.search.QParser;",
                "-import org.apache.solr.search.QueryParsing;",
                " import org.apache.solr.search.SolrCache;",
                "@@ -41,3 +40,3 @@ import org.apache.solr.search.SyntaxError;",
                "-public class BlockJoinParentQParser extends QParser {",
                "+public class BlockJoinParentQParser extends FiltersQParser {",
                "   /** implementation detail subject to change */",
                "@@ -49,2 +48,7 @@ public class BlockJoinParentQParser extends QParser {",
                "+  @Override",
                "+  protected String getFiltersParamName() {",
                "+    return \"filters\";",
                "+  }",
                "+",
                "   BlockJoinParentQParser(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {",
                "@@ -53,20 +57,21 @@ public class BlockJoinParentQParser extends QParser {",
                "-  ",
                "-  @Override",
                "-  public Query parse() throws SyntaxError {",
                "+  protected Query parseParentFilter() throws SyntaxError {",
                "     String filter = localParams.get(getParentFilterLocalParamName());",
                "-    String scoreMode = localParams.get(\"score\", ScoreMode.None.name());",
                "     QParser parentParser = subQuery(filter, null);",
                "     Query parentQ = parentParser.getQuery();",
                "+    return parentQ;",
                "+  }",
                "-    String queryText = localParams.get(QueryParsing.V);",
                "-    // there is no child query, return parent filter from cache",
                "-    if (queryText == null || queryText.length()==0) {",
                "-                  SolrConstantScoreQuery wrapped = new SolrConstantScoreQuery(getFilter(parentQ));",
                "-                  wrapped.setCache(false);",
                "-                  return wrapped;",
                "-    }",
                "-    QParser childrenParser = subQuery(queryText, null);",
                "-    Query childrenQuery = childrenParser.getQuery();",
                "-    return createQuery(parentQ, childrenQuery, scoreMode);",
                "+  @Override",
                "+  protected Query wrapSubordinateClause(Query subordinate) throws SyntaxError {",
                "+    String scoreMode = localParams.get(\"score\", ScoreMode.None.name());",
                "+    Query parentQ = parseParentFilter();",
                "+    return createQuery(parentQ, subordinate, scoreMode);",
                "+  }",
                "+",
                "+  @Override",
                "+  protected Query noClausesQuery() throws SyntaxError {",
                "+    SolrConstantScoreQuery wrapped = new SolrConstantScoreQuery(getFilter(parseParentFilter()));",
                "+    wrapped.setCache(false);",
                "+    return wrapped;",
                "   }",
                "@@ -112,3 +117,3 @@ public class BlockJoinParentQParser extends QParser {",
                "     }",
                "-    ",
                "+",
                "     public Query getParentQuery(){",
                "diff --git a/solr/core/src/java/org/apache/solr/search/join/FiltersQParser.java b/solr/core/src/java/org/apache/solr/search/join/FiltersQParser.java",
                "new file mode 100644",
                "index 00000000000..6c2172eccb7",
                "--- /dev/null",
                "+++ b/solr/core/src/java/org/apache/solr/search/join/FiltersQParser.java",
                "@@ -0,0 +1,184 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.solr.search.join;",
                "+",
                "+import java.io.IOException;",
                "+import java.util.ArrayList;",
                "+import java.util.Collection;",
                "+import java.util.HashSet;",
                "+import java.util.IdentityHashMap;",
                "+import java.util.Map;",
                "+import java.util.Set;",
                "+",
                "+import org.apache.lucene.search.BooleanClause;",
                "+import org.apache.lucene.search.BooleanClause.Occur;",
                "+import org.apache.lucene.search.BooleanQuery;",
                "+import org.apache.lucene.search.MatchAllDocsQuery;",
                "+import org.apache.lucene.search.Query;",
                "+import org.apache.solr.common.SolrException;",
                "+import org.apache.solr.common.params.SolrParams;",
                "+import org.apache.solr.common.util.StrUtils;",
                "+import org.apache.solr.request.SolrQueryRequest;",
                "+import org.apache.solr.search.QParser;",
                "+import org.apache.solr.search.QueryParsing;",
                "+import org.apache.solr.search.SolrConstantScoreQuery;",
                "+import org.apache.solr.search.SyntaxError;",
                "+",
                "+public class FiltersQParser extends QParser {",
                "+",
                "+  private static final class FiltersQuery extends SolrConstantScoreQuery {",
                "+    ",
                "+    private Set<Query> filters;",
                "+",
                "+    private FiltersQuery(SolrQueryRequest req, Set<Query> filters) throws IOException {",
                "+      super(req.getSearcher().getDocSet(new ArrayList<>(filters)).getTopFilter());",
                "+      this.filters = filters;",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean equals(Object other) {",
                "+      return sameClassAs(other) && filters.equals(((FiltersQuery)other).filters);",
                "+    }",
                "+    ",
                "+    @Override",
                "+    public int hashCode() {",
                "+      return 31 * classHash() + filters.hashCode();",
                "+    }",
                "+  }",
                "+",
                "+  protected String getFiltersParamName() {",
                "+    return \"param\";",
                "+  }",
                "+",
                "+  FiltersQParser(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {",
                "+    super(qstr, localParams, params, req);",
                "+  }",
                "+",
                "+  @Override",
                "+  public final Query parse() throws SyntaxError {",
                "+    Map<Query,Occur> clauses = clauses();",
                "+    ",
                "+    exclude(clauses);",
                "+    ",
                "+    int numClauses = 0;",
                "+    BooleanQuery.Builder builder = new BooleanQuery.Builder();",
                "+    numClauses += addQuery(builder, clauses);",
                "+    numClauses += addFilters(builder, clauses);",
                "+    // what about empty query? ",
                "+    return numClauses > 0 ? wrapSubordinateClause(builder.build()) : noClausesQuery();",
                "+  }",
                "+",
                "+  protected Query wrapSubordinateClause(Query subordinate) throws SyntaxError {",
                "+    return subordinate;",
                "+  }",
                "+",
                "+  protected Query noClausesQuery() throws SyntaxError {",
                "+    return new MatchAllDocsQuery();",
                "+  }",
                "+",
                "+  protected int addQuery(BooleanQuery.Builder builder, Map<Query,Occur> clauses) {",
                "+    int cnt=0;",
                "+    for (Map.Entry<Query, Occur> clause: clauses.entrySet()) {",
                "+      if (clause.getValue() == Occur.MUST) {",
                "+        builder.add(clause.getKey(), clause.getValue());",
                "+        cnt++;// shouldn't count more than once ",
                "+      }",
                "+    }",
                "+    return cnt;",
                "+  }",
                "+",
                "+  /** @return number of added clauses */",
                "+  protected int addFilters(BooleanQuery.Builder builder, Map<Query,Occur> clauses) throws SyntaxError {",
                "+    Set<Query> filters = new HashSet<>();",
                "+    for (Map.Entry<Query, Occur> clause: clauses.entrySet()) {",
                "+      if (clause.getValue() == Occur.FILTER) {",
                "+        filters.add(clause.getKey());",
                "+      }",
                "+    }",
                "+    if (!filters.isEmpty()) {",
                "+      try {",
                "+        final SolrConstantScoreQuery intersQuery = new FiltersQuery(req, filters);",
                "+        builder.add( intersQuery, Occur.FILTER);",
                "+      } catch (IOException e) {",
                "+        throw new SyntaxError(\"Exception occurs while parsing \" + stringIncludingLocalParams, e);",
                "+      }",
                "+    }",
                "+    return filters.size();",
                "+  }",
                "+",
                "+  protected void exclude(Map<Query,Occur> clauses) {",
                "+    Set<String> tagsToExclude = new HashSet<>();",
                "+    String excludeTags = localParams.get(\"excludeTags\");",
                "+    if (excludeTags != null) {",
                "+      tagsToExclude.addAll(StrUtils.splitSmart(excludeTags, ','));",
                "+    }",
                "+    @SuppressWarnings(\"rawtypes\")",
                "+    Map tagMap = (Map) req.getContext().get(\"tags\");",
                "+    if (tagMap != null && !tagMap.isEmpty() && !tagsToExclude.isEmpty()) {",
                "+      clauses.keySet().removeAll(excludeSet(tagMap, tagsToExclude));",
                "+    } // else no filters were tagged",
                "+  }",
                "+",
                "+  protected Map<Query,Occur> clauses() throws SyntaxError {",
                "+    String[] params = localParams.getParams(getFiltersParamName());",
                "+    if(params!=null && params.length == 0) { // never happens ",
                "+      throw new SyntaxError(\"Local parameter \"+getFiltersParamName() + ",
                "+                           \" is not defined for \"+stringIncludingLocalParams);",
                "+    }",
                "+    Map<Query,Occur> clauses = new IdentityHashMap<>();",
                "+    ",
                "+    for (String filter : params==null ? new String[0] : params) {",
                "+      if(filter==null || filter.length() == 0) {",
                "+        throw new SyntaxError(\"Filter '\"+filter + ",
                "+                             \"' has been picked in \"+stringIncludingLocalParams);",
                "+      }",
                "+      // as a side effect, qparser is mapped by tags in req context",
                "+      QParser parser = subQuery(filter, null);",
                "+      Query query = parser.getQuery();",
                "+      clauses.put(query, BooleanClause.Occur.FILTER);",
                "+    }",
                "+    String queryText = localParams.get(QueryParsing.V);",
                "+    if (queryText != null && queryText.length() > 0) {",
                "+      QParser parser = subQuery(queryText, null);",
                "+      clauses.put(parser.getQuery(), BooleanClause.Occur.MUST);",
                "+    }",
                "+    return clauses;",
                "+  }",
                "+",
                "+  private Collection<?> excludeSet(@SuppressWarnings(\"rawtypes\") ",
                "+                                     Map tagMap, Set<String> tagsToExclude) {",
                "+",
                "+    IdentityHashMap<Query,Boolean> excludeSet = new IdentityHashMap<>();",
                "+    for (String excludeTag : tagsToExclude) {",
                "+      Object olst = tagMap.get(excludeTag);",
                "+      // tagMap has entries of List<String,List<QParser>>, but subject to change in the future",
                "+      if (!(olst instanceof Collection)) continue;",
                "+      for (Object o : (Collection<?>)olst) {",
                "+        if (!(o instanceof QParser)) continue;",
                "+        QParser qp = (QParser)o;",
                "+        try {",
                "+          excludeSet.put(qp.getQuery(), Boolean.TRUE);",
                "+        } catch (SyntaxError syntaxError) {",
                "+          // This should not happen since we should only be retrieving a previously parsed query",
                "+          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);",
                "+        }",
                "+      }",
                "+    }",
                "+    return excludeSet.keySet();",
                "+  }",
                "+}",
                "diff --git a/solr/core/src/java/org/apache/solr/search/join/FiltersQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/join/FiltersQParserPlugin.java",
                "new file mode 100644",
                "index 00000000000..3091ec2d9af",
                "--- /dev/null",
                "+++ b/solr/core/src/java/org/apache/solr/search/join/FiltersQParserPlugin.java",
                "@@ -0,0 +1,33 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.search.join;",
                "+",
                "+import org.apache.solr.common.params.SolrParams;",
                "+import org.apache.solr.request.SolrQueryRequest;",
                "+import org.apache.solr.search.QParser;",
                "+import org.apache.solr.search.QParserPlugin;",
                "+",
                "+public class FiltersQParserPlugin extends QParserPlugin {",
                "+  public static final String NAME = \"filters\";",
                "+",
                "+  @Override",
                "+  public QParser createParser(String qstr, SolrParams localParams, SolrParams params, SolrQueryRequest req) {",
                "+    QParser parser = new FiltersQParser(qstr, localParams, params, req);",
                "+    return parser;",
                "+  }",
                "+}",
                "+"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/search/QParserPlugin.java",
                "solr/core/src/java/org/apache/solr/search/QueryParsing.java",
                "solr/core/src/java/org/apache/solr/search/join/BlockJoinChildQParser.java",
                "solr/core/src/java/org/apache/solr/search/join/BlockJoinParentQParser.java",
                "solr/core/src/java/org/apache/solr/search/join/FiltersQParser.java",
                "solr/core/src/java/org/apache/solr/search/join/FiltersQParserPlugin.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-9510": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "fa55f0c2f2c4af8bca2cd53a76ee6c3142d72ce8"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-9510",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9a7b56b9df3c8878c8faafda9cccc1e8ed7db983",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519134001,
            "hunks": 1,
            "message": "Revert \"LUCENE-8122: Updata autogenerated code after update to ICU4J 60.2\" This reverts commit d99bfa4bdb3442581bd9559b289887a8bc44c957.",
            "diff": [
                "diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/util/UnicodeProps.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/util/UnicodeProps.java",
                "index 254977f1423..00ee311a4b0 100644",
                "--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/util/UnicodeProps.java",
                "+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/util/UnicodeProps.java",
                "@@ -1,58 +1,58 @@",
                "-// DO NOT EDIT THIS FILE! Use \"ant unicode-data\" to recreate.",
                "-",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-package org.apache.lucene.analysis.util;",
                "-",
                "-import org.apache.lucene.util.Bits;",
                "-import org.apache.lucene.util.SparseFixedBitSet;",
                "-",
                "-/**",
                "- * This file contains unicode properties used by various {@link CharTokenizer}s.",
                "- * The data was created using ICU4J v60.2.0.0",
                "- * <p>",
                "- * Unicode version: 10.0.0.0",
                "- */",
                "-public final class UnicodeProps {",
                "-  private UnicodeProps() {}",
                "-  ",
                "-  /** Unicode version that was used to generate this file: {@value} */",
                "-  public static final String UNICODE_VERSION = \"10.0.0.0\";",
                "-  ",
                "-  /** Bitset with Unicode WHITESPACE code points. */",
                "-  public static final Bits WHITESPACE = createBits(",
                "-    0x0009, 0x000A, 0x000B, 0x000C, 0x000D, 0x0020, 0x0085, 0x00A0, 0x1680, 0x2000, 0x2001, 0x2002, 0x2003, ",
                "-    0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x2028, 0x2029, 0x202F, 0x205F, 0x3000);",
                "-  ",
                "-  private static Bits createBits(final int... codepoints) {",
                "-    final int len = codepoints[codepoints.length - 1] + 1;",
                "-    final SparseFixedBitSet bitset = new SparseFixedBitSet(len);",
                "-    for (int i : codepoints) bitset.set(i);",
                "-    return new Bits() {",
                "-      @Override",
                "-      public boolean get(int index) {",
                "-        return index < len && bitset.get(index);",
                "-      }",
                "-      ",
                "-      @Override",
                "-      public int length() {",
                "-        return 0x10FFFF + 1;",
                "-      }",
                "-    };",
                "-  }",
                "-}",
                "+// DO NOT EDIT THIS FILE! Use \"ant unicode-data\" to recreate.",
                "+",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.analysis.util;",
                "+",
                "+import org.apache.lucene.util.Bits;",
                "+import org.apache.lucene.util.SparseFixedBitSet;",
                "+",
                "+/**",
                "+ * This file contains unicode properties used by various {@link CharTokenizer}s.",
                "+ * The data was created using ICU4J v59.1.0.0",
                "+ * <p>",
                "+ * Unicode version: 9.0.0.0",
                "+ */",
                "+public final class UnicodeProps {",
                "+  private UnicodeProps() {}",
                "+  ",
                "+  /** Unicode version that was used to generate this file: {@value} */",
                "+  public static final String UNICODE_VERSION = \"9.0.0.0\";",
                "+  ",
                "+  /** Bitset with Unicode WHITESPACE code points. */",
                "+  public static final Bits WHITESPACE = createBits(",
                "+    0x0009, 0x000A, 0x000B, 0x000C, 0x000D, 0x0020, 0x0085, 0x00A0, 0x1680, 0x2000, 0x2001, 0x2002, 0x2003, ",
                "+    0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x2028, 0x2029, 0x202F, 0x205F, 0x3000);",
                "+  ",
                "+  private static Bits createBits(final int... codepoints) {",
                "+    final int len = codepoints[codepoints.length - 1] + 1;",
                "+    final SparseFixedBitSet bitset = new SparseFixedBitSet(len);",
                "+    for (int i : codepoints) bitset.set(i);",
                "+    return new Bits() {",
                "+      @Override",
                "+      public boolean get(int index) {",
                "+        return index < len && bitset.get(index);",
                "+      }",
                "+      ",
                "+      @Override",
                "+      public int length() {",
                "+        return 0x10FFFF + 1;",
                "+      }",
                "+    };",
                "+  }",
                "+}"
            ],
            "changed_files": [
                "lucene/analysis/common/src/java/org/apache/lucene/analysis/util/UnicodeProps.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8122": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5ad93d4df621c6ae19f0ac7b6c72366ef24cd082"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8122",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "50a04c077fc4ee76e86df33e3b35aa876f71ed77",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520246230,
            "hunks": 7,
            "message": "SOLR-11267: Add support for \"add-distinct\" atomic update operation",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger.java b/solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger.java",
                "index 2689f0e80c2..1198bc93466 100644",
                "--- a/solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger.java",
                "+++ b/solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger.java",
                "@@ -20,2 +20,3 @@ import java.io.IOException;",
                " import java.lang.invoke.MethodHandles;",
                "+import java.util.ArrayList;",
                " import java.util.Collection;",
                "@@ -118,2 +119,6 @@ public class AtomicUpdateDocumentMerger {",
                "               break;",
                "+            case \"add-distinct\":",
                "+              updateField = true;",
                "+              doAddDistinct(toDoc, sif, fieldVal);",
                "+              break;",
                "             default:",
                "@@ -319,2 +324,37 @@ public class AtomicUpdateDocumentMerger {",
                "+  protected void doAddDistinct(SolrInputDocument toDoc, SolrInputField sif, Object fieldVal) {",
                "+    final String name = sif.getName();",
                "+    SolrInputField existingField = toDoc.get(name);",
                "+",
                "+    SchemaField sf = schema.getField(name);",
                "+",
                "+    if (sf != null) {",
                "+      Collection<Object> original = existingField != null ?",
                "+          existingField.getValues() :",
                "+          new ArrayList<>();",
                "+",
                "+      int initialSize = original.size();",
                "+      if (fieldVal instanceof Collection) {",
                "+        for (Object object : (Collection) fieldVal) {",
                "+          if (!original.contains(object)) {",
                "+            original.add(object);",
                "+          }",
                "+        }",
                "+      } else {",
                "+        Object object = sf.getType().toNativeType(fieldVal);",
                "+        if (!original.contains(object)) {",
                "+          original.add(object);",
                "+        }",
                "+      }",
                "+",
                "+      if (original.size() > initialSize) { // update only if more are added",
                "+        if (original.size() == 1) { // if single value, pass the value instead of List",
                "+          doAdd(toDoc, sif, original.toArray()[0]);",
                "+        } else {",
                "+          toDoc.setField(name, original);",
                "+        }",
                "+      }",
                "+    }",
                "+  }",
                "+",
                "   protected void doInc(SolrInputDocument toDoc, SolrInputField sif, Object fieldVal) {",
                "diff --git a/solr/solr-ref-guide/src/updating-parts-of-documents.adoc b/solr/solr-ref-guide/src/updating-parts-of-documents.adoc",
                "index 3efc00adc79..5e25d51f775 100644",
                "--- a/solr/solr-ref-guide/src/updating-parts-of-documents.adoc",
                "+++ b/solr/solr-ref-guide/src/updating-parts-of-documents.adoc",
                "@@ -42,2 +42,5 @@ Adds the specified values to a multiValued field. May be specified as a single v",
                "+`add-distinct`::",
                "+Adds the specified values to a multiValued field, only if not already present. May be specified as a single value, or as a list.",
                "+",
                " `remove`::",
                "@@ -69,2 +72,3 @@ If the following document exists in our collection:",
                "  \"categories\":[\"kids\"],",
                "+ \"sub_categories\":[\"under_5\",\"under_10\"],",
                "  \"promo_ids\":[\"a123x\"],",
                "@@ -82,2 +86,3 @@ And we apply the following update command:",
                "  \"categories\":{\"add\":[\"toys\",\"games\"]},",
                "+ \"sub_categories\":{\"add-distinct\":\"under_10\"},",
                "  \"promo_ids\":{\"remove\":\"a123x\"},",
                "@@ -95,2 +100,3 @@ The resulting document in our collection will be:",
                "  \"categories\":[\"kids\",\"toys\",\"games\"],",
                "+ \"sub_categories\":[\"under_5\",\"under_10\"],",
                "  \"tags\":[\"buy_now\",\"clearance\"]"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger.java",
                "solr/solr-ref-guide/src/updating-parts-of-documents.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11267": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "fbbf8096cefecf90563c91e8752296fa763de685"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11267",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dae572819ba479bffd990ea7d8f0c4f7b76da5b0",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520566499,
            "hunks": 1,
            "message": "SOLR-11702: Fix precommit, only throw error to client if the replica is not in the same shard as leader",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java b/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java",
                "index 50705825e3d..d5e4194b15b 100644",
                "--- a/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java",
                "+++ b/solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java",
                "@@ -899,4 +899,7 @@ public class DistributedUpdateProcessor extends UpdateRequestProcessor {",
                "                 \"No request recovery command will be sent!\");",
                "-            // some replicas did not receive the updates, exception must be notified to clients",
                "-            errorsForClient.add(error);",
                "+            if (!shardId.equals(cloudDesc.getShardId())) {",
                "+              // some replicas on other shard did not receive the updates (ex: during splitshard),",
                "+              // exception must be notified to clients",
                "+              errorsForClient.add(error);",
                "+            }",
                "           } else {"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11702": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b992bbb2d7480d4cf2ff1d9302a7e20732c1100c"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11702",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "250e5b2aba2c25540f597f4436c619fd97febd0d",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518740548,
            "hunks": 1,
            "message": "SOLR-11739: Remove cast no longer needed",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/SizeLimitedDistributedMap.java b/solr/core/src/java/org/apache/solr/cloud/SizeLimitedDistributedMap.java",
                "index 7f7e75f7cfe..0cb6cbe8e87 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/SizeLimitedDistributedMap.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/SizeLimitedDistributedMap.java",
                "@@ -70,3 +70,3 @@ public class SizeLimitedDistributedMap extends DistributedMap {",
                "-      long topElementMzxId = (Long) priorityQueue.top();",
                "+      long topElementMzxId = priorityQueue.top();"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/SizeLimitedDistributedMap.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11739": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "dfb0803bbb972d730627fbdcd4df66558d06f13a"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11739",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1527ce57d49721923ae43a81a10fe872ce94a2d8",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518149772,
            "hunks": 7,
            "message": "SOLR-11925: Rename RoutedAliasCreateCollectionCmd as MaintainRoutedAliasCmd (internal Cmd)",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd.java",
                "index b0e6f442e5f..b89d752e7da 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd.java",
                "@@ -123,3 +123,3 @@ public class CreateAliasCmd implements OverseerCollectionMessageHandler.Cmd {",
                "     // Create the collection",
                "-    RoutedAliasCreateCollectionCmd.createCollectionAndWait(state, aliasName, aliasMetadata, initialCollectionName, ocmh);",
                "+    MaintainRoutedAliasCmd.createCollectionAndWait(state, aliasName, aliasMetadata, initialCollectionName, ocmh);",
                "     validateAllCollectionsExistAndNoDups(Collections.singletonList(initialCollectionName), zkStateReader);",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainRoutedAliasCmd.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainRoutedAliasCmd.java",
                "new file mode 100644",
                "index 00000000000..d41a205cc35",
                "--- /dev/null",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainRoutedAliasCmd.java",
                "@@ -0,0 +1,300 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.solr.cloud.api.collections;",
                "+",
                "+import java.lang.invoke.MethodHandles;",
                "+import java.text.ParseException;",
                "+import java.time.Instant;",
                "+import java.util.ArrayList;",
                "+import java.util.Collection;",
                "+import java.util.Date;",
                "+import java.util.HashMap;",
                "+import java.util.LinkedHashSet;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+",
                "+import org.apache.solr.client.solrj.SolrResponse;",
                "+import org.apache.solr.client.solrj.request.CollectionAdminRequest;",
                "+import org.apache.solr.cloud.Overseer;",
                "+import org.apache.solr.cloud.OverseerSolrResponse;",
                "+import org.apache.solr.common.SolrException;",
                "+import org.apache.solr.common.cloud.Aliases;",
                "+import org.apache.solr.common.cloud.ClusterState;",
                "+import org.apache.solr.common.cloud.ZkNodeProps;",
                "+import org.apache.solr.common.cloud.ZkStateReader;",
                "+import org.apache.solr.common.params.CollectionParams;",
                "+import org.apache.solr.common.params.ModifiableSolrParams;",
                "+import org.apache.solr.common.params.SolrParams;",
                "+import org.apache.solr.common.util.NamedList;",
                "+import org.apache.solr.common.util.StrUtils;",
                "+import org.apache.solr.handler.admin.CollectionsHandler;",
                "+import org.apache.solr.request.LocalSolrQueryRequest;",
                "+import org.apache.solr.response.SolrQueryResponse;",
                "+import org.apache.solr.util.DateMathParser;",
                "+import org.slf4j.Logger;",
                "+import org.slf4j.LoggerFactory;",
                "+",
                "+import static org.apache.solr.cloud.api.collections.OverseerCollectionMessageHandler.COLL_CONF;",
                "+import static org.apache.solr.cloud.api.collections.TimeRoutedAlias.CREATE_COLLECTION_PREFIX;",
                "+import static org.apache.solr.cloud.api.collections.TimeRoutedAlias.ROUTED_ALIAS_NAME_CORE_PROP;",
                "+import static org.apache.solr.common.params.CommonParams.NAME;",
                "+",
                "+/**",
                "+ * (Internal) For \"time routed aliases\", both deletes old collections and creates new collections",
                "+ * associated with routed aliases.",
                "+ *",
                "+ * Note: this logic is within an Overseer because we want to leverage the mutual exclusion",
                "+ * property afforded by the lock it obtains on the alias name.",
                "+ *",
                "+ * @since 7.3",
                "+ * @lucene.internal",
                "+ */",
                "+public class MaintainRoutedAliasCmd implements OverseerCollectionMessageHandler.Cmd {",
                "+  private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "+",
                "+  public static final String IF_MOST_RECENT_COLL_NAME = \"ifMostRecentCollName\"; //TODO rename to createAfter",
                "+",
                "+  private final OverseerCollectionMessageHandler ocmh;",
                "+",
                "+  public MaintainRoutedAliasCmd(OverseerCollectionMessageHandler ocmh) {",
                "+    this.ocmh = ocmh;",
                "+  }",
                "+",
                "+  /** Invokes this command from the client.  If there's a problem it will throw an exception. */",
                "+  public static NamedList remoteInvoke(CollectionsHandler collHandler, String aliasName, String mostRecentCollName)",
                "+      throws Exception {",
                "+    final String operation = CollectionParams.CollectionAction.MAINTAINROUTEDALIAS.toLower();",
                "+    Map<String, Object> msg = new HashMap<>();",
                "+    msg.put(Overseer.QUEUE_OPERATION, operation);",
                "+    msg.put(CollectionParams.NAME, aliasName);",
                "+    msg.put(MaintainRoutedAliasCmd.IF_MOST_RECENT_COLL_NAME, mostRecentCollName);",
                "+    final SolrResponse rsp = collHandler.sendToOCPQueue(new ZkNodeProps(msg));",
                "+    if (rsp.getException() != null) {",
                "+      throw rsp.getException();",
                "+    }",
                "+    return rsp.getResponse();",
                "+  }",
                "+",
                "+  @Override",
                "+  public void call(ClusterState clusterState, ZkNodeProps message, NamedList results) throws Exception {",
                "+    //---- PARSE PRIMARY MESSAGE PARAMS",
                "+    // important that we use NAME for the alias as that is what the Overseer will get a lock on before calling us",
                "+    final String aliasName = message.getStr(NAME);",
                "+    // the client believes this is the mostRecent collection name.  We assert this if provided.",
                "+    final String ifMostRecentCollName = message.getStr(IF_MOST_RECENT_COLL_NAME); // optional",
                "+",
                "+    // TODO collection param (or intervalDateMath override?), useful for data capped collections",
                "+",
                "+    //---- PARSE ALIAS INFO FROM ZK",
                "+    final ZkStateReader.AliasesManager aliasesManager = ocmh.zkStateReader.aliasesManager;",
                "+    final Aliases aliases = aliasesManager.getAliases();",
                "+    final Map<String, String> aliasMetadata = aliases.getCollectionAliasMetadata(aliasName);",
                "+    if (aliasMetadata == null) {",
                "+      throw newAliasMustExistException(aliasName); // if it did exist, we'd have a non-null map",
                "+    }",
                "+    final TimeRoutedAlias timeRoutedAlias = new TimeRoutedAlias(aliasName, aliasMetadata);",
                "+",
                "+    final List<Map.Entry<Instant, String>> parsedCollections =",
                "+        timeRoutedAlias.parseCollections(aliases, () -> newAliasMustExistException(aliasName));",
                "+",
                "+    //---- GET MOST RECENT COLL",
                "+    final Map.Entry<Instant, String> mostRecentEntry = parsedCollections.get(0);",
                "+    final Instant mostRecentCollTimestamp = mostRecentEntry.getKey();",
                "+    final String mostRecentCollName = mostRecentEntry.getValue();",
                "+    if (ifMostRecentCollName != null) {",
                "+      if (!mostRecentCollName.equals(ifMostRecentCollName)) {",
                "+        // Possibly due to race conditions in URPs on multiple leaders calling us at the same time",
                "+        String msg = IF_MOST_RECENT_COLL_NAME + \" expected \" + ifMostRecentCollName + \" but it's \" + mostRecentCollName;",
                "+        if (parsedCollections.stream().map(Map.Entry::getValue).noneMatch(ifMostRecentCollName::equals)) {",
                "+          msg += \". Furthermore this collection isn't in the list of collections referenced by the alias.\";",
                "+        }",
                "+        log.info(msg);",
                "+        results.add(\"message\", msg);",
                "+        return;",
                "+      }",
                "+    } else if (mostRecentCollTimestamp.isAfter(Instant.now())) {",
                "+      final String msg = \"Most recent collection is in the future, so we won't create another.\";",
                "+      log.info(msg);",
                "+      results.add(\"message\", msg);",
                "+      return;",
                "+    }",
                "+",
                "+    //---- COMPUTE NEXT COLLECTION NAME",
                "+    final Instant nextCollTimestamp = timeRoutedAlias.computeNextCollTimestamp(mostRecentCollTimestamp);",
                "+    final String createCollName = TimeRoutedAlias.formatCollectionNameFromInstant(aliasName, nextCollTimestamp);",
                "+",
                "+    //---- DELETE OLDEST COLLECTIONS AND REMOVE FROM ALIAS (if configured)",
                "+    NamedList deleteResults = deleteOldestCollectionsAndUpdateAlias(timeRoutedAlias, aliasesManager, nextCollTimestamp);",
                "+    if (deleteResults != null) {",
                "+      results.add(\"delete\", deleteResults);",
                "+    }",
                "+",
                "+    //---- CREATE THE COLLECTION",
                "+    NamedList createResults = createCollectionAndWait(clusterState, aliasName, aliasMetadata,",
                "+        createCollName, ocmh);",
                "+    if (createResults != null) {",
                "+      results.add(\"create\", createResults);",
                "+    }",
                "+",
                "+    //---- UPDATE THE ALIAS WITH NEW COLLECTION",
                "+    aliasesManager.applyModificationAndExportToZk(curAliases -> {",
                "+      final List<String> curTargetCollections = curAliases.getCollectionAliasListMap().get(aliasName);",
                "+      if (curTargetCollections.contains(createCollName)) {",
                "+        return curAliases;",
                "+      } else {",
                "+        List<String> newTargetCollections = new ArrayList<>(curTargetCollections.size() + 1);",
                "+        // prepend it on purpose (thus reverse sorted). Solr alias resolution defaults to the first collection in a list",
                "+        newTargetCollections.add(createCollName);",
                "+        newTargetCollections.addAll(curTargetCollections);",
                "+        return curAliases.cloneWithCollectionAlias(aliasName, StrUtils.join(newTargetCollections, ','));",
                "+      }",
                "+    });",
                "+",
                "+  }",
                "+",
                "+  /**",
                "+   * Deletes some of the oldest collection(s) based on {@link TimeRoutedAlias#getAutoDeleteAgeMath()}. If not present",
                "+   * then does nothing.  Returns non-null results if something was deleted (or if we tried to).",
                "+   * {@code now} is the date from which the math is relative to.",
                "+   */",
                "+  NamedList deleteOldestCollectionsAndUpdateAlias(TimeRoutedAlias timeRoutedAlias,",
                "+                                                  ZkStateReader.AliasesManager aliasesManager,",
                "+                                                  Instant now) throws Exception {",
                "+    final String autoDeleteAgeMathStr = timeRoutedAlias.getAutoDeleteAgeMath();",
                "+    if (autoDeleteAgeMathStr == null) {",
                "+      return null;",
                "+    }",
                "+    final Instant delBefore;",
                "+    try {",
                "+      delBefore = new DateMathParser(Date.from(now), timeRoutedAlias.getTimeZone()).parseMath(autoDeleteAgeMathStr).toInstant();",
                "+    } catch (ParseException e) {",
                "+      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e); // note: should not happen by this point",
                "+    }",
                "+",
                "+    String aliasName = timeRoutedAlias.getAliasName();",
                "+",
                "+    Collection<String> collectionsToDelete = new LinkedHashSet<>();",
                "+",
                "+    // First update the alias    (there may be no change to make!)",
                "+    aliasesManager.applyModificationAndExportToZk(curAliases -> {",
                "+      // note: we could re-parse the TimeRoutedAlias object from curAliases but I don't think there's a point to it.",
                "+",
                "+      final List<Map.Entry<Instant, String>> parsedCollections =",
                "+          timeRoutedAlias.parseCollections(curAliases, () -> newAliasMustExistException(aliasName));",
                "+",
                "+      //iterating from newest to oldest, find the first collection that has a time <= \"before\".  We keep this collection",
                "+      // (and all newer to left) but we delete older collections, which are the ones that follow.",
                "+      // This logic will always keep the first collection, which we can't delete.",
                "+      int numToKeep = 0;",
                "+      for (Map.Entry<Instant, String> parsedCollection : parsedCollections) {",
                "+        numToKeep++;",
                "+        final Instant colInstant = parsedCollection.getKey();",
                "+        if (colInstant.isBefore(delBefore) || colInstant.equals(delBefore)) {",
                "+          break;",
                "+        }",
                "+      }",
                "+      if (numToKeep == parsedCollections.size()) {",
                "+        log.debug(\"No old time routed collections to delete.\");",
                "+        return curAliases;",
                "+      }",
                "+",
                "+      final List<String> targetList = curAliases.getCollectionAliasListMap().get(aliasName);",
                "+      // remember to delete these... (oldest to newest)",
                "+      for (int i = targetList.size() - 1; i >= numToKeep; i--) {",
                "+        collectionsToDelete.add(targetList.get(i));",
                "+      }",
                "+      // new alias list has only \"numToKeep\" first items",
                "+      final List<String> collectionsToKeep = targetList.subList(0, numToKeep);",
                "+      final String collectionsToKeepStr = StrUtils.join(collectionsToKeep, ',');",
                "+      return curAliases.cloneWithCollectionAlias(aliasName, collectionsToKeepStr);",
                "+    });",
                "+",
                "+    if (collectionsToDelete.isEmpty()) {",
                "+      return null;",
                "+    }",
                "+",
                "+    log.info(\"Removing old time routed collections: {}\", collectionsToDelete);",
                "+    // Should this be done asynchronously?  If we got \"ASYNC\" then probably.",
                "+    //   It would shorten the time the Overseer holds a lock on the alias name",
                "+    //   (deleting the collections will be done later and not use that lock).",
                "+    //   Don't bother about parallel; it's unusual to have more than 1.",
                "+    // Note we don't throw an exception here under most cases; instead the response will have information about",
                "+    //   how each delete request went, possibly including a failure message.",
                "+    final CollectionsHandler collHandler = ocmh.overseer.getCoreContainer().getCollectionsHandler();",
                "+    NamedList results = new NamedList();",
                "+    for (String collection : collectionsToDelete) {",
                "+      final SolrParams reqParams = CollectionAdminRequest.deleteCollection(collection).getParams();",
                "+      SolrQueryResponse rsp = new SolrQueryResponse();",
                "+      collHandler.handleRequestBody(new LocalSolrQueryRequest(null, reqParams), rsp);",
                "+      results.add(collection, rsp.getValues());",
                "+    }",
                "+    return results;",
                "+  }",
                "+",
                "+  /**",
                "+   * Creates a collection (for use in a routed alias), waiting for it to be ready before returning.",
                "+   * If the collection already exists then this is not an error.",
                "+   * IMPORTANT: Only call this from an {@link OverseerCollectionMessageHandler.Cmd}.",
                "+   */",
                "+  static NamedList createCollectionAndWait(ClusterState clusterState, String aliasName, Map<String, String> aliasMetadata,",
                "+                                           String createCollName, OverseerCollectionMessageHandler ocmh) throws Exception {",
                "+    // Map alias metadata starting with a prefix to a create-collection API request",
                "+    final ModifiableSolrParams createReqParams = new ModifiableSolrParams();",
                "+    for (Map.Entry<String, String> e : aliasMetadata.entrySet()) {",
                "+      if (e.getKey().startsWith(CREATE_COLLECTION_PREFIX)) {",
                "+        createReqParams.set(e.getKey().substring(CREATE_COLLECTION_PREFIX.length()), e.getValue());",
                "+      }",
                "+    }",
                "+    if (createReqParams.get(COLL_CONF) == null) {",
                "+      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,",
                "+          \"We require an explicit \" + COLL_CONF );",
                "+    }",
                "+    createReqParams.set(NAME, createCollName);",
                "+    createReqParams.set(\"property.\" + ROUTED_ALIAS_NAME_CORE_PROP, aliasName);",
                "+    // a CollectionOperation reads params and produces a message (Map) that is supposed to be sent to the Overseer.",
                "+    //   Although we could create the Map without it, there are a fair amount of rules we don't want to reproduce.",
                "+    final Map<String, Object> createMsgMap = CollectionsHandler.CollectionOperation.CREATE_OP.execute(",
                "+        new LocalSolrQueryRequest(null, createReqParams),",
                "+        null,",
                "+        ocmh.overseer.getCoreContainer().getCollectionsHandler());",
                "+    createMsgMap.put(Overseer.QUEUE_OPERATION, \"create\");",
                "+",
                "+    NamedList results = new NamedList();",
                "+    try {",
                "+      // Since we are running in the Overseer here, send the message directly to the Overseer CreateCollectionCmd.",
                "+      // note: there's doesn't seem to be any point in locking on the collection name, so we don't. We currently should",
                "+      //   already have a lock on the alias name which should be sufficient.",
                "+      ocmh.commandMap.get(CollectionParams.CollectionAction.CREATE).call(clusterState, new ZkNodeProps(createMsgMap), results);",
                "+    } catch (SolrException e) {",
                "+      // The collection might already exist, and that's okay -- we can adopt it.",
                "+      if (!e.getMessage().contains(\"collection already exists\")) {",
                "+        throw e;",
                "+      }",
                "+    }",
                "+",
                "+    CollectionsHandler.waitForActiveCollection(createCollName, ocmh.overseer.getCoreContainer(),",
                "+        new OverseerSolrResponse(results));",
                "+    return results;",
                "+  }",
                "+",
                "+  private SolrException newAliasMustExistException(String aliasName) {",
                "+    return new SolrException(SolrException.ErrorCode.BAD_REQUEST,",
                "+        \"Alias \" + aliasName + \" does not exist.\");",
                "+  }",
                "+",
                "+}",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "index 056f1085763..6519a8e4c91 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "@@ -232,3 +232,3 @@ public class OverseerCollectionMessageHandler implements OverseerMessageHandler,",
                "         .put(MODIFYALIAS, new ModifyAliasCmd(this))",
                "-        .put(ROUTEDALIAS_CREATECOLL, new RoutedAliasCreateCollectionCmd(this))",
                "+        .put(MAINTAINROUTEDALIAS, new MaintainRoutedAliasCmd(this))",
                "         .put(OVERSEERSTATUS, new OverseerStatusCmd(this))",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "index 0ffaaa900c4..16529c8114f 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "@@ -53,3 +53,3 @@ import static org.apache.solr.common.params.CommonParams.TZ;",
                "  * @see CreateAliasCmd",
                "- * @see RoutedAliasCreateCollectionCmd",
                "+ * @see MaintainRoutedAliasCmd",
                "  * @see org.apache.solr.update.processor.TimeRoutedAliasUpdateProcessor",
                "diff --git a/solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor.java b/solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor.java",
                "index cd47c5ce42e..b8ccbd3dbd6 100644",
                "--- a/solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor.java",
                "+++ b/solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor.java",
                "@@ -33,3 +33,3 @@ import java.util.stream.Collectors;",
                " import org.apache.solr.cloud.ZkController;",
                "-import org.apache.solr.cloud.api.collections.RoutedAliasCreateCollectionCmd;",
                "+import org.apache.solr.cloud.api.collections.MaintainRoutedAliasCmd;",
                " import org.apache.solr.cloud.api.collections.TimeRoutedAlias;",
                "@@ -277,3 +277,3 @@ public class TimeRoutedAliasUpdateProcessor extends UpdateRequestProcessor {",
                "       try {",
                "-        RoutedAliasCreateCollectionCmd.remoteInvoke(collHandler, getAliasName(), mostRecentCollName);",
                "+        MaintainRoutedAliasCmd.remoteInvoke(collHandler, getAliasName(), mostRecentCollName);",
                "         // we don't care about the response.  It's possible no collection was created because",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "index 74fbb95d3ca..d404d60f3c6 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java",
                "@@ -82,3 +82,3 @@ public interface CollectionParams {",
                "     LISTALIASES(false, LockLevel.NONE),",
                "-    ROUTEDALIAS_CREATECOLL(true, LockLevel.COLLECTION),",
                "+    MAINTAINROUTEDALIAS(true, LockLevel.COLLECTION),",
                "     DELETEROUTEDALIASCOLLECTIONS(true, LockLevel.COLLECTION),"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd.java",
                "solr/core/src/java/org/apache/solr/cloud/api/collections/MaintainRoutedAliasCmd.java",
                "solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor.java",
                "solr/solrj/src/java/org/apache/solr/common/params/CollectionParams.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11925": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "ec8d22a1ce23d03699315f9aa64da2a54441deae"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11925",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fb8823edeae464976942cc195fe467168a591650",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518198310,
            "hunks": 12,
            "message": "LUCENE-8155: Add support for Java 9 in smoke tester",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index 2d300b5b464..2346d540587 100755",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -605,4 +605,12 @@ File | Project Structure | Platform Settings | SDKs):",
                "-  <target name=\"nightly-smoke\" description=\"Builds an unsigned release and smoke tests it\"",
                "-    depends=\"clean,resolve-groovy,resolve-markdown,install-maven-tasks\">",
                "+  <target name=\"-nightly-smoke-java9params\" if=\"smokeTestRelease.java9\">",
                "+    <!-- convert path to UNIX style, so windows backslashes don't hurt escaping: -->",
                "+    <pathconvert targetos=\"unix\" property=\"-smokeTestRelease.java9params\">",
                "+      <regexpmapper from=\"^(.*)$\" to=\"--test-java9 '\\1'\"/>",
                "+      <path location=\"${smokeTestRelease.java9}\"/>",
                "+    </pathconvert>",
                "+  </target>",
                "+",
                "+  <target name=\"nightly-smoke\" description=\"Builds an unsigned release and smoke tests it (pass '-DsmokeTestRelease.java9=/path/to/jdk-9' to additionally test with Java 9 or later)\"",
                "+    depends=\"clean,resolve-groovy,resolve-markdown,install-maven-tasks,-nightly-smoke-java9params\">",
                "     <fail message=\"To run nightly smoke, the JDK must be exactly Java 1.8, was: ${java.specification.version}\">",
                "@@ -612,2 +620,3 @@ File | Project Structure | Platform Settings | SDKs):",
                "     </fail>",
                "+    <property name=\"-smokeTestRelease.java9params\" value=\"\"/><!-- (if not yet defined) -->",
                "     <exec executable=\"${python32.exe}\" failonerror=\"true\" taskname=\"python32\">",
                "@@ -636,2 +645,3 @@ File | Project Structure | Platform Settings | SDKs):",
                "       <arg file=\"dev-tools/scripts/smokeTestRelease.py\"/>",
                "+      <arg line=\"${-smokeTestRelease.java9params}\"/>",
                "       <arg value=\"--revision\"/>",
                "diff --git a/dev-tools/scripts/smokeTestRelease.py b/dev-tools/scripts/smokeTestRelease.py",
                "index b7ca9720a72..df0fcfd64d6 100644",
                "--- a/dev-tools/scripts/smokeTestRelease.py",
                "+++ b/dev-tools/scripts/smokeTestRelease.py",
                "@@ -728,2 +728,12 @@ def verifyUnpacked(java, project, artifact, unpackPath, gitRevision, version, te",
                "+      if java.run_java9:",
                "+        print(\"    run tests w/ Java 9 and testArgs='%s'...\" % testArgs)",
                "+        java.run_java9('ant clean test %s' % testArgs, '%s/test.log' % unpackPath)",
                "+        java.run_java9('ant jar', '%s/compile.log' % unpackPath)",
                "+        testDemo(java.run_java9, isSrc, version, '9')",
                "+",
                "+        print('    generate javadocs w/ Java 9...')",
                "+        java.run_java9('ant javadocs', '%s/javadocs.log' % unpackPath)",
                "+        checkJavadocpathFull('%s/build/docs' % unpackPath)",
                "+",
                "     else:",
                "@@ -743,2 +753,14 @@ def verifyUnpacked(java, project, artifact, unpackPath, gitRevision, version, te",
                "+      if java.run_java9:",
                "+        print(\"    run tests w/ Java 9 and testArgs='%s'...\" % testArgs)",
                "+        java.run_java9('ant clean test -Dtests.slow=false %s' % testArgs, '%s/test.log' % unpackPath)",
                "+",
                "+        print('    generate javadocs w/ Java 9...')",
                "+        java.run_java9('ant clean javadocs', '%s/javadocs.log' % unpackPath)",
                "+        checkJavadocpathFull('%s/solr/build/docs' % unpackPath, False)",
                "+",
                "+        print('    test solr example w/ Java 9...')",
                "+        java.run_java9('ant clean example', '%s/antexample.log' % unpackPath)",
                "+        testSolrExample(unpackPath, java.java9_home, True)",
                "+",
                "       os.chdir('..')",
                "@@ -753,2 +775,4 @@ def verifyUnpacked(java, project, artifact, unpackPath, gitRevision, version, te",
                "       testDemo(java.run_java8, isSrc, version, '1.8')",
                "+      if java.run_java9:",
                "+        testDemo(java.run_java9, isSrc, version, '9')",
                "@@ -767,2 +791,12 @@ def verifyUnpacked(java, project, artifact, unpackPath, gitRevision, version, te",
                "+      if java.run_java9:",
                "+        print('    copying unpacked distribution for Java 9 ...')",
                "+        java9UnpackPath = '%s-java9' % unpackPath",
                "+        if os.path.exists(java9UnpackPath):",
                "+          shutil.rmtree(java9UnpackPath)",
                "+        shutil.copytree(unpackPath, java9UnpackPath)",
                "+        os.chdir(java9UnpackPath)",
                "+        print('    test solr example w/ Java 9...')",
                "+        testSolrExample(java9UnpackPath, java.java9_home, False)",
                "+",
                "       os.chdir(unpackPath)",
                "@@ -1220,3 +1254,3 @@ def crawl(downloadedFiles, urlString, targetDir, exclusions=set()):",
                "-def make_java_config(parser, java8_home):",
                "+def make_java_config(parser, java9_home):",
                "   def _make_runner(java_home, version):",
                "@@ -1229,3 +1263,3 @@ def make_java_config(parser, java8_home):",
                "                                 shell=True, stderr=subprocess.STDOUT).decode('utf-8')",
                "-    if s.find(' version \"%s.' % version) == -1:",
                "+    if s.find(' version \"%s' % version) == -1:",
                "       parser.error('got wrong version for java %s:\\n%s' % (version, s)) ",
                "@@ -1238,5 +1272,8 @@ def make_java_config(parser, java8_home):",
                "   run_java8 = _make_runner(java8_home, '1.8')",
                "+  run_java9 = None",
                "+  if java9_home is not None:",
                "+    run_java9 = _make_runner(java9_home, '9')",
                "-  jc = namedtuple('JavaConfig', 'run_java8 java8_home')",
                "-  return jc(run_java8, java8_home)",
                "+  jc = namedtuple('JavaConfig', 'run_java8 java8_home run_java9 java9_home')",
                "+  return jc(run_java8, java8_home, run_java9, java9_home)",
                "@@ -1260,4 +1297,4 @@ def parse_config():",
                "                       help='Version of the release, defaults to that in URL')",
                "-  parser.add_argument('--test-java8', metavar='JAVA8_HOME',",
                "-                      help='Path to Java8 home directory, to run tests with if specified')",
                "+  parser.add_argument('--test-java9', metavar='JAVA9_HOME',",
                "+                      help='Path to Java9 home directory, to run tests with if specified')",
                "   parser.add_argument('url', help='Url pointing to release to test')",
                "@@ -1283,3 +1320,3 @@ def parse_config():",
                "-  c.java = make_java_config(parser, c.test_java8)",
                "+  c.java = make_java_config(parser, c.test_java9)"
            ],
            "changed_files": [
                "build.xml",
                "dev-tools/scripts/smokeTestRelease.py"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8155": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "193863130754d78baf36366f7a36125d76dd75b5"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8155",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "627562e6d7a91d80369684d01cc3ef25a3ce587f",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518303881,
            "hunks": 1,
            "message": "LUCENE-7966: Revert change that's not needed",
            "diff": [
                "diff --git a/solr/common-build.xml b/solr/common-build.xml",
                "index 1701c60c313..3eec2027cf3 100644",
                "--- a/solr/common-build.xml",
                "+++ b/solr/common-build.xml",
                "@@ -179,3 +179,3 @@",
                "   <target name=\"lucene-jars-to-solr\" ",
                "-          depends=\"resolve-groovy,-lucene-jars-to-solr-not-for-package,-lucene-jars-to-solr-package\"/>",
                "+          depends=\"-lucene-jars-to-solr-not-for-package,-lucene-jars-to-solr-package\"/>"
            ],
            "changed_files": [
                "solr/common-build.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-7966": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1b26aae72c8181aeb76e3c3f988c89b8f15982df"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-7966",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "41af8bd16a4d5151adebe3e4dfe847854ab5bde3",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519688825,
            "hunks": 2,
            "message": "LUCENE-8106: stop parsing ANT_OPTS from Jenkins log",
            "diff": [
                "diff --git a/dev-tools/scripts/reproduceJenkinsFailures.py b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "index f6da613d7a6..64a273247b2 100644",
                "--- a/dev-tools/scripts/reproduceJenkinsFailures.py",
                "+++ b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "@@ -36,5 +36,2 @@ reAntSysprops = re.compile(r'\"-D[^\"]+\"|-D[^=]+=\"[^\"]*\"|-D\\S+')",
                "-#            sarowe Jenkins example: + export 'ANT_OPTS=-Xmx1150m -XX:+CMSClassUnloadingEnabled -Djava.awt.headless=true -Dargs=\"-Xmx1g\"'",
                "-reAntOptions = re.compile(r\"export\\s+'?\\s*ANT_OPTS=([^'\\n\\r]+)\")",
                "-",
                " # Method example: NOTE: reproduce with: ant test  -Dtestcase=ZkSolrClientTest -Dtests.method=testMultipleWatchesAsync -Dtests.seed=6EF5AB70F0032849 -Dtests.slow=true -Dtests.locale=he-IL -Dtests.timezone=NST -Dtests.asserts=true -Dtests.file.encoding=UTF-8",
                "@@ -128,8 +125,4 @@ def fetchAndParseJenkinsLog(url):",
                "               antOptions = ' '.join(reAntSysprops.findall(line))",
                "-            else:",
                "-              match = reAntOptions.search(line)",
                "-              if match is not None:",
                "-                antOptions = ' '.join(reAntSysprops.findall(line))",
                "-    if len(antOptions) > 0:",
                "-      print('[repro] Ant options: %s' % antOptions)",
                "+              if len(antOptions) > 0:",
                "+                print('[repro] Ant options: %s' % antOptions)",
                "   except urllib.error.URLError as e:"
            ],
            "changed_files": [
                "dev-tools/scripts/reproduceJenkinsFailures.py"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8106": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "67d17644ff85bc4e9dde8d2659e7eac2db3d862d"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8106",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d56751488fbccc8e1a983fc0c7815879906766e7",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518492313,
            "hunks": 6,
            "message": "SOLR-11898: ConcurrentModificationException when calling org.apache.solr.core.SolrInfoBean.getMetricsSnapshot (cherry picked from commit b5bf3b9)",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/search/FastLRUCache.java b/solr/core/src/java/org/apache/solr/search/FastLRUCache.java",
                "index 1cf4443c912..b2e56a81f52 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/FastLRUCache.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/FastLRUCache.java",
                "@@ -27,3 +27,3 @@ import org.slf4j.LoggerFactory;",
                " import java.lang.invoke.MethodHandles;",
                "-import java.util.HashSet;",
                "+import java.util.concurrent.ConcurrentHashMap;",
                " import java.util.List;",
                "@@ -62,3 +62,3 @@ public class FastLRUCache<K, V> extends SolrCacheBase implements SolrCache<K,V>",
                "   private MetricsMap cacheMap;",
                "-  private Set<String> metricNames = new HashSet<>();",
                "+  private Set<String> metricNames = ConcurrentHashMap.newKeySet();",
                "   private MetricRegistry registry;",
                "diff --git a/solr/core/src/java/org/apache/solr/search/LFUCache.java b/solr/core/src/java/org/apache/solr/search/LFUCache.java",
                "index f502b03600b..7d41ae343ff 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/LFUCache.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/LFUCache.java",
                "@@ -19,3 +19,3 @@ package org.apache.solr.search;",
                " import java.lang.invoke.MethodHandles;",
                "-import java.util.HashSet;",
                "+import java.util.concurrent.ConcurrentHashMap;",
                " import java.util.List;",
                "@@ -67,3 +67,3 @@ public class LFUCache<K, V> implements SolrCache<K, V> {",
                "   private MetricsMap cacheMap;",
                "-  private Set<String> metricNames = new HashSet<>();",
                "+  private Set<String> metricNames = ConcurrentHashMap.newKeySet();",
                "   private MetricRegistry registry;",
                "diff --git a/solr/core/src/java/org/apache/solr/search/LRUCache.java b/solr/core/src/java/org/apache/solr/search/LRUCache.java",
                "index cbd3979155d..af05dadd7d4 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/LRUCache.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/LRUCache.java",
                "@@ -21,3 +21,3 @@ import java.util.Collection;",
                " import java.util.Collections;",
                "-import java.util.HashSet;",
                "+import java.util.concurrent.ConcurrentHashMap;",
                " import java.util.Iterator;",
                "@@ -89,3 +89,3 @@ public class LRUCache<K,V> extends SolrCacheBase implements SolrCache<K,V>, Acco",
                "   private MetricsMap cacheMap;",
                "-  private Set<String> metricNames = new HashSet<>();",
                "+  private Set<String> metricNames = ConcurrentHashMap.newKeySet();",
                "   private MetricRegistry registry;"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/search/FastLRUCache.java",
                "solr/core/src/java/org/apache/solr/search/LFUCache.java",
                "solr/core/src/java/org/apache/solr/search/LRUCache.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11898": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b5bf3b9c3844a739ef5b2f6317480b37dd0fe47b"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11898",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "84b6352057257463d19e67e1c8e544bd57d6b4db",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519819971,
            "hunks": 2,
            "message": "SOLR-11407: Wait for collections to recover before starting the test.",
            "diff": [
                "diff --git a/solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase.java b/solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase.java",
                "index 42c4577d972..b8bf1f4d857 100644",
                "--- a/solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase.java",
                "+++ b/solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase.java",
                "@@ -245,3 +245,3 @@ public class SolrCloudTestCase extends SolrTestCaseJ4 {",
                "    */",
                "-  protected DocCollection getCollectionState(String collectionName) {",
                "+  protected static DocCollection getCollectionState(String collectionName) {",
                "     return cluster.getSolrClient().getZkStateReader().getClusterState().getCollection(collectionName);",
                "@@ -258,3 +258,3 @@ public class SolrCloudTestCase extends SolrTestCaseJ4 {",
                "    */",
                "-  protected void waitForState(String message, String collection, CollectionStatePredicate predicate) {",
                "+  protected static void waitForState(String message, String collection, CollectionStatePredicate predicate) {",
                "     AtomicReference<DocCollection> state = new AtomicReference<>();"
            ],
            "changed_files": [
                "solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudTestCase.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11407": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "eb80ca968ed2f2cf843f833f694f392627bb90a8"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11407",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "09d740fec27eefe36fba3becf27872d6a1f2e22e",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518721287,
            "hunks": 0,
            "message": "SOLR-11893: Fix wrong field name in UI screenshot",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/images/solr-tutorial/tutorial-add-field.png b/solr/solr-ref-guide/src/images/solr-tutorial/tutorial-add-field.png",
                "index f048107e9e4..54ae84084c2 100644",
                "Binary files a/solr/solr-ref-guide/src/images/solr-tutorial/tutorial-add-field.png and b/solr/solr-ref-guide/src/images/solr-tutorial/tutorial-add-field.png differ"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/images/solr-tutorial/tutorial-add-field.png"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11893": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "36d8261c0228db5f8aaeeb02cf03969d243e68cb"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11893",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1bf718948696e69053bd5b7177b9ed32b5f57015",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519866226,
            "hunks": 7,
            "message": "LUCENE-8188: Fixed bugs in OpenNLPOpsFactory that were causing InputStreams fetched from the ResourceLoader to be leaked",
            "diff": [
                "diff --git a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/OpenNLPOpsFactory.java b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/OpenNLPOpsFactory.java",
                "index 5348857ab4a..84080af5b3d 100644",
                "--- a/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/OpenNLPOpsFactory.java",
                "+++ b/lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/OpenNLPOpsFactory.java",
                "@@ -61,3 +61,5 @@ public class OpenNLPOpsFactory {",
                "     if (model == null) {",
                "-      model = new SentenceModel(loader.openResource(modelName));",
                "+      try (InputStream resource = loader.openResource(modelName)) {",
                "+        model = new SentenceModel(resource);",
                "+      }",
                "       sentenceModels.put(modelName, model);",
                "@@ -79,3 +81,5 @@ public class OpenNLPOpsFactory {",
                "     if (model == null) {",
                "-      model = new TokenizerModel(loader.openResource(modelName));",
                "+      try (InputStream resource = loader.openResource(modelName)) {",
                "+        model = new TokenizerModel(resource);",
                "+      }",
                "       tokenizerModels.put(modelName, model);",
                "@@ -93,3 +97,5 @@ public class OpenNLPOpsFactory {",
                "     if (model == null) {",
                "-      model = new POSModel(loader.openResource(modelName));",
                "+      try (InputStream resource = loader.openResource(modelName)) {",
                "+        model = new POSModel(resource);",
                "+      }",
                "       posTaggerModels.put(modelName, model);",
                "@@ -107,3 +113,5 @@ public class OpenNLPOpsFactory {",
                "     if (model == null) {",
                "-      model = new ChunkerModel(loader.openResource(modelName));",
                "+      try (InputStream resource = loader.openResource(modelName)) {",
                "+        model = new ChunkerModel(resource);",
                "+      }",
                "       chunkerModels.put(modelName, model);",
                "@@ -121,3 +129,5 @@ public class OpenNLPOpsFactory {",
                "     if (model == null) {",
                "-      model = new TokenNameFinderModel(loader.openResource(modelName));",
                "+      try (InputStream resource = loader.openResource(modelName)) {",
                "+        model = new TokenNameFinderModel(resource);",
                "+      }",
                "       nerModels.put(modelName, model);",
                "@@ -141,14 +151,15 @@ public class OpenNLPOpsFactory {",
                "     if (dictionary == null) {",
                "-      Reader reader = new InputStreamReader(loader.openResource(dictionaryFile), StandardCharsets.UTF_8);",
                "-      StringBuilder builder = new StringBuilder();",
                "-      char[] chars = new char[8092];",
                "-      int numRead = 0;",
                "-      do {",
                "-        numRead = reader.read(chars, 0, chars.length);",
                "-        if (numRead > 0) {",
                "-          builder.append(chars, 0, numRead);",
                "-        }",
                "-      } while (numRead > 0);",
                "-      dictionary = builder.toString();",
                "-      lemmaDictionaries.put(dictionaryFile, dictionary);",
                "+      try (Reader reader = new InputStreamReader(loader.openResource(dictionaryFile), StandardCharsets.UTF_8)) {",
                "+        StringBuilder builder = new StringBuilder();",
                "+        char[] chars = new char[8092];",
                "+        int numRead = 0;",
                "+        do {",
                "+          numRead = reader.read(chars, 0, chars.length);",
                "+          if (numRead > 0) {",
                "+            builder.append(chars, 0, numRead);",
                "+          }",
                "+        } while (numRead > 0);",
                "+        dictionary = builder.toString();",
                "+        lemmaDictionaries.put(dictionaryFile, dictionary);",
                "+      }",
                "     }",
                "@@ -160,3 +171,5 @@ public class OpenNLPOpsFactory {",
                "     if (model == null) {",
                "-      model = new LemmatizerModel(loader.openResource(modelName));",
                "+      try (InputStream resource = loader.openResource(modelName)) {",
                "+        model = new LemmatizerModel(resource);",
                "+      }",
                "       lemmatizerModels.put(modelName, model);"
            ],
            "changed_files": [
                "lucene/analysis/opennlp/src/java/org/apache/lucene/analysis/opennlp/tools/OpenNLPOpsFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8188": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "6e79bc7d5c6b0fafe27ea732ece403dd3807d673"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8188",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fc51c1f2ef983ce4d8ba4894f822cc6f8fbc643d",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520003163,
            "hunks": 2,
            "message": "LUCENE-8126: fixed jar checksum",
            "diff": [
                "diff --git a/lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1 b/lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1",
                "index 2cfb3a8a6de..ef4e3eebb78 100644",
                "--- a/lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1",
                "+++ b/lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1",
                "@@ -1 +1 @@",
                "-f95b25589b40b5b0965deb592445073ff3efa299",
                "\\ No newline at end of file",
                "+f95b25589b40b5b0965deb592445073ff3efa299"
            ],
            "changed_files": [
                "lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8126": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "ca2131573de4c8d127ea80fdb2bd37e00c87bbcc"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8126",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8cc988687ed1949eee94a830d8f187891840be36",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520423556,
            "hunks": 3,
            "message": "SOLR-11066: Use timeZone.toZoneId instead of ZoneId.of(timeZoneString) because the latter cannot lookup short aliases (cherry picked from commit 498927d)",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "index 1aa7a0a44b2..6aeac2cf261 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "@@ -22,3 +22,2 @@ import java.text.ParseException;",
                " import java.time.Instant;",
                "-import java.time.ZoneId;",
                " import java.time.format.DateTimeFormatter;",
                "@@ -103,2 +102,3 @@ public class ScheduledTrigger extends TriggerBase {",
                "     }",
                "+    TimeZone timeZone = TimeZone.getTimeZone(timeZoneStr);",
                "     DateTimeFormatter dateTimeFormatter = new DateTimeFormatterBuilder()",
                "@@ -108,3 +108,3 @@ public class ScheduledTrigger extends TriggerBase {",
                "         .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)",
                "-        .toFormatter(Locale.ROOT).withZone(ZoneId.of(timeZoneStr));",
                "+        .toFormatter(Locale.ROOT).withZone(timeZone.toZoneId());",
                "     return Instant.from(dateTimeFormatter.parse(startTimeStr));"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11066": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "498927d0324374cfb37d97ae303154c84a07dad7"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11066",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9cec2221a66ee7c1571531c4ce1342f51288c38d",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520351825,
            "hunks": 10,
            "message": "SOLR-11066: Added examples of startTime in ref guide. Added null check for processor and code comments to explain skipped events and lastRunAt initialization. Moved default preferredOp value to ComputePlanAction. Extracted a constant.",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "index 9eb6382a6bb..aed821a7a78 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "@@ -211,3 +211,3 @@ public class ComputePlanAction extends TriggerActionBase {",
                "       case SCHEDULED:",
                "-        String preferredOp = (String) event.getProperty(AutoScalingParams.PREFERRED_OP);",
                "+        String preferredOp = (String) event.getProperty(AutoScalingParams.PREFERRED_OP, CollectionParams.CollectionAction.MOVEREPLICA.toLower());",
                "         CollectionParams.CollectionAction action = CollectionParams.CollectionAction.get(preferredOp);",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "index 9c8ee6dea0b..1aa7a0a44b2 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "@@ -35,3 +35,2 @@ import org.apache.solr.client.solrj.cloud.autoscaling.TriggerEventType;",
                " import org.apache.solr.common.SolrException;",
                "-import org.apache.solr.common.params.CollectionParams;",
                " import org.apache.solr.core.SolrResourceLoader;",
                "@@ -51,2 +50,3 @@ public class ScheduledTrigger extends TriggerBase {",
                "   private static final String DEFAULT_GRACE_DURATION = \"+15MINUTES\";",
                "+  private static final String LAST_RUN_AT = \"lastRunAt\";",
                "   static final String ACTUAL_EVENT_TIME = \"actualEventTime\";",
                "@@ -74,3 +74,3 @@ public class ScheduledTrigger extends TriggerBase {",
                "-    preferredOp = (String) properties.getOrDefault(PREFERRED_OP, CollectionParams.CollectionAction.MOVEREPLICA.toLower());",
                "+    preferredOp = (String) properties.get(PREFERRED_OP);",
                "@@ -81,2 +81,7 @@ public class ScheduledTrigger extends TriggerBase {",
                "+    // We set lastRunAt to be the startTime (which could be a date math expression such as 'NOW')",
                "+    // Ordinarily, NOW will always be evaluated in this constructor so it may seem that",
                "+    // the trigger will always fire the first time.",
                "+    // However, the lastRunAt is overwritten with the value from ZK",
                "+    // during restoreState() operation (which is performed before run()) so the trigger works correctly",
                "     this.lastRunAt = startTime;",
                "@@ -109,3 +114,3 @@ public class ScheduledTrigger extends TriggerBase {",
                "   protected Map<String, Object> getState() {",
                "-    return Collections.singletonMap(\"lastRunAt\", lastRunAt.toEpochMilli());",
                "+    return Collections.singletonMap(LAST_RUN_AT, lastRunAt.toEpochMilli());",
                "   }",
                "@@ -114,4 +119,4 @@ public class ScheduledTrigger extends TriggerBase {",
                "   protected void setState(Map<String, Object> state) {",
                "-    if (state.containsKey(\"lastRunAt\")) {",
                "-      this.lastRunAt = Instant.ofEpochMilli((Long) state.get(\"lastRunAt\"));",
                "+    if (state.containsKey(LAST_RUN_AT)) {",
                "+      this.lastRunAt = Instant.ofEpochMilli((Long) state.get(LAST_RUN_AT));",
                "     }",
                "@@ -165,4 +170,6 @@ public class ScheduledTrigger extends TriggerBase {",
                "       }",
                "-      if (processor.process(new ScheduledEvent(getEventType(), getName(), nextRunTime.toEpochMilli(),",
                "-          preferredOp, now.toEpochMilli(), true)))  {",
                "+      // Even though we are skipping the event, we need to notify any listeners of the IGNORED stage",
                "+      // so we create a dummy event with the ignored=true flag and ScheduledTriggers will do the rest",
                "+      if (processor != null && processor.process(new ScheduledEvent(getEventType(), getName(), nextRunTime.toEpochMilli(),",
                "+          preferredOp, now.toEpochMilli(), true))) {",
                "         lastRunAt = nextRunTime;",
                "@@ -193,3 +200,5 @@ public class ScheduledTrigger extends TriggerBase {",
                "       super(eventType, source, eventTime, null, ignored);",
                "-      properties.put(PREFERRED_OP, preferredOp);",
                "+      if (preferredOp != null)  {",
                "+        properties.put(PREFERRED_OP, preferredOp);",
                "+      }",
                "       properties.put(ACTUAL_EVENT_TIME, actualEventTime);",
                "diff --git a/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc b/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "index ec09a79b95c..08e00852f30 100644",
                "--- a/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "+++ b/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "@@ -161,3 +161,6 @@ The trigger supports the following configuration:",
                "-* `startTime` - (string, required) the start date/time of the schedule. This should either be an ISO-8601 date time string (the same standard used during search and indexing in Solr, thus defaulting to UTC) or be specified with the `timeZone` parameter.",
                "+* `startTime` - (string, required) the start date/time of the schedule. This should either be a DateMath string e.g. 'NOW' or be an ISO-8601 date time string (the same standard used during search and indexing in Solr, thus defaulting to UTC) or be specified without the trailing 'Z' accompanied with the `timeZone` parameter. For example, each of the following values are acceptable:",
                "+  ** `2018-01-31T15:30:00Z` - ISO-8601 date time string. The trailing `Z` signals that the time is in UTC",
                "+  ** `NOW+5MINUTES` - Solr's date math string",
                "+  ** `2018-01-31T15:30:00` - No trailing 'Z' signals that the `timeZone` parameter must be specified to avoid ambiguity",
                " * `every` - (string, required) a positive Solr date math string which is added to the `startTime` or the last run time to arrive at the next scheduled time"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11066": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "29060a7b5215c85fee40077c547f6083dd970f0a"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11066",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "94b7f7dcb2cf35ea4cac7bd142421f4e0ca739fa",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519625606,
            "hunks": 53,
            "message": "SOLR-10809: Get precommit lint warnings out of Solr core (cherry picked from commit 6164643)",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/core/BlobRepository.java b/solr/core/src/java/org/apache/solr/core/BlobRepository.java",
                "index e4d5e049551..48dd70a870d 100644",
                "--- a/solr/core/src/java/org/apache/solr/core/BlobRepository.java",
                "+++ b/solr/core/src/java/org/apache/solr/core/BlobRepository.java",
                "@@ -166,3 +166,5 @@ public class BlobRepository {",
                "       }",
                "-      b = SimplePostTool.inputStreamToByteArray(entity.getEntity().getContent());",
                "+      try (InputStream is = entity.getEntity().getContent()) {",
                "+        b = SimplePostTool.inputStreamToByteArray(is);",
                "+      }",
                "     } catch (Exception e) {",
                "diff --git a/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "index 38f1ad2758b..567f32b66ce 100644",
                "--- a/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "+++ b/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "@@ -1020,2 +1020,3 @@ public class CoreContainer {",
                "    */",
                "+  @SuppressWarnings(\"resource\")",
                "   private SolrCore createFromDescriptor(CoreDescriptor dcore, boolean publishState, boolean newCollection) {",
                "diff --git a/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java b/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java",
                "index 761745bab97..493868909bc 100644",
                "--- a/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java",
                "+++ b/solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java",
                "@@ -191,2 +191,3 @@ public class HdfsDirectoryFactory extends CachingDirectoryFactory implements Sol",
                "   @Override",
                "+  @SuppressWarnings(\"resource\")",
                "   protected Directory create(String path, LockFactory lockFactory, DirContext dirContext) throws IOException {",
                "@@ -205,2 +206,3 @@ public class HdfsDirectoryFactory extends CachingDirectoryFactory implements Sol",
                "     final HdfsDirectory hdfsDir;",
                "+",
                "     final Directory dir;",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java b/solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java",
                "index 579e5ef668c..54fdf997fb1 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java",
                "@@ -119,5 +119,8 @@ public abstract class AnalysisRequestHandlerBase extends RequestHandlerBase {",
                "       for(CharFilterFactory cfiltfac : cfiltfacs ){",
                "-        Reader reader = new StringReader(source);",
                "-        reader = cfiltfac.create(reader);",
                "-        source = writeCharStream(namedList, reader);",
                "+        try (Reader sreader = new StringReader(source);",
                "+             Reader reader = cfiltfac.create(sreader)) {",
                "+          source = writeCharStream(namedList, reader);",
                "+        } catch (IOException e) {",
                "+          // do nothing.",
                "+        }",
                "       }",
                "@@ -141,2 +144,7 @@ public abstract class AnalysisRequestHandlerBase extends RequestHandlerBase {",
                "       namedList.add(tokenStream.getClass().getName(), convertTokensToNamedLists(tokens, context));",
                "+      try {",
                "+        listBasedTokenStream.close();",
                "+      } catch (IOException e) {",
                "+        // do nothing;",
                "+      }",
                "       listBasedTokenStream = new ListBasedTokenStream(listBasedTokenStream, tokens);",
                "@@ -144,2 +152,7 @@ public abstract class AnalysisRequestHandlerBase extends RequestHandlerBase {",
                "+    try {",
                "+      listBasedTokenStream.close();",
                "+    } catch (IOException e) {",
                "+      // do nothing.",
                "+    }",
                "     return namedList;",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/BlobHandler.java b/solr/core/src/java/org/apache/solr/handler/BlobHandler.java",
                "index e3097fc8c58..30301c0a46e 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/BlobHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/BlobHandler.java",
                "@@ -19,2 +19,3 @@ package org.apache.solr.handler;",
                " import java.io.IOException;",
                "+import java.io.InputStream;",
                " import java.io.OutputStream;",
                "@@ -109,3 +110,6 @@ public class BlobHandler extends RequestHandlerBase implements PluginInfoInitial",
                "       for (ContentStream stream : req.getContentStreams()) {",
                "-        ByteBuffer payload = SimplePostTool.inputStreamToByteArray(stream.getStream(), maxSize);",
                "+        ByteBuffer payload;",
                "+        try (InputStream is = stream.getStream()) {",
                "+          payload = SimplePostTool.inputStreamToByteArray(is, maxSize);",
                "+        }",
                "         MessageDigest m = MessageDigest.getInstance(\"MD5\");",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java b/solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java",
                "index 010155964fe..43ec5734bad 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java",
                "@@ -1175,3 +1175,3 @@ public class ReplicationHandler extends RequestHandlerBase implements SolrCoreAw",
                "   @Override",
                "-  @SuppressWarnings(\"unchecked\")",
                "+  @SuppressWarnings({\"unchecked\", \"resource\"})",
                "   public void inform(SolrCore core) {",
                "@@ -1258,3 +1258,3 @@ public class ReplicationHandler extends RequestHandlerBase implements SolrCoreAw",
                "         try {",
                "-          DirectoryReader reader = s==null ? null : s.get().getIndexReader();",
                "+          DirectoryReader reader = (s == null) ? null : s.get().getIndexReader();",
                "           if (reader!=null && reader.getIndexCommit() != null && reader.getIndexCommit().getGeneration() != 1L) {",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/sql/SolrTable.java b/solr/core/src/java/org/apache/solr/handler/sql/SolrTable.java",
                "index c0b35cfd10d..46b09d21943 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/sql/SolrTable.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/sql/SolrTable.java",
                "@@ -516,3 +516,4 @@ class SolrTable extends AbstractQueryableTable implements TranslatableTable {",
                "       StreamComparator comp = bucketSortComp(buckets, sortDirection);",
                "-      ParallelStream parallelStream = new ParallelStream(zk, collection, tupleStream, numWorkers, comp);",
                "+      @SuppressWarnings(\"resource\")",
                "+      final ParallelStream parallelStream = new ParallelStream(zk, collection, tupleStream, numWorkers, comp);",
                "@@ -742,3 +743,4 @@ class SolrTable extends AbstractQueryableTable implements TranslatableTable {",
                "       // Maintain the sort of the Tuples coming from the workers.",
                "-      ParallelStream parallelStream = new ParallelStream(zkHost, collection, tupleStream, numWorkers, comp);",
                "+      @SuppressWarnings(\"resource\")",
                "+      final ParallelStream parallelStream = new ParallelStream(zkHost, collection, tupleStream, numWorkers, comp);",
                "diff --git a/solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java b/solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java",
                "index 1029c7dd7e3..b8fbb255b58 100644",
                "--- a/solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java",
                "+++ b/solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java",
                "@@ -575,77 +575,73 @@ public class DefaultSolrHighlighter extends SolrHighlighter implements PluginInf",
                "     //  We need to wrap in OffsetWindowTokenFilter if multi-valued",
                "-    final OffsetWindowTokenFilter tvWindowStream;",
                "-    if (tvStream != null && fieldValues.size() > 1) {",
                "-      tvWindowStream = new OffsetWindowTokenFilter(tvStream);",
                "-    } else {",
                "-      tvWindowStream = null;",
                "-    }",
                "+    try (OffsetWindowTokenFilter tvWindowStream = (tvStream != null && fieldValues.size() > 1) ? new OffsetWindowTokenFilter(tvStream) : null) {",
                "-    for (String thisText : fieldValues) {",
                "-      if (mvToMatch <= 0 || maxCharsToAnalyze <= 0) {",
                "-        break;",
                "-      }",
                "+      for (String thisText : fieldValues) {",
                "+        if (mvToMatch <= 0 || maxCharsToAnalyze <= 0) {",
                "+          break;",
                "+        }",
                "-      TokenStream tstream;",
                "-      if (tvWindowStream != null) {",
                "-        // if we have a multi-valued field with term vectors, then get the next offset window",
                "-        tstream = tvWindowStream.advanceToNextWindowOfLength(thisText.length());",
                "-      } else if (tvStream != null) {",
                "-        tstream = tvStream; // single-valued with term vectors",
                "-      } else {",
                "-        // fall back to analyzer",
                "-        tstream = createAnalyzerTStream(schemaField, thisText);",
                "-      }",
                "+        TokenStream tstream;",
                "+        if (tvWindowStream != null) {",
                "+          // if we have a multi-valued field with term vectors, then get the next offset window",
                "+          tstream = tvWindowStream.advanceToNextWindowOfLength(thisText.length());",
                "+        } else if (tvStream != null) {",
                "+          tstream = tvStream; // single-valued with term vectors",
                "+        } else {",
                "+          // fall back to analyzer",
                "+          tstream = createAnalyzerTStream(schemaField, thisText);",
                "+        }",
                "-      Highlighter highlighter;",
                "-      if (params.getFieldBool(fieldName, HighlightParams.USE_PHRASE_HIGHLIGHTER, true)) {",
                "-        // We're going to call getPhraseHighlighter and it might consume the tokenStream. If it does, the tokenStream",
                "-        // needs to implement reset() efficiently.",
                "-",
                "-        //If the tokenStream is right from the term vectors, then CachingTokenFilter is unnecessary.",
                "-        //  It should be okay if OffsetLimit won't get applied in this case.",
                "-        final TokenStream tempTokenStream;",
                "-        if (tstream != tvStream) {",
                "-          if (maxCharsToAnalyze >= thisText.length()) {",
                "-            tempTokenStream = new CachingTokenFilter(tstream);",
                "+        Highlighter highlighter;",
                "+        if (params.getFieldBool(fieldName, HighlightParams.USE_PHRASE_HIGHLIGHTER, true)) {",
                "+          // We're going to call getPhraseHighlighter and it might consume the tokenStream. If it does, the tokenStream",
                "+          // needs to implement reset() efficiently.",
                "+",
                "+          //If the tokenStream is right from the term vectors, then CachingTokenFilter is unnecessary.",
                "+          //  It should be okay if OffsetLimit won't get applied in this case.",
                "+          final TokenStream tempTokenStream;",
                "+          if (tstream != tvStream) {",
                "+            if (maxCharsToAnalyze >= thisText.length()) {",
                "+              tempTokenStream = new CachingTokenFilter(tstream);",
                "+            } else {",
                "+              tempTokenStream = new CachingTokenFilter(new OffsetLimitTokenFilter(tstream, maxCharsToAnalyze));",
                "+            }",
                "           } else {",
                "-            tempTokenStream = new CachingTokenFilter(new OffsetLimitTokenFilter(tstream, maxCharsToAnalyze));",
                "+            tempTokenStream = tstream;",
                "           }",
                "-        } else {",
                "-          tempTokenStream = tstream;",
                "-        }",
                "-        // get highlighter",
                "-        highlighter = getPhraseHighlighter(query, fieldName, req, tempTokenStream);",
                "+          // get highlighter",
                "+          highlighter = getPhraseHighlighter(query, fieldName, req, tempTokenStream);",
                "-        // if the CachingTokenFilter was consumed then use it going forward.",
                "-        if (tempTokenStream instanceof CachingTokenFilter && ((CachingTokenFilter) tempTokenStream).isCached()) {",
                "-          tstream = tempTokenStream;",
                "+          // if the CachingTokenFilter was consumed then use it going forward.",
                "+          if (tempTokenStream instanceof CachingTokenFilter && ((CachingTokenFilter) tempTokenStream).isCached()) {",
                "+            tstream = tempTokenStream;",
                "+          }",
                "+          //tstream.reset(); not needed; getBestTextFragments will reset it.",
                "+        } else {",
                "+          // use \"the old way\"",
                "+          highlighter = getHighlighter(query, fieldName, req);",
                "         }",
                "-        //tstream.reset(); not needed; getBestTextFragments will reset it.",
                "-      } else {",
                "-        // use \"the old way\"",
                "-        highlighter = getHighlighter(query, fieldName, req);",
                "-      }",
                "-      highlighter.setMaxDocCharsToAnalyze(maxCharsToAnalyze);",
                "-      maxCharsToAnalyze -= thisText.length();",
                "-",
                "-      // Highlight!",
                "-      try {",
                "-        TextFragment[] bestTextFragments =",
                "-            highlighter.getBestTextFragments(tstream, thisText, mergeContiguousFragments, numFragments);",
                "-        for (TextFragment bestTextFragment : bestTextFragments) {",
                "-          if (bestTextFragment == null)//can happen via mergeContiguousFragments",
                "-            continue;",
                "-          // normally we want a score (must be highlighted), but if preserveMulti then we return a snippet regardless.",
                "-          if (bestTextFragment.getScore() > 0 || preserveMulti) {",
                "-            frags.add(bestTextFragment);",
                "-            if (bestTextFragment.getScore() > 0)",
                "-              --mvToMatch; // note: limits fragments (for multi-valued fields), not quite the number of values",
                "+        highlighter.setMaxDocCharsToAnalyze(maxCharsToAnalyze);",
                "+        maxCharsToAnalyze -= thisText.length();",
                "+",
                "+        // Highlight!",
                "+        try {",
                "+          TextFragment[] bestTextFragments =",
                "+              highlighter.getBestTextFragments(tstream, thisText, mergeContiguousFragments, numFragments);",
                "+          for (TextFragment bestTextFragment : bestTextFragments) {",
                "+            if (bestTextFragment == null)//can happen via mergeContiguousFragments",
                "+              continue;",
                "+            // normally we want a score (must be highlighted), but if preserveMulti then we return a snippet regardless.",
                "+            if (bestTextFragment.getScore() > 0 || preserveMulti) {",
                "+              frags.add(bestTextFragment);",
                "+              if (bestTextFragment.getScore() > 0)",
                "+                --mvToMatch; // note: limits fragments (for multi-valued fields), not quite the number of values",
                "+            }",
                "           }",
                "+        } catch (InvalidTokenOffsetsException e) {",
                "+          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);",
                "         }",
                "-      } catch (InvalidTokenOffsetsException e) {",
                "-        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);",
                "-      }",
                "-    }//end field value loop",
                "+      }//end field value loop",
                "+    }",
                "diff --git a/solr/core/src/java/org/apache/solr/response/SmileResponseWriter.java b/solr/core/src/java/org/apache/solr/response/SmileResponseWriter.java",
                "index 663b72a89fb..0bd0658d674 100644",
                "--- a/solr/core/src/java/org/apache/solr/response/SmileResponseWriter.java",
                "+++ b/solr/core/src/java/org/apache/solr/response/SmileResponseWriter.java",
                "@@ -32,3 +32,5 @@ public class SmileResponseWriter extends BinaryResponseWriter {",
                "   public void write(OutputStream out, SolrQueryRequest request, SolrQueryResponse response) throws IOException {",
                "-    new SmileWriter(out, request, response).writeResponse();",
                "+    try (SmileWriter sw = new SmileWriter(out, request, response)) {",
                "+      sw.writeResponse();",
                "+    }",
                "   }",
                "diff --git a/solr/core/src/java/org/apache/solr/schema/OpenExchangeRatesOrgProvider.java b/solr/core/src/java/org/apache/solr/schema/OpenExchangeRatesOrgProvider.java",
                "index 2b6cbf6b417..08e8d1378c5 100644",
                "--- a/solr/core/src/java/org/apache/solr/schema/OpenExchangeRatesOrgProvider.java",
                "+++ b/solr/core/src/java/org/apache/solr/schema/OpenExchangeRatesOrgProvider.java",
                "@@ -138,2 +138,3 @@ public class OpenExchangeRatesOrgProvider implements ExchangeRateProvider {",
                "   @Override",
                "+  @SuppressWarnings(\"resource\")",
                "   public boolean reload() throws SolrException {",
                "@@ -153,6 +154,8 @@ public class OpenExchangeRatesOrgProvider implements ExchangeRateProvider {",
                "     } finally {",
                "-      if (ratesJsonStream != null) try {",
                "-        ratesJsonStream.close();",
                "-      } catch (IOException e) {",
                "-        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error closing stream\", e);",
                "+      if (ratesJsonStream != null) {",
                "+        try {",
                "+          ratesJsonStream.close();",
                "+        } catch (IOException e) {",
                "+          throw new SolrException(ErrorCode.SERVER_ERROR, \"Error closing stream\", e);",
                "+        }",
                "       }",
                "diff --git a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "index ed7b3362e8c..559ee8b274a 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "@@ -1270,3 +1270,5 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "           mapping.put(collapseField, UninvertingReader.Type.SORTED);",
                "-          UninvertingReader uninvertingReader = new UninvertingReader(new ReaderWrapper(searcher.getSlowAtomicReader(), collapseField), mapping);",
                "+          @SuppressWarnings(\"resource\") final UninvertingReader uninvertingReader =",
                "+              new UninvertingReader(new ReaderWrapper(searcher.getSlowAtomicReader(), collapseField), mapping);",
                "+",
                "           docValuesProducer = new EmptyDocValuesProducer() {",
                "diff --git a/solr/core/src/java/org/apache/solr/search/DocSet.java b/solr/core/src/java/org/apache/solr/search/DocSet.java",
                "index 172cce79348..cd08ce9babd 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/DocSet.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/DocSet.java",
                "@@ -18,4 +18,2 @@ package org.apache.solr.search;",
                "-import java.io.Closeable;",
                "-",
                " import org.apache.lucene.util.Accountable;",
                "@@ -33,3 +31,3 @@ import org.apache.solr.common.SolrException;",
                "  */",
                "-public interface DocSet extends Closeable, Accountable, Cloneable /* extends Collection<Integer> */ {",
                "+public interface DocSet extends Accountable, Cloneable /* extends Collection<Integer> */ {",
                "diff --git a/solr/core/src/java/org/apache/solr/search/DocSetBase.java b/solr/core/src/java/org/apache/solr/search/DocSetBase.java",
                "index 465c20856d6..90a3aad3e13 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/DocSetBase.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/DocSetBase.java",
                "@@ -18,3 +18,2 @@ package org.apache.solr.search;",
                "-import java.io.IOException;",
                " import java.util.Objects;",
                "@@ -266,7 +265,2 @@ abstract class DocSetBase implements DocSet {",
                "-",
                "-  /** FUTURE: for off-heap */",
                "-  @Override",
                "-  public void close() throws IOException {",
                "-  }",
                " }",
                "diff --git a/solr/core/src/java/org/apache/solr/search/facet/UnInvertedField.java b/solr/core/src/java/org/apache/solr/search/facet/UnInvertedField.java",
                "index c9f3b0b78d7..9c395b7ec66 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/facet/UnInvertedField.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/facet/UnInvertedField.java",
                "@@ -428,9 +428,7 @@ public class UnInvertedField extends DocTermOrds {",
                "         // handle the biggest terms",
                "-        try ( DocSet intersection = searcher.getDocSet(tt.termQuery, docs); )",
                "-        {",
                "-          int collected = processor.collectFirstPhase(intersection, tt.termNum - startTermIndex);",
                "-          countAcc.incrementCount(tt.termNum - startTermIndex, collected);",
                "-          if (collected > 0) {",
                "-            uniqueTerms++;",
                "-          }",
                "+        DocSet intersection = searcher.getDocSet(tt.termQuery, docs);",
                "+        int collected = processor.collectFirstPhase(intersection, tt.termNum - startTermIndex);",
                "+        countAcc.incrementCount(tt.termNum - startTermIndex, collected);",
                "+        if (collected > 0) {",
                "+          uniqueTerms++;",
                "         }",
                "diff --git a/solr/core/src/java/org/apache/solr/search/function/OrdFieldSource.java b/solr/core/src/java/org/apache/solr/search/function/OrdFieldSource.java",
                "index 7cd81426c11..96819956e29 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/function/OrdFieldSource.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/function/OrdFieldSource.java",
                "@@ -78,3 +78,3 @@ public class OrdFieldSource extends ValueSource {",
                "     if (o instanceof SolrIndexSearcher) {",
                "-      SolrIndexSearcher is = (SolrIndexSearcher) o;",
                "+      @SuppressWarnings(\"resource\") final SolrIndexSearcher is = (SolrIndexSearcher) o;",
                "       SchemaField sf = is.getSchema().getFieldOrNull(field);",
                "diff --git a/solr/core/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java b/solr/core/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java",
                "index 0ada4d5aba1..d75dca3772c 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java",
                "@@ -78,3 +78,3 @@ public class ReverseOrdFieldSource extends ValueSource {",
                "     if (o instanceof SolrIndexSearcher) {",
                "-      SolrIndexSearcher is = (SolrIndexSearcher) o;",
                "+      @SuppressWarnings(\"resource\")  final SolrIndexSearcher is = (SolrIndexSearcher) o;",
                "       SchemaField sf = is.getSchema().getFieldOrNull(field);",
                "diff --git a/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java b/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java",
                "index 4d944d239ba..edf616e54d7 100644",
                "--- a/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java",
                "+++ b/solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java",
                "@@ -272,25 +272,29 @@ public class SolrDispatchFilter extends BaseSolrFilter {",
                "   public static NodeConfig loadNodeConfig(Path solrHome, Properties nodeProperties) {",
                "+    NodeConfig cfg = null;",
                "+    try (SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties)) {",
                "+      if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {",
                "+        log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +",
                "+            \"Will automatically load solr.xml from ZooKeeper if it exists\");",
                "+      }",
                "-    SolrResourceLoader loader = new SolrResourceLoader(solrHome, SolrDispatchFilter.class.getClassLoader(), nodeProperties);",
                "-    if (!StringUtils.isEmpty(System.getProperty(\"solr.solrxml.location\"))) {",
                "-      log.warn(\"Solr property solr.solrxml.location is no longer supported. \" +",
                "-               \"Will automatically load solr.xml from ZooKeeper if it exists\");",
                "-    }",
                "-",
                "-    String zkHost = System.getProperty(\"zkHost\");",
                "-    if (!StringUtils.isEmpty(zkHost)) {",
                "-      int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);",
                "-      startUpZkTimeOut *= 1000;",
                "-      try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {",
                "-        if (zkClient.exists(\"/solr.xml\", true)) {",
                "-          log.info(\"solr.xml found in ZooKeeper. Loading...\");",
                "-          byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);",
                "-          return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));",
                "+      String zkHost = System.getProperty(\"zkHost\");",
                "+      if (!StringUtils.isEmpty(zkHost)) {",
                "+        int startUpZkTimeOut = Integer.getInteger(\"waitForZk\", 30);",
                "+        startUpZkTimeOut *= 1000;",
                "+        try (SolrZkClient zkClient = new SolrZkClient(zkHost, startUpZkTimeOut)) {",
                "+          if (zkClient.exists(\"/solr.xml\", true)) {",
                "+            log.info(\"solr.xml found in ZooKeeper. Loading...\");",
                "+            byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);",
                "+            return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));",
                "+          }",
                "+        } catch (Exception e) {",
                "+          throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);",
                "         }",
                "-      } catch (Exception e) {",
                "-        throw new SolrException(ErrorCode.SERVER_ERROR, \"Error occurred while loading solr.xml from zookeeper\", e);",
                "+        log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");",
                "       }",
                "-      log.info(\"Loading solr.xml from SolrHome (not found in ZooKeeper)\");",
                "+      cfg = SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());",
                "+    } catch (IOException e) {",
                "+      // do nothing.",
                "     }",
                "-    return SolrXmlConfig.fromSolrHome(loader, loader.getInstancePath());",
                "+    return cfg;",
                "   }",
                "diff --git a/solr/core/src/java/org/apache/solr/update/CdcrTransactionLog.java b/solr/core/src/java/org/apache/solr/update/CdcrTransactionLog.java",
                "index f959e14dc17..3534f622908 100644",
                "--- a/solr/core/src/java/org/apache/solr/update/CdcrTransactionLog.java",
                "+++ b/solr/core/src/java/org/apache/solr/update/CdcrTransactionLog.java",
                "@@ -99,5 +99,5 @@ public class CdcrTransactionLog extends TransactionLog {",
                "         if (pos < 0) return 0;",
                "-",
                "-        ChannelFastInputStream is = new ChannelFastInputStream(channel, pos);",
                "-        return is.readInt();",
                "+        try (ChannelFastInputStream is = new ChannelFastInputStream(channel, pos)) {",
                "+          return is.readInt();",
                "+        }",
                "       }",
                "diff --git a/solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java b/solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java",
                "index c478935d1ec..0f89016a107 100644",
                "--- a/solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java",
                "+++ b/solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java",
                "@@ -190,4 +190,5 @@ public class HdfsTransactionLog extends TransactionLog {",
                "     try {",
                "-      LogCodec codec = new LogCodec(resolver);",
                "-      header = (Map) codec.unmarshal(fis);",
                "+      try (LogCodec codec = new LogCodec(resolver)) {",
                "+        header = (Map) codec.unmarshal(fis);",
                "+      }",
                "@@ -260,4 +261,5 @@ public class HdfsTransactionLog extends TransactionLog {",
                "         dis.seek(pos);",
                "-        LogCodec codec = new LogCodec(resolver);",
                "-        return codec.readVal(new FastInputStream(dis));",
                "+        try (LogCodec codec = new LogCodec(resolver)) {",
                "+          return codec.readVal(new FastInputStream(dis));",
                "+        }",
                "       } finally {",
                "diff --git a/solr/core/src/java/org/apache/solr/update/TransactionLog.java b/solr/core/src/java/org/apache/solr/update/TransactionLog.java",
                "index 7daf44fda08..35d722b734f 100644",
                "--- a/solr/core/src/java/org/apache/solr/update/TransactionLog.java",
                "+++ b/solr/core/src/java/org/apache/solr/update/TransactionLog.java",
                "@@ -227,3 +227,3 @@ public class TransactionLog implements Closeable {",
                "     if (pos < 0) return false;",
                "-    ChannelFastInputStream is = new ChannelFastInputStream(channel, pos);",
                "+    @SuppressWarnings(\"resource\") final ChannelFastInputStream is = new ChannelFastInputStream(channel, pos);",
                "     is.read(buf);",
                "@@ -259,3 +259,3 @@ public class TransactionLog implements Closeable {",
                "   public long writeData(Object o) {",
                "-    LogCodec codec = new LogCodec(resolver);",
                "+    @SuppressWarnings(\"resource\") final LogCodec codec = new LogCodec(resolver);",
                "     try {",
                "@@ -274,3 +274,3 @@ public class TransactionLog implements Closeable {",
                "     fis = fis != null ? fis : new ChannelFastInputStream(channel, 0);",
                "-    LogCodec codec = new LogCodec(resolver);",
                "+    @SuppressWarnings(\"resource\") final LogCodec codec = new LogCodec(resolver);",
                "     Map header = (Map)codec.unmarshal(fis);",
                "@@ -509,2 +509,3 @@ public class TransactionLog implements Closeable {",
                "   /* This method is thread safe */",
                "+",
                "   public Object lookup(long pos) {",
                "@@ -528,4 +529,5 @@ public class TransactionLog implements Closeable {",
                "       ChannelFastInputStream fis = new ChannelFastInputStream(channel, pos);",
                "-      LogCodec codec = new LogCodec(resolver);",
                "-      return codec.readVal(fis);",
                "+      try (LogCodec codec = new LogCodec(resolver)) {",
                "+        return codec.readVal(fis);",
                "+      }",
                "     } catch (IOException e) {",
                "diff --git a/solr/core/src/java/org/apache/solr/util/SimplePostTool.java b/solr/core/src/java/org/apache/solr/util/SimplePostTool.java",
                "index 327361e104c..a1d71a5191b 100644",
                "--- a/solr/core/src/java/org/apache/solr/util/SimplePostTool.java",
                "+++ b/solr/core/src/java/org/apache/solr/util/SimplePostTool.java",
                "@@ -654,13 +654,13 @@ public class SimplePostTool {",
                "   public static ByteBuffer inputStreamToByteArray(InputStream is, long maxSize) throws IOException {",
                "-    BAOS bos =  new BAOS();",
                "-    long sz = 0;",
                "-    int next = is.read();",
                "-    while (next > -1) {",
                "-      if(++sz > maxSize) throw new BufferOverflowException();",
                "-      bos.write(next);",
                "-      next = is.read();",
                "+    try (BAOS bos = new BAOS()) {",
                "+      long sz = 0;",
                "+      int next = is.read();",
                "+      while (next > -1) {",
                "+        if (++sz > maxSize) throw new BufferOverflowException();",
                "+        bos.write(next);",
                "+        next = is.read();",
                "+      }",
                "+      bos.flush();",
                "+      return bos.getByteBuffer();",
                "     }",
                "-    bos.flush();",
                "-    is.close();",
                "-    return bos.getByteBuffer();",
                "   }",
                "diff --git a/solr/core/src/java/org/apache/solr/util/SolrLogLayout.java b/solr/core/src/java/org/apache/solr/util/SolrLogLayout.java",
                "index a60ada828ba..735cde23855 100644",
                "--- a/solr/core/src/java/org/apache/solr/util/SolrLogLayout.java",
                "+++ b/solr/core/src/java/org/apache/solr/util/SolrLogLayout.java",
                "@@ -148,4 +148,7 @@ public class SolrLogLayout extends Layout {",
                "     SolrRequestInfo requestInfo = SolrRequestInfo.getRequestInfo();",
                "-    SolrQueryRequest req = requestInfo == null ? null : requestInfo.getReq();",
                "-    SolrCore core = req == null ? null : req.getCore();",
                "+",
                "+    SolrCore core;",
                "+    try (SolrQueryRequest req = (requestInfo == null) ? null : requestInfo.getReq()) {",
                "+      core = (req == null) ? null : req.getCore();",
                "+    }",
                "     ZkController zkController = null;",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DaemonStream.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DaemonStream.java",
                "index 0bd44563e56..a4f528bacbf 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DaemonStream.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DaemonStream.java",
                "@@ -225,3 +225,5 @@ public class DaemonStream extends TupleStream implements Expressible {",
                "     }",
                "-    streamRunner.setShutdown(true);",
                "+    if (streamRunner != null) {",
                "+      streamRunner.setShutdown(true);",
                "+    }",
                "     this.closed = true;",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java",
                "index 0f98e356e16..29e485b696e 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java",
                "@@ -350,3 +350,5 @@ public class FacetStream extends TupleStream implements Expressible  {",
                "     if(cache == null) {",
                "-      cloudSolrClient.close();",
                "+      if (cloudSolrClient != null) {",
                "+        cloudSolrClient.close();",
                "+      }",
                "     }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream.java",
                "index 75d2d34d326..b6ad2767174 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream.java",
                "@@ -307,3 +307,3 @@ public class FeaturesSelectionStream extends TupleStream implements Expressible{",
                "   public void close() throws IOException {",
                "-    if (isCloseCache) {",
                "+    if (isCloseCache && cache != null) {",
                "       cache.close();",
                "@@ -311,3 +311,5 @@ public class FeaturesSelectionStream extends TupleStream implements Expressible{",
                "-    executorService.shutdown();",
                "+    if (executorService != null) {",
                "+      executorService.shutdown();",
                "+    }",
                "   }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream.java",
                "index 879c708d5bd..f56431c1be9 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream.java",
                "@@ -393,3 +393,3 @@ public class TextLogitStream extends TupleStream implements Expressible {",
                "   public void close() throws IOException {",
                "-    if (isCloseCache) {",
                "+    if (isCloseCache && cache != null) {",
                "       cache.close();",
                "@@ -397,3 +397,5 @@ public class TextLogitStream extends TupleStream implements Expressible {",
                "-    executorService.shutdown();",
                "+    if (executorService != null) {",
                "+      executorService.shutdown();",
                "+    }",
                "     termsStream.close();",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream.java",
                "index b7a1edd0c69..4bb62235997 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream.java",
                "@@ -357,3 +357,3 @@ public class TopicStream extends CloudSolrStream implements Expressible  {",
                "-      if (streamContext.getSolrClientCache() == null) {",
                "+      if (streamContext != null && streamContext.getSolrClientCache() == null) {",
                "         cloudSolrClient.close();",
                "@@ -457,2 +457,5 @@ public class TopicStream extends CloudSolrStream implements Expressible  {",
                "+    if (cloudSolrClient == null) {",
                "+      return;",
                "+    }",
                "     UpdateRequest request = new UpdateRequest();"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/core/BlobRepository.java",
                "solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory.java",
                "solr/core/src/java/org/apache/solr/handler/AnalysisRequestHandlerBase.java",
                "solr/core/src/java/org/apache/solr/handler/BlobHandler.java",
                "solr/core/src/java/org/apache/solr/handler/ReplicationHandler.java",
                "solr/core/src/java/org/apache/solr/handler/sql/SolrTable.java",
                "solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter.java",
                "solr/core/src/java/org/apache/solr/response/SmileResponseWriter.java",
                "solr/core/src/java/org/apache/solr/schema/OpenExchangeRatesOrgProvider.java",
                "solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "solr/core/src/java/org/apache/solr/search/DocSet.java",
                "solr/core/src/java/org/apache/solr/search/DocSetBase.java",
                "solr/core/src/java/org/apache/solr/search/facet/UnInvertedField.java",
                "solr/core/src/java/org/apache/solr/search/function/OrdFieldSource.java",
                "solr/core/src/java/org/apache/solr/search/function/ReverseOrdFieldSource.java",
                "solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter.java",
                "solr/core/src/java/org/apache/solr/update/CdcrTransactionLog.java",
                "solr/core/src/java/org/apache/solr/update/HdfsTransactionLog.java",
                "solr/core/src/java/org/apache/solr/update/TransactionLog.java",
                "solr/core/src/java/org/apache/solr/util/SimplePostTool.java",
                "solr/core/src/java/org/apache/solr/util/SolrLogLayout.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/DaemonStream.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FeaturesSelectionStream.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-10809": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "6164643882f6f2bf371e53376cc9f0a2a184b150"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-10809",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "34354e90fec05a774fd99d27345a46f665f2f37c",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518559218,
            "hunks": 3,
            "message": "LUCENE-8173: Tighten the envelope so Gram-Schmidt gets a tighter answer.  Less likely to blow up later.",
            "diff": [
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "index 62b3f5ed4a1..1e6e27fbf36 100755",
                "--- a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "@@ -50,2 +50,8 @@ public class Vector {",
                "+  /**",
                "+    * Gram-Schmidt convergence envelope is a bit smaller than we really need because we don't want the math to fail afterwards in",
                "+    * other places.",
                "+    */",
                "+  private static final double MINIMUM_GRAM_SCHMIDT_ENVELOPE = MINIMUM_RESOLUTION * 0.5;",
                "+  ",
                "   /**",
                "@@ -124,3 +130,3 @@ public class Vector {",
                "       final double currentDotProdB = BX * normalizeX + BY * normalizeY + BZ * normalizeZ;",
                "-      if (Math.abs(currentDotProdA) < MINIMUM_RESOLUTION && Math.abs(currentDotProdB) < MINIMUM_RESOLUTION) {",
                "+      if (Math.abs(currentDotProdA) < MINIMUM_GRAM_SCHMIDT_ENVELOPE && Math.abs(currentDotProdB) < MINIMUM_GRAM_SCHMIDT_ENVELOPE) {",
                "         break;",
                "@@ -233,3 +239,3 @@ public class Vector {",
                "       final double currentDotProdB = B.x * normalizeX + B.y * normalizeY + B.z * normalizeZ;",
                "-      if (Math.abs(currentDotProdA) < MINIMUM_RESOLUTION && Math.abs(currentDotProdB) < MINIMUM_RESOLUTION) {",
                "+      if (Math.abs(currentDotProdA) < MINIMUM_GRAM_SCHMIDT_ENVELOPE && Math.abs(currentDotProdB) < MINIMUM_GRAM_SCHMIDT_ENVELOPE) {",
                "         break;"
            ],
            "changed_files": [
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8173": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "56a7ddc3ec993ab97916cc076aa28c491476a0e9"
                ],
                [
                    "no-tag",
                    "f726f1be1e234d6cdda820fed5724d386d5d7580"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8173",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a4586b6d369f72f08f1bfef39b4ff8c52c0d00ac",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519267821,
            "hunks": 10,
            "message": "SOLR-11525: Add cloud/standalone check to 'AssertTool' The 'bin/solr assert' tool provides the capability to programmatically test basic assertions about a running Solr instance.  Is it running on a particular host or port?  Is it running as a specified user?  etc. This commit adds a new type of check: the mode Solr is running in (standalone vs. cloud).",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/util/SolrCLI.java b/solr/core/src/java/org/apache/solr/util/SolrCLI.java",
                "index 266ef3a28a3..d8772ee1d48 100644",
                "--- a/solr/core/src/java/org/apache/solr/util/SolrCLI.java",
                "+++ b/solr/core/src/java/org/apache/solr/util/SolrCLI.java",
                "@@ -98,2 +98,3 @@ import org.apache.solr.client.solrj.SolrClient;",
                " import org.apache.solr.client.solrj.SolrQuery;",
                "+import org.apache.solr.client.solrj.SolrRequest;",
                " import org.apache.solr.client.solrj.SolrServerException;",
                "@@ -104,3 +105,5 @@ import org.apache.solr.client.solrj.impl.HttpSolrClient.Builder;",
                " import org.apache.solr.client.solrj.impl.ZkClientClusterStateProvider;",
                "+import org.apache.solr.client.solrj.request.CollectionAdminRequest;",
                " import org.apache.solr.client.solrj.request.ContentStreamUpdateRequest;",
                "+import org.apache.solr.client.solrj.response.CollectionAdminResponse;",
                " import org.apache.solr.client.solrj.response.QueryResponse;",
                "@@ -3441,2 +3444,14 @@ public class SolrCLI {",
                "               .create(\"X\"),",
                "+          OptionBuilder",
                "+              .withDescription(\"Asserts that Solr is running in cloud mode.  Also fails if Solr not running.  URL should be for root Solr path.\")",
                "+              .withLongOpt(\"cloud\")",
                "+              .hasArg(true)",
                "+              .withArgName(\"url\")",
                "+              .create(\"c\"),",
                "+          OptionBuilder",
                "+              .withDescription(\"Asserts that Solr is not running in cloud mode.  Also fails if Solr not running.  URL should be for root Solr path.\")",
                "+              .withLongOpt(\"not-cloud\")",
                "+              .hasArg(true)",
                "+              .withArgName(\"url\")",
                "+              .create(\"C\"),",
                "           OptionBuilder",
                "@@ -3493,3 +3508,3 @@ public class SolrCLI {",
                "       if (cli.getOptions().length == 0 || cli.getArgs().length > 0 || cli.hasOption(\"h\")) {",
                "-        new HelpFormatter().printHelp(\"bin/solr assert [-m <message>] [-e] [-rR] [-s <url>] [-S <url>] [-u <dir>] [-x <dir>] [-X <dir>]\", getToolOptions(this));",
                "+        new HelpFormatter().printHelp(\"bin/solr assert [-m <message>] [-e] [-rR] [-s <url>] [-S <url>] [-c <url>] [-C <url>] [-u <dir>] [-x <dir>] [-X <dir>]\", getToolOptions(this));",
                "         return 1;",
                "@@ -3528,2 +3543,8 @@ public class SolrCLI {",
                "       }",
                "+      if (cli.hasOption(\"c\")) {",
                "+        ret += assertSolrRunningInCloudMode(cli.getOptionValue(\"c\"));",
                "+      }",
                "+      if (cli.hasOption(\"C\")) {",
                "+        ret += assertSolrNotRunningInCloudMode(cli.getOptionValue(\"C\"));",
                "+      }",
                "       return ret;",
                "@@ -3574,2 +3595,24 @@ public class SolrCLI {",
                "+    public static int assertSolrRunningInCloudMode(String url) throws Exception {",
                "+      if (! isSolrRunningOn(url)) {",
                "+        return exitOrException(\"Solr is not running on url \" + url + \" after \" + timeoutMs.orElse(1000L) / 1000 + \"s\");",
                "+      }",
                "+",
                "+      if (! runningSolrIsCloud(url)) {",
                "+        return exitOrException(\"Solr is not running in cloud mode on \" + url);",
                "+      }",
                "+      return 0;",
                "+    }",
                "+",
                "+    public static int assertSolrNotRunningInCloudMode(String url) throws Exception {",
                "+      if (! isSolrRunningOn(url)) {",
                "+        return exitOrException(\"Solr is not running on url \" + url + \" after \" + timeoutMs.orElse(1000L) / 1000 + \"s\");",
                "+      }",
                "+",
                "+      if (runningSolrIsCloud(url)) {",
                "+        return exitOrException(\"Solr is not running in standalone mode on \" + url);",
                "+      }",
                "+      return 0;",
                "+    }",
                "+",
                "     public static int sameUser(String directory) throws Exception {",
                "@@ -3627,3 +3670,3 @@ public class SolrCLI {",
                "-    private static int exitOrException(String msg) throws Exception {",
                "+    private static int exitOrException(String msg) throws AssertionFailureException {",
                "       if (useExitCode) {",
                "@@ -3631,3 +3674,29 @@ public class SolrCLI {",
                "       } else {",
                "-        throw new Exception(message != null ? message : msg);",
                "+        throw new AssertionFailureException(message != null ? message : msg);",
                "+      }",
                "+    }",
                "+",
                "+    private static boolean isSolrRunningOn(String url) throws Exception {",
                "+      StatusTool status = new StatusTool();",
                "+      try {",
                "+        status.waitToSeeSolrUp(url, timeoutMs.orElse(1000L).intValue() / 1000);",
                "+        return true;",
                "+      } catch (Exception se) {",
                "+        if (exceptionIsAuthRelated(se)) {",
                "+          throw se;",
                "+        }",
                "+        return false;",
                "+      }",
                "+    }",
                "+",
                "+    private static boolean runningSolrIsCloud(String url) throws Exception {",
                "+      try (final HttpSolrClient client = new HttpSolrClient.Builder(url).build()) {",
                "+        final SolrRequest<CollectionAdminResponse> request = new CollectionAdminRequest.ClusterStatus();",
                "+        final CollectionAdminResponse response = request.process(client);",
                "+        return response != null;",
                "+      } catch (Exception e) {",
                "+        if (exceptionIsAuthRelated(e)) {",
                "+          throw e;",
                "+        }",
                "+        return false;",
                "       }",
                "@@ -3636,2 +3705,8 @@ public class SolrCLI {",
                "+  public static class AssertionFailureException extends Exception {",
                "+    public AssertionFailureException(String message) {",
                "+      super(message);",
                "+    }",
                "+  }",
                "+",
                "   // Authentication tool"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/util/SolrCLI.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11525": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "7a17f5a36f19b88a44339633d34e00cdcef6da8f"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11525",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0231d5cdba6b6d8747220570449abd9a1ed327c1",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518541060,
            "hunks": 1,
            "message": "SOLR-11899 Fix a race condition when testing removal of ephemeral nodes.",
            "diff": [
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ZkDistribStateManager.java b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ZkDistribStateManager.java",
                "index b0cc710fd6e..1662d5b7ec8 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ZkDistribStateManager.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ZkDistribStateManager.java",
                "@@ -189,2 +189,6 @@ public class ZkDistribStateManager implements DistribStateManager {",
                "   }",
                "+",
                "+  public SolrZkClient getZkClient() {",
                "+    return zkClient;",
                "+  }",
                " }"
            ],
            "changed_files": [
                "solr/solrj/src/java/org/apache/solr/client/solrj/impl/ZkDistribStateManager.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11899": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "7a8809ac724ab08d31986a738d5ef2852da253f5"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11899",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "530a931c66a94ae247700adba3bc4f2395728008",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518197297,
            "hunks": 3,
            "message": "SOLR-11931: Fix contrib/ltr custom inner class feature/normaliser/model persistence.",
            "diff": [
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedFeatureStore.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedFeatureStore.java",
                "index 6b415a66393..9ef36b876de 100644",
                "--- a/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedFeatureStore.java",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedFeatureStore.java",
                "@@ -194,3 +194,3 @@ public class ManagedFeatureStore extends ManagedResource implements ManagedResou",
                "     o.put(NAME_KEY, feat.getName());",
                "-    o.put(CLASS_KEY, feat.getClass().getCanonicalName());",
                "+    o.put(CLASS_KEY, feat.getClass().getName());",
                "     o.put(PARAMS_KEY, feat.paramsToMap());",
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedModelStore.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedModelStore.java",
                "index 342a14067c6..bdc4cfd9df2 100644",
                "--- a/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedModelStore.java",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedModelStore.java",
                "@@ -270,3 +270,3 @@ public class ManagedModelStore extends ManagedResource implements ManagedResourc",
                "     modelMap.put(NAME_KEY, model.getName());",
                "-    modelMap.put(CLASS_KEY, model.getClass().getCanonicalName());",
                "+    modelMap.put(CLASS_KEY, model.getClass().getName());",
                "     modelMap.put(STORE_KEY, model.getFeatureStoreName());",
                "@@ -323,3 +323,3 @@ public class ManagedModelStore extends ManagedResource implements ManagedResourc",
                "-    normalizer.put(CLASS_KEY, norm.getClass().getCanonicalName());",
                "+    normalizer.put(CLASS_KEY, norm.getClass().getName());"
            ],
            "changed_files": [
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedFeatureStore.java",
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/store/rest/ManagedModelStore.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11931": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a1a9341a9c0aeb2c3ec819b7f74153a3b31a04be"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11931",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "899966b481839cb326c481bc17e8f717ed2e9205",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518514783,
            "hunks": 19,
            "message": "LUCENE-8152: Consistently use advanceExact over advance.",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "index 5b985475e92..9af1c8957dc 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "@@ -676,6 +676,3 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "           //Handle ordinalMapping case",
                "-          if (contextDoc > segmentValues.docID()) {",
                "-            segmentValues.advance(contextDoc);",
                "-          }",
                "-          if (contextDoc == segmentValues.docID()) {",
                "+          if (segmentValues.advanceExact(contextDoc)) {",
                "             ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());",
                "@@ -684,6 +681,3 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "           //Handle top Level FieldCache or Single Segment Case",
                "-          if (docId > segmentValues.docID()) {",
                "-            segmentValues.advance(docId);",
                "-          }",
                "-          if (docId == segmentValues.docID()) {",
                "+          if (segmentValues.advanceExact(docId)) {",
                "             ord = segmentValues.ordValue();",
                "@@ -879,8 +873,4 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "         int contextDoc = globalDoc-currentDocBase;",
                "-        int valuesDocID = collapseValues.docID();",
                "-        if (valuesDocID < contextDoc) {",
                "-          valuesDocID = collapseValues.advance(contextDoc);",
                "-        }",
                "         int collapseValue;",
                "-        if (valuesDocID == contextDoc) {",
                "+        if (collapseValues.advanceExact(contextDoc)) {",
                "           collapseValue = (int) collapseValues.longValue();",
                "@@ -1005,6 +995,3 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "       if(this.ordinalMap != null) {",
                "-        if (contextDoc > segmentValues.docID()) {",
                "-          segmentValues.advance(contextDoc);",
                "-        }",
                "-        if (contextDoc == segmentValues.docID()) {",
                "+        if (segmentValues.advanceExact(contextDoc)) {",
                "           ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());",
                "@@ -1072,6 +1059,3 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "             //Handle ordinalMapping case",
                "-            if (contextDoc > segmentValues.docID()) {",
                "-              segmentValues.advance(contextDoc);",
                "-            }",
                "-            if (contextDoc == segmentValues.docID()) {",
                "+            if (segmentValues.advanceExact(contextDoc)) {",
                "               ord = (int) segmentOrdinalMap.get(segmentValues.ordValue());",
                "@@ -1080,6 +1064,3 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "             //Handle top Level FieldCache or Single Segment Case",
                "-            if (globalDoc > segmentValues.docID()) {",
                "-              segmentValues.advance(globalDoc);",
                "-            }",
                "-            if (globalDoc == segmentValues.docID()) {",
                "+            if (segmentValues.advanceExact(globalDoc)) {",
                "               ord = segmentValues.ordValue();",
                "@@ -1231,9 +1212,4 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "         if(this.needsScores){",
                "-          int collapseDocID = collapseValues.docID();",
                "-          if (collapseDocID < contextDoc) {",
                "-            collapseDocID = collapseValues.advance(contextDoc);",
                "-          }",
                "-",
                "           int collapseValue;",
                "-          if (collapseDocID == contextDoc) {",
                "+          if (collapseValues.advanceExact(contextDoc)) {",
                "             collapseValue = (int) collapseValues.longValue();",
                "@@ -1619,9 +1595,4 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "-      int valuesDocID = minMaxValues.docID();",
                "-      if (valuesDocID < contextDoc) {",
                "-        valuesDocID = minMaxValues.advance(contextDoc);",
                "-      }",
                "-",
                "       int currentVal;",
                "-      if (valuesDocID == contextDoc) {",
                "+      if (minMaxValues.advanceExact(contextDoc)) {",
                "         currentVal = (int) minMaxValues.longValue();",
                "@@ -1711,9 +1682,4 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "-      int valuesDocID = minMaxValues.docID();",
                "-      if (valuesDocID < contextDoc) {",
                "-        valuesDocID = minMaxValues.advance(contextDoc);",
                "-      }",
                "-",
                "       int currentMinMax;",
                "-      if (valuesDocID == contextDoc) {",
                "+      if (minMaxValues.advanceExact(contextDoc)) {",
                "         currentMinMax = (int) minMaxValues.longValue();",
                "@@ -1804,9 +1770,4 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "-      int valuesDocID = minMaxVals.docID();",
                "-      if (valuesDocID < contextDoc) {",
                "-        valuesDocID = minMaxVals.advance(contextDoc);",
                "-      }",
                "-",
                "       long currentVal;",
                "-      if (valuesDocID == contextDoc) {",
                "+      if (minMaxVals.advanceExact(contextDoc)) {",
                "         currentVal = minMaxVals.longValue();",
                "@@ -2211,9 +2172,4 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "-      int valuesDocID = minMaxVals.docID();",
                "-      if (valuesDocID < contextDoc) {",
                "-        valuesDocID = minMaxVals.advance(contextDoc);",
                "-      }",
                "-",
                "       int currentVal;",
                "-      if (valuesDocID == contextDoc) {",
                "+      if (minMaxVals.advanceExact(contextDoc)) {",
                "         currentVal = (int) minMaxVals.longValue();",
                "@@ -2323,9 +2279,4 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "-      int valuesDocID = minMaxVals.docID();",
                "-      if (valuesDocID < contextDoc) {",
                "-        valuesDocID = minMaxVals.advance(contextDoc);",
                "-      }",
                "-",
                "       int minMaxVal;",
                "-      if (valuesDocID == contextDoc) {",
                "+      if (minMaxVals.advanceExact(contextDoc)) {",
                "         minMaxVal = (int) minMaxVals.longValue();"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8152": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "83befcbce2d4eb19f0f65af1e8d2fcc86e7302e0"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8152",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1d8c1a40457fca06d71ca90e537a1371357b8bb8",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519848201,
            "hunks": 1,
            "message": "SOLR-12043: Add mlt.maxdfpct to Solr's documentation",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/morelikethis.adoc b/solr/solr-ref-guide/src/morelikethis.adoc",
                "index d965e9d5cc6..1afa0fe7260 100644",
                "--- a/solr/solr-ref-guide/src/morelikethis.adoc",
                "+++ b/solr/solr-ref-guide/src/morelikethis.adoc",
                "@@ -57,2 +57,5 @@ Specifies the Maximum Document Frequency, the frequency at which words will be i",
                "+`mlt.maxdfpct`::",
                "+Specifies the Maximum Document Frequency using a relative ratio to the number of documents in the index. The argument must be an integer between 0 and 100. For example 75 means the word will be ignored if it occurs in more than 75 percent of the documents in the index.",
                "+",
                " `mlt.minwl`::"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/morelikethis.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12043": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "fa7a3ce3ee7f35eea115ec5a3bdd0a0a1a71fdce"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12043",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1fe45606b91b368b5fcd20e3c86e401ab4f9c6a6",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519706021,
            "hunks": 9,
            "message": "SOLR-12028: BadApple and AwaitsFix annotations usage",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index a5f09e48711..ceff8d2a36b 100755",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -620,2 +620,12 @@ Test args: [${args}]</echo>",
                "       <param name=\"tests.haltonfailure\" value=\"false\"/>",
                "+      <param name=\"badapples\" value=\"false\"/>",
                "+      <target name=\"-jenkins-base\"/>",
                "+    </antcall>",
                "+  </target>",
                "+  ",
                "+  <target name=\"jenkins-badapples\">",
                "+    <antcall>",
                "+      <param name=\"is.jenkins.build\" value=\"true\"/>",
                "+      <param name=\"tests.haltonfailure\" value=\"false\"/>",
                "+      <param name=\"badapples\" value=\"true\"/>",
                "       <target name=\"-jenkins-base\"/>",
                "@@ -629,2 +639,3 @@ Test args: [${args}]</echo>",
                "       <param name=\"tests.nightly\" value=\"true\"/>",
                "+      <param name=\"badapples\" value=\"false\"/>",
                "       <target name=\"-jenkins-base\"/>",
                "diff --git a/dev-tools/scripts/smokeTestRelease.py b/dev-tools/scripts/smokeTestRelease.py",
                "index b8989c9aa17..a4e7135ecc0 100644",
                "--- a/dev-tools/scripts/smokeTestRelease.py",
                "+++ b/dev-tools/scripts/smokeTestRelease.py",
                "@@ -1469,2 +1469,5 @@ def smokeTest(java, baseURL, gitRevision, version, tmpDir, isSigned, testArgs):",
                "   startTime = datetime.datetime.now()",
                "+",
                "+  # disable flakey tests for smoke-tester runs:",
                "+  testArgs = '-Dtests.badapples=false %s' % testArgs",
                "diff --git a/lucene/common-build.xml b/lucene/common-build.xml",
                "index 4fa59ac9364..86e4288f061 100644",
                "--- a/lucene/common-build.xml",
                "+++ b/lucene/common-build.xml",
                "@@ -1403,2 +1403,3 @@ ant -Dtests.weekly=[false]    - weekly tests (@Weekly)",
                " ant -Dtests.awaitsfix=[false] - known issue (@AwaitsFix)",
                "+ant -Dtests.badapples=[true]  - flakey tests (@BadApple)",
                " ant -Dtests.slow=[true]       - slow tests (@Slow)",
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java",
                "index 3d8d346104f..f2b3da0d5ec 100644",
                "--- a/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java",
                "@@ -284,10 +284,11 @@ public abstract class LuceneTestCase extends Assert {",
                "   /**",
                "-   * Annotation for tests that fail frequently and should",
                "-   * be moved to a <a href=\"https://builds.apache.org/job/Lucene-BadApples-trunk-java7/\">\"vault\" plan in Jenkins</a>.",
                "+   * Annotation for tests that fail frequently and are not executed in Jenkins builds",
                "+   * to not spam mailing lists with false reports.",
                "    *",
                "-   * Tests annotated with this will be turned off by default. If you want to enable",
                "+   * Tests are turned on for developers by default. If you want to disable",
                "    * them, set:",
                "    * <pre>",
                "-   * -Dtests.badapples=true",
                "+   * -Dtests.badapples=false",
                "    * </pre>",
                "+   * (or do this through {@code ~./lucene.build.properties}).",
                "    */",
                "@@ -296,3 +297,3 @@ public abstract class LuceneTestCase extends Assert {",
                "   @Retention(RetentionPolicy.RUNTIME)",
                "-  @TestGroup(enabled = false, sysProperty = SYSPROP_BADAPPLES)",
                "+  @TestGroup(enabled = true, sysProperty = SYSPROP_BADAPPLES)",
                "   public @interface BadApple {"
            ],
            "changed_files": [
                "build.xml",
                "dev-tools/scripts/smokeTestRelease.py",
                "lucene/common-build.xml",
                "lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12028": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "7a9b011d3eaaa4088257e5724e12e8d018923c19"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12028",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "23aee00213a2c48bd578bcf01a5ed435b0bdc881",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519970415,
            "hunks": 130,
            "message": "SOLR-12031: Refactor Policy framework to make simulated changes affect more than a single node SOLR-12050: UTILIZENODE does not enforce policy rules",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/UtilizeNodeCmd.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/UtilizeNodeCmd.java",
                "index 60da61a3de6..818b16f9c24 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/UtilizeNodeCmd.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/UtilizeNodeCmd.java",
                "@@ -87,9 +87,18 @@ public class UtilizeNodeCmd implements OverseerCollectionMessageHandler.Cmd {",
                "     PolicyHelper.SessionWrapper sessionWrapper = PolicyHelper.getSession(ocmh.overseer.getSolrCloudManager());",
                "-    Policy.Session session =  sessionWrapper.get();",
                "+    Policy.Session session = sessionWrapper.get();",
                "+    Suggester initialsuggester = session.getSuggester(MOVEREPLICA)",
                "+        .hint(Suggester.Hint.TARGET_NODE, nodeName);",
                "+    Suggester suggester = null;",
                "     for (; ; ) {",
                "-      Suggester suggester = session.getSuggester(MOVEREPLICA)",
                "+      suggester = session.getSuggester(MOVEREPLICA)",
                "           .hint(Suggester.Hint.TARGET_NODE, nodeName);",
                "-      session = suggester.getSession();",
                "       SolrRequest request = suggester.getSuggestion();",
                "+      if (requests.size() > 10) {",
                "+        log.info(\"too_many_suggestions\");",
                "+        PolicyHelper.logState(ocmh.overseer.getSolrCloudManager(), initialsuggester);",
                "+        break;",
                "+      }",
                "+      log.info(\"SUGGESTION: {}\", request);",
                "       if (request == null) break;",
                "+      session = suggester.getSession();",
                "       requests.add(new ZkNodeProps(COLLECTION_PROP, request.getParams().get(COLLECTION_PROP),",
                "@@ -99,2 +108,6 @@ public class UtilizeNodeCmd implements OverseerCollectionMessageHandler.Cmd {",
                "     }",
                "+    log.info(\"total_suggestions: {}\", requests.size());",
                "+    if (requests.size() == 0) {",
                "+      PolicyHelper.logState(ocmh.overseer.getSolrCloudManager(), initialsuggester);",
                "+    }",
                "     sessionWrapper.returnSession(session);",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "index 45b0ddf9f58..91990dba0de 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "@@ -48,3 +48,3 @@ import org.slf4j.LoggerFactory;",
                "  * with the hints provided by the trigger event to compute the required cluster operations.",
                "- *",
                "+ * <p>",
                "  * The cluster operations computed here are put into the {@link ActionContext}'s properties",
                "@@ -83,3 +83,4 @@ public class ComputePlanAction extends TriggerActionBase {",
                "       try {",
                "-        Suggester suggester = getSuggester(session, event, cloudManager);",
                "+        Suggester intialSuggester = getSuggester(session, event, cloudManager);",
                "+        Suggester suggester = intialSuggester;",
                "         int maxOperations = getMaxNumOps(event, autoScalingConf, clusterState);",
                "@@ -106,4 +107,11 @@ public class ComputePlanAction extends TriggerActionBase {",
                "           // unless a specific number of ops was requested",
                "+          // uncomment the following to log too many operations",
                "+          /*if (opCount > 10) {",
                "+            PolicyHelper.logState(cloudManager, intialSuggester);",
                "+          }*/",
                "+",
                "           if (operation == null) {",
                "             if (requestedOperations < 0) {",
                "+              //uncomment the following to log zero operations",
                "+//              PolicyHelper.logState(cloudManager, intialSuggester);",
                "               break;",
                "@@ -152,3 +160,3 @@ public class ComputePlanAction extends TriggerActionBase {",
                "     int totalMax = clusterState.getLiveNodes().size() * totalRF.get() * 3;",
                "-    int maxOp = (Integer)autoScalingConfig.getProperties().getOrDefault(AutoScalingParams.MAX_COMPUTE_OPERATIONS, totalMax);",
                "+    int maxOp = (Integer) autoScalingConfig.getProperties().getOrDefault(AutoScalingParams.MAX_COMPUTE_OPERATIONS, totalMax);",
                "     Object o = event.getProperty(AutoScalingParams.MAX_COMPUTE_OPERATIONS, maxOp);",
                "@@ -163,3 +171,3 @@ public class ComputePlanAction extends TriggerActionBase {",
                "   protected int getRequestedNumOps(TriggerEvent event) {",
                "-    Collection<TriggerEvent.Op> ops = (Collection<TriggerEvent.Op>)event.getProperty(TriggerEvent.REQUESTED_OPS, Collections.emptyList());",
                "+    Collection<TriggerEvent.Op> ops = (Collection<TriggerEvent.Op>) event.getProperty(TriggerEvent.REQUESTED_OPS, Collections.emptyList());",
                "     if (ops.isEmpty()) {",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AddReplicaSuggester.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AddReplicaSuggester.java",
                "index 3f96f3e5b10..918313654e8 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AddReplicaSuggester.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AddReplicaSuggester.java",
                "@@ -19,3 +19,2 @@ package org.apache.solr.client.solrj.cloud.autoscaling;",
                "-import java.io.IOException;",
                " import java.util.Collections;",
                "@@ -26,3 +25,2 @@ import org.apache.solr.client.solrj.SolrRequest;",
                " import org.apache.solr.client.solrj.request.CollectionAdminRequest;",
                "-import org.apache.solr.common.MapWriter;",
                " import org.apache.solr.common.cloud.Replica;",
                "@@ -31,2 +29,4 @@ import org.apache.solr.common.util.Pair;",
                "+import static org.apache.solr.common.params.CollectionParams.CollectionAction.ADDREPLICA;",
                "+",
                " class AddReplicaSuggester extends Suggester {",
                "@@ -44,13 +44,12 @@ class AddReplicaSuggester extends Suggester {",
                "     }",
                "-    for (Pair<String,String> shard : shards) {",
                "+    for (Pair<String, String> shard : shards) {",
                "       Replica.Type type = Replica.Type.get((String) hints.get(Hint.REPLICATYPE));",
                "-      //iterate through elements and identify the least loaded",
                "+      //iterate through elemenodesnts and identify the least loaded",
                "       List<Violation> leastSeriousViolation = null;",
                "-      Integer targetNodeIndex = null;",
                "+      Row bestNode = null;",
                "       for (int i = getMatrix().size() - 1; i >= 0; i--) {",
                "         Row row = getMatrix().get(i);",
                "-        if (!isNodeSuitable(row)) continue;",
                "+        if (!isNodeSuitableForReplicaAddition(row)) continue;",
                "         Row tmpRow = row.addReplica(shard.first(), shard.second(), type);",
                "-",
                "-        List<Violation> errs = testChangedMatrix(strict, getModifiedMatrix(getMatrix(), tmpRow, i));",
                "+        List<Violation> errs = testChangedMatrix(strict, tmpRow.session.matrix);",
                "         if (!containsNewErrors(errs)) {",
                "@@ -58,3 +57,3 @@ class AddReplicaSuggester extends Suggester {",
                "             leastSeriousViolation = errs;",
                "-            targetNodeIndex = i;",
                "+            bestNode = tmpRow;",
                "           }",
                "@@ -63,4 +62,4 @@ class AddReplicaSuggester extends Suggester {",
                "-      if (targetNodeIndex != null) {// there are no rule violations",
                "-        getMatrix().set(targetNodeIndex, getMatrix().get(targetNodeIndex).addReplica(shard.first(), shard.second(), type));",
                "+      if (bestNode != null) {// there are no rule violations",
                "+        this.session = bestNode.session;",
                "         return CollectionAdminRequest",
                "@@ -68,3 +67,3 @@ class AddReplicaSuggester extends Suggester {",
                "             .setType(type)",
                "-            .setNode(getMatrix().get(targetNodeIndex).node);",
                "+            .setNode(bestNode.node);",
                "       }",
                "@@ -75,9 +74,6 @@ class AddReplicaSuggester extends Suggester {",
                "-",
                "   @Override",
                "-  public void writeMap(MapWriter.EntryWriter ew) throws IOException {",
                "-    ew.put(\"action\", CollectionParams.CollectionAction.ADDREPLICA.toString());",
                "-    super.writeMap(ew);",
                "+  public CollectionParams.CollectionAction getAction() {",
                "+    return ADDREPLICA;",
                "   }",
                "-",
                " }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Cell.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Cell.java",
                "index 0ac2b3660f8..0fa2db2a0ee 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Cell.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Cell.java",
                "@@ -25,14 +25,13 @@ import org.apache.solr.common.util.Utils;",
                "+/**Each instance represents an attribute that is being tracked by the framework such as , freedisk, cores etc",
                "+ *",
                "+ */",
                " public class Cell implements MapWriter {",
                "   final int index;",
                "+  final Suggestion.ConditionType type;",
                "   final String name;",
                "   Object val, approxVal;",
                "+  Row row;",
                "-  public Cell(int index, String name, Object val) {",
                "-    this.index = index;",
                "-    this.name = name;",
                "-    this.val = val;",
                "-  }",
                "-",
                "-  public Cell(int index, String name, Object val, Object approxVal) {",
                "+  public Cell(int index, String name, Object val, Object approxVal, Suggestion.ConditionType type, Row row) {",
                "     this.index = index;",
                "@@ -41,2 +40,4 @@ public class Cell implements MapWriter {",
                "     this.approxVal = approxVal;",
                "+    this.type = type;",
                "+    this.row = row;",
                "   }",
                "@@ -47,2 +48,5 @@ public class Cell implements MapWriter {",
                "   }",
                "+  public Row getRow(){",
                "+    return row;",
                "+  }",
                "@@ -54,3 +58,3 @@ public class Cell implements MapWriter {",
                "   public Cell copy() {",
                "-    return new Cell(index, name, val, approxVal);",
                "+    return new Cell(index, name, val, approxVal, this.type, row);",
                "   }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.java",
                "index b62aa56373e..92854fd94ab 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.java",
                "@@ -153,2 +153,3 @@ public class Clause implements MapWriter, Comparable<Clause> {",
                "     final Object val;",
                "+    final Suggestion.ConditionType varType;",
                "     final Operand op;",
                "@@ -159,2 +160,3 @@ public class Clause implements MapWriter, Comparable<Clause> {",
                "       this.op = op;",
                "+      varType = Suggestion.getTagType(name);",
                "     }",
                "@@ -164,4 +166,3 @@ public class Clause implements MapWriter, Comparable<Clause> {",
                "       if (inputVal instanceof ReplicaCount) inputVal = ((ReplicaCount) inputVal).getVal(type);",
                "-      Suggestion.ConditionType validator = Suggestion.getTagType(name);",
                "-      if (validator == Suggestion.ConditionType.LAZY) { // we don't know the type",
                "+      if (varType == Suggestion.ConditionType.LAZY) { // we don't know the type",
                "         return op.match(parseString(val), parseString(inputVal)) == PASS;",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/MoveReplicaSuggester.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/MoveReplicaSuggester.java",
                "index d5918e570ce..c0521cd5d98 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/MoveReplicaSuggester.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/MoveReplicaSuggester.java",
                "@@ -19,3 +19,2 @@ package org.apache.solr.client.solrj.cloud.autoscaling;",
                "-import java.io.IOException;",
                " import java.util.Comparator;",
                "@@ -28,2 +27,4 @@ import org.apache.solr.common.util.Pair;",
                "+import static org.apache.solr.common.params.CollectionParams.CollectionAction.MOVEREPLICA;",
                "+",
                " public class MoveReplicaSuggester extends Suggester {",
                "@@ -40,4 +41,4 @@ public class MoveReplicaSuggester extends Suggester {",
                "     List<Violation> leastSeriousViolation = null;",
                "-    Integer targetNodeIndex = null;",
                "-    Integer sourceNodeIndex = null;",
                "+    Row bestSrcRow = null;",
                "+    Row bestTargetRow = null;",
                "     ReplicaInfo sourceReplicaInfo = null;",
                "@@ -45,28 +46,28 @@ public class MoveReplicaSuggester extends Suggester {",
                "     validReplicas.sort(leaderLast);",
                "-    for (Pair<ReplicaInfo, Row> fromReplica : validReplicas) {",
                "+    for (int i1 = 0; i1 < validReplicas.size(); i1++) {",
                "+      Pair<ReplicaInfo, Row> fromReplica = validReplicas.get(i1);",
                "       Row fromRow = fromReplica.second();",
                "-      ReplicaInfo replicaInfo = fromReplica.first();",
                "-      String coll = replicaInfo.getCollection();",
                "-      String shard = replicaInfo.getShard();",
                "-      Pair<Row, ReplicaInfo> pair = fromRow.removeReplica(coll, shard, replicaInfo.getType());",
                "-      Row srcTmpRow = pair.first();",
                "-      if (srcTmpRow == null) {",
                "-        //no such replica available",
                "-        continue;",
                "-      }",
                "-",
                "-      final int i = getMatrix().indexOf(fromRow);",
                "+      ReplicaInfo ri = fromReplica.first();",
                "+      if (ri == null) continue;",
                "+      final int i = session.indexOf(fromRow.node);",
                "       int stopAt = force ? 0 : i;",
                "-      for (int j = getMatrix().size() - 1; j >= stopAt; j--) {",
                "-        if (j == i) continue;",
                "-        Row targetRow = getMatrix().get(j);",
                "-        if (!isNodeSuitable(targetRow)) continue;",
                "-        targetRow = targetRow.addReplica(coll, shard, replicaInfo.getType());",
                "-        List<Violation> errs = testChangedMatrix(strict, getModifiedMatrix(getModifiedMatrix(getMatrix(), srcTmpRow, i), targetRow, j));",
                "-        if (!containsNewErrors(errs) && isLessSerious(errs, leastSeriousViolation) &&",
                "-            (force || Policy.compareRows(srcTmpRow, targetRow, session.getPolicy()) < 1)) {",
                "+      Row targetRow = null;",
                "+      for (int j = session.matrix.size() - 1; j >= stopAt; j--) {",
                "+        targetRow = session.matrix.get(j);",
                "+        if (targetRow.node.equals(fromRow.node)) continue;",
                "+        if (!isNodeSuitableForReplicaAddition(targetRow)) continue;",
                "+        targetRow = targetRow.addReplica(ri.getCollection(), ri.getShard(), ri.getType());//add replica to target first",
                "+        Pair<Row, ReplicaInfo> pair = targetRow.session.getNode(fromRow.node).removeReplica(ri.getCollection(), ri.getShard(), ri.getType());//then remove replica from source node",
                "+        if (pair == null) continue;//should not happen",
                "+        Row srcRowModified = pair.first();//this is the final state of the source row and session",
                "+        List<Violation> errs = testChangedMatrix(strict, srcRowModified.session.matrix);",
                "+        srcRowModified.session.applyRules();// now resort the nodes with the new values",
                "+        Policy.Session tmpSession = srcRowModified.session;",
                "+        if (!containsNewErrors(errs) &&",
                "+            isLessSerious(errs, leastSeriousViolation) &&",
                "+            (force || (tmpSession.indexOf(srcRowModified.node) < tmpSession.indexOf(targetRow.node)))) {",
                "           leastSeriousViolation = errs;",
                "-          targetNodeIndex = j;",
                "-          sourceNodeIndex = i;",
                "-          sourceReplicaInfo = replicaInfo;",
                "+          bestSrcRow = srcRowModified;",
                "+          sourceReplicaInfo = ri;",
                "+          bestTargetRow = targetRow;",
                "         }",
                "@@ -74,5 +75,4 @@ public class MoveReplicaSuggester extends Suggester {",
                "     }",
                "-    if (targetNodeIndex != null && sourceNodeIndex != null) {",
                "-      getMatrix().set(sourceNodeIndex, getMatrix().get(sourceNodeIndex).removeReplica(sourceReplicaInfo.getCollection(), sourceReplicaInfo.getShard(), sourceReplicaInfo.getType()).first());",
                "-      getMatrix().set(targetNodeIndex, getMatrix().get(targetNodeIndex).addReplica(sourceReplicaInfo.getCollection(), sourceReplicaInfo.getShard(), sourceReplicaInfo.getType()));",
                "+    if (bestSrcRow != null) {",
                "+      this.session = bestSrcRow.session;",
                "       return new CollectionAdminRequest.MoveReplica(",
                "@@ -80,3 +80,3 @@ public class MoveReplicaSuggester extends Suggester {",
                "           sourceReplicaInfo.getName(),",
                "-          getMatrix().get(targetNodeIndex).node);",
                "+          bestTargetRow.node);",
                "     }",
                "@@ -84,2 +84,3 @@ public class MoveReplicaSuggester extends Suggester {",
                "   }",
                "+",
                "   static Comparator<Pair<ReplicaInfo, Row>> leaderLast = (r1, r2) -> {",
                "@@ -92,5 +93,4 @@ public class MoveReplicaSuggester extends Suggester {",
                "   @Override",
                "-  public void writeMap(EntryWriter ew) throws IOException {",
                "-    ew.put(\"action\", CollectionParams.CollectionAction.MOVEREPLICA.toString());",
                "-    super.writeMap(ew);",
                "+  public CollectionParams.CollectionAction getAction() {",
                "+    return MOVEREPLICA;",
                "   }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java",
                "index f2e101659ee..e1f4f9274df 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java",
                "@@ -43,2 +43,3 @@ import org.apache.solr.common.cloud.rule.ImplicitSnitch;",
                " import org.apache.solr.common.params.CollectionParams.CollectionAction;",
                "+import org.apache.solr.common.util.Pair;",
                " import org.apache.solr.common.util.StrUtils;",
                "@@ -79,3 +80,3 @@ public class Policy implements MapWriter {",
                "   final List<Preference> clusterPreferences;",
                "-  final List<String> params;",
                "+  final List<Pair<String, Suggestion.ConditionType>> params;",
                "   final List<String> perReplicaAttributes;",
                "@@ -113,9 +114,12 @@ public class Policy implements MapWriter {",
                "     this.policies = Collections.unmodifiableMap(",
                "-        policiesFromMap((Map<String, List<Map<String, Object>>>)jsonMap.getOrDefault(POLICIES, emptyMap()), newParams));",
                "-    this.params = Collections.unmodifiableList(newParams);",
                "+        policiesFromMap((Map<String, List<Map<String, Object>>>) jsonMap.getOrDefault(POLICIES, emptyMap()), newParams));",
                "+    this.params = Collections.unmodifiableList(newParams.stream()",
                "+        .map(s -> new Pair<>(s, Suggestion.getTagType(s)))",
                "+        .collect(toList()));",
                "     perReplicaAttributes = readPerReplicaAttrs();",
                "   }",
                "+",
                "   private List<String> readPerReplicaAttrs() {",
                "     return this.params.stream()",
                "-        .map(Suggestion.tagVsPerReplicaVal::get)",
                "+        .map(s -> Suggestion.tagVsPerReplicaVal.get(s.first()))",
                "         .filter(Objects::nonNull)",
                "@@ -128,3 +132,7 @@ public class Policy implements MapWriter {",
                "     this.clusterPreferences = clusterPreferences != null ? Collections.unmodifiableList(clusterPreferences) : DEFAULT_PREFERENCES;",
                "-    this.params = Collections.unmodifiableList(buildParams(this.clusterPreferences, this.clusterPolicy, this.policies));",
                "+    this.params = Collections.unmodifiableList(",
                "+        buildParams(this.clusterPreferences, this.clusterPolicy, this.policies).stream()",
                "+            .map(s -> new Pair<>(s, Suggestion.getTagType(s)))",
                "+            .collect(toList())",
                "+    );",
                "     perReplicaAttributes = readPerReplicaAttrs();",
                "@@ -209,5 +217,5 @@ public class Policy implements MapWriter {",
                "   /*This stores the logical state of the system, given a policy and",
                "-     * a cluster state.",
                "-     *",
                "-     */",
                "+   * a cluster state.",
                "+   *",
                "+   */",
                "   public class Session implements MapWriter {",
                "@@ -230,2 +238,3 @@ public class Policy implements MapWriter {",
                "       this.nodeStateProvider = nodeStateProvider;",
                "+      for (Row row : matrix) row.session = this;",
                "     }",
                "@@ -261,3 +270,3 @@ public class Policy implements MapWriter {",
                "       matrix = new ArrayList<>(nodes.size());",
                "-      for (String node : nodes) matrix.add(new Row(node, params, perReplicaAttributes,this));",
                "+      for (String node : nodes) matrix.add(new Row(node, params, perReplicaAttributes, this));",
                "       applyRules();",
                "@@ -271,3 +280,2 @@ public class Policy implements MapWriter {",
                "           return;",
                "-//          throw new RuntimeException(StrUtils.formatString(\"Policy for collection {0} is {1} . It does not exist\", c, p));",
                "         }",
                "@@ -281,5 +289,10 @@ public class Policy implements MapWriter {",
                "+    public Row getNode(String node) {",
                "+      for (Row row : matrix) if (row.node.equals(node)) return row;",
                "+      return null;",
                "+    }",
                "+",
                "     List<Row> getMatrixCopy() {",
                "       return matrix.stream()",
                "-          .map(Row::copy)",
                "+          .map(row -> row.copy(this))",
                "           .collect(Collectors.toList());",
                "@@ -305,3 +318,2 @@ public class Policy implements MapWriter {",
                "-",
                "     public List<Violation> getViolations() {",
                "@@ -338,2 +350,7 @@ public class Policy implements MapWriter {",
                "     }",
                "+",
                "+    public int indexOf(String node) {",
                "+      for (int i = 0; i < matrix.size(); i++) if (matrix.get(i).node.equals(node)) return i;",
                "+      throw new RuntimeException(\"NO such node found \" + node);",
                "+    }",
                "   }",
                "@@ -369,3 +386,3 @@ public class Policy implements MapWriter {",
                "-    public final int min,max;",
                "+    public final int min, max;",
                "@@ -418,4 +435,4 @@ public class Policy implements MapWriter {",
                "   public static List<Clause> mergePolicies(String coll,",
                "-                                    List<Clause> collPolicy,",
                "-                                    List<Clause> globalPolicy) {",
                "+                                           List<Clause> collPolicy,",
                "+                                           List<Clause> globalPolicy) {",
                "@@ -457,3 +474,3 @@ public class Policy implements MapWriter {",
                "   public List<String> getParams() {",
                "-    return params;",
                "+    return params.stream().map(Pair::first).collect(toList());",
                "   }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper.java",
                "index a67a4faf9e7..35073de05de 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper.java",
                "@@ -225,2 +225,23 @@ public class PolicyHelper {",
                "+",
                "+  /**Use this to dump the state of a system and to generate a testcase",
                "+   */",
                "+  public static void logState(SolrCloudManager cloudManager, Suggester suggester) {",
                "+    if(log.isTraceEnabled()) {",
                "+      log.trace(\"LOGSTATE: {}\",",
                "+          Utils.toJSONString((MapWriter) ew -> {",
                "+            ew.put(\"liveNodes\", cloudManager.getClusterStateProvider().getLiveNodes());",
                "+            ew.put(\"suggester\", suggester);",
                "+            if (suggester.session.nodeStateProvider instanceof MapWriter) {",
                "+              MapWriter nodeStateProvider = (MapWriter) suggester.session.nodeStateProvider;",
                "+              nodeStateProvider.writeMap(ew);",
                "+            }",
                "+            try {",
                "+              ew.put(\"autoscalingJson\", cloudManager.getDistribStateManager().getAutoScalingConfig());",
                "+            } catch (InterruptedException e) {",
                "+            }",
                "+          }));",
                "+    }",
                "+  }",
                "+",
                "   public enum Status {",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Preference.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Preference.java",
                "index 0142107ec97..3e73632bf39 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Preference.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Preference.java",
                "@@ -46,3 +46,3 @@ public class Preference implements MapWriter {",
                "     this.idx = idx;",
                "-    this.original = Utils.getDeepCopy(m,3);",
                "+    this.original = Utils.getDeepCopy(m, 3);",
                "     sort = Policy.Sort.get(m);",
                "@@ -54,5 +54,5 @@ public class Preference implements MapWriter {",
                "     }",
                "-    if(precision< name.min || precision> name.max){",
                "+    if (precision < name.min || precision > name.max) {",
                "       throw new RuntimeException(StrUtils.formatString(\"invalid precision value {0} , must lie between {1} and {2}\",",
                "-          precision, name.min, name.max ) );",
                "+          precision, name.min, name.max));",
                "     }",
                "@@ -72,7 +72,18 @@ public class Preference implements MapWriter {",
                "     if (o1 instanceof Long && o2 instanceof Long) result = ((Long) o1).compareTo((Long) o2);",
                "-    else if (o1 instanceof Double && o2 instanceof Double) result = ((Double) o1).compareTo((Double) o2);",
                "-    else if (!o1.getClass().getName().equals(o2.getClass().getName()))  {",
                "+    else if (o1 instanceof Double && o2 instanceof Double) {",
                "+      result = compareWithTolerance((Double) o1, (Double) o2, useApprox ? 1 : 1);",
                "+    } else if (!o1.getClass().getName().equals(o2.getClass().getName())) {",
                "       throw new RuntimeException(\"Unable to compare \" + o1 + \" of type: \" + o1.getClass().getName() + \" from \" + r1.cells[idx].toString() + \" and \" + o2 + \" of type: \" + o2.getClass().getName() + \" from \" + r2.cells[idx].toString());",
                "     }",
                "-    return result == 0 ? (next == null ? 0 : next.compare(r1, r2, useApprox)) : sort.sortval * result;",
                "+    return result == 0 ?",
                "+        (next == null ? 0 :",
                "+            next.compare(r1, r2, useApprox)) : sort.sortval * result;",
                "+  }",
                "+",
                "+  private int compareWithTolerance(Double o1, Double o2, int percentage) {",
                "+    if (percentage == 0) return o1.compareTo(o2);",
                "+    if (o1.equals(o2)) return 0;",
                "+    double delta = Math.abs(o1 - o2);",
                "+    if ((100 * delta / o1) < percentage) return 0;",
                "+    return o1.compareTo(o2);",
                "   }",
                "@@ -86,6 +97,13 @@ public class Preference implements MapWriter {",
                "       }",
                "-      prevVal = row.cells[idx].approxVal =",
                "-          (prevVal == null || Double.compare(Math.abs(((Number) prevVal).doubleValue() - ((Number) row.cells[idx].val).doubleValue()), precision) > 0) ?",
                "-              row.cells[idx].val :",
                "-              prevVal;",
                "+      if (prevVal == null) {//this is the first",
                "+        prevVal = row.cells[idx].approxVal = row.cells[idx].val;",
                "+      } else {",
                "+        double prevD = ((Number) prevVal).doubleValue();",
                "+        double currD = ((Number) row.cells[idx].val).doubleValue();",
                "+        if (Math.abs(prevD - currD) >= precision) {",
                "+          prevVal = row.cells[idx].approxVal = row.cells[idx].val;",
                "+        } else {",
                "+          prevVal = row.cells[idx].approxVal = prevVal;",
                "+        }",
                "+      }",
                "     }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo.java",
                "index cfcd95637bd..8c1fba3f22b 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo.java",
                "@@ -34,3 +34,2 @@ import static org.apache.solr.common.cloud.ZkStateReader.LEADER_PROP;",
                " public class ReplicaInfo implements MapWriter {",
                "-//  private final Replica replica;",
                "   private final String name;",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row.java",
                "index 69f81e64e84..659f315c120 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row.java",
                "@@ -27,2 +27,3 @@ import java.util.Random;",
                " import java.util.function.Consumer;",
                "+import java.util.stream.Collectors;",
                "@@ -37,3 +38,5 @@ import static org.apache.solr.common.params.CoreAdminParams.NODE;",
                "-",
                "+/**",
                "+ * Each instance represents a node in the cluster",
                "+ */",
                " public class Row implements MapWriter {",
                "@@ -41,2 +44,3 @@ public class Row implements MapWriter {",
                "   final Cell[] cells;",
                "+  //this holds the details of each replica in the node",
                "   public Map<String, Map<String, List<ReplicaInfo>>> collectionVsShardVsReplicas;",
                "@@ -44,4 +48,6 @@ public class Row implements MapWriter {",
                "   boolean isLive = true;",
                "+  Policy.Session session;",
                "-  public Row(String node, List<String> params, List<String> perReplicaAttributes, Policy.Session session) {",
                "+  public Row(String node, List<Pair<String, Suggestion.ConditionType>> params, List<String> perReplicaAttributes, Policy.Session session) {",
                "+    this.session = session;",
                "     collectionVsShardVsReplicas = session.nodeStateProvider.getReplicaInfo(node, perReplicaAttributes);",
                "@@ -51,7 +57,8 @@ public class Row implements MapWriter {",
                "     isLive = session.cloudManager.getClusterStateProvider().getLiveNodes().contains(node);",
                "-    Map<String, Object> vals = isLive ? session.nodeStateProvider.getNodeValues(node, params) : Collections.emptyMap();",
                "+    List<String> paramNames = params.stream().map(Pair::first).collect(Collectors.toList());",
                "+    Map<String, Object> vals = isLive ? session.nodeStateProvider.getNodeValues(node, paramNames) : Collections.emptyMap();",
                "     for (int i = 0; i < params.size(); i++) {",
                "-      String s = params.get(i);",
                "-      cells[i] = new Cell(i, s, Clause.validate(s,vals.get(s), false));",
                "-      if (NODE.equals(s)) cells[i].val = node;",
                "+      Pair<String, Suggestion.ConditionType> pair = params.get(i);",
                "+      cells[i] = new Cell(i, pair.first(), Clause.validate(pair.first(), vals.get(pair.first()), false), null, pair.second(), this);",
                "+      if (NODE.equals(pair.first())) cells[i].val = node;",
                "       if (cells[i].val == null) anyValueMissing = true;",
                "@@ -61,3 +68,4 @@ public class Row implements MapWriter {",
                "   public Row(String node, Cell[] cells, boolean anyValueMissing, Map<String,",
                "-      Map<String, List<ReplicaInfo>>> collectionVsShardVsReplicas, boolean isLive) {",
                "+      Map<String, List<ReplicaInfo>>> collectionVsShardVsReplicas, boolean isLive, Policy.Session session) {",
                "+    this.session = session;",
                "     this.node = node;",
                "@@ -67,3 +75,3 @@ public class Row implements MapWriter {",
                "       this.cells[i] = cells[i].copy();",
                "-",
                "+      this.cells[i].row = this;",
                "     }",
                "@@ -81,4 +89,4 @@ public class Row implements MapWriter {",
                "-  Row copy() {",
                "-    return new Row(node, cells, anyValueMissing, Utils.getDeepCopy(collectionVsShardVsReplicas, 3), isLive);",
                "+  Row copy(Policy.Session session) {",
                "+    return new Row(node, cells, anyValueMissing, Utils.getDeepCopy(collectionVsShardVsReplicas, 3), isLive, session);",
                "   }",
                "@@ -103,5 +111,14 @@ public class Row implements MapWriter {",
                "-  // this adds a replica to the replica info",
                "+  /**",
                "+   * this simulates adding a replica of a certain coll+shard to node. as a result of adding a replica ,",
                "+   * values of certain attributes will be modified, in this node as well as other nodes. Please note that",
                "+   * the state of the current session is kept intact while this operation is being performed",
                "+   *",
                "+   * @param coll  collection name",
                "+   * @param shard shard name",
                "+   * @param type  replica type",
                "+   */",
                "   public Row addReplica(String coll, String shard, Replica.Type type) {",
                "-    Row row = copy();",
                "+    Row row = session.copy().getNode(this.node);",
                "+    if (row == null) throw new RuntimeException(\"couldn't get a row\");",
                "     Map<String, List<ReplicaInfo>> c = row.collectionVsShardVsReplicas.computeIfAbsent(coll, k -> new HashMap<>());",
                "@@ -109,15 +126,32 @@ public class Row implements MapWriter {",
                "     String replicaname = \"\" + new Random().nextInt(1000) + 1000;",
                "-    replicas.add(new ReplicaInfo(replicaname, replicaname, coll, shard, type, this.node,",
                "-        Collections.singletonMap(ZkStateReader.REPLICA_TYPE, type != null ? type.toString() : Replica.Type.NRT.toString())));",
                "+    ReplicaInfo ri = new ReplicaInfo(replicaname, replicaname, coll, shard, type, this.node,",
                "+        Utils.makeMap(ZkStateReader.REPLICA_TYPE, type != null ? type.toString() : Replica.Type.NRT.toString()));",
                "+    replicas.add(ri);",
                "     for (Cell cell : row.cells) {",
                "-      if (cell.name.equals(\"cores\")) {",
                "-        cell.val = cell.val == null ? 0 : ((Number) cell.val).longValue() + 1;",
                "-      }",
                "+      cell.type.projectAddReplica(cell, ri);",
                "     }",
                "     return row;",
                "+  }",
                "+",
                "+  public ReplicaInfo getReplica(String coll, String shard, Replica.Type type) {",
                "+    Map<String, List<ReplicaInfo>> c = collectionVsShardVsReplicas.get(coll);",
                "+    if (c == null) return null;",
                "+    List<ReplicaInfo> r = c.get(shard);",
                "+    if (r == null) return null;",
                "+    int idx = -1;",
                "+    for (int i = 0; i < r.size(); i++) {",
                "+      ReplicaInfo info = r.get(i);",
                "+      if (type == null || info.getType() == type) {",
                "+        idx = i;",
                "+        break;",
                "+      }",
                "+    }",
                "+    if (idx == -1) return null;",
                "+    return r.get(idx);",
                "   }",
                "+  // this simulates removing a replica from a node",
                "   public Pair<Row, ReplicaInfo> removeReplica(String coll, String shard, Replica.Type type) {",
                "-    Row row = copy();",
                "+    Row row = session.copy().getNode(this.node);",
                "     Map<String, List<ReplicaInfo>> c = row.collectionVsShardVsReplicas.get(coll);",
                "@@ -134,10 +168,8 @@ public class Row implements MapWriter {",
                "     }",
                "-    if(idx == -1) return null;",
                "-",
                "+    if (idx == -1) return null;",
                "+    ReplicaInfo removed = r.remove(idx);",
                "     for (Cell cell : row.cells) {",
                "-      if (cell.name.equals(\"cores\")) {",
                "-        cell.val = cell.val == null ? 0 : ((Number) cell.val).longValue() - 1;",
                "-      }",
                "+      cell.type.projectRemoveReplica(cell, removed);",
                "     }",
                "-    return new Pair(row, r.remove(idx));",
                "+    return new Pair(row, removed);",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester.java",
                "index 57007681ad6..56e1d880bb4 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester.java",
                "@@ -38,2 +38,3 @@ import org.apache.solr.common.cloud.Replica;",
                " import org.apache.solr.common.cloud.rule.ImplicitSnitch;",
                "+import org.apache.solr.common.params.CollectionParams;",
                " import org.apache.solr.common.util.Pair;",
                "@@ -65,3 +66,3 @@ public abstract class Suggester implements MapWriter {",
                "     if (hint.multiValued) {",
                "-      Collection<?> values = value instanceof Collection ? (Collection)value : Collections.singletonList(value);",
                "+      Collection<?> values = value instanceof Collection ? (Collection) value : Collections.singletonList(value);",
                "       ((Set) hints.computeIfAbsent(hint, h -> new HashSet<>())).addAll(values);",
                "@@ -73,2 +74,6 @@ public abstract class Suggester implements MapWriter {",
                "+  public CollectionParams.CollectionAction getAction() {",
                "+    return null;",
                "+  }",
                "+",
                "   /**",
                "@@ -82,3 +87,3 @@ public abstract class Suggester implements MapWriter {",
                "-  protected boolean isNodeSuitable(Row row) {",
                "+  protected boolean isNodeSuitableForReplicaAddition(Row row) {",
                "     if (!row.isLive) return false;",
                "@@ -117,3 +122,3 @@ public abstract class Suggester implements MapWriter {",
                "         for (String srcNode : srcNodes) {",
                "-          if(session.matrix.stream().noneMatch(row -> row.node.equals(srcNode)))",
                "+          if (session.matrix.stream().noneMatch(row -> row.node.equals(srcNode)))",
                "             session.matrix.add(new Row(srcNode, session.getPolicy().params, session.getPolicy().perReplicaAttributes, session));",
                "@@ -187,3 +192,3 @@ public abstract class Suggester implements MapWriter {",
                "       int idx = originalViolations.indexOf(v);",
                "-      if (idx < 0 || originalViolations.get(idx).isLessSerious(v)) return true;",
                "+      if (idx < 0 /*|| originalViolations.get(idx).isLessSerious(v)*/) return true;",
                "     }",
                "@@ -212,3 +217,3 @@ public abstract class Suggester implements MapWriter {",
                "         if (!isAllowed(new Pair<>(e.getKey(), shard.getKey()), Hint.COLL_SHARD)) continue;//todo fix",
                "-        if(shard.getValue() == null || shard.getValue().isEmpty()) continue;",
                "+        if (shard.getValue() == null || shard.getValue().isEmpty()) continue;",
                "         replicaList.add(new Pair<>(shard.getValue().get(0), r));",
                "@@ -219,3 +224,3 @@ public abstract class Suggester implements MapWriter {",
                "   List<Violation> testChangedMatrix(boolean strict, List<Row> rows) {",
                "-    Policy.setApproxValuesAndSortNodes(session.getPolicy().clusterPreferences,rows);",
                "+    Policy.setApproxValuesAndSortNodes(session.getPolicy().clusterPreferences, rows);",
                "     List<Violation> errors = new ArrayList<>();",
                "@@ -232,7 +237,2 @@ public abstract class Suggester implements MapWriter {",
                "-  ArrayList<Row> getModifiedMatrix(List<Row> matrix, Row tmpRow, int i) {",
                "-    ArrayList<Row> copy = new ArrayList<>(matrix);",
                "-    copy.set(i, tmpRow);",
                "-    return copy;",
                "-  }",
                "@@ -265,3 +265,12 @@ public abstract class Suggester implements MapWriter {",
                "-    }),",
                "+    }) {",
                "+      @Override",
                "+      public Object parse(Object v) {",
                "+        if (v instanceof Map) {",
                "+          Map map = (Map) v;",
                "+          return Pair.parse(map);",
                "+        }",
                "+        return super.parse(v);",
                "+      }",
                "+    },",
                "     SRC_NODE(true),",
                "@@ -279,3 +288,3 @@ public abstract class Suggester implements MapWriter {",
                "       Double actualFreediskInGb = (Double) FREEDISK.validate(null, hintValVsActual.second(), false);",
                "-      if(actualFreediskInGb == null) return false;",
                "+      if (actualFreediskInGb == null) return false;",
                "       return actualFreediskInGb > hintFreediskInGb;",
                "@@ -306,2 +315,13 @@ public abstract class Suggester implements MapWriter {",
                "+    public static Hint get(String s) {",
                "+      for (Hint hint : values()) {",
                "+        if (hint.name().equals(s)) return hint;",
                "+      }",
                "+      return null;",
                "+    }",
                "+",
                "+    public Object parse(Object v) {",
                "+      return v;",
                "+    }",
                "+",
                "@@ -318,2 +338,3 @@ public abstract class Suggester implements MapWriter {",
                "   public void writeMap(EntryWriter ew) throws IOException {",
                "+    ew.put(\"action\", String.valueOf(getAction()));",
                "     ew.put(\"hints\", (MapWriter) ew1 -> hints.forEach((hint, o) -> ew1.putNoEx(hint.toString(), o)));",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion.java",
                "index b29fb382424..0c9013ed1ef 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion.java",
                "@@ -44,2 +44,3 @@ public class Suggestion {",
                "   public static final String coreidxsize = \"INDEX.sizeInBytes\";",
                "+",
                "   static final Map<String, ConditionType> validatetypes = new HashMap<>();",
                "@@ -87,3 +88,3 @@ public class Suggestion {",
                "         session = suggester.getSession();",
                "-        suggestions.add(new Suggester.SuggestionInfo( violation,",
                "+        suggestions.add(new Suggester.SuggestionInfo(violation,",
                "             ((V2RequestSupport) op.setUseV2(true)).getV2Request()));",
                "@@ -109,2 +110,5 @@ public class Suggestion {",
                "+  /**",
                "+   * Type details of each variable in policies",
                "+   */",
                "   public enum ConditionType {",
                "@@ -114,3 +118,3 @@ public class Suggestion {",
                "     REPLICA(\"replica\", Long.class, null, 0L, null),",
                "-    PORT(ImplicitSnitch.PORT, Long.class, null, 1L, 65535L) ,",
                "+    PORT(ImplicitSnitch.PORT, Long.class, null, 1L, 65535L),",
                "     IP_1(\"ip_1\", Long.class, null, 0L, 255L),",
                "@@ -119,3 +123,3 @@ public class Suggestion {",
                "     IP_4(\"ip_4\", Long.class, null, 0L, 255L),",
                "-    FREEDISK(ImplicitSnitch.DISK, Double.class, null, 0d, Double.MAX_VALUE, coreidxsize) {",
                "+    FREEDISK(ImplicitSnitch.DISK, Double.class, null, 0d, Double.MAX_VALUE, coreidxsize, Boolean.TRUE) {",
                "       @Override",
                "@@ -129,2 +133,9 @@ public class Suggestion {",
                "+      @Override",
                "+      public int compareViolation(Violation v1, Violation v2) {",
                "+        return Long.compare(",
                "+            v1.getViolatingReplicas().stream().mapToLong(v -> v.delta == null? 0 :v.delta).max().orElse(0l),",
                "+            v2.getViolatingReplicas().stream().mapToLong(v3 -> v3.delta == null? 0 : v3.delta).max().orElse(0l));",
                "+      }",
                "+",
                "       @Override",
                "@@ -134,3 +145,3 @@ public class Suggestion {",
                "-          Comparator<Row> rowComparator = Comparator.comparing(r -> ((Long) r.getVal(ImplicitSnitch.DISK, 0l)));",
                "+          Comparator<Row> rowComparator = Comparator.comparing(r -> ((Double) r.getVal(ImplicitSnitch.DISK, 0d)));",
                "           List<Row> matchingNodes = ctx.session.matrix.stream().filter(",
                "@@ -143,6 +154,6 @@ public class Suggestion {",
                "-          for (Row r : matchingNodes) {",
                "+          for (Row node : matchingNodes) {",
                "             //lets try to start moving the smallest cores off of the node",
                "             ArrayList<ReplicaInfo> replicas = new ArrayList<>();",
                "-            r.forEachReplica(replicas::add);",
                "+            node.forEachReplica(replicas::add);",
                "             replicas.sort((r1, r2) -> {",
                "@@ -153,3 +164,3 @@ public class Suggestion {",
                "             });",
                "-            long currentDelta = ctx.violation.getClause().tag.delta(r.getVal(ImplicitSnitch.DISK));",
                "+            long currentDelta = ctx.violation.getClause().tag.delta(node.getVal(ImplicitSnitch.DISK));",
                "             for (ReplicaInfo replica : replicas) {",
                "@@ -159,5 +170,6 @@ public class Suggestion {",
                "                   .hint(Suggester.Hint.COLL_SHARD, new Pair<>(replica.getCollection(), replica.getShard()))",
                "-                  .hint(Suggester.Hint.SRC_NODE, r.node);",
                "+                  .hint(Suggester.Hint.SRC_NODE, node.node)",
                "+                  .forceOperation(true);",
                "               if (ctx.addSuggestion(suggester) == null) break;",
                "-              currentDelta -= Clause.parseLong(ConditionType.CORE_IDX.tagName, replica.getVariables().get(ConditionType.CORE_IDX.tagName));",
                "+              currentDelta -= Clause.parseLong(ConditionType.CORE_IDX.tagName, replica.getVariable(ConditionType.CORE_IDX.tagName));",
                "             }",
                "@@ -166,2 +178,31 @@ public class Suggestion {",
                "       }",
                "+",
                "+      //When a replica is added, freedisk should be incremented",
                "+      @Override",
                "+      public void projectAddReplica(Cell cell, ReplicaInfo ri) {",
                "+        //go through other replicas of this shard and copy the index size value into this",
                "+        for (Row row : cell.getRow().session.matrix) {",
                "+          row.forEachReplica(replicaInfo -> {",
                "+            if (ri != replicaInfo &&",
                "+                ri.getCollection().equals(replicaInfo.getCollection()) &&",
                "+                ri.getShard().equals(replicaInfo.getShard()) &&",
                "+                ri.getVariable(CORE_IDX.tagName) == null &&",
                "+                replicaInfo.getVariable(CORE_IDX.tagName) != null) {",
                "+              ri.getVariables().put(CORE_IDX.tagName, validate(CORE_IDX.tagName, replicaInfo.getVariable(CORE_IDX.tagName), false));",
                "+            }",
                "+          });",
                "+        }",
                "+        Double idxSize = (Double) validate(CORE_IDX.tagName, ri.getVariable(CORE_IDX.tagName), false);",
                "+        if (idxSize == null) return;",
                "+        Double currFreeDisk = cell.val == null ? 0.0d : (Double) cell.val;",
                "+        cell.val = currFreeDisk - idxSize;",
                "+      }",
                "+",
                "+      @Override",
                "+      public void projectRemoveReplica(Cell cell, ReplicaInfo ri) {",
                "+        Double idxSize = (Double) validate(CORE_IDX.tagName, ri.getVariable(CORE_IDX.tagName), false);",
                "+        if (idxSize == null) return;",
                "+        Double currFreeDisk = cell.val == null ? 0.0d : (Double) cell.val;",
                "+        cell.val = currFreeDisk + idxSize;",
                "+      }",
                "     },",
                "@@ -174,3 +215,3 @@ public class Suggestion {",
                "     NODE_ROLE(ImplicitSnitch.NODEROLE, String.class, Collections.singleton(\"overseer\"), null, null),",
                "-    CORES(ImplicitSnitch.CORES, Long.class, null, 0L, Long.MAX_VALUE) {",
                "+    CORES(ImplicitSnitch.CORES, Long.class, null, 0L, Long.MAX_VALUE, null, Boolean.TRUE) {",
                "       @Override",
                "@@ -196,8 +237,18 @@ public class Suggestion {",
                "         }",
                "+      }",
                "+",
                "+      @Override",
                "+      public void projectAddReplica(Cell cell, ReplicaInfo ri) {",
                "+        cell.val = cell.val == null ? 0 : ((Number) cell.val).longValue() + 1;",
                "+      }",
                "+      @Override",
                "+      public void projectRemoveReplica(Cell cell, ReplicaInfo ri) {",
                "+        cell.val = cell.val == null ? 0 : ((Number) cell.val).longValue() - 1;",
                "       }",
                "     },",
                "-    SYSLOADAVG(ImplicitSnitch.SYSLOADAVG, Double.class, null, 0d, 100d),",
                "-    HEAPUSAGE(ImplicitSnitch.HEAPUSAGE, Double.class, null, 0d, null),",
                "-    NUMBER(\"NUMBER\", Long.class, null, 0L, Long.MAX_VALUE),",
                "+    SYSLOADAVG(ImplicitSnitch.SYSLOADAVG, Double.class, null, 0d, 100d, null, Boolean.TRUE),",
                "+    HEAPUSAGE(ImplicitSnitch.HEAPUSAGE, Double.class, null, 0d, null, null, Boolean.TRUE),",
                "+    NUMBER(\"NUMBER\", Long.class, null, 0L, Long.MAX_VALUE, null, Boolean.TRUE),",
                "+",
                "     STRING(\"STRING\", String.class, null, null, null),",
                "@@ -230,3 +281,4 @@ public class Suggestion {",
                "     },",
                "-    DISKTYPE(ImplicitSnitch.DISKTYPE, String.class, unmodifiableSet(new HashSet(Arrays.asList(\"ssd\", \"rotational\"))), null, null, null) {",
                "+    DISKTYPE(ImplicitSnitch.DISKTYPE, String.class,",
                "+        unmodifiableSet(new HashSet(Arrays.asList(\"ssd\", \"rotational\"))), null, null, null, null) {",
                "       @Override",
                "@@ -241,2 +293,3 @@ public class Suggestion {",
                "     final Number max;",
                "+    final Boolean additive;",
                "     public final String tagName;",
                "@@ -245,3 +298,3 @@ public class Suggestion {",
                "     ConditionType(String tagName, Class type, Set<String> vals, Number min, Number max) {",
                "-      this(tagName, type, vals, min, max, null);",
                "+      this(tagName, type, vals, min, max, null, null);",
                "@@ -249,3 +302,4 @@ public class Suggestion {",
                "-    ConditionType(String tagName, Class type, Set<String> vals, Number min, Number max, String perReplicaValue) {",
                "+    ConditionType(String tagName, Class type, Set<String> vals, Number min, Number max, String perReplicaValue,",
                "+                  Boolean additive) {",
                "       this.tagName = tagName;",
                "@@ -256,2 +310,3 @@ public class Suggestion {",
                "       this.perReplicaValue = perReplicaValue;",
                "+      this.additive = additive;",
                "     }",
                "@@ -267,3 +322,3 @@ public class Suggestion {",
                "           if (!ctx.clause.replica.isPass(0) && ctx.clause.tag.isPass(row)) return;",
                "-          if(!ctx.currentViolation.matchShard(replica.getShard())) return;",
                "+          if (!ctx.currentViolation.matchShard(replica.getShard())) return;",
                "           if (!ctx.clause.collection.isPass(ctx.currentViolation.coll) || !ctx.clause.shard.isPass(ctx.currentViolation.shard))",
                "@@ -313,2 +368,17 @@ public class Suggestion {",
                "     }",
                "+",
                "+    /**",
                "+     * Simulate a replica addition to a node in the cluster",
                "+     */",
                "+    public void projectAddReplica(Cell cell, ReplicaInfo ri) {",
                "+    }",
                "+",
                "+    public void projectRemoveReplica(Cell cell, ReplicaInfo ri) {",
                "+    }",
                "+",
                "+    public int compareViolation(Violation v1, Violation v2) {",
                "+      if (v2.replicaCountDelta == null || v1.replicaCountDelta == null) return 0;",
                "+      if (Math.abs(v1.replicaCountDelta) == Math.abs(v2.replicaCountDelta)) return 0;",
                "+      return Math.abs(v1.replicaCountDelta) < Math.abs(v2.replicaCountDelta) ? -1 : 1;",
                "+    }",
                "   }",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Violation.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Violation.java",
                "index 105dea04d6f..bb5aa6fc7b1 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Violation.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Violation.java",
                "@@ -93,4 +93,3 @@ public class Violation implements MapWriter {",
                "   public boolean isLessSerious(Violation that) {",
                "-    return that.replicaCountDelta != null && replicaCountDelta != null &&",
                "-        Math.abs(replicaCountDelta) < Math.abs(that.replicaCountDelta);",
                "+    return this.getClause().tag.varType.compareViolation(this,that) <0 ;",
                "   }",
                "@@ -104,3 +103,3 @@ public class Violation implements MapWriter {",
                "           Objects.equals(this.node, v.node) &&",
                "-          Objects.equals(this.tagKey, v.tagKey)",
                "+          Objects.equals(this.clause, v.clause)",
                "           ;",
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/util/Pair.java b/solr/solrj/src/java/org/apache/solr/common/util/Pair.java",
                "index b51edd04d21..74f5b2d6ff7 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/util/Pair.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/util/Pair.java",
                "@@ -20,2 +20,3 @@ import java.io.IOException;",
                " import java.io.Serializable;",
                "+import java.util.Map;",
                " import java.util.Objects;",
                "@@ -67,2 +68,6 @@ public class Pair<T1, T2> implements Serializable, MapWriter {",
                "+  public static Pair parse(Map m) {",
                "+    return new Pair(m.get(\"first\"), m.get(\"second\"));",
                "+  }",
                "+",
                " }",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/api/collections/UtilizeNodeCmd.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AddReplicaSuggester.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Cell.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/MoveReplicaSuggester.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/PolicyHelper.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Preference.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Row.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggestion.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Violation.java",
                "solr/solrj/src/java/org/apache/solr/common/util/Pair.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12031": "",
                "SOLR-12050": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "888c6260f122d03beec03615469dbed444ab62e7"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12031, SOLR-12050",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "73d5b070c911d03264a600521df06b2b07466304",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519767374,
            "hunks": 3,
            "message": "SOLR-12028: Fix typo in property name",
            "diff": [
                "diff --git a/build.xml b/build.xml",
                "index ceff8d2a36b..09c5919af68 100755",
                "--- a/build.xml",
                "+++ b/build.xml",
                "@@ -620,3 +620,3 @@ Test args: [${args}]</echo>",
                "       <param name=\"tests.haltonfailure\" value=\"false\"/>",
                "-      <param name=\"badapples\" value=\"false\"/>",
                "+      <param name=\"tests.badapples\" value=\"false\"/>",
                "       <target name=\"-jenkins-base\"/>",
                "@@ -629,3 +629,3 @@ Test args: [${args}]</echo>",
                "       <param name=\"tests.haltonfailure\" value=\"false\"/>",
                "-      <param name=\"badapples\" value=\"true\"/>",
                "+      <param name=\"tests.badapples\" value=\"true\"/>",
                "       <target name=\"-jenkins-base\"/>",
                "@@ -639,3 +639,3 @@ Test args: [${args}]</echo>",
                "       <param name=\"tests.nightly\" value=\"true\"/>",
                "-      <param name=\"badapples\" value=\"false\"/>",
                "+      <param name=\"tests.badapples\" value=\"false\"/>",
                "       <target name=\"-jenkins-base\"/>"
            ],
            "changed_files": [
                "build.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12028": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "98d85eadd4ed0ebab3e4c37aff88749350934524"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12028",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a96ac1300fee9ce0390c1e20efce86895155770c",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519624358,
            "hunks": 6,
            "message": "SOLR-10720: Aggressive removal of a collection breaks cluster status API (cherry picked from commit 6f2d99e)",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "index 8b4d0b8e687..074e932af76 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "@@ -25,3 +25,2 @@ import java.util.Collections;",
                " import java.util.HashMap;",
                "-import java.util.Iterator;",
                " import java.util.List;",
                "@@ -374,35 +373,2 @@ public class OverseerCollectionMessageHandler implements OverseerMessageHandler,",
                "-  /**",
                "-   * Walks the tree of collection status to verify that any replicas not reporting a \"down\" status is",
                "-   * on a live node, if any replicas reporting their status as \"active\" but the node is not live is",
                "-   * marked as \"down\"; used by CLUSTERSTATUS.",
                "-   * @param liveNodes List of currently live node names.",
                "-   * @param collectionProps Map of collection status information pulled directly from ZooKeeper.",
                "-   */",
                "-",
                "-  @SuppressWarnings(\"unchecked\")",
                "-  protected void crossCheckReplicaStateWithLiveNodes(List<String> liveNodes, NamedList<Object> collectionProps) {",
                "-    Iterator<Map.Entry<String,Object>> colls = collectionProps.iterator();",
                "-    while (colls.hasNext()) {",
                "-      Map.Entry<String,Object> next = colls.next();",
                "-      Map<String,Object> collMap = (Map<String,Object>)next.getValue();",
                "-      Map<String,Object> shards = (Map<String,Object>)collMap.get(\"shards\");",
                "-      for (Object nextShard : shards.values()) {",
                "-        Map<String,Object> shardMap = (Map<String,Object>)nextShard;",
                "-        Map<String,Object> replicas = (Map<String,Object>)shardMap.get(\"replicas\");",
                "-        for (Object nextReplica : replicas.values()) {",
                "-          Map<String,Object> replicaMap = (Map<String,Object>)nextReplica;",
                "-          if (Replica.State.getState((String) replicaMap.get(ZkStateReader.STATE_PROP)) != Replica.State.DOWN) {",
                "-            // not down, so verify the node is live",
                "-            String node_name = (String)replicaMap.get(ZkStateReader.NODE_NAME_PROP);",
                "-            if (!liveNodes.contains(node_name)) {",
                "-              // node is not live, so this replica is actually down",
                "-              replicaMap.put(ZkStateReader.STATE_PROP, Replica.State.DOWN.toString());",
                "-            }",
                "-          }",
                "-        }",
                "-      }",
                "-    }",
                "-  }",
                "-",
                "   /**",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/ClusterStatus.java b/solr/core/src/java/org/apache/solr/handler/admin/ClusterStatus.java",
                "index 0f159544f0f..9ebac776cdc 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/ClusterStatus.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/ClusterStatus.java",
                "@@ -19,2 +19,3 @@ package org.apache.solr.handler.admin;",
                " import java.util.ArrayList;",
                "+import java.util.Arrays;",
                " import java.util.Collection;",
                "@@ -55,3 +56,3 @@ public class ClusterStatus {",
                "   @SuppressWarnings(\"unchecked\")",
                "-  public  void getClusterStatus(NamedList results)",
                "+  public void getClusterStatus(NamedList results)",
                "       throws KeeperException, InterruptedException {",
                "@@ -118,5 +119,3 @@ public class ClusterStatus {",
                "         String[] paramShards = shard.split(\",\");",
                "-        for(String paramShard : paramShards){",
                "-            requestedShards.add(paramShard);",
                "-        }",
                "+        requestedShards.addAll(Arrays.asList(paramShards));",
                "       }",
                "@@ -135,5 +134,12 @@ public class ClusterStatus {",
                "       }",
                "-      String configName = zkStateReader.readConfigName(name);",
                "-      collectionStatus.put(\"configName\", configName);",
                "-      collectionProps.add(name, collectionStatus);",
                "+      try {",
                "+        String configName = zkStateReader.readConfigName(name);",
                "+        collectionStatus.put(\"configName\", configName);",
                "+        collectionProps.add(name, collectionStatus);",
                "+      } catch (SolrException e) {",
                "+        if (e.getCause() instanceof KeeperException.NoNodeException)  {",
                "+          // skip this collection because the collection's znode has been deleted",
                "+          // which can happen during aggressive collection removal, see SOLR-10720",
                "+        } else throw e;",
                "+      }",
                "     }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler.java",
                "solr/core/src/java/org/apache/solr/handler/admin/ClusterStatus.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-10720": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "6f2d99e574888227a29ea173e52f6ff6a19e23db"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-10720",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a5dc944246e93ec09d5482421a8ec9ce22147289",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519649815,
            "hunks": 2,
            "message": "SOLR-11407: Use all details of the query response in the handler response. More consistency in debug info from the test.",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/AutoscalingHistoryHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/AutoscalingHistoryHandler.java",
                "index 1c568d6d93a..f21bd2cdd18 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/AutoscalingHistoryHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/AutoscalingHistoryHandler.java",
                "@@ -127,3 +127,3 @@ public class AutoscalingHistoryHandler extends RequestHandlerBase implements Per",
                "       QueryResponse qr = cloudSolrClient.query(collection, params);",
                "-      rsp.getValues().add(\"response\", qr.getResults());",
                "+      rsp.setAllValues(qr.getResponse());",
                "     } catch (Exception e) {",
                "@@ -131,3 +131,5 @@ public class AutoscalingHistoryHandler extends RequestHandlerBase implements Per",
                "         // relatively benign",
                "-        LOG.info(\"Collection \" + collection + \" does not exist.\");",
                "+        String msg = \"Collection \" + collection + \" does not exist.\";",
                "+        LOG.info(msg);",
                "+        rsp.getValues().add(\"error\", msg);",
                "       } else {"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/admin/AutoscalingHistoryHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11407": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "a2eb7f388009b9fd0bda356fdf51e52d525124d2"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11407",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "be11f56bbcf3085829f09eb9d30eede4bba62705",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520362405,
            "hunks": 34,
            "message": "SOLR-11795: Add more explanation in places; rework headings a bit; fix CSS for better display of labeled list",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/css/ref-guide.css b/solr/solr-ref-guide/src/css/ref-guide.css",
                "index 2988d75b282..1092830d48a 100644",
                "--- a/solr/solr-ref-guide/src/css/ref-guide.css",
                "+++ b/solr/solr-ref-guide/src/css/ref-guide.css",
                "@@ -2167,3 +2167,4 @@ ol.lowergreek",
                "-td.hdlist1",
                "+td.hdlist1,",
                "+td.hdlist1 > code",
                " {",
                "diff --git a/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc b/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "index 5348cfbba66..8796c741c9f 100644",
                "--- a/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "+++ b/solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc",
                "@@ -18,5 +18,7 @@",
                "-You can monitor Solr using solr-exporter that exposes Solr's metrics to https://prometheus.io[Prometheus], and visualize metrics using https://grafana.com[Grafana].",
                "+If you use https://prometheus.io[Prometheus] and https://grafana.com[Grafana] for metrics storage and data visualization, Solr includes a Prometheus exporter to collect metrics and other data.",
                "-It allows users to monitor not only Solr metrics which come from <<metrics-reporting.adoc#metrics-api,Metrics API>> but also facet counts which come from <<searching.adoc#searching,Searching>>.",
                "+A Prometheus exporter (`solr-exporter`) allows users to monitor not only Solr metrics which come from <<metrics-reporting.adoc#metrics-api,Metrics API>>, but also facet counts which come from <<searching.adoc#searching,Searching>> and responses to <<collections-api.adoc#collections-api,Collections API>> commands and <<ping.adoc#ping,PingRequestHandler>> requests.",
                "+",
                "+This graphic provides a more detailed view:",
                "@@ -25,37 +27,57 @@ image::images/monitoring-solr-with-prometheus-and-grafana/solr-exporter-diagram.",
                "-This feature is experimental status.",
                "+NOTE: This feature is considered experimental, meaning future improvements may break compatibility.",
                "+The Prometheus exporter is included in Solr as a contrib, and is located in `contrib/prometheus-exporter` in your Solr instance.",
                "-== Running solr-exporter",
                "+There are three aspects to running `solr-exporter`:",
                "-You can start solr-exporter by running `./bin/solr-exporter` from the solr-exporter directory.",
                "+* Modify the `solr-exporter-config.xml` to define the data to collect. Solr has a default configuration you can use, but if you would like to modify it before running the exporter the first time, see the section below <<Exporter Configuration>>.",
                "+* Start the exporter from within Solr. See the section below <<Starting the Exporter>>.",
                "+* Modify your Prometheus configuration to listen on the correct port. See the section below <<Prometheus Configuration>>",
                "-[source,plain]",
                "+== Starting the Exporter",
                "+You can start `solr-exporter` by running `./bin/solr-exporter` (Linux) or `.\\bin\\solr-exporter.cmd` (Windows) from the `contrib/prometheus-exporter` directory.",
                "+",
                "+See the commands below depending on your operating system and Solr operating mode:",
                "+",
                "+[.dynamic-tabs]",
                "+--",
                "+[example.tab-pane#solr-exporter-linux]",
                "+====",
                "+[.tab-label]*Linux*",
                "+",
                "+.Standalone mode",
                "+[source,bash]",
                " ----",
                "-$ cd ./contrib/prometheus-exporter",
                "-$ ./bin/solr-exporter -p 9983 -b http://localhost:8983/solr -f ./conf/solr-exporter-config.xml -n 8",
                "+$ cd contrib/prometheus-exporter",
                "+$ ./bin/solr-exporter -p 9854 -b http://localhost:8983/solr -f ./conf/solr-exporter-config.xml -n 8",
                " ----",
                "-If you are on Windows platform, you can start solr-exporter by running `.\\bin\\solr-exporter.cmd` instead.",
                "-",
                "-[source,plain]",
                "+.SolrCloud mode",
                "+[source,bash]",
                " ----",
                "-> cd .\\contrib\\prometheus",
                "-> .\\bin\\solr-exporter.cmd -p 9983 -b http://localhost:8983/solr -f .\\conf\\solr-exporter-config.xml -n 8",
                "+$ cd contrib/prometheus-exporter",
                "+$ ./bin/solr-exporter -p 9854 -z localhost:2181/solr -f ./conf/solr-exporter-config.xml -n 16",
                " ----",
                "+====",
                "-You can also connect to Solr in SolrCloud mode like this.",
                "+[example.tab-pane#solr-exporter-windows]",
                "+====",
                "+[.tab-label]*Windows*",
                "-[source,plain]",
                "+.Standalone mode",
                "+[source,text]",
                " ----",
                "-$ cd ./contrib/prometheus",
                "-$ ./bin/solr-exporter -p 9983 -z localhost:2181/solr -f ./conf/solr-exporter-config.xml -n 16",
                "+> cd contrib\\prometheus-exporter",
                "+> .\\bin\\solr-exporter.cmd -p 9854 -b http://localhost:8983/solr -f .\\conf\\solr-exporter-config.xml -n 8",
                " ----",
                "-See command help:",
                "-",
                "-[source,plain]",
                "+.SolrCloud mode",
                "+[source,text]",
                " ----",
                "-$ ./bin/solr-exporter -h",
                "+> cd contrib\\prometheus-exporter",
                "+> .\\bin\\solr-exporter -p 9854 -z localhost:2181/solr -f .\\conf\\solr-exporter-config.xml -n 16",
                " ----",
                "+====",
                "+--",
                "@@ -63,28 +85,28 @@ $ ./bin/solr-exporter -h",
                "+The parameters in the example start commands shown above",
                "+",
                "+`h`, `--help`::",
                "+Displays command line help and usage.",
                "+",
                " `-p`, `--port`::",
                "-Specify the solr-exporter HTTP listen port; default is `9983`.",
                "+The port where Prometheus will listen for new data. This port will be used to configure Prometheus. It can be any port not already in use on your server. The default is `9983`.",
                " `-b`, `--baseurl`::",
                "-Specify the Solr base URL when connecting to Solr in standalone mode. If omitted both the `-b` parameter and the `-z` parameter, connect to `http://localhost:8983/solr`. For example `http://localhost:8983/solr`.",
                "+The Solr base URL (such as `\\http://localhost:8983/solr`) when Solr is running in Standalone mode. If you are running Solr in SolrCloud mode, do not specify this parameter. If neither the `-b` parameter nor the `-z` parameter are defined, the default is `-b \\http://localhost:8983/solr`.",
                " `-z`, `--zkhost`::",
                "-Specify the ZooKeeper connection string when connecting to Solr in SolrCloud mode. If omitted both the `-b` parameter and the `-z` parameter, connect to `http://localhost:8983/solr`. For example `localhost:2181/solr`.",
                "+The ZooKeeper connect string (such as `localhost:8983`, or `localhost:2181/solr`) when Solr is running in SolrCloud mode. If you are running Solr in Standalone mode, do not specify this parameter. If neither the `-b` parameter nor the `-z` parameter are defined, the `-b` parameter default is used.",
                " `-f`, `--config-file`::",
                "-Specify the configuration file; default is `./conf/solr-exporter-config.xml`.",
                "+The path to the configuration file that defines the Solr metrics to read. The default is `contrib/prometheus-exporter/conf/solr-exporter-config.xml`.",
                " `-n`, `--num-threads`::",
                "-Specify the number of threads. solr-exporter creates a thread pools for request to Solr. If you need to improve request latency via solr-exporter, you can increase the number of threads; default is `1`.",
                "-",
                "-",
                "-== Metrics Exposition URL",
                "-",
                "-The Solr's metrics exposed by solr-exporter can see at the following URL.",
                "-",
                "-http://localhost:9983/metrics[http://localhost:9983/metrics]",
                "+The number of threads. The `solr-exporter` creates thread pools for requests to Solr. Request latency can be improved by increasing the number of threads. The default is `1`.",
                "+The Solr's metrics exposed by `solr-exporter` can be seen at: `\\http://localhost:9983/solr/admin/metrics`.",
                "-== solr-exporter Configuration",
                "+== Exporter Configuration",
                "+The configuration for the `solr-exporter` defines the data to get from Solr. This includes the metrics, but can also include queries to the PingRequestHandler, the Collections API, and a query to any query request handler.",
                "-The configuration is in `./config/solr-exporter-config.xml`. An example with all possible options:",
                "+A default example configuration is in `contrib/prometheus-exporter/config/solr-exporter-config.xml`. Below is a slightly shortened version of it:",
                "@@ -146,5 +168,3 @@ The configuration is in `./config/solr-exporter-config.xml`. An example with all",
                "           </str>",
                "-",
                " ...",
                "-",
                "         </arr>",
                "@@ -173,5 +193,3 @@ The configuration is in `./config/solr-exporter-config.xml`. An example with all",
                "           </str>",
                "-",
                " ...",
                "-",
                "         </arr>",
                "@@ -222,24 +240,39 @@ The configuration is in `./config/solr-exporter-config.xml`. An example with all",
                "-===  solr-exporter Configuration Tags and Elements",
                "+=== Configuration Tags and Elements",
                "+The `solr-exporter` works by making a request to Solr according to the definitions in the configuration file, scraping the response, and converting it to a JSON structure Prometheus can understand. The configuration file defines the elements to request, how to scrape them, and where to place the extracted data in the JSON template.",
                "-`/config/rules/ping`::",
                "-Scrape <<ping.adoc#ping,Ping>> response.",
                "+The `solr-exporter` configuration file always starts and closes with two simple elements:",
                "-`/config/rules/metrics`::",
                "-Scrape <<metrics-reporting.adoc#metrics-api,Metrics API>> response.",
                "+[source,xml]",
                "+----",
                "+<config>",
                "+  <rules>",
                "-`/config/rules/collections`::",
                "-Scrape <<collections-api.adoc#collections-api,Collections API>> response.",
                "+  </rules>",
                "+</config>",
                "+----",
                "+",
                "+Between these elements, the data the `solr-exporter` should request is defined. There are several possible types of requests to make:",
                "-`/config/rules/search`::",
                "-Scrape <<searching.adoc#searching,Search API>> response.",
                "+[horizontal]",
                "+`<ping>`:: Scrape the response to a <<ping.adoc#ping,PingRequestHandler>> request.",
                "+`<metrics>`:: Scrape the response to a <<metrics-reporting.adoc#metrics-api,Metrics API>> request.",
                "+`<collections>`:: Scrape the response to a <<collections-api.adoc#collections-api,Collections API>> request.",
                "+`<search>`:: Scrape the response to a <<searching.adoc#searching,search>> request.",
                "-`*[@query]`::",
                "-Query parameter for each features. You can specify `collection`, `core`, `path`, and `params`.",
                "+Within each of these types, we need to define the query and how to work with the response. To do this, we define two additional elements:",
                "-`*[@jsonQueries]`::",
                "-JSON Query that is jq syntax. For more details, see https://stedolan.github.io/jq/manual/[https://stedolan.github.io/jq/manual/].",
                "+`<query>`::",
                "+Defines the query parameter(s) used for the request. This section uses several additional properties to define your query:",
                "-jq query has to output JSON in the following format.",
                "+`collection`::: The collection to issue the query against. Only used in SolrCloud mode.",
                "+`core`::: The core to issue the query against. Only used in Standalone mode.",
                "+`path`::: The path to the query endpoint where the request will be sent. Examples include `admin/metrics` or `/select` or `admin/collections`.",
                "+`params`::: Additional query parameters. These will vary depending on the request type and the endpoint. For example, if using the Metrics endpoint, you can add parameters to limit the query to a certain group and/or prefix. If you're using the Collections API, the command you want to use would be a parameter.",
                "+`<jsonQueries>`::",
                "+This is an array that defines one or more JSON Queries in jq syntax. For more details about how to structure these queries, see https://stedolan.github.io/jq/manual/[the jq user manual].",
                "++",
                "+A jq query has to output JSON in the following format:",
                "++",
                " [source,json]",
                "@@ -247,8 +280,8 @@ jq query has to output JSON in the following format.",
                " {",
                "-  \"name\"         : \"solr_ping\",",
                "-  \"type\"         : \"GAUGE\",",
                "-  \"help\"         : \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "-  \"label_names\"  : [\"base_url\",\"core\"],",
                "-  \"label_values\" : [\"http://localhost:8983/solr\",\"collection1\"],",
                "-  \"value\"        : 1.0",
                "+  \"name\": \"solr_ping\",",
                "+  \"type\": \"GAUGE\",",
                "+  \"help\": \"See following URL: https://lucene.apache.org/solr/guide/ping.html\",",
                "+  \"label_names\": [\"base_url\",\"core\"],",
                "+  \"label_values\": [\"http://localhost:8983/solr\",\"collection1\"],",
                "+  \"value\": 1.0",
                " }",
                "@@ -256,5 +289,7 @@ jq query has to output JSON in the following format.",
                "-===  solr-exporter Exposition Format",
                "+See the section <<Exposition Format>> below for information about what information should go into each property, and an example of how the above example is translated for Prometheus.",
                "-solr-exporter converts the JSON to the following exposition format:",
                "+=== Exposition Format",
                "+",
                "+The `solr-exporter` converts the JSON to the following exposition format:",
                "@@ -267,7 +302,9 @@ solr-exporter converts the JSON to the following exposition format:",
                "+The following parameters should be set:",
                "+",
                " `name`::",
                "-The metric name to set. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "+The metric name to set. For more details, see https://prometheus.io/docs/practices/naming/[Prometheus naming best practices].",
                " `type`::",
                "-The type of the metric, can be `COUNTER`, `GAUGE`, `SUMMARY`, `HISTOGRAM` or `UNTYPED`. For more detauils, see https://prometheus.io/docs/concepts/metric_types/[https://prometheus.io/docs/concepts/metric_types/].",
                "+The type of the metric, can be `COUNTER`, `GAUGE`, `SUMMARY`, `HISTOGRAM` or `UNTYPED`. For more details, see https://prometheus.io/docs/concepts/metric_types/[Prometheus metric types].",
                "@@ -277,6 +314,6 @@ Help text for the metric.",
                " `label_names`::",
                "-Label names for the metric. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "+Label names for the metric. For more details, see https://prometheus.io/docs/practices/naming/[Prometheus naming best practices].",
                " `label_values`::",
                "-Label values for the metric. For more details, see https://prometheus.io/docs/practices/naming/[https://prometheus.io/docs/practices/naming/].",
                "+Label values for the metric. For more details, see https://prometheus.io/docs/practices/naming/[Prometheus naming best practices].",
                "@@ -285,3 +322,3 @@ Value for the metric. Value must be set to Double type.",
                "-For example, solr-exporter converts the above JSON to the following:",
                "+For example, `solr-exporter` converts the JSON in the previous section to the following:",
                "@@ -294,6 +331,5 @@ solr_ping{base_url=\"http://localhost:8983/solr\",core=\"collection1\"} 1.0",
                "-",
                " == Prometheus Configuration",
                "-You need to specify the solr-exporter listen address into `scrape_configs` in `prometheus.yml`. See following example:",
                "+In order for Prometheus to know about the `solr-exporter`, the listen address must be added to `prometheus.yml`, as in this example:",
                "@@ -304,13 +340,15 @@ scrape_configs:",
                "     static_configs:",
                "-      - targets: ['localhost:9983']",
                "+      - targets: ['localhost:9854']",
                " ----",
                "-When you apply the above settings to prometheus, it will start to pull Solr's metrics from solr-exporter.",
                "+If you already have a section for `scrape_configs`, you can add the `job_name` and other values in the same section.",
                "+When you apply the settings to Prometheus, it will start to pull Solr's metrics from `solr-exporter`.",
                "-== Grafana Dashboard",
                "+== Sample Grafana Dashboard",
                "-A Grafana sample dashboard is provided at the following JSON file.",
                "+A Grafana sample dashboard is provided in the following JSON file: `contrib/prometheus-exporter/conf/grafana-solr-dashboard.json`.",
                "+You can place this with your other Grafana dashboard configurations and modify it as necessary depending on any customization you've done for the `solr-exporter` configuration.",
                "-`./contrib/prometheus-exporter/conf/grafana-solr-dashboard.json`",
                "+This screenshot shows what it might look like:"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/css/ref-guide.css",
                "solr/solr-ref-guide/src/monitoring-solr-with-prometheus-and-grafana.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11795": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "d8956c3bd96b5f479ca076bd074054291e926adc"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d39751a754bfed0fad04bd857e1d9b0f071031b3",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518194856,
            "hunks": 4,
            "message": "SOLR-11349: Rename ResponseBuilder's getQueryCommand to createQueryCommand.",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java b/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java",
                "index 71ac9c0eaaa..23855332987 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java",
                "@@ -339,3 +339,3 @@ public class QueryComponent extends SearchComponent",
                "-    QueryCommand cmd = rb.getQueryCommand();",
                "+    QueryCommand cmd = rb.createQueryCommand();",
                "     cmd.setTimeAllowed(timeAllowed);",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java b/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java",
                "index 8e9477b76ed..22d04658c48 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java",
                "@@ -423,2 +423,7 @@ public class ResponseBuilder",
                "+  @Deprecated",
                "+  public QueryCommand getQueryCommand() {",
                "+    return createQueryCommand();",
                "+  }",
                "+",
                "   /**",
                "@@ -427,3 +432,3 @@ public class ResponseBuilder",
                "    */",
                "-  public QueryCommand getQueryCommand() {",
                "+  public QueryCommand createQueryCommand() {",
                "     QueryCommand cmd = new QueryCommand();",
                "diff --git a/solr/core/src/java/org/apache/solr/request/SimpleFacets.java b/solr/core/src/java/org/apache/solr/request/SimpleFacets.java",
                "index cc5559d563a..0b5a08227d9 100644",
                "--- a/solr/core/src/java/org/apache/solr/request/SimpleFacets.java",
                "+++ b/solr/core/src/java/org/apache/solr/request/SimpleFacets.java",
                "@@ -261,3 +261,3 @@ public class SimpleFacets {",
                "     if (rb.grouping() && rb.getGroupingSpec().isTruncateGroups()) {",
                "-      Grouping grouping = new Grouping(searcher, null, rb.getQueryCommand(), false, 0, false);",
                "+      Grouping grouping = new Grouping(searcher, null, rb.createQueryCommand(), false, 0, false);",
                "       grouping.setWithinGroupSort(rb.getGroupingSpec().getSortWithinGroup());"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java",
                "solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java",
                "solr/core/src/java/org/apache/solr/request/SimpleFacets.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11349": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b8224ad6ba615b1eb0f6244eb4ea0b85981d84d6"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11349",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "186475fc3d5ab6d433966166c0bb747f3e103b75",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519728399,
            "hunks": 2,
            "message": "Fix camel case in method name (cherry picked from commit d512cd7)",
            "diff": [
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "index dbda3d883cf..51872c5a6cb 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "@@ -437,3 +437,3 @@ public class ZkStateReader implements Closeable {",
                "     if (securityNodeListener != null) {",
                "-      addSecuritynodeWatcher(pair -> {",
                "+      addSecurityNodeWatcher(pair -> {",
                "         ConfigData cd = new ConfigData();",
                "@@ -448,3 +448,3 @@ public class ZkStateReader implements Closeable {",
                "-  private void addSecuritynodeWatcher(final Callable<Pair<byte[], Stat>> callback)",
                "+  private void addSecurityNodeWatcher(final Callable<Pair<byte[], Stat>> callback)",
                "       throws KeeperException, InterruptedException {"
            ],
            "changed_files": [
                "solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "582c828727b306844c550bbeb6390f52a9bda092",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520525962,
            "hunks": 3,
            "message": "SOLR-11722: Minor improvements to documentation in collections.Commands.json",
            "diff": [
                "diff --git a/solr/solrj/src/resources/apispec/collections.Commands.json b/solr/solrj/src/resources/apispec/collections.Commands.json",
                "index 245a2243715..c845ee42092 100644",
                "--- a/solr/solrj/src/resources/apispec/collections.Commands.json",
                "+++ b/solr/solrj/src/resources/apispec/collections.Commands.json",
                "@@ -130,3 +130,3 @@",
                "       \"documentation\": \"https://lucene.apache.org/solr/guide/collections-api.html#createalias\",",
                "-      \"description\": \"Allows one or more collections to be known by another name, or creates an alias that manages a series of time-partitioned collections.. If this command is used on an existing alias, the existing alias will be replaced with the new collection details.\",",
                "+      \"description\": \"Allows one or more collections to be known by another name (to include time partitioned collections). If this command is used on an existing alias, the existing alias will be replaced with the new collection details.\",",
                "       \"type\": \"object\",",
                "@@ -139,3 +139,3 @@",
                "           \"type\": \"array\",",
                "-          \"description\": \"The list of collections to be known as this alias. Incompatible with any of the routing parameters. Either this parameter or a complete set of routing parameters is required\",",
                "+          \"description\": \"The list of collections to be known as this alias. Incompatible with any of the routing parameters. Either this parameter or a complete set of routing parameters is required.\",",
                "           \"items\": {",
                "@@ -147,3 +147,3 @@",
                "           \"documentation\": \"https://lucene.apache.org/solr/guide/collections-api.html#createalias\",",
                "-          \"description\":\"routing specific attributes\",",
                "+          \"description\":\"Routing specific properties to define a time routed alias.  Do not specify 'collections' when creating a time routed alias.\",",
                "           \"properties\" : {"
            ],
            "changed_files": [
                "solr/solrj/src/resources/apispec/collections.Commands.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11722": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "567f253447eb6487f5eae6431066c215505638aa"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11722",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d512cd7604741a2f55deb0c840188f0342f1ba57",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519728399,
            "hunks": 2,
            "message": "Fix camel case in method name",
            "diff": [
                "diff --git a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "index dbda3d883cf..51872c5a6cb 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java",
                "@@ -437,3 +437,3 @@ public class ZkStateReader implements Closeable {",
                "     if (securityNodeListener != null) {",
                "-      addSecuritynodeWatcher(pair -> {",
                "+      addSecurityNodeWatcher(pair -> {",
                "         ConfigData cd = new ConfigData();",
                "@@ -448,3 +448,3 @@ public class ZkStateReader implements Closeable {",
                "-  private void addSecuritynodeWatcher(final Callable<Pair<byte[], Stat>> callback)",
                "+  private void addSecurityNodeWatcher(final Callable<Pair<byte[], Stat>> callback)",
                "       throws KeeperException, InterruptedException {"
            ],
            "changed_files": [
                "solr/solrj/src/java/org/apache/solr/common/cloud/ZkStateReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "314bcfda6114147d4ba99f626b688701ba4f75e3",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519134176,
            "hunks": 28,
            "message": "Revert \"LUCENE-8125: ICUTokenizer support for emoji/emoji sequence tokens\" This reverts commit c9916e3048e98371f056b96cdbaa996f1f36a2fa.",
            "diff": [
                "diff --git a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java",
                "index 9e5050d55b8..d8ecb77d401 100644",
                "--- a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java",
                "+++ b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java",
                "@@ -18,4 +18,6 @@ package org.apache.lucene.analysis.icu.segmentation;",
                "+",
                "+import java.text.CharacterIterator;",
                "+",
                " import com.ibm.icu.lang.UCharacter;",
                "-import com.ibm.icu.lang.UProperty;",
                " import com.ibm.icu.text.BreakIterator;",
                "@@ -23,76 +25,142 @@ import com.ibm.icu.text.RuleBasedBreakIterator;",
                " import com.ibm.icu.text.UTF16;",
                "-import com.ibm.icu.text.UnicodeSet;",
                " /**",
                "- * Wraps RuleBasedBreakIterator, making object reuse convenient and ",
                "- * emitting a rule status for emoji sequences.",
                "+ * Contain all the issues surrounding BreakIterators in ICU in one place.",
                "+ * Basically this boils down to the fact that they aren't very friendly to any",
                "+ * sort of OO design.",
                "+ * <p>",
                "+ * http://bugs.icu-project.org/trac/ticket/5901: RBBI.getRuleStatus(), hoist to",
                "+ * BreakIterator from RuleBasedBreakIterator",
                "+ * <p>",
                "+ * DictionaryBasedBreakIterator is a subclass of RuleBasedBreakIterator, but",
                "+ * doesn't actually behave as a subclass: it always returns 0 for",
                "+ * getRuleStatus(): ",
                "+ * http://bugs.icu-project.org/trac/ticket/4730: Thai RBBI, no boundary type",
                "+ * tags",
                "  * @lucene.experimental",
                "  */",
                "-final class BreakIteratorWrapper {",
                "-  private final CharArrayIterator textIterator = new CharArrayIterator();",
                "-  private final RuleBasedBreakIterator rbbi;",
                "-  private char text[];",
                "-  private int start;",
                "-  private int status;",
                "-  ",
                "-  BreakIteratorWrapper(RuleBasedBreakIterator rbbi) {",
                "-    this.rbbi = rbbi;",
                "-  }",
                "-  ",
                "-  int current() {",
                "-    return rbbi.current();",
                "-  }",
                "+abstract class BreakIteratorWrapper {",
                "+  protected final CharArrayIterator textIterator = new CharArrayIterator();",
                "+  protected char text[];",
                "+  protected int start;",
                "+  protected int length;",
                "+",
                "+  abstract int next();",
                "+  abstract int current();",
                "+  abstract int getRuleStatus();",
                "+  abstract void setText(CharacterIterator text);",
                "-  int getRuleStatus() {",
                "-    return status;",
                "+  void setText(char text[], int start, int length) {",
                "+    this.text = text;",
                "+    this.start = start;",
                "+    this.length = length;",
                "+    textIterator.setText(text, start, length);",
                "+    setText(textIterator);",
                "   }",
                "-  int next() {",
                "-    int current = rbbi.current();",
                "-    int next = rbbi.next();",
                "-    status = calcStatus(current, next);",
                "-    return next;",
                "+  /**",
                "+   * If it's a RuleBasedBreakIterator, the rule status can be used for token type. If it's",
                "+   * any other BreakIterator, the rulestatus method is not available, so treat",
                "+   * it like a generic BreakIterator.",
                "+   */",
                "+  static BreakIteratorWrapper wrap(BreakIterator breakIterator) {",
                "+    if (breakIterator instanceof RuleBasedBreakIterator)",
                "+      return new RBBIWrapper((RuleBasedBreakIterator) breakIterator);",
                "+    else",
                "+      return new BIWrapper(breakIterator);",
                "   }",
                "-  ",
                "-  /** Returns current rule status for the text between breaks. (determines token type) */",
                "-  private int calcStatus(int current, int next) {",
                "-    // to support presentation selectors, we need to handle alphanum, num, and none at least, so currently not worth optimizing.",
                "-    // https://unicode.org/cldr/utility/list-unicodeset.jsp?a=%5B%3AEmoji%3A%5D-%5B%3AEmoji_Presentation%3A%5D&g=Word_Break&i=",
                "-    if (next != BreakIterator.DONE && isEmoji(current, next)) {",
                "-      return ICUTokenizerConfig.EMOJI_SEQUENCE_STATUS;",
                "-    } else {",
                "+",
                "+  /**",
                "+   * RuleBasedBreakIterator wrapper: RuleBasedBreakIterator (as long as it's not",
                "+   * a DictionaryBasedBreakIterator) behaves correctly.",
                "+   */",
                "+  static final class RBBIWrapper extends BreakIteratorWrapper {",
                "+    private final RuleBasedBreakIterator rbbi;",
                "+",
                "+    RBBIWrapper(RuleBasedBreakIterator rbbi) {",
                "+      this.rbbi = rbbi;",
                "+    }",
                "+",
                "+    @Override",
                "+    int current() {",
                "+      return rbbi.current();",
                "+    }",
                "+",
                "+    @Override",
                "+    int getRuleStatus() {",
                "       return rbbi.getRuleStatus();",
                "     }",
                "+",
                "+    @Override",
                "+    int next() {",
                "+      return rbbi.next();",
                "+    }",
                "+",
                "+    @Override",
                "+    void setText(CharacterIterator text) {",
                "+      rbbi.setText(text);",
                "+    }",
                "   }",
                "-  ",
                "-  // See unicode doc L2/16-315 and also the RBBI rules for rationale.",
                "-  // we don't include regional indicators here, because they aren't ambiguous for tagging,",
                "-  // they need only be treated special for segmentation.",
                "-  static final UnicodeSet EMOJI_RK = new UnicodeSet(\"[\\u002a\\u00230-9\u00c2\u00a9\u00c2\u00ae\u00e2\u0084\u00a2\u00e3\u0080\u00b0\u00e3\u0080\u00bd]\").freeze();",
                "-",
                "-  /** Returns true if the current text represents emoji character or sequence */",
                "-  private boolean isEmoji(int current, int next) {",
                "-    int begin = start + current;",
                "-    int end = start + next;",
                "-    int codepoint = UTF16.charAt(text, 0, end, begin);",
                "-    // TODO: this can be made more aggressive and future-proof if it uses [:Extended_Pictographic:]",
                "-    if (UCharacter.hasBinaryProperty(codepoint, UProperty.EMOJI)) {",
                "-      if (EMOJI_RK.contains(codepoint)) {",
                "-        // if its in EmojiRK, we don't treat it as emoji unless there is evidence it forms emoji sequence,",
                "-        // an emoji presentation selector or keycap follows.",
                "-        int trailer = begin + Character.charCount(codepoint);",
                "-        return trailer < end && (text[trailer] == 0xFE0F || text[trailer] == 0x20E3);",
                "-      } else {",
                "-        return true;",
                "+",
                "+  /**",
                "+   * Generic BreakIterator wrapper: Either the rulestatus method is not",
                "+   * available or always returns 0. Calculate a rulestatus here so it behaves",
                "+   * like RuleBasedBreakIterator.",
                "+   * ",
                "+   * Note: This is slower than RuleBasedBreakIterator.",
                "+   */",
                "+  static final class BIWrapper extends BreakIteratorWrapper {",
                "+    private final BreakIterator bi;",
                "+    private int status;",
                "+",
                "+    BIWrapper(BreakIterator bi) {",
                "+      this.bi = bi;",
                "+    }",
                "+",
                "+    @Override",
                "+    int current() {",
                "+      return bi.current();",
                "+    }",
                "+",
                "+    @Override",
                "+    int getRuleStatus() {",
                "+      return status;",
                "+    }",
                "+",
                "+    @Override",
                "+    int next() {",
                "+      int current = bi.current();",
                "+      int next = bi.next();",
                "+      status = calcStatus(current, next);",
                "+      return next;",
                "+    }",
                "+",
                "+    private int calcStatus(int current, int next) {",
                "+      if (current == BreakIterator.DONE || next == BreakIterator.DONE)",
                "+        return RuleBasedBreakIterator.WORD_NONE;",
                "+",
                "+      int begin = start + current;",
                "+      int end = start + next;",
                "+",
                "+      int codepoint;",
                "+      for (int i = begin; i < end; i += UTF16.getCharCount(codepoint)) {",
                "+        codepoint = UTF16.charAt(text, 0, end, begin);",
                "+",
                "+        if (UCharacter.isDigit(codepoint))",
                "+          return RuleBasedBreakIterator.WORD_NUMBER;",
                "+        else if (UCharacter.isLetter(codepoint)) {",
                "+          // TODO: try to separately specify ideographic, kana? ",
                "+          // [currently all bundled as letter for this case]",
                "+          return RuleBasedBreakIterator.WORD_LETTER;",
                "+        }",
                "       }",
                "+",
                "+      return RuleBasedBreakIterator.WORD_NONE;",
                "     }",
                "-    return false;",
                "-  }",
                "-  void setText(char text[], int start, int length) {",
                "-    this.text = text;",
                "-    this.start = start;",
                "-    textIterator.setText(text, start, length);",
                "-    rbbi.setText(textIterator);",
                "-    status = RuleBasedBreakIterator.WORD_NONE;",
                "+    @Override",
                "+    void setText(CharacterIterator text) {",
                "+      bi.setText(text);",
                "+      status = RuleBasedBreakIterator.WORD_NONE;",
                "+    }",
                "   }",
                "diff --git a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/CompositeBreakIterator.java b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/CompositeBreakIterator.java",
                "index 3cb39edb92d..096eada2de3 100644",
                "--- a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/CompositeBreakIterator.java",
                "+++ b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/CompositeBreakIterator.java",
                "@@ -125,3 +125,3 @@ final class CompositeBreakIterator {",
                "     if (wordBreakers[scriptCode] == null)",
                "-      wordBreakers[scriptCode] = new BreakIteratorWrapper(config.getBreakIterator(scriptCode));",
                "+      wordBreakers[scriptCode] = BreakIteratorWrapper.wrap(config.getBreakIterator(scriptCode));",
                "     return wordBreakers[scriptCode];",
                "diff --git a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig.java b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig.java",
                "index 10e6c671817..50a6b4c71d8 100644",
                "--- a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig.java",
                "+++ b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig.java",
                "@@ -54,4 +54,2 @@ public class DefaultICUTokenizerConfig extends ICUTokenizerConfig {",
                "   public static final String WORD_NUMBER = StandardTokenizer.TOKEN_TYPES[StandardTokenizer.NUM];",
                "-  /** Token type for words that appear to be emoji sequences */",
                "-  public static final String WORD_EMOJI = StandardTokenizer.TOKEN_TYPES[StandardTokenizer.EMOJI];",
                "@@ -69,5 +67,5 @@ public class DefaultICUTokenizerConfig extends ICUTokenizerConfig {",
                "   // the same as ROOT, except no dictionary segmentation for cjk",
                "-  private static final RuleBasedBreakIterator defaultBreakIterator = ",
                "+  private static final BreakIterator defaultBreakIterator = ",
                "     readBreakIterator(\"Default.brk\");",
                "-  private static final RuleBasedBreakIterator myanmarSyllableIterator = ",
                "+  private static final BreakIterator myanmarSyllableIterator = ",
                "     readBreakIterator(\"MyanmarSyllable.brk\");",
                "@@ -99,12 +97,12 @@ public class DefaultICUTokenizerConfig extends ICUTokenizerConfig {",
                "   @Override",
                "-  public RuleBasedBreakIterator getBreakIterator(int script) {",
                "+  public BreakIterator getBreakIterator(int script) {",
                "     switch(script) {",
                "-      case UScript.JAPANESE: return (RuleBasedBreakIterator)cjkBreakIterator.clone();",
                "+      case UScript.JAPANESE: return (BreakIterator)cjkBreakIterator.clone();",
                "       case UScript.MYANMAR: ",
                "         if (myanmarAsWords) {",
                "-          return (RuleBasedBreakIterator)defaultBreakIterator.clone();",
                "+          return (BreakIterator)defaultBreakIterator.clone();",
                "         } else {",
                "-          return (RuleBasedBreakIterator)myanmarSyllableIterator.clone();",
                "+          return (BreakIterator)myanmarSyllableIterator.clone();",
                "         }",
                "-      default: return (RuleBasedBreakIterator)defaultBreakIterator.clone();",
                "+      default: return (BreakIterator)defaultBreakIterator.clone();",
                "     }",
                "@@ -123,4 +121,2 @@ public class DefaultICUTokenizerConfig extends ICUTokenizerConfig {",
                "         return WORD_NUMBER;",
                "-      case EMOJI_SEQUENCE_STATUS:",
                "-        return WORD_EMOJI;",
                "       default: /* some other custom code */",
                "diff --git a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerConfig.java b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerConfig.java",
                "index e2d3dae3d75..69694fc0780 100644",
                "--- a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerConfig.java",
                "+++ b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerConfig.java",
                "@@ -18,3 +18,4 @@ package org.apache.lucene.analysis.icu.segmentation;",
                "-import com.ibm.icu.text.RuleBasedBreakIterator;",
                "+",
                "+import com.ibm.icu.text.BreakIterator;",
                "@@ -26,5 +27,3 @@ import com.ibm.icu.text.RuleBasedBreakIterator;",
                " public abstract class ICUTokenizerConfig {",
                "-  /** Rule status for emoji sequences */",
                "-  public static final int EMOJI_SEQUENCE_STATUS = 299;",
                "-",
                "+  ",
                "   /**",
                "@@ -35,3 +34,3 @@ public abstract class ICUTokenizerConfig {",
                "   /** Return a breakiterator capable of processing a given script. */",
                "-  public abstract RuleBasedBreakIterator getBreakIterator(int script);",
                "+  public abstract BreakIterator getBreakIterator(int script);",
                "   /** Return a token type value for a given script and BreakIterator",
                "diff --git a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory.java b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory.java",
                "index 0cd4cf28e5f..4d29b0c36bc 100644",
                "--- a/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory.java",
                "+++ b/lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory.java",
                "@@ -118,5 +118,5 @@ public class ICUTokenizerFactory extends TokenizerFactory implements ResourceLoa",
                "         @Override",
                "-        public RuleBasedBreakIterator getBreakIterator(int script) {",
                "+        public BreakIterator getBreakIterator(int script) {",
                "           if (breakers[script] != null) {",
                "-            return (RuleBasedBreakIterator) breakers[script].clone();",
                "+            return (BreakIterator) breakers[script].clone();",
                "           } else {",
                "diff --git a/lucene/core/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java b/lucene/core/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java",
                "index 50d1f9fb5d0..04101246460 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java",
                "@@ -56,4 +56,2 @@ public final class StandardTokenizer extends Tokenizer {",
                "   public static final int HANGUL = 6;",
                "-  /** Emoji token type. */",
                "-  public static final int EMOJI = 7;",
                "@@ -67,4 +65,3 @@ public final class StandardTokenizer extends Tokenizer {",
                "     \"<KATAKANA>\",",
                "-    \"<HANGUL>\",",
                "-    \"<EMOJI>\"",
                "+    \"<HANGUL>\"",
                "   };"
            ],
            "changed_files": [
                "lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.java",
                "lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/CompositeBreakIterator.java",
                "lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig.java",
                "lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerConfig.java",
                "lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/ICUTokenizerFactory.java",
                "lucene/core/src/java/org/apache/lucene/analysis/standard/StandardTokenizer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8125": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "fafbb2635d9931f827410fa7fc5cec859bd6c925"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8125",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "93c892942cb689aca81d47140f087e61795cd500",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520357811,
            "hunks": 2,
            "message": "Add version 6.6.3 to DOAP files",
            "diff": [
                "diff --git a/dev-tools/doap/lucene.rdf b/dev-tools/doap/lucene.rdf",
                "index 4e40c1f8b40..315f8b9a0ba 100644",
                "--- a/dev-tools/doap/lucene.rdf",
                "+++ b/dev-tools/doap/lucene.rdf",
                "@@ -69,2 +69,9 @@",
                "     <!-- NOTE: please insert releases in numeric order, NOT chronologically. -->",
                "+    <release>",
                "+      <Version>",
                "+        <name>lucene-6.6.3</name>",
                "+        <created>2018-03-07</created>",
                "+        <revision>6.6.3</revision>",
                "+      </Version>",
                "+    </release>",
                "     <release>",
                "diff --git a/dev-tools/doap/solr.rdf b/dev-tools/doap/solr.rdf",
                "index 6ed4d1d35f5..ec5cc90101d 100644",
                "--- a/dev-tools/doap/solr.rdf",
                "+++ b/dev-tools/doap/solr.rdf",
                "@@ -69,2 +69,9 @@",
                "     <!-- NOTE: please insert releases in numeric order, NOT chronologically. -->",
                "+    <release>",
                "+      <Version>",
                "+        <name>solr-6.6.3</name>",
                "+        <created>2018-03-07</created>",
                "+        <revision>6.6.3</revision>",
                "+      </Version>",
                "+    </release>",
                "     <release>"
            ],
            "changed_files": [
                "dev-tools/doap/lucene.rdf",
                "dev-tools/doap/solr.rdf"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/6.6.4",
                "releases/lucene-solr/6.6.5",
                "releases/lucene-solr/6.6.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: file",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f22ab1b0b2e18edb3ce7a01142161ad199aad433",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520017198,
            "hunks": 1,
            "message": "LUCENE-6271: docs: TermsEnum.postings(...) will not return null (cherry picked from commit 79c2988)",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/TermsEnum.java b/lucene/core/src/java/org/apache/lucene/index/TermsEnum.java",
                "index c4b1017b079..76c3855083c 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/TermsEnum.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/TermsEnum.java",
                "@@ -161,4 +161,3 @@ public abstract class TermsEnum implements BytesRefIterator {",
                "    *  are required.  Do not call this when the enum is",
                "-   *  unpositioned.  This method may return null if the postings",
                "-   *  information required is not available from the index",
                "+   *  unpositioned.  This method will not return null.",
                "    *  <p>"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/index/TermsEnum.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-6271": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "79c2988547274612efd7ef589dc0afff76548640"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-6271",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "588e19eda17f8145c820c3ba0caf951d44467883",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520566239,
            "hunks": 3,
            "message": "SOLR-11976: TokenizerChain.normalize was only considering the first MultiTermAwareComponent",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/analysis/TokenizerChain.java b/solr/core/src/java/org/apache/solr/analysis/TokenizerChain.java",
                "index ab5458c4a72..af7e81204fe 100644",
                "--- a/solr/core/src/java/org/apache/solr/analysis/TokenizerChain.java",
                "+++ b/solr/core/src/java/org/apache/solr/analysis/TokenizerChain.java",
                "@@ -18,3 +18,6 @@ package org.apache.solr.analysis;",
                "-import org.apache.lucene.analysis.*;",
                "+import java.io.Reader;",
                "+",
                "+import org.apache.lucene.analysis.TokenStream;",
                "+import org.apache.lucene.analysis.Tokenizer;",
                " import org.apache.lucene.analysis.util.CharFilterFactory;",
                "@@ -24,4 +27,2 @@ import org.apache.lucene.analysis.util.TokenizerFactory;",
                "-import java.io.Reader;",
                "-",
                " /**",
                "@@ -115,3 +116,3 @@ public final class TokenizerChain extends SolrAnalyzer {",
                "         filter = (TokenFilterFactory) ((MultiTermAwareComponent) filter).getMultiTermComponent();",
                "-        result = filter.create(in);",
                "+        result = filter.create(result);",
                "       }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/analysis/TokenizerChain.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11976": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "de53746880edf0271ea967bf8b561cf5bc5a7194"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11976",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f4c19a0195992c0692708f6e3934aab5a311d0fb",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520245425,
            "hunks": 3,
            "message": "SOLR-11957: Update ref guide and bin/solr script with the new values (cherry picked from commit 2620d36)",
            "diff": [
                "diff --git a/solr/bin/solr b/solr/bin/solr",
                "index 4e178de9450..47861ad9435 100755",
                "--- a/solr/bin/solr",
                "+++ b/solr/bin/solr",
                "@@ -1825,3 +1825,3 @@ if [ \"${SOLR_LOG_PRESTART_ROTATION:=true}\" == \"true\" ]; then",
                "   run_tool utils -s \"$DEFAULT_SERVER_DIR\" -l \"$SOLR_LOGS_DIR\" $q -archive_console_logs   || echo \"Failed archiving old console logs\"",
                "-  run_tool utils -s \"$DEFAULT_SERVER_DIR\" -l \"$SOLR_LOGS_DIR\" $q -rotate_solr_logs 9     || echo \"Failed rotating old solr logs\"",
                "+  run_tool utils -s \"$DEFAULT_SERVER_DIR\" -l \"$SOLR_LOGS_DIR\" $q -rotate_solr_logs 10    || echo \"Failed rotating old solr logs\"",
                " fi",
                "diff --git a/solr/solr-ref-guide/src/configuring-logging.adoc b/solr/solr-ref-guide/src/configuring-logging.adoc",
                "index 8984744e553..76f1fd65396 100644",
                "--- a/solr/solr-ref-guide/src/configuring-logging.adoc",
                "+++ b/solr/solr-ref-guide/src/configuring-logging.adoc",
                "@@ -92,3 +92,3 @@ When starting Solr in the foreground (`-f` option), all logs will be sent to the",
                "-Also, in `log4j.properties` the default log rotation size threshold of 4MB is most likely too small for production servers and should be increased to a larger value (such as 100MB or more).",
                "+Also, in `log4j.properties` if the default log rotation size threshold of 32MB is too small for production servers then you should increase it to a larger value (such as 100MB or more).",
                "@@ -101,3 +101,3 @@ Java Garbage Collection logs are rotated by the JVM when size hits 20M, for a ma",
                "-On every startup of Solr, the start script will clean up old logs and rotate the main `solr.log` file. If you changed the `log4j.appender.file.MaxBackupIndex` setting in `log4j.properties`, you also need to change the corresponding setting `-rotate_solr_logs 9` in the start script.",
                "+On every startup of Solr, the start script will clean up old logs and rotate the main `solr.log` file. If you changed the `log4j.appender.file.MaxBackupIndex` setting in `log4j.properties`, you also need to change the corresponding setting `-rotate_solr_logs 10` in the start script."
            ],
            "changed_files": [
                "solr/bin/solr",
                "solr/solr-ref-guide/src/configuring-logging.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11957": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2620d36bbd16fc866554bd19550034f5cc716495"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11957",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ee968109f3d487ef44923cdc5dc05f7d397ff67d",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518533584,
            "hunks": 6,
            "message": "LUCENE-8171: Refactor vector constructor to support later changes, and add an ignored test for a precision issue.",
            "diff": [
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/SidedPlane.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/SidedPlane.java",
                "index 404135aaa49..9eb2040bf9e 100755",
                "--- a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/SidedPlane.java",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/SidedPlane.java",
                "@@ -179,10 +179,35 @@ public class SidedPlane extends Plane implements Membership {",
                "     final Vector point1, final Vector point2, final Vector point3) {",
                "-    try {",
                "-      final Vector planeNormal = new Vector(",
                "-        new Vector(point1.x - point2.x, point1.y - point2.y, point1.z - point2.z),",
                "-        new Vector(point2.x - point3.x, point2.y - point3.y, point2.z - point3.z));",
                "-      return new SidedPlane(insidePoint, planeNormal, -planeNormal.dotProduct(point2));",
                "-    } catch (IllegalArgumentException e) {",
                "-      return null;",
                "+    SidedPlane rval = null;",
                "+      ",
                "+    if (rval == null) {",
                "+      try {",
                "+        final Vector planeNormal = new Vector(",
                "+          point1.x - point2.x, point1.y - point2.y, point1.z - point2.z,",
                "+          point2.x - point3.x, point2.y - point3.y, point2.z - point3.z);",
                "+        rval = new SidedPlane(insidePoint, planeNormal, -planeNormal.dotProduct(point2));",
                "+      } catch (IllegalArgumentException e) {",
                "+      }",
                "+    }",
                "+    ",
                "+    if (rval == null) {",
                "+      try {",
                "+        final Vector planeNormal = new Vector(",
                "+          point1.x - point3.x, point1.y - point3.y, point1.z - point3.z,",
                "+          point3.x - point2.x, point3.y - point2.y, point3.z - point2.z);",
                "+        rval = new SidedPlane(insidePoint, planeNormal, -planeNormal.dotProduct(point3));",
                "+      } catch (IllegalArgumentException e) {",
                "+      }",
                "+    }",
                "+",
                "+    if (rval == null) {",
                "+      try {",
                "+        final Vector planeNormal = new Vector(",
                "+          point3.x - point1.x, point3.y - point1.y, point3.z - point1.z,",
                "+          point1.x - point2.x, point1.y - point2.y, point1.z - point2.z);",
                "+        rval = new SidedPlane(insidePoint, planeNormal, -planeNormal.dotProduct(point1));",
                "+      } catch (IllegalArgumentException e) {",
                "+      }",
                "     }",
                "+    ",
                "+    return rval;",
                "   }",
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "index f901d291f21..5209df8fb96 100755",
                "--- a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java",
                "@@ -74,2 +74,20 @@ public class Vector {",
                "   public Vector(final Vector A, final double BX, final double BY, final double BZ) {",
                "+    // We're really looking at two vectors and computing a perpendicular one from that.",
                "+    this(A.x, A.y, A.z, BX, BY, BZ);",
                "+  }",
                "+  ",
                "+  /**",
                "+   * Construct a vector that is perpendicular to",
                "+   * two other (non-zero) vectors.  If the vectors are parallel,",
                "+   * IllegalArgumentException will be thrown.",
                "+   * Produces a normalized final vector.",
                "+   *",
                "+   * @param AX is the X value of the first ",
                "+   * @param AY is the Y value of the first",
                "+   * @param AZ is the Z value of the first",
                "+   * @param BX is the X value of the second ",
                "+   * @param BY is the Y value of the second",
                "+   * @param BZ is the Z value of the second",
                "+   */",
                "+  public Vector(final double AX, final double AY, final double AZ, final double BX, final double BY, final double BZ) {",
                "     // We're really looking at two vectors and computing a perpendicular one from that.",
                "@@ -85,5 +103,5 @@ public class Vector {",
                "     // Compute the naive perpendicular",
                "-    final double thisX = A.y * BZ - A.z * BY;",
                "-    final double thisY = A.z * BX - A.x * BZ;",
                "-    final double thisZ = A.x * BY - A.y * BX;",
                "+    final double thisX = AY * BZ - AZ * BY;",
                "+    final double thisY = AZ * BX - AX * BZ;",
                "+    final double thisZ = AX * BY - AY * BX;",
                "@@ -105,3 +123,3 @@ public class Vector {",
                "     while (true) {",
                "-      final double currentDotProdA = A.x * normalizeX + A.y * normalizeY + A.z * normalizeZ;",
                "+      final double currentDotProdA = AX * normalizeX + AY * normalizeY + AZ * normalizeZ;",
                "       final double currentDotProdB = BX * normalizeX + BY * normalizeY + BZ * normalizeZ;",
                "@@ -116,5 +134,5 @@ public class Vector {",
                "       if (Math.abs(currentDotProdA) > Math.abs(currentDotProdB)) {",
                "-        currentVectorX = A.x;",
                "-        currentVectorY = A.y;",
                "-        currentVectorZ = A.z;",
                "+        currentVectorX = AX;",
                "+        currentVectorY = AY;",
                "+        currentVectorZ = AZ;",
                "         currentDotProd = currentDotProdA;"
            ],
            "changed_files": [
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/SidedPlane.java",
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Vector.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8171": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2cdb57b7dc008fa7d18b1658722138436f047dbb"
                ],
                [
                    "no-tag",
                    "4f351fd21bdbec2bf6a27bb6014bb1d8e511ee92"
                ]
            ],
            "tags": [],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8171",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "53640b95d8d04a723bf05cd02b282656d98cc64a",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518723839,
            "hunks": 1,
            "message": "SOLR-6057: Change highlight color in UI Analysis screen",
            "diff": [
                "diff --git a/solr/webapp/web/css/angular/analysis.css b/solr/webapp/web/css/angular/analysis.css",
                "index 1e66c7b61db..19f41bd81b6 100644",
                "--- a/solr/webapp/web/css/angular/analysis.css",
                "+++ b/solr/webapp/web/css/angular/analysis.css",
                "@@ -218,4 +218,3 @@ limitations under the License.",
                " {",
                "-  background-color: #e9eff7;",
                "-  background-color: #f2f2ff;",
                "+  background-color: #F0D9C3;",
                " }"
            ],
            "changed_files": [
                "solr/webapp/web/css/angular/analysis.css"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-6057": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b897841bfe2cf5c1790b51e78db182569cbe7554"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-6057",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6ae6ce2f42b61b117c31149ac87b1cb3d6ffe440",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518443389,
            "hunks": 39,
            "message": "LUCENE-8152: Improve consumption of doc-value iterators.",
            "diff": [
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsCollector.java b/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsCollector.java",
                "index 15ce023ab51..83136b70746 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsCollector.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsCollector.java",
                "@@ -79,6 +79,3 @@ final class GlobalOrdinalsCollector implements Collector {",
                "     public void collect(int doc) throws IOException {",
                "-      if (doc > docTermOrds.docID()) {",
                "-        docTermOrds.advance(doc);",
                "-      }",
                "-      if (doc == docTermOrds.docID()) {",
                "+      if (docTermOrds.advanceExact(doc)) {",
                "         long segmentOrd = docTermOrds.ordValue();",
                "@@ -104,6 +101,3 @@ final class GlobalOrdinalsCollector implements Collector {",
                "     public void collect(int doc) throws IOException {",
                "-      if (doc > docTermOrds.docID()) {",
                "-        docTermOrds.advance(doc);",
                "-      }",
                "-      if (doc == docTermOrds.docID()) {",
                "+      if (docTermOrds.advanceExact(doc)) {",
                "         collectedOrds.set(docTermOrds.ordValue());",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsQuery.java b/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsQuery.java",
                "index b1c0b91adfb..72dae96e28b 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsQuery.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsQuery.java",
                "@@ -184,7 +184,3 @@ final class GlobalOrdinalsQuery extends Query {",
                "         public boolean matches() throws IOException {",
                "-          int docID = approximation.docID();",
                "-          if (docID > values.docID()) {",
                "-            values.advance(docID);",
                "-          }",
                "-          if (docID == values.docID()) {",
                "+          if (values.advanceExact(approximation.docID())) {",
                "             final long segmentOrd = values.ordValue();",
                "@@ -222,10 +218,4 @@ final class GlobalOrdinalsQuery extends Query {",
                "         public boolean matches() throws IOException {",
                "-          int docID = approximation.docID();",
                "-          if (docID > values.docID()) {",
                "-            values.advance(docID);",
                "-          }",
                "-          if (docID == values.docID()) {",
                "-            if (foundOrds.get(values.ordValue())) {",
                "-              return true;",
                "-            }",
                "+          if (values.advanceExact(approximation.docID()) && foundOrds.get(values.ordValue())) {",
                "+            return true;",
                "           }",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector.java b/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector.java",
                "index a5574166ac2..45352ef4e45 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector.java",
                "@@ -115,6 +115,3 @@ abstract class GlobalOrdinalsWithScoreCollector implements Collector {",
                "     public void collect(int doc) throws IOException {",
                "-      if (doc > docTermOrds.docID()) {",
                "-        docTermOrds.advance(doc);",
                "-      }",
                "-      if (doc == docTermOrds.docID()) {",
                "+      if (docTermOrds.advanceExact(doc)) {",
                "         final int globalOrd = (int) segmentOrdToGlobalOrdLookup.get(docTermOrds.ordValue());",
                "@@ -147,6 +144,3 @@ abstract class GlobalOrdinalsWithScoreCollector implements Collector {",
                "     public void collect(int doc) throws IOException {",
                "-      if (doc > docTermOrds.docID()) {",
                "-        docTermOrds.advance(doc);",
                "-      }",
                "-      if (doc == docTermOrds.docID()) {",
                "+      if (docTermOrds.advanceExact(doc)) {",
                "         int segmentOrd = docTermOrds.ordValue();",
                "@@ -260,6 +254,3 @@ abstract class GlobalOrdinalsWithScoreCollector implements Collector {",
                "           public void collect(int doc) throws IOException {",
                "-            if (doc > docTermOrds.docID()) {",
                "-              docTermOrds.advance(doc);",
                "-            }",
                "-            if (doc == docTermOrds.docID()) {",
                "+            if (docTermOrds.advanceExact(doc)) {",
                "               final int globalOrd = (int) segmentOrdToGlobalOrdLookup.get(docTermOrds.ordValue());",
                "@@ -278,6 +269,3 @@ abstract class GlobalOrdinalsWithScoreCollector implements Collector {",
                "           public void collect(int doc) throws IOException {",
                "-            if (doc > docTermOrds.docID()) {",
                "-              docTermOrds.advance(doc);",
                "-            }",
                "-            if (doc == docTermOrds.docID()) {",
                "+            if (docTermOrds.advanceExact(doc)) {",
                "               int segmentOrd = docTermOrds.ordValue();",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.java b/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.java",
                "index 7946559cc59..7c361c8c741 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.java",
                "@@ -193,7 +193,3 @@ final class GlobalOrdinalsWithScoreQuery extends Query {",
                "         public boolean matches() throws IOException {",
                "-          int docID = approximation.docID();",
                "-          if (docID > values.docID()) {",
                "-            values.advance(docID);",
                "-          }",
                "-          if (docID == values.docID()) {",
                "+          if (values.advanceExact(approximation.docID())) {",
                "             final long segmentOrd = values.ordValue();",
                "@@ -231,7 +227,3 @@ final class GlobalOrdinalsWithScoreQuery extends Query {",
                "         public boolean matches() throws IOException {",
                "-          int docID = approximation.docID();",
                "-          if (docID > values.docID()) {",
                "-            values.advance(docID);",
                "-          }",
                "-          if (docID == values.docID()) {",
                "+          if (values.advanceExact(approximation.docID())) {",
                "             final int segmentOrd = values.ordValue();",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/JoinUtil.java b/lucene/join/src/java/org/apache/lucene/search/join/JoinUtil.java",
                "index c0f380dd113..e9c932f8368 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/JoinUtil.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/JoinUtil.java",
                "@@ -201,6 +201,3 @@ public final class JoinUtil {",
                "         public void collect(int doc) throws IOException {",
                "-          if (doc > sortedNumericDocValues.docID()) {",
                "-            sortedNumericDocValues.advance(doc);",
                "-          }",
                "-          if (doc == sortedNumericDocValues.docID()) {",
                "+          if (sortedNumericDocValues.advanceExact(doc)) {",
                "             for (int i = 0; i < sortedNumericDocValues.docValueCount(); i++) {",
                "@@ -248,11 +245,5 @@ public final class JoinUtil {",
                "           assert docsInOrder(doc);",
                "-          int dvDocID = numericDocValues.docID();",
                "-          if (dvDocID < doc) {",
                "-            dvDocID = numericDocValues.advance(doc);",
                "-          }",
                "-          long value;",
                "-          if (dvDocID == doc) {",
                "+          long value = 0;",
                "+          if (numericDocValues.advanceExact(doc)) {",
                "             value = numericDocValues.longValue();",
                "-          } else {",
                "-            value = 0;",
                "           }",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/TermsCollector.java b/lucene/join/src/java/org/apache/lucene/search/join/TermsCollector.java",
                "index 8475af76552..c6f53cbfb05 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/TermsCollector.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/TermsCollector.java",
                "@@ -86,7 +86,4 @@ abstract class TermsCollector<DV> extends DocValuesTermsCollector<DV> {",
                "     public void collect(int doc) throws IOException {",
                "-      if (docValues.docID() < doc) {",
                "-        docValues.advance(doc);",
                "-      }",
                "       BytesRef term;",
                "-      if (docValues.docID() == doc) {",
                "+      if (docValues.advanceExact(doc)) {",
                "         term = docValues.binaryValue();",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/TermsWithScoreCollector.java b/lucene/join/src/java/org/apache/lucene/search/join/TermsWithScoreCollector.java",
                "index 22fc54d432b..a2949491cda 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/TermsWithScoreCollector.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/TermsWithScoreCollector.java",
                "@@ -98,7 +98,4 @@ abstract class TermsWithScoreCollector<DV> extends DocValuesTermsCollector<DV>",
                "     public void collect(int doc) throws IOException {",
                "-      if (docValues.docID() < doc) {",
                "-        docValues.advance(doc);",
                "-      }",
                "       BytesRef value;",
                "-      if (docValues.docID() == doc) {",
                "+      if (docValues.advanceExact(doc)) {",
                "         value = docValues.binaryValue();",
                "@@ -157,7 +154,4 @@ abstract class TermsWithScoreCollector<DV> extends DocValuesTermsCollector<DV>",
                "       public void collect(int doc) throws IOException {",
                "-        if (docValues.docID() < doc) {",
                "-          docValues.advance(doc);",
                "-        }",
                "         BytesRef value;",
                "-        if (docValues.docID() == doc) {",
                "+        if (docValues.advanceExact(doc)) {",
                "           value = docValues.binaryValue();",
                "@@ -209,6 +203,3 @@ abstract class TermsWithScoreCollector<DV> extends DocValuesTermsCollector<DV>",
                "     public void collect(int doc) throws IOException {",
                "-      if (doc > docValues.docID()) {",
                "-        docValues.advance(doc);",
                "-      }",
                "-      if (doc == docValues.docID()) {",
                "+      if (docValues.advanceExact(doc)) {",
                "         long ord;",
                "@@ -257,6 +248,3 @@ abstract class TermsWithScoreCollector<DV> extends DocValuesTermsCollector<DV>",
                "       public void collect(int doc) throws IOException {",
                "-        if (doc > docValues.docID()) {",
                "-          docValues.advance(doc);",
                "-        }",
                "-        if (doc == docValues.docID()) {",
                "+        if (docValues.advanceExact(doc)) {",
                "           long ord;",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java b/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java",
                "index 1c624e1c209..dcd1cbc81fa 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java",
                "@@ -592,6 +592,3 @@ public class ExpandComponent extends SearchComponent implements PluginInfoInitia",
                "           } else {",
                "-            if (globalDoc > docValues.docID()) {",
                "-              docValues.advance(globalDoc);",
                "-            }",
                "-            if (globalDoc == docValues.docID()) {",
                "+            if (docValues.advanceExact(globalDoc)) {",
                "               ord = docValues.ordValue();",
                "@@ -665,8 +662,4 @@ public class ExpandComponent extends SearchComponent implements PluginInfoInitia",
                "         public void collect(int docId) throws IOException {",
                "-          int valuesDocID = docValues.docID();",
                "-          if (valuesDocID < docId) {",
                "-            valuesDocID = docValues.advance(docId);",
                "-          }",
                "           long value;",
                "-          if (valuesDocID == docId) {",
                "+          if (docValues.advanceExact(docId)) {",
                "             value = docValues.longValue();",
                "diff --git a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "index 8c93b529be6..6b96087d34c 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "@@ -556,6 +556,3 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "         //Handle ordinalMapping case",
                "-        if (contextDoc > segmentValues.docID()) {",
                "-          segmentValues.advance(contextDoc);",
                "-        }",
                "-        if (contextDoc == segmentValues.docID()) {",
                "+        if (segmentValues.advanceExact(contextDoc)) {",
                "           ord = (int)segmentOrdinalMap.get(segmentValues.ordValue());",
                "@@ -566,6 +563,3 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "         //Handle top Level FieldCache or Single Segment Case",
                "-        if (globalDoc > segmentValues.docID()) {",
                "-          segmentValues.advance(globalDoc);",
                "-        }",
                "-        if (globalDoc == segmentValues.docID()) {",
                "+        if (segmentValues.advanceExact(globalDoc)) {",
                "           ord = segmentValues.ordValue();",
                "@@ -782,10 +776,4 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "     public void collect(int contextDoc) throws IOException {",
                "-",
                "-      int collapseDocID = collapseValues.docID();",
                "-      if (collapseDocID < contextDoc) {",
                "-        collapseDocID = collapseValues.advance(contextDoc);",
                "-      }",
                "-",
                "       int collapseValue;",
                "-      if (collapseDocID == contextDoc) {",
                "+      if (collapseValues.advanceExact(contextDoc)) {",
                "         collapseValue = (int) collapseValues.longValue();",
                "@@ -1018,6 +1006,3 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "       } else {",
                "-        if (globalDoc > segmentValues.docID()) {",
                "-          segmentValues.advance(globalDoc);",
                "-        }",
                "-        if (globalDoc == segmentValues.docID()) {",
                "+        if (segmentValues.advanceExact(globalDoc)) {",
                "           ord = segmentValues.ordValue();",
                "@@ -1193,9 +1178,4 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "     public void collect(int contextDoc) throws IOException {",
                "-      int collapseDocID = collapseValues.docID();",
                "-      if (collapseDocID < contextDoc) {",
                "-        collapseDocID = collapseValues.advance(contextDoc);",
                "-      }",
                "-",
                "       int collapseKey;",
                "-      if (collapseDocID == contextDoc) {",
                "+      if (collapseValues.advanceExact(contextDoc)) {",
                "         collapseKey = (int) collapseValues.longValue();",
                "diff --git a/solr/core/src/java/org/apache/solr/search/IGainTermsQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/IGainTermsQParserPlugin.java",
                "index 053f50f4055..c9e14344632 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/IGainTermsQParserPlugin.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/IGainTermsQParserPlugin.java",
                "@@ -127,8 +127,4 @@ public class IGainTermsQParserPlugin extends QParserPlugin {",
                "       ++count;",
                "-      int valuesDocID = leafOutcomeValue.docID();",
                "-      if (valuesDocID < doc) {",
                "-        valuesDocID = leafOutcomeValue.advance(doc);",
                "-      }",
                "       int value;",
                "-      if (valuesDocID == doc) {",
                "+      if (leafOutcomeValue.advanceExact(doc)) {",
                "         value = (int) leafOutcomeValue.longValue();",
                "diff --git a/solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.java",
                "index 842f746c56a..5d3bb46d4f2 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.java",
                "@@ -152,8 +152,4 @@ public class TextLogisticRegressionQParserPlugin extends QParserPlugin {",
                "     public void collect(int doc) throws IOException{",
                "-      int valuesDocID = leafOutcomeValue.docID();",
                "-      if (valuesDocID < doc) {",
                "-        valuesDocID = leafOutcomeValue.advance(doc);",
                "-      }",
                "       int outcome;",
                "-      if (valuesDocID == doc) {",
                "+      if (leafOutcomeValue.advanceExact(doc)) {",
                "         outcome = (int) leafOutcomeValue.longValue();",
                "diff --git a/solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByHashDV.java b/solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByHashDV.java",
                "index 2383a14dcd4..7691970a29c 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByHashDV.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByHashDV.java",
                "@@ -388,6 +388,3 @@ class FacetFieldProcessorByHashDV extends FacetFieldProcessor {",
                "           public void collect(int segDoc) throws IOException {",
                "-            if (segDoc > values.docID()) {",
                "-              values.advance(segDoc);",
                "-            }",
                "-            if (segDoc == values.docID()) {",
                "+            if (values.advanceExact(segDoc)) {",
                "               long l = values.nextValue(); // This document must have at least one value",
                "@@ -419,6 +416,3 @@ class FacetFieldProcessorByHashDV extends FacetFieldProcessor {",
                "           public void collect(int segDoc) throws IOException {",
                "-            if (segDoc > values.docID()) {",
                "-              values.advance(segDoc);",
                "-            }",
                "-            if (segDoc == values.docID()) {",
                "+            if (values.advanceExact(segDoc)) {",
                "               collectValFirstPhase(segDoc, values.longValue());",
                "diff --git a/solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.java b/solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.java",
                "index ac8bf0bdf3e..8d4dc4dee19 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.java",
                "@@ -337,6 +337,3 @@ public class MinMaxAgg extends SimpleAggValueSource {",
                "     public void collect(int doc, int slotNum) throws IOException {",
                "-      if (doc > subDv.docID()) {",
                "-        subDv.advance(doc);",
                "-      }",
                "-      if (doc == subDv.docID()) {",
                "+      if (subDv.advanceExact(doc)) {",
                "         int segOrd = subDv.ordValue();",
                "diff --git a/solr/core/src/java/org/apache/solr/search/facet/UniqueMultiDvSlotAcc.java b/solr/core/src/java/org/apache/solr/search/facet/UniqueMultiDvSlotAcc.java",
                "index 02d457fe412..af419a4d96a 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/facet/UniqueMultiDvSlotAcc.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/facet/UniqueMultiDvSlotAcc.java",
                "@@ -73,6 +73,3 @@ class UniqueMultiDvSlotAcc extends UniqueSlotAcc {",
                "   public void collect(int doc, int slotNum) throws IOException {",
                "-    if (doc > subDv.docID()) {",
                "-      subDv.advance(doc);",
                "-    }",
                "-    if (doc == subDv.docID()) {",
                "+    if (subDv.advanceExact(doc)) {"
            ],
            "changed_files": [
                "lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsCollector.java",
                "lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsQuery.java",
                "lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreCollector.java",
                "lucene/join/src/java/org/apache/lucene/search/join/GlobalOrdinalsWithScoreQuery.java",
                "lucene/join/src/java/org/apache/lucene/search/join/JoinUtil.java",
                "lucene/join/src/java/org/apache/lucene/search/join/TermsCollector.java",
                "lucene/join/src/java/org/apache/lucene/search/join/TermsWithScoreCollector.java",
                "solr/core/src/java/org/apache/solr/handler/component/ExpandComponent.java",
                "solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "solr/core/src/java/org/apache/solr/search/IGainTermsQParserPlugin.java",
                "solr/core/src/java/org/apache/solr/search/TextLogisticRegressionQParserPlugin.java",
                "solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByHashDV.java",
                "solr/core/src/java/org/apache/solr/search/facet/MinMaxAgg.java",
                "solr/core/src/java/org/apache/solr/search/facet/UniqueMultiDvSlotAcc.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8152": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "aa157f18335a6f09119860cbf862ce6e218a179e"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8152",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ad9182a0c970597f4f5e946ca80ccf93e0dff0b9",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519675823,
            "hunks": 8,
            "message": "SOLR-11923: Add bicubicSpline Stream Evaluator",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/StreamHandler.java b/solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "index d1c14229b45..1b34d85a63e 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "@@ -319,2 +319,3 @@ public class StreamHandler extends RequestHandlerBase implements SolrCoreAware,",
                "         .withFunctionName(\"matrixMult\", MatrixMultiplyEvaluator.class)",
                "+        .withFunctionName(\"bicubicSpline\", BicubicSplineEvaluator.class)",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/BicubicSplineEvaluator.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/BicubicSplineEvaluator.java",
                "new file mode 100644",
                "index 00000000000..34ee5b24003",
                "--- /dev/null",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/BicubicSplineEvaluator.java",
                "@@ -0,0 +1,74 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.solr.client.solrj.io.eval;",
                "+",
                "+import java.io.IOException;",
                "+import java.util.List;",
                "+",
                "+import org.apache.commons.math3.analysis.BivariateFunction;",
                "+import org.apache.commons.math3.analysis.interpolation.PiecewiseBicubicSplineInterpolator;",
                "+import org.apache.solr.client.solrj.io.stream.expr.StreamExpression;",
                "+import org.apache.solr.client.solrj.io.stream.expr.StreamFactory;",
                "+",
                "+public class BicubicSplineEvaluator extends RecursiveObjectEvaluator implements ManyValueWorker {",
                "+  protected static final long serialVersionUID = 1L;",
                "+",
                "+  public BicubicSplineEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{",
                "+    super(expression, factory);",
                "+  }",
                "+",
                "+  @Override",
                "+  public Object doWork(Object... objects) throws IOException {",
                "+",
                "+    if(objects.length != 3) {",
                "+      throw new IOException(\"The bicubicSpline function requires three paremeters,\"+objects.length+\" found.\");",
                "+    }",
                "+",
                "+    Object first = objects[0];",
                "+    Object second = objects[1];",
                "+    Object third = objects[2];",
                "+",
                "+    double[] x = null;",
                "+    double[] y = null;",
                "+    double[][] grid = null;",
                "+",
                "+    if(first instanceof List && second instanceof List && third instanceof Matrix) {",
                "+      List<Number> xlist = (List<Number>) first;",
                "+      x = new double[xlist.size()];",
                "+",
                "+      for(int i=0; i<x.length; i++) {",
                "+        x[i]=xlist.get(i).doubleValue();",
                "+      }",
                "+",
                "+      List<Number> ylist = (List<Number>) second;",
                "+      y = new double[ylist.size()];",
                "+",
                "+      for(int i=0; i<y.length; i++) {",
                "+        y[i] = ylist.get(i).doubleValue();",
                "+      }",
                "+",
                "+      Matrix matrix = (Matrix)third;",
                "+      grid = matrix.getData();",
                "+",
                "+      PiecewiseBicubicSplineInterpolator interpolator = new PiecewiseBicubicSplineInterpolator();",
                "+      BivariateFunction bivariateFunction = interpolator.interpolate(x, y, grid);",
                "+      return bivariateFunction;",
                "+    } else {",
                "+      throw new IOException(\"The bicubicSpline function expects two numeric arrays and a matrix as parameters.\");",
                "+    }",
                "+  }",
                "+}",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PredictEvaluator.java b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PredictEvaluator.java",
                "index 075a1b3745b..2444370455a 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PredictEvaluator.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PredictEvaluator.java",
                "@@ -24,2 +24,3 @@ import java.util.stream.Collectors;",
                "+import org.apache.commons.math3.analysis.BivariateFunction;",
                " import org.apache.commons.math3.analysis.UnivariateFunction;",
                "@@ -28,3 +29,3 @@ import org.apache.solr.client.solrj.io.stream.expr.StreamFactory;",
                "-public class PredictEvaluator extends RecursiveObjectEvaluator implements TwoValueWorker {",
                "+public class PredictEvaluator extends RecursiveObjectEvaluator implements ManyValueWorker {",
                "   protected static final long serialVersionUID = 1L;",
                "@@ -36,11 +37,11 @@ public class PredictEvaluator extends RecursiveObjectEvaluator implements TwoVal",
                "   @Override",
                "-  public Object doWork(Object first, Object second) throws IOException {",
                "-    if (null == first) {",
                "-      throw new IOException(String.format(Locale.ROOT, \"Invalid expression %s - null found for the first value\", toExpression(constructingFactory)));",
                "-    }",
                "-    if (null == second) {",
                "-      throw new IOException(String.format(Locale.ROOT, \"Invalid expression %s - null found for the second value\", toExpression(constructingFactory)));",
                "+  public Object doWork(Object ... objects) throws IOException {",
                "+    if(objects.length != 2 && objects.length != 3) {",
                "+      throw new IOException(\"The predict function expects 2 or 3 parameters.\");",
                "     }",
                "-    if (!(first instanceof VectorFunction) && !(first instanceof RegressionEvaluator.RegressionTuple) && !(first instanceof OLSRegressionEvaluator.MultipleRegressionTuple)) {",
                "+    Object first = objects[0];",
                "+    Object second = objects[1];",
                "+",
                "+    if (!(first instanceof BivariateFunction) && !(first instanceof VectorFunction) && !(first instanceof RegressionEvaluator.RegressionTuple) && !(first instanceof OLSRegressionEvaluator.MultipleRegressionTuple)) {",
                "       throw new IOException(String.format(Locale.ROOT, \"Invalid expression %s - found type %s for the first value, expecting a RegressionTuple\", toExpression(constructingFactory), first.getClass().getSimpleName()));",
                "@@ -93,4 +94,33 @@ public class PredictEvaluator extends RecursiveObjectEvaluator implements TwoVal",
                "       }",
                "+    } else if(first instanceof BivariateFunction) {",
                "+      BivariateFunction bivariateFunction = (BivariateFunction) first;",
                "+      if (objects.length == 3) {",
                "+        Object third = objects[2];",
                "+        double x = 0.0;",
                "+        double y = 0.0;",
                "+        if (second instanceof Number && third instanceof Number) {",
                "+          x = ((Number) second).doubleValue();",
                "+          y = ((Number) third).doubleValue();",
                "+          return bivariateFunction.value(x, y);",
                "+        } else {",
                "+          throw new IOException(\"BivariateFunction requires two numberic parameters.\");",
                "+        }",
                "+      } else if (objects.length == 2) {",
                "+        if (second instanceof Matrix) {",
                "+          Matrix m = (Matrix) second;",
                "+          double[][] data = m.getData();",
                "+          if (data[0].length == 2) {",
                "+            List<Number> out = new ArrayList();",
                "+            for (double[] row : data) {",
                "+              out.add(bivariateFunction.value(row[0], row[1]));",
                "+            }",
                "+            return out;",
                "+          } else {",
                "+            throw new IOException(\"Bivariate Function expects a matrix with two columns\");",
                "+          }",
                "+        } else {",
                "+          throw new IOException(\"Bivariate Function requires a matrix parameter.\");",
                "+        }",
                "+      }",
                "     }",
                "-",
                "     return null;"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/StreamHandler.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/BicubicSplineEvaluator.java",
                "solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PredictEvaluator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11923": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "50c17b92bd2709ac9432dab72dc87f3873603dbc"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11923",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b14a60ee8de950439578c6f96f1e333a0a40f947",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518303634,
            "hunks": 2,
            "message": "LUCENE-7966: Improve Solr build to not import Groovy too often (artifacts, distribution,...)",
            "diff": [
                "diff --git a/solr/common-build.xml b/solr/common-build.xml",
                "index 9975a738ca0..1701c60c313 100644",
                "--- a/solr/common-build.xml",
                "+++ b/solr/common-build.xml",
                "@@ -172,3 +172,4 @@",
                "   <target name=\"prep-lucene-jars\" ",
                "-          depends=\"jar-lucene-core, jar-backward-codecs, jar-analyzers-phonetic, jar-analyzers-kuromoji, jar-codecs,jar-expressions, jar-suggest, jar-highlighter, jar-memory,",
                "+          depends=\"resolve-groovy,",
                "+                   jar-lucene-core, jar-backward-codecs, jar-analyzers-phonetic, jar-analyzers-kuromoji, jar-codecs,jar-expressions, jar-suggest, jar-highlighter, jar-memory,",
                "                    jar-misc, jar-spatial-extras, jar-spatial3d, jar-grouping, jar-queries, jar-queryparser, jar-join, jar-sandbox, jar-classification\">",
                "@@ -178,3 +179,3 @@",
                "   <target name=\"lucene-jars-to-solr\" ",
                "-          depends=\"-lucene-jars-to-solr-not-for-package,-lucene-jars-to-solr-package\"/>",
                "+          depends=\"resolve-groovy,-lucene-jars-to-solr-not-for-package,-lucene-jars-to-solr-package\"/>"
            ],
            "changed_files": [
                "solr/common-build.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-7966": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e4bd4330d34a10c4cbbe952475de5bed628f2153"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-7966",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "423a8cf69cf1bf53845d82bebaa2d957464c1299",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520594349,
            "hunks": 12,
            "message": "SOLR-12051: Election timeout when no replicas are qualified to become leader",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java b/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java",
                "index 3ba4dfce939..a7c21b4f305 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ElectionContext.java",
                "@@ -348,3 +348,3 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "       Replica.Type replicaType;",
                "-      ",
                "+      String coreNodeName;",
                "       try (SolrCore core = cc.getCore(coreName)) {",
                "@@ -362,9 +362,11 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "         replicaType = core.getCoreDescriptor().getCloudDescriptor().getReplicaType();",
                "-        String coreNodeName = core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName();",
                "+        coreNodeName = core.getCoreDescriptor().getCloudDescriptor().getCoreNodeName();",
                "         // should I be leader?",
                "-        if (zkController.getShardTerms(collection, shardId).registered(coreNodeName)",
                "-            && !zkController.getShardTerms(collection, shardId).canBecomeLeader(coreNodeName)) {",
                "-          log.info(\"Can't become leader, term of replica {} less than leader\", coreNodeName);",
                "-          rejoinLeaderElection(core);",
                "-          return;",
                "+        ZkShardTerms zkShardTerms = zkController.getShardTerms(collection, shardId);",
                "+        if (zkShardTerms.registered(coreNodeName) && !zkShardTerms.canBecomeLeader(coreNodeName)) {",
                "+          if (!waitForEligibleBecomeLeaderAfterTimeout(zkShardTerms, coreNodeName, leaderVoteWait)) {",
                "+            log.info(\"Can't become leader, term of replica {} less than leader\", coreNodeName);",
                "+            rejoinLeaderElection(core);",
                "+            return;",
                "+          }",
                "         }",
                "@@ -469,3 +471,6 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "           }",
                "-",
                "+          // in case of leaderVoteWait timeout, a replica with lower term can win the election",
                "+          if (zkController.getShardTerms(collection, shardId).registered(coreNodeName)) {",
                "+            zkController.getShardTerms(collection, shardId).setTermEqualsToLeader(coreNodeName);",
                "+          }",
                "           super.runLeaderProcess(weAreReplacement, 0);",
                "@@ -519,2 +524,49 @@ final class ShardLeaderElectionContext extends ShardLeaderElectionContextBase {",
                "+  /**",
                "+   * Wait for other replicas with higher terms participate in the electioon",
                "+   * @return true if after {@code timeout} there are no other replicas with higher term participate in the election,",
                "+   * false if otherwise",
                "+   */",
                "+  private boolean waitForEligibleBecomeLeaderAfterTimeout(ZkShardTerms zkShardTerms, String coreNodeName, int timeout) throws InterruptedException {",
                "+    long timeoutAt = System.nanoTime() + TimeUnit.NANOSECONDS.convert(timeout, TimeUnit.MILLISECONDS);",
                "+    while (!isClosed && !cc.isShutDown()) {",
                "+      if (System.nanoTime() > timeoutAt) {",
                "+        return true;",
                "+      }",
                "+      if (replicasWithHigherTermParticipated(zkShardTerms, coreNodeName)) {",
                "+        log.info(\"Can't become leader, other replicas with higher term participated in leader election\");",
                "+        return false;",
                "+      }",
                "+      Thread.sleep(500L);",
                "+    }",
                "+    return false;",
                "+  }",
                "+",
                "+  /**",
                "+   * Do other replicas with higher term participated in the election",
                "+   * @return true if other replicas with higher term participated in the election, false if otherwise",
                "+   */",
                "+  private boolean replicasWithHigherTermParticipated(ZkShardTerms zkShardTerms, String coreNodeName) {",
                "+    ClusterState clusterState = zkController.getClusterState();",
                "+    DocCollection docCollection = clusterState.getCollectionOrNull(collection);",
                "+    Slice slices = (docCollection == null) ? null : docCollection.getSlice(shardId);",
                "+    if (slices == null) return false;",
                "+",
                "+    long replicaTerm = zkShardTerms.getTerm(coreNodeName);",
                "+    boolean isRecovering = zkShardTerms.isRecovering(coreNodeName);",
                "+",
                "+    for (Replica replica : slices.getReplicas()) {",
                "+      if (replica.getName().equals(coreNodeName)) continue;",
                "+",
                "+      if (clusterState.getLiveNodes().contains(replica.getNodeName())) {",
                "+        long otherTerm = zkShardTerms.getTerm(replica.getName());",
                "+        boolean isOtherReplicaRecovering = zkShardTerms.isRecovering(replica.getName());",
                "+",
                "+        if (isRecovering && !isOtherReplicaRecovering) return true;",
                "+        if (otherTerm > replicaTerm) return true;",
                "+      }",
                "+    }",
                "+    return false;",
                "+  }",
                "+",
                "   public void publishActiveIfRegisteredAndNotActive(SolrCore core) throws Exception {",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy.java b/solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy.java",
                "index 63dfe19b1b8..912f6ec52f0 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy.java",
                "@@ -757,4 +757,3 @@ public class RecoveryStrategy implements Runnable, Closeable {",
                "       numTried++;",
                "-      final Replica leaderReplica = zkStateReader.getLeaderRetry(",
                "-          cloudDesc.getCollectionName(), cloudDesc.getShardId());",
                "+      Replica leaderReplica = null;",
                "@@ -764,2 +763,10 @@ public class RecoveryStrategy implements Runnable, Closeable {",
                "+      try {",
                "+        leaderReplica = zkStateReader.getLeaderRetry(",
                "+            cloudDesc.getCollectionName(), cloudDesc.getShardId());",
                "+      } catch (SolrException e) {",
                "+        Thread.sleep(500);",
                "+        continue;",
                "+      }",
                "+",
                "       if (leaderReplica.getCoreUrl().equals(ourUrl)) {",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java b/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "index ca79982b1ef..e6db14ff9a2 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "@@ -172,6 +172,12 @@ public class ZkShardTerms implements AutoCloseable{",
                "     }",
                "+    return removeTerm(cd.getCloudDescriptor().getCoreNodeName()) || numListeners == 0;",
                "+  }",
                "+",
                "+  // package private for testing, only used by tests",
                "+  // return true if this object should not be reused",
                "+  boolean removeTerm(String coreNodeName) {",
                "     Terms newTerms;",
                "-    while ( (newTerms = terms.removeTerm(cd.getCloudDescriptor().getCoreNodeName())) != null) {",
                "+    while ( (newTerms = terms.removeTerm(coreNodeName)) != null) {",
                "       try {",
                "-        if (saveTerms(newTerms)) return numListeners == 0;",
                "+        if (saveTerms(newTerms)) return false;",
                "       } catch (KeeperException.NoNodeException e) {",
                "@@ -234,2 +240,7 @@ public class ZkShardTerms implements AutoCloseable{",
                "+  public boolean isRecovering(String name) {",
                "+    return terms.values.containsKey(name + \"_recovering\");",
                "+  }",
                "+",
                "+",
                "   /**",
                "diff --git a/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java b/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "index 07e440a1bfc..9ffea0f009e 100644",
                "--- a/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "+++ b/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "@@ -85,3 +85,3 @@ public class MiniSolrCloudCluster {",
                "       \"    <bool name=\\\"genericCoreNodeNames\\\">${genericCoreNodeNames:true}</bool>\\n\" +",
                "-      \"    <int name=\\\"leaderVoteWait\\\">10000</int>\\n\" +",
                "+      \"    <int name=\\\"leaderVoteWait\\\">${leaderVoteWait:10000}</int>\\n\" +",
                "       \"    <int name=\\\"distribUpdateConnTimeout\\\">${distribUpdateConnTimeout:45000}</int>\\n\" +"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/ElectionContext.java",
                "solr/core/src/java/org/apache/solr/cloud/RecoveryStrategy.java",
                "solr/core/src/java/org/apache/solr/cloud/ZkShardTerms.java",
                "solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12051": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4d64e7bcb14d326f8971ddec4a36624aa618aab1"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12051",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "edd54e551d5ae9cd675482bab042b0cce8fb02e2",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519336329,
            "hunks": 11,
            "message": "LUCENE-8106: add cmdline option --no-git to avoid all git usage; replaces --no-fetch cmdline option",
            "diff": [
                "diff --git a/dev-tools/scripts/reproduceJenkinsFailures.py b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "index fa561ec3a89..775a22a9fc5 100644",
                "--- a/dev-tools/scripts/reproduceJenkinsFailures.py",
                "+++ b/dev-tools/scripts/reproduceJenkinsFailures.py",
                "@@ -65,4 +65,4 @@ def readConfig():",
                "                       help='Points to the Jenkins log to parse')",
                "-  parser.add_argument('--no-fetch', dest='fetch', action='store_false', default=True,",
                "-                      help='Do not run \"git fetch\" prior to \"git checkout\"')",
                "+  parser.add_argument('--no-git', dest='useGit', action='store_false', default=True,",
                "+                      help='Do not run \"git\" at all')",
                "   parser.add_argument('--iters', dest='testIters', type=int, default=defaultIters, metavar='N',",
                "@@ -125,5 +125,5 @@ def fetchAndParseJenkinsLog(url):",
                "-def prepareWorkspace(fetch, gitRef):",
                "+def prepareWorkspace(useGit, gitRef):",
                "   global gitCheckoutSucceeded",
                "-  if fetch:",
                "+  if useGit:",
                "     code = run('git fetch')",
                "@@ -131,8 +131,9 @@ def prepareWorkspace(fetch, gitRef):",
                "       raise RuntimeError('ERROR: \"git fetch\" failed.  See above.')",
                "-  checkoutCmd = 'git checkout %s' % gitRef",
                "-  code = run(checkoutCmd)",
                "-  if 0 != code:",
                "-    raise RuntimeError('ERROR: \"%s\" failed.  See above.' % checkoutCmd)",
                "-  gitCheckoutSucceeded = True",
                "-  run('git merge --ff-only', rememberFailure=False) # Ignore failure on non-branch ref",
                "+    checkoutCmd = 'git checkout %s' % gitRef",
                "+    code = run(checkoutCmd)",
                "+    if 0 != code:",
                "+      raise RuntimeError('ERROR: \"%s\" failed.  See above.' % checkoutCmd)",
                "+    gitCheckoutSucceeded = True",
                "+    run('git merge --ff-only', rememberFailure=False) # Ignore failure on non-branch ref",
                "+  ",
                "   code = run('ant clean')",
                "@@ -209,6 +210,7 @@ def main():",
                "   tests = fetchAndParseJenkinsLog(config.url)",
                "-  localGitBranch = getLocalGitBranch()",
                "+  if config.useGit:",
                "+    localGitBranch = getLocalGitBranch()",
                "   try:",
                "-    prepareWorkspace(config.fetch, revisionFromLog)",
                "+    prepareWorkspace(config.useGit, revisionFromLog)",
                "     modules = groupTestsByModule(tests)",
                "@@ -217,17 +219,4 @@ def main():",
                "-    # Retest 100% failures at the tip of the branch",
                "-    oldTests = tests",
                "-    tests = {}",
                "-    for fullClass in failures:",
                "-      testcase = fullClass[(fullClass.rindex('.') + 1):]",
                "-      if failures[fullClass] == config.testIters:",
                "-        tests[testcase] = oldTests[testcase]",
                "-    if len(tests) > 0:",
                "-      print('\\n[repro] Re-testing 100%% failures at the tip of %s' % branchFromLog)",
                "-      prepareWorkspace(False, branchFromLog)",
                "-      modules = groupTestsByModule(tests)",
                "-      runTests(config.testIters, modules, tests)",
                "-      failures = printReport(config.testIters, ' at the tip of %s' % branchFromLog)",
                "-      ",
                "-      # Retest 100% tip-of-branch failures without a seed",
                "+    if config.useGit:",
                "+      # Retest 100% failures at the tip of the branch",
                "       oldTests = tests",
                "@@ -237,5 +226,5 @@ def main():",
                "         if failures[fullClass] == config.testIters:",
                "-          tests[testcase] = re.sub(reTestsSeed, '', oldTests[testcase])",
                "+          tests[testcase] = oldTests[testcase]",
                "       if len(tests) > 0:",
                "-        print('\\n[repro] Re-testing 100%% failures at the tip of %s without a seed' % branchFromLog)",
                "+        print('\\n[repro] Re-testing 100%% failures at the tip of %s' % branchFromLog)",
                "         prepareWorkspace(False, branchFromLog)",
                "@@ -243,3 +232,17 @@ def main():",
                "         runTests(config.testIters, modules, tests)",
                "-        printReport(config.testIters, ' at the tip of %s without a seed' % branchFromLog)",
                "+        failures = printReport(config.testIters, ' at the tip of %s' % branchFromLog)",
                "+      ",
                "+        # Retest 100% tip-of-branch failures without a seed",
                "+        oldTests = tests",
                "+        tests = {}",
                "+        for fullClass in failures:",
                "+          testcase = fullClass[(fullClass.rindex('.') + 1):]",
                "+          if failures[fullClass] == config.testIters:",
                "+            tests[testcase] = re.sub(reTestsSeed, '', oldTests[testcase])",
                "+        if len(tests) > 0:",
                "+          print('\\n[repro] Re-testing 100%% failures at the tip of %s without a seed' % branchFromLog)",
                "+          prepareWorkspace(False, branchFromLog)",
                "+          modules = groupTestsByModule(tests)",
                "+          runTests(config.testIters, modules, tests)",
                "+          printReport(config.testIters, ' at the tip of %s without a seed' % branchFromLog)",
                "   except Exception as e:",
                "@@ -248,3 +251,3 @@ def main():",
                "   finally:",
                "-    if gitCheckoutSucceeded:",
                "+    if config.useGit and gitCheckoutSucceeded:",
                "       run('git checkout %s' % localGitBranch, rememberFailure=False) # Restore original git branch/sha"
            ],
            "changed_files": [
                "dev-tools/scripts/reproduceJenkinsFailures.py"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8106": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "27f5ca75ad811532e5b46b32ba858b5997ed87b4"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8106",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ca22f17662c9b79ada1f90fb200f76d9a58c0e75",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519149440,
            "hunks": 46,
            "message": "Remove dead codec code.",
            "diff": [
                "diff --git a/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.java b/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.java",
                "index fdb1df6aea8..034202b10d8 100644",
                "--- a/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.java",
                "+++ b/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.java",
                "@@ -28,3 +28,2 @@ import org.apache.lucene.codecs.CodecUtil;",
                " import org.apache.lucene.codecs.MutablePointValues;",
                "-import org.apache.lucene.index.MergeState;",
                " import org.apache.lucene.index.PointValues.IntersectVisitor;",
                "@@ -46,3 +45,2 @@ import org.apache.lucene.util.NumericUtils;",
                " import org.apache.lucene.util.OfflineSorter;",
                "-import org.apache.lucene.util.PriorityQueue;",
                " import org.apache.lucene.util.StringHelper;",
                "@@ -311,120 +309,2 @@ final class SimpleTextBKDWriter implements Closeable {",
                "-  private static class MergeReader {",
                "-    final SimpleTextBKDReader bkd;",
                "-    final SimpleTextBKDReader.IntersectState state;",
                "-    final MergeState.DocMap docMap;",
                "-",
                "-    /** Current doc ID */",
                "-    public int docID;",
                "-",
                "-    /** Which doc in this block we are up to */",
                "-    private int docBlockUpto;",
                "-",
                "-    /** How many docs in the current block */",
                "-    private int docsInBlock;",
                "-",
                "-    /** Which leaf block we are up to */",
                "-    private int blockID;",
                "-",
                "-    private final byte[] packedValues;",
                "-",
                "-    public MergeReader(SimpleTextBKDReader bkd, MergeState.DocMap docMap) throws IOException {",
                "-      this.bkd = bkd;",
                "-      state = new SimpleTextBKDReader.IntersectState(bkd.in.clone(),",
                "-                                                     bkd.numDims,",
                "-                                                     bkd.packedBytesLength,",
                "-                                                     bkd.maxPointsInLeafNode,",
                "-                                                     null);",
                "-      this.docMap = docMap;",
                "-      long minFP = Long.MAX_VALUE;",
                "-      //System.out.println(\"MR.init \" + this + \" bkdreader=\" + bkd + \" leafBlockFPs.length=\" + bkd.leafBlockFPs.length);",
                "-      for(long fp : bkd.leafBlockFPs) {",
                "-        minFP = Math.min(minFP, fp);",
                "-        //System.out.println(\"  leaf fp=\" + fp);",
                "-      }",
                "-      state.in.seek(minFP);",
                "-      this.packedValues = new byte[bkd.maxPointsInLeafNode * bkd.packedBytesLength];",
                "-    }",
                "-",
                "-    public boolean next() throws IOException {",
                "-      //System.out.println(\"MR.next this=\" + this);",
                "-      while (true) {",
                "-        if (docBlockUpto == docsInBlock) {",
                "-          if (blockID == bkd.leafBlockFPs.length) {",
                "-            //System.out.println(\"  done!\");",
                "-            return false;",
                "-          }",
                "-          //System.out.println(\"  new block @ fp=\" + state.in.getFilePointer());",
                "-          docsInBlock = bkd.readDocIDs(state.in, state.in.getFilePointer(), state.scratchDocIDs);",
                "-          assert docsInBlock > 0;",
                "-          docBlockUpto = 0;",
                "-          bkd.visitDocValues(state.commonPrefixLengths, state.scratchPackedValue, state.in, state.scratchDocIDs, docsInBlock, new IntersectVisitor() {",
                "-            int i = 0;",
                "-",
                "-            @Override",
                "-            public void visit(int docID) throws IOException {",
                "-              throw new UnsupportedOperationException();",
                "-            }",
                "-",
                "-            @Override",
                "-            public void visit(int docID, byte[] packedValue) throws IOException {",
                "-              assert docID == state.scratchDocIDs[i];",
                "-              System.arraycopy(packedValue, 0, packedValues, i * bkd.packedBytesLength, bkd.packedBytesLength);",
                "-              i++;",
                "-            }",
                "-",
                "-            @Override",
                "-            public Relation compare(byte[] minPackedValue, byte[] maxPackedValue) {",
                "-              throw new UnsupportedOperationException();",
                "-            }",
                "-",
                "-          });",
                "-",
                "-          blockID++;",
                "-        }",
                "-",
                "-        final int index = docBlockUpto++;",
                "-        int oldDocID = state.scratchDocIDs[index];",
                "-",
                "-        int mappedDocID;",
                "-        if (docMap == null) {",
                "-          mappedDocID = oldDocID;",
                "-        } else {",
                "-          mappedDocID = docMap.get(oldDocID);",
                "-        }",
                "-",
                "-        if (mappedDocID != -1) {",
                "-          // Not deleted!",
                "-          docID = mappedDocID;",
                "-          System.arraycopy(packedValues, index * bkd.packedBytesLength, state.scratchPackedValue, 0, bkd.packedBytesLength);",
                "-          return true;",
                "-        }",
                "-      }",
                "-    }",
                "-  }",
                "-",
                "-  private static class BKDMergeQueue extends PriorityQueue<MergeReader> {",
                "-    private final int bytesPerDim;",
                "-",
                "-    public BKDMergeQueue(int bytesPerDim, int maxSize) {",
                "-      super(maxSize);",
                "-      this.bytesPerDim = bytesPerDim;",
                "-    }",
                "-",
                "-    @Override",
                "-    public boolean lessThan(MergeReader a, MergeReader b) {",
                "-      assert a != b;",
                "-",
                "-      int cmp = StringHelper.compare(bytesPerDim, a.state.scratchPackedValue, 0, b.state.scratchPackedValue, 0);",
                "-      if (cmp < 0) {",
                "-        return true;",
                "-      } else if (cmp > 0) {",
                "-        return false;",
                "-      }",
                "-",
                "-      // Tie break by sorting smaller docIDs earlier:",
                "-      return a.docID < b.docID;",
                "-    }",
                "-  }",
                "-",
                "   /** Write a field from a {@link MutablePointValues}. This way of writing",
                "@@ -529,46 +409,2 @@ final class SimpleTextBKDWriter implements Closeable {",
                "-  // TODO: remove this opto: SimpleText is supposed to be simple!",
                "-  ",
                "-  /** More efficient bulk-add for incoming {@link SimpleTextBKDReader}s.  This does a merge sort of the already",
                "-   *  sorted values and currently only works when numDims==1.  This returns -1 if all documents containing",
                "-   *  dimensional values were deleted. */",
                "-  public long merge(IndexOutput out, List<MergeState.DocMap> docMaps, List<SimpleTextBKDReader> readers) throws IOException {",
                "-    assert docMaps == null || readers.size() == docMaps.size();",
                "-",
                "-    BKDMergeQueue queue = new BKDMergeQueue(bytesPerDim, readers.size());",
                "-",
                "-    for(int i=0;i<readers.size();i++) {",
                "-      SimpleTextBKDReader bkd = readers.get(i);",
                "-      MergeState.DocMap docMap;",
                "-      if (docMaps == null) {",
                "-        docMap = null;",
                "-      } else {",
                "-        docMap = docMaps.get(i);",
                "-      }",
                "-      MergeReader reader = new MergeReader(bkd, docMap);",
                "-      if (reader.next()) {",
                "-        queue.add(reader);",
                "-      }",
                "-    }",
                "-",
                "-    OneDimensionBKDWriter oneDimWriter = new OneDimensionBKDWriter(out);",
                "-",
                "-    while (queue.size() != 0) {",
                "-      MergeReader reader = queue.top();",
                "-      // System.out.println(\"iter reader=\" + reader);",
                "-",
                "-      // NOTE: doesn't work with subclasses (e.g. SimpleText!)",
                "-      oneDimWriter.add(reader.state.scratchPackedValue, reader.docID);",
                "-",
                "-      if (reader.next()) {",
                "-        queue.updateTop();",
                "-      } else {",
                "-        // This segment was exhausted",
                "-        queue.pop();",
                "-      }",
                "-    }",
                "-",
                "-    return oneDimWriter.finish();",
                "-  }",
                "-",
                "   private class OneDimensionBKDWriter {",
                "diff --git a/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.java b/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.java",
                "index 24a2c3411a4..cbd79dedfb4 100644",
                "--- a/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.java",
                "+++ b/lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.java",
                "@@ -516,12 +516,2 @@ class SimpleTextFieldsReader extends FieldsProducer {",
                "-  static class TermData {",
                "-    public long docsStart;",
                "-    public int docFreq;",
                "-",
                "-    public TermData(long docsStart, int docFreq) {",
                "-      this.docsStart = docsStart;",
                "-      this.docFreq = docFreq;",
                "-    }",
                "-  }",
                "-",
                "   private static final long TERMS_BASE_RAM_BYTES_USED =",
                "diff --git a/lucene/core/src/java/org/apache/lucene/codecs/blocktree/BitSetPostingsEnum.java b/lucene/core/src/java/org/apache/lucene/codecs/blocktree/BitSetPostingsEnum.java",
                "deleted file mode 100644",
                "index c14de96b80a..00000000000",
                "--- a/lucene/core/src/java/org/apache/lucene/codecs/blocktree/BitSetPostingsEnum.java",
                "+++ /dev/null",
                "@@ -1,95 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.lucene.codecs.blocktree;",
                "-",
                "-",
                "-import java.io.IOException;",
                "-",
                "-import org.apache.lucene.index.PostingsEnum;",
                "-import org.apache.lucene.search.DocIdSetIterator;",
                "-import org.apache.lucene.util.BitSet;",
                "-import org.apache.lucene.util.BitSetIterator;",
                "-import org.apache.lucene.util.BytesRef;",
                "-import org.apache.lucene.util.FixedBitSet; // javadocs",
                "-",
                "-/** Takes a {@link FixedBitSet} and creates a DOCS {@link PostingsEnum} from it. */",
                "-",
                "-class BitSetPostingsEnum extends PostingsEnum {",
                "-  private final BitSet bits;",
                "-  private DocIdSetIterator in;",
                "-  ",
                "-  BitSetPostingsEnum(BitSet bits) {",
                "-    this.bits = bits;",
                "-    reset();",
                "-  }",
                "-",
                "-  @Override",
                "-  public int freq() throws IOException {",
                "-    return 1;",
                "-  }",
                "-",
                "-  @Override",
                "-  public int docID() {",
                "-    if (in == null) {",
                "-      return -1;",
                "-    } else {",
                "-      return in.docID();",
                "-    }",
                "-  }",
                "-",
                "-  @Override",
                "-  public int nextDoc() throws IOException {",
                "-    if (in == null) {",
                "-      in = new BitSetIterator(bits, 0);",
                "-    }",
                "-    return in.nextDoc();",
                "-  }",
                "-",
                "-  @Override",
                "-  public int advance(int target) throws IOException {",
                "-    return in.advance(target);",
                "-  }",
                "-",
                "-  @Override",
                "-  public long cost() {",
                "-    return in.cost();",
                "-  }",
                "-  ",
                "-  void reset() {",
                "-    in = null;",
                "-  }",
                "-",
                "-  @Override",
                "-  public BytesRef getPayload() {",
                "-    return null;",
                "-  }",
                "-",
                "-  @Override",
                "-  public int nextPosition() {",
                "-    throw new UnsupportedOperationException();",
                "-  }",
                "-",
                "-  @Override",
                "-  public int startOffset() {",
                "-    throw new UnsupportedOperationException();",
                "-  }",
                "-",
                "-  @Override",
                "-  public int endOffset() {",
                "-    throw new UnsupportedOperationException();",
                "-  }",
                "-}",
                "diff --git a/lucene/core/src/java/org/apache/lucene/codecs/blocktree/BitSetTermsEnum.java b/lucene/core/src/java/org/apache/lucene/codecs/blocktree/BitSetTermsEnum.java",
                "deleted file mode 100644",
                "index 4305c4681d8..00000000000",
                "--- a/lucene/core/src/java/org/apache/lucene/codecs/blocktree/BitSetTermsEnum.java",
                "+++ /dev/null",
                "@@ -1,92 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.lucene.codecs.blocktree;",
                "-",
                "-",
                "-import java.io.IOException;",
                "-",
                "-import org.apache.lucene.codecs.PostingsWriterBase;",
                "-import org.apache.lucene.index.ImpactsEnum;",
                "-import org.apache.lucene.index.PostingsEnum;",
                "-import org.apache.lucene.index.TermsEnum;",
                "-import org.apache.lucene.search.similarities.Similarity.SimScorer;",
                "-import org.apache.lucene.util.BitSet;",
                "-import org.apache.lucene.util.BytesRef;",
                "-",
                "-/** Silly stub class, used only when writing an auto-prefix",
                "- *  term in order to expose DocsEnum over a FixedBitSet.  We",
                "- *  pass this to {@link PostingsWriterBase#writeTerm} so ",
                "- *  that it can pull .docs() multiple times for the",
                "- *  current term. */",
                "-",
                "-class BitSetTermsEnum extends TermsEnum {",
                "-  private final BitSetPostingsEnum postingsEnum;",
                "-",
                "-  public BitSetTermsEnum(BitSet docs) {",
                "-    postingsEnum = new BitSetPostingsEnum(docs);",
                "-  }",
                "-",
                "-  @Override",
                "-  public SeekStatus seekCeil(BytesRef text) {",
                "-    throw new UnsupportedOperationException();",
                "-  }",
                "-",
                "-  @Override",
                "-  public void seekExact(long ord) {",
                "-    throw new UnsupportedOperationException();",
                "-  }",
                "-",
                "-  @Override",
                "-  public BytesRef term() {",
                "-    throw new UnsupportedOperationException();",
                "-  }",
                "-",
                "-  @Override",
                "-  public BytesRef next() {",
                "-    throw new UnsupportedOperationException();",
                "-  }",
                "-",
                "-  @Override",
                "-  public long ord() {",
                "-    throw new UnsupportedOperationException();",
                "-  }",
                "-",
                "-  @Override",
                "-  public int docFreq() {",
                "-    throw new UnsupportedOperationException();",
                "-  }",
                "-",
                "-  @Override",
                "-  public long totalTermFreq() {",
                "-    throw new UnsupportedOperationException();",
                "-  }",
                "-",
                "-  @Override",
                "-  public PostingsEnum postings(PostingsEnum reuse, int flags) {",
                "-    if (flags != PostingsEnum.NONE) {",
                "-      // We only work with DOCS_ONLY fields",
                "-      return null;",
                "-    }",
                "-    postingsEnum.reset();",
                "-    return postingsEnum;",
                "-  }",
                "-",
                "-  @Override",
                "-  public ImpactsEnum impacts(SimScorer scorer, int flags) throws IOException {",
                "-    throw new UnsupportedOperationException();",
                "-  }",
                "-}",
                "diff --git a/lucene/core/src/java/org/apache/lucene/codecs/lucene62/Lucene62SegmentInfoFormat.java b/lucene/core/src/java/org/apache/lucene/codecs/lucene62/Lucene62SegmentInfoFormat.java",
                "deleted file mode 100644",
                "index e91da3b5824..00000000000",
                "--- a/lucene/core/src/java/org/apache/lucene/codecs/lucene62/Lucene62SegmentInfoFormat.java",
                "+++ /dev/null",
                "@@ -1,268 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-package org.apache.lucene.codecs.lucene62;",
                "-",
                "-import java.io.IOException;",
                "-import java.util.Map;",
                "-import java.util.Set;",
                "-",
                "-import org.apache.lucene.codecs.CodecUtil;",
                "-import org.apache.lucene.codecs.SegmentInfoFormat;",
                "-import org.apache.lucene.index.CorruptIndexException;",
                "-import org.apache.lucene.index.IndexFileNames;",
                "-import org.apache.lucene.index.IndexWriter; // javadocs",
                "-import org.apache.lucene.index.SegmentInfo; // javadocs",
                "-import org.apache.lucene.index.SegmentInfos; // javadocs",
                "-import org.apache.lucene.search.Sort;",
                "-import org.apache.lucene.search.SortField;",
                "-import org.apache.lucene.search.SortedNumericSelector;",
                "-import org.apache.lucene.search.SortedNumericSortField;",
                "-import org.apache.lucene.search.SortedSetSelector;",
                "-import org.apache.lucene.search.SortedSetSortField;",
                "-import org.apache.lucene.store.ChecksumIndexInput;",
                "-import org.apache.lucene.store.DataOutput; // javadocs",
                "-import org.apache.lucene.store.Directory;",
                "-import org.apache.lucene.store.IOContext;",
                "-import org.apache.lucene.util.Version;",
                "-",
                "-/**",
                "- * Lucene 6.2 Segment info format.",
                "- * <p>",
                "- * Files:",
                "- * <ul>",
                "- *   <li><tt>.si</tt>: Header, SegVersion, SegSize, IsCompoundFile, Diagnostics, Files, Attributes, IndexSort, Footer",
                "- * </ul>",
                "- * Data types:",
                "- * <ul>",
                "- *   <li>Header --&gt; {@link CodecUtil#writeIndexHeader IndexHeader}</li>",
                "- *   <li>SegSize --&gt; {@link DataOutput#writeInt Int32}</li>",
                "- *   <li>SegVersion --&gt; {@link DataOutput#writeString String}</li>",
                "- *   <li>Files --&gt; {@link DataOutput#writeSetOfStrings Set&lt;String&gt;}</li>",
                "- *   <li>Diagnostics,Attributes --&gt; {@link DataOutput#writeMapOfStrings Map&lt;String,String&gt;}</li>",
                "- *   <li>IsCompoundFile --&gt; {@link DataOutput#writeByte Int8}</li>",
                "- *   <li>IndexSort --&gt; {@link DataOutput#writeVInt Int32} count, followed by {@code count} SortField</li>",
                "- *   <li>SortField --&gt; {@link DataOutput#writeString String} field name, followed by {@link DataOutput#writeVInt Int32} sort type ID,",
                "- *       followed by {@link DataOutput#writeByte Int8} indicatating reversed sort, followed by a type-specific encoding of the optional missing value",
                "- *   <li>Footer --&gt; {@link CodecUtil#writeFooter CodecFooter}</li>",
                "- * </ul>",
                "- * Field Descriptions:",
                "- * <ul>",
                "- *   <li>SegVersion is the code version that created the segment.</li>",
                "- *   <li>SegSize is the number of documents contained in the segment index.</li>",
                "- *   <li>IsCompoundFile records whether the segment is written as a compound file or",
                "- *       not. If this is -1, the segment is not a compound file. If it is 1, the segment",
                "- *       is a compound file.</li>",
                "- *   <li>The Diagnostics Map is privately written by {@link IndexWriter}, as a debugging aid,",
                "- *       for each segment it creates. It includes metadata like the current Lucene",
                "- *       version, OS, Java version, why the segment was created (merge, flush,",
                "- *       addIndexes), etc.</li>",
                "- *   <li>Files is a list of files referred to by this segment.</li>",
                "- * </ul>",
                "- *",
                "- * @see SegmentInfos",
                "- * @lucene.experimental",
                "- */",
                "-public class Lucene62SegmentInfoFormat extends SegmentInfoFormat {",
                "-",
                "-  /** Sole constructor. */",
                "-  public Lucene62SegmentInfoFormat() {",
                "-  }",
                "-",
                "-  @Override",
                "-  public SegmentInfo read(Directory dir, String segment, byte[] segmentID, IOContext context) throws IOException {",
                "-    final String fileName = IndexFileNames.segmentFileName(segment, \"\", Lucene62SegmentInfoFormat.SI_EXTENSION);",
                "-    try (ChecksumIndexInput input = dir.openChecksumInput(fileName, context)) {",
                "-      Throwable priorE = null;",
                "-      SegmentInfo si = null;",
                "-      try {",
                "-        int format = CodecUtil.checkIndexHeader(input, Lucene62SegmentInfoFormat.CODEC_NAME,",
                "-                                                Lucene62SegmentInfoFormat.VERSION_START,",
                "-                                                Lucene62SegmentInfoFormat.VERSION_CURRENT,",
                "-                                                segmentID, \"\");",
                "-        final Version version = Version.fromBits(input.readInt(), input.readInt(), input.readInt());",
                "-",
                "-        final int docCount = input.readInt();",
                "-        if (docCount < 0) {",
                "-          throw new CorruptIndexException(\"invalid docCount: \" + docCount, input);",
                "-        }",
                "-        final boolean isCompoundFile = input.readByte() == SegmentInfo.YES;",
                "-",
                "-        final Map<String,String> diagnostics = input.readMapOfStrings();",
                "-        final Set<String> files = input.readSetOfStrings();",
                "-        final Map<String,String> attributes = input.readMapOfStrings();",
                "-",
                "-        int numSortFields = input.readVInt();",
                "-        Sort indexSort;",
                "-        if (numSortFields > 0) {",
                "-          SortField[] sortFields = new SortField[numSortFields];",
                "-          for(int i=0;i<numSortFields;i++) {",
                "-            String fieldName = input.readString();",
                "-            int sortTypeID = input.readVInt();",
                "-            SortField.Type sortType;",
                "-            SortedSetSelector.Type sortedSetSelector = null;",
                "-            SortedNumericSelector.Type sortedNumericSelector = null;",
                "-            switch(sortTypeID) {",
                "-            case 0:",
                "-              sortType = SortField.Type.STRING;",
                "-              break;",
                "-            case 1:",
                "-              sortType = SortField.Type.LONG;",
                "-              break;",
                "-            case 2:",
                "-              sortType = SortField.Type.INT;",
                "-              break;",
                "-            case 3:",
                "-              sortType = SortField.Type.DOUBLE;",
                "-              break;",
                "-            case 4:",
                "-              sortType = SortField.Type.FLOAT;",
                "-              break;",
                "-            case 5:",
                "-              sortType = SortField.Type.STRING;",
                "-              byte selector = input.readByte();",
                "-              if (selector == 0) {",
                "-                sortedSetSelector = SortedSetSelector.Type.MIN;",
                "-              } else if (selector == 1) {",
                "-                sortedSetSelector = SortedSetSelector.Type.MAX;",
                "-              } else if (selector == 2) {",
                "-                sortedSetSelector = SortedSetSelector.Type.MIDDLE_MIN;",
                "-              } else if (selector == 3) {",
                "-                sortedSetSelector = SortedSetSelector.Type.MIDDLE_MAX;",
                "-              } else {",
                "-                throw new CorruptIndexException(\"invalid index SortedSetSelector ID: \" + selector, input);",
                "-              }",
                "-              break;",
                "-            case 6:",
                "-              byte type = input.readByte();",
                "-              if (type == 0) {",
                "-                sortType = SortField.Type.LONG;",
                "-              } else if (type == 1) {",
                "-                sortType = SortField.Type.INT;",
                "-              } else if (type == 2) {",
                "-                sortType = SortField.Type.DOUBLE;",
                "-              } else if (type == 3) {",
                "-                sortType = SortField.Type.FLOAT;",
                "-              } else {",
                "-                throw new CorruptIndexException(\"invalid index SortedNumericSortField type ID: \" + type, input);",
                "-              }",
                "-              byte numericSelector = input.readByte();",
                "-              if (numericSelector == 0) {",
                "-                sortedNumericSelector = SortedNumericSelector.Type.MIN;",
                "-              } else if (numericSelector == 1) {",
                "-                sortedNumericSelector = SortedNumericSelector.Type.MAX;",
                "-              } else {",
                "-                throw new CorruptIndexException(\"invalid index SortedNumericSelector ID: \" + numericSelector, input);",
                "-              }",
                "-              break;",
                "-            default:",
                "-              throw new CorruptIndexException(\"invalid index sort field type ID: \" + sortTypeID, input);",
                "-            }",
                "-            byte b = input.readByte();",
                "-            boolean reverse;",
                "-            if (b == 0) {",
                "-              reverse = true;",
                "-            } else if (b == 1) {",
                "-              reverse = false;",
                "-            } else {",
                "-              throw new CorruptIndexException(\"invalid index sort reverse: \" + b, input);",
                "-            }",
                "-",
                "-            if (sortedSetSelector != null) {",
                "-              sortFields[i] = new SortedSetSortField(fieldName, reverse, sortedSetSelector);",
                "-            } else if (sortedNumericSelector != null) {",
                "-              sortFields[i] = new SortedNumericSortField(fieldName, sortType, reverse, sortedNumericSelector);",
                "-            } else {",
                "-              sortFields[i] = new SortField(fieldName, sortType, reverse);",
                "-            }",
                "-",
                "-            Object missingValue;",
                "-            b = input.readByte();",
                "-            if (b == 0) {",
                "-              missingValue = null;",
                "-            } else {",
                "-              switch(sortType) {",
                "-              case STRING:",
                "-                if (b == 1) {",
                "-                  missingValue = SortField.STRING_LAST;",
                "-                } else if (b == 2) {",
                "-                  missingValue = SortField.STRING_FIRST;",
                "-                } else {",
                "-                  throw new CorruptIndexException(\"invalid missing value flag: \" + b, input);",
                "-                }",
                "-                break;",
                "-              case LONG:",
                "-                if (b != 1) {",
                "-                  throw new CorruptIndexException(\"invalid missing value flag: \" + b, input);",
                "-                }",
                "-                missingValue = input.readLong();",
                "-                break;",
                "-              case INT:",
                "-                if (b != 1) {",
                "-                  throw new CorruptIndexException(\"invalid missing value flag: \" + b, input);",
                "-                }",
                "-                missingValue = input.readInt();",
                "-                break;",
                "-              case DOUBLE:",
                "-                if (b != 1) {",
                "-                  throw new CorruptIndexException(\"invalid missing value flag: \" + b, input);",
                "-                }",
                "-                missingValue = Double.longBitsToDouble(input.readLong());",
                "-                break;",
                "-              case FLOAT:",
                "-                if (b != 1) {",
                "-                  throw new CorruptIndexException(\"invalid missing value flag: \" + b, input);",
                "-                }",
                "-                missingValue = Float.intBitsToFloat(input.readInt());",
                "-                break;",
                "-              default:",
                "-                throw new AssertionError(\"unhandled sortType=\" + sortType);",
                "-              }",
                "-            }",
                "-            if (missingValue != null) {",
                "-              sortFields[i].setMissingValue(missingValue);",
                "-            }",
                "-          }",
                "-          indexSort = new Sort(sortFields);",
                "-        } else if (numSortFields < 0) {",
                "-          throw new CorruptIndexException(\"invalid index sort field count: \" + numSortFields, input);",
                "-        } else {",
                "-          indexSort = null;",
                "-        }",
                "-",
                "-        si = new SegmentInfo(dir, version, null, segment, docCount, isCompoundFile, null, diagnostics, segmentID, attributes, indexSort);",
                "-        si.setFiles(files);",
                "-      } catch (Throwable exception) {",
                "-        priorE = exception;",
                "-      } finally {",
                "-        CodecUtil.checkFooter(input, priorE);",
                "-      }",
                "-      return si;",
                "-    }",
                "-  }",
                "-",
                "-  @Override",
                "-  public void write(Directory dir, SegmentInfo info, IOContext ioContext) throws IOException {",
                "-    throw new UnsupportedOperationException(\"This format can only be used for reading\");",
                "-  }",
                "-",
                "-  /** File extension used to store {@link SegmentInfo}. */",
                "-  public final static String SI_EXTENSION = \"si\";",
                "-  static final String CODEC_NAME = \"Lucene62SegmentInfo\";",
                "-  static final int VERSION_START = 0;",
                "-  static final int VERSION_MULTI_VALUED_SORT = 1;",
                "-  static final int VERSION_CURRENT = VERSION_MULTI_VALUED_SORT;",
                "-}",
                "diff --git a/lucene/core/src/java/org/apache/lucene/codecs/lucene62/package-info.java b/lucene/core/src/java/org/apache/lucene/codecs/lucene62/package-info.java",
                "deleted file mode 100644",
                "index fb556732d08..00000000000",
                "--- a/lucene/core/src/java/org/apache/lucene/codecs/lucene62/package-info.java",
                "+++ /dev/null",
                "@@ -1,24 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-/**",
                "- * Components from the Lucene 6.2 index format",
                "- * See {@link org.apache.lucene.codecs.lucene70} for an overview",
                "- * of the current index format.",
                "- */",
                "-",
                "-package org.apache.lucene.codecs.lucene62;",
                "diff --git a/lucene/core/src/java/org/apache/lucene/codecs/lucene70/package-info.java b/lucene/core/src/java/org/apache/lucene/codecs/lucene70/package-info.java",
                "index cab2859766e..08dd72d3100 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/codecs/lucene70/package-info.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/codecs/lucene70/package-info.java",
                "@@ -130,3 +130,3 @@",
                "  * <li>",
                "- * {@link org.apache.lucene.codecs.lucene62.Lucene62SegmentInfoFormat Segment info}.",
                "+ * {@link org.apache.lucene.codecs.lucene70.Lucene70SegmentInfoFormat Segment info}.",
                "  *    This contains metadata about a segment, such as the number of documents,",
                "@@ -235,3 +235,3 @@",
                "  * <tr>",
                "- * <td>{@link org.apache.lucene.codecs.lucene62.Lucene62SegmentInfoFormat Segment Info}</td>",
                "+ * <td>{@link org.apache.lucene.codecs.lucene70.Lucene70SegmentInfoFormat Segment Info}</td>",
                "  * <td>.si</td>",
                "diff --git a/lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.java b/lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.java",
                "index ad659907a8e..095d8ca27bc 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.java",
                "@@ -28,3 +28,2 @@ import org.apache.lucene.util.BytesRef;",
                " import org.apache.lucene.util.MathUtil;",
                "-import org.apache.lucene.util.RamUsageEstimator;",
                " import org.apache.lucene.util.StringHelper;",
                "@@ -50,10 +49,4 @@ public final class BKDReader extends PointValues implements Accountable {",
                "-  // Used for 6.4.0+ index format:",
                "   final byte[] packedIndex;",
                "-  // Used for Legacy (pre-6.4.0) index format, to hold a compact form of the index:",
                "-  final private byte[] splitPackedValues; ",
                "-  final int bytesPerIndexEntry;",
                "-  final long[] leafBlockFPs;",
                "-",
                "   /** Caller must pre-seek the provided {@link IndexInput} to the index location that {@link BKDWriter#finish} returned */",
                "@@ -64,3 +57,2 @@ public final class BKDReader extends PointValues implements Accountable {",
                "     bytesPerDim = in.readVInt();",
                "-    bytesPerIndexEntry = numDims == 1 && version >= BKDWriter.VERSION_IMPLICIT_SPLIT_DIM_1D ? bytesPerDim : bytesPerDim + 1;",
                "     packedBytesLength = numDims * bytesPerDim;",
                "@@ -87,51 +79,5 @@ public final class BKDReader extends PointValues implements Accountable {",
                "-    if (version >= BKDWriter.VERSION_PACKED_INDEX) {",
                "-      int numBytes = in.readVInt();",
                "-      packedIndex = new byte[numBytes];",
                "-      in.readBytes(packedIndex, 0, numBytes);",
                "-      leafBlockFPs = null;",
                "-      splitPackedValues = null;",
                "-    } else {",
                "-      // legacy un-packed index",
                "-",
                "-      splitPackedValues = new byte[bytesPerIndexEntry*numLeaves];",
                "-",
                "-      in.readBytes(splitPackedValues, 0, splitPackedValues.length);",
                "-",
                "-      // Read the file pointers to the start of each leaf block:",
                "-      long[] leafBlockFPs = new long[numLeaves];",
                "-      long lastFP = 0;",
                "-      for(int i=0;i<numLeaves;i++) {",
                "-        long delta = in.readVLong();",
                "-        leafBlockFPs[i] = lastFP + delta;",
                "-        lastFP += delta;",
                "-      }",
                "-",
                "-      // Possibly rotate the leaf block FPs, if the index not fully balanced binary tree (only happens",
                "-      // if it was created by BKDWriter.merge or OneDimWriter).  In this case the leaf nodes may straddle the two bottom",
                "-      // levels of the binary tree:",
                "-      if (numDims == 1 && numLeaves > 1) {",
                "-        int levelCount = 2;",
                "-        while (true) {",
                "-          if (numLeaves >= levelCount && numLeaves <= 2*levelCount) {",
                "-            int lastLevel = 2*(numLeaves - levelCount);",
                "-            assert lastLevel >= 0;",
                "-            if (lastLevel != 0) {",
                "-              // Last level is partially filled, so we must rotate the leaf FPs to match.  We do this here, after loading",
                "-              // at read-time, so that we can still delta code them on disk at write:",
                "-              long[] newLeafBlockFPs = new long[numLeaves];",
                "-              System.arraycopy(leafBlockFPs, lastLevel, newLeafBlockFPs, 0, leafBlockFPs.length - lastLevel);",
                "-              System.arraycopy(leafBlockFPs, 0, newLeafBlockFPs, leafBlockFPs.length - lastLevel, lastLevel);",
                "-              leafBlockFPs = newLeafBlockFPs;",
                "-            }",
                "-            break;",
                "-          }",
                "-",
                "-          levelCount *= 2;",
                "-        }",
                "-      }",
                "-      ",
                "-      this.leafBlockFPs = leafBlockFPs;",
                "-      packedIndex = null;",
                "-    }",
                "+    int numBytes = in.readVInt();",
                "+    packedIndex = new byte[numBytes];",
                "+    in.readBytes(packedIndex, 0, numBytes);",
                "@@ -141,24 +87,35 @@ public final class BKDReader extends PointValues implements Accountable {",
                "   long getMinLeafBlockFP() {",
                "-    if (packedIndex != null) {",
                "-      return new ByteArrayDataInput(packedIndex).readVLong();",
                "-    } else {",
                "-      long minFP = Long.MAX_VALUE;",
                "-      for(long fp : leafBlockFPs) {",
                "-        minFP = Math.min(minFP, fp);",
                "-      }",
                "-      return minFP;",
                "-    }",
                "+    return new ByteArrayDataInput(packedIndex).readVLong();",
                "   }",
                "-  /** Used to walk the in-heap index",
                "-   *",
                "-   * @lucene.internal */",
                "-  public abstract class IndexTree implements Cloneable {",
                "-    protected int nodeID;",
                "+  /** Used to walk the in-heap index. The format takes advantage of the limited",
                "+   *  access pattern to the BKD tree at search time, i.e. starting at the root",
                "+   *  node and recursing downwards one child at a time.",
                "+   *  @lucene.internal */",
                "+  public class IndexTree implements Cloneable {",
                "+    private int nodeID;",
                "     // level is 1-based so that we can do level-1 w/o checking each time:",
                "-    protected int level;",
                "-    protected int splitDim;",
                "-    protected final byte[][] splitPackedValueStack;",
                "+    private int level;",
                "+    private int splitDim;",
                "+    private final byte[][] splitPackedValueStack;",
                "+    // used to read the packed byte[]",
                "+    private final ByteArrayDataInput in;",
                "+    // holds the minimum (left most) leaf block file pointer for each level we've recursed to:",
                "+    private final long[] leafBlockFPStack;",
                "+    // holds the address, in the packed byte[] index, of the left-node of each level:",
                "+    private final int[] leftNodePositions;",
                "+    // holds the address, in the packed byte[] index, of the right-node of each level:",
                "+    private final int[] rightNodePositions;",
                "+    // holds the splitDim for each level:",
                "+    private final int[] splitDims;",
                "+    // true if the per-dim delta we read for the node at this level is a negative offset vs. the last split on this dim; this is a packed",
                "+    // 2D array, i.e. to access array[level][dim] you read from negativeDeltas[level*numDims+dim].  this will be true if the last time we",
                "+    // split on this dimension, we next pushed to the left sub-tree:",
                "+    private final boolean[] negativeDeltas;",
                "+    // holds the packed per-level split values; the intersect method uses this to save the cell min/max as it recurses:",
                "+    private final byte[][] splitValuesStack;",
                "+    // scratch value to return from getPackedValue:",
                "+    private final BytesRef scratch;",
                "-    protected IndexTree() {",
                "+    IndexTree() {",
                "       int treeDepth = getTreeDepth();",
                "@@ -168,2 +125,14 @@ public final class BKDReader extends PointValues implements Accountable {",
                "       splitPackedValueStack[level] = new byte[packedBytesLength];",
                "+      leafBlockFPStack = new long[treeDepth+1];",
                "+      leftNodePositions = new int[treeDepth+1];",
                "+      rightNodePositions = new int[treeDepth+1];",
                "+      splitValuesStack = new byte[treeDepth+1][];",
                "+      splitDims = new int[treeDepth+1];",
                "+      negativeDeltas = new boolean[numDims*(treeDepth+1)];",
                "+",
                "+      in = new ByteArrayDataInput(packedIndex);",
                "+      splitValuesStack[0] = new byte[packedBytesLength];",
                "+      readNodeData(false);",
                "+      scratch = new BytesRef();",
                "+      scratch.length = bytesPerDim;",
                "     }      ",
                "@@ -171,2 +140,3 @@ public final class BKDReader extends PointValues implements Accountable {",
                "     public void pushLeft() {",
                "+      int nodePosition = leftNodePositions[level];",
                "       nodeID *= 2;",
                "@@ -176,8 +146,27 @@ public final class BKDReader extends PointValues implements Accountable {",
                "       }",
                "+      System.arraycopy(negativeDeltas, (level-1)*numDims, negativeDeltas, level*numDims, numDims);",
                "+      assert splitDim != -1;",
                "+      negativeDeltas[level*numDims+splitDim] = true;",
                "+      in.setPosition(nodePosition);",
                "+      readNodeData(true);",
                "     }",
                "-",
                "+    ",
                "     /** Clone, but you are not allowed to pop up past the point where the clone happened. */",
                "-    public abstract IndexTree clone();",
                "+    @Override",
                "+    public IndexTree clone() {",
                "+      IndexTree index = new IndexTree();",
                "+      index.nodeID = nodeID;",
                "+      index.level = level;",
                "+      index.splitDim = splitDim;",
                "+      index.leafBlockFPStack[level] = leafBlockFPStack[level];",
                "+      index.leftNodePositions[level] = leftNodePositions[level];",
                "+      index.rightNodePositions[level] = rightNodePositions[level];",
                "+      index.splitValuesStack[index.level] = splitValuesStack[index.level].clone();",
                "+      System.arraycopy(negativeDeltas, level*numDims, index.negativeDeltas, level*numDims, numDims);",
                "+      index.splitDims[level] = splitDims[level];",
                "+      return index;",
                "+    }",
                "     public void pushRight() {",
                "+      int nodePosition = rightNodePositions[level];",
                "       nodeID = nodeID * 2 + 1;",
                "@@ -187,2 +176,7 @@ public final class BKDReader extends PointValues implements Accountable {",
                "       }",
                "+      System.arraycopy(negativeDeltas, (level-1)*numDims, negativeDeltas, level*numDims, numDims);",
                "+      assert splitDim != -1;",
                "+      negativeDeltas[level*numDims+splitDim] = false;",
                "+      in.setPosition(nodePosition);",
                "+      readNodeData(false);",
                "     }",
                "@@ -192,3 +186,3 @@ public final class BKDReader extends PointValues implements Accountable {",
                "       level--;",
                "-      splitDim = -1;",
                "+      splitDim = splitDims[level];",
                "       //System.out.println(\"  pop nodeID=\" + nodeID);",
                "@@ -221,6 +215,14 @@ public final class BKDReader extends PointValues implements Accountable {",
                "     /** Only valid after pushLeft or pushRight, not pop! */",
                "-    public abstract BytesRef getSplitDimValue();",
                "+    public BytesRef getSplitDimValue() {",
                "+      assert isLeafNode() == false;",
                "+      scratch.bytes = splitValuesStack[level];",
                "+      scratch.offset = splitDim * bytesPerDim;",
                "+      return scratch;",
                "+    }",
                "     /** Only valid after pushLeft or pushRight, not pop! */",
                "-    public abstract long getLeafBlockFP();",
                "+    public long getLeafBlockFP() {",
                "+      assert isLeafNode(): \"nodeID=\" + nodeID + \" is not a leaf\";",
                "+      return leafBlockFPStack[level];",
                "+    }",
                "@@ -260,176 +262,2 @@ public final class BKDReader extends PointValues implements Accountable {",
                "     }",
                "-  }",
                "-",
                "-  /** Reads the original simple yet heap-heavy index format */",
                "-  private final class LegacyIndexTree extends IndexTree {",
                "-",
                "-    private long leafBlockFP;",
                "-    private final byte[] splitDimValue = new byte[bytesPerDim];",
                "-    private final BytesRef scratch = new BytesRef();",
                "-",
                "-    public LegacyIndexTree() {",
                "-      setNodeData();",
                "-      scratch.bytes = splitDimValue;",
                "-      scratch.length = bytesPerDim;",
                "-    }",
                "-",
                "-    @Override",
                "-    public LegacyIndexTree clone() {",
                "-      LegacyIndexTree index = new LegacyIndexTree();",
                "-      index.nodeID = nodeID;",
                "-      index.level = level;",
                "-      index.splitDim = splitDim;",
                "-      index.leafBlockFP = leafBlockFP;",
                "-      index.splitPackedValueStack[index.level] = splitPackedValueStack[index.level].clone();",
                "-",
                "-      return index;",
                "-    }",
                "-    ",
                "-    @Override",
                "-    public void pushLeft() {",
                "-      super.pushLeft();",
                "-      setNodeData();",
                "-    }",
                "-    ",
                "-    @Override",
                "-    public void pushRight() {",
                "-      super.pushRight();",
                "-      setNodeData();",
                "-    }",
                "-",
                "-    private void setNodeData() {",
                "-      if (isLeafNode()) {",
                "-        leafBlockFP = leafBlockFPs[nodeID - leafNodeOffset];",
                "-        splitDim = -1;",
                "-      } else {",
                "-        leafBlockFP = -1;",
                "-        int address = nodeID * bytesPerIndexEntry;",
                "-        if (numDims == 1) {",
                "-          splitDim = 0;",
                "-          if (version < BKDWriter.VERSION_IMPLICIT_SPLIT_DIM_1D) {",
                "-            // skip over wastefully encoded 0 splitDim:",
                "-            assert splitPackedValues[address] == 0;",
                "-            address++;",
                "-          }",
                "-        } else {",
                "-          splitDim = splitPackedValues[address++] & 0xff;",
                "-        }",
                "-        System.arraycopy(splitPackedValues, address, splitDimValue, 0, bytesPerDim);",
                "-      }",
                "-    }",
                "-",
                "-    @Override",
                "-    public long getLeafBlockFP() {",
                "-      assert isLeafNode();",
                "-      return leafBlockFP;",
                "-    }",
                "-",
                "-    @Override",
                "-    public BytesRef getSplitDimValue() {",
                "-      assert isLeafNode() == false;",
                "-      return scratch;",
                "-    }",
                "-",
                "-    @Override",
                "-    public void pop() {",
                "-      super.pop();",
                "-      leafBlockFP = -1;",
                "-    }",
                "-  }",
                "-",
                "-  /** Reads the new packed byte[] index format which can be up to ~63% smaller than the legacy index format on 20M NYC taxis tests.  This",
                "-   *  format takes advantage of the limited access pattern to the BKD tree at search time, i.e. starting at the root node and recursing",
                "-   *  downwards one child at a time. */",
                "-  private final class PackedIndexTree extends IndexTree {",
                "-    // used to read the packed byte[]",
                "-    private final ByteArrayDataInput in;",
                "-    // holds the minimum (left most) leaf block file pointer for each level we've recursed to:",
                "-    private final long[] leafBlockFPStack;",
                "-    // holds the address, in the packed byte[] index, of the left-node of each level:",
                "-    private final int[] leftNodePositions;",
                "-    // holds the address, in the packed byte[] index, of the right-node of each level:",
                "-    private final int[] rightNodePositions;",
                "-    // holds the splitDim for each level:",
                "-    private final int[] splitDims;",
                "-    // true if the per-dim delta we read for the node at this level is a negative offset vs. the last split on this dim; this is a packed",
                "-    // 2D array, i.e. to access array[level][dim] you read from negativeDeltas[level*numDims+dim].  this will be true if the last time we",
                "-    // split on this dimension, we next pushed to the left sub-tree:",
                "-    private final boolean[] negativeDeltas;",
                "-    // holds the packed per-level split values; the intersect method uses this to save the cell min/max as it recurses:",
                "-    private final byte[][] splitValuesStack;",
                "-    // scratch value to return from getPackedValue:",
                "-    private final BytesRef scratch;",
                "-",
                "-    public PackedIndexTree() {",
                "-      int treeDepth = getTreeDepth();",
                "-      leafBlockFPStack = new long[treeDepth+1];",
                "-      leftNodePositions = new int[treeDepth+1];",
                "-      rightNodePositions = new int[treeDepth+1];",
                "-      splitValuesStack = new byte[treeDepth+1][];",
                "-      splitDims = new int[treeDepth+1];",
                "-      negativeDeltas = new boolean[numDims*(treeDepth+1)];",
                "-",
                "-      in = new ByteArrayDataInput(packedIndex);",
                "-      splitValuesStack[0] = new byte[packedBytesLength];",
                "-      readNodeData(false);",
                "-      scratch = new BytesRef();",
                "-      scratch.length = bytesPerDim;",
                "-    }",
                "-",
                "-    @Override",
                "-    public PackedIndexTree clone() {",
                "-      PackedIndexTree index = new PackedIndexTree();",
                "-      index.nodeID = nodeID;",
                "-      index.level = level;",
                "-      index.splitDim = splitDim;",
                "-      index.leafBlockFPStack[level] = leafBlockFPStack[level];",
                "-      index.leftNodePositions[level] = leftNodePositions[level];",
                "-      index.rightNodePositions[level] = rightNodePositions[level];",
                "-      index.splitValuesStack[index.level] = splitValuesStack[index.level].clone();",
                "-      System.arraycopy(negativeDeltas, level*numDims, index.negativeDeltas, level*numDims, numDims);",
                "-      index.splitDims[level] = splitDims[level];",
                "-      return index;",
                "-    }",
                "-",
                "-    @Override",
                "-    public void pushLeft() {",
                "-      int nodePosition = leftNodePositions[level];",
                "-      super.pushLeft();",
                "-      System.arraycopy(negativeDeltas, (level-1)*numDims, negativeDeltas, level*numDims, numDims);",
                "-      assert splitDim != -1;",
                "-      negativeDeltas[level*numDims+splitDim] = true;",
                "-      in.setPosition(nodePosition);",
                "-      readNodeData(true);",
                "-    }",
                "-    ",
                "-    @Override",
                "-    public void pushRight() {",
                "-      int nodePosition = rightNodePositions[level];",
                "-      super.pushRight();",
                "-      System.arraycopy(negativeDeltas, (level-1)*numDims, negativeDeltas, level*numDims, numDims);",
                "-      assert splitDim != -1;",
                "-      negativeDeltas[level*numDims+splitDim] = false;",
                "-      in.setPosition(nodePosition);",
                "-      readNodeData(false);",
                "-    }",
                "-",
                "-    @Override",
                "-    public void pop() {",
                "-      super.pop();",
                "-      splitDim = splitDims[level];",
                "-    }",
                "-",
                "-    @Override",
                "-    public long getLeafBlockFP() {",
                "-      assert isLeafNode(): \"nodeID=\" + nodeID + \" is not a leaf\";",
                "-      return leafBlockFPStack[level];",
                "-    }",
                "-",
                "-    @Override",
                "-    public BytesRef getSplitDimValue() {",
                "-      assert isLeafNode() == false;",
                "-      scratch.bytes = splitValuesStack[level];",
                "-      scratch.offset = splitDim * bytesPerDim;",
                "-      return scratch;",
                "-    }",
                "@@ -561,8 +389,3 @@ public final class BKDReader extends PointValues implements Accountable {",
                "   public IntersectState getIntersectState(IntersectVisitor visitor) {",
                "-    IndexTree index;",
                "-    if (packedIndex != null) {",
                "-      index = new PackedIndexTree();",
                "-    } else {",
                "-      index = new LegacyIndexTree();",
                "-    }",
                "+    IndexTree index = new IndexTree();",
                "     return new IntersectState(in.clone(), numDims,",
                "@@ -592,7 +415,3 @@ public final class BKDReader extends PointValues implements Accountable {",
                "-    if (version < BKDWriter.VERSION_COMPRESSED_DOC_IDS) {",
                "-      DocIdsWriter.readInts32(in, count, visitor);",
                "-    } else {",
                "-      DocIdsWriter.readInts(in, count, visitor);",
                "-    }",
                "+    DocIdsWriter.readInts(in, count, visitor);",
                "   }",
                "@@ -605,7 +424,3 @@ public final class BKDReader extends PointValues implements Accountable {",
                "-    if (version < BKDWriter.VERSION_COMPRESSED_DOC_IDS) {",
                "-      DocIdsWriter.readInts32(in, count, docIDs);",
                "-    } else {",
                "-      DocIdsWriter.readInts(in, count, docIDs);",
                "-    }",
                "+    DocIdsWriter.readInts(in, count, docIDs);",
                "@@ -619,5 +434,3 @@ public final class BKDReader extends PointValues implements Accountable {",
                "-    int compressedDim = version < BKDWriter.VERSION_COMPRESSED_VALUES",
                "-        ? -1",
                "-        : readCompressedDim(in);",
                "+    int compressedDim = readCompressedDim(in);",
                "@@ -805,7 +618,3 @@ public final class BKDReader extends PointValues implements Accountable {",
                "   public long ramBytesUsed() {",
                "-    if (packedIndex != null) {",
                "-      return packedIndex.length;",
                "-    } else {",
                "-      return RamUsageEstimator.sizeOf(splitPackedValues) + RamUsageEstimator.sizeOf(leafBlockFPs);",
                "-    }",
                "+    return packedIndex.length;",
                "   }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.java b/lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.java",
                "index 5b2f43ef8f6..7f55895842e 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.java",
                "@@ -84,8 +84,4 @@ public class BKDWriter implements Closeable {",
                "   public static final String CODEC_NAME = \"BKD\";",
                "-  public static final int VERSION_START = 0;",
                "-  public static final int VERSION_COMPRESSED_DOC_IDS = 1;",
                "-  public static final int VERSION_COMPRESSED_VALUES = 2;",
                "-  public static final int VERSION_IMPLICIT_SPLIT_DIM_1D = 3;",
                "-  public static final int VERSION_PACKED_INDEX = 4;",
                "-  public static final int VERSION_CURRENT = VERSION_PACKED_INDEX;",
                "+  public static final int VERSION_START = 4; // version used by Lucene 7.0",
                "+  public static final int VERSION_CURRENT = VERSION_START;",
                "diff --git a/lucene/core/src/java/org/apache/lucene/util/bkd/DocIdsWriter.java b/lucene/core/src/java/org/apache/lucene/util/bkd/DocIdsWriter.java",
                "index d76c6c7fdae..232ca1f23b8 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/util/bkd/DocIdsWriter.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/util/bkd/DocIdsWriter.java",
                "@@ -144,3 +144,3 @@ class DocIdsWriter {",
                "-  static void readInts32(IndexInput in, int count, IntersectVisitor visitor) throws IOException {",
                "+  private static void readInts32(IndexInput in, int count, IntersectVisitor visitor) throws IOException {",
                "     for (int i = 0; i < count; i++) {",
                "diff --git a/lucene/core/src/java/org/apache/lucene/util/fst/FST.java b/lucene/core/src/java/org/apache/lucene/util/fst/FST.java",
                "index 82305fed354..92973f6a94e 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/util/fst/FST.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/util/fst/FST.java",
                "@@ -28,3 +28,2 @@ import java.nio.file.Path;",
                " import org.apache.lucene.codecs.CodecUtil;",
                "-import org.apache.lucene.index.CorruptIndexException;",
                " import org.apache.lucene.store.ByteArrayDataOutput;",
                "@@ -105,23 +104,4 @@ public final class FST<T> implements Accountable {",
                "   private static final String FILE_FORMAT_NAME = \"FST\";",
                "-  private static final int VERSION_START = 0;",
                "-",
                "-  /** Changed numBytesPerArc for array'd case from byte to int. */",
                "-  private static final int VERSION_INT_NUM_BYTES_PER_ARC = 1;",
                "-",
                "-  /** Write BYTE2 labels as 2-byte short, not vInt. */",
                "-  private static final int VERSION_SHORT_BYTE2_LABELS = 2;",
                "-",
                "-  /** Added optional packed format. */",
                "-  private static final int VERSION_PACKED = 3;",
                "-",
                "-  /** Changed from int to vInt for encoding arc targets. ",
                "-   *  Also changed maxBytesPerArc from int to vInt in the array case. */",
                "-  private static final int VERSION_VINT_TARGET = 4;",
                "-",
                "-  /** Don't store arcWithOutputCount anymore */",
                "-  private static final int VERSION_NO_NODE_ARC_COUNTS = 5;",
                "-",
                "-  private static final int VERSION_PACKED_REMOVED = 6;",
                "-",
                "-  private static final int VERSION_CURRENT = VERSION_PACKED_REMOVED;",
                "+  private static final int VERSION_START = 6;",
                "+  private static final int VERSION_CURRENT = VERSION_START;",
                "@@ -287,8 +267,3 @@ public final class FST<T> implements Accountable {",
                "     // back-compat promise for FSTs (they are experimental):",
                "-    version = CodecUtil.checkHeader(in, FILE_FORMAT_NAME, VERSION_PACKED, VERSION_CURRENT);",
                "-    if (version < VERSION_PACKED_REMOVED) {",
                "-      if (in.readByte() == 1) {",
                "-        throw new CorruptIndexException(\"Cannot read packed FSTs anymore\", in);",
                "-      }",
                "-    }",
                "+    version = CodecUtil.checkHeader(in, FILE_FORMAT_NAME, VERSION_START, VERSION_CURRENT);",
                "     if (in.readByte() == 1) {",
                "@@ -327,7 +302,2 @@ public final class FST<T> implements Accountable {",
                "     startNode = in.readVLong();",
                "-    if (version < VERSION_NO_NODE_ARC_COUNTS) {",
                "-      in.readVLong();",
                "-      in.readVLong();",
                "-      in.readVLong();",
                "-    }",
                "@@ -770,7 +740,3 @@ public final class FST<T> implements Accountable {",
                "         arc.numArcs = in.readVInt();",
                "-        if (version >= VERSION_VINT_TARGET) {",
                "-          arc.bytesPerArc = in.readVInt();",
                "-        } else {",
                "-          arc.bytesPerArc = in.readInt();",
                "-        }",
                "+        arc.bytesPerArc = in.readVInt();",
                "         //System.out.println(\"  array numArcs=\" + arc.numArcs + \" bpa=\" + arc.bytesPerArc);",
                "@@ -810,9 +776,3 @@ public final class FST<T> implements Accountable {",
                "   private long readUnpackedNodeTarget(BytesReader in) throws IOException {",
                "-    long target;",
                "-    if (version < VERSION_VINT_TARGET) {",
                "-      target = in.readInt();",
                "-    } else {",
                "-      target = in.readVLong();",
                "-    }",
                "-    return target;",
                "+    return in.readVLong();",
                "   }",
                "@@ -859,7 +819,3 @@ public final class FST<T> implements Accountable {",
                "       arc.numArcs = in.readVInt();",
                "-      if (version >= VERSION_VINT_TARGET) {",
                "-        arc.bytesPerArc = in.readVInt();",
                "-      } else {",
                "-        arc.bytesPerArc = in.readInt();",
                "-      }",
                "+      arc.bytesPerArc = in.readVInt();",
                "       arc.arcIdx = -1;",
                "@@ -922,7 +878,3 @@ public final class FST<T> implements Accountable {",
                "         // Skip bytesPerArc:",
                "-        if (version >= VERSION_VINT_TARGET) {",
                "-          in.readVInt();",
                "-        } else {",
                "-          in.readInt();",
                "-        }",
                "+        in.readVInt();",
                "       } else {",
                "@@ -1094,7 +1046,3 @@ public final class FST<T> implements Accountable {",
                "       arc.numArcs = in.readVInt();",
                "-      if (version >= VERSION_VINT_TARGET) {",
                "-        arc.bytesPerArc = in.readVInt();",
                "-      } else {",
                "-        arc.bytesPerArc = in.readInt();",
                "-      }",
                "+      arc.bytesPerArc = in.readVInt();",
                "       arc.posArcsStart = in.getPosition();"
            ],
            "changed_files": [
                "lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter.java",
                "lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader.java",
                "lucene/core/src/java/org/apache/lucene/codecs/blocktree/BitSetPostingsEnum.java",
                "lucene/core/src/java/org/apache/lucene/codecs/blocktree/BitSetTermsEnum.java",
                "lucene/core/src/java/org/apache/lucene/codecs/lucene62/Lucene62SegmentInfoFormat.java",
                "lucene/core/src/java/org/apache/lucene/codecs/lucene62/package-info.java",
                "lucene/core/src/java/org/apache/lucene/codecs/lucene70/package-info.java",
                "lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader.java",
                "lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter.java",
                "lucene/core/src/java/org/apache/lucene/util/bkd/DocIdsWriter.java",
                "lucene/core/src/java/org/apache/lucene/util/fst/FST.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: read",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "dea01141caee048e6fe5ecbe3bb95ebcd466d929",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520365359,
            "hunks": 13,
            "message": "Add version 6.6.4",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/util/Version.java b/lucene/core/src/java/org/apache/lucene/util/Version.java",
                "index ef0320ec214..7d7c68e8dcd 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/util/Version.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/util/Version.java",
                "@@ -238,2 +238,9 @@ public final class Version {",
                "    * Match settings and bugs in Lucene's 6.6.3 release.",
                "+   * @deprecated (6.6.4) Use latest",
                "+   */",
                "+  @Deprecated",
                "+  public static final Version LUCENE_6_6_3 = new Version(6, 6, 3);",
                "+",
                "+  /**",
                "+   * Match settings and bugs in Lucene's 6.6.4 release.",
                "    * <p>",
                "@@ -242,3 +249,3 @@ public final class Version {",
                "    */",
                "-  public static final Version LUCENE_6_6_3 = new Version(6, 6, 3);",
                "+  public static final Version LUCENE_6_6_4 = new Version(6, 6, 4);",
                "@@ -263,3 +270,3 @@ public final class Version {",
                "    */",
                "-  public static final Version LATEST = LUCENE_6_6_3;",
                "+  public static final Version LATEST = LUCENE_6_6_4;",
                "diff --git a/lucene/version.properties b/lucene/version.properties",
                "index 681b1dad772..7d4e08a5e87 100644",
                "--- a/lucene/version.properties",
                "+++ b/lucene/version.properties",
                "@@ -4,3 +4,3 @@",
                " # enter new base version (format \"x.y.z\", no prefix/appendix): ",
                "-version.base=6.6.3",
                "+version.base=6.6.4",
                "diff --git a/solr/example/example-DIH/solr/atom/conf/solrconfig.xml b/solr/example/example-DIH/solr/atom/conf/solrconfig.xml",
                "index c03100db7d8..5b9bc44a99f 100644",
                "--- a/solr/example/example-DIH/solr/atom/conf/solrconfig.xml",
                "+++ b/solr/example/example-DIH/solr/atom/conf/solrconfig.xml",
                "@@ -38,3 +38,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.4</luceneMatchVersion>",
                "diff --git a/solr/example/example-DIH/solr/db/conf/solrconfig.xml b/solr/example/example-DIH/solr/db/conf/solrconfig.xml",
                "index 54b6afad752..0aea8ca2037 100644",
                "--- a/solr/example/example-DIH/solr/db/conf/solrconfig.xml",
                "+++ b/solr/example/example-DIH/solr/db/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.4</luceneMatchVersion>",
                "diff --git a/solr/example/example-DIH/solr/mail/conf/solrconfig.xml b/solr/example/example-DIH/solr/mail/conf/solrconfig.xml",
                "index 8dc89230956..fb4551e41ff 100644",
                "--- a/solr/example/example-DIH/solr/mail/conf/solrconfig.xml",
                "+++ b/solr/example/example-DIH/solr/mail/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.4</luceneMatchVersion>",
                "diff --git a/solr/example/example-DIH/solr/solr/conf/solrconfig.xml b/solr/example/example-DIH/solr/solr/conf/solrconfig.xml",
                "index 53aec4edafc..5da4e998cbb 100644",
                "--- a/solr/example/example-DIH/solr/solr/conf/solrconfig.xml",
                "+++ b/solr/example/example-DIH/solr/solr/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.4</luceneMatchVersion>",
                "diff --git a/solr/example/example-DIH/solr/tika/conf/solrconfig.xml b/solr/example/example-DIH/solr/tika/conf/solrconfig.xml",
                "index 5c3f0756487..414ceb173cd 100644",
                "--- a/solr/example/example-DIH/solr/tika/conf/solrconfig.xml",
                "+++ b/solr/example/example-DIH/solr/tika/conf/solrconfig.xml",
                "@@ -38,3 +38,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.4</luceneMatchVersion>",
                "diff --git a/solr/example/files/conf/solrconfig.xml b/solr/example/files/conf/solrconfig.xml",
                "index 38b5dfeae14..1b99b32a80d 100644",
                "--- a/solr/example/files/conf/solrconfig.xml",
                "+++ b/solr/example/files/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.4</luceneMatchVersion>",
                "diff --git a/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml b/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml",
                "index d8f09f9112f..4ebc5fad8a9 100644",
                "--- a/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml",
                "+++ b/solr/server/solr/configsets/basic_configs/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.4</luceneMatchVersion>",
                "diff --git a/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml b/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml",
                "index 97ef7da2cf5..7855dfa9213 100644",
                "--- a/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml",
                "+++ b/solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.4</luceneMatchVersion>",
                "diff --git a/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml b/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml",
                "index 7541fa3d5f0..76b239ab8b6 100644",
                "--- a/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml",
                "+++ b/solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml",
                "@@ -37,3 +37,3 @@",
                "   -->",
                "-  <luceneMatchVersion>6.6.3</luceneMatchVersion>",
                "+  <luceneMatchVersion>6.6.4</luceneMatchVersion>"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/util/Version.java",
                "lucene/version.properties",
                "solr/example/example-DIH/solr/atom/conf/solrconfig.xml",
                "solr/example/example-DIH/solr/db/conf/solrconfig.xml",
                "solr/example/example-DIH/solr/mail/conf/solrconfig.xml",
                "solr/example/example-DIH/solr/solr/conf/solrconfig.xml",
                "solr/example/example-DIH/solr/tika/conf/solrconfig.xml",
                "solr/example/files/conf/solrconfig.xml",
                "solr/server/solr/configsets/basic_configs/conf/solrconfig.xml",
                "solr/server/solr/configsets/data_driven_schema_configs/conf/solrconfig.xml",
                "solr/server/solr/configsets/sample_techproducts_configs/conf/solrconfig.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/6.6.4",
                "releases/lucene-solr/6.6.5",
                "releases/lucene-solr/6.6.6"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: file, server",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "1b8651db4f2656fdaf59dd0f44550766150ed829",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520402036,
            "hunks": 1,
            "message": "SOLR-12011: Remove unused import",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "index 13f0f98f3cd..70fb504b96e 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "@@ -30,3 +30,2 @@ import java.util.Map;",
                " import java.util.Optional;",
                "-import java.util.OptionalLong;",
                " import java.util.Set;"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12011": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12011",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a0d21e06bdcbc8ac694c3bbae5d8344acb8a5947",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520532198,
            "hunks": 6,
            "message": "Ref Guide: really minor typos/grammar fixes",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/a-quick-overview.adoc b/solr/solr-ref-guide/src/a-quick-overview.adoc",
                "index bf9fbe839cd..b1f66b0f011 100644",
                "--- a/solr/solr-ref-guide/src/a-quick-overview.adoc",
                "+++ b/solr/solr-ref-guide/src/a-quick-overview.adoc",
                "@@ -20,3 +20,3 @@ Solr is a search server built on top of Apache Lucene, an open source, Java-base",
                "-Here is a example of how Solr might be integrated into an application:",
                "+Here is a example of how Solr could integrate with an application:",
                "@@ -25,3 +25,3 @@ image::images/a-quick-overview/sample-client-app-arch.png[image,width=500,height",
                "-In the scenario above, Solr runs along side other server applications. For example, an online store application would provide a user interface, a shopping cart, and a way to make purchases for end users; while an inventory management application would allow store employees to edit product information. The product metadata would be kept in some kind of database, as well as in Solr.",
                "+In the scenario above, Solr runs alongside other server applications. For example, an online store application would provide a user interface, a shopping cart, and a way to make purchases for end users; while an inventory management application would allow store employees to edit product information. The product metadata would be kept in some kind of database, as well as in Solr.",
                "@@ -39,5 +39,5 @@ If Solr's capabilities are not impressive enough, its ability to handle very hig",
                "-A relatively common scenario is that you have so much data, or so many queries, that a single Solr server is unable to handle your entire workload. In this case, you can scale up the capabilities of your application using <<solrcloud.adoc#solrcloud,SolrCloud>> to better distribute the data, and the processing of requests, across many servers. Multiple options can be mixed and matched depending on the type of scalability you need.",
                "+A relatively common scenario is that you have so much data, or so many queries, that a single Solr server is unable to handle your entire workload. In this case, you can scale up the capabilities of your application using <<solrcloud.adoc#solrcloud,SolrCloud>> to better distribute the data, and the processing of requests, across many servers. Multiple options can be mixed and matched depending on the scalability you need.",
                "-For example: \"Sharding\" is a scaling technique in which a collection is split into multiple logical pieces called \"shards\" in order to scale up the number of documents in a collection beyond what could physically fit on a single server. Incoming queries are distributed to every shard in the collection, which respond with merged results. Another technique available is to increase the \"Replication Factor\" of your collection, which allows you to add servers with additional copies of your collection to handle higher concurrent query load by spreading the requests around to multiple machines. Sharding and Replication are not mutually exclusive, and together make Solr an extremely powerful and scalable platform.",
                "+For example: \"Sharding\" is a scaling technique in which a collection is split into multiple logical pieces called \"shards\" in order to scale up the number of documents in a collection beyond what could physically fit on a single server. Incoming queries are distributed to every shard in the collection, which respond with merged results. Another technique available is to increase the \"Replication Factor\" of your collection, which allows you to add servers with additional copies of your collection to handle higher concurrent query load by spreading the requests around to multiple machines. Sharding and replication are not mutually exclusive, and together make Solr an extremely powerful and scalable platform.",
                "diff --git a/solr/solr-ref-guide/src/distributed-requests.adoc b/solr/solr-ref-guide/src/distributed-requests.adoc",
                "index f5aaff469e9..096f632bbdd 100644",
                "--- a/solr/solr-ref-guide/src/distributed-requests.adoc",
                "+++ b/solr/solr-ref-guide/src/distributed-requests.adoc",
                "@@ -120,3 +120,3 @@ Document and term statistics are needed in order to calculate relevancy. Solr pr",
                "-* `LocalStatsCache`: This only uses local term and document statistics to compute relevance. In cases with uniform term distribution across shards, this works reasonably well.This option is the default if no `<statsCache>` is configured.",
                "+* `LocalStatsCache`: This only uses local term and document statistics to compute relevance. In cases with uniform term distribution across shards, this works reasonably well. This option is the default if no `<statsCache>` is configured.",
                " * `ExactStatsCache`: This implementation uses global values (across the collection) for document frequency.",
                "diff --git a/solr/solr-ref-guide/src/solr-tutorial.adoc b/solr/solr-ref-guide/src/solr-tutorial.adoc",
                "index 4abb1305a44..81d33757284 100644",
                "--- a/solr/solr-ref-guide/src/solr-tutorial.adoc",
                "+++ b/solr/solr-ref-guide/src/solr-tutorial.adoc",
                "@@ -4,6 +4,6 @@",
                "-This tutorial covers getting Solr up and running, ingesting a variety of data sources into multiple collections,",
                "+This tutorial covers getting Solr up and running, ingesting a variety of data sources into Solr collections,",
                " and getting a feel for the Solr administrative and search interfaces.",
                "-It is organized into three sections that each build on the one before it. The <<exercise-1,first exercise>> will ask you to start Solr, create a collection, index some basic documents, and then perform a few searches.",
                "+The tutorial is organized into three sections that each build on the one before it. The <<exercise-1,first exercise>> will ask you to start Solr, create a collection, index some basic documents, and then perform some searches."
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/a-quick-overview.adoc",
                "solr/solr-ref-guide/src/distributed-requests.adoc",
                "solr/solr-ref-guide/src/solr-tutorial.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b20573d91e09881f0e91fea01a7b6ced2abadc63"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c89019348d6019d6523f928f92a41fc503a7149b",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518508309,
            "hunks": 2,
            "message": "Typo corrected.",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/schema/SortableTextField.java b/solr/core/src/java/org/apache/solr/schema/SortableTextField.java",
                "index c30b1b1216f..1d2c21de7a8 100644",
                "--- a/solr/core/src/java/org/apache/solr/schema/SortableTextField.java",
                "+++ b/solr/core/src/java/org/apache/solr/schema/SortableTextField.java",
                "@@ -82,6 +82,6 @@ public class SortableTextField extends TextField {",
                "-    // by the time our init() is called, super.setArgs has already removed & procesesd any explicit",
                "+    // by the time our init() is called, super.setArgs has already removed & processed any explicit",
                "     // \"docValues=foo\" or useDocValuesAsStored=bar args...",
                "     //  - If the user explicitly said docValues=false, we want to respect that and not change it.",
                "-    //    - if the user didn't explicit specify anything, then we want to implicitly *default* docValues=true",
                "+    //    - if the user didn't explicitly specify anything, then we want to implicitly *default* docValues=true",
                "     //  - The inverse is true for useDocValuesAsStored=true:"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/schema/SortableTextField.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "8b3ae1be6ae02480c5e3423faaace84c2806fd2e"
                ]
            ],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6d712c5e4b2fc8f4ac6dfec2eac4a17386c978f0",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519243726,
            "hunks": 9,
            "message": "LUCENE-8182: Fixed BoostingQuery to apply the context boost instead of the parent query boost",
            "diff": [
                "diff --git a/lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery.java b/lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery.java",
                "index 4f0cb09275e..53201bd7298 100644",
                "--- a/lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery.java",
                "+++ b/lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery.java",
                "@@ -54,3 +54,3 @@ import org.apache.lucene.search.Weight;",
                " public class BoostingQuery extends Query {",
                "-    private final float boost;                            // the amount to boost by",
                "+    private final float contextBoost;                     // the amount to boost by",
                "     private final Query match;                            // query to match",
                "@@ -61,3 +61,3 @@ public class BoostingQuery extends Query {",
                "       this.context = context; // ignore context-only matches",
                "-      this.boost = boost;",
                "+      this.contextBoost = boost;",
                "     }",
                "@@ -69,3 +69,3 @@ public class BoostingQuery extends Query {",
                "       if (match != matchRewritten || context != contextRewritten) {",
                "-        return new BoostingQuery(matchRewritten, contextRewritten, boost);",
                "+        return new BoostingQuery(matchRewritten, contextRewritten, contextBoost);",
                "       }",
                "@@ -98,5 +98,5 @@ public class BoostingQuery extends Query {",
                "           }",
                "-          return Explanation.match(matchExplanation.getValue() * boost, \"product of:\",",
                "+          return Explanation.match(matchExplanation.getValue() * contextBoost, \"product of:\",",
                "               matchExplanation,",
                "-              Explanation.match(boost, \"boost\"));",
                "+              Explanation.match(contextBoost, \"boost\"));",
                "         }",
                "@@ -127,3 +127,3 @@ public class BoostingQuery extends Query {",
                "                   && (contextTwoPhase == null || contextTwoPhase.matches())) {",
                "-                score *= boost;",
                "+                score *= contextBoost;",
                "               }",
                "@@ -151,3 +151,3 @@ public class BoostingQuery extends Query {",
                "     public float getBoost() {",
                "-      return boost;",
                "+      return contextBoost;",
                "     }",
                "@@ -156,3 +156,3 @@ public class BoostingQuery extends Query {",
                "     public int hashCode() {",
                "-      return 31 * classHash() + Objects.hash(match, context, boost);",
                "+      return 31 * classHash() + Objects.hash(match, context, contextBoost);",
                "     }",
                "@@ -168,3 +168,3 @@ public class BoostingQuery extends Query {",
                "           && context.equals(other.context)",
                "-          && Float.floatToIntBits(boost) == Float.floatToIntBits(other.boost);",
                "+          && Float.floatToIntBits(contextBoost) == Float.floatToIntBits(other.contextBoost);",
                "     }"
            ],
            "changed_files": [
                "lucene/queries/src/java/org/apache/lucene/queries/BoostingQuery.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8182": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8182",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b4e33a038569f97752abd61a26e8af0b652e5b44",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1509763417,
            "hunks": 3,
            "message": "SOLR-11503: Collections created with legacyCloud=true cannot be opened if legacyCloud=false",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkController.java b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "index 02ed406749e..182af5fa712 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "@@ -1407,5 +1407,15 @@ public class ZkController {",
                "       CloudDescriptor cloudDesc = cd.getCloudDescriptor();",
                "-      String coreNodeName = cloudDesc.getCoreNodeName();",
                "-      if (coreNodeName == null)",
                "-        throw new SolrException(ErrorCode.SERVER_ERROR, \"No coreNodeName for \" + cd);",
                "+      String nodeName = cloudDesc.getCoreNodeName();",
                "+      if (nodeName == null) {",
                "+        if (cc.repairCoreProperty(cd, CoreDescriptor.CORE_NODE_NAME) == false) {",
                "+          throw new SolrException(ErrorCode.SERVER_ERROR, \"No coreNodeName for \" + cd);",
                "+        }",
                "+        nodeName = cloudDesc.getCoreNodeName();",
                "+        // verify that the repair worked.",
                "+        if (nodeName == null) {",
                "+          throw new SolrException(ErrorCode.SERVER_ERROR, \"No coreNodeName for \" + cd);",
                "+        }",
                "+      }",
                "+      final String coreNodeName = nodeName;",
                "+",
                "       if (cloudDesc.getShardId() == null) {",
                "diff --git a/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "index 0c77a7ea5c1..3b6710d7d39 100644",
                "--- a/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "+++ b/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "@@ -862,2 +862,3 @@ public class CoreContainer {",
                "         core = createFromDescriptor(cd, true, newCollection);",
                "+        coresLocator.persist(this, cd); // Write out the current core properties in case anything changed when the core was created",
                "       } finally {",
                "@@ -1531,3 +1532,41 @@ public class CoreContainer {",
                "   }",
                "-  ",
                "+",
                "+",
                "+  /**",
                "+   *",
                "+   * @param cd CoreDescriptor, presumably a deficient one",
                "+   * @param prop The property that needs to be repaired.",
                "+   * @return true if we were able to successfuly perisist the repaired coreDescriptor, false otherwise.",
                "+   *",
                "+   * See SOLR-11503, This can be removed when there's no chance we'll need to upgrade a",
                "+   * Solr isntallation createged with legacyCloud=true from 6.6.1 through 7.1",
                "+   */",
                "+  public boolean repairCoreProperty(CoreDescriptor cd, String prop) {",
                "+    // So far, coreNodeName is the only property that we need to repair, this may get more complex as other properties",
                "+    // are added.",
                "+",
                "+    if (CoreDescriptor.CORE_NODE_NAME.equals(prop) == false) {",
                "+      throw new SolrException(ErrorCode.SERVER_ERROR,",
                "+          String.format(Locale.ROOT,\"The only supported property for repair is currently [%s]\",",
                "+              CoreDescriptor.CORE_NODE_NAME));",
                "+    }",
                "+",
                "+    // Try to read the coreNodeName from the cluster state.",
                "+",
                "+    String coreName = cd.getName();",
                "+    DocCollection coll = getZkController().getZkStateReader().getClusterState().getCollection(cd.getCollectionName());",
                "+    for (Replica rep : coll.getReplicas()) {",
                "+      if (coreName.equals(rep.getCoreName())) {",
                "+        log.warn(\"Core properties file for node {} found with no coreNodeName, attempting to repair with value {}. See SOLR-11503. \" +",
                "+            \"This message should only appear if upgrading from collections created Solr 6.6.1 through 7.1.\",",
                "+            rep.getCoreName(), rep.getName());",
                "+        cd.getCloudDescriptor().setCoreNodeName(rep.getName());",
                "+        coresLocator.persist(this, cd);",
                "+        return true;",
                "+      }",
                "+    }",
                "+    log.error(\"Could not repair coreNodeName in core.properties file for core {}\", coreName);",
                "+    return false;",
                "+  }",
                "+",
                " }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "solr/core/src/java/org/apache/solr/core/CoreContainer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11503": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/6.6.3",
                "releases/lucene-solr/6.6.4",
                "releases/lucene-solr/6.6.5",
                "releases/lucene-solr/6.6.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11503",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cb88bdbee290f361f70ed1c0847f6995031b29d3",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1517848101,
            "hunks": 21,
            "message": "SOLR-11947: Work in progress",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/stream-evaluator-reference.adoc b/solr/solr-ref-guide/src/stream-evaluator-reference.adoc",
                "index e679eacacb0..b9de68fc0f3 100644",
                "--- a/solr/solr-ref-guide/src/stream-evaluator-reference.adoc",
                "+++ b/solr/solr-ref-guide/src/stream-evaluator-reference.adoc",
                "@@ -94,2 +94,4 @@ add(fieldA,if(gt(fieldA,fieldB),fieldA,fieldB)) // if fieldA > fieldB then field",
                "+== akima (TODO)",
                "+",
                " == analyze",
                "@@ -275,2 +277,3 @@ if(gt(fieldA,fieldB),cbrt(fieldA),cbrt(fieldB)) // if fieldA > fieldB then retur",
                "+",
                " == ceil",
                "@@ -293,2 +296,5 @@ if(gt(fieldA,fieldB),ceil(fieldA),ceil(fieldB)) // if fieldA > fieldB then retur",
                "+",
                "+== chiSquareDataSet (TODO)",
                "+",
                " == col",
                "@@ -310,2 +316,37 @@ col(tupleList, fieldName)",
                "+== colAt",
                "+",
                "+The `colAt` function returns the column of a matrix at a specific index as a numeric array.",
                "+",
                "+=== colAt Parameters",
                "+",
                "+* `matrix`: the matrix to operate on",
                "+* `integer`: the index of the column to return",
                "+",
                "+=== colAt Syntax",
                "+",
                "+[source,text]",
                "+colAt(matrix, 10)",
                "+",
                "+=== colAt Returns",
                "+",
                "+numeric array : the column of the matrix",
                "+",
                "+== columnCount",
                "+",
                "+The `columnCount` function returns the number of columns in a `matrix`.",
                "+",
                "+=== columnCount Parameters",
                "+",
                "+* `matrix`: the matrix to operate on",
                "+",
                "+=== columnCount Syntax",
                "+",
                "+[source,text]",
                "+columnCount(matrix)",
                "+",
                "+=== columnCount Returns",
                "+",
                "+integer : number columns in the matrix.",
                "+",
                " == constantDistribution",
                "@@ -485,2 +526,6 @@ cumulativeProbability(normalDistribution(500, 25), 502) // Returns the cumulativ",
                "+",
                "+== density (TODO)",
                "+",
                "+",
                " == derivative",
                "@@ -493,3 +538,3 @@ take the derivative of a derivative.",
                "-* `spline` | `loess` | `derivative`: The functions to compute the derivative for.",
                "+* `spline` | `loess` | `akima` | `lerp` | `derivative`: The functions to compute the derivative for.",
                "@@ -817,2 +862,5 @@ factorial(100) //Computes the factorial of 100",
                "+== featureSelect (TODO)",
                "+",
                "+",
                " == finddelay",
                "@@ -872,2 +920,25 @@ freqTable(integerArray)",
                "+== fuzzyKmeans (TODO)",
                "+",
                "+== gammaDistribution",
                "+",
                "+The `gammaDistribution` function returns a https://en.wikipedia.org/wiki/Gamma_distribution[gamma probability distribution] based on its parameters. This function is part of the",
                "+probability distribution framework and is designed to work with the `<<sample>>`, `<<kolmogorovSmirnov>>` and `<<cumulativeProbability>>` functions.",
                "+",
                "+=== gammaDistribution Parameters",
                "+",
                "+* `double`: shape",
                "+* `double`: scale",
                "+",
                "+=== gammaDistribution Returns",
                "+",
                "+A probability distribution function,",
                "+",
                "+=== gammaDistribution Syntax",
                "+",
                "+[source,text]",
                "+gammaDistribution(1, 10)",
                "+",
                "+",
                "+",
                " == geometricDistribution",
                "@@ -890,20 +961,80 @@ A probability distribution function",
                "-== gammaDistribution",
                "+== getAttribute",
                "-The `gammaDistribution` function returns a https://en.wikipedia.org/wiki/Gamma_distribution[gamma probability distribution] based on its parameters. This function is part of the",
                "-probability distribution framework and is designed to work with the `<<sample>>`, `<<kolmogorovSmirnov>>` and `<<cumulativeProbability>>` functions.",
                "+The `getAttribute` function returns an attribute from a `matrix` by its key. Any function that returns a `matrix` can",
                "+also set attributes on the `matrix` with additional information. The `<<setAttribute>>` function can also be used",
                "+to set attributes on a `matrix`. The key to an attribute is always a string. The value of attribute can be any object",
                "+including numerics, arrays, maps, matrixes etc...",
                "-=== gammaDistribution Parameters",
                "+=== getAttribute Parameters",
                "-* `double`: shape",
                "-* `double`: scale",
                "+* `matrix` : The matrix to set the attribute on",
                "+* `string` : The key for the attribute",
                "-=== gammaDistribution Returns",
                "+=== getAttribute Syntax",
                "-A probability distribution function,",
                "+[source,text]",
                "+getAttribute(matrix, key)",
                "-=== gammaDistribution Syntax",
                "+=== getAttribute Returns",
                "+",
                "+object : any object",
                "+",
                "+== getAttributes",
                "+",
                "+The `getAttributes` function returns the attribute map from matrix. See the `getAttribute` function for more details",
                "+on attributes.",
                "+",
                "+=== getAttributes Parameters",
                "+",
                "+* `matrix` : The matrix to retrieve the attribute map from.",
                "+",
                "+=== getAttributes Syntax:",
                " [source,text]",
                "-gammaDistribution(1, 10)",
                "+getAttributes(matrix)",
                "+",
                "+=== getAttributes Returns",
                "+",
                "+map : The map of attributes.",
                "+",
                "+== getCentroids (TODO)",
                "+",
                "+== getClusters (TODO)",
                "+",
                "+== getColumnLabels",
                "+",
                "+The `getColumnLabels` function returns the columns labels of a matrix. The column labels can be optionally",
                "+set by any function that returns a matrix. The column labels can also be set via the `setColumnLabels` function.",
                "+",
                "+=== getColumnLabels Parameters",
                "+",
                "+* `matrix`: The matrix to return the column labels of.",
                "+",
                "+=== getColumnLabels Syntax",
                "+",
                "+getColumnLabels(matrix)",
                "+",
                "+=== getColumnLabels Returns",
                "+",
                "+string array : The labels for each column in the matrix",
                "+",
                "+== getMembershipMatrix (TODO)",
                "+",
                "+== getRowLabels",
                "+",
                "+The `getRowLabels` function returns the row labels of a matrix. The row labels can be optionally",
                "+set by any function that returns a matrix. The row labels can also be set via the `setRowLabels` function.",
                "+",
                "+=== getRowLabels Parameters",
                "+",
                "+* `matrix`: The matrix to return the row labels from.",
                "+",
                "+=== getRowLabels Syntax",
                "+",
                "+getRowLabels(matrix)",
                "+",
                "+=== getRowLabels Returns",
                "+",
                "+string array : The labels for each row in the matrix",
                "@@ -1022,2 +1153,39 @@ if(eq(fieldB,null), null, div(fieldA,fieldB)) // if fieldB is null then null els",
                "+== indexOf",
                "+",
                "+The `indexOf` function returns the index of a string in an array of strings.",
                "+",
                "+=== indexOf Parameters",
                "+",
                "+* `string array` : The array to operate on.",
                "+* `string` : The string to search for in the array.",
                "+",
                "+=== indexOf Syntax",
                "+",
                "+[source,text]",
                "+indexOf(stringArray, string)",
                "+",
                "+=== indexOf Returns",
                "+",
                "+integer : The index of the string in the array or -1 if the string is not found.",
                "+",
                "+== integrate",
                "+",
                "+The `integrate` function computes the integral of an interpolation function for a specific range of the curve.",
                "+",
                "+=== integrate Parameters",
                "+",
                "+* `spline` | `akima` | `lerp` | `loess` : The interpolation function to compute the integral for.",
                "+* `numeric` : start of integral range",
                "+* `numeric` : end of integral range",
                "+",
                "+=== integrate Syntax",
                "+",
                "+[source,text]",
                "+integrate(function, start, end)",
                "+",
                "+=== integrate Returns",
                "+",
                "+numeric : The integral",
                "+",
                " == length",
                "@@ -1036,2 +1204,4 @@ length(numericArray)",
                "+== lerp (TOD0)",
                "+",
                " == loess",
                "@@ -1102,2 +1272,6 @@ logNormalDistribution(.3, .0)",
                "+== kmeans (TODO)",
                "+",
                "+== knn (TODO)",
                "+",
                " == kolmogorovSmirnov",
                "@@ -1165,2 +1339,5 @@ lteq(add(fieldA,fieldB),6) // fieldA + fieldB <= 6",
                "+",
                "+== mannWhitney (TODO)",
                "+",
                " == markovChain",
                "@@ -1359,2 +1536,7 @@ mult(fieldA,if(gt(fieldA,fieldB),fieldA,fieldB)) // if fieldA > fieldB then fiel",
                "+",
                "+== multiKmeans (TODO)",
                "+",
                "+== multiVariateNormalDistribution (TODO)",
                "+",
                " == normalDistribution",
                "@@ -1465,2 +1647,4 @@ or(fieldA,fieldB,fieldC,and(fieldD,fieldE),fieldF)",
                "+== pairedTtest (TODO)",
                "+",
                " == poissonDistribution",
                "@@ -1693,2 +1877,37 @@ if(gt(fieldA,fieldB),sqrt(fieldA),sqrt(fieldB)) // if fieldA > fieldB then retur",
                "+== rowAt",
                "+",
                "+The `rowAt` function returns the row of a matrix at a specific index as a numeric array.",
                "+",
                "+=== rowAt Parameters",
                "+",
                "+* `matrix`: the matrix to operate on",
                "+* `integer`: the index of the row to return",
                "+",
                "+=== rowAt Syntax",
                "+",
                "+[source,text]",
                "+rowAt(matrix, 10)",
                "+",
                "+=== rowAt Returns",
                "+",
                "+numeric array : the row of the matrix",
                "+",
                "+== rowCount",
                "+",
                "+The `rowCount` function returns the number of rows in a `matrix`.",
                "+",
                "+=== rowCount Parameters",
                "+",
                "+* `matrix`: the matrix to operate on",
                "+",
                "+=== rowCount Syntax",
                "+",
                "+[source,text]",
                "+rowCount(matrix)",
                "+",
                "+=== rowCount Returns",
                "+",
                "+integer : number rows in the matrix.",
                "+",
                " == sample",
                "@@ -1828,3 +2047,56 @@ sequence(100, 0, 1) // Returns a sequence of length 100, starting from 0 with a",
                "+== setAttributes",
                "+",
                "+The `setAttributes` function sets an attributes map of a `matrix`.",
                "+",
                "+=== setAttributes Parameters",
                "+",
                "+* `matrix` : The matrix to set the attributes map to.",
                "+* `map` : The map of attributes to set on the matrix.",
                "+",
                "+=== setAttributes Syntax",
                "+",
                "+[source,text]",
                "+setAttributes(matrix, map)",
                "+",
                "+=== setAttributes Returns",
                "+",
                "+matrix : The matrix with the attributes set.",
                "+",
                "+== setColumnLabels",
                "+",
                "+The `setColumnLabels` function sets the columns labels of a matrix.",
                "+",
                "+=== setColumnLabels Parameters",
                "+",
                "+* `matrix`: The matrix to set the column labels to.",
                "+* `string array` : The column labels to set the matrix",
                "+",
                "+=== setColumnLabels Syntax",
                "+",
                "+setColumnLabels(matrix, labels)",
                "+",
                "+=== setColumnLabels Returns",
                "+",
                "+matrix : The matrix with the labels set.",
                "+",
                "+== setRowLabels",
                "+",
                "+The `setRowLabels` function sets the row labels of a matrix.",
                "+",
                "+=== setRowLabels Parameters",
                "+",
                "+* `matrix`: The matrix to set the row labels to.",
                "+* `string array` : The row labels to set to the matrix",
                "+",
                "+=== setRowLabels Syntax",
                "+",
                "+setRowLabels(matrix, labels)",
                "+",
                "+=== setRowLabels Returns",
                "+",
                "+matrix : The matrix with the labels set.",
                "+",
                " == sin",
                "+",
                " The `sin` function returns the trigonometric sine of a number.",
                "@@ -1981,2 +2253,23 @@ numeric array: sum of the rows.",
                "+== sumSq",
                "+",
                "+The `sumSq` function returns the sum-of-squares of the values in a numeric array.",
                "+",
                "+=== sumSq Parameters",
                "+",
                "+* `numeric array` : The numeric array to compute the sumSq of.",
                "+",
                "+=== sumSq Syntac",
                "+",
                "+[source,text]",
                "+sumSq(numericArray)",
                "+",
                "+=== sumSq Returns",
                "+",
                "+numeric : result of the sumSq calculation",
                "+",
                "+== termVectors (TODO)",
                "+",
                "+== topFeatures (TODO)",
                "+",
                " == transpose",
                "@@ -2019,2 +2312,4 @@ Probability distribution function",
                "+== ttest (TODO)",
                "+",
                " == uniformDistribution"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/stream-evaluator-reference.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11947": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11947",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d2d987fd7499e6394285f0744a5b331cc8bb2783",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519325797,
            "hunks": 2,
            "message": "Fix ConcurrentUpdateSolrClient.Builder withQueueSize Javadocs",
            "diff": [
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java",
                "index d97bb2c03c9..5845e7f0de9 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java",
                "@@ -805,3 +805,11 @@ public class ConcurrentUpdateSolrClient extends SolrClient {",
                "     /**",
                "-     * The number of documents to batch together before sending to Solr. If not set, this defaults to 10.",
                "+     * The maximum number of requests buffered by the SolrClient's internal queue before being processed by background threads.",
                "+     *",
                "+     * This value should be carefully paired with the number of queue-consumer threads.  A queue with a maximum size",
                "+     * set too high may require more memory.  A queue with a maximum size set too low may suffer decreased throughput",
                "+     * as {@link ConcurrentUpdateSolrClient#request(SolrRequest)} calls block waiting to add requests to the queue.",
                "+     *",
                "+     * If not set, this defaults to 10.",
                "+     *",
                "+     * @see #withThreadCount(int)",
                "      */",
                "@@ -816,3 +824,7 @@ public class ConcurrentUpdateSolrClient extends SolrClient {",
                "     /**",
                "-     * The number of threads used to empty {@link ConcurrentUpdateSolrClient}s queue.",
                "+     * The maximum number of threads used to empty {@link ConcurrentUpdateSolrClient}s queue.",
                "+     *",
                "+     * This value should be carefully paired with the maximum queue capacity.  A client with too few threads may suffer",
                "+     * decreased throughput as the queue fills up and {@link ConcurrentUpdateSolrClient#request(SolrRequest)} calls",
                "+     * block waiting to add requests to the queue.",
                "      */"
            ],
            "changed_files": [
                "solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "96eb58de09e42c1dc6ac698fb9c06d2021ef10da"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1e86af061e41f1a7df1740f34ef58a1110626d96",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519983364,
            "hunks": 15,
            "message": "LUCENE-8126: new spatial prefix tree (SPT) based on google S2 geometry",
            "diff": [
                "diff --git a/lucene/ivy-versions.properties b/lucene/ivy-versions.properties",
                "index 5ab36ddfa2c..f79e3c85534 100644",
                "--- a/lucene/ivy-versions.properties",
                "+++ b/lucene/ivy-versions.properties",
                "@@ -72,2 +72,4 @@ io.netty.netty-all.version = 4.0.36.Final",
                "+/io.sgr/s2-geometry-library-java = 1.0.0",
                "+",
                " /javax.activation/activation = 1.1.1",
                "diff --git a/lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1 b/lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1",
                "new file mode 100644",
                "index 00000000000..2cfb3a8a6de",
                "--- /dev/null",
                "+++ b/lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1",
                "@@ -0,0 +1 @@",
                "+f95b25589b40b5b0965deb592445073ff3efa299",
                "\\ No newline at end of file",
                "diff --git a/lucene/spatial-extras/ivy.xml b/lucene/spatial-extras/ivy.xml",
                "index df675031d67..c3d982f8cc7 100644",
                "--- a/lucene/spatial-extras/ivy.xml",
                "+++ b/lucene/spatial-extras/ivy.xml",
                "@@ -27,2 +27,4 @@",
                "+    <dependency org=\"io.sgr\" name=\"s2-geometry-library-java\" rev=\"${/io.sgr/s2-geometry-library-java}\" conf=\"compile\"/>",
                "+",
                "     <dependency org=\"org.locationtech.spatial4j\" name=\"spatial4j\" rev=\"${/org.locationtech.spatial4j/spatial4j}\" conf=\"test\">",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTree.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTree.java",
                "new file mode 100644",
                "index 00000000000..f77c578e553",
                "--- /dev/null",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTree.java",
                "@@ -0,0 +1,157 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial.prefix.tree;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+",
                "+import com.google.common.geometry.S2CellId;",
                "+import com.google.common.geometry.S2LatLng;",
                "+import com.google.common.geometry.S2Projections;",
                "+import org.apache.lucene.util.BytesRef;",
                "+import org.locationtech.spatial4j.context.SpatialContext;",
                "+import org.locationtech.spatial4j.distance.DistanceUtils;",
                "+import org.locationtech.spatial4j.shape.Point;",
                "+import org.locationtech.spatial4j.shape.Shape;",
                "+",
                "+/**",
                "+ * Spatial prefix tree for <a href=\"https://s2geometry.io/\">S2 Geometry</a>. Shape factories",
                "+ * for the given {@link SpatialContext} must implement the interface {@link S2ShapeFactory}.",
                "+ *",
                "+ * The tree can be configured on how it divided itself by providing an arity. The default arity is 1",
                "+ * which divided every sub-cell in 4 (except the first level that is always divided by 6) . Arity 2",
                "+ * divides sub-cells in 16 and arity 3 in 64 sub-cells.",
                "+ *",
                "+ * @lucene.experimental",
                "+ */",
                "+public class S2PrefixTree extends SpatialPrefixTree {",
                "+",
                "+",
                "+    /**",
                "+     * Factory for creating {@link S2PrefixTree} instances with useful defaults",
                "+     */",
                "+    protected static class Factory extends SpatialPrefixTreeFactory {",
                "+",
                "+        @Override",
                "+        protected int getLevelForDistance(double degrees) {",
                "+            S2PrefixTree grid = new S2PrefixTree(ctx, S2PrefixTree.getMaxLevels(1));",
                "+            return grid.getLevelForDistance(degrees);",
                "+        }",
                "+",
                "+        @Override",
                "+        protected SpatialPrefixTree newSPT() {",
                "+            return new S2PrefixTree(ctx,",
                "+                maxLevels != null ? maxLevels : S2PrefixTree.getMaxLevels(1));",
                "+        }",
                "+",
                "+    }",
                "+",
                "+    //factory to generate S2 cell shapes",
                "+    protected final S2ShapeFactory s2ShapeFactory;",
                "+    protected final int arity;",
                "+",
                "+    /**",
                "+     * Creates a S2 spatial tree with arity 1.",
                "+     *",
                "+     * @param ctx The provided spatial context. The shape factor of the spatial context",
                "+     *           must implement {@link S2ShapeFactory}",
                "+     * @param maxLevels The provided maximum level for this tree.",
                "+     */",
                "+    public S2PrefixTree(SpatialContext ctx, int maxLevels) {",
                "+        this(ctx, maxLevels, 1);",
                "+    }",
                "+",
                "+    /**",
                "+     * Creates a S2 spatial tree with provided arity.",
                "+     *",
                "+     * @param ctx The provided spatial context. The shape factor of the spatial context",
                "+     *           must implement {@link S2ShapeFactory}",
                "+     * @param maxLevels The provided maximum level for this tree.",
                "+     * @param arity The arity of the tree.",
                "+     */",
                "+    public S2PrefixTree(SpatialContext ctx, int maxLevels, int arity) {",
                "+        super(ctx, maxLevels);",
                "+        if (!(ctx.getShapeFactory() instanceof S2ShapeFactory)) {",
                "+            throw new IllegalArgumentException(\"Spatial context does not support S2 spatial index.\");",
                "+        }",
                "+        this.s2ShapeFactory = (S2ShapeFactory) ctx.getShapeFactory();",
                "+        if (arity <1 || arity > 3) {",
                "+            throw new IllegalArgumentException(\"Invalid value for S2 tree arity. Possible values are 1, 2 or 3. Provided value is \" + arity  + \".\");",
                "+        }",
                "+        this.arity = arity;",
                "+    }",
                "+",
                "+    /**",
                "+     * Get max levels for this spatial tree.",
                "+     *",
                "+     * @param arity The arity of the tree.",
                "+     * @return The maximum number of levels by the provided arity.",
                "+     */",
                "+    public static int getMaxLevels(int arity) {",
                "+        return  S2CellId.MAX_LEVEL/arity + 1;",
                "+    }",
                "+",
                "+    @Override",
                "+    public int getLevelForDistance(double dist) {",
                "+        if (dist == 0){",
                "+            return maxLevels;",
                "+        }",
                "+        int level =  S2Projections.MAX_WIDTH.getMinLevel(dist * DistanceUtils.DEGREES_TO_RADIANS);",
                "+        int roundLevel = level % arity != 0 ? 1 : 0;",
                "+        level = level/arity + roundLevel;",
                "+        return Math.min(maxLevels, level + 1);",
                "+    }",
                "+",
                "+    @Override",
                "+    public double getDistanceForLevel(int level) {",
                "+        if (level == 0) {",
                "+            return 180;",
                "+        }",
                "+        return S2Projections.MAX_WIDTH.getValue(arity * (level - 1)) * DistanceUtils.RADIANS_TO_DEGREES;",
                "+    }",
                "+",
                "+    @Override",
                "+    public Cell getWorldCell() {",
                "+        return  new S2PrefixTreeCell(this, null);",
                "+    }",
                "+",
                "+    @Override",
                "+    public Cell readCell(BytesRef term, Cell scratch) {",
                "+        S2PrefixTreeCell cell = (S2PrefixTreeCell) scratch;",
                "+        if (cell == null) {",
                "+            cell = (S2PrefixTreeCell) getWorldCell();",
                "+        }",
                "+        cell.readCell(this, term);",
                "+        return cell;",
                "+    }",
                "+",
                "+    @Override",
                "+    public CellIterator getTreeCellIterator(Shape shape, int detailLevel) {",
                "+        if (!(shape instanceof Point)) {",
                "+            return  super.getTreeCellIterator(shape, detailLevel);",
                "+        }",
                "+        Point p = (Point) shape;",
                "+        S2CellId id = S2CellId.fromLatLng(S2LatLng.fromDegrees(p.getY(), p.getX())).parent(arity * (detailLevel - 1));",
                "+        List<Cell> cells = new ArrayList<>(detailLevel);",
                "+        for (int i=0; i < detailLevel - 1; i++) {",
                "+            cells.add(new S2PrefixTreeCell(this, id.parent(i * arity)));",
                "+        }",
                "+        cells.add(new S2PrefixTreeCell(this, id));",
                "+        return new FilterCellIterator(cells.iterator(), null);",
                "+    }",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "new file mode 100644",
                "index 00000000000..63a728f5575",
                "--- /dev/null",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "@@ -0,0 +1,289 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial.prefix.tree;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.HashMap;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+import java.util.Objects;",
                "+",
                "+import com.google.common.geometry.S2CellId;",
                "+import org.apache.lucene.util.BytesRef;",
                "+import org.locationtech.spatial4j.shape.Shape;",
                "+import org.locationtech.spatial4j.shape.SpatialRelation;",
                "+",
                "+/**",
                "+ * This class represents a S2 pixel in the RPT.",
                "+ *",
                "+ * @lucene.internal",
                "+ */",
                "+class S2PrefixTreeCell implements Cell {",
                "+",
                "+    //Faces of S2 Geometry",
                "+    private static S2CellId[] FACES = new S2CellId[6];",
                "+",
                "+    static {",
                "+        FACES[0] = S2CellId.fromFacePosLevel(0, 0, 0);",
                "+        FACES[1] = S2CellId.fromFacePosLevel(1, 0, 0);",
                "+        FACES[2] = S2CellId.fromFacePosLevel(2, 0, 0);",
                "+        FACES[3] = S2CellId.fromFacePosLevel(3, 0, 0);",
                "+        FACES[4] = S2CellId.fromFacePosLevel(4, 0, 0);",
                "+        FACES[5] = S2CellId.fromFacePosLevel(5, 0, 0);",
                "+    }",
                "+",
                "+    /*Special character to define a cell leaf*/",
                "+    private static final byte LEAF = '+';",
                "+    /*Tokens are used to serialize cells*/",
                "+    private static final byte[] TOKENS = {'.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',",
                "+        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',",
                "+        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};",
                "+    /*Map containing mapping between tokens and integer values*/",
                "+    private static final Map<Byte, Integer> PIXELS;",
                "+",
                "+    static {",
                "+        PIXELS = new HashMap<>(TOKENS.length);",
                "+        for (int i = 0; i < TOKENS.length; i++) {",
                "+            PIXELS.put(TOKENS[i], i);",
                "+        }",
                "+    }",
                "+",
                "+    S2CellId cellId;",
                "+    int level; //cache level",
                "+    S2PrefixTree tree;",
                "+",
                "+    SpatialRelation shapeRel = null;",
                "+    boolean isLeaf;",
                "+    Shape shape = null;",
                "+",
                "+    S2PrefixTreeCell(S2PrefixTree tree, S2CellId cellId) {",
                "+        this.cellId = cellId;",
                "+        this.tree = tree;",
                "+        setLevel();",
                "+        if (getLevel() == tree.getMaxLevels()) {",
                "+            setLeaf();",
                "+        }",
                "+    }",
                "+",
                "+    void readCell(S2PrefixTree tree, BytesRef ref) {",
                "+        isLeaf = false;",
                "+        shape = null;",
                "+        shapeRel = null;",
                "+        this.tree = tree;",
                "+        cellId = getS2CellIdFromBytesRef(ref);",
                "+        setLevel();",
                "+        if (isLeaf(ref) || getLevel() == tree.getMaxLevels()) {",
                "+            setLeaf();",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public SpatialRelation getShapeRel() {",
                "+        return shapeRel;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void setShapeRel(SpatialRelation rel) {",
                "+        shapeRel = rel;",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean isLeaf() {",
                "+        return isLeaf;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void setLeaf() {",
                "+        isLeaf = true;",
                "+    }",
                "+",
                "+    @Override",
                "+    public BytesRef getTokenBytesWithLeaf(BytesRef result) {",
                "+        result = getTokenBytesNoLeaf(result);",
                "+        //max levels do not have leaf",
                "+        if (isLeaf() && !(getLevel() == tree.getMaxLevels())) {",
                "+            //Add leaf byte",
                "+            result.bytes[result.offset + result.length] = LEAF;",
                "+            result.length++;",
                "+        }",
                "+        return result;",
                "+    }",
                "+",
                "+    @Override",
                "+    public BytesRef getTokenBytesNoLeaf(BytesRef result) {",
                "+        if (result == null) {",
                "+            result = new BytesRef();",
                "+        }",
                "+        getBytesRefFromS2CellId(cellId, result);",
                "+        return result;",
                "+    }",
                "+",
                "+    @Override",
                "+    public int getLevel() {",
                "+        return this.level;",
                "+    }",
                "+",
                "+    /**",
                "+     * Cache level of cell.",
                "+     */",
                "+    private void setLevel() {",
                "+        if (this.cellId == null) {",
                "+            this.level = 0;",
                "+        } else {",
                "+            assert cellId.level() % tree.arity == 0;",
                "+            this.level = (this.cellId.level() / tree.arity) + 1;",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public CellIterator getNextLevelCells(Shape shapeFilter) {",
                "+        S2CellId[] children;",
                "+        if (cellId == null) { // this is the world cell",
                "+            children = FACES;",
                "+        } else {",
                "+            int nChildren = (int) Math.pow(4, tree.arity);",
                "+            children = new S2CellId[nChildren];",
                "+            children[0] = cellId.childBegin(cellId.level() + tree.arity);",
                "+            for (int i = 1; i < nChildren; i++) {",
                "+                children[i] = children[i - 1].next();",
                "+            }",
                "+        }",
                "+        List<Cell> cells = new ArrayList<>(children.length);",
                "+        for (S2CellId pixel : children) {",
                "+            cells.add(new S2PrefixTreeCell(tree, pixel));",
                "+        }",
                "+        return new FilterCellIterator(cells.iterator(), shapeFilter);",
                "+    }",
                "+",
                "+    @Override",
                "+    public Shape getShape() {",
                "+        if (shape == null) {",
                "+            if (cellId == null) { //World cell",
                "+                shape = tree.getSpatialContext().getWorldBounds();",
                "+            } else {",
                "+                shape = tree.s2ShapeFactory.getS2CellShape(cellId);",
                "+            }",
                "+        }",
                "+        return shape;",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean isPrefixOf(Cell c) {",
                "+        if (cellId == null) {",
                "+            return true;",
                "+        }",
                "+        S2PrefixTreeCell cell = (S2PrefixTreeCell) c;",
                "+        return cellId.contains(cell.cellId);",
                "+    }",
                "+",
                "+    @Override",
                "+    public int compareToNoLeaf(Cell fromCell) {",
                "+        if (cellId == null) {",
                "+            return 1;",
                "+        }",
                "+        S2PrefixTreeCell cell = (S2PrefixTreeCell) fromCell;",
                "+        return cellId.compareTo(cell.cellId);",
                "+    }",
                "+",
                "+    /**",
                "+     * Check if a cell is a leaf.",
                "+     *",
                "+     * @param ref The Byteref of the leaf",
                "+     * @return true if it is a leaf, e.g last byte is the special Character.",
                "+     */",
                "+    private boolean isLeaf(BytesRef ref) {",
                "+        return (ref.bytes[ref.offset + ref.length - 1] == LEAF);",
                "+    }",
                "+",
                "+    /**",
                "+     * Get the {@link S2CellId} from the {@link BytesRef} representation.",
                "+     *",
                "+     * @param ref The bytes.",
                "+     * @return the corresponding S2 cell.",
                "+     */",
                "+    private S2CellId getS2CellIdFromBytesRef(BytesRef ref) {",
                "+        int length = ref.length;",
                "+        if (isLeaf(ref)) {",
                "+            length--;",
                "+        }",
                "+        if (length == 0) {",
                "+            return null; //world cell",
                "+        }",
                "+        int face = PIXELS.get(ref.bytes[ref.offset]);",
                "+        S2CellId cellId = FACES[face];",
                "+        long id = cellId.id();",
                "+        for (int i = ref.offset + 1; i < ref.offset + length; i++) {",
                "+            int thisLevel = i - ref.offset;",
                "+            int pos = PIXELS.get(ref.bytes[i]);",
                "+            // first child at level",
                "+            id  = id - (id & -id) + (1L << (2 * (S2CellId.MAX_LEVEL -  thisLevel * tree.arity)));",
                "+            // next until pos",
                "+            id  = id + pos * ((id & -id) << 1);",
                "+        }",
                "+        return new S2CellId(id);",
                "+    }",
                "+",
                "+    /**",
                "+     * Codify a {@link S2CellId} into its {@link BytesRef} representation.",
                "+     *",
                "+     * @param cellId The S2 Cell id to codify.",
                "+     * @param bref   The byteref representation.",
                "+     */",
                "+    private void getBytesRefFromS2CellId(S2CellId cellId, BytesRef bref) {",
                "+        if (cellId == null) {//world cell",
                "+            bref.length = 0;",
                "+            return;",
                "+        }",
                "+        int length = getLevel() + 1;",
                "+        byte[] b = bref.bytes.length >= length ? bref.bytes : new byte[length];",
                "+        b[0] = TOKENS[cellId.face()];",
                "+        for (int i = 1; i < getLevel(); i++) {",
                "+            int offset = 0;",
                "+            int level = tree.arity * i;",
                "+            for (int j = 1; j < tree.arity; j++) {",
                "+                offset = 4 * offset + cellId.childPosition(level - tree.arity + j);",
                "+            }",
                "+            b[i] = TOKENS[4 * offset + cellId.childPosition(level)];",
                "+        }",
                "+        bref.bytes = b;",
                "+        bref.length = getLevel();",
                "+        bref.offset = 0;",
                "+    }",
                "+",
                "+    @Override",
                "+    public int hashCode() {",
                "+        if (cellId == null) {",
                "+            return super.hashCode();",
                "+        }",
                "+        return this.cellId.hashCode();",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean equals(Object o) {",
                "+        S2PrefixTreeCell cell = (S2PrefixTreeCell) o;",
                "+        return Objects.equals(cellId, cell.cellId);",
                "+    }",
                "+",
                "+    @Override",
                "+    public String toString() {",
                "+        if (cellId == null) {",
                "+            return \"0\";",
                "+        }",
                "+        return cellId.toString();",
                "+    }",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2ShapeFactory.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2ShapeFactory.java",
                "new file mode 100644",
                "index 00000000000..1306f601676",
                "--- /dev/null",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2ShapeFactory.java",
                "@@ -0,0 +1,40 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial.prefix.tree;",
                "+",
                "+",
                "+import com.google.common.geometry.S2CellId;",
                "+import org.locationtech.spatial4j.shape.Shape;",
                "+import org.locationtech.spatial4j.shape.ShapeFactory;",
                "+",
                "+/**",
                "+ * Shape factory for Spatial contexts that support S2 geometry. It is an extension of",
                "+ * Spatial4j {@link ShapeFactory}.",
                "+ *",
                "+ * @lucene.experimental",
                "+ */",
                "+public interface S2ShapeFactory extends ShapeFactory{",
                "+",
                "+  /**",
                "+   * Factory method for S2 cell shapes.",
                "+   *",
                "+   * @param cellId The S2 cell id",
                "+   * @return the shape representing the cell.",
                "+   */",
                "+  Shape getS2CellShape(S2CellId cellId);",
                "+}",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShapeFactory.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShapeFactory.java",
                "index 282d93be427..a6147dfdf41 100644",
                "--- a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShapeFactory.java",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShapeFactory.java",
                "@@ -22,2 +22,6 @@ import java.util.List;",
                "+import com.google.common.geometry.S2Cell;",
                "+import com.google.common.geometry.S2CellId;",
                "+import com.google.common.geometry.S2Point;",
                "+import org.apache.lucene.spatial.prefix.tree.S2ShapeFactory;",
                " import org.apache.lucene.spatial3d.geom.GeoBBox;",
                "@@ -34,2 +38,3 @@ import org.apache.lucene.spatial3d.geom.GeoPolygon;",
                " import org.apache.lucene.spatial3d.geom.GeoPolygonFactory;",
                "+import org.apache.lucene.spatial3d.geom.GeoS2ShapeFactory;",
                " import org.apache.lucene.spatial3d.geom.PlanetModel;",
                "@@ -44,6 +49,5 @@ import org.locationtech.spatial4j.shape.Shape;",
                " import org.locationtech.spatial4j.shape.ShapeCollection;",
                "-import org.locationtech.spatial4j.shape.ShapeFactory;",
                " /**",
                "- * Geo3d implementation of {@link ShapeFactory}",
                "+ * Geo3d implementation of {@link S2ShapeFactory}",
                "  *",
                "@@ -51,3 +55,3 @@ import org.locationtech.spatial4j.shape.ShapeFactory;",
                "  */",
                "-public class Geo3dShapeFactory implements ShapeFactory {",
                "+public class Geo3dShapeFactory implements S2ShapeFactory {",
                "@@ -239,2 +243,16 @@ public class Geo3dShapeFactory implements ShapeFactory {",
                "+  @Override",
                "+  public Shape getS2CellShape(S2CellId cellId) {",
                "+    S2Cell cell = new S2Cell(cellId);",
                "+    GeoPoint point1 = getGeoPoint(cell.getVertexRaw(0));",
                "+    GeoPoint point2 = getGeoPoint(cell.getVertexRaw(1));",
                "+    GeoPoint point3 = getGeoPoint(cell.getVertexRaw(2));",
                "+    GeoPoint point4 = getGeoPoint(cell.getVertexRaw(3));",
                "+    return new Geo3dShape<>(GeoS2ShapeFactory.makeGeoS2Shape(planetModel, point1, point2, point3, point4), context);",
                "+  }",
                "+",
                "+  private GeoPoint getGeoPoint(S2Point point) {",
                "+    return planetModel.createSurfacePoint(point.get(0), point.get(1), point.get(2));",
                "+  }",
                "+",
                "   /**",
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2Shape.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2Shape.java",
                "new file mode 100644",
                "index 00000000000..b4c5d06ec99",
                "--- /dev/null",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2Shape.java",
                "@@ -0,0 +1,202 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial3d.geom;",
                "+",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.io.OutputStream;",
                "+",
                "+/**",
                "+ * Fast implementation of a polygon representing S2 geometry cell. There are no checks validating that",
                "+ * points are convex therefore users must be provide four points in CCW or the logic will fail.",
                "+ *",
                "+ * @lucene.internal",
                "+ */",
                "+class GeoS2Shape extends GeoBasePolygon {",
                "+",
                "+    /** The first point */",
                "+    protected final GeoPoint point1;",
                "+    /** The second point */",
                "+    protected final GeoPoint point2;",
                "+    /** The third point */",
                "+    protected final GeoPoint point3;",
                "+    /** The fourth point */",
                "+    protected final GeoPoint point4;",
                "+",
                "+    /** The first plane */",
                "+    protected final SidedPlane plane1;",
                "+    /** The second plane */",
                "+    protected final SidedPlane plane2;",
                "+    /** The third plane */",
                "+    protected final SidedPlane plane3;",
                "+    /** The fourth plane */",
                "+    protected final SidedPlane plane4;",
                "+",
                "+    /** Notable points for the first plane */",
                "+    protected final GeoPoint[] plane1Points;",
                "+    /** Notable points for second plane */",
                "+    protected final GeoPoint[] plane2Points;",
                "+    /** Notable points for third plane */",
                "+    protected final GeoPoint[] plane3Points;",
                "+    /** Notable points for fourth plane */",
                "+    protected final GeoPoint[] plane4Points;",
                "+",
                "+    /** Edge point for this S2 cell */",
                "+    protected final GeoPoint[] edgePoints;",
                "+",
                "+    /**",
                "+     * It builds from 4 points given in CCW. It must be convex or logic will fail.",
                "+     *",
                "+     *@param planetModel is the planet model.",
                "+     *@param point1  the first point.",
                "+     *@param point2  the second point.",
                "+     *@param point3  the third point.",
                "+     *@param point4  the four point.",
                "+     */",
                "+    public GeoS2Shape(final PlanetModel planetModel, GeoPoint point1, GeoPoint point2, GeoPoint point3, GeoPoint point4) {",
                "+        super(planetModel);",
                "+        this.point1 = point1;",
                "+        this.point2 = point2;",
                "+        this.point3 = point3;",
                "+        this.point4 = point4;",
                "+",
                "+        // Now build the four planes",
                "+        this.plane1 = new SidedPlane(point4, point1, point2);",
                "+        this.plane2 = new SidedPlane(point1, point2, point3);",
                "+        this.plane3 = new SidedPlane(point2, point3, point4);",
                "+        this.plane4 = new SidedPlane(point3, point4, point1);",
                "+",
                "+        //collect the notable points for the planes",
                "+        this.plane1Points = new GeoPoint[]{point1, point2};",
                "+        this.plane2Points = new GeoPoint[]{point2, point3};",
                "+        this.plane3Points = new GeoPoint[]{point3, point4};",
                "+        this.plane4Points = new GeoPoint[]{point4, point1};",
                "+",
                "+        this.edgePoints = new GeoPoint[]{point1};",
                "+    }",
                "+",
                "+    /**",
                "+     * Constructor for deserialization.",
                "+     * @param planetModel is the planet model.",
                "+     * @param inputStream is the input stream.",
                "+     */",
                "+    public GeoS2Shape(final PlanetModel planetModel, final InputStream inputStream) throws IOException {",
                "+        this(planetModel,",
                "+                (GeoPoint) SerializableObject.readObject(inputStream),",
                "+                (GeoPoint) SerializableObject.readObject(inputStream),",
                "+                (GeoPoint) SerializableObject.readObject(inputStream),",
                "+                (GeoPoint) SerializableObject.readObject(inputStream));",
                "+    }",
                "+",
                "+    @Override",
                "+    public void write(final OutputStream outputStream) throws IOException {",
                "+        SerializableObject.writeObject(outputStream, point1);",
                "+        SerializableObject.writeObject(outputStream, point2);",
                "+        SerializableObject.writeObject(outputStream, point3);",
                "+        SerializableObject.writeObject(outputStream, point4);",
                "+    }",
                "+",
                "+",
                "+    @Override",
                "+    public boolean isWithin(final double x, final double y, final double z) {",
                "+        return plane1.isWithin(x, y, z) &&",
                "+               plane2.isWithin(x, y, z) &&",
                "+               plane3.isWithin(x, y, z) &&",
                "+               plane4.isWithin(x, y, z);",
                "+    }",
                "+",
                "+",
                "+    @Override",
                "+    public GeoPoint[] getEdgePoints() {",
                "+        return edgePoints;",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean intersects(final Plane p, final GeoPoint[] notablePoints, final Membership... bounds) {",
                "+        return p.intersects(planetModel, plane1, notablePoints, plane1Points, bounds, plane2, plane4) ||",
                "+               p.intersects(planetModel, plane2, notablePoints, plane2Points, bounds, plane3, plane1) ||",
                "+               p.intersects(planetModel, plane3, notablePoints, plane3Points, bounds, plane4, plane2) ||",
                "+               p.intersects(planetModel, plane4, notablePoints, plane4Points, bounds, plane1, plane3);",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean intersects(GeoShape geoShape) {",
                "+        return geoShape.intersects(plane1, plane1Points, plane2, plane4) ||",
                "+               geoShape.intersects(plane2, plane2Points, plane3, plane1) ||",
                "+               geoShape.intersects(plane3, plane3Points, plane4, plane2) ||",
                "+               geoShape.intersects(plane4, plane4Points, plane1, plane3);",
                "+    }",
                "+",
                "+    @Override",
                "+    public void getBounds(Bounds bounds) {",
                "+        super.getBounds(bounds);",
                "+        bounds.addPlane(planetModel, plane1, plane2, plane4)",
                "+              .addPlane(planetModel, plane2, plane3, plane1)",
                "+              .addPlane(planetModel, plane3, plane4, plane2)",
                "+              .addPlane(planetModel, plane4, plane1, plane3)",
                "+              .addPoint(point1).addPoint(point2).addPoint(point3).addPoint(point4);",
                "+    }",
                "+",
                "+    @Override",
                "+    public double outsideDistance(DistanceStyle distanceStyle, double x, double y, double z) {",
                "+        final double planeDistance1 = distanceStyle.computeDistance(planetModel, plane1, x,y,z, plane2, plane4);",
                "+        final double planeDistance2 = distanceStyle.computeDistance(planetModel, plane2, x,y,z, plane3, plane1);",
                "+        final double planeDistance3 = distanceStyle.computeDistance(planetModel, plane3, x,y,z, plane4, plane2);",
                "+        final double planeDistance4 = distanceStyle.computeDistance(planetModel, plane4, x,y,z, plane1, plane3);",
                "+",
                "+        final double pointDistance1 = distanceStyle.computeDistance(point1, x,y,z);",
                "+        final double pointDistance2 = distanceStyle.computeDistance(point2, x,y,z);",
                "+        final double pointDistance3 = distanceStyle.computeDistance(point3, x,y,z);",
                "+        final double pointDistance4 = distanceStyle.computeDistance(point4, x,y,z);",
                "+",
                "+        return Math.min(",
                "+                Math.min(",
                "+                        Math.min(planeDistance1, planeDistance2),",
                "+                        Math.min(planeDistance3, planeDistance4)),",
                "+                Math.min(",
                "+                        Math.min(pointDistance1, pointDistance2),",
                "+                        Math.min(pointDistance3, pointDistance4)));",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean equals(Object o) {",
                "+        if (!(o instanceof GeoS2Shape))",
                "+            return false;",
                "+        GeoS2Shape other = (GeoS2Shape) o;",
                "+        return super.equals(other) && other.point1.equals(point1)",
                "+                && other.point2.equals(point2) && other.point3.equals(point3)",
                "+                && other.point4.equals(point4);",
                "+    }",
                "+",
                "+    @Override",
                "+    public int hashCode() {",
                "+        int result = super.hashCode();",
                "+        result = 31 * result  + point1.hashCode();",
                "+        result = 31 * result  + point2.hashCode();",
                "+        result = 31 * result  + point3.hashCode();",
                "+        result = 31 * result  + point4.hashCode();",
                "+        return result;",
                "+    }",
                "+",
                "+    @Override",
                "+    public String toString() {",
                "+        return \"GeoS2Shape: {planetmodel=\"+planetModel+\", point1=\" + point1 +\", point2=\" + point2 +\", point3=\" + point3 +\", point4=\" + point4+ \"}\";",
                "+    }",
                "+",
                "+}",
                "+",
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2ShapeFactory.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2ShapeFactory.java",
                "new file mode 100644",
                "index 00000000000..848b2e68db5",
                "--- /dev/null",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2ShapeFactory.java",
                "@@ -0,0 +1,50 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial3d.geom;",
                "+",
                "+/**",
                "+ * Class which constructs a GeoPolygon representing S2 google pixel.",
                "+ *",
                "+ * @lucene.experimental",
                "+ */",
                "+public class GeoS2ShapeFactory {",
                "+",
                "+  private GeoS2ShapeFactory() {",
                "+  }",
                "+",
                "+  /**",
                "+   * Creates a convex polygon with 4 planes by providing 4 points in CCW.",
                "+   * This is a very fast shape and there are no checks that the points currently define",
                "+   * a convex shape.",
                "+   *",
                "+   * @param planetModel The planet model",
                "+   * @param point1 the first point.",
                "+   * @param point2 the second point.",
                "+   * @param point3 the third point.",
                "+   * @param point4 the four point.",
                "+   * @return the generated shape.",
                "+   */",
                "+  public static GeoPolygon makeGeoS2Shape(final PlanetModel planetModel,",
                "+                                          final GeoPoint point1,",
                "+                                          final GeoPoint point2,",
                "+                                          final GeoPoint point3,",
                "+                                          final GeoPoint point4) {",
                "+    return new GeoS2Shape(planetModel, point1, point2, point3, point4);",
                "+  }",
                "+}",
                "+",
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardObjects.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardObjects.java",
                "index bcebf43262c..4e0acaeff5b 100644",
                "--- a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardObjects.java",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardObjects.java",
                "@@ -77,2 +77,3 @@ class StandardObjects {",
                "    classRegsitry.put(GeoExactCircle.class, 37);",
                "+   classRegsitry.put(GeoS2Shape.class, 38);"
            ],
            "changed_files": [
                "lucene/ivy-versions.properties",
                "lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1",
                "lucene/spatial-extras/ivy.xml",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTree.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2ShapeFactory.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShapeFactory.java",
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2Shape.java",
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2ShapeFactory.java",
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardObjects.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8126": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8126",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "86be87391511b3636ea952d40343305762d4f63c",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519638911,
            "hunks": 1,
            "message": "SOLR-11911: Add more details to failure logs, modify the test to create a single event that contains all affected nodes.",
            "diff": [
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java",
                "index 91932eab6a8..f2e101659ee 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java",
                "@@ -345,3 +345,8 @@ public class Policy implements MapWriter {",
                "       for (Preference p : clusterPreferences) {",
                "-        Collections.sort(tmpMatrix, (r1, r2) -> p.compare(r1, r2, false));",
                "+        try {",
                "+          Collections.sort(tmpMatrix, (r1, r2) -> p.compare(r1, r2, false));",
                "+        } catch (Exception e) {",
                "+          LOG.error(\"Exception! prefs = {}, matrix = {}\", clusterPreferences, matrix);",
                "+          throw e;",
                "+        }",
                "         p.setApproxVal(tmpMatrix);"
            ],
            "changed_files": [
                "solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Policy.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11911": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11911",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4446545de64926eb97bc6160c34c76f25cc7fe7c",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519309955,
            "hunks": 18,
            "message": "Revert \"SOLR-11066: Implement a scheduled autoscaling trigger that runs on a fixed interval beginning with a given start time\" This reverts commit 137e647",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "index 3b7802b5b7b..3ebfbd0d331 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "@@ -159,4 +159,2 @@ public class AutoScaling {",
                "           return new MetricTrigger(name, props, loader, cloudManager);",
                "-        case SCHEDULED:",
                "-          return new ScheduledTrigger(name, props, loader, cloudManager);",
                "         default:",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "index 1e6fd70597a..45b0ddf9f58 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "@@ -202,7 +202,2 @@ public class ComputePlanAction extends TriggerActionBase {",
                "         break;",
                "-      case SCHEDULED:",
                "-        String preferredOp = (String) event.getProperty(AutoScalingParams.PREFERRED_OP);",
                "-        CollectionParams.CollectionAction action = CollectionParams.CollectionAction.get(preferredOp);",
                "-        suggester = session.getSuggester(action);",
                "-        break;",
                "       default:",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "deleted file mode 100644",
                "index 9c8ee6dea0b..00000000000",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "+++ /dev/null",
                "@@ -1,198 +0,0 @@",
                "-/*",
                "- * Licensed to the Apache Software Foundation (ASF) under one or more",
                "- * contributor license agreements.  See the NOTICE file distributed with",
                "- * this work for additional information regarding copyright ownership.",
                "- * The ASF licenses this file to You under the Apache License, Version 2.0",
                "- * (the \"License\"); you may not use this file except in compliance with",
                "- * the License.  You may obtain a copy of the License at",
                "- *",
                "- *     http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-package org.apache.solr.cloud.autoscaling;",
                "-",
                "-import java.lang.invoke.MethodHandles;",
                "-import java.text.ParseException;",
                "-import java.time.Instant;",
                "-import java.time.ZoneId;",
                "-import java.time.format.DateTimeFormatter;",
                "-import java.time.format.DateTimeFormatterBuilder;",
                "-import java.time.temporal.ChronoField;",
                "-import java.util.Collections;",
                "-import java.util.Date;",
                "-import java.util.Locale;",
                "-import java.util.Map;",
                "-import java.util.TimeZone;",
                "-",
                "-import org.apache.solr.client.solrj.cloud.autoscaling.SolrCloudManager;",
                "-import org.apache.solr.client.solrj.cloud.autoscaling.TriggerEventType;",
                "-import org.apache.solr.common.SolrException;",
                "-import org.apache.solr.common.params.CollectionParams;",
                "-import org.apache.solr.core.SolrResourceLoader;",
                "-import org.apache.solr.util.DateMathParser;",
                "-import org.apache.solr.util.TimeZoneUtils;",
                "-import org.slf4j.Logger;",
                "-import org.slf4j.LoggerFactory;",
                "-",
                "-import static org.apache.solr.common.params.AutoScalingParams.PREFERRED_OP;",
                "-",
                "-/**",
                "- * A trigger which creates {@link TriggerEventType#SCHEDULED} events as per the configured schedule",
                "- */",
                "-public class ScheduledTrigger extends TriggerBase {",
                "-  private static final Logger log = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());",
                "-",
                "-  private static final String DEFAULT_GRACE_DURATION = \"+15MINUTES\";",
                "-  static final String ACTUAL_EVENT_TIME = \"actualEventTime\";",
                "-",
                "-  private final String everyStr;",
                "-",
                "-  private final String graceDurationStr;",
                "-",
                "-  private final String preferredOp;",
                "-",
                "-  private final TimeZone timeZone;",
                "-",
                "-  private Instant lastRunAt;",
                "-",
                "-  public ScheduledTrigger(String name, Map<String, Object> properties,",
                "-                          SolrResourceLoader loader, SolrCloudManager cloudManager) {",
                "-    super(TriggerEventType.SCHEDULED, name, properties, loader, cloudManager);",
                "-",
                "-    String timeZoneStr = (String) properties.get(\"timeZone\");",
                "-    this.timeZone = TimeZoneUtils.parseTimezone(timeZoneStr); // defaults to UTC",
                "-",
                "-    String startTimeStr = (String) properties.get(\"startTime\");",
                "-    this.everyStr = (String) properties.get(\"every\");",
                "-    this.graceDurationStr = (String) properties.getOrDefault(\"graceDuration\", DEFAULT_GRACE_DURATION);",
                "-",
                "-    preferredOp = (String) properties.getOrDefault(PREFERRED_OP, CollectionParams.CollectionAction.MOVEREPLICA.toLower());",
                "-",
                "-    // attempt parsing to validate date math strings",
                "-    Instant startTime = parseStartTime(startTimeStr, timeZoneStr);",
                "-    DateMathParser.parseMath(null, startTime + everyStr, timeZone);",
                "-    DateMathParser.parseMath(null, startTime + graceDurationStr, timeZone);",
                "-",
                "-    this.lastRunAt = startTime;",
                "-  }",
                "-",
                "-  private Instant parseStartTime(String startTimeStr, String timeZoneStr) {",
                "-    if (startTimeStr == null) {",
                "-      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Parameter 'startTime' cannot be null\");",
                "-    }",
                "-    try {",
                "-      // try parsing startTime as an ISO-8601 date time string",
                "-      return DateMathParser.parseMath(null, startTimeStr).toInstant();",
                "-    } catch (SolrException e) {",
                "-      if (e.code() != SolrException.ErrorCode.BAD_REQUEST.code)  throw e;",
                "-    }",
                "-    if (timeZoneStr == null)  {",
                "-      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,",
                "-          \"Either 'startTime' should be an ISO-8601 date time string or 'timeZone' must be not be null\");",
                "-    }",
                "-    DateTimeFormatter dateTimeFormatter = new DateTimeFormatterBuilder()",
                "-        .append(DateTimeFormatter.ISO_LOCAL_DATE).appendPattern(\"['T'[HH[:mm[:ss]]]]\")",
                "-        .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)",
                "-        .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)",
                "-        .parseDefaulting(ChronoField.SECOND_OF_MINUTE, 0)",
                "-        .toFormatter(Locale.ROOT).withZone(ZoneId.of(timeZoneStr));",
                "-    return Instant.from(dateTimeFormatter.parse(startTimeStr));",
                "-  }",
                "-",
                "-  @Override",
                "-  protected Map<String, Object> getState() {",
                "-    return Collections.singletonMap(\"lastRunAt\", lastRunAt.toEpochMilli());",
                "-  }",
                "-",
                "-  @Override",
                "-  protected void setState(Map<String, Object> state) {",
                "-    if (state.containsKey(\"lastRunAt\")) {",
                "-      this.lastRunAt = Instant.ofEpochMilli((Long) state.get(\"lastRunAt\"));",
                "-    }",
                "-  }",
                "-",
                "-  @Override",
                "-  public void restoreState(AutoScaling.Trigger old) {",
                "-    assert old.isClosed();",
                "-    if (old instanceof ScheduledTrigger) {",
                "-      ScheduledTrigger scheduledTrigger = (ScheduledTrigger) old;",
                "-      this.lastRunAt = scheduledTrigger.lastRunAt;",
                "-    } else  {",
                "-      throw new SolrException(SolrException.ErrorCode.INVALID_STATE,",
                "-          \"Unable to restore state from an unknown type of trigger\");",
                "-    }",
                "-  }",
                "-",
                "-  @Override",
                "-  public void run() {",
                "-    synchronized (this) {",
                "-      if (isClosed) {",
                "-        log.warn(\"ScheduledTrigger ran but was already closed\");",
                "-        throw new RuntimeException(\"Trigger has been closed\");",
                "-      }",
                "-    }",
                "-",
                "-    DateMathParser dateMathParser = new DateMathParser(timeZone);",
                "-    dateMathParser.setNow(new Date(lastRunAt.toEpochMilli()));",
                "-    Instant nextRunTime, nextPlusGrace;",
                "-    try {",
                "-      Date next = dateMathParser.parseMath(everyStr);",
                "-      dateMathParser.setNow(next);",
                "-      nextPlusGrace = dateMathParser.parseMath(graceDurationStr).toInstant();",
                "-      nextRunTime = next.toInstant();",
                "-    } catch (ParseException e) {",
                "-      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,",
                "-          \"Unable to calculate next run time. lastRan: \" + lastRunAt.toString() + \" and date math string: \" + everyStr, e);",
                "-    }",
                "-",
                "-    Instant now = Instant.now(); // todo how to play well with simulation framework?",
                "-    AutoScaling.TriggerEventProcessor processor = processorRef.get();",
                "-",
                "-    if (now.isBefore(nextRunTime)) {",
                "-      return; // it's not time yet",
                "-    }",
                "-    if (now.isAfter(nextPlusGrace)) {",
                "-      // we are past time and we could not run per schedule so skip this event",
                "-      if (log.isWarnEnabled())  {",
                "-        log.warn(\"ScheduledTrigger was not able to run event at scheduled time: {}. Now: {}\",",
                "-            nextRunTime, now);",
                "-      }",
                "-      if (processor.process(new ScheduledEvent(getEventType(), getName(), nextRunTime.toEpochMilli(),",
                "-          preferredOp, now.toEpochMilli(), true)))  {",
                "-        lastRunAt = nextRunTime;",
                "-        return;",
                "-      }",
                "-    }",
                "-",
                "-    if (processor != null)  {",
                "-      if (log.isDebugEnabled()) {",
                "-        log.debug(\"ScheduledTrigger {} firing registered processor for scheduled time {}, now={}\", name,",
                "-            nextRunTime, now);",
                "-      }",
                "-      if (processor.process(new ScheduledEvent(getEventType(), getName(), nextRunTime.toEpochMilli(),",
                "-          preferredOp, now.toEpochMilli()))) {",
                "-        lastRunAt = nextRunTime; // set to nextRunTime instead of now to avoid drift",
                "-      }",
                "-    } else  {",
                "-      lastRunAt = nextRunTime; // set to nextRunTime instead of now to avoid drift",
                "-    }",
                "-  }",
                "-",
                "-  public static class ScheduledEvent extends TriggerEvent {",
                "-    public ScheduledEvent(TriggerEventType eventType, String source, long eventTime, String preferredOp, long actualEventTime) {",
                "-      this(eventType, source, eventTime, preferredOp, actualEventTime, false);",
                "-    }",
                "-",
                "-    public ScheduledEvent(TriggerEventType eventType, String source, long eventTime, String preferredOp, long actualEventTime, boolean ignored) {",
                "-      super(eventType, source, eventTime, null, ignored);",
                "-      properties.put(PREFERRED_OP, preferredOp);",
                "-      properties.put(ACTUAL_EVENT_TIME, actualEventTime);",
                "-    }",
                "-  }",
                "-}",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "index 0f2b705b0a4..ee091182aff 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "@@ -250,8 +250,2 @@ public class ScheduledTriggers implements Closeable {",
                "       }",
                "-      if (event.isIgnored())  {",
                "-        log.debug(\"-------- Ignoring event: \" + event);",
                "-        event.getProperties().put(TriggerEvent.IGNORED, true);",
                "-        listeners.fireListeners(event.getSource(), event, TriggerEventProcessorStage.IGNORED, \"Event was ignored.\");",
                "-        return true; // always return true for ignored events",
                "-      }",
                "       // even though we pause all triggers during action execution there is a possibility that a trigger was already",
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.java b/solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.java",
                "index e4a4b3d0b35..fe11cf9bb59 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.java",
                "@@ -34,3 +34,2 @@ import org.apache.solr.util.IdUtils;",
                " public class TriggerEvent implements MapWriter {",
                "-  public static final String IGNORED = \"ignored\";",
                "   public static final String COOLDOWN = \"cooldown\";",
                "@@ -80,3 +79,2 @@ public class TriggerEvent implements MapWriter {",
                "   protected final Map<String, Object> properties = new HashMap<>();",
                "-  protected final boolean ignored;",
                "@@ -84,8 +82,3 @@ public class TriggerEvent implements MapWriter {",
                "                       Map<String, Object> properties) {",
                "-    this(IdUtils.timeRandomId(eventTime), eventType, source, eventTime, properties, false);",
                "-  }",
                "-",
                "-  public TriggerEvent(TriggerEventType eventType, String source, long eventTime,",
                "-                      Map<String, Object> properties, boolean ignored) {",
                "-    this(IdUtils.timeRandomId(eventTime), eventType, source, eventTime, properties, ignored);",
                "+    this(IdUtils.timeRandomId(eventTime), eventType, source, eventTime, properties);",
                "   }",
                "@@ -94,7 +87,2 @@ public class TriggerEvent implements MapWriter {",
                "                       Map<String, Object> properties) {",
                "-    this(id, eventType, source, eventTime, properties, false);",
                "-  }",
                "-",
                "-  public TriggerEvent(String id, TriggerEventType eventType, String source, long eventTime,",
                "-                      Map<String, Object> properties, boolean ignored) {",
                "     this.id = id;",
                "@@ -106,3 +94,2 @@ public class TriggerEvent implements MapWriter {",
                "     }",
                "-    this.ignored = ignored;",
                "   }",
                "@@ -165,6 +152,2 @@ public class TriggerEvent implements MapWriter {",
                "-  public boolean isIgnored() {",
                "-    return ignored;",
                "-  }",
                "-",
                "   /**",
                "@@ -188,5 +171,2 @@ public class TriggerEvent implements MapWriter {",
                "     ew.put(\"properties\", properties);",
                "-    if (ignored)  {",
                "-      ew.put(\"ignored\", true);",
                "-    }",
                "   }",
                "@@ -204,3 +184,2 @@ public class TriggerEvent implements MapWriter {",
                "     if (eventType != that.eventType) return false;",
                "-    if (ignored != that.ignored)  return false;",
                "     return properties.equals(that.properties);",
                "@@ -215,3 +194,2 @@ public class TriggerEvent implements MapWriter {",
                "     result = 31 * result + properties.hashCode();",
                "-    result = 31 * result + Boolean.hashCode(ignored);",
                "     return result;",
                "diff --git a/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc b/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "index 64bad3490fc..a7a8d520c9f 100644",
                "--- a/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "+++ b/solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "@@ -18,3 +18,3 @@",
                "-Triggers are used in autoscaling to watch for cluster events such as nodes joining, leaving, search rate or any other metric breaching a threshold.",
                "+Triggers are used in autoscaling to watch for cluster events such as nodes joining or leaving.",
                "@@ -29,3 +29,3 @@ resources (e.g., move replicas). Solr provides predefined implementations of tri",
                " Triggers execute on the node that runs `Overseer`. They are scheduled to run periodically,",
                "-currently at default interval of 1 second between each execution (not every execution produces events).",
                "+currently at fixed interval of 1 second between each execution (not every execution produces events).",
                "@@ -38,3 +38,2 @@ Currently the following event types (and corresponding trigger implementations)",
                " * `searchRate` - generated when the 1 min average search rate exceeds configured upper threshold",
                "-* `scheduled` - generated according to a scheduled time period such as every 24 hours etc",
                "@@ -141,19 +140,2 @@ the threshold rate and the current request rate.",
                "-== Scheduled trigger",
                "-",
                "-The Scheduled trigger generates events according to a fixed rate schedule.",
                "-",
                "-The trigger supports the following configuration:",
                "-",
                "-* `startTime` - (string, required) the start date/time of the schedule. This should either be an ISO-8601 date time string (the same standard used during search and indexing in Solr, thus defaulting to UTC) or be specified with the `timeZone` parameter.",
                "-* `every` - (string, required) a positive Solr date math string which is added to the `startTime` or the last run time to arrive at the next scheduled time",
                "-* `graceTime` - (string, optional) a positive Solr date math string. This is the additional grace time over the scheduled time within which the trigger is allowed to generate an event.",
                "-* `timeZone` - (string, optional) a time zone string which is used for calculating the scheduled times",
                "-* `preferredOp` - (string, optional, defaults to `MOVEREPLICA`) the preferred operation to perform in response to an event generated by this trigger. The only supported values are `MOVEREPLICA` and `ADDREPLICA`.",
                "-",
                "-This trigger applies the `every` date math expression on the `startTime` or the last event time to derive the next scheduled time and if current time is greater than next scheduled time but within `graceTime` then an event is generated.",
                "-",
                "-Apart from the common event properties described in the Event Types section, the trigger adds an additional `actualEventTime` event property which has the actual event time as opposed to the scheduled time.",
                "-For example, if the scheduled time was `2018-01-31T15:30:00Z` and grace time was `+15MINUTES` then an event may be fired at `2018-01-31T15:45:00Z`. Such an event will have `eventTime` as `2018-01-31T15:30:00Z` i.e. the scheduled time but the `actualEventTime` property will have a value of `2018-01-31T15:45:00Z`.",
                "-",
                " == Trigger Configuration",
                "diff --git a/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java b/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "index 07e440a1bfc..360632c6a7b 100644",
                "--- a/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "+++ b/solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java",
                "@@ -293,9 +293,2 @@ public class MiniSolrCloudCluster {",
                "-  /**",
                "-   * Wait for all Solr nodes to be live",
                "-   *",
                "-   * @param timeout number of seconds to wait before throwing an IllegalStateException",
                "-   * @throws IOException if there was an error communicating with ZooKeeper",
                "-   * @throws InterruptedException if the calling thread is interrupted during the wait operation",
                "-   */",
                "   public void waitForAllNodes(int timeout) throws IOException, InterruptedException {"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScaling.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTrigger.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/ScheduledTriggers.java",
                "solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent.java",
                "solr/solr-ref-guide/src/solrcloud-autoscaling-triggers.adoc",
                "solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11066": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11066",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "317a2e0c3d16b9f8ea6ed1b1e4697c5cec51d05c",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519138558,
            "hunks": 36,
            "message": "LUCENE-8153: Make impacts checks lighter by default. The new `-slow` switch makes checks more complete but also more heavy. This option also cross-checks term vectors.",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java b/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java",
                "index 7dd1aa9aeaa..54a227c19b0 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java",
                "@@ -431,14 +431,13 @@ public final class CheckIndex implements Closeable {",
                "-  private boolean crossCheckTermVectors;",
                "+  private boolean doSlowChecks;",
                "-  /** If true, term vectors are compared against postings to",
                "-   *  make sure they are the same.  This will likely",
                "+  /** If true, additional slow checks are performed.  This will likely",
                "    *  drastically increase time it takes to run CheckIndex! */",
                "-  public void setCrossCheckTermVectors(boolean v) {",
                "-    crossCheckTermVectors = v;",
                "+  public void setDoSlowChecks(boolean v) {",
                "+    doSlowChecks = v;",
                "   }",
                "-  /** See {@link #setCrossCheckTermVectors}. */",
                "-  public boolean getCrossCheckTermVectors() {",
                "-    return crossCheckTermVectors;",
                "+  /** See {@link #setDoSlowChecks}. */",
                "+  public boolean doSlowChecks() {",
                "+    return doSlowChecks;",
                "   }",
                "@@ -747,3 +746,3 @@ public final class CheckIndex implements Closeable {",
                "           // Test the Term Index",
                "-          segInfoStat.termIndexStatus = testPostings(reader, infoStream, verbose, failFast);",
                "+          segInfoStat.termIndexStatus = testPostings(reader, infoStream, verbose, doSlowChecks, failFast);",
                "@@ -753,3 +752,3 @@ public final class CheckIndex implements Closeable {",
                "           // Test Term Vectors",
                "-          segInfoStat.termVectorStatus = testTermVectors(reader, infoStream, verbose, crossCheckTermVectors, failFast);",
                "+          segInfoStat.termVectorStatus = testTermVectors(reader, infoStream, verbose, doSlowChecks, failFast);",
                "@@ -1212,3 +1211,3 @@ public final class CheckIndex implements Closeable {",
                "    */",
                "-  private static Status.TermIndexStatus checkFields(Fields fields, Bits liveDocs, int maxDoc, FieldInfos fieldInfos, boolean doPrint, boolean isVectors, PrintStream infoStream, boolean verbose) throws IOException {",
                "+  private static Status.TermIndexStatus checkFields(Fields fields, Bits liveDocs, int maxDoc, FieldInfos fieldInfos, boolean doPrint, boolean isVectors, PrintStream infoStream, boolean verbose, boolean doSlowChecks) throws IOException {",
                "     // TODO: we should probably return our own stats thing...?!",
                "@@ -1602,100 +1601,108 @@ public final class CheckIndex implements Closeable {",
                "-        // Test score blocks",
                "-        // We only score on freq to keep things simple and not pull norms",
                "-        SimScorer scorer = new SimScorer(field) {",
                "-          @Override",
                "-          public float score(float freq, long norm) {",
                "-            return freq;",
                "-          }",
                "-        };",
                "-",
                "-        // First check max scores and block uptos",
                "-        int max = -1;",
                "-        float maxScore = 0;",
                "-        ImpactsEnum impacts = termsEnum.impacts(scorer, PostingsEnum.FREQS);",
                "-        postings = termsEnum.postings(postings, PostingsEnum.FREQS);",
                "-        for (int doc = impacts.nextDoc(); ; doc = impacts.nextDoc()) {",
                "-          if (postings.nextDoc() != doc) {",
                "-            throw new RuntimeException(\"Wrong next doc: \" + doc + \", expected \" + postings.docID());",
                "-          }",
                "-          if (doc == DocIdSetIterator.NO_MORE_DOCS) {",
                "-            break;",
                "-          }",
                "-          if (postings.freq() != impacts.freq()) {",
                "-            throw new RuntimeException(\"Wrong freq, expected \" + postings.freq() + \", but got \" + impacts.freq());",
                "-          }",
                "-          if (doc > max) {",
                "-            max = impacts.advanceShallow(doc);",
                "-            if (max < doc) {",
                "-              throw new RuntimeException(\"max block doc id \" + max + \" must be greater than the target: \" + doc);",
                "+        // Checking score blocks is heavy, we only do it on long postings lists, on every 1024th term",
                "+        // or if slow checks are enabled.",
                "+        if (doSlowChecks || docFreq > 1024 || (status.termCount + status.delTermCount) % 1024 == 0) {",
                "+          // Test score blocks",
                "+          // We only score on freq to keep things simple and not pull norms",
                "+          SimScorer scorer = new SimScorer(field) {",
                "+            @Override",
                "+            public float score(float freq, long norm) {",
                "+              return freq;",
                "+            }",
                "+          };",
                "+",
                "+          // First check max scores and block uptos",
                "+          // But only if slok checks are enabled since we visit all docs",
                "+          if (doSlowChecks) {",
                "+            int max = -1;",
                "+            float maxScore = 0;",
                "+            ImpactsEnum impacts = termsEnum.impacts(scorer, PostingsEnum.FREQS);",
                "+            postings = termsEnum.postings(postings, PostingsEnum.FREQS);",
                "+            for (int doc = impacts.nextDoc(); ; doc = impacts.nextDoc()) {",
                "+              if (postings.nextDoc() != doc) {",
                "+                throw new RuntimeException(\"Wrong next doc: \" + doc + \", expected \" + postings.docID());",
                "+              }",
                "+              if (doc == DocIdSetIterator.NO_MORE_DOCS) {",
                "+                break;",
                "+              }",
                "+              if (postings.freq() != impacts.freq()) {",
                "+                throw new RuntimeException(\"Wrong freq, expected \" + postings.freq() + \", but got \" + impacts.freq());",
                "+              }",
                "+              if (doc > max) {",
                "+                max = impacts.advanceShallow(doc);",
                "+                if (max < doc) {",
                "+                  throw new RuntimeException(\"max block doc id \" + max + \" must be greater than the target: \" + doc);",
                "+                }",
                "+                maxScore = impacts.getMaxScore(max);",
                "+              }",
                "+              int max2 = impacts.advanceShallow(doc);",
                "+              if (max != max2) {",
                "+                throw new RuntimeException(\"max is not stable, initially had \" + max + \" but now \" + max2);",
                "+              }",
                "+              float score = scorer.score(impacts.freq(), 1);",
                "+              if (score > maxScore) {",
                "+                throw new RuntimeException(\"score \" + score + \" is greater than the max score \" + maxScore);",
                "+              }",
                "             }",
                "-            maxScore = impacts.getMaxScore(max);",
                "-          }",
                "-          int max2 = impacts.advanceShallow(doc);",
                "-          if (max != max2) {",
                "-            throw new RuntimeException(\"max is not stable, initially had \" + max + \" but now \" + max2);",
                "-          }",
                "-          float score = scorer.score(impacts.freq(), 1);",
                "-          if (score > maxScore) {",
                "-            throw new RuntimeException(\"score \" + score + \" is greater than the max score \" + maxScore);",
                "-          }",
                "-        }",
                "-",
                "-        // Now check advancing",
                "-        impacts = termsEnum.impacts(scorer, PostingsEnum.FREQS);",
                "-        postings = termsEnum.postings(postings, PostingsEnum.FREQS);",
                "-",
                "-        max = -1;",
                "-        while (true) {",
                "-          int doc = impacts.docID();",
                "-          boolean advance;",
                "-          int target;",
                "-          if (((field.hashCode() + doc) & 1) == 1) {",
                "-            advance = false;",
                "-            target = doc + 1;",
                "-          } else {",
                "-            advance = true;",
                "-            int delta = Math.min(1 + ((31 * field.hashCode() + doc) & 0x1ff), DocIdSetIterator.NO_MORE_DOCS - doc);",
                "-            target = impacts.docID() + delta;",
                "           }",
                "-          if (target > max && target % 2 == 1) {",
                "-            int delta = Math.min((31 * field.hashCode() + target) & 0x1ff, DocIdSetIterator.NO_MORE_DOCS - target);",
                "-            max = target + delta;",
                "-            int m = impacts.advanceShallow(target);",
                "-            if (m < target) {",
                "-              throw new RuntimeException(\"Block max doc: \" + m + \" is less than the target \" + target);",
                "+          // Now check advancing",
                "+          ImpactsEnum impacts = termsEnum.impacts(scorer, PostingsEnum.FREQS);",
                "+          postings = termsEnum.postings(postings, PostingsEnum.FREQS);",
                "+",
                "+          int max = -1;",
                "+          float maxScore = 0;",
                "+          while (true) {",
                "+            int doc = impacts.docID();",
                "+            boolean advance;",
                "+            int target;",
                "+            if (((field.hashCode() + doc) & 1) == 1) {",
                "+              advance = false;",
                "+              target = doc + 1;",
                "+            } else {",
                "+              advance = true;",
                "+              int delta = Math.min(1 + ((31 * field.hashCode() + doc) & 0x1ff), DocIdSetIterator.NO_MORE_DOCS - doc);",
                "+              target = impacts.docID() + delta;",
                "             }",
                "-            maxScore = impacts.getMaxScore(max);",
                "-          }",
                "-          if (advance) {",
                "-            doc = impacts.advance(target);",
                "-          } else {",
                "-            doc = impacts.nextDoc();",
                "-          }",
                "+            if (target > max && target % 2 == 1) {",
                "+              int delta = Math.min((31 * field.hashCode() + target) & 0x1ff, DocIdSetIterator.NO_MORE_DOCS - target);",
                "+              max = target + delta;",
                "+              int m = impacts.advanceShallow(target);",
                "+              if (m < target) {",
                "+                throw new RuntimeException(\"Block max doc: \" + m + \" is less than the target \" + target);",
                "+              }",
                "+              maxScore = impacts.getMaxScore(max);",
                "+            }",
                "-          if (postings.advance(target) != doc) {",
                "-            throw new RuntimeException(\"Impacts do not advance to the same document as postings for target \" + target + \", postings: \" + postings.docID() + \", impacts: \" + doc);",
                "-          }",
                "-          if (doc == DocIdSetIterator.NO_MORE_DOCS) {",
                "-            break;",
                "-          }",
                "-          if (postings.freq() != impacts.freq()) {",
                "-            throw new RuntimeException(\"Wrong freq, expected \" + postings.freq() + \", but got \" + impacts.freq());",
                "-          }",
                "+            if (advance) {",
                "+              doc = impacts.advance(target);",
                "+            } else {",
                "+              doc = impacts.nextDoc();",
                "+            }",
                "-          if (doc >= max) {",
                "-            int delta = Math.min((31 * field.hashCode() + target & 0x1ff), DocIdSetIterator.NO_MORE_DOCS - doc);",
                "-            max = doc + delta;",
                "-            int m = impacts.advanceShallow(doc);",
                "-            if (m < doc) {",
                "-              throw new RuntimeException(\"Block max doc: \" + m + \" is less than the target \" + doc);",
                "+            if (postings.advance(target) != doc) {",
                "+              throw new RuntimeException(\"Impacts do not advance to the same document as postings for target \" + target + \", postings: \" + postings.docID() + \", impacts: \" + doc);",
                "+            }",
                "+            if (doc == DocIdSetIterator.NO_MORE_DOCS) {",
                "+              break;",
                "+            }",
                "+            if (postings.freq() != impacts.freq()) {",
                "+              throw new RuntimeException(\"Wrong freq, expected \" + postings.freq() + \", but got \" + impacts.freq());",
                "+            }",
                "+  ",
                "+            if (doc >= max) {",
                "+              int delta = Math.min((31 * field.hashCode() + target & 0x1ff), DocIdSetIterator.NO_MORE_DOCS - doc);",
                "+              max = doc + delta;",
                "+              int m = impacts.advanceShallow(doc);",
                "+              if (m < doc) {",
                "+                throw new RuntimeException(\"Block max doc: \" + m + \" is less than the target \" + doc);",
                "+              }",
                "+              maxScore = impacts.getMaxScore(max);",
                "             }",
                "-            maxScore = impacts.getMaxScore(max);",
                "-          }",
                "-          float score = scorer.score(impacts.freq(), 1);",
                "-          if (score > maxScore) {",
                "-            throw new RuntimeException(\"score \" + score + \" is greater than the max score \" + maxScore);",
                "+            float score = scorer.score(impacts.freq(), 1);",
                "+            if (score > maxScore) {",
                "+              throw new RuntimeException(\"score \" + score + \" is greater than the max score \" + maxScore);",
                "+            }",
                "           }",
                "@@ -1850,3 +1857,3 @@ public final class CheckIndex implements Closeable {",
                "   public static Status.TermIndexStatus testPostings(CodecReader reader, PrintStream infoStream) throws IOException {",
                "-    return testPostings(reader, infoStream, false, false);",
                "+    return testPostings(reader, infoStream, false, true, false);",
                "   }",
                "@@ -1857,6 +1864,6 @@ public final class CheckIndex implements Closeable {",
                "    */",
                "-  public static Status.TermIndexStatus testPostings(CodecReader reader, PrintStream infoStream, boolean verbose, boolean failFast) throws IOException {",
                "+  public static Status.TermIndexStatus testPostings(CodecReader reader, PrintStream infoStream, boolean verbose, boolean doSlowChecks, boolean failFast) throws IOException {",
                "     // TODO: we should go and verify term vectors match, if",
                "-    // crossCheckTermVectors is on...",
                "+    // doSlowChecks is on...",
                "@@ -1872,3 +1879,3 @@ public final class CheckIndex implements Closeable {",
                "       final FieldInfos fieldInfos = reader.getFieldInfos();",
                "-      status = checkFields(fields, reader.getLiveDocs(), maxDoc, fieldInfos, true, false, infoStream, verbose);",
                "+      status = checkFields(fields, reader.getLiveDocs(), maxDoc, fieldInfos, true, false, infoStream, verbose, doSlowChecks);",
                "     } catch (Throwable e) {",
                "@@ -2489,3 +2496,3 @@ public final class CheckIndex implements Closeable {",
                "    */",
                "-  public static Status.TermVectorStatus testTermVectors(CodecReader reader, PrintStream infoStream, boolean verbose, boolean crossCheckTermVectors, boolean failFast) throws IOException {",
                "+  public static Status.TermVectorStatus testTermVectors(CodecReader reader, PrintStream infoStream, boolean verbose, boolean doSlowChecks, boolean failFast) throws IOException {",
                "     long startNS = System.nanoTime();",
                "@@ -2501,3 +2508,3 @@ public final class CheckIndex implements Closeable {",
                "-      // Only used if crossCheckTermVectors is true:",
                "+      // Only used if doSlowChecks is true:",
                "       PostingsEnum postingsDocs = null;",
                "@@ -2508,3 +2515,3 @@ public final class CheckIndex implements Closeable {",
                "       // TODO: testTermsIndex",
                "-      if (crossCheckTermVectors) {",
                "+      if (doSlowChecks) {",
                "         postingsFields = reader.getPostingsReader().getMergeInstance();",
                "@@ -2529,3 +2536,3 @@ public final class CheckIndex implements Closeable {",
                "             // First run with no deletions:",
                "-            checkFields(tfv, null, 1, fieldInfos, false, true, infoStream, verbose);",
                "+            checkFields(tfv, null, 1, fieldInfos, false, true, infoStream, verbose, doSlowChecks);",
                "@@ -2549,3 +2556,3 @@ public final class CheckIndex implements Closeable {",
                "-              if (crossCheckTermVectors) {",
                "+              if (doSlowChecks) {",
                "                 Terms terms = tfv.terms(field);",
                "@@ -2763,3 +2770,3 @@ public final class CheckIndex implements Closeable {",
                "     boolean doExorcise = false;",
                "-    boolean doCrossCheckTermVectors = false;",
                "+    boolean doSlowChecks = false;",
                "     boolean verbose = false;",
                "@@ -2848,4 +2855,7 @@ public final class CheckIndex implements Closeable {",
                "         opts.doExorcise = true;",
                "-      } else if (\"-crossCheckTermVectors\".equals(arg)) {",
                "-        opts.doCrossCheckTermVectors = true;",
                "+      } else if (\"-doSlowChecks\".equals(arg)) {",
                "+        System.err.println(\"-doSlowChecks is deprecated, use -slow instead\");",
                "+        opts.doSlowChecks = true;",
                "+      } else if (\"-slow\".equals(arg)) {",
                "+        opts.doSlowChecks = true;",
                "       } else if (arg.equals(\"-verbose\")) {",
                "@@ -2875,3 +2885,3 @@ public final class CheckIndex implements Closeable {",
                "       throw new IllegalArgumentException(\"\\nERROR: index path not specified\" +",
                "-                         \"\\nUsage: java org.apache.lucene.index.CheckIndex pathToIndex [-exorcise] [-crossCheckTermVectors] [-segment X] [-segment Y] [-dir-impl X]\\n\" +",
                "+                         \"\\nUsage: java org.apache.lucene.index.CheckIndex pathToIndex [-exorcise] [-doSlowChecks] [-segment X] [-segment Y] [-dir-impl X]\\n\" +",
                "                          \"\\n\" +",
                "@@ -2879,3 +2889,3 @@ public final class CheckIndex implements Closeable {",
                "                          \"  -fast: just verify file checksums, omitting logical integrity checks\\n\" + ",
                "-                         \"  -crossCheckTermVectors: verifies that term vectors match postings; THIS IS VERY SLOW!\\n\" +",
                "+                         \"  -slow: do additional slow checks; THIS IS VERY SLOW!\\n\" +",
                "                          \"  -codec X: when exorcising, codec to write the new segments_N file with\\n\" +",
                "@@ -2909,4 +2919,4 @@ public final class CheckIndex implements Closeable {",
                "-    if (opts.doChecksumsOnly && opts.doCrossCheckTermVectors) {",
                "-      throw new IllegalArgumentException(\"ERROR: cannot specify both -fast and -crossCheckTermVectors\");",
                "+    if (opts.doChecksumsOnly && opts.doSlowChecks) {",
                "+      throw new IllegalArgumentException(\"ERROR: cannot specify both -fast and -slow\");",
                "     }",
                "@@ -2922,3 +2932,3 @@ public final class CheckIndex implements Closeable {",
                "   public int doCheck(Options opts) throws IOException, InterruptedException {",
                "-    setCrossCheckTermVectors(opts.doCrossCheckTermVectors);",
                "+    setDoSlowChecks(opts.doSlowChecks);",
                "     setChecksumsOnly(opts.doChecksumsOnly);",
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper.java b/lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper.java",
                "index c928088e05e..e73a57c7fbc 100644",
                "--- a/lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper.java",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper.java",
                "@@ -32,3 +32,3 @@ public abstract class BaseDirectoryWrapper extends FilterDirectory {",
                "   private boolean checkIndexOnClose = true;",
                "-  private boolean crossCheckTermVectorsOnClose = true;",
                "+  private boolean doSlowChecksOnClose = true;",
                "   protected volatile boolean isOpen = true;",
                "@@ -44,3 +44,3 @@ public abstract class BaseDirectoryWrapper extends FilterDirectory {",
                "       if (checkIndexOnClose && DirectoryReader.indexExists(this)) {",
                "-        TestUtil.checkIndex(this, crossCheckTermVectorsOnClose);",
                "+        TestUtil.checkIndex(this, doSlowChecksOnClose);",
                "       }",
                "@@ -67,3 +67,3 @@ public abstract class BaseDirectoryWrapper extends FilterDirectory {",
                "   public void setCrossCheckTermVectorsOnClose(boolean value) {",
                "-    this.crossCheckTermVectorsOnClose = value;",
                "+    this.doSlowChecksOnClose = value;",
                "   }",
                "@@ -71,3 +71,3 @@ public abstract class BaseDirectoryWrapper extends FilterDirectory {",
                "   public boolean getCrossCheckTermVectorsOnClose() {",
                "-    return crossCheckTermVectorsOnClose;",
                "+    return doSlowChecksOnClose;",
                "   }",
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/util/TestUtil.java b/lucene/test-framework/src/java/org/apache/lucene/util/TestUtil.java",
                "index 7f530177b9d..29697889e5f 100644",
                "--- a/lucene/test-framework/src/java/org/apache/lucene/util/TestUtil.java",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/util/TestUtil.java",
                "@@ -283,4 +283,4 @@ public final class TestUtil {",
                "-  public static CheckIndex.Status checkIndex(Directory dir, boolean crossCheckTermVectors) throws IOException {",
                "-    return checkIndex(dir, crossCheckTermVectors, false, null);",
                "+  public static CheckIndex.Status checkIndex(Directory dir, boolean doSlowChecks) throws IOException {",
                "+    return checkIndex(dir, doSlowChecks, false, null);",
                "   }",
                "@@ -289,3 +289,3 @@ public final class TestUtil {",
                "    *  look for any other corruption.  */",
                "-  public static CheckIndex.Status checkIndex(Directory dir, boolean crossCheckTermVectors, boolean failFast, ByteArrayOutputStream output) throws IOException {",
                "+  public static CheckIndex.Status checkIndex(Directory dir, boolean doSlowChecks, boolean failFast, ByteArrayOutputStream output) throws IOException {",
                "     if (output == null) {",
                "@@ -296,3 +296,3 @@ public final class TestUtil {",
                "     try (CheckIndex checker = new CheckIndex(dir, NoLockFactory.INSTANCE.obtainLock(dir, \"bogus\"))) {",
                "-      checker.setCrossCheckTermVectors(crossCheckTermVectors);",
                "+      checker.setDoSlowChecks(doSlowChecks);",
                "       checker.setFailFast(failFast);",
                "@@ -322,3 +322,3 @@ public final class TestUtil {",
                "-  public static void checkReader(LeafReader reader, boolean crossCheckTermVectors) throws IOException {",
                "+  public static void checkReader(LeafReader reader, boolean doSlowChecks) throws IOException {",
                "     ByteArrayOutputStream bos = new ByteArrayOutputStream(1024);",
                "@@ -336,5 +336,5 @@ public final class TestUtil {",
                "     CheckIndex.testFieldNorms(codecReader, infoStream, true);",
                "-    CheckIndex.testPostings(codecReader, infoStream, false, true);",
                "+    CheckIndex.testPostings(codecReader, infoStream, false, doSlowChecks, true);",
                "     CheckIndex.testStoredFields(codecReader, infoStream, true);",
                "-    CheckIndex.testTermVectors(codecReader, infoStream, false, crossCheckTermVectors, true);",
                "+    CheckIndex.testTermVectors(codecReader, infoStream, false, doSlowChecks, true);",
                "     CheckIndex.testDocValues(codecReader, infoStream, true);"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/index/CheckIndex.java",
                "lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryWrapper.java",
                "lucene/test-framework/src/java/org/apache/lucene/util/TestUtil.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8153": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8153",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ad09dd008cf67a36726a6fa95ca1fd057c74ac5f",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519929045,
            "hunks": 1,
            "message": "Revert \"Add version 6.6.3\" This reverts commit b61d1e377f7b5126ae7c4b6f8576ba2adb59eb82.",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/util/Version.java b/lucene/core/src/java/org/apache/lucene/util/Version.java",
                "index ac98ce5a030..5ccf25a97f9 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/util/Version.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/util/Version.java",
                "@@ -236,9 +236,2 @@ public final class Version {",
                "-  /**",
                "-   * Match settings and bugs in Lucene's 6.6.3 release.",
                "-   * @deprecated Use latest",
                "-   */",
                "-  @Deprecated",
                "-  public static final Version LUCENE_6_6_3 = new Version(6, 6, 3);",
                "-",
                "   /**"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/util/Version.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2732a373c2fc381625ceb253836f034f61adb7ad"
                ]
            ],
            "tags": [],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4bb705bad8fb58128a549d60e27e05a7eced17ee",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519149570,
            "hunks": 3,
            "message": "LUCENE-8153: Fix usage.",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java b/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java",
                "index 54a227c19b0..9126b1d02f7 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/CheckIndex.java",
                "@@ -2845,2 +2845,3 @@ public final class CheckIndex implements Closeable {",
                "    */",
                "+  @SuppressForbidden(reason = \"System.err required: command line tool\")",
                "   public static Options parseOptions(String[] args) {",
                "@@ -2855,4 +2856,4 @@ public final class CheckIndex implements Closeable {",
                "         opts.doExorcise = true;",
                "-      } else if (\"-doSlowChecks\".equals(arg)) {",
                "-        System.err.println(\"-doSlowChecks is deprecated, use -slow instead\");",
                "+      } else if (\"-crossCheckTermVectors\".equals(arg)) {",
                "+        System.err.println(\"-crossCheckTermVectors is deprecated, use -slow instead\");",
                "         opts.doSlowChecks = true;",
                "@@ -2885,3 +2886,3 @@ public final class CheckIndex implements Closeable {",
                "       throw new IllegalArgumentException(\"\\nERROR: index path not specified\" +",
                "-                         \"\\nUsage: java org.apache.lucene.index.CheckIndex pathToIndex [-exorcise] [-doSlowChecks] [-segment X] [-segment Y] [-dir-impl X]\\n\" +",
                "+                         \"\\nUsage: java org.apache.lucene.index.CheckIndex pathToIndex [-exorcise] [-slow] [-segment X] [-segment Y] [-dir-impl X]\\n\" +",
                "                          \"\\n\" +"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/index/CheckIndex.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8153": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8153",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a281177f256fedddd4758b99306f74dc39c1bf82",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519985542,
            "hunks": 1,
            "message": "LUCENE-8126: fix precommit",
            "diff": [
                "diff --git a/lucene/ivy-versions.properties b/lucene/ivy-versions.properties",
                "index fc8ea7d2ac2..f79e3c85534 100644",
                "--- a/lucene/ivy-versions.properties",
                "+++ b/lucene/ivy-versions.properties",
                "@@ -74,3 +74,3 @@ io.netty.netty-all.version = 4.0.36.Final",
                "-javax.activation/activation = 1.1.1",
                "+/javax.activation/activation = 1.1.1",
                " /javax.servlet/javax.servlet-api = 3.1.0"
            ],
            "changed_files": [
                "lucene/ivy-versions.properties"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8126": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8126",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b470a63690cc4a0edabc41f5d65e17994442a4a9",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520020563,
            "hunks": 2,
            "message": "Ref Guide: Fix link to Tika docs on lang detection; typo in autoscaling API path",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/detecting-languages-during-indexing.adoc b/solr/solr-ref-guide/src/detecting-languages-during-indexing.adoc",
                "index 61394f108f0..f45e9a10199 100644",
                "--- a/solr/solr-ref-guide/src/detecting-languages-during-indexing.adoc",
                "+++ b/solr/solr-ref-guide/src/detecting-languages-during-indexing.adoc",
                "@@ -22,3 +22,3 @@ Solr supports three implementations of this feature:",
                "-* Tika's language detection feature: http://tika.apache.org/0.10/detection.html",
                "+* Tika's language detection feature: https://tika.apache.org/1.17/detection.html",
                " * LangDetect language detection: https://github.com/shuyo/language-detection",
                "diff --git a/solr/solr-ref-guide/src/solrcloud-autoscaling-api.adoc b/solr/solr-ref-guide/src/solrcloud-autoscaling-api.adoc",
                "index cbc66d604f0..1c78644960c 100644",
                "--- a/solr/solr-ref-guide/src/solrcloud-autoscaling-api.adoc",
                "+++ b/solr/solr-ref-guide/src/solrcloud-autoscaling-api.adoc",
                "@@ -149,3 +149,3 @@ Suggestions are made only if there are `violations` to active policies. The `ope",
                "-The API is available at `/admin/autocaling/suggestion`. Here is an example output from a suggestion request:",
                "+The API is available at `/admin/autoscaling/suggestion`. Here is an example output from a suggestion request:"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/detecting-languages-during-indexing.adoc",
                "solr/solr-ref-guide/src/solrcloud-autoscaling-api.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "00a0e146be299be03e51356b511abf45a2ab326b"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5a263814241bf2db21107ded9ab84282bbda667e",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518193498,
            "hunks": 9,
            "message": "SOLR-11722: Rename max-future-ms to maxFutureMs",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "index 16529c8114f..feb0334e668 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "@@ -64,3 +64,3 @@ public class TimeRoutedAlias {",
                "   public static final String ROUTER_INTERVAL = ROUTER_PREFIX + \"interval\";",
                "-  public static final String ROUTER_MAX_FUTURE = ROUTER_PREFIX + \"max-future-ms\";",
                "+  public static final String ROUTER_MAX_FUTURE = ROUTER_PREFIX + \"maxFutureMs\";",
                "   public static final String ROUTER_AUTO_DELETE_AGE = ROUTER_PREFIX + \"autoDeleteAge\";",
                "diff --git a/solr/solr-ref-guide/src/collections-api.adoc b/solr/solr-ref-guide/src/collections-api.adoc",
                "index ac8881b848f..b2d3cc4c259 100644",
                "--- a/solr/solr-ref-guide/src/collections-api.adoc",
                "+++ b/solr/solr-ref-guide/src/collections-api.adoc",
                "@@ -534,3 +534,3 @@ the future.",
                " ----",
                "-localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=timedata&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.max-future-ms=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                "+localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=timedata&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                " ----",
                "@@ -542,3 +542,3 @@ in `evt_dt` that is before or after 2018-01-15 will be rejected, until the last",
                " document for an allowable time window for which there is no collection it will automatically create the next required",
                "-collection (and potentially any intervening collections if router.interval is smaller than router.max-future-ms). Both",
                "+collection (and potentially any intervening collections if router.interval is smaller than router.maxFutureMs). Both",
                " the initial collection and any subsequent collections will be created using the specified configset. All Collection",
                "@@ -587,3 +587,3 @@ work here. This param is required.",
                "-`router.max-future-ms`::",
                "+`router.maxFutureMs`::",
                " The maximum milliseconds into the future that a document is allowed to have in `router.field` for it to be accepted",
                "@@ -627,3 +627,3 @@ partiton is to be rejected and collections are created using a config set named",
                " ----",
                "-localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=myTimeData&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.max-future-ms=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                "+localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=myTimeData&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                " ----",
                "@@ -658,3 +658,3 @@ POST /api/c",
                "       \"interval\":\"+2HOUR\",",
                "-      \"max-future-ms\":\"14400000\"",
                "+      \"maxFutureMs\":\"14400000\"",
                "     },",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "index 182bfce95b3..8826384956f 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "@@ -1423,3 +1423,3 @@ public abstract class CollectionAdminRequest<T extends CollectionAdminResponse>",
                "     public static final String ROUTER_INTERVAL = \"router.interval\";",
                "-    public static final String ROUTER_MAX_FUTURE = \"router.max-future-ms\";",
                "+    public static final String ROUTER_MAX_FUTURE = \"router.maxFutureMs\";",
                "diff --git a/solr/solrj/src/resources/apispec/collections.Commands.json b/solr/solrj/src/resources/apispec/collections.Commands.json",
                "index ec44348f276..dfdfd5207f8 100644",
                "--- a/solr/solrj/src/resources/apispec/collections.Commands.json",
                "+++ b/solr/solrj/src/resources/apispec/collections.Commands.json",
                "@@ -184,5 +184,5 @@",
                "             },",
                "-            \"max-future-ms\": {",
                "+            \"maxFutureMs\": {",
                "               \"type\": \"integer\",",
                "-              \"description\":\"How many milliseconds into the future to accept document. Documents with a value in router.field that is greater than now() + max-future-ms will be rejected to avoid provisioning too much resources.\"",
                "+              \"description\":\"How many milliseconds into the future to accept document. Documents with a value in router.field that is greater than now() + maxFutureMs will be rejected to avoid provisioning too much resources.\"",
                "             }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "solr/solr-ref-guide/src/collections-api.adoc",
                "solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "solr/solrj/src/resources/apispec/collections.Commands.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11722": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11722",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "29e5b8abcee8a566cc057b862ab99c5ffef13a76",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519489313,
            "hunks": 20,
            "message": "LUCENE-8031: DOCS_ONLY fields set incorrect length norm",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java b/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "index e4e9773f272..3abf9efd0e7 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "@@ -686,3 +686,3 @@ final class DefaultIndexingChain extends DocConsumer {",
                "     void setInvertState() {",
                "-      invertState = new FieldInvertState(indexCreatedVersionMajor, fieldInfo.name);",
                "+      invertState = new FieldInvertState(indexCreatedVersionMajor, fieldInfo.name, fieldInfo.getIndexOptions());",
                "       termsHashPerField = termsHash.addField(invertState, fieldInfo);",
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/FieldInvertState.java b/lucene/core/src/java/org/apache/lucene/index/FieldInvertState.java",
                "index a40a06e2b3e..981419d5728 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/FieldInvertState.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/FieldInvertState.java",
                "@@ -36,2 +36,3 @@ public final class FieldInvertState {",
                "   final String name;",
                "+  final IndexOptions indexOptions;",
                "   int position;",
                "@@ -55,5 +56,6 @@ public final class FieldInvertState {",
                "    *  field name. */",
                "-  public FieldInvertState(int indexCreatedVersionMajor, String name) {",
                "+  public FieldInvertState(int indexCreatedVersionMajor, String name, IndexOptions indexOptions) {",
                "     this.indexCreatedVersionMajor = indexCreatedVersionMajor;",
                "     this.name = name;",
                "+    this.indexOptions = indexOptions;",
                "   }",
                "@@ -62,4 +64,4 @@ public final class FieldInvertState {",
                "    *  field name and values for all fields. */",
                "-  public FieldInvertState(int indexCreatedVersionMajor, String name, int position, int length, int numOverlap, int offset) {",
                "-    this(indexCreatedVersionMajor, name);",
                "+  public FieldInvertState(int indexCreatedVersionMajor, String name, IndexOptions indexOptions, int position, int length, int numOverlap, int offset, int maxTermFrequency, int uniqueTermCount) {",
                "+    this(indexCreatedVersionMajor, name, indexOptions);",
                "     this.position = position;",
                "@@ -68,2 +70,4 @@ public final class FieldInvertState {",
                "     this.offset = offset;",
                "+    this.maxTermFrequency = maxTermFrequency;",
                "+    this.uniqueTermCount = uniqueTermCount;",
                "   }",
                "@@ -178,2 +182,9 @@ public final class FieldInvertState {",
                "   }",
                "+  ",
                "+  /**",
                "+   * Get the index options for this field",
                "+   */",
                "+  public IndexOptions getIndexOptions() {",
                "+    return indexOptions;",
                "+  }",
                " }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.java b/lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.java",
                "index 19ab0d29ca6..09e2e07a02a 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.java",
                "@@ -23,2 +23,3 @@ import java.util.List;",
                " import org.apache.lucene.index.FieldInvertState;",
                "+import org.apache.lucene.index.IndexOptions;",
                " import org.apache.lucene.search.CollectionStatistics;",
                "@@ -115,3 +116,10 @@ public class BM25Similarity extends Similarity {",
                "   public final long computeNorm(FieldInvertState state) {",
                "-    final int numTerms = discountOverlaps ? state.getLength() - state.getNumOverlap() : state.getLength();",
                "+    final int numTerms;",
                "+    if (state.getIndexOptions() == IndexOptions.DOCS && state.getIndexCreatedVersionMajor() >= 8) {",
                "+      numTerms = state.getUniqueTermCount();",
                "+    } else if (discountOverlaps) {",
                "+      numTerms = state.getLength() - state.getNumOverlap();",
                "+    } else {",
                "+      numTerms = state.getLength();",
                "+    }",
                "     return SmallFloat.intToByte4(numTerms);",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.java b/lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.java",
                "index 1aefaed7c8f..1b0ced502fa 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.java",
                "@@ -23,2 +23,3 @@ import java.util.List;",
                " import org.apache.lucene.index.FieldInvertState;",
                "+import org.apache.lucene.index.IndexOptions;",
                " import org.apache.lucene.search.CollectionStatistics;",
                "@@ -187,6 +188,9 @@ public abstract class SimilarityBase extends Similarity {",
                "     final int numTerms;",
                "-    if (discountOverlaps)",
                "+    if (state.getIndexOptions() == IndexOptions.DOCS && state.getIndexCreatedVersionMajor() >= 8) {",
                "+      numTerms = state.getUniqueTermCount();",
                "+    } else if (discountOverlaps) {",
                "       numTerms = state.getLength() - state.getNumOverlap();",
                "-    else",
                "+    } else {",
                "       numTerms = state.getLength();",
                "+    }",
                "     return SmallFloat.intToByte4(numTerms);",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity.java b/lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity.java",
                "index d3224abb3d9..3ea567b48e4 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity.java",
                "@@ -23,2 +23,3 @@ import java.util.List;",
                " import org.apache.lucene.index.FieldInvertState;",
                "+import org.apache.lucene.index.IndexOptions;",
                " import org.apache.lucene.search.CollectionStatistics;",
                "@@ -502,6 +503,9 @@ public abstract class TFIDFSimilarity extends Similarity {",
                "     final int numTerms;",
                "-    if (discountOverlaps)",
                "+    if (state.getIndexOptions() == IndexOptions.DOCS && state.getIndexCreatedVersionMajor() >= 8) {",
                "+      numTerms = state.getUniqueTermCount();",
                "+    } else if (discountOverlaps) {",
                "       numTerms = state.getLength() - state.getNumOverlap();",
                "-    else",
                "+    } else {",
                "       numTerms = state.getLength();",
                "+    }",
                "     return SmallFloat.intToByte4(numTerms);",
                "diff --git a/lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java b/lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java",
                "index 4014e8cf6b9..16cc96150ee 100644",
                "--- a/lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java",
                "+++ b/lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java",
                "@@ -600,2 +600,3 @@ public class MemoryIndex {",
                "         info.sliceArray.freq[ord]++;",
                "+        info.maxTermFrequency = Math.max(info.maxTermFrequency, info.sliceArray.freq[ord]);",
                "         info.sumTotalTermFreq++;",
                "@@ -809,2 +810,4 @@ public class MemoryIndex {",
                "     private long sumTotalTermFreq;",
                "+    ",
                "+    private int maxTermFrequency;",
                "@@ -903,4 +906,4 @@ public class MemoryIndex {",
                "       if (norm == null) {",
                "-        FieldInvertState invertState = new FieldInvertState(Version.LATEST.major, fieldInfo.name, fieldInfo.number,",
                "-            numTokens, numOverlapTokens, 0);",
                "+        FieldInvertState invertState = new FieldInvertState(Version.LATEST.major, fieldInfo.name, fieldInfo.getIndexOptions(), lastPosition,",
                "+            numTokens, numOverlapTokens, 0, maxTermFrequency, terms.size());",
                "         final long value = normSimilarity.computeNorm(invertState);"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain.java",
                "lucene/core/src/java/org/apache/lucene/index/FieldInvertState.java",
                "lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.java",
                "lucene/core/src/java/org/apache/lucene/search/similarities/SimilarityBase.java",
                "lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity.java",
                "lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8031": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8031",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b7b638e00b70d3fe6d4ebcbb9bf3fe3c064209b1",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520623410,
            "hunks": 5,
            "message": "Ref Guide: fix rendering of _val_ param in function query example",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/function-queries.adoc b/solr/solr-ref-guide/src/function-queries.adoc",
                "index 5630e233d4e..32991b399b4 100644",
                "--- a/solr/solr-ref-guide/src/function-queries.adoc",
                "+++ b/solr/solr-ref-guide/src/function-queries.adoc",
                "@@ -31,3 +31,3 @@ There are several ways of using function queries in a Solr query:",
                "-* Via an explicit QParser that expects function arguments, such <<other-parsers.adoc#function-query-parser,`func`>> or <<other-parsers.adoc#function-range-query-parser,`frange`>>. For example:",
                "+* Via an explicit query parser that expects function arguments, such <<other-parsers.adoc#function-query-parser,`func`>> or <<other-parsers.adoc#function-range-query-parser,`frange`>>. For example:",
                " +",
                "@@ -60,3 +60,3 @@ the output would be:",
                " ----",
                "-* Use in a parameter that is explicitly for specifying functions, such as the EDisMax query parser's <<the-extended-dismax-query-parser.adoc#the-extended-dismax-query-parser,`boost`>> param, or DisMax query parser's <<the-dismax-query-parser.adoc#bf-boost-functions-parameter,`bf` (boost function) parameter>>. (Note that the `bf` parameter actually takes a list of function queries separated by white space and each with an optional boost. Make sure you eliminate any internal white space in single function queries when using `bf`). For example:",
                "+* Use in a parameter that is explicitly for specifying functions, such as the eDisMax query parser's <<the-extended-dismax-query-parser.adoc#the-extended-dismax-query-parser,`boost`>> param, or DisMax query parser's <<the-dismax-query-parser.adoc#bf-boost-functions-parameter,`bf` (boost function) parameter>>. (Note that the `bf` parameter actually takes a list of function queries separated by white space and each with an optional boost. Make sure you eliminate any internal white space in single function queries when using `bf`). For example:",
                " +",
                "@@ -66,3 +66,3 @@ q=dismax&bf=\"ord(popularity)^0.5 recip(rord(price),1,1000,1000)^0.3\"",
                " ----",
                "-* Introduce a function query inline in the lucene QParser with the `\\_val_` keyword. For example:",
                "+* Introduce a function query inline in the Lucene query parser with the `\\_val_` keyword. For example:",
                " +",
                "@@ -508,3 +508,4 @@ To give you a better understanding of how function queries can be used in Solr,",
                "-`q=boxname:findbox _val_:\"product(x,y,z)\"`",
                "+[source,text]",
                "+q=boxname:findbox _val_:\"product(x,y,z)\"",
                "@@ -512,3 +513,4 @@ This query will rank the results based on volumes. In order to get the computed",
                "-`&fl=*, score`",
                "+[source,text]",
                "+&fl=*, score"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/function-queries.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "8463d6af6ddce4c70e5846772943e948db270563"
                ]
            ],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8bb135aeda07d75773bac52c89d448af6a90d541",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518193498,
            "hunks": 9,
            "message": "SOLR-11722: Rename max-future-ms to maxFutureMs (cherry picked from commit 5a26381)",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java b/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "index 16529c8114f..feb0334e668 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "@@ -64,3 +64,3 @@ public class TimeRoutedAlias {",
                "   public static final String ROUTER_INTERVAL = ROUTER_PREFIX + \"interval\";",
                "-  public static final String ROUTER_MAX_FUTURE = ROUTER_PREFIX + \"max-future-ms\";",
                "+  public static final String ROUTER_MAX_FUTURE = ROUTER_PREFIX + \"maxFutureMs\";",
                "   public static final String ROUTER_AUTO_DELETE_AGE = ROUTER_PREFIX + \"autoDeleteAge\";",
                "diff --git a/solr/solr-ref-guide/src/collections-api.adoc b/solr/solr-ref-guide/src/collections-api.adoc",
                "index ac8881b848f..b2d3cc4c259 100644",
                "--- a/solr/solr-ref-guide/src/collections-api.adoc",
                "+++ b/solr/solr-ref-guide/src/collections-api.adoc",
                "@@ -534,3 +534,3 @@ the future.",
                " ----",
                "-localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=timedata&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.max-future-ms=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                "+localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=timedata&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                " ----",
                "@@ -542,3 +542,3 @@ in `evt_dt` that is before or after 2018-01-15 will be rejected, until the last",
                " document for an allowable time window for which there is no collection it will automatically create the next required",
                "-collection (and potentially any intervening collections if router.interval is smaller than router.max-future-ms). Both",
                "+collection (and potentially any intervening collections if router.interval is smaller than router.maxFutureMs). Both",
                " the initial collection and any subsequent collections will be created using the specified configset. All Collection",
                "@@ -587,3 +587,3 @@ work here. This param is required.",
                "-`router.max-future-ms`::",
                "+`router.maxFutureMs`::",
                " The maximum milliseconds into the future that a document is allowed to have in `router.field` for it to be accepted",
                "@@ -627,3 +627,3 @@ partiton is to be rejected and collections are created using a config set named",
                " ----",
                "-localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=myTimeData&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.max-future-ms=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                "+localhost:8983/solr/admin/collections?action=CREATEROUTEDALIAS&name=myTimeData&router.start=NOW/DAY&router.field=evt_dt&router.name=time&router.interval=%2B1DAY&router.maxFutureMs=3600000&create-collection.collection.configName=myConfig&create-collection.numShards=2",
                " ----",
                "@@ -658,3 +658,3 @@ POST /api/c",
                "       \"interval\":\"+2HOUR\",",
                "-      \"max-future-ms\":\"14400000\"",
                "+      \"maxFutureMs\":\"14400000\"",
                "     },",
                "diff --git a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "index 182bfce95b3..8826384956f 100644",
                "--- a/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "+++ b/solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "@@ -1423,3 +1423,3 @@ public abstract class CollectionAdminRequest<T extends CollectionAdminResponse>",
                "     public static final String ROUTER_INTERVAL = \"router.interval\";",
                "-    public static final String ROUTER_MAX_FUTURE = \"router.max-future-ms\";",
                "+    public static final String ROUTER_MAX_FUTURE = \"router.maxFutureMs\";",
                "diff --git a/solr/solrj/src/resources/apispec/collections.Commands.json b/solr/solrj/src/resources/apispec/collections.Commands.json",
                "index ec44348f276..dfdfd5207f8 100644",
                "--- a/solr/solrj/src/resources/apispec/collections.Commands.json",
                "+++ b/solr/solrj/src/resources/apispec/collections.Commands.json",
                "@@ -184,5 +184,5 @@",
                "             },",
                "-            \"max-future-ms\": {",
                "+            \"maxFutureMs\": {",
                "               \"type\": \"integer\",",
                "-              \"description\":\"How many milliseconds into the future to accept document. Documents with a value in router.field that is greater than now() + max-future-ms will be rejected to avoid provisioning too much resources.\"",
                "+              \"description\":\"How many milliseconds into the future to accept document. Documents with a value in router.field that is greater than now() + maxFutureMs will be rejected to avoid provisioning too much resources.\"",
                "             }"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias.java",
                "solr/solr-ref-guide/src/collections-api.adoc",
                "solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.java",
                "solr/solrj/src/resources/apispec/collections.Commands.json"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11722": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11722",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "52d5fcbadb6c25dc19edae7b36a0c35336c3a79c",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520246992,
            "hunks": 12,
            "message": "LUCENE-8190: Specialized cell interface to allow any spatial prefix tree to benefit from the setting setPruneLeafyBranches on RecursivePrefixTreeStrategy",
            "diff": [
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy.java",
                "index 819c50460be..59b636ccaa8 100644",
                "--- a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy.java",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy.java",
                "@@ -26,4 +26,4 @@ import org.apache.lucene.search.TermQuery;",
                " import org.apache.lucene.spatial.prefix.tree.Cell;",
                "+import org.apache.lucene.spatial.prefix.tree.CellCanPrune;",
                " import org.apache.lucene.spatial.prefix.tree.CellIterator;",
                "-import org.apache.lucene.spatial.prefix.tree.LegacyCell;",
                " import org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree;",
                "@@ -55,3 +55,3 @@ public class RecursivePrefixTreeStrategy extends PrefixTreeStrategy {",
                "   //Formerly known as simplifyIndexedCells. Eventually will be removed. Only compatible with RPT",
                "-  // and a LegacyPrefixTree.",
                "+  // and cells implementing CellCanPrune, otherwise ignored.",
                "   protected boolean pruneLeafyBranches = true;",
                "@@ -95,4 +95,6 @@ public class RecursivePrefixTreeStrategy extends PrefixTreeStrategy {",
                "   /**",
                "-   * An optional hint affecting non-point shapes: it will",
                "-   * prune away a complete set sibling leaves to their parent (recursively), resulting in ~20-50%",
                "+   * An optional hint affecting non-point shapes and tree cells implementing {@link CellCanPrune}, otherwise",
                "+   * ignored.",
                "+   * <p>",
                "+   * It will prune away a complete set sibling leaves to their parent (recursively), resulting in ~20-50%",
                "    * fewer indexed cells, and consequently that much less disk and that much faster indexing.",
                "@@ -134,6 +136,2 @@ public class RecursivePrefixTreeStrategy extends PrefixTreeStrategy {",
                "   private boolean recursiveTraverseAndPrune(Cell cell, Shape shape, int detailLevel, List<Cell> result) {",
                "-    // Important: this logic assumes Cells don't share anything with other cells when",
                "-    // calling cell.getNextLevelCells(). This is only true for LegacyCell.",
                "-    if (!(cell instanceof LegacyCell))",
                "-      throw new IllegalStateException(\"pruneLeafyBranches must be disabled for use with grid \"+grid);",
                "@@ -156,4 +154,10 @@ public class RecursivePrefixTreeStrategy extends PrefixTreeStrategy {",
                "     }",
                "+",
                "+    if (!(cell instanceof CellCanPrune)) {",
                "+      //Cannot prune so return false",
                "+      return false;",
                "+    }",
                "+",
                "     //can we prune?",
                "-    if (leaves == ((LegacyCell)cell).getSubCellsSize() && cell.getLevel() != 0) {",
                "+    if (leaves == ((CellCanPrune)cell).getSubCellsSize() && cell.getLevel() != 0) {",
                "       //Optimization: substitute the parent as a leaf instead of adding all",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/CellCanPrune.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/CellCanPrune.java",
                "new file mode 100644",
                "index 00000000000..33bd904d52f",
                "--- /dev/null",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/CellCanPrune.java",
                "@@ -0,0 +1,37 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial.prefix.tree;",
                "+",
                "+import org.locationtech.spatial4j.shape.Shape;",
                "+",
                "+/**",
                "+ *  Grid cells that share nothing with other cells when calling {@link #getNextLevelCells(Shape)}",
                "+ *  might implement this interface. Children cells for this cell will be eligible for pruning via",
                "+ *  {@link org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy#setPruneLeafyBranches(boolean)}.",
                "+ *",
                "+ * @lucene.experimental",
                "+ */",
                "+public interface CellCanPrune extends Cell{",
                "+",
                "+  /**",
                "+   * Returns the number of children for this cell.",
                "+   *",
                "+   * @return the number of children.",
                "+   */",
                "+  int getSubCellsSize();",
                "+}",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell.java",
                "index d978d3c8481..bcc1557eebc 100644",
                "--- a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell.java",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell.java",
                "@@ -29,3 +29,3 @@ import org.apache.lucene.util.StringHelper;",
                " //public for RPT pruneLeafyBranches code",
                "-public abstract class LegacyCell implements Cell {",
                "+public abstract class LegacyCell implements CellCanPrune {",
                "@@ -161,7 +161,2 @@ public abstract class LegacyCell implements Cell {",
                "-  /**",
                "-   * {@link #getSubCells()}.size() -- usually a constant. Should be &gt;=2",
                "-   */",
                "-  public abstract int getSubCellsSize();",
                "-",
                "   @Override",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "index 63a728f5575..e9b5818e16d 100644",
                "--- a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "@@ -35,3 +35,3 @@ import org.locationtech.spatial4j.shape.SpatialRelation;",
                "  */",
                "-class S2PrefixTreeCell implements Cell {",
                "+class S2PrefixTreeCell implements CellCanPrune {",
                "@@ -267,2 +267,10 @@ class S2PrefixTreeCell implements Cell {",
                "+    @Override",
                "+    public int getSubCellsSize() {",
                "+        if (cellId == null) { //root node",
                "+            return 6;",
                "+        }",
                "+        return  (int) Math.pow(4, tree.arity);",
                "+    }",
                "+",
                "     @Override"
            ],
            "changed_files": [
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/CellCanPrune.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8190": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8190",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d1e9bbd333ea55cfa0c75d324424606e857a775b",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520016410,
            "hunks": 1,
            "message": "SOLR-11503: In ZkController.waitForCoreNodeName(), persist core.properties after setting the coreNodeName",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/cloud/ZkController.java b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "index 182af5fa712..0ed0523eaee 100644",
                "--- a/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "+++ b/solr/core/src/java/org/apache/solr/cloud/ZkController.java",
                "@@ -1318,2 +1318,3 @@ public class ZkController {",
                "                   .setCoreNodeName(replica.getName());",
                "+              getCoreContainer().getCoresLocator().persist(getCoreContainer(), descriptor);",
                "               return;"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/cloud/ZkController.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11503": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/6.6.3",
                "releases/lucene-solr/6.6.4",
                "releases/lucene-solr/6.6.5",
                "releases/lucene-solr/6.6.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11503",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4fb7e3d02c6354cf1a1dce522e652610f95bec24",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518696219,
            "hunks": 126,
            "message": "LUCENE-8135: Implement block-max WAND.",
            "diff": [
                "diff --git a/lucene/core/src/java/org/apache/lucene/index/Sorter.java b/lucene/core/src/java/org/apache/lucene/index/Sorter.java",
                "index 876a034c5c1..c47f9a118ab 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/index/Sorter.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/index/Sorter.java",
                "@@ -468,3 +468,3 @@ final class Sorter {",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/BlockMaxConjunctionScorer.java b/lucene/core/src/java/org/apache/lucene/search/BlockMaxConjunctionScorer.java",
                "new file mode 100644",
                "index 00000000000..070b6c40f02",
                "--- /dev/null",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/BlockMaxConjunctionScorer.java",
                "@@ -0,0 +1,243 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.lucene.search;",
                "+",
                "+import java.io.IOException;",
                "+import java.util.ArrayList;",
                "+import java.util.Arrays;",
                "+import java.util.Collection;",
                "+import java.util.Comparator;",
                "+",
                "+/**",
                "+ * Scorer for conjunctions that checks the maximum scores of each clause in",
                "+ * order to potentially skip over blocks that can'h have competitive matches.",
                "+ */",
                "+final class BlockMaxConjunctionScorer extends Scorer {",
                "+",
                "+  final Scorer[] scorers;",
                "+  final MaxScoreSumPropagator maxScorePropagator;",
                "+  float minScore;",
                "+  final double[] minScores; // stores the min value of the sum of scores between 0..i for a hit to be competitive",
                "+  double score;",
                "+",
                "+  /** Create a new {@link BlockMaxConjunctionScorer} from scoring clauses. */",
                "+  BlockMaxConjunctionScorer(Weight weight, Collection<Scorer> scorersList) throws IOException {",
                "+    super(weight);",
                "+    this.scorers = scorersList.toArray(new Scorer[scorersList.size()]);",
                "+    this.maxScorePropagator = new MaxScoreSumPropagator(scorersList);",
                "+",
                "+    // Put scorers with the higher max scores first",
                "+    // We tie-break on cost",
                "+    Comparator<Scorer> comparator = (s1, s2) -> {",
                "+      int cmp;",
                "+      try {",
                "+        cmp = Float.compare(s2.getMaxScore(DocIdSetIterator.NO_MORE_DOCS), s1.getMaxScore(DocIdSetIterator.NO_MORE_DOCS));",
                "+      } catch (IOException e) {",
                "+        throw new RuntimeException(e);",
                "+      }",
                "+      if (cmp == 0) {",
                "+        cmp = Long.compare(s1.iterator().cost(), s2.iterator().cost());",
                "+      }",
                "+      return cmp;",
                "+    };",
                "+    Arrays.sort(this.scorers, comparator);",
                "+    minScores = new double[this.scorers.length];",
                "+  }",
                "+",
                "+  @Override",
                "+  public DocIdSetIterator iterator() {",
                "+    // TODO: support two-phase",
                "+    final Scorer leadScorer = this.scorers[0]; // higher max score",
                "+    final DocIdSetIterator[] iterators = Arrays.stream(this.scorers)",
                "+        .map(Scorer::iterator)",
                "+        .toArray(DocIdSetIterator[]::new);",
                "+    final DocIdSetIterator lead = iterators[0];",
                "+",
                "+    return new DocIdSetIterator() {",
                "+",
                "+      float maxScore;",
                "+      int upTo = -1;",
                "+",
                "+      @Override",
                "+      public int docID() {",
                "+        return lead.docID();",
                "+      }",
                "+",
                "+      @Override",
                "+      public long cost() {",
                "+        return lead.cost();",
                "+      }",
                "+",
                "+      private void moveToNextBlock(int target) throws IOException {",
                "+        upTo = advanceShallow(target);",
                "+        maxScore = getMaxScore(upTo);",
                "+",
                "+        // Also compute the minimum required scores for a hit to be competitive",
                "+        // A double that is less than 'score' might still be converted to 'score'",
                "+        // when casted to a float, so we go to the previous float to avoid this issue",
                "+        minScores[minScores.length - 1] = minScore > 0 ? Math.nextDown(minScore) : 0;",
                "+        for (int i = scorers.length - 1; i > 0; --i) {",
                "+          double minScore = minScores[i];",
                "+          float clauseMaxScore = scorers[i].getMaxScore(upTo);",
                "+          if (minScore > clauseMaxScore) {",
                "+            minScores[i - 1] = minScore - clauseMaxScore;",
                "+            assert minScores[i - 1] + clauseMaxScore <= minScore;",
                "+          } else {",
                "+            minScores[i - 1] = 0;",
                "+          }",
                "+        }",
                "+      }",
                "+",
                "+      private int advanceTarget(int target) throws IOException {",
                "+        if (target > upTo) {",
                "+          moveToNextBlock(target);",
                "+        }",
                "+",
                "+        while (true) {",
                "+          assert upTo >= target;",
                "+",
                "+          if (maxScore >= minScore) {",
                "+            return target;",
                "+          }",
                "+",
                "+          if (upTo == NO_MORE_DOCS) {",
                "+            return NO_MORE_DOCS;",
                "+          }",
                "+",
                "+          target = upTo + 1;",
                "+",
                "+          moveToNextBlock(target);",
                "+        }",
                "+      }",
                "+",
                "+      @Override",
                "+      public int nextDoc() throws IOException {",
                "+        return advance(docID() + 1);",
                "+      }",
                "+",
                "+      @Override",
                "+      public int advance(int target) throws IOException {",
                "+        return doNext(lead.advance(advanceTarget(target)));",
                "+      }",
                "+",
                "+      private int doNext(int doc) throws IOException {",
                "+        advanceHead: for(;;) {",
                "+          assert doc == lead.docID();",
                "+",
                "+          if (doc == NO_MORE_DOCS) {",
                "+            return NO_MORE_DOCS;",
                "+          }",
                "+",
                "+          if (minScore > 0) {",
                "+            score = leadScorer.score();",
                "+            if (score < minScores[0]) {",
                "+              // computing a score is usually less costly than advancing other clauses",
                "+              doc = lead.advance(advanceTarget(doc + 1));",
                "+              continue;",
                "+            }",
                "+          }",
                "+",
                "+          // then find agreement with other iterators",
                "+          for (int i = 1; i < iterators.length; ++i) {",
                "+            final DocIdSetIterator other = iterators[i];",
                "+            // other.doc may already be equal to doc if we \"continued advanceHead\"",
                "+            // on the previous iteration and the advance on the lead scorer exactly matched.",
                "+            if (other.docID() < doc) {",
                "+              final int next = other.advance(doc);",
                "+",
                "+              if (next > doc) {",
                "+                // iterator beyond the current doc - advance lead and continue to the new highest doc.",
                "+                doc = lead.advance(advanceTarget(next));",
                "+                continue advanceHead;",
                "+              }",
                "+            }",
                "+",
                "+            assert other.docID() == doc;",
                "+            if (minScore > 0) {",
                "+              score += scorers[i].score();",
                "+",
                "+              if (score < minScores[i]) {",
                "+                // computing a score is usually less costly than advancing the next clause",
                "+                doc = lead.advance(advanceTarget(doc + 1));",
                "+                continue advanceHead;",
                "+              }",
                "+            }",
                "+          }",
                "+",
                "+          if (minScore > 0 == false) {",
                "+            // the score hasn't been computed on the fly, do it now",
                "+            score = 0;",
                "+            for (Scorer scorer : scorers) {",
                "+              score += scorer.score();",
                "+            }",
                "+          }",
                "+",
                "+          // success - all iterators are on the same doc and the score is competitive",
                "+          return doc;",
                "+        }",
                "+      }",
                "+    };",
                "+  }",
                "+",
                "+  @Override",
                "+  public int docID() {",
                "+    return scorers[0].docID();",
                "+  }",
                "+",
                "+  @Override",
                "+  public float score() throws IOException {",
                "+    return (float) score;",
                "+  }",
                "+",
                "+  @Override",
                "+  public int advanceShallow(int target) throws IOException {",
                "+    // We use block boundaries of the lead scorer.",
                "+    // It is tempting to fold in other clauses as well to have better bounds of",
                "+    // the score, but then there is a risk of not progressing fast enough.",
                "+    int result = scorers[0].advanceShallow(target);",
                "+    // But we still need to shallow-advance other clauses, in order to have",
                "+    // better score upper bounds",
                "+    for (int i = 1; i < scorers.length; ++i) {",
                "+      scorers[i].advanceShallow(target);",
                "+    }",
                "+    return result;",
                "+  }",
                "+",
                "+  @Override",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "+    double sum = 0;",
                "+    for (Scorer scorer : scorers) {",
                "+      sum += scorer.getMaxScore(upTo);",
                "+    }",
                "+    return (float) sum;",
                "+  }",
                "+",
                "+  @Override",
                "+  public void setMinCompetitiveScore(float score) {",
                "+    minScore = score;",
                "+  }",
                "+",
                "+  @Override",
                "+  public Collection<ChildScorer> getChildren() {",
                "+    ArrayList<ChildScorer> children = new ArrayList<>();",
                "+    for (Scorer scorer : scorers) {",
                "+      children.add(new ChildScorer(scorer, \"MUST\"));",
                "+    }",
                "+    return children;",
                "+  }",
                "+",
                "+}",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/Boolean2ScorerSupplier.java b/lucene/core/src/java/org/apache/lucene/search/Boolean2ScorerSupplier.java",
                "index 5956836f6ce..34012157723 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/Boolean2ScorerSupplier.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/Boolean2ScorerSupplier.java",
                "@@ -22,2 +22,3 @@ import java.util.Arrays;",
                " import java.util.Collection;",
                "+import java.util.Collections;",
                " import java.util.List;",
                "@@ -137,3 +138,3 @@ final class Boolean2ScorerSupplier extends ScorerSupplier {",
                "           @Override",
                "-          public float maxScore() {",
                "+          public float getMaxScore(int upTo) throws IOException {",
                "             return 0f;",
                "@@ -152,5 +153,12 @@ final class Boolean2ScorerSupplier extends ScorerSupplier {",
                "         Scorer scorer = s.get(leadCost);",
                "-        requiredScorers.add(scorer);",
                "         scoringScorers.add(scorer);",
                "       }",
                "+      if (scoreMode == ScoreMode.TOP_SCORES && scoringScorers.size() > 1) {",
                "+        Scorer blockMaxScorer = new BlockMaxConjunctionScorer(weight, scoringScorers);",
                "+        if (requiredScorers.isEmpty()) {",
                "+          return blockMaxScorer;",
                "+        }",
                "+        scoringScorers = Collections.singletonList(blockMaxScorer);",
                "+      }",
                "+      requiredScorers.addAll(scoringScorers);",
                "       return new ConjunctionScorer(weight, requiredScorers, scoringScorers);",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/CachingCollector.java b/lucene/core/src/java/org/apache/lucene/search/CachingCollector.java",
                "index 985377230af..3bed88dd998 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/CachingCollector.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/CachingCollector.java",
                "@@ -70,3 +70,3 @@ public abstract class CachingCollector extends FilterCollector {",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer.java b/lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer.java",
                "index 75895fc5e1d..7a1b9563721 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer.java",
                "@@ -32,3 +32,3 @@ class ConjunctionScorer extends Scorer {",
                "   /** Create a new {@link ConjunctionScorer}, note that {@code scorers} must be a subset of {@code required}. */",
                "-  ConjunctionScorer(Weight weight, Collection<Scorer> required, Collection<Scorer> scorers) {",
                "+  ConjunctionScorer(Weight weight, Collection<Scorer> required, Collection<Scorer> scorers) throws IOException {",
                "     super(weight);",
                "@@ -66,4 +66,20 @@ class ConjunctionScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "-    return maxScorePropagator.maxScore();",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "+    // This scorer is only used for TOP_SCORES when there is at most one scoring clause",
                "+    switch (scorers.length) {",
                "+      case 0:",
                "+        return 0;",
                "+      case 1:",
                "+        return scorers[0].getMaxScore(upTo);",
                "+      default:",
                "+        return Float.POSITIVE_INFINITY;",
                "+    }",
                "+  }",
                "+",
                "+  @Override",
                "+  public int advanceShallow(int target) throws IOException {",
                "+    if (scorers.length == 1) {",
                "+      return scorers[0].advanceShallow(target);",
                "+    }",
                "+    return super.advanceShallow(target);",
                "   }",
                "@@ -71,5 +87,7 @@ class ConjunctionScorer extends Scorer {",
                "   @Override",
                "-  public void setMinCompetitiveScore(float score) {",
                "-    // Propagate to sub clauses.",
                "-    maxScorePropagator.setMinCompetitiveScore(score);",
                "+  public void setMinCompetitiveScore(float minScore) {",
                "+    // This scorer is only used for TOP_SCORES when there is a single scoring clause",
                "+    if (scorers.length == 1) {",
                "+      scorers[0].setMinCompetitiveScore(minScore);",
                "+    }",
                "   }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.java b/lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.java",
                "index 9334f66d3f3..464cde6a45f 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.java",
                "@@ -97,3 +97,3 @@ public final class ConstantScoreQuery extends Query {",
                "             @Override",
                "-            public float maxScore() {",
                "+            public float getMaxScore(int upTo) throws IOException {",
                "               return theScore;",
                "@@ -143,3 +143,3 @@ public final class ConstantScoreQuery extends Query {",
                "                 @Override",
                "-                public float maxScore() {",
                "+                public float getMaxScore(int upTo) throws IOException {",
                "                   return score;",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/ConstantScoreScorer.java b/lucene/core/src/java/org/apache/lucene/search/ConstantScoreScorer.java",
                "index 5c577463bf4..45a6bdbad04 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/ConstantScoreScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/ConstantScoreScorer.java",
                "@@ -56,3 +56,3 @@ public final class ConstantScoreScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return score;",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/DisiWrapper.java b/lucene/core/src/java/org/apache/lucene/search/DisiWrapper.java",
                "index 6412d41a2e4..fac9418010f 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/DisiWrapper.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/DisiWrapper.java",
                "@@ -40,3 +40,3 @@ public class DisiWrapper {",
                "-  // For MaxScoreScorer",
                "+  // For WANDScorer",
                "   long maxScore;",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer.java b/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer.java",
                "index c5c3640e147..3b860687715 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer.java",
                "@@ -45,3 +45,3 @@ final class DisjunctionMaxScorer extends DisjunctionScorer {",
                "    */",
                "-  DisjunctionMaxScorer(Weight weight, float tieBreakerMultiplier, List<Scorer> subScorers, boolean needsScores) {",
                "+  DisjunctionMaxScorer(Weight weight, float tieBreakerMultiplier, List<Scorer> subScorers, boolean needsScores) throws IOException {",
                "     super(weight, subScorers, needsScores);",
                "@@ -55,3 +55,3 @@ final class DisjunctionMaxScorer extends DisjunctionScorer {",
                "     for (Scorer scorer : subScorers) {",
                "-      float subScore = scorer.maxScore();",
                "+      float subScore = scorer.getMaxScore(DocIdSetIterator.NO_MORE_DOCS);",
                "       if (subScore >= scoreMax) {",
                "@@ -93,3 +93,3 @@ final class DisjunctionMaxScorer extends DisjunctionScorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return maxScore;",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer.java b/lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer.java",
                "index 7e22991dacb..fa92fcd0fac 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer.java",
                "@@ -34,3 +34,3 @@ final class DisjunctionSumScorer extends DisjunctionScorer {",
                "    */",
                "-  DisjunctionSumScorer(Weight weight, List<Scorer> subScorers, boolean needsScores) {",
                "+  DisjunctionSumScorer(Weight weight, List<Scorer> subScorers, boolean needsScores) throws IOException {",
                "     super(weight, subScorers, needsScores);",
                "@@ -38,3 +38,3 @@ final class DisjunctionSumScorer extends DisjunctionScorer {",
                "     for (Scorer scorer : subScorers) {",
                "-      maxScore += scorer.maxScore();",
                "+      maxScore += scorer.getMaxScore(DocIdSetIterator.NO_MORE_DOCS);",
                "     }",
                "@@ -59,3 +59,3 @@ final class DisjunctionSumScorer extends DisjunctionScorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return maxScore;",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/ExactPhraseScorer.java b/lucene/core/src/java/org/apache/lucene/search/ExactPhraseScorer.java",
                "index e2d6d8047f3..d7c4f9f6e2b 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/ExactPhraseScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/ExactPhraseScorer.java",
                "@@ -123,3 +123,3 @@ final class ExactPhraseScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return docScorer.maxScore();",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/FakeScorer.java b/lucene/core/src/java/org/apache/lucene/search/FakeScorer.java",
                "index 07b5048f73d..c8b34381b2b 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/FakeScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/FakeScorer.java",
                "@@ -19,2 +19,3 @@ package org.apache.lucene.search;",
                "+import java.io.IOException;",
                " import java.util.Collection;",
                "@@ -42,3 +43,3 @@ final class FakeScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/MaxScoreSumPropagator.java b/lucene/core/src/java/org/apache/lucene/search/MaxScoreSumPropagator.java",
                "index 27c8933494f..6c204ed040b 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/MaxScoreSumPropagator.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/MaxScoreSumPropagator.java",
                "@@ -18,5 +18,5 @@ package org.apache.lucene.search;",
                "+import java.io.IOException;",
                " import java.util.Collection;",
                "-import org.apache.lucene.util.InPlaceMergeSorter;",
                " import org.apache.lucene.util.MathUtil;",
                "@@ -30,80 +30,15 @@ final class MaxScoreSumPropagator {",
                "-  /**",
                "-   * Return an array which, at index i, stores the sum of all entries of",
                "-   * {@code v} except the one at index i.",
                "-   */",
                "-  private static double[] computeSumOfComplement(float[] v) {",
                "-    // We do not use subtraction on purpose because it would defeat the",
                "-    // upperbound formula that we use for sums.",
                "-    // Naive approach would be O(n^2), but we can do O(n) by computing the",
                "-    // sum for i<j and i>j and then sum them.",
                "-    double[] sum1 = new double[v.length];",
                "-    for (int i = 1; i < sum1.length; ++i) {",
                "-      sum1[i] = sum1[i-1] + v[i-1];",
                "-    }",
                "-",
                "-    double[] sum2 = new double[v.length];",
                "-    for (int i = sum2.length - 2; i >= 0; --i) {",
                "-      sum2[i] = sum2[i+1] + v[i+1];",
                "-    }",
                "-",
                "-    double[] result = new double[v.length];",
                "-    for (int i = 0; i < result.length; ++i) {",
                "-      result[i] = sum1[i] + sum2[i];",
                "-    }",
                "-    return result;",
                "-  }",
                "-",
                "   private final int numClauses;",
                "-  private final float maxScore;",
                "   private final Scorer[] scorers;",
                "-  private final double[] sumOfOtherMaxScores;",
                "-  MaxScoreSumPropagator(Collection<? extends Scorer> scorerList) {",
                "+  MaxScoreSumPropagator(Collection<? extends Scorer> scorerList) throws IOException {",
                "     numClauses = scorerList.size();",
                "     scorers = scorerList.toArray(new Scorer[numClauses]);",
                "-    // We'll need max scores multiple times so we cache them",
                "-    float[] maxScores = new float[numClauses];",
                "-    for (int i = 0; i < numClauses; ++i) {",
                "-      maxScores[i] = scorers[i].maxScore();",
                "-    }",
                "-    // Sort by decreasing max score",
                "-    new InPlaceMergeSorter() {",
                "-      @Override",
                "-      protected void swap(int i, int j) {",
                "-        Scorer tmp = scorers[i];",
                "-        scorers[i] = scorers[j];",
                "-        scorers[j] = tmp;",
                "-        float tmpF = maxScores[i];",
                "-        maxScores[i] = maxScores[j];",
                "-        maxScores[j] = tmpF;",
                "-      }",
                "-      @Override",
                "-      protected int compare(int i, int j) {",
                "-        return Float.compare(maxScores[j], maxScores[i]);",
                "-      }",
                "-    }.sort(0, scorers.length);",
                "-",
                "-    sumOfOtherMaxScores = computeSumOfComplement(maxScores);",
                "-    if (numClauses == 0) {",
                "-      maxScore = 0;",
                "-    } else {",
                "-      maxScore = sumUpperBound(maxScores[0] + sumOfOtherMaxScores[0]);",
                "-    }",
                "-  }",
                "-",
                "-  public float maxScore() {",
                "-    return maxScore;",
                "   }",
                "-  public void setMinCompetitiveScore(float minScoreSum) {",
                "-    for (int i = 0; i < numClauses; ++i) {",
                "-      double sumOfOtherMaxScores = this.sumOfOtherMaxScores[i];",
                "-      float minCompetitiveScore = getMinCompetitiveScore(minScoreSum, sumOfOtherMaxScores);",
                "-      if (minCompetitiveScore <= 0) {",
                "-        // given that scorers are sorted by decreasing max score, next scorers will",
                "-        // have 0 as a minimum competitive score too",
                "-        break;",
                "+  void advanceShallow(int target) throws IOException {",
                "+    for (Scorer s : scorers) {",
                "+      if (s.docID() < target) {",
                "+        s.advanceShallow(target);",
                "       }",
                "-      scorers[i].setMinCompetitiveScore(minCompetitiveScore);",
                "     }",
                "@@ -111,29 +46,13 @@ final class MaxScoreSumPropagator {",
                "-  /**",
                "-   * Return the minimum score that a Scorer must produce in order for a hit to",
                "-   * be competitive.",
                "-   */",
                "-  private float getMinCompetitiveScore(float minScoreSum, double sumOfOtherMaxScores) {",
                "-    assert numClauses > 0;",
                "-    if (minScoreSum <= sumOfOtherMaxScores) {",
                "-      return 0f;",
                "-    }",
                "-",
                "-    // We need to find a value 'minScore' so that 'minScore + sumOfOtherMaxScores <= minScoreSum'",
                "-    // TODO: is there an efficient way to find the greatest value that meets this requirement?",
                "-    float minScore = (float) (minScoreSum - sumOfOtherMaxScores);",
                "-    int iters = 0;",
                "-    while (sumUpperBound(minScore + sumOfOtherMaxScores) > minScoreSum) {",
                "-      // Important: use ulp of minScoreSum and not minScore to make sure that we",
                "-      // converge quickly.",
                "-      minScore -= Math.ulp(minScoreSum);",
                "-      // this should converge in at most two iterations:",
                "-      //  - one because of the subtraction rounding error",
                "-      //  - one because of the error introduced by sumUpperBound",
                "-      assert ++iters <= 2: iters;",
                "+  float getMaxScore(int upTo) throws IOException {",
                "+    double maxScore = 0;",
                "+    for (Scorer s : scorers) {",
                "+      if (s.docID() <= upTo) {",
                "+        maxScore += s.getMaxScore(upTo);",
                "+      }",
                "     }",
                "-    return Math.max(minScore, 0f);",
                "+    return scoreSumUpperBound(maxScore);",
                "   }",
                "-  private float sumUpperBound(double sum) {",
                "+  private float scoreSumUpperBound(double sum) {",
                "     if (numClauses <= 2) {",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer.java b/lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer.java",
                "index ead26041414..6ffbe340144 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer.java",
                "@@ -328,3 +328,3 @@ final class MinShouldMatchSumScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     // TODO: implement but be careful about floating-point errors.",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/ReqExclScorer.java b/lucene/core/src/java/org/apache/lucene/search/ReqExclScorer.java",
                "index 3714d49d2ac..987293eb047 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/ReqExclScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/ReqExclScorer.java",
                "@@ -79,4 +79,4 @@ class ReqExclScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "-    return reqScorer.maxScore();",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "+    return reqScorer.getMaxScore(upTo);",
                "   }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer.java b/lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer.java",
                "index b91d2534501..6d93a54560d 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer.java",
                "@@ -46,3 +46,3 @@ class ReqOptSumScorer extends Scorer {",
                "       Scorer reqScorer,",
                "-      Scorer optScorer)",
                "+      Scorer optScorer) throws IOException",
                "   {",
                "@@ -54,3 +54,3 @@ class ReqOptSumScorer extends Scorer {",
                "-    this.reqMaxScore = reqScorer.maxScore();",
                "+    this.reqMaxScore = reqScorer.getMaxScore(DocIdSetIterator.NO_MORE_DOCS);",
                "     this.maxScorePropagator = new MaxScoreSumPropagator(Arrays.asList(reqScorer, optScorer));",
                "@@ -212,4 +212,8 @@ class ReqOptSumScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "-    return maxScorePropagator.maxScore();",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "+    float maxScore = reqScorer.getMaxScore(upTo);",
                "+    if (optScorer.docID() <= upTo) {",
                "+      maxScore += optScorer.getMaxScore(upTo);",
                "+    }",
                "+    return maxScore;",
                "   }",
                "@@ -222,4 +226,2 @@ class ReqOptSumScorer extends Scorer {",
                "     }",
                "-    // And also propagate to sub clauses.",
                "-    maxScorePropagator.setMinCompetitiveScore(minScore);",
                "   }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/ScoreCachingWrappingScorer.java b/lucene/core/src/java/org/apache/lucene/search/ScoreCachingWrappingScorer.java",
                "index 1384cbe729d..d775c37f447 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/ScoreCachingWrappingScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/ScoreCachingWrappingScorer.java",
                "@@ -56,4 +56,9 @@ public final class ScoreCachingWrappingScorer extends FilterScorer {",
                "   @Override",
                "-  public float maxScore() {",
                "-    return in.maxScore();",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "+    return in.getMaxScore(upTo);",
                "+  }",
                "+",
                "+  @Override",
                "+  public int advanceShallow(int target) throws IOException {",
                "+    return in.advanceShallow(target);",
                "   }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/Scorer.java b/lucene/core/src/java/org/apache/lucene/search/Scorer.java",
                "index 2fb0d26f489..81624ccac9d 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/Scorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/Scorer.java",
                "@@ -159,5 +159,23 @@ public abstract class Scorer {",
                "-  /** Return the maximum score that this scorer may produce. If scores are not",
                "-   *  bounded, {@link Float#POSITIVE_INFINITY} must be returned. */",
                "-  public abstract float maxScore();",
                "+  /**",
                "+   * Advance to the block of documents that contains {@code target} in order to",
                "+   * get scoring information about this block. This method is implicitly called",
                "+   * by {@link DocIdSetIterator#advance(int)} and",
                "+   * {@link DocIdSetIterator#nextDoc()}. Calling this method doesn't modify the",
                "+   * current {@link DocIdSetIterator#docID()}.",
                "+   * It returns a number that is greater than or equal to all documents",
                "+   * contained in the current block, but less than any doc IDS of the next block.",
                "+   * {@code target} must be &gt;= {@link #docID()} as well as all targets that",
                "+   * have been passed to {@link #advanceShallow(int)} so far.",
                "+   */",
                "+  public int advanceShallow(int target) throws IOException {",
                "+    return DocIdSetIterator.NO_MORE_DOCS;",
                "+  }",
                "+",
                "+  /**",
                "+   * Return the maximum score that documents between the last {@code target}",
                "+   * that this iterator was {@link #advanceShallow(int) shallow-advanced} to",
                "+   * included and {@code upTo} included.",
                "+   */",
                "+  public abstract float getMaxScore(int upTo) throws IOException;",
                " }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer.java b/lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer.java",
                "index 60b77c5c4ea..7587b37889b 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer.java",
                "@@ -558,3 +558,3 @@ final class SloppyPhraseScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return docScorer.maxScore();",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/SynonymQuery.java b/lucene/core/src/java/org/apache/lucene/search/SynonymQuery.java",
                "index 1eba910eef7..2a7c450805d 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/SynonymQuery.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/SynonymQuery.java",
                "@@ -256,3 +256,3 @@ public final class SynonymQuery extends Query {",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       return similarity.maxScore();",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/TermScorer.java b/lucene/core/src/java/org/apache/lucene/search/TermScorer.java",
                "index fc426da7db5..d51626fda8c 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/TermScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/TermScorer.java",
                "@@ -23,2 +23,3 @@ import org.apache.lucene.index.ImpactsEnum;",
                " import org.apache.lucene.index.PostingsEnum;",
                "+import org.apache.lucene.index.SlowImpactsEnum;",
                " import org.apache.lucene.index.TermsEnum;",
                "@@ -29,2 +30,3 @@ final class TermScorer extends Scorer {",
                "   private final PostingsEnum postingsEnum;",
                "+  private final ImpactsEnum impactsEnum;",
                "   private final DocIdSetIterator iterator;",
                "@@ -47,3 +49,3 @@ final class TermScorer extends Scorer {",
                "     if (scoreMode == ScoreMode.TOP_SCORES) {",
                "-      ImpactsEnum impactsEnum = te.impacts(docScorer.getSimScorer(), PostingsEnum.FREQS);",
                "+      impactsEnum = te.impacts(docScorer.getSimScorer(), PostingsEnum.FREQS);",
                "       postingsEnum = impactsEnum;",
                "@@ -105,2 +107,3 @@ final class TermScorer extends Scorer {",
                "       postingsEnum = te.postings(null, scoreMode.needsScores() ? PostingsEnum.FREQS : PostingsEnum.NONE);",
                "+      impactsEnum = new SlowImpactsEnum(postingsEnum, docScorer.getSimScorer().score(Float.MAX_VALUE, 1));",
                "       iterator = postingsEnum;",
                "@@ -130,4 +133,9 @@ final class TermScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "-    return docScorer.maxScore();",
                "+  public int advanceShallow(int target) throws IOException {",
                "+    return impactsEnum.advanceShallow(target);",
                "+  }",
                "+",
                "+  @Override",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "+    return impactsEnum.getMaxScore(upTo);",
                "   }",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/WANDScorer.java b/lucene/core/src/java/org/apache/lucene/search/WANDScorer.java",
                "index 314ccf14bf3..f7a88f15927 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/WANDScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/WANDScorer.java",
                "@@ -31,6 +31,8 @@ import java.util.OptionalInt;",
                "  * described in \"Efficient Query Evaluation using a Two-Level Retrieval",
                "- * Process\" by Broder, Carmel, Herscovici, Soffer and Zien.",
                "+ * Process\" by Broder, Carmel, Herscovici, Soffer and Zien. Enhanced with",
                "+ * techniques described in \"Faster Top-k Document Retrieval Using Block-Max",
                "+ * Indexes\" by Ding and Suel.",
                "  * This scorer maintains a feedback loop with the collector in order to",
                "  * know at any time the minimum score that is required in order for a hit",
                "- * to be competitive. Then it leverages the {@link Scorer#maxScore() max score}",
                "+ * to be competitive. Then it leverages the {@link Scorer#getMaxScore(int) max score}",
                "  * from each scorer in order to know when it may call",
                "@@ -124,3 +126,5 @@ final class WANDScorer extends Scorer {",
                "-  WANDScorer(Weight weight, Collection<Scorer> scorers) {",
                "+  int upTo; // upper bound for which max scores are valid",
                "+",
                "+  WANDScorer(Weight weight, Collection<Scorer> scorers) throws IOException {",
                "     super(weight);",
                "@@ -129,2 +133,3 @@ final class WANDScorer extends Scorer {",
                "     this.doc = -1;",
                "+    this.upTo = -1; // will be computed on the first call to nextDoc/advance",
                "@@ -132,3 +137,3 @@ final class WANDScorer extends Scorer {",
                "     // there can be at most num_scorers - 1 scorers beyond the current position",
                "-    tail = new DisiWrapper[scorers.size() - 1];",
                "+    tail = new DisiWrapper[scorers.size()];",
                "@@ -136,3 +141,3 @@ final class WANDScorer extends Scorer {",
                "     for (Scorer scorer : scorers) {",
                "-      float maxScore = scorer.maxScore();",
                "+      float maxScore = scorer.getMaxScore(DocIdSetIterator.NO_MORE_DOCS);",
                "       if (maxScore != 0 && Float.isFinite(maxScore)) {",
                "@@ -144,13 +149,8 @@ final class WANDScorer extends Scorer {",
                "     this.scalingFactor = scalingFactor.orElse(0);",
                "-    ",
                "-    for (Scorer scorer : scorers) {",
                "-      DisiWrapper w = new DisiWrapper(scorer);",
                "-      float maxScore = scorer.maxScore();",
                "-      w.maxScore = scaleMaxScore(maxScore, this.scalingFactor);",
                "-      addLead(w);",
                "-    }",
                "     long cost = 0;",
                "-    for (DisiWrapper w = lead; w != null; w = w.next) {",
                "+    for (Scorer scorer : scorers) {",
                "+      DisiWrapper w = new DisiWrapper(scorer);",
                "       cost += w.cost;",
                "+      addLead(w);",
                "     }",
                "@@ -181,3 +181,3 @@ final class WANDScorer extends Scorer {",
                "-    assert tailSize == 0 || tailMaxScore < minCompetitiveScore;",
                "+    assert minCompetitiveScore == 0 || tailMaxScore < minCompetitiveScore;",
                "@@ -194,5 +194,2 @@ final class WANDScorer extends Scorer {",
                "     minCompetitiveScore = scaledMinScore;",
                "-",
                "-    // And also propagate to sub clauses.",
                "-    maxScorePropagator.setMinCompetitiveScore(minScore);",
                "   }",
                "@@ -202,3 +199,3 @@ final class WANDScorer extends Scorer {",
                "     List<ChildScorer> matchingChildren = new ArrayList<>();",
                "-    updateFreq();",
                "+    advanceAllTail();",
                "     for (DisiWrapper s = lead; s != null; s = s.next) {",
                "@@ -238,4 +235,8 @@ final class WANDScorer extends Scorer {",
                "-        // Pop the new 'lead' from the 'head'",
                "-        setDocAndFreq();",
                "+        // Pop the new 'lead' from 'head'",
                "+        moveToNextCandidate(target);",
                "+",
                "+        if (doc == DocIdSetIterator.NO_MORE_DOCS) {",
                "+          return DocIdSetIterator.NO_MORE_DOCS;",
                "+        }",
                "@@ -244,3 +245,3 @@ final class WANDScorer extends Scorer {",
                "         // Advance to the next possible match",
                "-        return doNextCandidate();",
                "+        return doNextCompetitiveCandidate();",
                "       }",
                "@@ -277,2 +278,3 @@ final class WANDScorer extends Scorer {",
                "+  /** Add a disi to the linked list of leads. */",
                "   private void addLead(DisiWrapper lead) {",
                "@@ -283,2 +285,3 @@ final class WANDScorer extends Scorer {",
                "+  /** Move disis that are in 'lead' back to the tail.  */",
                "   private void pushBackLeads(int target) throws IOException {",
                "@@ -291,7 +294,10 @@ final class WANDScorer extends Scorer {",
                "     }",
                "+    lead = null;",
                "+    leadMaxScore = 0;",
                "   }",
                "+  /** Make sure all disis in 'head' are on or after 'target'. */",
                "   private void advanceHead(int target) throws IOException {",
                "     DisiWrapper headTop = head.top();",
                "-    while (headTop.doc < target) {",
                "+    while (headTop != null && headTop.doc < target) {",
                "       final DisiWrapper evicted = insertTailWithOverFlow(headTop);",
                "@@ -316,2 +322,5 @@ final class WANDScorer extends Scorer {",
                "+  /** Pop the entry from the 'tail' that has the greatest score contribution,",
                "+   *  advance it to the current doc and then add it to 'lead' or 'head'",
                "+   *  depending on whether it matches. */",
                "   private void advanceTail() throws IOException {",
                "@@ -321,5 +330,71 @@ final class WANDScorer extends Scorer {",
                "-  /** Reinitializes head, freq and doc from 'head' */",
                "-  private void setDocAndFreq() {",
                "-    assert head.size() > 0;",
                "+  private void updateMaxScores(int target) throws IOException {",
                "+    if (head.size() == 0) {",
                "+      // If the head is empty we use the greatest score contributor as a lead",
                "+      // like for conjunctions.",
                "+      upTo = tail[0].scorer.advanceShallow(target);",
                "+    } else {",
                "+      // If we still have entries in 'head', we treat them all as leads and",
                "+      // take the minimum of their next block boundaries as a next boundary.",
                "+      // We don't take entries in 'tail' into account on purpose: 'tail' is",
                "+      // supposed to contain the least score contributors, and taking them",
                "+      // into account might not move the boundary fast enough, so we'll waste",
                "+      // CPU re-computing the next boundary all the time.",
                "+      int newUpTo = DocIdSetIterator.NO_MORE_DOCS;",
                "+      for (DisiWrapper w : head) {",
                "+        if (w.doc <= newUpTo) {",
                "+          newUpTo = Math.min(w.scorer.advanceShallow(w.doc), newUpTo);",
                "+          w.maxScore = scaleMaxScore(w.scorer.getMaxScore(newUpTo), scalingFactor);",
                "+        }",
                "+      }",
                "+      upTo = newUpTo;",
                "+    }",
                "+",
                "+    tailMaxScore = 0;",
                "+    for (int i = 0; i < tailSize; ++i) {",
                "+      DisiWrapper w = tail[i];",
                "+      w.scorer.advanceShallow(target);",
                "+      w.maxScore = scaleMaxScore(w.scorer.getMaxScore(upTo), scalingFactor);",
                "+      upHeapMaxScore(tail, i); // the heap might need to be reordered",
                "+      tailMaxScore += w.maxScore;",
                "+    }",
                "+",
                "+    // We need to make sure that entries in 'tail' alone cannot match",
                "+    // a competitive hit.",
                "+    while (tailSize > 0 && tailMaxScore >= minCompetitiveScore) {",
                "+      DisiWrapper w = popTail();",
                "+      w.doc = w.iterator.advance(target);",
                "+      head.add(w);",
                "+    }",
                "+  }",
                "+",
                "+  private void updateMaxScoresIfNecessary(int target) throws IOException {",
                "+    assert lead == null;",
                "+",
                "+    if (head.size() == 0) { // no matches in the current block",
                "+      if (upTo != DocIdSetIterator.NO_MORE_DOCS) {",
                "+        updateMaxScores(Math.max(target, upTo + 1));",
                "+      }",
                "+    } else if (head.top().doc > upTo) { // the next candidate is in a different block",
                "+      assert head.top().doc >= target;",
                "+      updateMaxScores(target);",
                "+    }",
                "+  }",
                "+",
                "+  /** Set 'doc' to the next potential match, and move all disis of 'head' that",
                "+   *  are on this doc into 'lead'. */",
                "+  private void moveToNextCandidate(int target) throws IOException {",
                "+    // Update score bounds if necessary so",
                "+    updateMaxScoresIfNecessary(target);",
                "+    assert upTo >= target;",
                "+",
                "+    // If the head is empty, it means that the sum of all max scores is not",
                "+    // enough to produce a competitive score. So we jump to the next block.",
                "+    while (head.size() == 0) {",
                "+      if (upTo == DocIdSetIterator.NO_MORE_DOCS) {",
                "+        doc = DocIdSetIterator.NO_MORE_DOCS;",
                "+        return;",
                "+      }",
                "+      updateMaxScores(upTo + 1);",
                "+    }",
                "@@ -337,12 +412,11 @@ final class WANDScorer extends Scorer {",
                "   /** Move iterators to the tail until there is a potential match. */",
                "-  private int doNextCandidate() throws IOException {",
                "+  private int doNextCompetitiveCandidate() throws IOException {",
                "     while (leadMaxScore + tailMaxScore < minCompetitiveScore) {",
                "       // no match on doc is possible, move to the next potential match",
                "-      if (head.size() == 0) {",
                "-        // special case: the total max score is less than the min competitive score, there are no more matches",
                "-        return doc = DocIdSetIterator.NO_MORE_DOCS;",
                "-      }",
                "       pushBackLeads(doc + 1);",
                "-      setDocAndFreq();",
                "+      moveToNextCandidate(doc + 1);",
                "       assert ensureConsistent();",
                "+      if (doc == DocIdSetIterator.NO_MORE_DOCS) {",
                "+        break;",
                "+      }",
                "     }",
                "@@ -354,3 +428,3 @@ final class WANDScorer extends Scorer {",
                "    *  current doc. */",
                "-  private void updateFreq() throws IOException {",
                "+  private void advanceAllTail() throws IOException {",
                "     // we return the next doc when the sum of the scores of the potential",
                "@@ -358,7 +432,4 @@ final class WANDScorer extends Scorer {",
                "     // match as well",
                "-    // in general we want to advance least-costly clauses first in order to",
                "-    // skip over non-matching documents as fast as possible. However here,",
                "-    // we are advancing everything anyway so iterating over clauses in",
                "-    // (roughly) cost-descending order might help avoid some permutations in",
                "-    // the head heap",
                "+    // since we are advancing all clauses in tail, we just iterate the array",
                "+    // without reorganizing the PQ",
                "     for (int i = tailSize - 1; i >= 0; --i) {",
                "@@ -374,3 +445,3 @@ final class WANDScorer extends Scorer {",
                "     // we need to know about all matches",
                "-    updateFreq();",
                "+    advanceAllTail();",
                "     double score = 0;",
                "@@ -383,4 +454,15 @@ final class WANDScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "-    return maxScorePropagator.maxScore();",
                "+  public int advanceShallow(int target) throws IOException {",
                "+    // Propagate to improve score bounds",
                "+    maxScorePropagator.advanceShallow(target);",
                "+    if (target <= upTo) {",
                "+      return upTo;",
                "+    }",
                "+    // TODO: implement",
                "+    return DocIdSetIterator.NO_MORE_DOCS;",
                "+  }",
                "+",
                "+  @Override",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "+    return maxScorePropagator.getMaxScore(upTo);",
                "   }",
                "@@ -394,3 +476,3 @@ final class WANDScorer extends Scorer {",
                "   private DisiWrapper insertTailWithOverFlow(DisiWrapper s) {",
                "-    if (tailSize < tail.length && tailMaxScore + s.maxScore < minCompetitiveScore) {",
                "+    if (tailMaxScore + s.maxScore < minCompetitiveScore) {",
                "       // we have free room for this new entry",
                "diff --git a/lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java b/lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java",
                "index 044ac7a5960..666f163742a 100644",
                "--- a/lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java",
                "+++ b/lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java",
                "@@ -137,3 +137,3 @@ public class SpanScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/expressions/src/java/org/apache/lucene/expressions/FakeScorer.java b/lucene/expressions/src/java/org/apache/lucene/expressions/FakeScorer.java",
                "index 4ba905afc1a..026c789cce1 100644",
                "--- a/lucene/expressions/src/java/org/apache/lucene/expressions/FakeScorer.java",
                "+++ b/lucene/expressions/src/java/org/apache/lucene/expressions/FakeScorer.java",
                "@@ -49,3 +49,3 @@ class FakeScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysScorer.java b/lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysScorer.java",
                "index eaf1ffe787d..c5f3f760a9b 100644",
                "--- a/lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysScorer.java",
                "+++ b/lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysScorer.java",
                "@@ -604,3 +604,3 @@ class DrillSidewaysScorer extends BulkScorer {",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/grouping/src/java/org/apache/lucene/search/grouping/FakeScorer.java b/lucene/grouping/src/java/org/apache/lucene/search/grouping/FakeScorer.java",
                "index 8c06f9445de..b46662d4042 100644",
                "--- a/lucene/grouping/src/java/org/apache/lucene/search/grouping/FakeScorer.java",
                "+++ b/lucene/grouping/src/java/org/apache/lucene/search/grouping/FakeScorer.java",
                "@@ -48,3 +48,3 @@ class FakeScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/BaseGlobalOrdinalScorer.java b/lucene/join/src/java/org/apache/lucene/search/join/BaseGlobalOrdinalScorer.java",
                "index 29df3a7888f..c1d3ab2bf51 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/BaseGlobalOrdinalScorer.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/BaseGlobalOrdinalScorer.java",
                "@@ -45,3 +45,3 @@ abstract class BaseGlobalOrdinalScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/FakeScorer.java b/lucene/join/src/java/org/apache/lucene/search/join/FakeScorer.java",
                "index 7ad69fa0ab3..125ce88922d 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/FakeScorer.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/FakeScorer.java",
                "@@ -48,3 +48,3 @@ class FakeScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/ParentChildrenBlockJoinQuery.java b/lucene/join/src/java/org/apache/lucene/search/join/ParentChildrenBlockJoinQuery.java",
                "index bc65e8cfa8f..7ce1c294592 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/ParentChildrenBlockJoinQuery.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/ParentChildrenBlockJoinQuery.java",
                "@@ -186,3 +186,3 @@ public class ParentChildrenBlockJoinQuery extends Query {",
                "           @Override",
                "-          public float maxScore() {",
                "+          public float getMaxScore(int upTo) throws IOException {",
                "             return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/PointInSetIncludingScoreQuery.java b/lucene/join/src/java/org/apache/lucene/search/join/PointInSetIncludingScoreQuery.java",
                "index 57389abefaa..02b7e86d168 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/PointInSetIncludingScoreQuery.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/PointInSetIncludingScoreQuery.java",
                "@@ -172,3 +172,3 @@ abstract class PointInSetIncludingScoreQuery extends Query {",
                "           @Override",
                "-          public float maxScore() {",
                "+          public float getMaxScore(int upTo) throws IOException {",
                "             return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.java b/lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.java",
                "index 98bf5b39b9e..43ddd528393 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.java",
                "@@ -188,3 +188,3 @@ class TermsIncludingScoreQuery extends Query {",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.java b/lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.java",
                "index 8c75274f4d0..9de319b962f 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.java",
                "@@ -283,4 +283,4 @@ public class ToChildBlockJoinQuery extends Query {",
                "     @Override",
                "-    public float maxScore() {",
                "-      return parentScorer.maxScore();",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "+      return parentScorer.getMaxScore(DocIdSetIterator.NO_MORE_DOCS);",
                "     }",
                "diff --git a/lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java b/lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java",
                "index 6b4acff9332..9f2bd905506 100644",
                "--- a/lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java",
                "+++ b/lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java",
                "@@ -289,3 +289,3 @@ public class ToParentBlockJoinQuery extends Query {",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       switch(scoreMode) {",
                "@@ -293,3 +293,3 @@ public class ToParentBlockJoinQuery extends Query {",
                "         case Min:",
                "-          return childScorer.maxScore();",
                "+          return childScorer.getMaxScore(DocIdSetIterator.NO_MORE_DOCS);",
                "         default:",
                "diff --git a/lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java b/lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java",
                "index da41246b1f6..f996306a72d 100644",
                "--- a/lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java",
                "+++ b/lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java",
                "@@ -127,3 +127,3 @@ public class FunctionQuery extends Query {",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/queries/src/java/org/apache/lucene/queries/function/FunctionScoreQuery.java b/lucene/queries/src/java/org/apache/lucene/queries/function/FunctionScoreQuery.java",
                "index 09a592b61fe..0d39e8b2589 100644",
                "--- a/lucene/queries/src/java/org/apache/lucene/queries/function/FunctionScoreQuery.java",
                "+++ b/lucene/queries/src/java/org/apache/lucene/queries/function/FunctionScoreQuery.java",
                "@@ -211,3 +211,3 @@ public final class FunctionScoreQuery extends Query {",
                "         @Override",
                "-        public float maxScore() {",
                "+        public float getMaxScore(int upTo) throws IOException {",
                "           return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.java b/lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.java",
                "index 4b8111e818e..5290dcc444d 100644",
                "--- a/lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.java",
                "+++ b/lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.java",
                "@@ -109,3 +109,3 @@ public abstract class ValueSource {",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/queries/src/java/org/apache/lucene/queries/function/ValueSourceScorer.java b/lucene/queries/src/java/org/apache/lucene/queries/function/ValueSourceScorer.java",
                "index 9e8534be9f0..509f4544878 100644",
                "--- a/lucene/queries/src/java/org/apache/lucene/queries/function/ValueSourceScorer.java",
                "+++ b/lucene/queries/src/java/org/apache/lucene/queries/function/ValueSourceScorer.java",
                "@@ -92,3 +92,3 @@ public abstract class ValueSourceScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/sandbox/src/java/org/apache/lucene/search/CoveringScorer.java b/lucene/sandbox/src/java/org/apache/lucene/search/CoveringScorer.java",
                "index eb3255e1612..a9743be88ce 100644",
                "--- a/lucene/sandbox/src/java/org/apache/lucene/search/CoveringScorer.java",
                "+++ b/lucene/sandbox/src/java/org/apache/lucene/search/CoveringScorer.java",
                "@@ -214,3 +214,3 @@ final class CoveringScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     // TODO: implement but beware of floating-point errors",
                "diff --git a/lucene/sandbox/src/java/org/apache/lucene/search/TermAutomatonScorer.java b/lucene/sandbox/src/java/org/apache/lucene/search/TermAutomatonScorer.java",
                "index 6094c010bde..f1ab32f8314 100644",
                "--- a/lucene/sandbox/src/java/org/apache/lucene/search/TermAutomatonScorer.java",
                "+++ b/lucene/sandbox/src/java/org/apache/lucene/search/TermAutomatonScorer.java",
                "@@ -362,3 +362,3 @@ class TermAutomatonScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return docScorer.maxScore();",
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer.java b/lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer.java",
                "index b6062a2085b..80cd4da7cf0 100644",
                "--- a/lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer.java",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer.java",
                "@@ -26,3 +26,3 @@ public class AssertingScorer extends Scorer {",
                "-  static enum IteratorState { START, APPROXIMATING, ITERATING, FINISHED };",
                "+  static enum IteratorState { APPROXIMATING, ITERATING, SHALLOW_ADVANCING, FINISHED };",
                "@@ -39,5 +39,6 @@ public class AssertingScorer extends Scorer {",
                "-  IteratorState state = IteratorState.START;",
                "+  IteratorState state = IteratorState.ITERATING;",
                "   int doc;",
                "   float minCompetitiveScore = 0;",
                "+  int lastShallowTarget;",
                "@@ -62,3 +63,3 @@ public class AssertingScorer extends Scorer {",
                "     default:",
                "-      return state != IteratorState.APPROXIMATING; // Matches must be confirmed before calling freq() or score()",
                "+      return state == IteratorState.ITERATING;",
                "     }",
                "@@ -76,5 +77,16 @@ public class AssertingScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "-    float maxScore = in.maxScore();",
                "-    assert Float.isNaN(maxScore) == false;",
                "+  public int advanceShallow(int target) throws IOException {",
                "+    assert target >= lastShallowTarget : \"called on decreasing targets: target = \" + target + \" < last target = \" + lastShallowTarget;",
                "+    assert target >= docID() : \"target = \" + target + \" < docID = \" + docID();",
                "+    int upTo = in.advanceShallow(target);",
                "+    assert upTo >= target : \"upTo = \" + upTo + \" < target = \" + target;",
                "+    lastShallowTarget = target;",
                "+    state = target != doc ? IteratorState.SHALLOW_ADVANCING : state;",
                "+    return upTo;",
                "+  }",
                "+",
                "+  @Override",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "+    assert upTo >= lastShallowTarget : \"uTo = \" + upTo + \" < last target = \" + lastShallowTarget;",
                "+    float maxScore = in.getMaxScore(upTo);",
                "     return maxScore;",
                "@@ -85,6 +97,6 @@ public class AssertingScorer extends Scorer {",
                "     assert scoreMode.needsScores();",
                "-    assert iterating();",
                "+    assert iterating() : state;",
                "     final float score = in.score();",
                "     assert !Float.isNaN(score) : \"NaN score for in=\"+in;",
                "-    assert score <= maxScore();",
                "+    assert score <= getMaxScore(DocIdSetIterator.NO_MORE_DOCS);",
                "     assert Float.compare(score, 0f) >= 0 : score;",
                "@@ -127,2 +139,3 @@ public class AssertingScorer extends Scorer {",
                "         assert state != IteratorState.FINISHED : \"nextDoc() called after NO_MORE_DOCS\";",
                "+        assert docID() + 1 >= lastShallowTarget;",
                "         int nextDoc = in.nextDoc();",
                "@@ -143,2 +156,3 @@ public class AssertingScorer extends Scorer {",
                "         assert target > doc : \"target must be > docID(), got \" + target + \" <= \" + doc;",
                "+        assert target >= lastShallowTarget;",
                "         int advanced = in.advance(target);",
                "@@ -180,2 +194,3 @@ public class AssertingScorer extends Scorer {",
                "         assert state != IteratorState.FINISHED : \"advance() called after NO_MORE_DOCS\";",
                "+        assert docID() + 1 >= lastShallowTarget;",
                "         final int nextDoc = inApproximation.nextDoc();",
                "@@ -195,2 +210,3 @@ public class AssertingScorer extends Scorer {",
                "         assert target > doc : \"target must be > docID(), got \" + target + \" <= \" + doc;",
                "+        assert target >= lastShallowTarget;",
                "         final int advanced = inApproximation.advance(target);",
                "@@ -215,3 +231,3 @@ public class AssertingScorer extends Scorer {",
                "       public boolean matches() throws IOException {",
                "-        assert state == IteratorState.APPROXIMATING;",
                "+        assert state == IteratorState.APPROXIMATING : state;",
                "         final boolean matches = in.matches();",
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/search/BlockScoreQueryWrapper.java b/lucene/test-framework/src/java/org/apache/lucene/search/BlockScoreQueryWrapper.java",
                "new file mode 100644",
                "index 00000000000..3b9a740a448",
                "--- /dev/null",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/search/BlockScoreQueryWrapper.java",
                "@@ -0,0 +1,213 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.apache.lucene.search;",
                "+",
                "+import java.io.IOException;",
                "+import java.util.Arrays;",
                "+import java.util.Objects;",
                "+import java.util.Set;",
                "+",
                "+import org.apache.lucene.index.IndexReader;",
                "+import org.apache.lucene.index.LeafReaderContext;",
                "+import org.apache.lucene.index.Term;",
                "+import org.apache.lucene.util.ArrayUtil;",
                "+",
                "+/**",
                "+ * Query wrapper that reduces the size of max-score blocks to more easily detect",
                "+ * problems with the max-score logic.",
                "+ */",
                "+public final class BlockScoreQueryWrapper extends Query {",
                "+",
                "+  private final Query query;",
                "+  private final int blockLength;",
                "+",
                "+  /** Sole constructor. */",
                "+  public BlockScoreQueryWrapper(Query query, int blockLength) {",
                "+    this.query = Objects.requireNonNull(query);",
                "+    this.blockLength = blockLength;",
                "+  }",
                "+",
                "+  @Override",
                "+  public String toString(String field) {",
                "+    return query.toString(field);",
                "+  }",
                "+",
                "+  @Override",
                "+  public boolean equals(Object obj) {",
                "+    if (obj == null || getClass() != obj.getClass()) {",
                "+      return false;",
                "+    }",
                "+    BlockScoreQueryWrapper that = (BlockScoreQueryWrapper) obj;",
                "+    return Objects.equals(query, that.query) && blockLength == that.blockLength;",
                "+  }",
                "+",
                "+  @Override",
                "+  public int hashCode() {",
                "+    int h = classHash();",
                "+    h = 31 * h + query.hashCode();",
                "+    h = 31 * h + blockLength;",
                "+    return h;",
                "+  }",
                "+",
                "+  @Override",
                "+  public Query rewrite(IndexReader reader) throws IOException {",
                "+    final Query rewritten = query.rewrite(reader);",
                "+    if (rewritten != query) {",
                "+      return new BlockScoreQueryWrapper(rewritten, blockLength);",
                "+    }",
                "+    return super.rewrite(reader);",
                "+  }",
                "+",
                "+  @Override",
                "+  public Weight createWeight(IndexSearcher searcher, ScoreMode scoreMode, float boost) throws IOException {",
                "+    final Weight inWeight = query.createWeight(searcher, scoreMode, boost);",
                "+    if (scoreMode.needsScores() == false) {",
                "+      return inWeight;",
                "+    }",
                "+    return new Weight(this) {",
                "+      @Override",
                "+      public boolean isCacheable(LeafReaderContext ctx) {",
                "+        return inWeight.isCacheable(ctx);",
                "+      }",
                "+",
                "+      @Override",
                "+      public Scorer scorer(LeafReaderContext context) throws IOException {",
                "+        Scorer inScorer = inWeight.scorer(context);",
                "+        if (inScorer == null) {",
                "+          return null;",
                "+        }",
                "+",
                "+        int[] tmpDocs = new int[2];",
                "+        float[] tmpScores = new float[2];",
                "+        tmpDocs[0] = -1;",
                "+        DocIdSetIterator it = inScorer.iterator();",
                "+        int i = 1;",
                "+        for (int doc = it.nextDoc(); ; doc = it.nextDoc()) {",
                "+          if (i == tmpDocs.length) {",
                "+            tmpDocs = ArrayUtil.grow(tmpDocs);",
                "+            tmpScores = Arrays.copyOf(tmpScores, tmpDocs.length);",
                "+          }",
                "+          tmpDocs[i] = doc;",
                "+          if (doc == DocIdSetIterator.NO_MORE_DOCS) {",
                "+            i++;",
                "+            break;",
                "+          }",
                "+          tmpScores[i] = inScorer.score();",
                "+          i++;",
                "+        }",
                "+        final int[] docs = Arrays.copyOf(tmpDocs, i);",
                "+        final float[] scores = Arrays.copyOf(tmpScores, i);",
                "+",
                "+        return new Scorer(inWeight) {",
                "+",
                "+          int i = 0;",
                "+",
                "+          @Override",
                "+          public int docID() {",
                "+            return docs[i];",
                "+          }",
                "+",
                "+          @Override",
                "+          public float score() throws IOException {",
                "+            return scores[i];",
                "+          }",
                "+",
                "+          @Override",
                "+          public DocIdSetIterator iterator() {",
                "+            return new DocIdSetIterator() {",
                "+",
                "+              @Override",
                "+              public int nextDoc() throws IOException {",
                "+                assert docs[i] != NO_MORE_DOCS;",
                "+                return docs[++i];",
                "+              }",
                "+",
                "+              @Override",
                "+              public int docID() {",
                "+                return docs[i];",
                "+              }",
                "+",
                "+              @Override",
                "+              public long cost() {",
                "+                return docs.length - 2;",
                "+              }",
                "+",
                "+              @Override",
                "+              public int advance(int target) throws IOException {",
                "+                i = Arrays.binarySearch(docs, target);",
                "+                if (i < 0) {",
                "+                  i = -1 - i;",
                "+                }",
                "+                assert docs[i] >= target;",
                "+                return docs[i];",
                "+              }",
                "+            };",
                "+          }",
                "+",
                "+          private int startOfBlock(int target) {",
                "+            int i = Arrays.binarySearch(docs, target);",
                "+            if (i < 0) {",
                "+              i = -1 - i;",
                "+            }",
                "+            return i - i % blockLength;",
                "+          }",
                "+",
                "+          private int endOfBlock(int target) {",
                "+            return Math.min(startOfBlock(target) + blockLength, docs.length - 1);",
                "+          }",
                "+",
                "+          int lastShallowTarget = -1;",
                "+",
                "+          @Override",
                "+          public int advanceShallow(int target) throws IOException {",
                "+            lastShallowTarget = target;",
                "+            if (target == DocIdSetIterator.NO_MORE_DOCS) {",
                "+              return DocIdSetIterator.NO_MORE_DOCS;",
                "+            }",
                "+            return docs[endOfBlock(target)] - 1;",
                "+          }",
                "+",
                "+          @Override",
                "+          public float getMaxScore(int upTo) throws IOException {",
                "+            float max = 0;",
                "+            for (int j = startOfBlock(Math.max(docs[i], lastShallowTarget)); ; ++j) {",
                "+              if (docs[j] > upTo) {",
                "+                break;",
                "+              }",
                "+              max = Math.max(max, scores[j]);",
                "+              if (j == docs.length - 1) {",
                "+                break;",
                "+              }",
                "+            }",
                "+            return max;",
                "+          }",
                "+",
                "+        };",
                "+      }",
                "+",
                "+      @Override",
                "+      public void extractTerms(Set<Term> terms) {",
                "+        inWeight.extractTerms(terms);",
                "+      }",
                "+",
                "+      @Override",
                "+      public Explanation explain(LeafReaderContext context, int doc) throws IOException {",
                "+        return inWeight.explain(context, doc);",
                "+      }",
                "+    };",
                "+  }",
                "+}",
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/search/BulkScorerWrapperScorer.java b/lucene/test-framework/src/java/org/apache/lucene/search/BulkScorerWrapperScorer.java",
                "index db1de526d8c..9206b0484d4 100644",
                "--- a/lucene/test-framework/src/java/org/apache/lucene/search/BulkScorerWrapperScorer.java",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/search/BulkScorerWrapperScorer.java",
                "@@ -72,3 +72,3 @@ public class BulkScorerWrapperScorer extends Scorer {",
                "   @Override",
                "-  public float maxScore() {",
                "+  public float getMaxScore(int upTo) throws IOException {",
                "     return Float.POSITIVE_INFINITY;",
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/search/CheckHits.java b/lucene/test-framework/src/java/org/apache/lucene/search/CheckHits.java",
                "index 9c8943d8044..8d8b60b8827 100644",
                "--- a/lucene/test-framework/src/java/org/apache/lucene/search/CheckHits.java",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/search/CheckHits.java",
                "@@ -18,2 +18,5 @@ package org.apache.lucene.search;",
                "+import static org.junit.Assert.assertEquals;",
                "+import static org.junit.Assert.assertTrue;",
                "+",
                " import java.io.IOException;",
                "@@ -522,4 +525,148 @@ public class CheckHits {",
                "-}",
                "+  public static void checkTopScores(Random random, Query query, IndexSearcher searcher) throws IOException {",
                "+    // Check it computed the top hits correctly",
                "+    doCheckTopScores(query, searcher, 1);",
                "+    doCheckTopScores(query, searcher, 10);",
                "+",
                "+    // Now check that the exposed max scores and block boundaries are valid",
                "+    doCheckMaxScores(random, query, searcher);",
                "+  }",
                "+",
                "+  private static void doCheckTopScores(Query query, IndexSearcher searcher, int numHits) throws IOException {",
                "+    TopScoreDocCollector collector1 = TopScoreDocCollector.create(numHits, null, true); // COMPLETE",
                "+    TopScoreDocCollector collector2 = TopScoreDocCollector.create(numHits, null, false); // TOP_SCORES",
                "+    searcher.search(query, collector1);",
                "+    searcher.search(query, collector2);",
                "+    checkEqual(query, collector1.topDocs().scoreDocs, collector2.topDocs().scoreDocs);",
                "+  }",
                "+",
                "+  private static void doCheckMaxScores(Random random, Query query, IndexSearcher searcher) throws IOException {",
                "+    Weight w1 = searcher.createNormalizedWeight(query, ScoreMode.COMPLETE);",
                "+    Weight w2 = searcher.createNormalizedWeight(query, ScoreMode.TOP_SCORES);",
                "+",
                "+    // Check boundaries and max scores when iterating all matches",
                "+    for (LeafReaderContext ctx : searcher.getIndexReader().leaves()) {",
                "+      Scorer s1 = w1.scorer(ctx);",
                "+      Scorer s2 = w2.scorer(ctx);",
                "+      if (s1 == null) {",
                "+        Assert.assertTrue(s2 == null || s2.iterator().nextDoc() == DocIdSetIterator.NO_MORE_DOCS);",
                "+        continue;",
                "+      }",
                "+      TwoPhaseIterator twoPhase1 = s1.twoPhaseIterator();",
                "+      TwoPhaseIterator twoPhase2 = s2.twoPhaseIterator();",
                "+      DocIdSetIterator approx1 = twoPhase1 == null ? s1.iterator() : twoPhase1.approximation;",
                "+      DocIdSetIterator approx2 = twoPhase2 == null ? s2.iterator() : twoPhase2.approximation;",
                "+      int upTo = -1;",
                "+      float maxScore = 0;",
                "+      float minScore = 0;",
                "+      for (int doc2 = approx2.nextDoc(); ; doc2 = approx2.nextDoc()) {",
                "+        int doc1;",
                "+        for (doc1 = approx1.nextDoc(); doc1 < doc2; doc1 = approx1.nextDoc()) {",
                "+          if (twoPhase1 == null || twoPhase1.matches()) {",
                "+            Assert.assertTrue(s1.score() < minScore);",
                "+          }",
                "+        }",
                "+        Assert.assertEquals(doc1, doc2);",
                "+        if (doc2 == DocIdSetIterator.NO_MORE_DOCS) {",
                "+          break;",
                "+        }",
                "+",
                "+        if (doc2 > upTo) {",
                "+          upTo = s2.advanceShallow(doc2);",
                "+          Assert.assertTrue(upTo >= doc2);",
                "+          maxScore = s2.getMaxScore(upTo);",
                "+        }",
                "+",
                "+        if (twoPhase2 == null || twoPhase2.matches()) {",
                "+          Assert.assertTrue(twoPhase1 == null || twoPhase1.matches());",
                "+          float score = s2.score();",
                "+          Assert.assertEquals(s1.score(), score);",
                "+          Assert.assertTrue(score <= maxScore);",
                "+",
                "+          if (score >= minScore && random.nextInt(10) == 0) {",
                "+            // On some scorers, changing the min score changes the way that docs are iterated",
                "+            minScore = score;",
                "+            s2.setMinCompetitiveScore(minScore);",
                "+          }",
                "+        }",
                "+      }",
                "+    }",
                "+",
                "+    // Now check advancing",
                "+    for (LeafReaderContext ctx : searcher.getIndexReader().leaves()) {",
                "+      Scorer s1 = w1.scorer(ctx);",
                "+      Scorer s2 = w2.scorer(ctx);",
                "+      if (s1 == null) {",
                "+        Assert.assertTrue(s2 == null || s2.iterator().nextDoc() == DocIdSetIterator.NO_MORE_DOCS);",
                "+        continue;",
                "+      }",
                "+      TwoPhaseIterator twoPhase1 = s1.twoPhaseIterator();",
                "+      TwoPhaseIterator twoPhase2 = s2.twoPhaseIterator();",
                "+      DocIdSetIterator approx1 = twoPhase1 == null ? s1.iterator() : twoPhase1.approximation;",
                "+      DocIdSetIterator approx2 = twoPhase2 == null ? s2.iterator() : twoPhase2.approximation;",
                "+",
                "+      int upTo = -1;",
                "+      float minScore = 0;",
                "+      float maxScore = 0;",
                "+      while (true) {",
                "+        int doc2 = s2.docID();",
                "+        boolean advance;",
                "+        int target;",
                "+        if (random.nextBoolean()) {",
                "+          advance = false;",
                "+          target = doc2 + 1;",
                "+        } else {",
                "+          advance = true;",
                "+          int delta = Math.min(1 + random.nextInt(512), DocIdSetIterator.NO_MORE_DOCS - doc2);",
                "+          target = s2.docID() + delta;",
                "+        }",
                "+",
                "+        if (target > upTo && random.nextBoolean()) {",
                "+          int delta = Math.min(random.nextInt(512), DocIdSetIterator.NO_MORE_DOCS - target);",
                "+          upTo = target + delta;",
                "+          int m = s2.advanceShallow(target);",
                "+          assertTrue(m >= target);",
                "+          maxScore = s2.getMaxScore(upTo);",
                "+        }",
                "+        if (advance) {",
                "+          doc2 = approx2.advance(target);",
                "+        } else {",
                "+          doc2 = approx2.nextDoc();",
                "+        }",
                "+",
                "+        int doc1;",
                "+        for (doc1 = approx1.advance(target); doc1 < doc2; doc1 = approx1.nextDoc()) {",
                "+          if (twoPhase1 == null || twoPhase1.matches()) {",
                "+            Assert.assertTrue(s1.score() < minScore);",
                "+          }",
                "+        }",
                "+        assertEquals(doc1, doc2);",
                "+",
                "+        if (doc2 == DocIdSetIterator.NO_MORE_DOCS) {",
                "+          break;",
                "+        }",
                "+        if (twoPhase2 == null || twoPhase2.matches()) {",
                "+          Assert.assertTrue(twoPhase1 == null || twoPhase1.matches());",
                "+          float score = s2.score();",
                "+          Assert.assertEquals(s1.score(), score);",
                "+",
                "+          if (doc2 > upTo) {",
                "+            upTo = s2.advanceShallow(doc2);",
                "+            Assert.assertTrue(upTo >= doc2);",
                "+            maxScore = s2.getMaxScore(upTo);",
                "+          }",
                "+",
                "+          Assert.assertTrue(score <= maxScore);",
                "+",
                "+          if (score >= minScore && random.nextInt(10) == 0) {",
                "+            // On some scorers, changing the min score changes the way that docs are iterated",
                "+            minScore = score;",
                "+            s2.setMinCompetitiveScore(minScore);",
                "+          }",
                "+        }",
                "+      }",
                "+    }",
                "+  }",
                "+}",
                "diff --git a/lucene/test-framework/src/java/org/apache/lucene/search/RandomApproximationQuery.java b/lucene/test-framework/src/java/org/apache/lucene/search/RandomApproximationQuery.java",
                "index e88afa747d0..a050b50401c 100644",
                "--- a/lucene/test-framework/src/java/org/apache/lucene/search/RandomApproximationQuery.java",
                "+++ b/lucene/test-framework/src/java/org/apache/lucene/search/RandomApproximationQuery.java",
                "@@ -111,4 +111,9 @@ public class RandomApproximationQuery extends Query {",
                "     @Override",
                "-    public float maxScore() {",
                "-      return scorer.maxScore();",
                "+    public int advanceShallow(int target) throws IOException {",
                "+      return scorer.advanceShallow(target);",
                "+    }",
                "+",
                "+    @Override",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "+      return scorer.getMaxScore(upTo);",
                "     }",
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/LTRScoringQuery.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/LTRScoringQuery.java",
                "index cf564bba8ad..c143d81f227 100644",
                "--- a/solr/contrib/ltr/src/java/org/apache/solr/ltr/LTRScoringQuery.java",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/LTRScoringQuery.java",
                "@@ -525,3 +525,3 @@ public class LTRScoringQuery extends Query {",
                "       @Override",
                "-      public float maxScore() {",
                "+      public float getMaxScore(int upTo) throws IOException {",
                "         return Float.POSITIVE_INFINITY;",
                "@@ -584,3 +584,3 @@ public class LTRScoringQuery extends Query {",
                "         @Override",
                "-        public float maxScore() {",
                "+        public float getMaxScore(int upTo) throws IOException {",
                "           return Float.POSITIVE_INFINITY;",
                "@@ -671,3 +671,3 @@ public class LTRScoringQuery extends Query {",
                "         @Override",
                "-        public float maxScore() {",
                "+        public float getMaxScore(int upTo) throws IOException {",
                "           return Float.POSITIVE_INFINITY;",
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/Feature.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/Feature.java",
                "index 026f760bf98..066d2812501 100644",
                "--- a/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/Feature.java",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/Feature.java",
                "@@ -330,3 +330,3 @@ public abstract class Feature extends Query {",
                "       @Override",
                "-      public float maxScore() {",
                "+      public float getMaxScore(int upTo) throws IOException {",
                "         return constScore;",
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/FieldLengthFeature.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/FieldLengthFeature.java",
                "index f8b544fab5b..b2fc1548913 100644",
                "--- a/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/FieldLengthFeature.java",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/FieldLengthFeature.java",
                "@@ -149,3 +149,3 @@ public class FieldLengthFeature extends Feature {",
                "       @Override",
                "-      public float maxScore() {",
                "+      public float getMaxScore(int upTo) throws IOException {",
                "         return Float.POSITIVE_INFINITY;",
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/FieldValueFeature.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/FieldValueFeature.java",
                "index d9e7f02c73f..78cdbaa7f98 100644",
                "--- a/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/FieldValueFeature.java",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/FieldValueFeature.java",
                "@@ -144,3 +144,3 @@ public class FieldValueFeature extends Feature {",
                "       @Override",
                "-      public float maxScore() {",
                "+      public float getMaxScore(int upTo) throws IOException {",
                "         return Float.POSITIVE_INFINITY;",
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.java",
                "index d351a046edb..b538b8663d9 100644",
                "--- a/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.java",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.java",
                "@@ -111,3 +111,3 @@ public class OriginalScoreFeature extends Feature {",
                "       @Override",
                "-      public float maxScore() {",
                "+      public float getMaxScore(int upTo) throws IOException {",
                "         return Float.POSITIVE_INFINITY;",
                "diff --git a/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/SolrFeature.java b/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/SolrFeature.java",
                "index b616bd5aa02..612085dd979 100644",
                "--- a/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/SolrFeature.java",
                "+++ b/solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/SolrFeature.java",
                "@@ -290,3 +290,3 @@ public class SolrFeature extends Feature {",
                "       @Override",
                "-      public float maxScore() {",
                "+      public float getMaxScore(int upTo) throws IOException {",
                "         return Float.POSITIVE_INFINITY;",
                "diff --git a/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java b/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java",
                "index 23855332987..1a34b583d99 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java",
                "@@ -1483,3 +1483,3 @@ public class QueryComponent extends SearchComponent",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       return Float.POSITIVE_INFINITY;",
                "diff --git a/solr/core/src/java/org/apache/solr/schema/LatLonType.java b/solr/core/src/java/org/apache/solr/schema/LatLonType.java",
                "index 8cf86b8fff8..9f9dcd18dfb 100644",
                "--- a/solr/core/src/java/org/apache/solr/schema/LatLonType.java",
                "+++ b/solr/core/src/java/org/apache/solr/schema/LatLonType.java",
                "@@ -488,3 +488,3 @@ class SpatialDistanceQuery extends ExtendedQueryBase implements PostFilter {",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       return Float.POSITIVE_INFINITY;",
                "diff --git a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "index 9af1c8957dc..be8741c0568 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "@@ -454,3 +454,3 @@ public class CollapsingQParserPlugin extends QParserPlugin {",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       return Float.POSITIVE_INFINITY;",
                "diff --git a/solr/core/src/java/org/apache/solr/search/join/GraphQuery.java b/solr/core/src/java/org/apache/solr/search/join/GraphQuery.java",
                "index 5842e92affb..4402a266747 100644",
                "--- a/solr/core/src/java/org/apache/solr/search/join/GraphQuery.java",
                "+++ b/solr/core/src/java/org/apache/solr/search/join/GraphQuery.java",
                "@@ -309,3 +309,3 @@ public class GraphQuery extends Query {",
                "     @Override",
                "-    public float maxScore() {",
                "+    public float getMaxScore(int upTo) throws IOException {",
                "       return score;"
            ],
            "changed_files": [
                "lucene/core/src/java/org/apache/lucene/index/Sorter.java",
                "lucene/core/src/java/org/apache/lucene/search/BlockMaxConjunctionScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/Boolean2ScorerSupplier.java",
                "lucene/core/src/java/org/apache/lucene/search/CachingCollector.java",
                "lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/ConstantScoreQuery.java",
                "lucene/core/src/java/org/apache/lucene/search/ConstantScoreScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/DisiWrapper.java",
                "lucene/core/src/java/org/apache/lucene/search/DisjunctionMaxScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/DisjunctionSumScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/ExactPhraseScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/FakeScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/MaxScoreSumPropagator.java",
                "lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/ReqExclScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/ReqOptSumScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/ScoreCachingWrappingScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/Scorer.java",
                "lucene/core/src/java/org/apache/lucene/search/SloppyPhraseScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/SynonymQuery.java",
                "lucene/core/src/java/org/apache/lucene/search/TermScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/WANDScorer.java",
                "lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer.java",
                "lucene/expressions/src/java/org/apache/lucene/expressions/FakeScorer.java",
                "lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysScorer.java",
                "lucene/grouping/src/java/org/apache/lucene/search/grouping/FakeScorer.java",
                "lucene/join/src/java/org/apache/lucene/search/join/BaseGlobalOrdinalScorer.java",
                "lucene/join/src/java/org/apache/lucene/search/join/FakeScorer.java",
                "lucene/join/src/java/org/apache/lucene/search/join/ParentChildrenBlockJoinQuery.java",
                "lucene/join/src/java/org/apache/lucene/search/join/PointInSetIncludingScoreQuery.java",
                "lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.java",
                "lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.java",
                "lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java",
                "lucene/queries/src/java/org/apache/lucene/queries/function/FunctionQuery.java",
                "lucene/queries/src/java/org/apache/lucene/queries/function/FunctionScoreQuery.java",
                "lucene/queries/src/java/org/apache/lucene/queries/function/ValueSource.java",
                "lucene/queries/src/java/org/apache/lucene/queries/function/ValueSourceScorer.java",
                "lucene/sandbox/src/java/org/apache/lucene/search/CoveringScorer.java",
                "lucene/sandbox/src/java/org/apache/lucene/search/TermAutomatonScorer.java",
                "lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer.java",
                "lucene/test-framework/src/java/org/apache/lucene/search/BlockScoreQueryWrapper.java",
                "lucene/test-framework/src/java/org/apache/lucene/search/BulkScorerWrapperScorer.java",
                "lucene/test-framework/src/java/org/apache/lucene/search/CheckHits.java",
                "lucene/test-framework/src/java/org/apache/lucene/search/RandomApproximationQuery.java",
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/LTRScoringQuery.java",
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/Feature.java",
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/FieldLengthFeature.java",
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/FieldValueFeature.java",
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/OriginalScoreFeature.java",
                "solr/contrib/ltr/src/java/org/apache/solr/ltr/feature/SolrFeature.java",
                "solr/core/src/java/org/apache/solr/handler/component/QueryComponent.java",
                "solr/core/src/java/org/apache/solr/schema/LatLonType.java",
                "solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.java",
                "solr/core/src/java/org/apache/solr/search/join/GraphQuery.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8135": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8135",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bad96329a39855ebc5ecbcea5897c53ece18f46b",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519958465,
            "hunks": 1,
            "message": "SOLR-11503: add missing import",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/core/CoreContainer.java b/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "index 3b6710d7d39..bc2fda04de0 100644",
                "--- a/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "+++ b/solr/core/src/java/org/apache/solr/core/CoreContainer.java",
                "@@ -50,2 +50,3 @@ import org.apache.solr.common.SolrException;",
                " import org.apache.solr.common.SolrException.ErrorCode;",
                "+import org.apache.solr.common.cloud.DocCollection;",
                " import org.apache.solr.common.cloud.Replica;"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/core/CoreContainer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11503": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/6.6.3",
                "releases/lucene-solr/6.6.4",
                "releases/lucene-solr/6.6.5",
                "releases/lucene-solr/6.6.6"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11503",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e3032dd3fcc28570c5f9d2dab4961b5b07555912",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519982947,
            "hunks": 15,
            "message": "LUCENE-8126: New spatial prefix tree (SPT) based on google S2 geometry",
            "diff": [
                "diff --git a/lucene/ivy-versions.properties b/lucene/ivy-versions.properties",
                "index 5ab36ddfa2c..fc8ea7d2ac2 100644",
                "--- a/lucene/ivy-versions.properties",
                "+++ b/lucene/ivy-versions.properties",
                "@@ -72,3 +72,5 @@ io.netty.netty-all.version = 4.0.36.Final",
                "-/javax.activation/activation = 1.1.1",
                "+/io.sgr/s2-geometry-library-java = 1.0.0",
                "+",
                "+javax.activation/activation = 1.1.1",
                " /javax.servlet/javax.servlet-api = 3.1.0",
                "diff --git a/lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1 b/lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1",
                "new file mode 100644",
                "index 00000000000..2cfb3a8a6de",
                "--- /dev/null",
                "+++ b/lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1",
                "@@ -0,0 +1 @@",
                "+f95b25589b40b5b0965deb592445073ff3efa299",
                "\\ No newline at end of file",
                "diff --git a/lucene/spatial-extras/ivy.xml b/lucene/spatial-extras/ivy.xml",
                "index df675031d67..c3d982f8cc7 100644",
                "--- a/lucene/spatial-extras/ivy.xml",
                "+++ b/lucene/spatial-extras/ivy.xml",
                "@@ -27,2 +27,4 @@",
                "+    <dependency org=\"io.sgr\" name=\"s2-geometry-library-java\" rev=\"${/io.sgr/s2-geometry-library-java}\" conf=\"compile\"/>",
                "+",
                "     <dependency org=\"org.locationtech.spatial4j\" name=\"spatial4j\" rev=\"${/org.locationtech.spatial4j/spatial4j}\" conf=\"test\">",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTree.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTree.java",
                "new file mode 100644",
                "index 00000000000..f77c578e553",
                "--- /dev/null",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTree.java",
                "@@ -0,0 +1,157 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial.prefix.tree;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+",
                "+import com.google.common.geometry.S2CellId;",
                "+import com.google.common.geometry.S2LatLng;",
                "+import com.google.common.geometry.S2Projections;",
                "+import org.apache.lucene.util.BytesRef;",
                "+import org.locationtech.spatial4j.context.SpatialContext;",
                "+import org.locationtech.spatial4j.distance.DistanceUtils;",
                "+import org.locationtech.spatial4j.shape.Point;",
                "+import org.locationtech.spatial4j.shape.Shape;",
                "+",
                "+/**",
                "+ * Spatial prefix tree for <a href=\"https://s2geometry.io/\">S2 Geometry</a>. Shape factories",
                "+ * for the given {@link SpatialContext} must implement the interface {@link S2ShapeFactory}.",
                "+ *",
                "+ * The tree can be configured on how it divided itself by providing an arity. The default arity is 1",
                "+ * which divided every sub-cell in 4 (except the first level that is always divided by 6) . Arity 2",
                "+ * divides sub-cells in 16 and arity 3 in 64 sub-cells.",
                "+ *",
                "+ * @lucene.experimental",
                "+ */",
                "+public class S2PrefixTree extends SpatialPrefixTree {",
                "+",
                "+",
                "+    /**",
                "+     * Factory for creating {@link S2PrefixTree} instances with useful defaults",
                "+     */",
                "+    protected static class Factory extends SpatialPrefixTreeFactory {",
                "+",
                "+        @Override",
                "+        protected int getLevelForDistance(double degrees) {",
                "+            S2PrefixTree grid = new S2PrefixTree(ctx, S2PrefixTree.getMaxLevels(1));",
                "+            return grid.getLevelForDistance(degrees);",
                "+        }",
                "+",
                "+        @Override",
                "+        protected SpatialPrefixTree newSPT() {",
                "+            return new S2PrefixTree(ctx,",
                "+                maxLevels != null ? maxLevels : S2PrefixTree.getMaxLevels(1));",
                "+        }",
                "+",
                "+    }",
                "+",
                "+    //factory to generate S2 cell shapes",
                "+    protected final S2ShapeFactory s2ShapeFactory;",
                "+    protected final int arity;",
                "+",
                "+    /**",
                "+     * Creates a S2 spatial tree with arity 1.",
                "+     *",
                "+     * @param ctx The provided spatial context. The shape factor of the spatial context",
                "+     *           must implement {@link S2ShapeFactory}",
                "+     * @param maxLevels The provided maximum level for this tree.",
                "+     */",
                "+    public S2PrefixTree(SpatialContext ctx, int maxLevels) {",
                "+        this(ctx, maxLevels, 1);",
                "+    }",
                "+",
                "+    /**",
                "+     * Creates a S2 spatial tree with provided arity.",
                "+     *",
                "+     * @param ctx The provided spatial context. The shape factor of the spatial context",
                "+     *           must implement {@link S2ShapeFactory}",
                "+     * @param maxLevels The provided maximum level for this tree.",
                "+     * @param arity The arity of the tree.",
                "+     */",
                "+    public S2PrefixTree(SpatialContext ctx, int maxLevels, int arity) {",
                "+        super(ctx, maxLevels);",
                "+        if (!(ctx.getShapeFactory() instanceof S2ShapeFactory)) {",
                "+            throw new IllegalArgumentException(\"Spatial context does not support S2 spatial index.\");",
                "+        }",
                "+        this.s2ShapeFactory = (S2ShapeFactory) ctx.getShapeFactory();",
                "+        if (arity <1 || arity > 3) {",
                "+            throw new IllegalArgumentException(\"Invalid value for S2 tree arity. Possible values are 1, 2 or 3. Provided value is \" + arity  + \".\");",
                "+        }",
                "+        this.arity = arity;",
                "+    }",
                "+",
                "+    /**",
                "+     * Get max levels for this spatial tree.",
                "+     *",
                "+     * @param arity The arity of the tree.",
                "+     * @return The maximum number of levels by the provided arity.",
                "+     */",
                "+    public static int getMaxLevels(int arity) {",
                "+        return  S2CellId.MAX_LEVEL/arity + 1;",
                "+    }",
                "+",
                "+    @Override",
                "+    public int getLevelForDistance(double dist) {",
                "+        if (dist == 0){",
                "+            return maxLevels;",
                "+        }",
                "+        int level =  S2Projections.MAX_WIDTH.getMinLevel(dist * DistanceUtils.DEGREES_TO_RADIANS);",
                "+        int roundLevel = level % arity != 0 ? 1 : 0;",
                "+        level = level/arity + roundLevel;",
                "+        return Math.min(maxLevels, level + 1);",
                "+    }",
                "+",
                "+    @Override",
                "+    public double getDistanceForLevel(int level) {",
                "+        if (level == 0) {",
                "+            return 180;",
                "+        }",
                "+        return S2Projections.MAX_WIDTH.getValue(arity * (level - 1)) * DistanceUtils.RADIANS_TO_DEGREES;",
                "+    }",
                "+",
                "+    @Override",
                "+    public Cell getWorldCell() {",
                "+        return  new S2PrefixTreeCell(this, null);",
                "+    }",
                "+",
                "+    @Override",
                "+    public Cell readCell(BytesRef term, Cell scratch) {",
                "+        S2PrefixTreeCell cell = (S2PrefixTreeCell) scratch;",
                "+        if (cell == null) {",
                "+            cell = (S2PrefixTreeCell) getWorldCell();",
                "+        }",
                "+        cell.readCell(this, term);",
                "+        return cell;",
                "+    }",
                "+",
                "+    @Override",
                "+    public CellIterator getTreeCellIterator(Shape shape, int detailLevel) {",
                "+        if (!(shape instanceof Point)) {",
                "+            return  super.getTreeCellIterator(shape, detailLevel);",
                "+        }",
                "+        Point p = (Point) shape;",
                "+        S2CellId id = S2CellId.fromLatLng(S2LatLng.fromDegrees(p.getY(), p.getX())).parent(arity * (detailLevel - 1));",
                "+        List<Cell> cells = new ArrayList<>(detailLevel);",
                "+        for (int i=0; i < detailLevel - 1; i++) {",
                "+            cells.add(new S2PrefixTreeCell(this, id.parent(i * arity)));",
                "+        }",
                "+        cells.add(new S2PrefixTreeCell(this, id));",
                "+        return new FilterCellIterator(cells.iterator(), null);",
                "+    }",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "new file mode 100644",
                "index 00000000000..63a728f5575",
                "--- /dev/null",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "@@ -0,0 +1,289 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial.prefix.tree;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.HashMap;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+import java.util.Objects;",
                "+",
                "+import com.google.common.geometry.S2CellId;",
                "+import org.apache.lucene.util.BytesRef;",
                "+import org.locationtech.spatial4j.shape.Shape;",
                "+import org.locationtech.spatial4j.shape.SpatialRelation;",
                "+",
                "+/**",
                "+ * This class represents a S2 pixel in the RPT.",
                "+ *",
                "+ * @lucene.internal",
                "+ */",
                "+class S2PrefixTreeCell implements Cell {",
                "+",
                "+    //Faces of S2 Geometry",
                "+    private static S2CellId[] FACES = new S2CellId[6];",
                "+",
                "+    static {",
                "+        FACES[0] = S2CellId.fromFacePosLevel(0, 0, 0);",
                "+        FACES[1] = S2CellId.fromFacePosLevel(1, 0, 0);",
                "+        FACES[2] = S2CellId.fromFacePosLevel(2, 0, 0);",
                "+        FACES[3] = S2CellId.fromFacePosLevel(3, 0, 0);",
                "+        FACES[4] = S2CellId.fromFacePosLevel(4, 0, 0);",
                "+        FACES[5] = S2CellId.fromFacePosLevel(5, 0, 0);",
                "+    }",
                "+",
                "+    /*Special character to define a cell leaf*/",
                "+    private static final byte LEAF = '+';",
                "+    /*Tokens are used to serialize cells*/",
                "+    private static final byte[] TOKENS = {'.', '/', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',",
                "+        'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',",
                "+        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'};",
                "+    /*Map containing mapping between tokens and integer values*/",
                "+    private static final Map<Byte, Integer> PIXELS;",
                "+",
                "+    static {",
                "+        PIXELS = new HashMap<>(TOKENS.length);",
                "+        for (int i = 0; i < TOKENS.length; i++) {",
                "+            PIXELS.put(TOKENS[i], i);",
                "+        }",
                "+    }",
                "+",
                "+    S2CellId cellId;",
                "+    int level; //cache level",
                "+    S2PrefixTree tree;",
                "+",
                "+    SpatialRelation shapeRel = null;",
                "+    boolean isLeaf;",
                "+    Shape shape = null;",
                "+",
                "+    S2PrefixTreeCell(S2PrefixTree tree, S2CellId cellId) {",
                "+        this.cellId = cellId;",
                "+        this.tree = tree;",
                "+        setLevel();",
                "+        if (getLevel() == tree.getMaxLevels()) {",
                "+            setLeaf();",
                "+        }",
                "+    }",
                "+",
                "+    void readCell(S2PrefixTree tree, BytesRef ref) {",
                "+        isLeaf = false;",
                "+        shape = null;",
                "+        shapeRel = null;",
                "+        this.tree = tree;",
                "+        cellId = getS2CellIdFromBytesRef(ref);",
                "+        setLevel();",
                "+        if (isLeaf(ref) || getLevel() == tree.getMaxLevels()) {",
                "+            setLeaf();",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public SpatialRelation getShapeRel() {",
                "+        return shapeRel;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void setShapeRel(SpatialRelation rel) {",
                "+        shapeRel = rel;",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean isLeaf() {",
                "+        return isLeaf;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void setLeaf() {",
                "+        isLeaf = true;",
                "+    }",
                "+",
                "+    @Override",
                "+    public BytesRef getTokenBytesWithLeaf(BytesRef result) {",
                "+        result = getTokenBytesNoLeaf(result);",
                "+        //max levels do not have leaf",
                "+        if (isLeaf() && !(getLevel() == tree.getMaxLevels())) {",
                "+            //Add leaf byte",
                "+            result.bytes[result.offset + result.length] = LEAF;",
                "+            result.length++;",
                "+        }",
                "+        return result;",
                "+    }",
                "+",
                "+    @Override",
                "+    public BytesRef getTokenBytesNoLeaf(BytesRef result) {",
                "+        if (result == null) {",
                "+            result = new BytesRef();",
                "+        }",
                "+        getBytesRefFromS2CellId(cellId, result);",
                "+        return result;",
                "+    }",
                "+",
                "+    @Override",
                "+    public int getLevel() {",
                "+        return this.level;",
                "+    }",
                "+",
                "+    /**",
                "+     * Cache level of cell.",
                "+     */",
                "+    private void setLevel() {",
                "+        if (this.cellId == null) {",
                "+            this.level = 0;",
                "+        } else {",
                "+            assert cellId.level() % tree.arity == 0;",
                "+            this.level = (this.cellId.level() / tree.arity) + 1;",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public CellIterator getNextLevelCells(Shape shapeFilter) {",
                "+        S2CellId[] children;",
                "+        if (cellId == null) { // this is the world cell",
                "+            children = FACES;",
                "+        } else {",
                "+            int nChildren = (int) Math.pow(4, tree.arity);",
                "+            children = new S2CellId[nChildren];",
                "+            children[0] = cellId.childBegin(cellId.level() + tree.arity);",
                "+            for (int i = 1; i < nChildren; i++) {",
                "+                children[i] = children[i - 1].next();",
                "+            }",
                "+        }",
                "+        List<Cell> cells = new ArrayList<>(children.length);",
                "+        for (S2CellId pixel : children) {",
                "+            cells.add(new S2PrefixTreeCell(tree, pixel));",
                "+        }",
                "+        return new FilterCellIterator(cells.iterator(), shapeFilter);",
                "+    }",
                "+",
                "+    @Override",
                "+    public Shape getShape() {",
                "+        if (shape == null) {",
                "+            if (cellId == null) { //World cell",
                "+                shape = tree.getSpatialContext().getWorldBounds();",
                "+            } else {",
                "+                shape = tree.s2ShapeFactory.getS2CellShape(cellId);",
                "+            }",
                "+        }",
                "+        return shape;",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean isPrefixOf(Cell c) {",
                "+        if (cellId == null) {",
                "+            return true;",
                "+        }",
                "+        S2PrefixTreeCell cell = (S2PrefixTreeCell) c;",
                "+        return cellId.contains(cell.cellId);",
                "+    }",
                "+",
                "+    @Override",
                "+    public int compareToNoLeaf(Cell fromCell) {",
                "+        if (cellId == null) {",
                "+            return 1;",
                "+        }",
                "+        S2PrefixTreeCell cell = (S2PrefixTreeCell) fromCell;",
                "+        return cellId.compareTo(cell.cellId);",
                "+    }",
                "+",
                "+    /**",
                "+     * Check if a cell is a leaf.",
                "+     *",
                "+     * @param ref The Byteref of the leaf",
                "+     * @return true if it is a leaf, e.g last byte is the special Character.",
                "+     */",
                "+    private boolean isLeaf(BytesRef ref) {",
                "+        return (ref.bytes[ref.offset + ref.length - 1] == LEAF);",
                "+    }",
                "+",
                "+    /**",
                "+     * Get the {@link S2CellId} from the {@link BytesRef} representation.",
                "+     *",
                "+     * @param ref The bytes.",
                "+     * @return the corresponding S2 cell.",
                "+     */",
                "+    private S2CellId getS2CellIdFromBytesRef(BytesRef ref) {",
                "+        int length = ref.length;",
                "+        if (isLeaf(ref)) {",
                "+            length--;",
                "+        }",
                "+        if (length == 0) {",
                "+            return null; //world cell",
                "+        }",
                "+        int face = PIXELS.get(ref.bytes[ref.offset]);",
                "+        S2CellId cellId = FACES[face];",
                "+        long id = cellId.id();",
                "+        for (int i = ref.offset + 1; i < ref.offset + length; i++) {",
                "+            int thisLevel = i - ref.offset;",
                "+            int pos = PIXELS.get(ref.bytes[i]);",
                "+            // first child at level",
                "+            id  = id - (id & -id) + (1L << (2 * (S2CellId.MAX_LEVEL -  thisLevel * tree.arity)));",
                "+            // next until pos",
                "+            id  = id + pos * ((id & -id) << 1);",
                "+        }",
                "+        return new S2CellId(id);",
                "+    }",
                "+",
                "+    /**",
                "+     * Codify a {@link S2CellId} into its {@link BytesRef} representation.",
                "+     *",
                "+     * @param cellId The S2 Cell id to codify.",
                "+     * @param bref   The byteref representation.",
                "+     */",
                "+    private void getBytesRefFromS2CellId(S2CellId cellId, BytesRef bref) {",
                "+        if (cellId == null) {//world cell",
                "+            bref.length = 0;",
                "+            return;",
                "+        }",
                "+        int length = getLevel() + 1;",
                "+        byte[] b = bref.bytes.length >= length ? bref.bytes : new byte[length];",
                "+        b[0] = TOKENS[cellId.face()];",
                "+        for (int i = 1; i < getLevel(); i++) {",
                "+            int offset = 0;",
                "+            int level = tree.arity * i;",
                "+            for (int j = 1; j < tree.arity; j++) {",
                "+                offset = 4 * offset + cellId.childPosition(level - tree.arity + j);",
                "+            }",
                "+            b[i] = TOKENS[4 * offset + cellId.childPosition(level)];",
                "+        }",
                "+        bref.bytes = b;",
                "+        bref.length = getLevel();",
                "+        bref.offset = 0;",
                "+    }",
                "+",
                "+    @Override",
                "+    public int hashCode() {",
                "+        if (cellId == null) {",
                "+            return super.hashCode();",
                "+        }",
                "+        return this.cellId.hashCode();",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean equals(Object o) {",
                "+        S2PrefixTreeCell cell = (S2PrefixTreeCell) o;",
                "+        return Objects.equals(cellId, cell.cellId);",
                "+    }",
                "+",
                "+    @Override",
                "+    public String toString() {",
                "+        if (cellId == null) {",
                "+            return \"0\";",
                "+        }",
                "+        return cellId.toString();",
                "+    }",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2ShapeFactory.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2ShapeFactory.java",
                "new file mode 100644",
                "index 00000000000..1306f601676",
                "--- /dev/null",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2ShapeFactory.java",
                "@@ -0,0 +1,40 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial.prefix.tree;",
                "+",
                "+",
                "+import com.google.common.geometry.S2CellId;",
                "+import org.locationtech.spatial4j.shape.Shape;",
                "+import org.locationtech.spatial4j.shape.ShapeFactory;",
                "+",
                "+/**",
                "+ * Shape factory for Spatial contexts that support S2 geometry. It is an extension of",
                "+ * Spatial4j {@link ShapeFactory}.",
                "+ *",
                "+ * @lucene.experimental",
                "+ */",
                "+public interface S2ShapeFactory extends ShapeFactory{",
                "+",
                "+  /**",
                "+   * Factory method for S2 cell shapes.",
                "+   *",
                "+   * @param cellId The S2 cell id",
                "+   * @return the shape representing the cell.",
                "+   */",
                "+  Shape getS2CellShape(S2CellId cellId);",
                "+}",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShapeFactory.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShapeFactory.java",
                "index 282d93be427..a6147dfdf41 100644",
                "--- a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShapeFactory.java",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShapeFactory.java",
                "@@ -22,2 +22,6 @@ import java.util.List;",
                "+import com.google.common.geometry.S2Cell;",
                "+import com.google.common.geometry.S2CellId;",
                "+import com.google.common.geometry.S2Point;",
                "+import org.apache.lucene.spatial.prefix.tree.S2ShapeFactory;",
                " import org.apache.lucene.spatial3d.geom.GeoBBox;",
                "@@ -34,2 +38,3 @@ import org.apache.lucene.spatial3d.geom.GeoPolygon;",
                " import org.apache.lucene.spatial3d.geom.GeoPolygonFactory;",
                "+import org.apache.lucene.spatial3d.geom.GeoS2ShapeFactory;",
                " import org.apache.lucene.spatial3d.geom.PlanetModel;",
                "@@ -44,6 +49,5 @@ import org.locationtech.spatial4j.shape.Shape;",
                " import org.locationtech.spatial4j.shape.ShapeCollection;",
                "-import org.locationtech.spatial4j.shape.ShapeFactory;",
                " /**",
                "- * Geo3d implementation of {@link ShapeFactory}",
                "+ * Geo3d implementation of {@link S2ShapeFactory}",
                "  *",
                "@@ -51,3 +55,3 @@ import org.locationtech.spatial4j.shape.ShapeFactory;",
                "  */",
                "-public class Geo3dShapeFactory implements ShapeFactory {",
                "+public class Geo3dShapeFactory implements S2ShapeFactory {",
                "@@ -239,2 +243,16 @@ public class Geo3dShapeFactory implements ShapeFactory {",
                "+  @Override",
                "+  public Shape getS2CellShape(S2CellId cellId) {",
                "+    S2Cell cell = new S2Cell(cellId);",
                "+    GeoPoint point1 = getGeoPoint(cell.getVertexRaw(0));",
                "+    GeoPoint point2 = getGeoPoint(cell.getVertexRaw(1));",
                "+    GeoPoint point3 = getGeoPoint(cell.getVertexRaw(2));",
                "+    GeoPoint point4 = getGeoPoint(cell.getVertexRaw(3));",
                "+    return new Geo3dShape<>(GeoS2ShapeFactory.makeGeoS2Shape(planetModel, point1, point2, point3, point4), context);",
                "+  }",
                "+",
                "+  private GeoPoint getGeoPoint(S2Point point) {",
                "+    return planetModel.createSurfacePoint(point.get(0), point.get(1), point.get(2));",
                "+  }",
                "+",
                "   /**",
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2Shape.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2Shape.java",
                "new file mode 100644",
                "index 00000000000..b4c5d06ec99",
                "--- /dev/null",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2Shape.java",
                "@@ -0,0 +1,202 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial3d.geom;",
                "+",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.io.OutputStream;",
                "+",
                "+/**",
                "+ * Fast implementation of a polygon representing S2 geometry cell. There are no checks validating that",
                "+ * points are convex therefore users must be provide four points in CCW or the logic will fail.",
                "+ *",
                "+ * @lucene.internal",
                "+ */",
                "+class GeoS2Shape extends GeoBasePolygon {",
                "+",
                "+    /** The first point */",
                "+    protected final GeoPoint point1;",
                "+    /** The second point */",
                "+    protected final GeoPoint point2;",
                "+    /** The third point */",
                "+    protected final GeoPoint point3;",
                "+    /** The fourth point */",
                "+    protected final GeoPoint point4;",
                "+",
                "+    /** The first plane */",
                "+    protected final SidedPlane plane1;",
                "+    /** The second plane */",
                "+    protected final SidedPlane plane2;",
                "+    /** The third plane */",
                "+    protected final SidedPlane plane3;",
                "+    /** The fourth plane */",
                "+    protected final SidedPlane plane4;",
                "+",
                "+    /** Notable points for the first plane */",
                "+    protected final GeoPoint[] plane1Points;",
                "+    /** Notable points for second plane */",
                "+    protected final GeoPoint[] plane2Points;",
                "+    /** Notable points for third plane */",
                "+    protected final GeoPoint[] plane3Points;",
                "+    /** Notable points for fourth plane */",
                "+    protected final GeoPoint[] plane4Points;",
                "+",
                "+    /** Edge point for this S2 cell */",
                "+    protected final GeoPoint[] edgePoints;",
                "+",
                "+    /**",
                "+     * It builds from 4 points given in CCW. It must be convex or logic will fail.",
                "+     *",
                "+     *@param planetModel is the planet model.",
                "+     *@param point1  the first point.",
                "+     *@param point2  the second point.",
                "+     *@param point3  the third point.",
                "+     *@param point4  the four point.",
                "+     */",
                "+    public GeoS2Shape(final PlanetModel planetModel, GeoPoint point1, GeoPoint point2, GeoPoint point3, GeoPoint point4) {",
                "+        super(planetModel);",
                "+        this.point1 = point1;",
                "+        this.point2 = point2;",
                "+        this.point3 = point3;",
                "+        this.point4 = point4;",
                "+",
                "+        // Now build the four planes",
                "+        this.plane1 = new SidedPlane(point4, point1, point2);",
                "+        this.plane2 = new SidedPlane(point1, point2, point3);",
                "+        this.plane3 = new SidedPlane(point2, point3, point4);",
                "+        this.plane4 = new SidedPlane(point3, point4, point1);",
                "+",
                "+        //collect the notable points for the planes",
                "+        this.plane1Points = new GeoPoint[]{point1, point2};",
                "+        this.plane2Points = new GeoPoint[]{point2, point3};",
                "+        this.plane3Points = new GeoPoint[]{point3, point4};",
                "+        this.plane4Points = new GeoPoint[]{point4, point1};",
                "+",
                "+        this.edgePoints = new GeoPoint[]{point1};",
                "+    }",
                "+",
                "+    /**",
                "+     * Constructor for deserialization.",
                "+     * @param planetModel is the planet model.",
                "+     * @param inputStream is the input stream.",
                "+     */",
                "+    public GeoS2Shape(final PlanetModel planetModel, final InputStream inputStream) throws IOException {",
                "+        this(planetModel,",
                "+                (GeoPoint) SerializableObject.readObject(inputStream),",
                "+                (GeoPoint) SerializableObject.readObject(inputStream),",
                "+                (GeoPoint) SerializableObject.readObject(inputStream),",
                "+                (GeoPoint) SerializableObject.readObject(inputStream));",
                "+    }",
                "+",
                "+    @Override",
                "+    public void write(final OutputStream outputStream) throws IOException {",
                "+        SerializableObject.writeObject(outputStream, point1);",
                "+        SerializableObject.writeObject(outputStream, point2);",
                "+        SerializableObject.writeObject(outputStream, point3);",
                "+        SerializableObject.writeObject(outputStream, point4);",
                "+    }",
                "+",
                "+",
                "+    @Override",
                "+    public boolean isWithin(final double x, final double y, final double z) {",
                "+        return plane1.isWithin(x, y, z) &&",
                "+               plane2.isWithin(x, y, z) &&",
                "+               plane3.isWithin(x, y, z) &&",
                "+               plane4.isWithin(x, y, z);",
                "+    }",
                "+",
                "+",
                "+    @Override",
                "+    public GeoPoint[] getEdgePoints() {",
                "+        return edgePoints;",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean intersects(final Plane p, final GeoPoint[] notablePoints, final Membership... bounds) {",
                "+        return p.intersects(planetModel, plane1, notablePoints, plane1Points, bounds, plane2, plane4) ||",
                "+               p.intersects(planetModel, plane2, notablePoints, plane2Points, bounds, plane3, plane1) ||",
                "+               p.intersects(planetModel, plane3, notablePoints, plane3Points, bounds, plane4, plane2) ||",
                "+               p.intersects(planetModel, plane4, notablePoints, plane4Points, bounds, plane1, plane3);",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean intersects(GeoShape geoShape) {",
                "+        return geoShape.intersects(plane1, plane1Points, plane2, plane4) ||",
                "+               geoShape.intersects(plane2, plane2Points, plane3, plane1) ||",
                "+               geoShape.intersects(plane3, plane3Points, plane4, plane2) ||",
                "+               geoShape.intersects(plane4, plane4Points, plane1, plane3);",
                "+    }",
                "+",
                "+    @Override",
                "+    public void getBounds(Bounds bounds) {",
                "+        super.getBounds(bounds);",
                "+        bounds.addPlane(planetModel, plane1, plane2, plane4)",
                "+              .addPlane(planetModel, plane2, plane3, plane1)",
                "+              .addPlane(planetModel, plane3, plane4, plane2)",
                "+              .addPlane(planetModel, plane4, plane1, plane3)",
                "+              .addPoint(point1).addPoint(point2).addPoint(point3).addPoint(point4);",
                "+    }",
                "+",
                "+    @Override",
                "+    public double outsideDistance(DistanceStyle distanceStyle, double x, double y, double z) {",
                "+        final double planeDistance1 = distanceStyle.computeDistance(planetModel, plane1, x,y,z, plane2, plane4);",
                "+        final double planeDistance2 = distanceStyle.computeDistance(planetModel, plane2, x,y,z, plane3, plane1);",
                "+        final double planeDistance3 = distanceStyle.computeDistance(planetModel, plane3, x,y,z, plane4, plane2);",
                "+        final double planeDistance4 = distanceStyle.computeDistance(planetModel, plane4, x,y,z, plane1, plane3);",
                "+",
                "+        final double pointDistance1 = distanceStyle.computeDistance(point1, x,y,z);",
                "+        final double pointDistance2 = distanceStyle.computeDistance(point2, x,y,z);",
                "+        final double pointDistance3 = distanceStyle.computeDistance(point3, x,y,z);",
                "+        final double pointDistance4 = distanceStyle.computeDistance(point4, x,y,z);",
                "+",
                "+        return Math.min(",
                "+                Math.min(",
                "+                        Math.min(planeDistance1, planeDistance2),",
                "+                        Math.min(planeDistance3, planeDistance4)),",
                "+                Math.min(",
                "+                        Math.min(pointDistance1, pointDistance2),",
                "+                        Math.min(pointDistance3, pointDistance4)));",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean equals(Object o) {",
                "+        if (!(o instanceof GeoS2Shape))",
                "+            return false;",
                "+        GeoS2Shape other = (GeoS2Shape) o;",
                "+        return super.equals(other) && other.point1.equals(point1)",
                "+                && other.point2.equals(point2) && other.point3.equals(point3)",
                "+                && other.point4.equals(point4);",
                "+    }",
                "+",
                "+    @Override",
                "+    public int hashCode() {",
                "+        int result = super.hashCode();",
                "+        result = 31 * result  + point1.hashCode();",
                "+        result = 31 * result  + point2.hashCode();",
                "+        result = 31 * result  + point3.hashCode();",
                "+        result = 31 * result  + point4.hashCode();",
                "+        return result;",
                "+    }",
                "+",
                "+    @Override",
                "+    public String toString() {",
                "+        return \"GeoS2Shape: {planetmodel=\"+planetModel+\", point1=\" + point1 +\", point2=\" + point2 +\", point3=\" + point3 +\", point4=\" + point4+ \"}\";",
                "+    }",
                "+",
                "+}",
                "+",
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2ShapeFactory.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2ShapeFactory.java",
                "new file mode 100644",
                "index 00000000000..848b2e68db5",
                "--- /dev/null",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2ShapeFactory.java",
                "@@ -0,0 +1,50 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial3d.geom;",
                "+",
                "+/**",
                "+ * Class which constructs a GeoPolygon representing S2 google pixel.",
                "+ *",
                "+ * @lucene.experimental",
                "+ */",
                "+public class GeoS2ShapeFactory {",
                "+",
                "+  private GeoS2ShapeFactory() {",
                "+  }",
                "+",
                "+  /**",
                "+   * Creates a convex polygon with 4 planes by providing 4 points in CCW.",
                "+   * This is a very fast shape and there are no checks that the points currently define",
                "+   * a convex shape.",
                "+   *",
                "+   * @param planetModel The planet model",
                "+   * @param point1 the first point.",
                "+   * @param point2 the second point.",
                "+   * @param point3 the third point.",
                "+   * @param point4 the four point.",
                "+   * @return the generated shape.",
                "+   */",
                "+  public static GeoPolygon makeGeoS2Shape(final PlanetModel planetModel,",
                "+                                          final GeoPoint point1,",
                "+                                          final GeoPoint point2,",
                "+                                          final GeoPoint point3,",
                "+                                          final GeoPoint point4) {",
                "+    return new GeoS2Shape(planetModel, point1, point2, point3, point4);",
                "+  }",
                "+}",
                "+",
                "diff --git a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardObjects.java b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardObjects.java",
                "index bcebf43262c..4e0acaeff5b 100644",
                "--- a/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardObjects.java",
                "+++ b/lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardObjects.java",
                "@@ -77,2 +77,3 @@ class StandardObjects {",
                "    classRegsitry.put(GeoExactCircle.class, 37);",
                "+   classRegsitry.put(GeoS2Shape.class, 38);"
            ],
            "changed_files": [
                "lucene/ivy-versions.properties",
                "lucene/licenses/s2-geometry-library-java-1.0.0.jar.sha1",
                "lucene/spatial-extras/ivy.xml",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTree.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2ShapeFactory.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/spatial4j/Geo3dShapeFactory.java",
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2Shape.java",
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoS2ShapeFactory.java",
                "lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/StandardObjects.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "LUCENE-8126": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: LUCENE-8126",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ef9d59df02f8a53eb500609ae8548b62ae48a95f",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520402036,
            "hunks": 1,
            "message": "SOLR-12011: Remove unused import (cherry picked from commit 1b8651d)",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "index 13f0f98f3cd..70fb504b96e 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java",
                "@@ -30,3 +30,2 @@ import java.util.Map;",
                " import java.util.Optional;",
                "-import java.util.OptionalLong;",
                " import java.util.Set;"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/admin/CollectionsHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-12011": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-12011",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b6f683d30ba18276ca1d8547e1250dbdc29b8157",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518195004,
            "hunks": 1,
            "message": "SOLR-11349: Remove deprecated ResponseBuilder.getQueryCommand() method.",
            "diff": [
                "diff --git a/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java b/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java",
                "index 22d04658c48..df0623e11fc 100644",
                "--- a/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java",
                "+++ b/solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java",
                "@@ -423,7 +423,2 @@ public class ResponseBuilder",
                "-  @Deprecated",
                "-  public QueryCommand getQueryCommand() {",
                "-    return createQueryCommand();",
                "-  }",
                "-",
                "   /**"
            ],
            "changed_files": [
                "solr/core/src/java/org/apache/solr/handler/component/ResponseBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "SOLR-11349": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: SOLR-11349",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a2eb1dc271973bfc2452b4326bb88a1aa7cde67e",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519017579,
            "hunks": 1,
            "message": "Added copy sheet docs for Apache Zepplin",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc b/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc",
                "index ead79b92c28..a88d97763d0 100644",
                "--- a/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc",
                "+++ b/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc",
                "@@ -48,2 +48,16 @@ image::images/solr-jdbc-apache-zeppelin/zeppelin_solrjdbc_5.png[image,width=839,",
                "+== JDBC Interpreter Copy Sheet",
                "+",
                "+To facilitate easy copying the parameters mentioned in the screenshots, here is a consolidated list",
                "+",
                "+[source,text]",
                "+----",
                "+Name : Solr",
                "+Interpreter : jdbc",
                "+default.url : jdbc:solr://SOLR_ZK_CONNECTION_STRING?collection=<collection_name>",
                "+default.driver : org.apache.solr.client.solrj.io.sql.DriverImpl",
                "+default.user : solr",
                "+dependency : org.apache.solr:solr-solrj:-{solr-docs-version}.0",
                "+----",
                "+",
                " == Query with the Notebook"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b98ecb873be8948cc8beae2677a293f5b9594595",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1520246992,
            "hunks": 12,
            "message": "Specialized cell interface to allow any spatial prefix tree to benefit from the setting setPruneLeafyBranches on RecursivePrefixTreeStrategy",
            "diff": [
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy.java",
                "index 819c50460be..59b636ccaa8 100644",
                "--- a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy.java",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy.java",
                "@@ -26,4 +26,4 @@ import org.apache.lucene.search.TermQuery;",
                " import org.apache.lucene.spatial.prefix.tree.Cell;",
                "+import org.apache.lucene.spatial.prefix.tree.CellCanPrune;",
                " import org.apache.lucene.spatial.prefix.tree.CellIterator;",
                "-import org.apache.lucene.spatial.prefix.tree.LegacyCell;",
                " import org.apache.lucene.spatial.prefix.tree.SpatialPrefixTree;",
                "@@ -55,3 +55,3 @@ public class RecursivePrefixTreeStrategy extends PrefixTreeStrategy {",
                "   //Formerly known as simplifyIndexedCells. Eventually will be removed. Only compatible with RPT",
                "-  // and a LegacyPrefixTree.",
                "+  // and cells implementing CellCanPrune, otherwise ignored.",
                "   protected boolean pruneLeafyBranches = true;",
                "@@ -95,4 +95,6 @@ public class RecursivePrefixTreeStrategy extends PrefixTreeStrategy {",
                "   /**",
                "-   * An optional hint affecting non-point shapes: it will",
                "-   * prune away a complete set sibling leaves to their parent (recursively), resulting in ~20-50%",
                "+   * An optional hint affecting non-point shapes and tree cells implementing {@link CellCanPrune}, otherwise",
                "+   * ignored.",
                "+   * <p>",
                "+   * It will prune away a complete set sibling leaves to their parent (recursively), resulting in ~20-50%",
                "    * fewer indexed cells, and consequently that much less disk and that much faster indexing.",
                "@@ -134,6 +136,2 @@ public class RecursivePrefixTreeStrategy extends PrefixTreeStrategy {",
                "   private boolean recursiveTraverseAndPrune(Cell cell, Shape shape, int detailLevel, List<Cell> result) {",
                "-    // Important: this logic assumes Cells don't share anything with other cells when",
                "-    // calling cell.getNextLevelCells(). This is only true for LegacyCell.",
                "-    if (!(cell instanceof LegacyCell))",
                "-      throw new IllegalStateException(\"pruneLeafyBranches must be disabled for use with grid \"+grid);",
                "@@ -156,4 +154,10 @@ public class RecursivePrefixTreeStrategy extends PrefixTreeStrategy {",
                "     }",
                "+",
                "+    if (!(cell instanceof CellCanPrune)) {",
                "+      //Cannot prune so return false",
                "+      return false;",
                "+    }",
                "+",
                "     //can we prune?",
                "-    if (leaves == ((LegacyCell)cell).getSubCellsSize() && cell.getLevel() != 0) {",
                "+    if (leaves == ((CellCanPrune)cell).getSubCellsSize() && cell.getLevel() != 0) {",
                "       //Optimization: substitute the parent as a leaf instead of adding all",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/CellCanPrune.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/CellCanPrune.java",
                "new file mode 100644",
                "index 00000000000..33bd904d52f",
                "--- /dev/null",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/CellCanPrune.java",
                "@@ -0,0 +1,37 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one or more",
                "+ * contributor license agreements.  See the NOTICE file distributed with",
                "+ * this work for additional information regarding copyright ownership.",
                "+ * The ASF licenses this file to You under the Apache License, Version 2.0",
                "+ * (the \"License\"); you may not use this file except in compliance with",
                "+ * the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *     http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.apache.lucene.spatial.prefix.tree;",
                "+",
                "+import org.locationtech.spatial4j.shape.Shape;",
                "+",
                "+/**",
                "+ *  Grid cells that share nothing with other cells when calling {@link #getNextLevelCells(Shape)}",
                "+ *  might implement this interface. Children cells for this cell will be eligible for pruning via",
                "+ *  {@link org.apache.lucene.spatial.prefix.RecursivePrefixTreeStrategy#setPruneLeafyBranches(boolean)}.",
                "+ *",
                "+ * @lucene.experimental",
                "+ */",
                "+public interface CellCanPrune extends Cell{",
                "+",
                "+  /**",
                "+   * Returns the number of children for this cell.",
                "+   *",
                "+   * @return the number of children.",
                "+   */",
                "+  int getSubCellsSize();",
                "+}",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell.java",
                "index d978d3c8481..bcc1557eebc 100644",
                "--- a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell.java",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell.java",
                "@@ -29,3 +29,3 @@ import org.apache.lucene.util.StringHelper;",
                " //public for RPT pruneLeafyBranches code",
                "-public abstract class LegacyCell implements Cell {",
                "+public abstract class LegacyCell implements CellCanPrune {",
                "@@ -161,7 +161,2 @@ public abstract class LegacyCell implements Cell {",
                "-  /**",
                "-   * {@link #getSubCells()}.size() -- usually a constant. Should be &gt;=2",
                "-   */",
                "-  public abstract int getSubCellsSize();",
                "-",
                "   @Override",
                "diff --git a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "index 63a728f5575..e9b5818e16d 100644",
                "--- a/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "+++ b/lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java",
                "@@ -35,3 +35,3 @@ import org.locationtech.spatial4j.shape.SpatialRelation;",
                "  */",
                "-class S2PrefixTreeCell implements Cell {",
                "+class S2PrefixTreeCell implements CellCanPrune {",
                "@@ -267,2 +267,10 @@ class S2PrefixTreeCell implements Cell {",
                "+    @Override",
                "+    public int getSubCellsSize() {",
                "+        if (cellId == null) { //root node",
                "+            return 6;",
                "+        }",
                "+        return  (int) Math.pow(4, tree.arity);",
                "+    }",
                "+",
                "     @Override"
            ],
            "changed_files": [
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/CellCanPrune.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/LegacyCell.java",
                "lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/S2PrefixTreeCell.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3498dd99f7a280d4fe3c2aee7b1464b44a6fdfc5",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519689066,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'refs/remotes/origin/master'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d91e4cbea219adc242521bd4d0b08aaeda249f28",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518833611,
            "hunks": 1,
            "message": "SOLR:11947: Fix ref guide build error",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/stream-evaluator-reference.adoc b/solr/solr-ref-guide/src/stream-evaluator-reference.adoc",
                "index b9de68fc0f3..4938a29dfd4 100644",
                "--- a/solr/solr-ref-guide/src/stream-evaluator-reference.adoc",
                "+++ b/solr/solr-ref-guide/src/stream-evaluator-reference.adoc",
                "@@ -964,3 +964,3 @@ A probability distribution function",
                " The `getAttribute` function returns an attribute from a `matrix` by its key. Any function that returns a `matrix` can",
                "-also set attributes on the `matrix` with additional information. The `<<setAttribute>>` function can also be used",
                "+also set attributes on the `matrix` with additional information. The `setAttribute` function can also be used",
                " to set attributes on a `matrix`. The key to an attribute is always a string. The value of attribute can be any object"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/stream-evaluator-reference.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7d3fccefe613afe7cd94ffeebab1217f92eb9d5c",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518202619,
            "hunks": 0,
            "message": "Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "00f970cec6a2d820840063f09fe86514aded4bf1",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518559234,
            "hunks": 0,
            "message": "Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c92458339830f0a1fa88891fa137b16f0c8b0849",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519017579,
            "hunks": 1,
            "message": "Added copy sheet docs for Apache Zepplin (cherry picked from commit a2eb1dc)",
            "diff": [
                "diff --git a/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc b/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc",
                "index ead79b92c28..a88d97763d0 100644",
                "--- a/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc",
                "+++ b/solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc",
                "@@ -48,2 +48,16 @@ image::images/solr-jdbc-apache-zeppelin/zeppelin_solrjdbc_5.png[image,width=839,",
                "+== JDBC Interpreter Copy Sheet",
                "+",
                "+To facilitate easy copying the parameters mentioned in the screenshots, here is a consolidated list",
                "+",
                "+[source,text]",
                "+----",
                "+Name : Solr",
                "+Interpreter : jdbc",
                "+default.url : jdbc:solr://SOLR_ZK_CONNECTION_STRING?collection=<collection_name>",
                "+default.driver : org.apache.solr.client.solrj.io.sql.DriverImpl",
                "+default.user : solr",
                "+dependency : org.apache.solr:solr-solrj:-{solr-docs-version}.0",
                "+----",
                "+",
                " == Query with the Notebook"
            ],
            "changed_files": [
                "solr/solr-ref-guide/src/solr-jdbc-apache-zeppelin.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d5f670cd95d1947dca2522bcb3370afa72750aa5",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1519689104,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'refs/remotes/origin/branch_7x' into branch_7x",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "03923db9353c38806524059753d5a9e1002a04ff",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518202728,
            "hunks": 0,
            "message": "Merge branch 'branch_7x' of https://git-wip-us.apache.org/repos/asf/lucene-solr into branch_7x",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "releases/lucene-solr/7.3.0",
                "releases/lucene-solr/7.3.1",
                "releases/lucene-solr/7.4.0",
                "releases/lucene-solr/7.5.0",
                "releases/lucene-solr/7.6.0",
                "releases/lucene-solr/7.7.0",
                "releases/lucene-solr/7.7.1",
                "releases/lucene-solr/7.7.2",
                "releases/lucene-solr/7.7.3"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8a5a4a6317e272cdda316a54fa74f60fa82f1497",
            "repository": "https://github.com/apache/lucene-solr",
            "timestamp": 1518533599,
            "hunks": 0,
            "message": "Merge branch 'master' of https://git-wip-us.apache.org/repos/asf/lucene-solr",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "history/branches/lucene-solr/SOLR-11795",
                "history/branches/lucene-solr/gradle-master",
                "history/branches/lucene-solr/jira-14151-revert",
                "history/branches/lucene-solr/jira/LUCENE-8738",
                "history/branches/lucene-solr/jira/LUCENE-9312",
                "history/branches/lucene-solr/jira/LUCENE-9438",
                "history/branches/lucene-solr/jira/SOLR-13229",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_2",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_3",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_4",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_5",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_6",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_7_refguide",
                "history/branches/lucene-solr/jira/SOLR-13452_gradle_8",
                "history/branches/lucene-solr/jira/SOLR-13462",
                "history/branches/lucene-solr/jira/SOLR-13661-reverted",
                "history/branches/lucene-solr/jira/SOLR-13661_2",
                "history/branches/lucene-solr/jira/SOLR-13793",
                "history/branches/lucene-solr/jira/SOLR-13822_backup",
                "history/branches/lucene-solr/jira/SOLR-13834",
                "history/branches/lucene-solr/jira/SOLR-14354-revert",
                "history/branches/lucene-solr/jira/SOLR-14383",
                "history/branches/lucene-solr/jira/V2Request",
                "history/branches/lucene-solr/jira/gradle",
                "history/branches/lucene-solr/jira/http2",
                "history/branches/lucene-solr/jira/solr-12259",
                "history/branches/lucene-solr/jira/solr-13472",
                "history/branches/lucene-solr/jira/solr-13619",
                "history/branches/lucene-solr/jira/solr-13662",
                "history/branches/lucene-solr/jira/solr-13662-2",
                "history/branches/lucene-solr/jira/solr-13662-3",
                "history/branches/lucene-solr/jira/solr-13662-3_tmp",
                "history/branches/lucene-solr/jira/solr-13662-fixes",
                "history/branches/lucene-solr/jira/solr-13662-updated",
                "history/branches/lucene-solr/jira/solr-13718-8x",
                "history/branches/lucene-solr/jira/solr-13971",
                "history/branches/lucene-solr/jira/solr-13978",
                "history/branches/lucene-solr/jira/solr-14021",
                "history/branches/lucene-solr/jira/solr-14022",
                "history/branches/lucene-solr/jira/solr-14025",
                "history/branches/lucene-solr/jira/solr-14066-master",
                "history/branches/lucene-solr/jira/solr-14071",
                "history/branches/lucene-solr/jira/solr-14151-revert",
                "history/branches/lucene-solr/jira/solr-14151-revert-2",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x",
                "history/branches/lucene-solr/jira/solr-14151-revert-8x-2",
                "history/branches/lucene-solr/jira/solr-14158",
                "history/branches/lucene-solr/jira/solr-14599",
                "history/branches/lucene-solr/jira/solr-14599_1",
                "history/branches/lucene-solr/jira/solr-14603",
                "history/branches/lucene-solr/jira/solr-14603-8x",
                "history/branches/lucene-solr/jira/solr-14616",
                "history/branches/lucene-solr/jira/solr-14799",
                "history/branches/lucene-solr/jira/solr-14914",
                "history/branches/lucene-solr/jira/solr14398",
                "history/branches/lucene-solr/jira/solr14404_fix",
                "history/branches/lucene-solr/origin/branch_8_x",
                "history/branches/lucene-solr/revert-776-remove_icu_dependency",
                "history/branches/lucene-solr/solr-13131",
                "history/branches/lucene-solr/solr-6733",
                "history/branches/lucene-solr/starburst",
                "releases/lucene-solr/8.0.0",
                "releases/lucene-solr/8.1.0",
                "releases/lucene-solr/8.1.1",
                "releases/lucene-solr/8.10.0",
                "releases/lucene-solr/8.10.1",
                "releases/lucene-solr/8.11.0",
                "releases/lucene-solr/8.11.1",
                "releases/lucene-solr/8.11.2",
                "releases/lucene-solr/8.11.3",
                "releases/lucene-solr/8.2.0",
                "releases/lucene-solr/8.3.0",
                "releases/lucene-solr/8.3.1",
                "releases/lucene-solr/8.4.0",
                "releases/lucene-solr/8.4.1",
                "releases/lucene-solr/8.5.0",
                "releases/lucene-solr/8.5.1",
                "releases/lucene-solr/8.5.2",
                "releases/lucene-solr/8.6.0",
                "releases/lucene-solr/8.6.1",
                "releases/lucene-solr/8.6.2",
                "releases/lucene-solr/8.6.3",
                "releases/lucene-solr/8.7.0",
                "releases/lucene-solr/8.8.0",
                "releases/lucene-solr/8.8.1",
                "releases/lucene-solr/8.8.2",
                "releases/lucene-solr/8.9.0"
            ],
            "matched_rules": []
        }
    ]
}
