{
    "advisory_record": {
        "cve_id": "CVE-2018-1327",
        "description": "The Apache Struts REST Plugin is using XStream library which is vulnerable and allow perform a DoS attack when using a malicious request with specially crafted XML payload. Upgrade to the Apache Struts version 2.5.16 and switch to an optional Jackson XML handler as described here http://struts.apache.org/plugins/rest/#custom-contenttypehandlers. Another option is to implement a custom XML handler based on the Jackson XML handler from the Apache Struts 2.5.16.",
        "reserved_timestamp": 1512604800,
        "published_timestamp": 1522108800,
        "updated_timestamp": 1607400382,
        "repository_url": null,
        "references": {
            "": 45,
            "https://cwiki.apache.org/confluence/display/WW/S2-056": 7,
            "https://security.netapp.com/advisory/ntap-20180330-0001/": 2,
            "http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html": 2,
            "http://www.securitytracker.com/id/1040575": 2,
            "http://www.securityfocus.com/bid/103516": 2,
            "https://lists.apache.org/thread.html/r02c2d634fa74209d941c90f9a4cd36a6f12366ca65f9b90446ff2de3%40%3Cissues.struts.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/rf482c101a88445d73cc2e89dbf7f16ae00a4aa79a544a1e72b2326db%40%3Cissues.struts.apache.org%3E": 2,
            "https://security.netapp.com/en": 2,
            "http://struts.apache.org/plugins/rest/#custom-contenttypehandlers": 2,
            "https://www.netapp.com/": 1,
            "https://mysupport.netapp.com": 1,
            "https://community.netapp.com": 1,
            "https://www.netapp.com/company/contact-us/": 1,
            "https://security.netapp.com": 1,
            "https://security.netapp.com/advisory/": 1,
            "https://security.netapp.com/bulletins/": 1,
            "https://security.netapp.com/contact/": 1,
            "https://security.netapp.com/policy/": 1,
            "https://security.netapp.com/resources/": 1,
            "https://security.netapp.com/certs/": 1,
            "https://security.netapp.com/advisory": 1,
            "https://security.netapp.com/advisory/ntap-20180330-0001": 1,
            "https://www.netapp.com/company/legal/privacy-policy/": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-1327": 1,
            "https://mysupport.netapp.com/site/downloads/": 1,
            "http://mysupport.netapp.com": 1,
            "https://security.netapp.com/advisory/NTAP-20180330-0001": 1,
            "https://www.netapp.com/forms/site-feedback/": 1,
            "https://cwiki.apache.org/confluence/login.action?os_destination=%2Fdisplay%2FWW%2FS2-056": 1,
            "https://docs.atlassian.com/confluence/docs-719/": 1,
            "https://docs.atlassian.com/confluence/docs-719/help.whats.new.iframe.link": 1,
            "https://confluence.atlassian.com/display/DOC/Confluence+7.19+Release+Notes": 1,
            "https://www.atlassian.com/software/views/opensource-community-additional-license-offer": 1,
            "https://www.atlassian.com/software/confluence": 1,
            "https://support.atlassian.com/confluence-server/": 1,
            "https://www.atlassian.com/company": 1,
            "https://www.atlassian.com/": 1
        },
        "affected_products": [
            "DoS",
            "Apache",
            "Struts",
            "XStream",
            "Jackson",
            "Plugin",
            "XML",
            "Apache Struts"
        ],
        "versions": {
            "status": "affected",
            "version": "Apache Struts 2.1.1 to 2.5.14.1"
        },
        "files": [
            "XML",
            "REST",
            "DoS",
            "#custom-contenttypehandlers"
        ],
        "keywords": [
            "base",
            "switch",
            "implement",
            "custom",
            "apache",
            "handler",
            "struts",
            "perform",
            "library",
            "request",
            "version",
            "payload",
            "plugin",
            "upgrade",
            "rest",
            "jackson",
            "describe",
            "option",
            "xstream",
            "craft",
            "attack",
            "allow"
        ],
        "files_extension": [],
        "has_fixing_commit": false
    },
    "commits": [
        {
            "commit_id": "04db84135866b136aa4366234e81a0e4aa7bc7ca",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510641794,
            "hunks": 40,
            "message": "[maven-release-plugin] prepare release STRUTS_2_5_14",
            "diff": [
                "diff --git a/apps/pom.xml b/apps/pom.xml",
                "index 9d6e4ff75..41741926c 100644",
                "--- a/apps/pom.xml",
                "+++ b/apps/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/apps/rest-showcase/pom.xml b/apps/rest-showcase/pom.xml",
                "index e7f7d4e60..885277ae7 100644",
                "--- a/apps/rest-showcase/pom.xml",
                "+++ b/apps/rest-showcase/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "@@ -31,3 +31,3 @@",
                "     <packaging>war</packaging>",
                "-    <version>2.5.14-SNAPSHOT</version>",
                "+    <version>2.5.14</version>",
                "     <name>Struts 2 Rest Showcase Webapp</name>",
                "diff --git a/apps/showcase/pom.xml b/apps/showcase/pom.xml",
                "index 7f277124e..db482bcc3 100644",
                "--- a/apps/showcase/pom.xml",
                "+++ b/apps/showcase/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/assembly/pom.xml b/assembly/pom.xml",
                "index eccd3d336..7b688d8cc 100644",
                "--- a/assembly/pom.xml",
                "+++ b/assembly/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/bom/pom.xml b/bom/pom.xml",
                "index fe72ff2ef..00616966a 100644",
                "--- a/bom/pom.xml",
                "+++ b/bom/pom.xml",
                "@@ -32,3 +32,3 @@",
                "     <artifactId>struts2-bom</artifactId>",
                "-    <version>2.5.14-SNAPSHOT</version>",
                "+    <version>2.5.14</version>",
                "     <packaging>pom</packaging>",
                "@@ -47,3 +47,3 @@",
                "     <properties>",
                "-        <struts-version.version>2.5.14-SNAPSHOT</struts-version.version>",
                "+        <struts-version.version>2.5.14</struts-version.version>",
                "         <maven.site.skip>true</maven.site.skip>",
                "@@ -181,2 +181,6 @@",
                "     </dependencyManagement>",
                "+",
                "+  <scm>",
                "+    <tag>STRUTS_2_5_14</tag>",
                "+  </scm>",
                " </project>",
                "diff --git a/bundles/admin/pom.xml b/bundles/admin/pom.xml",
                "index f6eeba272..aaa0b7695 100644",
                "--- a/bundles/admin/pom.xml",
                "+++ b/bundles/admin/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/bundles/demo/pom.xml b/bundles/demo/pom.xml",
                "index a64de75f9..fe2644a05 100644",
                "--- a/bundles/demo/pom.xml",
                "+++ b/bundles/demo/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/bundles/pom.xml b/bundles/pom.xml",
                "index f326433c0..05c5df01e 100755",
                "--- a/bundles/pom.xml",
                "+++ b/bundles/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/core/pom.xml b/core/pom.xml",
                "index 4947de33f..3a3909063 100644",
                "--- a/core/pom.xml",
                "+++ b/core/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/bean-validation/pom.xml b/plugins/bean-validation/pom.xml",
                "index 3c9621362..8314f430c 100644",
                "--- a/plugins/bean-validation/pom.xml",
                "+++ b/plugins/bean-validation/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/cdi/pom.xml b/plugins/cdi/pom.xml",
                "index 255501022..7a968f1da 100644",
                "--- a/plugins/cdi/pom.xml",
                "+++ b/plugins/cdi/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/config-browser/pom.xml b/plugins/config-browser/pom.xml",
                "index a7d9ed632..928b17401 100644",
                "--- a/plugins/config-browser/pom.xml",
                "+++ b/plugins/config-browser/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/convention/pom.xml b/plugins/convention/pom.xml",
                "index dfed1e6f0..60f7bb5e2 100644",
                "--- a/plugins/convention/pom.xml",
                "+++ b/plugins/convention/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/dwr/pom.xml b/plugins/dwr/pom.xml",
                "index bfe1c9260..95de21c52 100644",
                "--- a/plugins/dwr/pom.xml",
                "+++ b/plugins/dwr/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/embeddedjsp/pom.xml b/plugins/embeddedjsp/pom.xml",
                "index b7d32d6b6..f8c86033d 100644",
                "--- a/plugins/embeddedjsp/pom.xml",
                "+++ b/plugins/embeddedjsp/pom.xml",
                "@@ -21,4 +21,3 @@",
                " -->",
                "-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
                "-         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">",
                "+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">",
                "     <modelVersion>4.0.0</modelVersion>",
                "@@ -27,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/gxp/pom.xml b/plugins/gxp/pom.xml",
                "index 250a780f4..c5e0c2f01 100644",
                "--- a/plugins/gxp/pom.xml",
                "+++ b/plugins/gxp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/jasperreports/pom.xml b/plugins/jasperreports/pom.xml",
                "index 50ed778fe..1bdcb34fa 100644",
                "--- a/plugins/jasperreports/pom.xml",
                "+++ b/plugins/jasperreports/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/javatemplates/pom.xml b/plugins/javatemplates/pom.xml",
                "index 943fa7f36..40985c19a 100644",
                "--- a/plugins/javatemplates/pom.xml",
                "+++ b/plugins/javatemplates/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/jfreechart/pom.xml b/plugins/jfreechart/pom.xml",
                "index ffccb737b..2ff356850 100644",
                "--- a/plugins/jfreechart/pom.xml",
                "+++ b/plugins/jfreechart/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "    </parent>",
                "diff --git a/plugins/json/pom.xml b/plugins/json/pom.xml",
                "index a3266f40d..5d644b1c9 100644",
                "--- a/plugins/json/pom.xml",
                "+++ b/plugins/json/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/junit/pom.xml b/plugins/junit/pom.xml",
                "index 2ccc794be..09dd67cef 100644",
                "--- a/plugins/junit/pom.xml",
                "+++ b/plugins/junit/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/osgi/pom.xml b/plugins/osgi/pom.xml",
                "index 08e2c3e60..f2927e814 100644",
                "--- a/plugins/osgi/pom.xml",
                "+++ b/plugins/osgi/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/oval/pom.xml b/plugins/oval/pom.xml",
                "index 2982969c0..d11d3e2e7 100644",
                "--- a/plugins/oval/pom.xml",
                "+++ b/plugins/oval/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/pell-multipart/pom.xml b/plugins/pell-multipart/pom.xml",
                "index 6fb7fdce4..22346d70c 100644",
                "--- a/plugins/pell-multipart/pom.xml",
                "+++ b/plugins/pell-multipart/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/plexus/pom.xml b/plugins/plexus/pom.xml",
                "index b80068002..4a9fe895a 100644",
                "--- a/plugins/plexus/pom.xml",
                "+++ b/plugins/plexus/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/pom.xml b/plugins/pom.xml",
                "index c336d767e..2fc2c336d 100644",
                "--- a/plugins/pom.xml",
                "+++ b/plugins/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/portlet-tiles/pom.xml b/plugins/portlet-tiles/pom.xml",
                "index 7e9776c20..1fff5fc46 100644",
                "--- a/plugins/portlet-tiles/pom.xml",
                "+++ b/plugins/portlet-tiles/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/portlet/pom.xml b/plugins/portlet/pom.xml",
                "index a4ac4169c..de9494796 100644",
                "--- a/plugins/portlet/pom.xml",
                "+++ b/plugins/portlet/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/rest/pom.xml b/plugins/rest/pom.xml",
                "index 7f4bf8d5b..5ad70dd78 100644",
                "--- a/plugins/rest/pom.xml",
                "+++ b/plugins/rest/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/sitegraph/pom.xml b/plugins/sitegraph/pom.xml",
                "index d9c24a9dc..f6af0644b 100644",
                "--- a/plugins/sitegraph/pom.xml",
                "+++ b/plugins/sitegraph/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/sitemesh/pom.xml b/plugins/sitemesh/pom.xml",
                "index 0cef0b2fd..ab580782e 100644",
                "--- a/plugins/sitemesh/pom.xml",
                "+++ b/plugins/sitemesh/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/spring/pom.xml b/plugins/spring/pom.xml",
                "index 0fdbce3bf..2b7f51863 100644",
                "--- a/plugins/spring/pom.xml",
                "+++ b/plugins/spring/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/testng/pom.xml b/plugins/testng/pom.xml",
                "index 3b7608b53..448c3b14d 100644",
                "--- a/plugins/testng/pom.xml",
                "+++ b/plugins/testng/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/plugins/tiles/pom.xml b/plugins/tiles/pom.xml",
                "index d94f5fcfd..67fe2b328 100644",
                "--- a/plugins/tiles/pom.xml",
                "+++ b/plugins/tiles/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.5.14</version>",
                "     </parent>",
                "diff --git a/pom.xml b/pom.xml",
                "index 50fbf2735..3e7bdbe38 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -31,3 +31,3 @@",
                "     <artifactId>struts2-parent</artifactId>",
                "-    <version>2.5.14-SNAPSHOT</version>",
                "+    <version>2.5.14</version>",
                "     <packaging>pom</packaging>",
                "@@ -53,3 +53,3 @@",
                "         <url>https://github.com/apache/struts/</url>",
                "-        <tag>HEAD</tag>",
                "+        <tag>STRUTS_2_5_14</tag>",
                "     </scm>"
            ],
            "changed_files": [
                "apps/pom.xml",
                "apps/rest-showcase/pom.xml",
                "apps/showcase/pom.xml",
                "assembly/pom.xml",
                "bom/pom.xml",
                "bundles/admin/pom.xml",
                "bundles/demo/pom.xml",
                "bundles/pom.xml",
                "core/pom.xml",
                "plugins/bean-validation/pom.xml",
                "plugins/cdi/pom.xml",
                "plugins/config-browser/pom.xml",
                "plugins/convention/pom.xml",
                "plugins/dwr/pom.xml",
                "plugins/embeddedjsp/pom.xml",
                "plugins/gxp/pom.xml",
                "plugins/jasperreports/pom.xml",
                "plugins/javatemplates/pom.xml",
                "plugins/jfreechart/pom.xml",
                "plugins/json/pom.xml",
                "plugins/junit/pom.xml",
                "plugins/osgi/pom.xml",
                "plugins/oval/pom.xml",
                "plugins/pell-multipart/pom.xml",
                "plugins/plexus/pom.xml",
                "plugins/pom.xml",
                "plugins/portlet-tiles/pom.xml",
                "plugins/portlet/pom.xml",
                "plugins/rest/pom.xml",
                "plugins/sitegraph/pom.xml",
                "plugins/sitemesh/pom.xml",
                "plugins/spring/pom.xml",
                "plugins/testng/pom.xml",
                "plugins/tiles/pom.xml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0856157e27cb402e9c339b938677c55d01f645eb"
                ]
            ],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: apps/rest-showcase/pom.xml, plugins/rest/pom.xml",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: rest, plugin",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a049d1709b65ea01a2ddcee659fd74c5e5cb24bf",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511568404,
            "hunks": 23,
            "message": "WW-4875 Add rest constant configuration",
            "diff": [
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java b/plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java",
                "index 8379a027b..c2c89f544 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java",
                "@@ -52,3 +52,3 @@ public class DefaultContentTypeHandlerManager implements ContentTypeHandlerManag",
                "-    @Inject(\"struts.rest.defaultExtension\")",
                "+    @Inject(RestConstants.REST_DEFAULT_EXTENSION)",
                "     public void setDefaultExtension(String name) {",
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "index e018591c6..0067085ab 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "@@ -66,3 +66,3 @@ public class RestActionInvocation extends DefaultActionInvocation {",
                "-    @Inject(\"struts.rest.logger\")",
                "+    @Inject(RestConstants.REST_LOGGER)",
                "     public void setLogger(String logger) {",
                "@@ -71,3 +71,3 @@ public class RestActionInvocation extends DefaultActionInvocation {",
                "-    @Inject(\"struts.rest.defaultErrorResultName\")",
                "+    @Inject(RestConstants.REST_DEFAULT_ERROR_RESULT_NAME)",
                "     public void setDefaultErrorResultName(String defaultErrorResultName) {",
                "@@ -82,3 +82,3 @@ public class RestActionInvocation extends DefaultActionInvocation {",
                "      */",
                "-    @Inject(value = \"struts.rest.content.restrictToGET\", required = false)",
                "+    @Inject(value = RestConstants.REST_CONTENT_RESTRICT_TO_GET, required = false)",
                "     public void setRestrictToGet(String restrictToGet) {",
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java",
                "index 1503ae224..61fef60c2 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java",
                "@@ -132,3 +132,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-    @Inject(required=false,value=\"struts.mapper.indexMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_INDEX_METHOD_NAME)",
                "     public void setIndexMethodName(String indexMethodName) {",
                "@@ -137,3 +137,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-    @Inject(required=false,value=\"struts.mapper.getMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_GET_METHOD_NAME)",
                "     public void setGetMethodName(String getMethodName) {",
                "@@ -142,3 +142,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-    @Inject(required=false,value=\"struts.mapper.postMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_POST_METHOD_NAME)",
                "     public void setPostMethodName(String postMethodName) {",
                "@@ -147,3 +147,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-    @Inject(required=false,value=\"struts.mapper.editMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_EDIT_METHOD_NAME)",
                "     public void setEditMethodName(String editMethodName) {",
                "@@ -152,3 +152,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-    @Inject(required=false,value=\"struts.mapper.newMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_NEW_METHOD_NAME)",
                "     public void setNewMethodName(String newMethodName) {",
                "@@ -157,3 +157,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-    @Inject(required=false,value=\"struts.mapper.deleteMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_DELETE_METHOD_NAME)",
                "     public void setDeleteMethodName(String deleteMethodName) {",
                "@@ -162,3 +162,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-    @Inject(required=false,value=\"struts.mapper.putMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_PUT_METHOD_NAME)",
                "     public void setPutMethodName(String putMethodName) {",
                "@@ -167,3 +167,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-    @Inject(required=false,value=\"struts.mapper.optionsMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_OPTIONS_METHOD_NAME)",
                "     public void setOptionsMethodName(String optionsMethodName) {",
                "@@ -172,3 +172,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-    @Inject(required=false,value=\"struts.mapper.postContinueMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_POST_CONTINUE_METHOD_NAME)",
                "     public void setPostContinueMethodName(String postContinueMethodName) {",
                "@@ -177,3 +177,3 @@ public class RestActionMapper extends DefaultActionMapper {",
                "-    @Inject(required=false,value=\"struts.mapper.putContinueMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_PUT_CONTINUE_METHOD_NAME)",
                "     public void setPutContinueMethodName(String putContinueMethodName) {",
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionProxyFactory.java b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionProxyFactory.java",
                "index 3794faa8d..33227d831 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionProxyFactory.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionProxyFactory.java",
                "@@ -33,7 +33,5 @@ public class RestActionProxyFactory extends DefaultActionProxyFactory {",
                "-    public static final String STRUTS_REST_NAMESPACE = \"struts.rest.namespace\";",
                "-",
                "     protected String namespace;",
                "-    @Inject(value = STRUTS_REST_NAMESPACE, required = false)",
                "+    @Inject(value = RestConstants.STRUTS_REST_NAMESPACE, required = false)",
                "     public void setNamespace(String namespace) {",
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/RestConstants.java b/plugins/rest/src/main/java/org/apache/struts2/rest/RestConstants.java",
                "new file mode 100644",
                "index 000000000..cb47b6a93",
                "--- /dev/null",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/RestConstants.java",
                "@@ -0,0 +1,38 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.rest;",
                "+",
                "+public class RestConstants {",
                "+    public static final String REST_DEFAULT_EXTENSION = \"struts.rest.defaultExtension\";",
                "+    public static final String REST_LOGGER = \"struts.rest.logger\";",
                "+    public static final String REST_DEFAULT_ERROR_RESULT_NAME = \"struts.rest.defaultErrorResultName\";",
                "+    public static final String REST_CONTENT_RESTRICT_TO_GET = \"struts.rest.content.restrictToGET\";",
                "+    public static final String REST_MAPPER_INDEX_METHOD_NAME = \"struts.mapper.indexMethodName\";",
                "+    public static final String REST_MAPPER_GET_METHOD_NAME = \"struts.mapper.getMethodName\";",
                "+    public static final String REST_MAPPER_POST_METHOD_NAME = \"struts.mapper.postMethodName\";",
                "+    public static final String REST_MAPPER_EDIT_METHOD_NAME = \"struts.mapper.editMethodName\";",
                "+    public static final String REST_MAPPER_NEW_METHOD_NAME = \"struts.mapper.newMethodName\";",
                "+    public static final String REST_MAPPER_DELETE_METHOD_NAME = \"struts.mapper.deleteMethodName\";",
                "+    public static final String REST_MAPPER_PUT_METHOD_NAME = \"struts.mapper.putMethodName\";",
                "+    public static final String REST_MAPPER_OPTIONS_METHOD_NAME = \"struts.mapper.optionsMethodName\";",
                "+    public static final String REST_MAPPER_POST_CONTINUE_METHOD_NAME = \"struts.mapper.postContinueMethodName\";",
                "+    public static final String REST_MAPPER_PUT_CONTINUE_METHOD_NAME = \"struts.mapper.putContinueMethodName\";",
                "+    public static final String STRUTS_REST_NAMESPACE = \"struts.rest.namespace\";",
                "+    public static final String REST_VALIDATION_FAILURE_STATUS_CODE = \"struts.rest.validationFailureStatusCode\";",
                "+}",
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/RestWorkflowInterceptor.java b/plugins/rest/src/main/java/org/apache/struts2/rest/RestWorkflowInterceptor.java",
                "index 37122259b..f685fa38d 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/RestWorkflowInterceptor.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/RestWorkflowInterceptor.java",
                "@@ -148,3 +148,3 @@ public class RestWorkflowInterceptor extends MethodFilterInterceptor {",
                "-    @Inject(required=false,value=\"struts.mapper.postMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_POST_METHOD_NAME)",
                "     public void setPostMethodName(String postMethodName) {",
                "@@ -153,3 +153,3 @@ public class RestWorkflowInterceptor extends MethodFilterInterceptor {",
                "-    @Inject(required=false,value=\"struts.mapper.editMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_EDIT_METHOD_NAME)",
                "     public void setEditMethodName(String editMethodName) {",
                "@@ -158,3 +158,3 @@ public class RestWorkflowInterceptor extends MethodFilterInterceptor {",
                "-    @Inject(required=false,value=\"struts.mapper.newMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_NEW_METHOD_NAME)",
                "     public void setNewMethodName(String newMethodName) {",
                "@@ -163,3 +163,3 @@ public class RestWorkflowInterceptor extends MethodFilterInterceptor {",
                "-    @Inject(required=false,value=\"struts.mapper.putMethodName\")",
                "+    @Inject(required = false, value = RestConstants.REST_MAPPER_PUT_METHOD_NAME)",
                "     public void setPutMethodName(String putMethodName) {",
                "@@ -168,3 +168,3 @@ public class RestWorkflowInterceptor extends MethodFilterInterceptor {",
                "-    @Inject(required=false,value=\"struts.rest.validationFailureStatusCode\")",
                "+    @Inject(required = false, value = RestConstants.REST_VALIDATION_FAILURE_STATUS_CODE)",
                "     public void setValidationFailureStatusCode(String code) {",
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/config/entities/RestConstantConfig.java b/plugins/rest/src/main/java/org/apache/struts2/rest/config/entities/RestConstantConfig.java",
                "new file mode 100644",
                "index 000000000..d83f01b42",
                "--- /dev/null",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/config/entities/RestConstantConfig.java",
                "@@ -0,0 +1,196 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.rest.config.entities;",
                "+",
                "+import java.util.Map;",
                "+import java.util.Objects;",
                "+",
                "+import org.apache.struts2.config.entities.ConstantConfig;",
                "+import org.apache.struts2.rest.RestConstants;",
                "+",
                "+public class RestConstantConfig extends ConstantConfig {",
                "+    private String restDefaultExtension;",
                "+    private Boolean restLogger;",
                "+    private String restDefaultErrorResultName;",
                "+    private Boolean restContentRestrictToGet;",
                "+    private String mapperIndexMethodName;",
                "+    private String mapperGetMethodName;",
                "+    private String mapperPostMethodName;",
                "+    private String mapperEditMethodName;",
                "+    private String mapperNewMethodName;",
                "+    private String mapperDeleteMethodName;",
                "+    private String mapperPutMethodName;",
                "+    private String mapperOptionsMethodName;",
                "+    private String mapperPostContinueMethodName;",
                "+    private String mapperPutContinueMethodName;",
                "+    private String restNamespace;",
                "+    private String restValidationFailureStatusCode;",
                "+",
                "+    @Override",
                "+    public Map<String, String> getAllAsStringsMap() {",
                "+        Map<String, String> map = super.getAllAsStringsMap();",
                "+",
                "+        map.put(RestConstants.REST_DEFAULT_EXTENSION, restDefaultExtension);",
                "+        map.put(RestConstants.REST_LOGGER, Objects.toString(restLogger, null));",
                "+        map.put(RestConstants.REST_DEFAULT_ERROR_RESULT_NAME, restDefaultErrorResultName);",
                "+        map.put(RestConstants.REST_CONTENT_RESTRICT_TO_GET, Objects.toString(restContentRestrictToGet, null));",
                "+        map.put(RestConstants.REST_MAPPER_INDEX_METHOD_NAME, mapperIndexMethodName);",
                "+        map.put(RestConstants.REST_MAPPER_GET_METHOD_NAME, mapperGetMethodName);",
                "+        map.put(RestConstants.REST_MAPPER_POST_METHOD_NAME, mapperPostMethodName);",
                "+        map.put(RestConstants.REST_MAPPER_EDIT_METHOD_NAME, mapperEditMethodName);",
                "+        map.put(RestConstants.REST_MAPPER_NEW_METHOD_NAME, mapperNewMethodName);",
                "+        map.put(RestConstants.REST_MAPPER_DELETE_METHOD_NAME, mapperDeleteMethodName);",
                "+        map.put(RestConstants.REST_MAPPER_PUT_METHOD_NAME, mapperPutMethodName);",
                "+        map.put(RestConstants.REST_MAPPER_OPTIONS_METHOD_NAME, mapperOptionsMethodName);",
                "+        map.put(RestConstants.REST_MAPPER_POST_CONTINUE_METHOD_NAME, mapperPostContinueMethodName);",
                "+        map.put(RestConstants.REST_MAPPER_PUT_CONTINUE_METHOD_NAME, mapperPutContinueMethodName);",
                "+        map.put(RestConstants.STRUTS_REST_NAMESPACE, restNamespace);",
                "+        map.put(RestConstants.REST_VALIDATION_FAILURE_STATUS_CODE, restValidationFailureStatusCode);",
                "+",
                "+        return map;",
                "+    }",
                "+",
                "+    public String getRestDefaultExtension() {",
                "+        return restDefaultExtension;",
                "+    }",
                "+",
                "+    public void setRestDefaultExtension(String restDefaultExtension) {",
                "+        this.restDefaultExtension = restDefaultExtension;",
                "+    }",
                "+",
                "+    public Boolean getRestLogger() {",
                "+        return restLogger;",
                "+    }",
                "+",
                "+    public void setRestLogger(Boolean restLogger) {",
                "+        this.restLogger = restLogger;",
                "+    }",
                "+",
                "+    public String getRestDefaultErrorResultName() {",
                "+        return restDefaultErrorResultName;",
                "+    }",
                "+",
                "+    public void setRestDefaultErrorResultName(String restDefaultErrorResultName) {",
                "+        this.restDefaultErrorResultName = restDefaultErrorResultName;",
                "+    }",
                "+",
                "+    public Boolean getRestContentRestrictToGet() {",
                "+        return restContentRestrictToGet;",
                "+    }",
                "+",
                "+    public void setRestContentRestrictToGet(Boolean restContentRestrictToGet) {",
                "+        this.restContentRestrictToGet = restContentRestrictToGet;",
                "+    }",
                "+",
                "+    public String getMapperIndexMethodName() {",
                "+        return mapperIndexMethodName;",
                "+    }",
                "+",
                "+    public void setMapperIndexMethodName(String mapperIndexMethodName) {",
                "+        this.mapperIndexMethodName = mapperIndexMethodName;",
                "+    }",
                "+",
                "+    public String getMapperGetMethodName() {",
                "+        return mapperGetMethodName;",
                "+    }",
                "+",
                "+    public void setMapperGetMethodName(String mapperGetMethodName) {",
                "+        this.mapperGetMethodName = mapperGetMethodName;",
                "+    }",
                "+",
                "+    public String getMapperPostMethodName() {",
                "+        return mapperPostMethodName;",
                "+    }",
                "+",
                "+    public void setMapperPostMethodName(String mapperPostMethodName) {",
                "+        this.mapperPostMethodName = mapperPostMethodName;",
                "+    }",
                "+",
                "+    public String getMapperEditMethodName() {",
                "+        return mapperEditMethodName;",
                "+    }",
                "+",
                "+    public void setMapperEditMethodName(String mapperEditMethodName) {",
                "+        this.mapperEditMethodName = mapperEditMethodName;",
                "+    }",
                "+",
                "+    public String getMapperNewMethodName() {",
                "+        return mapperNewMethodName;",
                "+    }",
                "+",
                "+    public void setMapperNewMethodName(String mapperNewMethodName) {",
                "+        this.mapperNewMethodName = mapperNewMethodName;",
                "+    }",
                "+",
                "+    public String getMapperDeleteMethodName() {",
                "+        return mapperDeleteMethodName;",
                "+    }",
                "+",
                "+    public void setMapperDeleteMethodName(String mapperDeleteMethodName) {",
                "+        this.mapperDeleteMethodName = mapperDeleteMethodName;",
                "+    }",
                "+",
                "+    public String getMapperPutMethodName() {",
                "+        return mapperPutMethodName;",
                "+    }",
                "+",
                "+    public void setMapperPutMethodName(String mapperPutMethodName) {",
                "+        this.mapperPutMethodName = mapperPutMethodName;",
                "+    }",
                "+",
                "+    public String getMapperOptionsMethodName() {",
                "+        return mapperOptionsMethodName;",
                "+    }",
                "+",
                "+    public void setMapperOptionsMethodName(String mapperOptionsMethodName) {",
                "+        this.mapperOptionsMethodName = mapperOptionsMethodName;",
                "+    }",
                "+",
                "+    public String getMapperPostContinueMethodName() {",
                "+        return mapperPostContinueMethodName;",
                "+    }",
                "+",
                "+    public void setMapperPostContinueMethodName(String mapperPostContinueMethodName) {",
                "+        this.mapperPostContinueMethodName = mapperPostContinueMethodName;",
                "+    }",
                "+",
                "+    public String getMapperPutContinueMethodName() {",
                "+        return mapperPutContinueMethodName;",
                "+    }",
                "+",
                "+    public void setMapperPutContinueMethodName(String mapperPutContinueMethodName) {",
                "+        this.mapperPutContinueMethodName = mapperPutContinueMethodName;",
                "+    }",
                "+",
                "+    public String getRestNamespace() {",
                "+        return restNamespace;",
                "+    }",
                "+",
                "+    public void setRestNamespace(String restNamespace) {",
                "+        this.restNamespace = restNamespace;",
                "+    }",
                "+",
                "+    public String getRestValidationFailureStatusCode() {",
                "+        return restValidationFailureStatusCode;",
                "+    }",
                "+",
                "+    public void setRestValidationFailureStatusCode(String restValidationFailureStatusCode) {",
                "+        this.restValidationFailureStatusCode = restValidationFailureStatusCode;",
                "+    }",
                "+}"
            ],
            "changed_files": [
                "plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java",
                "plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java",
                "plugins/rest/src/main/java/org/apache/struts2/rest/RestActionProxyFactory.java",
                "plugins/rest/src/main/java/org/apache/struts2/rest/RestConstants.java",
                "plugins/rest/src/main/java/org/apache/struts2/rest/RestWorkflowInterceptor.java",
                "plugins/rest/src/main/java/org/apache/struts2/rest/config/entities/RestConstantConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4875": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: REST",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: plugins/rest/src/main/java/org/apache/struts2/rest/RestConstants.java, plugins/rest/src/main/java/org/apache/struts2/rest/RestActionMapper.java, plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java, plugins/rest/src/main/java/org/apache/struts2/rest/DefaultContentTypeHandlerManager.java, plugins/rest/src/main/java/org/apache/struts2/rest/RestWorkflowInterceptor.java, plugins/rest/src/main/java/org/apache/struts2/rest/config/entities/RestConstantConfig.java, plugins/rest/src/main/java/org/apache/struts2/rest/RestActionProxyFactory.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: rest",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: rest, plugin, handler",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4875",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e6787924304aceeb1b21f6d6d4aa472542494eba",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508576491,
            "hunks": 184,
            "message": "Adds missing header with license",
            "diff": [
                "diff --git a/apps/rest-showcase/src/main/resources/velocity.properties b/apps/rest-showcase/src/main/resources/velocity.properties",
                "index 629983174..5a0d48b74 100644",
                "--- a/apps/rest-showcase/src/main/resources/velocity.properties",
                "+++ b/apps/rest-showcase/src/main/resources/velocity.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " runtime.log.logsystem.class=org.apache.velocity.runtime.log.NullLogChute",
                "diff --git a/apps/showcase/src/main/resources/globalMessages.properties b/apps/showcase/src/main/resources/globalMessages.properties",
                "index d3417f788..51f6e6a23 100644",
                "--- a/apps/showcase/src/main/resources/globalMessages.properties",
                "+++ b/apps/showcase/src/main/resources/globalMessages.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " format.number = {0,number,#0.0##}",
                "diff --git a/apps/showcase/src/main/resources/globalMessages_de.properties b/apps/showcase/src/main/resources/globalMessages_de.properties",
                "index 0dc66efa8..1d20fba35 100644",
                "--- a/apps/showcase/src/main/resources/globalMessages_de.properties",
                "+++ b/apps/showcase/src/main/resources/globalMessages_de.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " save=Speichern",
                "diff --git a/apps/showcase/src/main/resources/globalMessages_en.properties b/apps/showcase/src/main/resources/globalMessages_en.properties",
                "index e69de29bb..f05fa4911 100644",
                "--- a/apps/showcase/src/main/resources/globalMessages_en.properties",
                "+++ b/apps/showcase/src/main/resources/globalMessages_en.properties",
                "@@ -0,0 +1,18 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                "\\ No newline at end of file",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/DateAction.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/DateAction.properties",
                "index d49c743a5..256d9bd6f 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/DateAction.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/DateAction.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " struts.date.format=yyyy/MM/dd hh:mm:ss",
                "\\ No newline at end of file",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/UITagExample-conversion.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/UITagExample-conversion.properties",
                "index 2415dcf3c..fc304f7b0 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/UITagExample-conversion.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/UITagExample-conversion.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " Element_friends = java.lang.String",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction-conversion.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction-conversion.properties",
                "index 21d3eda97..a67827d43 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction-conversion.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction-conversion.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " Element_selectedSkills=java.lang.String",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction.properties",
                "index e2e548b3c..836c37686 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " employee=Employee",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction_de.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction_de.properties",
                "index ca594de4d..b0fc8dfea 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction_de.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction_de.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " employee=Mitarbeiter    ",
                "@@ -5,5 +23,5 @@ employee.description=Beschreibung",
                "-employee.id.required=ID mu\u00df angegeben werden",
                "-employee.lastName.required=Nachname wird ben\u00f6tigt",
                "-employee.birthDate.required=Geburtsdatum wird ben\u00f6tigt",
                "-employee.backtolist=Zur\u00fcck zur Mitarbeiterliste",
                "+employee.id.required=ID mu\u00ef\u00bf\u00bd angegeben werden",
                "+employee.lastName.required=Nachname wird ben\u00ef\u00bf\u00bdtigt",
                "+employee.birthDate.required=Geburtsdatum wird ben\u00ef\u00bf\u00bdtigt",
                "+employee.backtolist=Zur\u00ef\u00bf\u00bdck zur Mitarbeiterliste",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction_en.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction_en.properties",
                "index e69de29bb..f05fa4911 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction_en.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction_en.properties",
                "@@ -0,0 +1,18 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                "\\ No newline at end of file",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/SkillAction.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/SkillAction.properties",
                "index 27b7c81df..b533fa610 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/SkillAction.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/SkillAction.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " skill=Skill",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/SkillAction_de.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/SkillAction_de.properties",
                "index 7c7156f71..00840a080 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/SkillAction_de.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/action/SkillAction_de.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " skill=Kenntnis",
                "@@ -5,2 +23,2 @@ skill.description=Beschreibung",
                " skill.name.required=Name muss angegeben werden",
                "-skill.backtolist=Zur\u00fcck zur Kenntnis Liste",
                "+skill.backtolist=Zur\u00ef\u00bf\u00bdck zur Kenntnis Liste",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/AddressAction-conversion.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/AddressAction-conversion.properties",
                "index 1a6d70055..d83648935 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/AddressAction-conversion.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/AddressAction-conversion.properties",
                "@@ -1,2 +1,19 @@",
                "-",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " KeyProperty_addresses=id",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/OperationsEnumAction-conversion.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/OperationsEnumAction-conversion.properties",
                "index 621beafba..7b0940617 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/OperationsEnumAction-conversion.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/OperationsEnumAction-conversion.properties",
                "@@ -1,2 +1,19 @@",
                "-",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " selectedOperations=org.apache.struts2.showcase.conversion.EnumTypeConverter",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/PersonAction-conversion.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/PersonAction-conversion.properties",
                "index 12f602f16..335a74f87 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/PersonAction-conversion.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/PersonAction-conversion.properties",
                "@@ -1 +1,20 @@",
                "+",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " Element_persons=org.apache.struts2.showcase.conversion.Person",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/fileupload/MultipleFileUploadUsingListAction-conversion.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/fileupload/MultipleFileUploadUsingListAction-conversion.properties",
                "index fbf3d7730..f37c8e7f6 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/fileupload/MultipleFileUploadUsingListAction-conversion.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/fileupload/MultipleFileUploadUsingListAction-conversion.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " Element_upload=java.io.File",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/person/EditPersonAction-conversion.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/person/EditPersonAction-conversion.properties",
                "index 00b2a0365..2fc9ae189 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/person/EditPersonAction-conversion.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/person/EditPersonAction-conversion.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " KeyProperty_persons=id",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/validation/FieldValidatorsExampleAction-conversion.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/validation/FieldValidatorsExampleAction-conversion.properties",
                "index 92859c763..dca0321ec 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/validation/FieldValidatorsExampleAction-conversion.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/validation/FieldValidatorsExampleAction-conversion.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " dateValidatorField=org.apache.struts2.showcase.chat.DateConverter",
                "diff --git a/apps/showcase/src/main/resources/org/apache/struts2/showcase/validation/FieldValidatorsExampleAction.properties b/apps/showcase/src/main/resources/org/apache/struts2/showcase/validation/FieldValidatorsExampleAction.properties",
                "index 14f04121a..244679674 100644",
                "--- a/apps/showcase/src/main/resources/org/apache/struts2/showcase/validation/FieldValidatorsExampleAction.properties",
                "+++ b/apps/showcase/src/main/resources/org/apache/struts2/showcase/validation/FieldValidatorsExampleAction.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " i18n.requiredstring=Test String for required Strings...",
                "diff --git a/apps/showcase/src/main/resources/template/ajaxErrorContainers/theme.properties b/apps/showcase/src/main/resources/template/ajaxErrorContainers/theme.properties",
                "index 81346c707..c69b670f1 100644",
                "--- a/apps/showcase/src/main/resources/template/ajaxErrorContainers/theme.properties",
                "+++ b/apps/showcase/src/main/resources/template/ajaxErrorContainers/theme.properties",
                "@@ -1,4 +1,2 @@",
                " #",
                "-# $Id$",
                "-#",
                " # Licensed to the Apache Software Foundation (ASF) under one",
                "diff --git a/apps/showcase/src/main/resources/velocity.properties b/apps/showcase/src/main/resources/velocity.properties",
                "index 629983174..5a0d48b74 100644",
                "--- a/apps/showcase/src/main/resources/velocity.properties",
                "+++ b/apps/showcase/src/main/resources/velocity.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " runtime.log.logsystem.class=org.apache.velocity.runtime.log.NullLogChute",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/interceptor/annotations/Blocked.java b/core/src/main/java/com/opensymphony/xwork2/interceptor/annotations/Blocked.java",
                "index e9a288585..630368a87 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/interceptor/annotations/Blocked.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/interceptor/annotations/Blocked.java",
                "@@ -1 +1,19 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                " package com.opensymphony.xwork2.interceptor.annotations;",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/profiling/ObjectProfiler.java b/core/src/main/java/com/opensymphony/xwork2/util/profiling/ObjectProfiler.java",
                "index fee258863..286d82bdf 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/profiling/ObjectProfiler.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/profiling/ObjectProfiler.java",
                "@@ -1 +1,20 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+",
                " /*",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/profiling/ProfilingTimerBean.java b/core/src/main/java/com/opensymphony/xwork2/util/profiling/ProfilingTimerBean.java",
                "index 11554e0ee..3706d2843 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/profiling/ProfilingTimerBean.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/profiling/ProfilingTimerBean.java",
                "@@ -1 +1,20 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+",
                " /*",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/profiling/UtilTimerStack.java b/core/src/main/java/com/opensymphony/xwork2/util/profiling/UtilTimerStack.java",
                "index c1772b838..87b577748 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/profiling/UtilTimerStack.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/profiling/UtilTimerStack.java",
                "@@ -1 +1,20 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+",
                " /*",
                "diff --git a/core/src/main/resources/com/opensymphony/xwork2/xwork-messages.properties b/core/src/main/resources/com/opensymphony/xwork2/xwork-messages.properties",
                "index 94781f5d1..95c5fa193 100644",
                "--- a/core/src/main/resources/com/opensymphony/xwork2/xwork-messages.properties",
                "+++ b/core/src/main/resources/com/opensymphony/xwork2/xwork-messages.properties",
                "@@ -1,6 +1,19 @@",
                " #",
                "-# Copyright (c) 2002-2006 by OpenSymphony",
                "-# All rights reserved.",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                " #",
                "-",
                " xwork.error.action.execution=Error during Action invocation",
                "diff --git a/core/src/main/resources/org/apache/struts2/default.properties b/core/src/main/resources/org/apache/struts2/default.properties",
                "index 561866630..9cd2c6ba0 100644",
                "--- a/core/src/main/resources/org/apache/struts2/default.properties",
                "+++ b/core/src/main/resources/org/apache/struts2/default.properties",
                "@@ -1,4 +1,2 @@",
                " #",
                "-# $Id$",
                "-#",
                " # Licensed to the Apache Software Foundation (ASF) under one",
                "diff --git a/core/src/main/resources/org/apache/struts2/struts-messages.properties b/core/src/main/resources/org/apache/struts2/struts-messages.properties",
                "index e4e5a2150..aa6e842e4 100644",
                "--- a/core/src/main/resources/org/apache/struts2/struts-messages.properties",
                "+++ b/core/src/main/resources/org/apache/struts2/struts-messages.properties",
                "@@ -1,4 +1,2 @@",
                " #",
                "-# $Id$",
                "-#",
                " # Licensed to the Apache Software Foundation (ASF) under one",
                "diff --git a/core/src/main/resources/org/apache/struts2/struts-messages_da.properties b/core/src/main/resources/org/apache/struts2/struts-messages_da.properties",
                "index 9abc034fb..42680d6ee 100644",
                "--- a/core/src/main/resources/org/apache/struts2/struts-messages_da.properties",
                "+++ b/core/src/main/resources/org/apache/struts2/struts-messages_da.properties",
                "@@ -1,4 +1,2 @@",
                " #",
                "-# $Id$",
                "-#",
                " # Licensed to the Apache Software Foundation (ASF) under one",
                "diff --git a/core/src/main/resources/org/apache/struts2/struts-messages_de.properties b/core/src/main/resources/org/apache/struts2/struts-messages_de.properties",
                "index 412e5b3b3..7f832a3b9 100644",
                "--- a/core/src/main/resources/org/apache/struts2/struts-messages_de.properties",
                "+++ b/core/src/main/resources/org/apache/struts2/struts-messages_de.properties",
                "@@ -1,4 +1,2 @@",
                " #",
                "-# $Id$",
                "-#",
                " # Licensed to the Apache Software Foundation (ASF) under one",
                "diff --git a/core/src/main/resources/org/apache/struts2/struts-messages_en.properties b/core/src/main/resources/org/apache/struts2/struts-messages_en.properties",
                "index fdd40a887..155e13c39 100644",
                "--- a/core/src/main/resources/org/apache/struts2/struts-messages_en.properties",
                "+++ b/core/src/main/resources/org/apache/struts2/struts-messages_en.properties",
                "@@ -1,4 +1,2 @@",
                " #",
                "-# $Id$",
                "-#",
                " # Licensed to the Apache Software Foundation (ASF) under one",
                "diff --git a/core/src/main/resources/org/apache/struts2/struts-messages_pl.properties b/core/src/main/resources/org/apache/struts2/struts-messages_pl.properties",
                "index 6aa4d22c7..9a84a6207 100644",
                "--- a/core/src/main/resources/org/apache/struts2/struts-messages_pl.properties",
                "+++ b/core/src/main/resources/org/apache/struts2/struts-messages_pl.properties",
                "@@ -1,4 +1,2 @@",
                " #",
                "-# $Id$",
                "-#",
                " # Licensed to the Apache Software Foundation (ASF) under one",
                "diff --git a/core/src/main/resources/org/apache/struts2/struts-messages_pt.properties b/core/src/main/resources/org/apache/struts2/struts-messages_pt.properties",
                "index 724096f6a..920bfd165 100644",
                "--- a/core/src/main/resources/org/apache/struts2/struts-messages_pt.properties",
                "+++ b/core/src/main/resources/org/apache/struts2/struts-messages_pt.properties",
                "@@ -1,4 +1,2 @@",
                " #",
                "-# $Id$",
                "-#",
                " # Licensed to the Apache Software Foundation (ASF) under one",
                "diff --git a/core/src/main/resources/struts-default-conversion.properties b/core/src/main/resources/struts-default-conversion.properties",
                "index 43d0fe95c..24767898d 100644",
                "--- a/core/src/main/resources/struts-default-conversion.properties",
                "+++ b/core/src/main/resources/struts-default-conversion.properties",
                "@@ -1 +1,19 @@",
                "+#",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                "+#",
                " java.io.File=org.apache.struts2.conversion.UploadedFileConverter",
                "diff --git a/core/src/main/resources/template/css_xhtml/theme.properties b/core/src/main/resources/template/css_xhtml/theme.properties",
                "index 81346c707..c69b670f1 100644",
                "--- a/core/src/main/resources/template/css_xhtml/theme.properties",
                "+++ b/core/src/main/resources/template/css_xhtml/theme.properties",
                "@@ -1,4 +1,2 @@",
                " #",
                "-# $Id$",
                "-#",
                " # Licensed to the Apache Software Foundation (ASF) under one",
                "diff --git a/core/src/main/resources/template/xhtml/theme.properties b/core/src/main/resources/template/xhtml/theme.properties",
                "index 84dc15580..cffee1ff8 100644",
                "--- a/core/src/main/resources/template/xhtml/theme.properties",
                "+++ b/core/src/main/resources/template/xhtml/theme.properties",
                "@@ -1,4 +1,2 @@",
                " #",
                "-# $Id$",
                "-#",
                " # Licensed to the Apache Software Foundation (ASF) under one",
                "diff --git a/plugins/embeddedjsp/src/main/java/org/apache/struts2/el/Messages.properties b/plugins/embeddedjsp/src/main/java/org/apache/struts2/el/Messages.properties",
                "index e9101e311..85a411903 100644",
                "--- a/plugins/embeddedjsp/src/main/java/org/apache/struts2/el/Messages.properties",
                "+++ b/plugins/embeddedjsp/src/main/java/org/apache/struts2/el/Messages.properties",
                "@@ -1,16 +1,19 @@",
                "-# Licensed to the Apache Software Foundation (ASF) under one or more",
                "-# contributor license agreements.  See the NOTICE file distributed with",
                "-# this work for additional information regarding copyright ownership.",
                "-# The ASF licenses this file to You under the Apache License, Version 2.0",
                "-# (the \"License\"); you may not use this file except in compliance with",
                "-# the License.  You may obtain a copy of the License at",
                " #",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                " #",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-",
                " # General Errors",
                "diff --git a/plugins/embeddedjsp/src/main/java/org/apache/struts2/el/Messages_es.properties b/plugins/embeddedjsp/src/main/java/org/apache/struts2/el/Messages_es.properties",
                "index 608a6e4d5..01d6ca2e4 100644",
                "--- a/plugins/embeddedjsp/src/main/java/org/apache/struts2/el/Messages_es.properties",
                "+++ b/plugins/embeddedjsp/src/main/java/org/apache/struts2/el/Messages_es.properties",
                "@@ -1,16 +1,19 @@",
                "-# Licensed to the Apache Software Foundation (ASF) under one or more",
                "-# contributor license agreements.  See the NOTICE file distributed with",
                "-# this work for additional information regarding copyright ownership.",
                "-# The ASF licenses this file to You under the Apache License, Version 2.0",
                "-# (the \"License\"); you may not use this file except in compliance with",
                "-# the License.  You may obtain a copy of the License at",
                " #",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                "+#",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                " #",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-",
                " error.convert = No puedo convertir {0} desde tipo {1} a {2}",
                "diff --git a/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings.properties b/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings.properties",
                "index f8c38c5e2..1a4cf9c21 100644",
                "--- a/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings.properties",
                "+++ b/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings.properties",
                "@@ -1,18 +1,20 @@",
                "-# Licensed to the Apache Software Foundation (ASF) under one or more",
                "-# contributor license agreements.  See the NOTICE file distributed with",
                "-# this work for additional information regarding copyright ownership.",
                "-# The ASF licenses this file to You under the Apache License, Version 2.0",
                "-# (the \"License\"); you may not use this file except in compliance with",
                "-# the License.  You may obtain a copy of the License at",
                " #",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                " #",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-",
                "-# $Id: LocalStrings.properties 685823 2008-08-14 09:04:26Z markt $",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                " #",
                "+",
                " # Default localized string information",
                "diff --git a/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_es.properties b/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_es.properties",
                "index b101db5d3..5a1597d27 100644",
                "--- a/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_es.properties",
                "+++ b/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_es.properties",
                "@@ -1,18 +1,20 @@",
                "-# Licensed to the Apache Software Foundation (ASF) under one or more",
                "-# contributor license agreements.  See the NOTICE file distributed with",
                "-# this work for additional information regarding copyright ownership.",
                "-# The ASF licenses this file to You under the Apache License, Version 2.0",
                "-# (the \"License\"); you may not use this file except in compliance with",
                "-# the License.  You may obtain a copy of the License at",
                " #",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                " #",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-",
                "-# $Id: LocalStrings_es.properties 565193 2007-08-12 22:53:10Z markt $",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                " #",
                "+",
                " # Default localized string information",
                "@@ -20,5 +22,5 @@",
                "-jsp.error.bad.servlet.engine=\u00a1Versi\u00f3n incorrecta del motor servlet!",
                "+jsp.error.bad.servlet.engine=\u00ef\u00bf\u00bdVersi\u00ef\u00bf\u00bdn incorrecta del motor servlet!",
                " jsp.error.no.scratch.dir=El motor JSP no tiene configurado un directorio de trabajo.\\",
                "-\\n A\u00f1ada \\\"jsp.initparams=scratchdir=<dir-name>\\\" \\",
                "+\\n A\u00ef\u00bf\u00bdada \\\"jsp.initparams=scratchdir=<dir-name>\\\" \\",
                " \\n en el fichero servlets.properties para este contexto.",
                "@@ -40,6 +42,6 @@ jsp.error.not.impl.include=Error Interno: include no implementado",
                " jsp.error.unavailable=JSP ha sido marcado como no disponible",
                "-jsp.error.usebean.missing.attribute=useBean: falta atributo id o est\u00e1 mal digitado",
                "+jsp.error.usebean.missing.attribute=useBean: falta atributo id o est\u00ef\u00bf\u00bd mal digitado",
                " jsp.error.usebean.missing.type=useBean ({0}): Se debe de especificar atributo class o type:",
                " jsp.error.usebean.duplicate=useBean: Nombre de bean duplicado: {0}",
                "-jsp.error.usebean.prohibited.as.session=No puedo usar como bean de sesi\u00f3n {0} ya que est\u00e1 prohibido \\",
                "+jsp.error.usebean.prohibited.as.session=No puedo usar como bean de sesi\u00ef\u00bf\u00bdn {0} ya que est\u00ef\u00bf\u00bd prohibido \\",
                " por directiva jsp definida previamente: ",
                "@@ -50,21 +52,21 @@ jsp.error.classname=No pude determinar el nombre de clase desde el fichero .clas",
                " jsp.warning.bad.type=Aviso: tipo incorrecto en archivo .class",
                "-jsp.error.data.file.write=Error mientras escrib\u00eda el archivo de datos",
                "-jsp.error.page.invalid.buffer=Directiva Page: medida de buffer inv\u00e1lida",
                "-jsp.error.page.conflict.contenttype=Directiva Page: es ilegal tener m\u00faltiples ocurrencias de 'contentType' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.data.file.write=Error mientras escrib\u00ef\u00bf\u00bda el archivo de datos",
                "+jsp.error.page.invalid.buffer=Directiva Page: medida de buffer inv\u00ef\u00bf\u00bdlida",
                "+jsp.error.page.conflict.contenttype=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'contentType' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.contenttype=Directiva Page: valor incorrecto para contentType",
                "-jsp.error.page.conflict.session=Directiva Page: es ilegal tener m\u00faltiples ocurrencias de 'session' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.session=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'session' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.session=Directiva Page: valor incorrecto para session",
                "-jsp.error.page.conflict.buffer=Directiva Page: es ilegal tener m\u00faltiples ocurrencias de 'buffer'con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.buffer=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'buffer'con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.buffer=Directiva Page: valor incorrecto para buffer",
                "-jsp.error.page.conflict.autoflush=Directiva Page: es ilegal tener m\u00faltiples ocurrencias de 'autoFlush' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.autoflush=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'autoFlush' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.autoflush==Directiva Page: valor incorrecto para autoFlush",
                "-jsp.error.page.conflict.isthreadsafe=Directiva Page: es ilegal tener m\u00faltiples ocurrencias de 'isThreadSafe' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.isthreadsafe=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'isThreadSafe' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.isthreadsafe==Directiva Page: valor incorrecto para isThreadSafe",
                "-jsp.error.page.conflict.info=Directiva Page: es ilegal tener m\u00faltiples ocurrencias de 'info' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.info=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'info' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.info==Directiva Page: valor incorrecto para info",
                "-jsp.error.page.conflict.iserrorpage=Directiva Page: es ilegal tener m\u00faltiples ocurrencias de 'isErrorPage' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.iserrorpage=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'isErrorPage' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.iserrorpage==Directiva Page: valor incorrecto para isErrorPage",
                "-jsp.error.page.conflict.errorpage=Directiva Page: es ilegal tener m\u00faltiples ocurrencias de 'errorPage' con valores distintos (viejo: {0}, nuevo: {1})",
                "-jsp.error.page.conflict.language=Directiva Page: es ilegal tener m\u00faltiples ocurrencias de 'language' con valores distintos (viejo: {0}, nuevo: {1})",
                "-jsp.error.tag.conflict.language=Directiva Tag: es ilegal tener m\u00faltiples ocurrencias de 'language' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.errorpage=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'errorPage' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.language=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'language' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.tag.conflict.language=Directiva Tag: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'language' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.language.nonjava=Directiva Page: atributo language incorrecto",
                "@@ -73,26 +75,26 @@ jsp.error.page.defafterusar.language=Directiva Page: No puede definir language t",
                " jsp.error.page.nomapping.language=Directiva Page: No hay mapeado para language: ",
                "-jsp.error.page.conflict.extends=Directiva Page: es ilegal tener m\u00faltiples ocurrencias de 'extends' con valores distintos (viejo: {0}, nuevo: {1})",
                "-jsp.error.page.conflict.iselignored=Directiva Page: es ilegal tener m\u00faltiples ocurrencias de 'isELIgnored' con valores distintos (viejo: {0}, nuevo: {1})",
                "-jsp.error.tag.conflict.iselignored=Directiva Tag: es ilegal tener m\u00faltiples ocurrencias de 'isELIgnored' con valores distintos (viejo: {0}, nuevo: {1})",
                "-jsp.error.page.invalid.iselignored=Directiva Page: valor inv\u00e1lido para isELIgnored",
                "+jsp.error.page.conflict.extends=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'extends' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.iselignored=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'isELIgnored' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.tag.conflict.iselignored=Directiva Tag: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'isELIgnored' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.invalid.iselignored=Directiva Page: valor inv\u00ef\u00bf\u00bdlido para isELIgnored",
                " jsp.error.tag.invalid.iselignored=Directiva Tag: valor incorrecto para isELIgnored",
                "-jsp.error.page.multi.pageencoding=La directiva Page no debe de tener m\u00faltiples ocurrencias de pageencoding",
                "-jsp.error.tag.conflict.attr=Directiva Tag: es ilegal tener m\u00faltiples ocurrencias del atributo \\\"{0}\\\" con valores distintos (viejo: {1}, nuevo: {2})",
                "-jsp.error.tag.multi.pageencoding=La directiva Tag no debe de tener m\u00faltiples ocurrencias de pageencoding",
                "-jsp.error.page.bad_b_and_a_combo=Directiva Page: Combinaci\u00f3n ilegal de buffer=\\\"none\\\" y autoFlush=\\\"false\\\"",
                "+jsp.error.page.multi.pageencoding=La directiva Page no debe de tener m\u00ef\u00bf\u00bdltiples ocurrencias de pageencoding",
                "+jsp.error.tag.conflict.attr=Directiva Tag: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias del atributo \\\"{0}\\\" con valores distintos (viejo: {1}, nuevo: {2})",
                "+jsp.error.tag.multi.pageencoding=La directiva Tag no debe de tener m\u00ef\u00bf\u00bdltiples ocurrencias de pageencoding",
                "+jsp.error.page.bad_b_and_a_combo=Directiva Page: Combinaci\u00ef\u00bf\u00bdn ilegal de buffer=\\\"none\\\" y autoFlush=\\\"false\\\"",
                " jsp.error.not.impl.taglib=Error Interno: Tag extensions no implementado",
                " jsp.error.include.missing.file=No tiene argumento de nombre de fichero ",
                "-jsp.error.include.bad.file=Argumento de nombre de fichero no v\u00e1lido",
                "+jsp.error.include.bad.file=Argumento de nombre de fichero no v\u00ef\u00bf\u00bdlido",
                " jsp.error.include.exception=No se puede incluir {0}",
                " jsp.error.stream.closed=Stream cerrado",
                "-jsp.error.invalid.forward=Tag forward no v\u00e1lido",
                "-jsp.error.unknownException=\u00a1Error no caturado!. Deber\u00edas de considerar el poner una p\u00e1gina de error para avisar de los errores m\u00e1s elegantemente",
                "-jsp.error.invalid.directive=Directiva no v\u00e1lida",
                "+jsp.error.invalid.forward=Tag forward no v\u00ef\u00bf\u00bdlido",
                "+jsp.error.unknownException=\u00ef\u00bf\u00bdError no caturado!. Deber\u00ef\u00bf\u00bdas de considerar el poner una p\u00ef\u00bf\u00bdgina de error para avisar de los errores m\u00ef\u00bf\u00bds elegantemente",
                "+jsp.error.invalid.directive=Directiva no v\u00ef\u00bf\u00bdlida",
                " jsp.error.directive.istagfile=La Directiva {0} no puede usarse en archivo de tag",
                "-jsp.error.directive.isnottagfile=La Directiva {0} s\u00f3lo se puede usar en un archivo de tag",
                "+jsp.error.directive.isnottagfile=La Directiva {0} s\u00ef\u00bf\u00bdlo se puede usar en un archivo de tag",
                " jsp.error.tagfile.tld.name=El atributo \\\"name\\\" de la directiva tag tiene un valor {0} mientras que el tag \\\"name\\\" del elemento \\\"tag-file\\\" en el TLD es {1}",
                "-jsp.error.action.istagfile=La acci\u00f3n {0} no se puede usar en un archivo tag",
                "-jsp.error.action.isnottagfile=La acci\u00f3n {0} s\u00f3lo se puede usar en archivos tag",
                "+jsp.error.action.istagfile=La acci\u00ef\u00bf\u00bdn {0} no se puede usar en un archivo tag",
                "+jsp.error.action.isnottagfile=La acci\u00ef\u00bf\u00bdn {0} s\u00ef\u00bf\u00bdlo se puede usar en archivos tag",
                " jsp.error.unterminated=Tag {0} no terminado",
                "-jsp.error.usebean.notinsamefile=El Tag useBean debe de empezar y terminar en el mismo archivo f\u00edsico",
                "+jsp.error.usebean.notinsamefile=El Tag useBean debe de empezar y terminar en el mismo archivo f\u00ef\u00bf\u00bdsico",
                " jsp.error.loadclass.taghandler=No se puede cargar la clase {0}",
                "@@ -107,6 +109,6 @@ jsp.error.usebean.class.notfound=Clase: {0} no hallada",
                " jsp.error.file.cannot.read=No se puede leer el archivo: {0}",
                "-jsp.error.file.already.registered=El archivo {0} ya se ha visto, \u00bfpodr\u00eda ser un include recursivo?",
                "+jsp.error.file.already.registered=El archivo {0} ya se ha visto, \u00ef\u00bf\u00bdpodr\u00ef\u00bf\u00bda ser un include recursivo?",
                " jsp.error.file.not.registered=Archivo {0} not visto en include",
                " jsp.error.quotes.unterminated=Comillas no terminadas",
                "-jsp.error.attr.quoted=El valor del atributo deber\u00eda ir entre comillas",
                "+jsp.error.attr.quoted=El valor del atributo deber\u00ef\u00bf\u00bda ir entre comillas",
                " jsp.error.attr.novalue=Atributo {0} no tiene valor",
                "@@ -115,20 +117,20 @@ jsp.error.param.noname=No hay nombre en el tag PARAM",
                " jsp.error.param.novalue=No hay valor en el tag PARAM",
                "-jsp.error.beans.nullbean=Se ha intentado una operaci\u00f3n de bean en un objeto nulo",
                "+jsp.error.beans.nullbean=Se ha intentado una operaci\u00ef\u00bf\u00bdn de bean en un objeto nulo",
                " jsp.error.beans.nobeaninfo=No se puede encontrar BeanInfo para el bean  ''{0}'' seguramente la clase no existe",
                "-jsp.error.beans.introspection=Una excepci\u00f3n ha tenido lugar mientras se le\u00eda el m\u00e9todo de lectura de la propiedad ''{0}'' en un bean del tipo ''{1}'':\\n{2}",
                "-jsp.error.beans.nomethod=No puedo encontrar un m\u00e9todo para leer la propiedad ''{0}'' en un bean del tipo ''{1}''",
                "-jsp.error.beans.nomethod.setproperty=No puedo encontrar un m\u00e9todo para escribir la propiedad ''{0}'' en un bean del tipo ''{2}''",
                "-jsp.error.beans.noproperty=No puedo encontrar informaci\u00f3n de la propiedad ''{0}'' en un bean del tipo ''{1}''",
                "+jsp.error.beans.introspection=Una excepci\u00ef\u00bf\u00bdn ha tenido lugar mientras se le\u00ef\u00bf\u00bda el m\u00ef\u00bf\u00bdtodo de lectura de la propiedad ''{0}'' en un bean del tipo ''{1}'':\\n{2}",
                "+jsp.error.beans.nomethod=No puedo encontrar un m\u00ef\u00bf\u00bdtodo para leer la propiedad ''{0}'' en un bean del tipo ''{1}''",
                "+jsp.error.beans.nomethod.setproperty=No puedo encontrar un m\u00ef\u00bf\u00bdtodo para escribir la propiedad ''{0}'' en un bean del tipo ''{2}''",
                "+jsp.error.beans.noproperty=No puedo encontrar informaci\u00ef\u00bf\u00bdn de la propiedad ''{0}'' en un bean del tipo ''{1}''",
                " jsp.error.beans.setproperty.noindexset=No puedo poner la propiedad indexada",
                "-jsp.error.include.tag=Tag jsp:include no v\u00e1lido",
                "+jsp.error.include.tag=Tag jsp:include no v\u00ef\u00bf\u00bdlido",
                " jsp.error.include.noflush=jsp:include necesita tener \\\"flush=true\\\"",
                "-jsp.error.include.badflush=jsp:include page=\\\"...\\\" flush=\\\"true\\\" es la \u00fanica combinaci\u00f3n v\u00e1lida en JSP 1.0",
                "-jsp.error.attempt_to_clear_flushed_buffer=Error: Se ha intentado limpiar un buffer que ya hab\u00eda sido escrito",
                "+jsp.error.include.badflush=jsp:include page=\\\"...\\\" flush=\\\"true\\\" es la \u00ef\u00bf\u00bdnica combinaci\u00ef\u00bf\u00bdn v\u00ef\u00bf\u00bdlida en JSP 1.0",
                "+jsp.error.attempt_to_clear_flushed_buffer=Error: Se ha intentado limpiar un buffer que ya hab\u00ef\u00bf\u00bda sido escrito",
                " jsp.error.overflow=Error:Buffer de JSP desbordado",
                "-jsp.error.paramexpected=El tag \\\"param\\\" era esperado con los atributos \\\"name\\\" y \\\"value\\\" despu\u00e9s del tag \\\"params\\\".",
                "-jsp.error.param.invalidUse=La acci\u00f3n jsp:param no debe de ser usada fuera de los elementos jsp:include, jsp:forward o jsp:params",
                "+jsp.error.paramexpected=El tag \\\"param\\\" era esperado con los atributos \\\"name\\\" y \\\"value\\\" despu\u00ef\u00bf\u00bds del tag \\\"params\\\".",
                "+jsp.error.param.invalidUse=La acci\u00ef\u00bf\u00bdn jsp:param no debe de ser usada fuera de los elementos jsp:include, jsp:forward o jsp:params",
                " jsp.error.params.invalidUse=jsp:params debe de ser un hijo directo de jsp:plugin",
                " jsp.error.fallback.invalidUse=jsp:fallback debe de ser un hijo directo de jsp:plugin",
                "-jsp.error.namedAttribute.invalidUse=jsp:attribute debe de ser el subelemento de una acci\u00f3n est\u00e1ndar o de cliente",
                "-jsp.error.jspbody.invalidUse=jsp:body debe de ser el subelemento de una acci\u00f3n est\u00e1ndar o de cliente",
                "+jsp.error.namedAttribute.invalidUse=jsp:attribute debe de ser el subelemento de una acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar o de cliente",
                "+jsp.error.jspbody.invalidUse=jsp:body debe de ser el subelemento de una acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar o de cliente",
                " jsp.error.closeindividualparam=El tag param necesita ser cerrado con \\\"/>\\\"",
                "@@ -139,4 +141,4 @@ jsp.error.plugin.notype=Tipo no declarado en jsp:plugin",
                " jsp.error.plugin.badtype=Valor ilegal para atributo 'type' en jsp:plugin: debe de ser 'bean' o 'applet'",
                "-jsp.error.plugin.nocode=C\u00f3digo no declarado en jsp:plugin",
                "-jsp.error.ise_on_clear=Es ilegal usar clear() cuando el tama\u00f1o del buffer es cero",
                "+jsp.error.plugin.nocode=C\u00ef\u00bf\u00bddigo no declarado en jsp:plugin",
                "+jsp.error.ise_on_clear=Es ilegal usar clear() cuando el tama\u00ef\u00bf\u00bdo del buffer es cero",
                " jsp.error.setproperty.beanNotFound=setProperty: Bean {0} no encontrado",
                "@@ -149,17 +151,17 @@ jsp.error.setproperty.beanInfoNotFound=setproperty: beanInfo para bean {0} no en",
                " jsp.error.setproperty.paramOrValue=setProperty: O param o value pueden estar presentes",
                "-jsp.error.setproperty.arrayVal=setProperty: No puede escribir en la propiedad de array {0} a trav\u00e9s de una valor de cadena literal",
                "-jsp.warning.keepgen=Aviso: valor incorrecto para el initParam keepgen. Se usar\u00e1 el valor por defecto de \\\"false\\\"",
                "-jsp.warning.xpoweredBy=Aviso: valor incorrecto para el initParam xpoweredBy. Se usar\u00e1 el valor por defecto de \\\"false\\\"",
                "-jsp.warning.enablePooling=Aviso: valor incorrecto para el initParam enablePooling. Se usar\u00e1 el valor por defecto de \\\"true\\\"",
                "-jsp.warning.invalidTagPoolSize=Aviso: valor incorrecto para el par\u00e1metro init llamado tagPoolSize. Se usar\u00e1 la medida por defecto de {0}",
                "-jsp.warning.mappedFile=Aviso: valor incorrecto para el initParam mappedFile. Se usar\u00e1 el valor por defecto de \\\"false\\\"",
                "-jsp.warning.sendErrToClient=Aviso: valor incorrecto para el initParam sendErrToClient. Se usar\u00e1 el valor por defecto de \\\"false\\\"",
                "-jsp.warning.classDebugInfo=Aviso: valor incorrecto para el initParam classdebuginfo. Se usar\u00e1 el valor por defecto de \\\"false\\\"",
                "-jsp.warning.checkInterval=Aviso: valor incorrecto para el initParam checkInterval. Se usar\u00e1 el valor por defecto de \\\"300\\\" segundos",
                "-jsp.warning.development=Aviso: valor incorrecto para el initParam development. Se usar\u00e1 el valor por defecto de \\\"true\\\"",
                "-jsp.warning.fork=Aviso: valor incorrecto para el initParam fork. Se usar\u00e1 el valor por defecto de \\\"true\\\"",
                "-jsp.warning.reloading=Aviso: valor incorrecto para el initParam reloading. Se usar\u00e1 el valor por defecto de \\\"true\\\"",
                "-jsp.warning.dumpSmap=Aviso: valor incorrecto para el initParam dumpSmap. Se usar\u00e1 el valor por defecto de \\\"false\\\"",
                "-jsp.warning.genchararray=Aviso: valor incorrecto para el initParam genStrAsCharArray. Se usar\u00e1 el valor por defecto de \\\"false\\\"",
                "-jsp.warning.suppressSmap=Aviso: valor incorrecto para el initParam suppressSmap. Se usar\u00e1 el valor por defecto de \\\"false\\\"",
                "+jsp.error.setproperty.arrayVal=setProperty: No puede escribir en la propiedad de array {0} a trav\u00ef\u00bf\u00bds de una valor de cadena literal",
                "+jsp.warning.keepgen=Aviso: valor incorrecto para el initParam keepgen. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "+jsp.warning.xpoweredBy=Aviso: valor incorrecto para el initParam xpoweredBy. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "+jsp.warning.enablePooling=Aviso: valor incorrecto para el initParam enablePooling. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"true\\\"",
                "+jsp.warning.invalidTagPoolSize=Aviso: valor incorrecto para el par\u00ef\u00bf\u00bdmetro init llamado tagPoolSize. Se usar\u00ef\u00bf\u00bd la medida por defecto de {0}",
                "+jsp.warning.mappedFile=Aviso: valor incorrecto para el initParam mappedFile. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "+jsp.warning.sendErrToClient=Aviso: valor incorrecto para el initParam sendErrToClient. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "+jsp.warning.classDebugInfo=Aviso: valor incorrecto para el initParam classdebuginfo. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "+jsp.warning.checkInterval=Aviso: valor incorrecto para el initParam checkInterval. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"300\\\" segundos",
                "+jsp.warning.development=Aviso: valor incorrecto para el initParam development. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"true\\\"",
                "+jsp.warning.fork=Aviso: valor incorrecto para el initParam fork. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"true\\\"",
                "+jsp.warning.reloading=Aviso: valor incorrecto para el initParam reloading. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"true\\\"",
                "+jsp.warning.dumpSmap=Aviso: valor incorrecto para el initParam dumpSmap. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "+jsp.warning.genchararray=Aviso: valor incorrecto para el initParam genStrAsCharArray. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "+jsp.warning.suppressSmap=Aviso: valor incorrecto para el initParam suppressSmap. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                " jsp.error.badtaglib=No se puede abrir la biblioteca de tags {0}: {1}",
                "@@ -174,8 +176,8 @@ jsp.warning.unknown.element.in.initParam=Elemento desconocido ({0}) en init-para",
                " jsp.warning.unknown.element.in.function=Elemento desconocido ({0}) en function",
                "-jsp.error.more.than.one.taglib=M\u00e1s de una biblioteca de tags en el TLD: {0}",
                "+jsp.error.more.than.one.taglib=M\u00ef\u00bf\u00bds de una biblioteca de tags en el TLD: {0}",
                " jsp.error.teiclass.instantiation=No se puede cargar la clase TagExtraInfo llamada: {0}",
                "-jsp.error.non_null_tei_and_var_subelems=Tag {0} tiene uno o m\u00e1s subelementos variable y una clase TagExtraInfo que devuelve una o m\u00e1s VariableInfo",
                "-jsp.error.parse.error.in.TLD=Error de an\u00e1lisis en el descriptor de biblioteca de tags: {0}",
                "+jsp.error.non_null_tei_and_var_subelems=Tag {0} tiene uno o m\u00ef\u00bf\u00bds subelementos variable y una clase TagExtraInfo que devuelve una o m\u00ef\u00bf\u00bds VariableInfo",
                "+jsp.error.parse.error.in.TLD=Error de an\u00ef\u00bf\u00bdlisis en el descriptor de biblioteca de tags: {0}",
                " jsp.error.unable.to.open.TLD=No se puede abrir el descriptor de biblioteca de tags: {0}",
                "-jsp.buffer.size.zero=Tama\u00f1o de buffer <= 0",
                "+jsp.buffer.size.zero=Tama\u00ef\u00bf\u00bdo de buffer <= 0",
                " jsp.error.file.not.found=Archivo JSP \\\"{0}\\\" no encontrado",
                "@@ -189,4 +191,4 @@ jsp.message.java_file_name_is=El Nombre del Archivo Java es: {0}",
                " jsp.message.class_file_name_is=El Nombre del Archivo de clase es: {0}",
                "-jsp.message.accepted=Acept\u00f3 {0} en {1}",
                "-jsp.message.adding_jar=A\u00f1adiendo jar {0} a mi classpath",
                "+jsp.message.accepted=Acept\u00ef\u00bf\u00bd {0} en {1}",
                "+jsp.message.adding_jar=A\u00ef\u00bf\u00bdadiendo jar {0} a mi classpath",
                " jsp.message.compiling_with=Compilado con: {0}",
                "@@ -194,3 +196,3 @@ jsp.message.template_text=texto plantilla",
                " jsp.error.missing_attribute=De acuerdo con el TLD el atributo {0} es obligatorio para el tag {1}",
                "-jsp.error.bad_attribute=El atributo {0} no es v\u00e1lido seg\u00fan el TLD especificado",
                "+jsp.error.bad_attribute=El atributo {0} no es v\u00ef\u00bf\u00bdlido seg\u00ef\u00bf\u00bdn el TLD especificado",
                " jsp.error.tld.unable_to_read=Imposible de leer TLD \\\"{1}\\\" desde archivo JAR \\\"{0}\\\": {2}",
                "@@ -202,14 +204,14 @@ jsp.message.cp_is=Classpath {0} es: {1}",
                " jsp.error.unable.to_load_taghandler_class=No se puede cargar clase manejadora {0} del tag a causa de {1}",
                "-jsp.error.unable.to_find_method=No se puede encontrar el m\u00e9todo de escritura para el atributo: {0}",
                "+jsp.error.unable.to_find_method=No se puede encontrar el m\u00ef\u00bf\u00bdtodo de escritura para el atributo: {0}",
                " jsp.error.unable.to_convert_string=No pude convertir un String a {0} para atributo {1}",
                "-jsp.error.unable.to_introspect=No se puede hacer introspecci\u00f3n en manejador de tag clase: {0} a causa de {1}",
                "+jsp.error.unable.to_introspect=No se puede hacer introspecci\u00ef\u00bf\u00bdn en manejador de tag clase: {0} a causa de {1}",
                " jsp.error.bad_tag=No existe el tag {0} en la biblioteca importada con prefijo {1}",
                " jsp.error.xml.bad_tag=No se ha definido el tag \\\"{0}\\\" en la biblioteca tag asociada con uri \\\"{1}\\\"",
                "-jsp.error.bad_string_Character=No puede extraer un Character desde un array de tama\u00f1o cero",
                "-jsp.error.bad_string_char=No puede extraer un char desde un array de tama\u00f1o cero",
                "-jsp.warning.compiler.class.cantcreate=No puedo crear una instancia de la clase especificada {0} de plugin del compilador debido a {1}. Se usar\u00e1 el compilador Java de Sun.",
                "-jsp.warning.compiler.class.notfound=No puedo encontrar una instancia de la clase {0} de plugin de compilador. Se usar\u00e1 el compilador del Java de Sun.",
                "-jsp.warning.compiler.path.notfound=Trayectoria del compilador especificado {0} no encontrada. Se usar\u00e1 el PATH del sistema.",
                "-jsp.error.jspc.uriroot_not_dir=La opci\u00f3n -uriroot debe de especificar un directorio ya existente",
                "-jsp.error.jspc.missingTarget=Falta target: Debe de especificar -webapp o -uriroot o una o m\u00e1s p\u00e1ginas JSP",
                "+jsp.error.bad_string_Character=No puede extraer un Character desde un array de tama\u00ef\u00bf\u00bdo cero",
                "+jsp.error.bad_string_char=No puede extraer un char desde un array de tama\u00ef\u00bf\u00bdo cero",
                "+jsp.warning.compiler.class.cantcreate=No puedo crear una instancia de la clase especificada {0} de plugin del compilador debido a {1}. Se usar\u00ef\u00bf\u00bd el compilador Java de Sun.",
                "+jsp.warning.compiler.class.notfound=No puedo encontrar una instancia de la clase {0} de plugin de compilador. Se usar\u00ef\u00bf\u00bd el compilador del Java de Sun.",
                "+jsp.warning.compiler.path.notfound=Trayectoria del compilador especificado {0} no encontrada. Se usar\u00ef\u00bf\u00bd el PATH del sistema.",
                "+jsp.error.jspc.uriroot_not_dir=La opci\u00ef\u00bf\u00bdn -uriroot debe de especificar un directorio ya existente",
                "+jsp.error.jspc.missingTarget=Falta target: Debe de especificar -webapp o -uriroot o una o m\u00ef\u00bf\u00bds p\u00ef\u00bf\u00bdginas JSP",
                " jsp.error.jspc.no_uriroot=No se ha especificado uriroot y no puede ser localizado en los archivos JSP especificados",
                "@@ -219,5 +221,5 @@ donde <Archivos JSP> son:\\n\\",
                " \\    -webapp <dir>      Un directorio conteniendo una web-app. Todas las\\n\\",
                "-\\                       p\u00e1ginas jsp ser\u00e1n compiladas recursivamente\\n\\",
                "-o cualquier n\u00famero de\\n\\",
                "-\\    <Archivo>          Un Archivo para ser interpretado como una p\u00e1gina jsp\\n\\",
                "+\\                       p\u00ef\u00bf\u00bdginas jsp ser\u00ef\u00bf\u00bdn compiladas recursivamente\\n\\",
                "+o cualquier n\u00ef\u00bf\u00bdmero de\\n\\",
                "+\\    <Archivo>          Un Archivo para ser interpretado como una p\u00ef\u00bf\u00bdgina jsp\\n\\",
                " y donde <opciones> incluyen:\\n\\",
                "@@ -226,4 +228,4 @@ y donde <opciones> incluyen:\\n\\",
                " \\    -d <dir>           Directorio de salida\\n\\",
                "-\\    -l                 Muestra el nombre de la p\u00e1gina JSP al ocurrir un fallo\\n\\",
                "-\\    -s                 Muestra el nombre de la p\u00e1gina JSP al tener \u00e9xito\\n\\",
                "+\\    -l                 Muestra el nombre de la p\u00ef\u00bf\u00bdgina JSP al ocurrir un fallo\\n\\",
                "+\\    -s                 Muestra el nombre de la p\u00ef\u00bf\u00bdgina JSP al tener \u00ef\u00bf\u00bdxito\\n\\",
                " \\    -p <name>          Nombre del package objetivo\\n\\",
                "@@ -231,6 +233,6 @@ y donde <opciones> incluyen:\\n\\",
                " \\    -c <name>          Nombre de la clase objetivo\\n\\",
                "-\\                       (s\u00f3lo se aplica a la primera p\u00e1gina JSP)\\n\\",
                "-\\    -mapped            Genera llamadas separadas a write() para cada l\u00ednea de\\n\\",
                "+\\                       (s\u00ef\u00bf\u00bdlo se aplica a la primera p\u00ef\u00bf\u00bdgina JSP)\\n\\",
                "+\\    -mapped            Genera llamadas separadas a write() para cada l\u00ef\u00bf\u00bdnea de\\n\\",
                " \\                       HTML en el JSP\\n\\",
                "-\\    -die[#]            Genera un c\u00f3digo de retorno de error (#) en errores\\n\\",
                "+\\    -die[#]            Genera un c\u00ef\u00bf\u00bddigo de retorno de error (#) en errores\\n\\",
                " \\                       fatales. (por defecto 1).\\n\\",
                "@@ -244,3 +246,3 @@ y donde <opciones> incluyen:\\n\\",
                " \\    -classpath <path>  Pasa por alto la propiedad de sistema java.class.path\\n\\",
                "-\\    -xpoweredBy        A\u00f1ade cabecera de respuesta  X-Powered-By\\n\\",
                "+\\    -xpoweredBy        A\u00ef\u00bf\u00bdade cabecera de respuesta  X-Powered-By\\n\\",
                " \\    -trimSpaces        Trim spaces in template text between actions, directives\\n\\",
                "@@ -274,3 +276,3 @@ Los Elementos: session-config, mime-mapping, welcome-file-list, error-page, tagl",
                " resource-ref, security-constraint, login-config, security-role,\\n\\",
                "-env-entry y ejb-ref deber\u00e1n de ir despu\u00e9s de este fragmento .\\n\\",
                "+env-entry y ejb-ref deber\u00ef\u00bf\u00bdn de ir despu\u00ef\u00bf\u00bds de este fragmento .\\n\\",
                " -->\\n",
                "@@ -278,17 +280,17 @@ jspc.webinc.insertEnd=<!-- Fin de mapeos de servlet JSPC -->",
                " jspc.webinc.insertStart=<!-- Inicio de mapeos de servlet JSPC -->",
                "-jspc.error.jasperException=error-el archivo ''{0}'' ha generado la excepci\u00f3n de sint\u00e1xis siguiente: {1}",
                "-jspc.error.generalException=ERROR-el archivo ''{0}'' ha generado la excepci\u00f3n general siguiente:",
                "+jspc.error.jasperException=error-el archivo ''{0}'' ha generado la excepci\u00ef\u00bf\u00bdn de sint\u00ef\u00bf\u00bdxis siguiente: {1}",
                "+jspc.error.generalException=ERROR-el archivo ''{0}'' ha generado la excepci\u00ef\u00bf\u00bdn general siguiente:",
                " jspc.error.fileDoesNotExist=El archivo ''{0}'' utilizado como argumento no existe.",
                " jspc.error.emptyWebApp=-webapp necesita un argumento de archivo",
                "-jsp.error.library.invalid=La p\u00e1gina JSP es incorrecta de acuerdo a la biblioteca {0}: {1}",
                "+jsp.error.library.invalid=La p\u00ef\u00bf\u00bdgina JSP es incorrecta de acuerdo a la biblioteca {0}: {1}",
                " jsp.error.tlvclass.instantiation=No pude cargar o instanciar clase TagLibraryValidator: {0}",
                "-jsp.error.tlv.invalid.page=Mensajes de error de validaci\u00f3n desde TagLibraryValidator para {0} in {1}",
                "-jsp.error.tei.invalid.attributes=Mensajes de error de validaci\u00f3n desde TagExtraInfo para {0}",
                "+jsp.error.tlv.invalid.page=Mensajes de error de validaci\u00ef\u00bf\u00bdn desde TagLibraryValidator para {0} in {1}",
                "+jsp.error.tei.invalid.attributes=Mensajes de error de validaci\u00ef\u00bf\u00bdn desde TagExtraInfo para {0}",
                " jsp.parser.sax.propertynotsupported=Propiedad SAX no soportada: {0}",
                " jsp.parser.sax.propertynotrecognized=Propiedad SAX no reconocida: {0}",
                "-jsp.parser.sax.featurenotsupported=Caracter\u00edstica SAX no soportada: {0}",
                "-jsp.parser.sax.featurenotrecognized=Caracter\u00edstica SAX no reconocida: {0}",
                "-jsp.error.no.more.content=Alcanzado fin de contenido mietras se requer\u00eda m\u00e1s an\u00e1lisis: \u00bferror de anidamiento de tag?",
                "-jsp.error.parse.xml=Error de an\u00e1lisis XML en archivo {0}",
                "-jsp.error.parse.xml.line=Error de an\u00e1lisis XML en archivo {0}: (l\u00ednea {1}, col {2})",
                "+jsp.parser.sax.featurenotsupported=Caracter\u00ef\u00bf\u00bdstica SAX no soportada: {0}",
                "+jsp.parser.sax.featurenotrecognized=Caracter\u00ef\u00bf\u00bdstica SAX no reconocida: {0}",
                "+jsp.error.no.more.content=Alcanzado fin de contenido mietras se requer\u00ef\u00bf\u00bda m\u00ef\u00bf\u00bds an\u00ef\u00bf\u00bdlisis: \u00ef\u00bf\u00bderror de anidamiento de tag?",
                "+jsp.error.parse.xml=Error de an\u00ef\u00bf\u00bdlisis XML en archivo {0}",
                "+jsp.error.parse.xml.line=Error de an\u00ef\u00bf\u00bdlisis XML en archivo {0}: (l\u00ef\u00bf\u00bdnea {1}, col {2})",
                " jsp.error.parse.xml.scripting.invalid.body=El cuerpo de elemento {0} no debe de contener elementos XML",
                "@@ -299,6 +301,6 @@ jsp.error.parse.xml.invalidPublicId=PUBLIC ID incorrecta: {0}",
                " jsp.error.include.flush.invalid.value=Valor incorrecto para atributo flush: {0}",
                "-jsp.error.unsupported.encoding=Codificaci\u00f3n no soportada: {0}",
                "-tld.error.variableNotAllowed=Es un error para un tag, que tiene uno o m\u00e1s subelementos variables, el tener una clase TagExtraInfo que devuelve un objeto no nulo.",
                "+jsp.error.unsupported.encoding=Codificaci\u00ef\u00bf\u00bdn no soportada: {0}",
                "+tld.error.variableNotAllowed=Es un error para un tag, que tiene uno o m\u00ef\u00bf\u00bds subelementos variables, el tener una clase TagExtraInfo que devuelve un objeto no nulo.",
                " jsp.error.tldInWebDotXmlNotFound=No pude localizar TLD {1} para URI {0} especificado en web.xml",
                "-jsp.error.taglibDirective.absUriCannotBeResolved=La uri absoluta: {0} no puede resolverse o en web.xml o el los archivos jar desplegados con esta aplicaci\u00f3n",
                "+jsp.error.taglibDirective.absUriCannotBeResolved=La uri absoluta: {0} no puede resolverse o en web.xml o el los archivos jar desplegados con esta aplicaci\u00ef\u00bf\u00bdn",
                " jsp.error.taglibDirective.missing.location=No se ha especificado ni el atributo \\'uri\\' ni el \\'tagdir\\'",
                "@@ -308,31 +310,31 @@ jsp.error.unterminated.user.tag=Tag definido por usuario no terminado: tag final",
                " #jspx.error.templateDataNotInJspCdata=Validation Error: Element &lt;{0}&gt; cannot have template data. Template data must be encapsulated within a &lt;jsp:cdata&gt; element. [JSP1.2 PFD section 5.1.9]\\nTemplate data in error: {1}",
                "-jspx.error.templateDataNotInJspCdata=Error de Validaci\u00f3n: El Elemento &lt;{0}&gt; no puede tener datos plantilla. Los datos plantilla deben de estar encapsulados dentro de un elemento &lt;jsp:text&gt;. [JSP1.2 PFD secci\u00f3n 5.1.9]\\nDatos de Plantilla en error: {1}",
                "+jspx.error.templateDataNotInJspCdata=Error de Validaci\u00ef\u00bf\u00bdn: El Elemento &lt;{0}&gt; no puede tener datos plantilla. Los datos plantilla deben de estar encapsulados dentro de un elemento &lt;jsp:text&gt;. [JSP1.2 PFD secci\u00ef\u00bf\u00bdn 5.1.9]\\nDatos de Plantilla en error: {1}",
                " #Error while processing taglib jar file {0}: {1}",
                "-jsp.error.taglib.reserved.prefix=El prefijo taglib {0} est\u00e1 reservado",
                "-jsp.error.invalid.javaEncoding=Codificaciones java incorrectas. Intent\u00e9 {0} y luego {1}. Ambas fallaron.",
                "-jsp.error.needAlternateJavaEncoding=La codificaci\u00f3n java por defecto {0} es incorrecta en tu plataforma java. Se puede especificar una alternativa v\u00eda par\u00e1metro 'javaEncoding' de JspServlet.",
                "+jsp.error.taglib.reserved.prefix=El prefijo taglib {0} est\u00ef\u00bf\u00bd reservado",
                "+jsp.error.invalid.javaEncoding=Codificaciones java incorrectas. Intent\u00ef\u00bf\u00bd {0} y luego {1}. Ambas fallaron.",
                "+jsp.error.needAlternateJavaEncoding=La codificaci\u00ef\u00bf\u00bdn java por defecto {0} es incorrecta en tu plataforma java. Se puede especificar una alternativa v\u00ef\u00bf\u00bda par\u00ef\u00bf\u00bdmetro 'javaEncoding' de JspServlet.",
                " #Error when compiling, used for jsp line number error messages",
                "-jsp.error.single.line.number=Ha tenido lugar un error en la l\u00ednea: {0} en el archivo jsp: {1}",
                "-jsp.error.multiple.line.number=\\n\\nHa tenido lugar un error entre las l\u00edneas: {0} y {1} en el archivo jsp: {2}\\n\\n",
                "+jsp.error.single.line.number=Ha tenido lugar un error en la l\u00ef\u00bf\u00bdnea: {0} en el archivo jsp: {1}",
                "+jsp.error.multiple.line.number=\\n\\nHa tenido lugar un error entre las l\u00ef\u00bf\u00bdneas: {0} y {1} en el archivo jsp: {2}\\n\\n",
                " jsp.error.corresponding.servlet=Error de servlet generado:\\n",
                "-jsp.error.empty.body.not.allowed=Cuerpo vac\u00edo no permitido para {0}",
                "+jsp.error.empty.body.not.allowed=Cuerpo vac\u00ef\u00bf\u00bdo no permitido para {0}",
                " jsp.error.jspbody.required=Se debe de usar jsp:body para especificar cuerpo tag para {0} si se usa jsp:attribute.",
                "-jsp.error.jspbody.emptybody.only=El tag {0} s\u00f3lo puede tener jsp:attribute en su cuerpo.",
                "-jsp.error.no.scriptlets=Los elementos de Scripting (&lt;%!, &lt;jsp:declaration, &lt;%=, &lt;jsp:expression, &lt;%, &lt;jsp:scriptlet ) no est\u00e1n permitidos aqu\u00ed.",
                "+jsp.error.jspbody.emptybody.only=El tag {0} s\u00ef\u00bf\u00bdlo puede tener jsp:attribute en su cuerpo.",
                "+jsp.error.no.scriptlets=Los elementos de Scripting (&lt;%!, &lt;jsp:declaration, &lt;%=, &lt;jsp:expression, &lt;%, &lt;jsp:scriptlet ) no est\u00ef\u00bf\u00bdn permitidos aqu\u00ef\u00bf\u00bd.",
                " jsp.error.internal.unexpected_node_type=Error Interno: Encontrado tipo de nodo inesperado",
                "-jsp.error.tld.fn.invalid.signature=Sint\u00e1xis incorrecta para firma de funci\u00f3n en TLD. Biblioteca de Tag: {0}, Funci\u00f3n: {1}",
                "-jsp.error.tld.fn.duplicate.name=Nombre duplicado de funci\u00f3n {0} en biblioteca de tag {1}",
                "-jsp.error.tld.fn.invalid.signature.commaexpected=Sint\u00e1xis incorrecta para firma de funci\u00f3n en TLD. Se esperaba Coma ','. Biblioteca de Tag: {0}, Funci\u00f3n: {1}.",
                "-jsp.error.tld.fn.invalid.signature.parenexpected=Sint\u00e1xis incorrecta para firma de funci\u00f3n en TLD. Se esperaba Par\u00e9ntesis '('. Biblioteca de Tag: {0}, Funci\u00f3n: {1}.",
                "-jsp.error.tld.mandatory.element.missing=Falta o est\u00e1 vac\u00edo elemento TLD obligatorio: {0}",
                "-jsp.error.dynamic.attributes.not.implemented=El tag {0} declara que acepta atributos din\u00e1micos pero no implementa la interfaz requerida",
                "+jsp.error.tld.fn.invalid.signature=Sint\u00ef\u00bf\u00bdxis incorrecta para firma de funci\u00ef\u00bf\u00bdn en TLD. Biblioteca de Tag: {0}, Funci\u00ef\u00bf\u00bdn: {1}",
                "+jsp.error.tld.fn.duplicate.name=Nombre duplicado de funci\u00ef\u00bf\u00bdn {0} en biblioteca de tag {1}",
                "+jsp.error.tld.fn.invalid.signature.commaexpected=Sint\u00ef\u00bf\u00bdxis incorrecta para firma de funci\u00ef\u00bf\u00bdn en TLD. Se esperaba Coma ','. Biblioteca de Tag: {0}, Funci\u00ef\u00bf\u00bdn: {1}.",
                "+jsp.error.tld.fn.invalid.signature.parenexpected=Sint\u00ef\u00bf\u00bdxis incorrecta para firma de funci\u00ef\u00bf\u00bdn en TLD. Se esperaba Par\u00ef\u00bf\u00bdntesis '('. Biblioteca de Tag: {0}, Funci\u00ef\u00bf\u00bdn: {1}.",
                "+jsp.error.tld.mandatory.element.missing=Falta o est\u00ef\u00bf\u00bd vac\u00ef\u00bf\u00bdo elemento TLD obligatorio: {0}",
                "+jsp.error.dynamic.attributes.not.implemented=El tag {0} declara que acepta atributos din\u00ef\u00bf\u00bdmicos pero no implementa la interfaz requerida",
                " jsp.error.nomatching.fragment=No puedo hallar una directiva de atributo (con name={0} y fragment=true) antes de la directiva de fragment.",
                "-jsp.error.attribute.noequal=se esperaba s\u00edmbolo igual",
                "-jsp.error.attribute.noquote=se esperaba s\u00edmbolo comillas",
                "-jsp.error.attribute.unterminated=el atributo para {0} no est\u00e1 terminado correctamente",
                "+jsp.error.attribute.noequal=se esperaba s\u00ef\u00bf\u00bdmbolo igual",
                "+jsp.error.attribute.noquote=se esperaba s\u00ef\u00bf\u00bdmbolo comillas",
                "+jsp.error.attribute.unterminated=el atributo para {0} no est\u00ef\u00bf\u00bd terminado correctamente",
                " jsp.error.missing.tagInfo=El objeto TagInfo para {0} falta del TLD",
                "-jsp.error.fragmentwithtype=No puede especificar ambos atributos 'fragment' y 'type'. Si est\u00e1 presente 'fragment', 'type' se pone como 'javax.servlet.jsp.tagext.JspFragment'",
                "-jsp.error.fragmentwithrtexprvalue=No puede especificar ambos atributos 'fragment' y 'rtexprvalue'.  Si est\u00e1 presente 'fragment', 'rtexprvalue' se pone como 'true'",
                "+jsp.error.fragmentwithtype=No puede especificar ambos atributos 'fragment' y 'type'. Si est\u00ef\u00bf\u00bd presente 'fragment', 'type' se pone como 'javax.servlet.jsp.tagext.JspFragment'",
                "+jsp.error.fragmentwithrtexprvalue=No puede especificar ambos atributos 'fragment' y 'rtexprvalue'.  Si est\u00ef\u00bf\u00bd presente 'fragment', 'rtexprvalue' se pone como 'true'",
                " jsp.error.fragmentWithDeclareOrScope=Ambos atributos 'fragment' y 'declare' o 'scope' se han especificado en la directiva variable",
                "-jsp.error.var_and_varReader=S\u00f3lo se puede especificar uno de \\'var\\' o \\'varReader\\'",
                "+jsp.error.var_and_varReader=S\u00ef\u00bf\u00bdlo se puede especificar uno de \\'var\\' o \\'varReader\\'",
                " jsp.error.missing_var_or_varReader=Falta atributo \\'var\\' o \\'varReader\\'",
                "@@ -341,8 +343,8 @@ jsp.error.unknown_attribute_type=Tipo de atributo desconocido ({1}) para atribut",
                " jsp.error.jspelement.missing.name=Falta atributo obligatorio XML-style \\'name\\'",
                "-jsp.error.xmlns.redefinition.notimplemented=Error interno: Intento de redefinir xmlns:{0}. La redefinici\u00f3n de espacios de nombre no est\u00e1 implementada.",
                "-jsp.error.could.not.add.taglibraries=No pude a\u00f1adir una o m\u00e1s bibliotecas.",
                "-jsp.error.duplicate.name.jspattribute=El atributo {0} especificado en la acci\u00f3n standard o custom tambi\u00e9n aparece como el valor del atributo name en jsp:attribute",
                "+jsp.error.xmlns.redefinition.notimplemented=Error interno: Intento de redefinir xmlns:{0}. La redefinici\u00ef\u00bf\u00bdn de espacios de nombre no est\u00ef\u00bf\u00bd implementada.",
                "+jsp.error.could.not.add.taglibraries=No pude a\u00ef\u00bf\u00bdadir una o m\u00ef\u00bf\u00bds bibliotecas.",
                "+jsp.error.duplicate.name.jspattribute=El atributo {0} especificado en la acci\u00ef\u00bf\u00bdn standard o custom tambi\u00ef\u00bf\u00bdn aparece como el valor del atributo name en jsp:attribute",
                " jsp.error.not.in.template={0} no permitido en una plantilla cuerpo de texto.",
                "-jsp.error.badStandardAction=Acci\u00f3n est\u00e1ndar incorrecta",
                "-jsp.error.xml.badStandardAction=Acci\u00f3n est\u00e1ndar incorrecta: {0}",
                "+jsp.error.badStandardAction=Acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar incorrecta",
                "+jsp.error.xml.badStandardAction=Acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar incorrecta: {0}",
                " jsp.error.tagdirective.badbodycontent=body-content incorrecto ({0}) en directiva tag",
                "@@ -352,25 +354,25 @@ jsp.error.prolog_pagedir_encoding_mismatch=El Page-encoding especificado en XML",
                " jsp.error.prolog_config_encoding_mismatch=El Page-encoding especificado en XML prolog ({0}) difiere del especificado en jsp-property-group ({1})",
                "-jsp.error.attribute.custom.non_rt_with_expr=Seg\u00fan el TLD o la directiva attribute del archivo tag, el atributo {0} no acepta expresiones",
                "-jsp.error.attribute.standard.non_rt_with_expr=El atributo {0} de la acci\u00f3n est\u00e1ndar {1} no acepta expresiones",
                "+jsp.error.attribute.custom.non_rt_with_expr=Seg\u00ef\u00bf\u00bdn el TLD o la directiva attribute del archivo tag, el atributo {0} no acepta expresiones",
                "+jsp.error.attribute.standard.non_rt_with_expr=El atributo {0} de la acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar {1} no acepta expresiones",
                " jsp.error.scripting.variable.missing_name=Imposible determinar nombre de variable de scripting desde atributo {0}",
                "-jasper.error.emptybodycontent.nonempty=Seg\u00fan el TLD, el tag {0} debe de estar vac\u00edo, pero no lo est\u00e1",
                "-jsp.error.tagfile.nameNotUnique=El valor de {0} y el valor de {1} en la l\u00ednea {2} son el mismo.",
                "+jasper.error.emptybodycontent.nonempty=Seg\u00ef\u00bf\u00bdn el TLD, el tag {0} debe de estar vac\u00ef\u00bf\u00bdo, pero no lo est\u00ef\u00bf\u00bd",
                "+jsp.error.tagfile.nameNotUnique=El valor de {0} y el valor de {1} en la l\u00ef\u00bf\u00bdnea {2} son el mismo.",
                " jsp.error.tagfile.nameFrom.noAttribute=No puedo hallar una directiva attribute con un atributo name con un valor \\\"{0}\\\", el valor de este atributo name-from-attribute.",
                "-jsp.error.tagfile.nameFrom.badAttribute=La directiva attribute (declarada en la l\u00ednea {1} y cuyo atributo name es \\\"{0}\\\", el valor de este atributo name-from-attribute attribute) debe de ser del tipo java.lang.String, es \\\"required\\\" y no un \\\"rtexprvalue\\\".",
                "-jsp.error.page.noSession=No puedo acceder al \u00e1mbito de sesi\u00f3n en una p\u00e1gina que no participa en una sesi\u00f3n",
                "-jsp.error.useBean.noSession=Es ilegal para useBean usar un \u00e1mbito de sesi\u00f3n cuando la p\u00e1gina JSP declara (v\u00eda directiva page) que no participa en sesiones",
                "-jsp.error.xml.encodingByteOrderUnsupported=El orden de byte dado para encoding \\\"{0}\\\" no est\u00e1 soportado",
                "-jsp.error.xml.encodingDeclInvalid=Nombre de codificaci\u00f3n \\\"{0}\\\" incorrecto.",
                "-jsp.error.xml.encodingDeclRequired=Se necesita la declaraci\u00f3n encoding en la declaraci\u00f3n de texto",
                "-jsp.error.xml.morePseudoAttributes=se esperan m\u00e1s pseudo-atributos",
                "-jsp.error.xml.noMorePseudoAttributes=no se permiten m\u00e1s pseudo-atributos.",
                "-jsp.error.xml.versionInfoRequired=Se requiere la versi\u00f3n en la declaraci\u00f3n XML.",
                "-jsp.error.xml.xmlDeclUnterminated=La declaraci\u00f3n XML debe de terminar con \\\"?>\\\".",
                "-jsp.error.xml.reservedPITarget=La instrucci\u00f3n de procesamiento que coincide con \\\"[xX][mM][lL]\\\" no est\u00e1 permitida.",
                "-jsp.error.xml.spaceRequiredInPI=Se necesita un espacio en blanco entre la instrucci\u00f3n de procesamiento y los datos.",
                "-jsp.error.xml.invalidCharInContent=Un car\u00e1cter XML incorrecto (Unicode: 0x{0}) se hall\u00f3 en el contenido del elemento del documento.",
                "-jsp.error.xml.spaceRequiredBeforeStandalone=Se necesita un espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00f3n XML.",
                "-jsp.error.xml.sdDeclInvalid=El valor de declaraci\u00f3n de documento standalone debe de ser \\\"yes\\\" o \\\"no\\\", no \\\"{0}\\\".",
                "-jsp.error.xml.invalidCharInPI=Se hall\u00f3 un car\u00e1cter XML incorrecto (Unicode: 0x{0}) en la instrucci\u00f3n de procesamiento",
                "-jsp.error.xml.versionNotSupported=No se soporta la versi\u00f3n XML \\\"{0}\\\", s\u00f3lo se soporta XML 1.0",
                "+jsp.error.tagfile.nameFrom.badAttribute=La directiva attribute (declarada en la l\u00ef\u00bf\u00bdnea {1} y cuyo atributo name es \\\"{0}\\\", el valor de este atributo name-from-attribute attribute) debe de ser del tipo java.lang.String, es \\\"required\\\" y no un \\\"rtexprvalue\\\".",
                "+jsp.error.page.noSession=No puedo acceder al \u00ef\u00bf\u00bdmbito de sesi\u00ef\u00bf\u00bdn en una p\u00ef\u00bf\u00bdgina que no participa en una sesi\u00ef\u00bf\u00bdn",
                "+jsp.error.useBean.noSession=Es ilegal para useBean usar un \u00ef\u00bf\u00bdmbito de sesi\u00ef\u00bf\u00bdn cuando la p\u00ef\u00bf\u00bdgina JSP declara (v\u00ef\u00bf\u00bda directiva page) que no participa en sesiones",
                "+jsp.error.xml.encodingByteOrderUnsupported=El orden de byte dado para encoding \\\"{0}\\\" no est\u00ef\u00bf\u00bd soportado",
                "+jsp.error.xml.encodingDeclInvalid=Nombre de codificaci\u00ef\u00bf\u00bdn \\\"{0}\\\" incorrecto.",
                "+jsp.error.xml.encodingDeclRequired=Se necesita la declaraci\u00ef\u00bf\u00bdn encoding en la declaraci\u00ef\u00bf\u00bdn de texto",
                "+jsp.error.xml.morePseudoAttributes=se esperan m\u00ef\u00bf\u00bds pseudo-atributos",
                "+jsp.error.xml.noMorePseudoAttributes=no se permiten m\u00ef\u00bf\u00bds pseudo-atributos.",
                "+jsp.error.xml.versionInfoRequired=Se requiere la versi\u00ef\u00bf\u00bdn en la declaraci\u00ef\u00bf\u00bdn XML.",
                "+jsp.error.xml.xmlDeclUnterminated=La declaraci\u00ef\u00bf\u00bdn XML debe de terminar con \\\"?>\\\".",
                "+jsp.error.xml.reservedPITarget=La instrucci\u00ef\u00bf\u00bdn de procesamiento que coincide con \\\"[xX][mM][lL]\\\" no est\u00ef\u00bf\u00bd permitida.",
                "+jsp.error.xml.spaceRequiredInPI=Se necesita un espacio en blanco entre la instrucci\u00ef\u00bf\u00bdn de procesamiento y los datos.",
                "+jsp.error.xml.invalidCharInContent=Un car\u00ef\u00bf\u00bdcter XML incorrecto (Unicode: 0x{0}) se hall\u00ef\u00bf\u00bd en el contenido del elemento del documento.",
                "+jsp.error.xml.spaceRequiredBeforeStandalone=Se necesita un espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00ef\u00bf\u00bdn XML.",
                "+jsp.error.xml.sdDeclInvalid=El valor de declaraci\u00ef\u00bf\u00bdn de documento standalone debe de ser \\\"yes\\\" o \\\"no\\\", no \\\"{0}\\\".",
                "+jsp.error.xml.invalidCharInPI=Se hall\u00ef\u00bf\u00bd un car\u00ef\u00bf\u00bdcter XML incorrecto (Unicode: 0x{0}) en la instrucci\u00ef\u00bf\u00bdn de procesamiento",
                "+jsp.error.xml.versionNotSupported=No se soporta la versi\u00ef\u00bf\u00bdn XML \\\"{0}\\\", s\u00ef\u00bf\u00bdlo se soporta XML 1.0",
                " jsp.error.xml.pseudoAttrNameExpected=se esperaba un pseudo-atributo name.",
                "@@ -378,19 +380,19 @@ jsp.error.xml.expectedByte=Se esperaba byte {0} de {1}-byte de secuencia UTF-8.",
                " jsp.error.xml.invalidByte=Incorrecto byte {0} de {1}-byte de secuencia UTF-8.",
                "-jsp.error.xml.operationNotSupported=La operaci\u00f3n \\\"{0}\\\" no est\u00e1 soportada por lector {1}.",
                "-jsp.error.xml.invalidHighSurrogate=Surrogaci\u00f3n Alta de bits en secuencia UTF-8 no debe de exceder 0x10, pero se hall\u00f3 0x{0}.",
                "+jsp.error.xml.operationNotSupported=La operaci\u00ef\u00bf\u00bdn \\\"{0}\\\" no est\u00ef\u00bf\u00bd soportada por lector {1}.",
                "+jsp.error.xml.invalidHighSurrogate=Surrogaci\u00ef\u00bf\u00bdn Alta de bits en secuencia UTF-8 no debe de exceder 0x10, pero se hall\u00ef\u00bf\u00bd 0x{0}.",
                " jsp.error.xml.invalidASCII=El Byte \\\"{0}\\\" no es ASCII de 7-bit.",
                "-jsp.error.xml.spaceRequiredBeforeEncodingInXMLDecl=Se necesita espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00f3n XML.",
                "-jsp.error.xml.spaceRequiredBeforeEncodingInTextDecl=Se necesita espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00f3n text.",
                "-jsp.error.xml.spaceRequiredBeforeVersionInTextDecl=Se necesita espacio en blanco antes del pseudo-atributo version en la declaraci\u00f3n text.",
                "-jsp.error.xml.spaceRequiredBeforeVersionInXMLDecl=Se necesita espacio en blanco antes del pseudo-atributo version en la declaraci\u00f3n XML.",
                "-jsp.error.xml.eqRequiredInXMLDecl=El car\u00e1cter '' = '' debe de serguir a \\\"{0}\\\" en la declaraci\u00f3n XML.",
                "-jsp.error.xml.eqRequiredInTextDecl=El car\u00e1cter '' = '' debe de serguir a \\\"{0}\\\" en la declaraci\u00f3n text.",
                "-jsp.error.xml.quoteRequiredInTextDecl=El valor que sigue a \\\"{0}\\\" en la declaraci\u00f3n text debe de ser una cadena entre comillas.",
                "-jsp.error.xml.quoteRequiredInXMLDecl=El valor que sigue a \\\"{0}\\\" en la declaraci\u00f3n XML debe de ser un cadena entre comillas.",
                "-jsp.error.xml.invalidCharInTextDecl=Un car\u00e1cter XML incorrecto (Unicode: 0x{0}) se hall\u00f3 en la declaraci\u00f3n text",
                "-jsp.error.xml.invalidCharInXMLDecl=Un car\u00e1cter XML incorrecto (Unicode: 0x{0}) se hall\u00f3 en la declaraci\u00f3n XML",
                "-jsp.error.xml.closeQuoteMissingInTextDecl=Faltan las comillas de cierre en el valor que sigue a \\\"{0}\\\" en la declaraci\u00f3n text.",
                "-jsp.error.xml.closeQuoteMissingInXMLDecl=Faltan las comillas de cierre en el valor que sigue a  \\\"{0}\\\" en la declaraci\u00f3n XML.",
                "-jsp.error.multiple.jsp=No puedo tener m\u00faltiples especificaciones de",
                "-jsp.error.jspoutput.conflict=&lt;jsp:output&gt;: ilegal tener ocurrencias m\u00faltiples de \\\"{0}\\\" con diferentes valores (viejo: {1}, nuevo: {2})",
                "+jsp.error.xml.spaceRequiredBeforeEncodingInXMLDecl=Se necesita espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00ef\u00bf\u00bdn XML.",
                "+jsp.error.xml.spaceRequiredBeforeEncodingInTextDecl=Se necesita espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00ef\u00bf\u00bdn text.",
                "+jsp.error.xml.spaceRequiredBeforeVersionInTextDecl=Se necesita espacio en blanco antes del pseudo-atributo version en la declaraci\u00ef\u00bf\u00bdn text.",
                "+jsp.error.xml.spaceRequiredBeforeVersionInXMLDecl=Se necesita espacio en blanco antes del pseudo-atributo version en la declaraci\u00ef\u00bf\u00bdn XML.",
                "+jsp.error.xml.eqRequiredInXMLDecl=El car\u00ef\u00bf\u00bdcter '' = '' debe de serguir a \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn XML.",
                "+jsp.error.xml.eqRequiredInTextDecl=El car\u00ef\u00bf\u00bdcter '' = '' debe de serguir a \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn text.",
                "+jsp.error.xml.quoteRequiredInTextDecl=El valor que sigue a \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn text debe de ser una cadena entre comillas.",
                "+jsp.error.xml.quoteRequiredInXMLDecl=El valor que sigue a \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn XML debe de ser un cadena entre comillas.",
                "+jsp.error.xml.invalidCharInTextDecl=Un car\u00ef\u00bf\u00bdcter XML incorrecto (Unicode: 0x{0}) se hall\u00ef\u00bf\u00bd en la declaraci\u00ef\u00bf\u00bdn text",
                "+jsp.error.xml.invalidCharInXMLDecl=Un car\u00ef\u00bf\u00bdcter XML incorrecto (Unicode: 0x{0}) se hall\u00ef\u00bf\u00bd en la declaraci\u00ef\u00bf\u00bdn XML",
                "+jsp.error.xml.closeQuoteMissingInTextDecl=Faltan las comillas de cierre en el valor que sigue a \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn text.",
                "+jsp.error.xml.closeQuoteMissingInXMLDecl=Faltan las comillas de cierre en el valor que sigue a  \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn XML.",
                "+jsp.error.multiple.jsp=No puedo tener m\u00ef\u00bf\u00bdltiples especificaciones de",
                "+jsp.error.jspoutput.conflict=&lt;jsp:output&gt;: ilegal tener ocurrencias m\u00ef\u00bf\u00bdltiples de \\\"{0}\\\" con diferentes valores (viejo: {1}, nuevo: {2})",
                " jsp.error.jspoutput.doctypenamesystem=&lt;jsp:output&gt;: atributos 'doctype-root-element' y 'doctype-system' deben de aparecer juntos",
                "@@ -398,3 +400,3 @@ jsp.error.jspoutput.doctypepulicsystem=&lt;jsp:output&gt;: atributo 'doctype-sys",
                " jsp.error.jspoutput.nonemptybody=&lt;jsp:output&gt; no debe de tener un cuerpo",
                "-jsp.error.jspoutput.invalidUse=&lt;jsp:output&gt; no se debe de usar en sint\u00e1xis est\u00e1ndar",
                "+jsp.error.jspoutput.invalidUse=&lt;jsp:output&gt; no se debe de usar en sint\u00ef\u00bf\u00bdxis est\u00ef\u00bf\u00bdndar",
                " jsp.error.attributes.not.allowed = {0} no debe de tener atributos",
                "@@ -402,6 +404,6 @@ jsp.error.tagfile.badSuffix=Falta sufijo \\\".tag\\\" en trayectoria de archivo de t",
                " jsp.error.tagfile.illegalPath=Trayectoria de archivo de tag: {0}, debe de comenzar con \\\"/WEB-INF/tags\\\" o \\\"/META-INF/tags\\\"",
                "-jsp.error.plugin.wrongRootElement=El nombre del elemento ra\u00edz en {0} difiere de {1}",
                "+jsp.error.plugin.wrongRootElement=El nombre del elemento ra\u00ef\u00bf\u00bdz en {0} difiere de {1}",
                " jsp.error.attribute.invalidPrefix=El prefijo de atributo {0} no se correponde con ninguna biblioteca importada",
                "-jsp.error.nested.jspattribute=Una acci\u00f3n est\u00e1ndar jsp:attribute no puede estar anidada dentro de otra acci\u00f3n est\u00e1ndar jsp:attribute",
                "-jsp.error.nested.jspbody=Una acci\u00f3n est\u00e1ndar jsp:body no puede estar anidada dentro de otra acci\u00f3n est\u00e1ndar jsp:body o jsp:attribute",
                "+jsp.error.nested.jspattribute=Una acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar jsp:attribute no puede estar anidada dentro de otra acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar jsp:attribute",
                "+jsp.error.nested.jspbody=Una acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar jsp:body no puede estar anidada dentro de otra acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar jsp:body o jsp:attribute",
                " jsp.error.variable.either.name=O el atributo name-given o name-from-attribute deben de ser especificados en una directiva variable",
                "@@ -411,13 +413,13 @@ jsp.error.attribute.null_name=Nombre de atributo nulo",
                " jsp.error.jsptext.badcontent=\\'&lt;\\', cuando aparece en el cuerpo de &lt;jsp:text&gt;, debe de estar encapsulado dentro de un CDATA",
                "-jsp.error.jsproot.version.invalid=N\u00famero incorrecto de versi\u00f3n: \\\"{0}\\\", debe de ser \\\"1.2\\\" o \\\"2.0\\\"",
                "-jsp.error.noFunctionPrefix=La funci\u00f3n {0} debe de usarse con un prefijo cuando no se especifica un espacio de nombres por defecto",
                "-jsp.error.noFunction=La funci\u00f3n {0} no puede ser localizada mediante el prefijo especificado",
                "-jsp.error.noFunctionMethod=El m\u00e9todo \\\"{0}\\\" para la funci\u00f3n \\\"{1}\\\" no se pudo hallar en la clase \\\"{2}\\\"",
                "-jsp.error.function.classnotfound=La clase {0} especificada en el TLD para la funci\u00f3n {1} no se puede hallar: {2}",
                "-jsp.error.signature.classnotfound=La clase {0} especificada en la firma del m\u00e9todo en el TLD para la funci\u00f3n {1} no se puede hallar. {2}",
                "+jsp.error.jsproot.version.invalid=N\u00ef\u00bf\u00bdmero incorrecto de versi\u00ef\u00bf\u00bdn: \\\"{0}\\\", debe de ser \\\"1.2\\\" o \\\"2.0\\\"",
                "+jsp.error.noFunctionPrefix=La funci\u00ef\u00bf\u00bdn {0} debe de usarse con un prefijo cuando no se especifica un espacio de nombres por defecto",
                "+jsp.error.noFunction=La funci\u00ef\u00bf\u00bdn {0} no puede ser localizada mediante el prefijo especificado",
                "+jsp.error.noFunctionMethod=El m\u00ef\u00bf\u00bdtodo \\\"{0}\\\" para la funci\u00ef\u00bf\u00bdn \\\"{1}\\\" no se pudo hallar en la clase \\\"{2}\\\"",
                "+jsp.error.function.classnotfound=La clase {0} especificada en el TLD para la funci\u00ef\u00bf\u00bdn {1} no se puede hallar: {2}",
                "+jsp.error.signature.classnotfound=La clase {0} especificada en la firma del m\u00ef\u00bf\u00bdtodo en el TLD para la funci\u00ef\u00bf\u00bdn {1} no se puede hallar. {2}",
                " jsp.error.text.has_subelement=&lt;jsp:text&gt; no debe de tener subelementos",
                " jsp.error.data.file.read=Error leyendo archivo \\\"{0}\\\"",
                "-jsp.error.prefix.refined=Intento de redefinir el prefijo {0} por {1}, cuando ya estaba definido como {2} en el \u00e1mbito en curso.",
                "+jsp.error.prefix.refined=Intento de redefinir el prefijo {0} por {1}, cuando ya estaba definido como {2} en el \u00ef\u00bf\u00bdmbito en curso.",
                " jsp.error.nested_jsproot=&lt;jsp:root&gt; anidado",
                "-jsp.error.unbalanced.endtag=El tgag final \\\"&lt;/{0}\\\" est\u00e1 desequilibrado",
                "+jsp.error.unbalanced.endtag=El tgag final \\\"&lt;/{0}\\\" est\u00ef\u00bf\u00bd desequilibrado",
                " jsp.error.invalid.bean=",
                "diff --git a/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_fr.properties b/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_fr.properties",
                "index e19772363..e9f28202d 100644",
                "--- a/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_fr.properties",
                "+++ b/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_fr.properties",
                "@@ -1,18 +1,20 @@",
                "-# Licensed to the Apache Software Foundation (ASF) under one or more",
                "-# contributor license agreements.  See the NOTICE file distributed with",
                "-# this work for additional information regarding copyright ownership.",
                "-# The ASF licenses this file to You under the Apache License, Version 2.0",
                "-# (the \"License\"); you may not use this file except in compliance with",
                "-# the License.  You may obtain a copy of the License at",
                " #",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                " #",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-",
                "-# $Id: LocalStrings_fr.properties 565193 2007-08-12 22:53:10Z markt $",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                " #",
                "+",
                " # Default localized string information",
                "@@ -21,32 +23,32 @@",
                " jsp.error.bad.servlet.engine=Version de moteur de servlet incorrecte!",
                "-jsp.error.no.scratch.dir=Le moteur de JSP engine n''est pas configur\u00e9 avec un r\u00e9pertoire de travail.\\",
                "+jsp.error.no.scratch.dir=Le moteur de JSP engine n''est pas configur\u00ef\u00bf\u00bd avec un r\u00ef\u00bf\u00bdpertoire de travail.\\",
                " \\n Merci d''ajouter \\\"jsp.initparams=scratchdir=<dir-name>\\\" \\",
                " \\n dans le fichier \"servlets.properties\" de ce contexte.",
                "-jsp.error.bad.scratch.dir=Le param\u00eatre \"scratchDir\" que vous avez sp\u00e9cifi\u00e9: {0} est inutilisable.",
                "-jsp.message.scratch.dir.is=Le r\u00e9pertoire de travail (scratch dir) pour le moteur de JSP est: {0}",
                "+jsp.error.bad.scratch.dir=Le param\u00ef\u00bf\u00bdtre \"scratchDir\" que vous avez sp\u00ef\u00bf\u00bdcifi\u00ef\u00bf\u00bd: {0} est inutilisable.",
                "+jsp.message.scratch.dir.is=Le r\u00ef\u00bf\u00bdpertoire de travail (scratch dir) pour le moteur de JSP est: {0}",
                " jsp.message.parent_class_loader_is=Le chargeur de classe parent (class loader) est: {0}",
                "-jsp.message.dont.modify.servlets=IMPORTANT: Ne pas modifier les servlets g\u00e9n\u00e9r\u00e9es",
                "-jsp.error.not.impl.comments=Erreur interne: Commentaires non impl\u00e9ment\u00e9s",
                "-jsp.error.not.impl.directives=Erreur interne: Directives non impl\u00e9ment\u00e9es",
                "-jsp.error.not.impl.declarations=Erreur interne: Declarations non impl\u00e9ment\u00e9es",
                "-jsp.error.not.impl.expressions=Erreur interne: Expressions non impl\u00e9ment\u00e9es",
                "-jsp.error.not.impl.scriptlets=Erreur interne: Scriptlets non impl\u00e9ment\u00e9s",
                "-jsp.error.not.impl.usebean=Erreur interne: useBean non impl\u00e9ment\u00e9",
                "-jsp.error.not.impl.getp=Erreur interne: getProperty non impl\u00e9ment\u00e9",
                "-jsp.error.not.impl.setp=Erreur interne: setProperty non impl\u00e9ment\u00e9",
                "-jsp.error.not.impl.plugin=Erreur interne: plugin non impl\u00e9ment\u00e9",
                "-jsp.error.not.impl.forward=Erreur interne: forward non impl\u00e9ment\u00e9",
                "-jsp.error.not.impl.include=Erreur interne: include non impl\u00e9ment\u00e9",
                "-jsp.error.unavailable=La JSP a \u00e9t\u00e9 marqu\u00e9e comme non disponible",
                "-jsp.error.usebean.missing.attribute=useBean: l''identificateur d''attribut (id attribute) est manquant ou mal orthographi\u00e9",
                "-jsp.error.usebean.missing.type=useBean ({0}): La classe ou le type d''attribut doit \u00eatre\\",
                "-sp\u00e9cifi\u00e9: ",
                "-jsp.error.usebean.duplicate=useBean: Nom de bean dupliqu\u00e9: {0}",
                "+jsp.message.dont.modify.servlets=IMPORTANT: Ne pas modifier les servlets g\u00ef\u00bf\u00bdn\u00ef\u00bf\u00bdr\u00ef\u00bf\u00bdes",
                "+jsp.error.not.impl.comments=Erreur interne: Commentaires non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bds",
                "+jsp.error.not.impl.directives=Erreur interne: Directives non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bdes",
                "+jsp.error.not.impl.declarations=Erreur interne: Declarations non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bdes",
                "+jsp.error.not.impl.expressions=Erreur interne: Expressions non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bdes",
                "+jsp.error.not.impl.scriptlets=Erreur interne: Scriptlets non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bds",
                "+jsp.error.not.impl.usebean=Erreur interne: useBean non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bd",
                "+jsp.error.not.impl.getp=Erreur interne: getProperty non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bd",
                "+jsp.error.not.impl.setp=Erreur interne: setProperty non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bd",
                "+jsp.error.not.impl.plugin=Erreur interne: plugin non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bd",
                "+jsp.error.not.impl.forward=Erreur interne: forward non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bd",
                "+jsp.error.not.impl.include=Erreur interne: include non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bd",
                "+jsp.error.unavailable=La JSP a \u00ef\u00bf\u00bdt\u00ef\u00bf\u00bd marqu\u00ef\u00bf\u00bde comme non disponible",
                "+jsp.error.usebean.missing.attribute=useBean: l''identificateur d''attribut (id attribute) est manquant ou mal orthographi\u00ef\u00bf\u00bd",
                "+jsp.error.usebean.missing.type=useBean ({0}): La classe ou le type d''attribut doit \u00ef\u00bf\u00bdtre\\",
                "+sp\u00ef\u00bf\u00bdcifi\u00ef\u00bf\u00bd: ",
                "+jsp.error.usebean.duplicate=useBean: Nom de bean dupliqu\u00ef\u00bf\u00bd: {0}",
                " jsp.error.usebean.prohibited.as.session=Impossible d''utiliser comme bean de session {0} car c''est interdit\\",
                "-par la directive jsp d\u00e9finie pr\u00e9c\u00e9demment: ",
                "-jsp.error.usebean.not.both=useBean: Impossible de sp\u00e9cifier \u00e0 la fois la classe et l''attribut beanName: ",
                "+par la directive jsp d\u00ef\u00bf\u00bdfinie pr\u00ef\u00bf\u00bdc\u00ef\u00bf\u00bddemment: ",
                "+jsp.error.usebean.not.both=useBean: Impossible de sp\u00ef\u00bf\u00bdcifier \u00ef\u00bf\u00bd la fois la classe et l''attribut beanName: ",
                " jsp.error.usebean.bad.type.cast=useBean ({0}): Le type ({1}) n''est pas assignable depuis la classe ({2}) ",
                "-jsp.error.classname=Impossible de d\u00e9terminer le nom de classe d''apr\u00e8s le fichier .class",
                "+jsp.error.classname=Impossible de d\u00ef\u00bf\u00bdterminer le nom de classe d''apr\u00ef\u00bf\u00bds le fichier .class",
                " jsp.warning.bad.type=Attention: mauvais type dans le fichier .class",
                "-jsp.error.data.file.write=Erreur lors de l''\u00e9criture du fichier de donn\u00e9es",
                "+jsp.error.data.file.write=Erreur lors de l''\u00ef\u00bf\u00bdcriture du fichier de donn\u00ef\u00bf\u00bdes",
                " #Directive de Page: valeur incorrecte pour pageEncoding",
                "@@ -59,6 +61,6 @@ jsp.error.page.invalid.info=Directive de Page: valeur incorrecte pour info",
                " jsp.error.page.invalid.iserrorpage=Directive de Page: valeur incorrecte pour isErrorPage",
                "-jsp.error.page.defafteruse.language=Directive de Page: on ne peut d\u00e9finir language apr\u00e8s un scriptlet ",
                "+jsp.error.page.defafteruse.language=Directive de Page: on ne peut d\u00ef\u00bf\u00bdfinir language apr\u00ef\u00bf\u00bds un scriptlet ",
                " jsp.error.page.nomapping.language=Directive de Page: Pas de correspondance pour language: ",
                "-jsp.error.page.bad_b_and_a_combo=Directive de Page: combinaison ill\u00e9gale de buffer=\\\"none\\\" && autoFlush=\\\"false\\\"",
                "-jsp.error.not.impl.taglib=Internal error: Tag extensions non impl\u00e9ment\u00e9s",
                "+jsp.error.page.bad_b_and_a_combo=Directive de Page: combinaison ill\u00ef\u00bf\u00bdgale de buffer=\\\"none\\\" && autoFlush=\\\"false\\\"",
                "+jsp.error.not.impl.taglib=Internal error: Tag extensions non impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bds",
                " jsp.error.include.missing.file=l''argument fichier (file) pour l''inclusion (include) est absent",
                "@@ -66,14 +68,14 @@ jsp.error.include.bad.file=Mauvais argument fichier (file) pour l''inclusion (in",
                " jsp.error.include.exception=Impossible d''inclure (include) {0}",
                "-jsp.error.stream.closed=Flux ferm\u00e9",
                "+jsp.error.stream.closed=Flux ferm\u00ef\u00bf\u00bd",
                " jsp.error.invalid.forward=Tag forward incorrect",
                "-jsp.error.unknownException=Erreur non trait\u00e9e! Vous devriez penser \u00e0 utiliser une page d''erreur \\",
                "-pour rapporter ce type d''erreur plus \u00e9l\u00e9gamment",
                "+jsp.error.unknownException=Erreur non trait\u00ef\u00bf\u00bde! Vous devriez penser \u00ef\u00bf\u00bd utiliser une page d''erreur \\",
                "+pour rapporter ce type d''erreur plus \u00ef\u00bf\u00bdl\u00ef\u00bf\u00bdgamment",
                " jsp.error.invalid.directive=Directive incorrecte",
                "-jsp.error.directive.istagfile=La directive {0} ne peut \u00eatre utilis\u00e9e dans un fichier tag",
                "-jsp.error.directive.isnottagfile=La directive {0} ne peut \u00eatre utilis\u00e9e que dans un fichier tag",
                "-jsp.error.tagfile.tld.name=L''attribut \\\"name\\\" de la directive tag contient la valeur {0} alors que le tag \\\"name\\\" de l''\u00e9l\u00e9ment \\\"tag-file\\\" dans le TLD est {1}",
                "-jsp.error.action.istagfile=L''action {0} ne peut \u00eatre utilis\u00e9e dans un fichier tag",
                "-jsp.error.action.isnottagfile=L''action {0} ne peut \u00eatre utilis\u00e9e que dans un fichier tag",
                "-jsp.error.unterminated=Tag {0} non termin\u00e9",
                "-jsp.error.usebean.notinsamefile=le tag useBean doit commenc\u00e9 et finir dans le m\u00eame fichier physique",
                "+jsp.error.directive.istagfile=La directive {0} ne peut \u00ef\u00bf\u00bdtre utilis\u00ef\u00bf\u00bde dans un fichier tag",
                "+jsp.error.directive.isnottagfile=La directive {0} ne peut \u00ef\u00bf\u00bdtre utilis\u00ef\u00bf\u00bde que dans un fichier tag",
                "+jsp.error.tagfile.tld.name=L''attribut \\\"name\\\" de la directive tag contient la valeur {0} alors que le tag \\\"name\\\" de l''\u00ef\u00bf\u00bdl\u00ef\u00bf\u00bdment \\\"tag-file\\\" dans le TLD est {1}",
                "+jsp.error.action.istagfile=L''action {0} ne peut \u00ef\u00bf\u00bdtre utilis\u00ef\u00bf\u00bde dans un fichier tag",
                "+jsp.error.action.isnottagfile=L''action {0} ne peut \u00ef\u00bf\u00bdtre utilis\u00ef\u00bf\u00bde que dans un fichier tag",
                "+jsp.error.unterminated=Tag {0} non termin\u00ef\u00bf\u00bd",
                "+jsp.error.usebean.notinsamefile=le tag useBean doit commenc\u00ef\u00bf\u00bd et finir dans le m\u00ef\u00bf\u00bdme fichier physique",
                " jsp.error.loadclass.taghandler=Impossible de charger la classe {0}",
                "@@ -86,19 +88,19 @@ jsp.error.invalid.expression=\"{0}\" contient d''incorrecte(s) expression(s): {1}",
                " jsp.error.invalid.attribute={0}: Attribut incorrect: {1}",
                "-jsp.error.usebean.class.notfound=Classe: {0} non trouv\u00e9e",
                "+jsp.error.usebean.class.notfound=Classe: {0} non trouv\u00ef\u00bf\u00bde",
                " jsp.error.file.cannot.read=Impossible de lire le fichier: {0}",
                "-jsp.error.file.already.registered=Inclusion r\u00e9cursive du fichier {0}",
                "-jsp.error.file.not.registered=Le fichier {0} n''appara\u00eet pas dans l''inclusion (include)",
                "-jsp.error.quotes.unterminated=guillemets non termin\u00e9s",
                "-jsp.error.attr.quoted=La valeur de l''attribute doit \u00eatre entre guillemets ",
                "+jsp.error.file.already.registered=Inclusion r\u00ef\u00bf\u00bdcursive du fichier {0}",
                "+jsp.error.file.not.registered=Le fichier {0} n''appara\u00ef\u00bf\u00bdt pas dans l''inclusion (include)",
                "+jsp.error.quotes.unterminated=guillemets non termin\u00ef\u00bf\u00bds",
                "+jsp.error.attr.quoted=La valeur de l''attribute doit \u00ef\u00bf\u00bdtre entre guillemets ",
                " jsp.error.attr.novalue=L''attribute {0} n''a pas de valeur",
                "-jsp.error.tag.attr.unterminated=Liste de tag d''attribut non termin\u00e9e",
                "+jsp.error.tag.attr.unterminated=Liste de tag d''attribut non termin\u00ef\u00bf\u00bde",
                " jsp.error.param.noname=Pas de nom dans le tag PARAM",
                " jsp.error.param.novalue=Pas de valeur dans le tag PARAM",
                "-jsp.error.beans.nullbean=Tentative d''op\u00e9ration bean sur un objet nul.",
                "-jsp.error.beans.nobeaninfo=Pas d''information bean (BeanInfo) pour le bean de type ''{0}'' n''a pu \u00eatre trouv\u00e9e, la classe n''existe probablement pas.",
                "-jsp.error.beans.introspection=Une exception s''est produite lors de l''introspection de la m\u00e9thode read de la propri\u00e9t\u00e9 ''{0}'' dans le bean de type ''{1}'':\\n{2}",
                "-jsp.error.beans.nomethod=Impossible de trouver une m\u00e9thode pour lire la propri\u00e9t\u00e9 ''{0}'' dans le bean de type ''{1}''",
                "-jsp.error.beans.nomethod.setproperty=Impossible de trouver une m\u00e9thode pour mettre \u00e0 jour la propri\u00e9t\u00e9 ''{0}'' de type ''{1}''dans le bean de type ''{2}''",
                "-jsp.error.beans.noproperty==Impossible de trouver de l''information sur la propri\u00e9t\u00e9 ''{0}'' dans le bean de type ''{1}''",
                "-jsp.error.beans.setproperty.noindexset=Impossible de renseigner la propri\u00e9t\u00e9 ind\u00e9x\u00e9e",
                "+jsp.error.beans.nullbean=Tentative d''op\u00ef\u00bf\u00bdration bean sur un objet nul.",
                "+jsp.error.beans.nobeaninfo=Pas d''information bean (BeanInfo) pour le bean de type ''{0}'' n''a pu \u00ef\u00bf\u00bdtre trouv\u00ef\u00bf\u00bde, la classe n''existe probablement pas.",
                "+jsp.error.beans.introspection=Une exception s''est produite lors de l''introspection de la m\u00ef\u00bf\u00bdthode read de la propri\u00ef\u00bf\u00bdt\u00ef\u00bf\u00bd ''{0}'' dans le bean de type ''{1}'':\\n{2}",
                "+jsp.error.beans.nomethod=Impossible de trouver une m\u00ef\u00bf\u00bdthode pour lire la propri\u00ef\u00bf\u00bdt\u00ef\u00bf\u00bd ''{0}'' dans le bean de type ''{1}''",
                "+jsp.error.beans.nomethod.setproperty=Impossible de trouver une m\u00ef\u00bf\u00bdthode pour mettre \u00ef\u00bf\u00bd jour la propri\u00ef\u00bf\u00bdt\u00ef\u00bf\u00bd ''{0}'' de type ''{1}''dans le bean de type ''{2}''",
                "+jsp.error.beans.noproperty==Impossible de trouver de l''information sur la propri\u00ef\u00bf\u00bdt\u00ef\u00bf\u00bd ''{0}'' dans le bean de type ''{1}''",
                "+jsp.error.beans.setproperty.noindexset=Impossible de renseigner la propri\u00ef\u00bf\u00bdt\u00ef\u00bf\u00bd ind\u00ef\u00bf\u00bdx\u00ef\u00bf\u00bde",
                " jsp.error.include.tag=Tag jsp:include incorrect",
                "@@ -106,9 +108,9 @@ jsp.error.include.noflush=jsp:include doit avoir \\\"flush=true\\\"",
                " jsp.error.include.badflush=jsp:include page=\\\"...\\\" flush=\\\"true\\\" est la seule combinaison valide dans JSP 1.0",
                "-jsp.error.attempt_to_clear_flushed_buffer=Erreur: Tentative d''effacement d''un tampon qui a d\u00e9j\u00e0 \u00e9t\u00e9 vidang\u00e9 (flush)",
                "-jsp.error.overflow=Erreur: D\u00e9passement de capacit\u00e9 du tampon JSP",
                "-jsp.error.paramexpected=Le tag \\\"param\\\" est attendu avec les attributs \\\"name\\\" et \\\"value\\\" apr\u00e8s le tag \\\"params\\\".",
                "-jsp.error.closeindividualparam=Le tag param doit \u00eatre ferm\u00e9 avec \\\"/>\\\"",
                "-jsp.error.closeparams=Le tag param tag doit \u00eatre ferm\u00e9 avec  /params",
                "-jsp.error.plugin.notype=type non d\u00e9clar\u00e9 dans jsp:plugin",
                "-jsp.error.plugin.nocode=code non d\u00e9clar\u00e9 dans jsp:plugin",
                "+jsp.error.attempt_to_clear_flushed_buffer=Erreur: Tentative d''effacement d''un tampon qui a d\u00ef\u00bf\u00bdj\u00ef\u00bf\u00bd \u00ef\u00bf\u00bdt\u00ef\u00bf\u00bd vidang\u00ef\u00bf\u00bd (flush)",
                "+jsp.error.overflow=Erreur: D\u00ef\u00bf\u00bdpassement de capacit\u00ef\u00bf\u00bd du tampon JSP",
                "+jsp.error.paramexpected=Le tag \\\"param\\\" est attendu avec les attributs \\\"name\\\" et \\\"value\\\" apr\u00ef\u00bf\u00bds le tag \\\"params\\\".",
                "+jsp.error.closeindividualparam=Le tag param doit \u00ef\u00bf\u00bdtre ferm\u00ef\u00bf\u00bd avec \\\"/>\\\"",
                "+jsp.error.closeparams=Le tag param tag doit \u00ef\u00bf\u00bdtre ferm\u00ef\u00bf\u00bd avec  /params",
                "+jsp.error.plugin.notype=type non d\u00ef\u00bf\u00bdclar\u00ef\u00bf\u00bd dans jsp:plugin",
                "+jsp.error.plugin.nocode=code non d\u00ef\u00bf\u00bdclar\u00ef\u00bf\u00bd dans jsp:plugin",
                " jsp.error.ise_on_clear=Il est interdit d''utiliser clear() quand la taille de tampon== 0",
                "@@ -119,26 +121,26 @@ jsp.error.setproperty.invalidSyntax=setProperty: On ne peut avoir de valeur non",
                " jsp.error.setproperty.beanInfoNotFound=setproperty: beanInfo pour le bean {0} est introuvable",
                "-jsp.error.setproperty.paramOrValue=setProperty: param ou value doit \u00eatre pr\u00e9sent",
                "-jsp.error.setproperty.arrayVal=setProperty: on ne peut renseigner les array property {0} au travers d''une valeur cha\u00eene constante (string constant value)",
                "-jsp.warning.keepgen=Attention: Valeur incorrecte pour le initParam keepgenerated. Utilisation de la valeur par d\u00e9faut \\\"false\\\"",
                "-jsp.warning.enablePooling=Attention: Valeur incorrecte pour le initParam enablePooling. Utilisation de la valeur par d\u00e9faut \\\"true\\\"",
                "-jsp.warning.mappedFile=Attention: Valeur incorrecte pour le initParam mappedFile. Utilisation de la valeur par d\u00e9faut \\\"false\\\"",
                "-jsp.warning.sendErrToClient=Attention: Valeur incorrecte pour le  initParam sendErrToClient. Utilisation de la valeur par d\u00e9faut \\\"false\\\"",
                "-jsp.warning.classDebugInfo=Attention: Valeur incorrecte pour le initParam classdebuginfo. Utilisation de la valeur par d\u00e9faut \\\"false\\\"",
                "-jsp.warning.checkInterval=Attention: Valeur incorrecte pour le initParam checkInterval. Utilisation de la valeur par d\u00e9faut \\\"300\\\" secondes",
                "-jsp.warning.development=Attention: Valeur incorrecte pour le initParam development. Utilisation de la valeur par d\u00e9faut \\\"true\\\"",
                "-jsp.warning.reloading=Attention: Valeur incorrecte pour le initParam reloading. Utilisation de la valeur par d\u00e9faut \\\"true\\\"",
                "+jsp.error.setproperty.paramOrValue=setProperty: param ou value doit \u00ef\u00bf\u00bdtre pr\u00ef\u00bf\u00bdsent",
                "+jsp.error.setproperty.arrayVal=setProperty: on ne peut renseigner les array property {0} au travers d''une valeur cha\u00ef\u00bf\u00bdne constante (string constant value)",
                "+jsp.warning.keepgen=Attention: Valeur incorrecte pour le initParam keepgenerated. Utilisation de la valeur par d\u00ef\u00bf\u00bdfaut \\\"false\\\"",
                "+jsp.warning.enablePooling=Attention: Valeur incorrecte pour le initParam enablePooling. Utilisation de la valeur par d\u00ef\u00bf\u00bdfaut \\\"true\\\"",
                "+jsp.warning.mappedFile=Attention: Valeur incorrecte pour le initParam mappedFile. Utilisation de la valeur par d\u00ef\u00bf\u00bdfaut \\\"false\\\"",
                "+jsp.warning.sendErrToClient=Attention: Valeur incorrecte pour le  initParam sendErrToClient. Utilisation de la valeur par d\u00ef\u00bf\u00bdfaut \\\"false\\\"",
                "+jsp.warning.classDebugInfo=Attention: Valeur incorrecte pour le initParam classdebuginfo. Utilisation de la valeur par d\u00ef\u00bf\u00bdfaut \\\"false\\\"",
                "+jsp.warning.checkInterval=Attention: Valeur incorrecte pour le initParam checkInterval. Utilisation de la valeur par d\u00ef\u00bf\u00bdfaut \\\"300\\\" secondes",
                "+jsp.warning.development=Attention: Valeur incorrecte pour le initParam development. Utilisation de la valeur par d\u00ef\u00bf\u00bdfaut \\\"true\\\"",
                "+jsp.warning.reloading=Attention: Valeur incorrecte pour le initParam reloading. Utilisation de la valeur par d\u00ef\u00bf\u00bdfaut \\\"true\\\"",
                " jsp.warning.reloading=",
                " jsp.error.badtaglib=Impossible d''ouvrir le taglibrary {0} : {1}",
                "-jsp.error.badGetReader=Impossible de cr\u00e9er un lecteur (reader) quand le flux n''utilse pas des tampons (not buffered)",
                "-jsp.warning.unknown.element.in.TLD=Attention: El\u00e9ment inconnu {0} dans le TLD",
                "-jsp.warning.unknown.element.in.tag=Attention: El\u00e9ment inconnu {0} dans le tag",
                "+jsp.error.badGetReader=Impossible de cr\u00ef\u00bf\u00bder un lecteur (reader) quand le flux n''utilse pas des tampons (not buffered)",
                "+jsp.warning.unknown.element.in.TLD=Attention: El\u00ef\u00bf\u00bdment inconnu {0} dans le TLD",
                "+jsp.warning.unknown.element.in.tag=Attention: El\u00ef\u00bf\u00bdment inconnu {0} dans le tag",
                " jsp.warning.unknown.element.in.tagfile=Attention: El?ment inconnu {0} dans le tag-file",
                "-jsp.warning.unknown.element.in.attribute=Attention: El\u00e9ment inconnu {0} dans l''attribute",
                "+jsp.warning.unknown.element.in.attribute=Attention: El\u00ef\u00bf\u00bdment inconnu {0} dans l''attribute",
                " jsp.error.more.than.one.taglib=plus d''un taglib dans le TLD: {0}",
                " jsp.error.teiclass.instantiation=Impossible de charger ou d''instancier la classe TagExtraInfo: {0}",
                "-jsp.error.non_null_tei_and_var_subelems=Le tag {0} poss\u00e8de une ou plusieurs variables subelements et une classe TagExtraInfo qui retourne une ou plusieurs VariableInfo",
                "-jsp.error.parse.error.in.TLD=Erreur d''\u00e9valuation (parse) dans le descripteur de librairie de tag (TLD): {0}",
                "+jsp.error.non_null_tei_and_var_subelems=Le tag {0} poss\u00ef\u00bf\u00bdde une ou plusieurs variables subelements et une classe TagExtraInfo qui retourne une ou plusieurs VariableInfo",
                "+jsp.error.parse.error.in.TLD=Erreur d''\u00ef\u00bf\u00bdvaluation (parse) dans le descripteur de librairie de tag (TLD): {0}",
                " jsp.error.unable.to.open.TLD=Impossible d''ouvrir le descripteur de librairie de tag (TLD): {0}",
                " jsp.buffer.size.zero=Taille du tampon <= 0",
                "-jsp.error.file.not.found=Le fichier \\\"{0}\\\" n''a pas \u00e9t\u00e9 trouv\u00e9",
                "+jsp.error.file.not.found=Le fichier \\\"{0}\\\" n''a pas \u00ef\u00bf\u00bdt\u00ef\u00bf\u00bd trouv\u00ef\u00bf\u00bd",
                " jsp.message.copyinguri=Copie de {0} dans {1}",
                "@@ -151,8 +153,8 @@ jsp.message.java_file_name_is=Le nom de fichier Java est: {0}",
                " jsp.message.class_file_name_is=Le nom de fichier Class est: {0}",
                "-jsp.message.accepted=Accept\u00e9 {0} \u00e0 {1}",
                "-jsp.message.adding_jar=Ajout du jar {0} \u00e0 mon classpath",
                "+jsp.message.accepted=Accept\u00ef\u00bf\u00bd {0} \u00ef\u00bf\u00bd {1}",
                "+jsp.message.adding_jar=Ajout du jar {0} \u00ef\u00bf\u00bd mon classpath",
                " jsp.message.compiling_with=Compilation avec: {0}",
                " jsp.message.template_text=texte template",
                "-jsp.error.missing_attribute=D''apr\u00e8s le TLD l''attribut {0} est obligatoire pour le tag {1}",
                "-jsp.error.bad_attribute=L''attribut {0} est incorrect pour le tag {1} d''apr\u00e8s la TLD indiqu\u00e9e",
                "+jsp.error.missing_attribute=D''apr\u00ef\u00bf\u00bds le TLD l''attribut {0} est obligatoire pour le tag {1}",
                "+jsp.error.bad_attribute=L''attribut {0} est incorrect pour le tag {1} d''apr\u00ef\u00bf\u00bds la TLD indiqu\u00ef\u00bf\u00bde",
                " jsp.error.webxml_not_found=Impossible de localiser le fichier web.xml",
                "@@ -162,39 +164,39 @@ jsp.message.cp_is=Le Classpath {0} est: {1}",
                " jsp.error.unable.to_load_taghandler_class=Impossible de charger la classe gestionnaire de tag {0} car {1}",
                "-jsp.error.unable.to_find_method=Impossible de trouver une m\u00e9thode de mise \u00e0 jour pour l''attribut: {0}",
                "-jsp.error.unable.to_convert_string=Impossible de convertir une cha\u00eene vers {0} pour l''attribut {1}",
                "+jsp.error.unable.to_find_method=Impossible de trouver une m\u00ef\u00bf\u00bdthode de mise \u00ef\u00bf\u00bd jour pour l''attribut: {0}",
                "+jsp.error.unable.to_convert_string=Impossible de convertir une cha\u00ef\u00bf\u00bdne vers {0} pour l''attribut {1}",
                " jsp.error.unable.to_introspect=Impossible d''introspecter la classe gestionnaire de tag : {0} car {1}",
                "-jsp.error.bad_tag=Aucun tag {0} dans la librairie de tag import\u00e9e avec le pr\u00e9fixe {1}",
                "-jsp.error.bad_string_Character=Impossible d''extraire un caract\u00e8re depuis un tableau vide",
                "-jsp.error.bad_string_char=Impossible d''extraire un caract\u00e8re depuis un tableau vide",
                "-jsp.warning.compiler.class.cantcreate=Impossible de cr\u00e9er une instance de classe plugin pour le compilateur indiqu\u00e9 {0} due to {1}. Utilisation par d\u00e9faut du Compilateur Java Sun.",
                "-jsp.warning.compiler.class.notfound=La classe plugin de compilateur {0} est introuvable. Utilisation par d\u00e9faut du Compilateur Java Sun.",
                "-jsp.warning.compiler.path.notfound=le chemin de compilateur indiqu\u00e9 {0} est introuvable. Utilisation par d\u00e9faut du chemin syst\u00e8me (system PATH).",
                "-jsp.error.jspc.uriroot_not_dir=L''option -uriroot doit indiqu\u00e9 un r\u00e9pertoire d\u00e9j\u00e0 existant",
                "-jspc.implicit.uriRoot=uriRoot r\u00e9gl\u00e9 implicitement \u00e0 \"{0}\"",
                "+jsp.error.bad_tag=Aucun tag {0} dans la librairie de tag import\u00ef\u00bf\u00bde avec le pr\u00ef\u00bf\u00bdfixe {1}",
                "+jsp.error.bad_string_Character=Impossible d''extraire un caract\u00ef\u00bf\u00bdre depuis un tableau vide",
                "+jsp.error.bad_string_char=Impossible d''extraire un caract\u00ef\u00bf\u00bdre depuis un tableau vide",
                "+jsp.warning.compiler.class.cantcreate=Impossible de cr\u00ef\u00bf\u00bder une instance de classe plugin pour le compilateur indiqu\u00ef\u00bf\u00bd {0} due to {1}. Utilisation par d\u00ef\u00bf\u00bdfaut du Compilateur Java Sun.",
                "+jsp.warning.compiler.class.notfound=La classe plugin de compilateur {0} est introuvable. Utilisation par d\u00ef\u00bf\u00bdfaut du Compilateur Java Sun.",
                "+jsp.warning.compiler.path.notfound=le chemin de compilateur indiqu\u00ef\u00bf\u00bd {0} est introuvable. Utilisation par d\u00ef\u00bf\u00bdfaut du chemin syst\u00ef\u00bf\u00bdme (system PATH).",
                "+jsp.error.jspc.uriroot_not_dir=L''option -uriroot doit indiqu\u00ef\u00bf\u00bd un r\u00ef\u00bf\u00bdpertoire d\u00ef\u00bf\u00bdj\u00ef\u00bf\u00bd existant",
                "+jspc.implicit.uriRoot=uriRoot r\u00ef\u00bf\u00bdgl\u00ef\u00bf\u00bd implicitement \u00ef\u00bf\u00bd \"{0}\"",
                " jspc.usage=Usage: jspc <options> [--] <fichiers jsp>\\n\\",
                "-o\u00f9 les fichiers jsp sont n''importe quel nombre de:\\n\\",
                "-\\    <file>         Un fichier \u00e0 \u00e9valuer (parser) comme page jsp\\n\\",
                "-\\    -webapp <dir>  Un r\u00e9pertoire contenant une application web, toutes les pages jsp\\n\\",
                "-\\                   seront r\u00e9cursivement \u00e9valu\u00e9es\\n\\",
                "-o\u00f9 les options comprennet:\\n\\",
                "-\\    -q          Mode silencieux (identique \u00e0 -v0)\\n\\",
                "-\\    -v[#]       Mode bavard (Le nombre optionnel indique le niveau, 2 par d\u00e9faut)\\n\\",
                "+o\u00ef\u00bf\u00bd les fichiers jsp sont n''importe quel nombre de:\\n\\",
                "+\\    <file>         Un fichier \u00ef\u00bf\u00bd \u00ef\u00bf\u00bdvaluer (parser) comme page jsp\\n\\",
                "+\\    -webapp <dir>  Un r\u00ef\u00bf\u00bdpertoire contenant une application web, toutes les pages jsp\\n\\",
                "+\\                   seront r\u00ef\u00bf\u00bdcursivement \u00ef\u00bf\u00bdvalu\u00ef\u00bf\u00bdes\\n\\",
                "+o\u00ef\u00bf\u00bd les options comprennet:\\n\\",
                "+\\    -q          Mode silencieux (identique \u00ef\u00bf\u00bd -v0)\\n\\",
                "+\\    -v[#]       Mode bavard (Le nombre optionnel indique le niveau, 2 par d\u00ef\u00bf\u00bdfaut)\\n\\",
                " \\    -d <dir>    Dossier de sortie\\n\\",
                " \\    -dd <dir>   Dossier de sortie literal.  (Les dossiers de paquets ne seront pas construits)\\n\\",
                "-\\    -l          Sortie du nom la page JSP en cas d''\u00e9chec\\n\\",
                "-\\    -s          Sortie du nom la page JSP en cas de succ\u00e8s\\n\\",
                "+\\    -l          Sortie du nom la page JSP en cas d''\u00ef\u00bf\u00bdchec\\n\\",
                "+\\    -s          Sortie du nom la page JSP en cas de succ\u00ef\u00bf\u00bds\\n\\",
                " \\    -p <name>   Nom du paquet cible\\n\\",
                " \\    -c <name>   Nom d'un nom de classe cible\\n\\",
                "-\\                (s''applique seulement \u00e0 la premi\u00e8re page JSP)\\n\\",
                "-\\    -mapped     G\u00e9n\u00e8re des appels \u00e0 write() s\u00e9par\u00e9s pour chaque ligne HTML dans la JSP\\n\\",
                "-\\    -die[#]     G\u00e9n\u00e8re un code d''erreur de retour (#) en cas d''erreurs fatales.\\n\\",
                "-\\                Si le nombre est absent ou non num\u00e9rique, le d\u00e9faut est 1.\\n\\",
                "-\\    -uribase <dir>  Le r\u00e9pertoire uri de compilations relatif\\n\\",
                "-\\                    (Par d\u00e9faut \"/\")\\n\\",
                "-\\    -uriroot <dir>  The r\u00e9pertoire racine contre lequel les fichiers seront r\u00e9solus\\n\\",
                "-\\                    , (Par d\u00e9faut le r\u00e9pertoire depuis lequel jspc est appel\u00e9)\\n\\",
                "-\\    -webinc <file>  Cr\u00e9ation d''association partielle de servlet pour l''option -webapp.\\n\\",
                "-\\    -webxml <file>  Cr\u00e9ation d''un fichier web.xml complet pour l''option -webapp.\\n\\",
                "+\\                (s''applique seulement \u00ef\u00bf\u00bd la premi\u00ef\u00bf\u00bdre page JSP)\\n\\",
                "+\\    -mapped     G\u00ef\u00bf\u00bdn\u00ef\u00bf\u00bdre des appels \u00ef\u00bf\u00bd write() s\u00ef\u00bf\u00bdpar\u00ef\u00bf\u00bds pour chaque ligne HTML dans la JSP\\n\\",
                "+\\    -die[#]     G\u00ef\u00bf\u00bdn\u00ef\u00bf\u00bdre un code d''erreur de retour (#) en cas d''erreurs fatales.\\n\\",
                "+\\                Si le nombre est absent ou non num\u00ef\u00bf\u00bdrique, le d\u00ef\u00bf\u00bdfaut est 1.\\n\\",
                "+\\    -uribase <dir>  Le r\u00ef\u00bf\u00bdpertoire uri de compilations relatif\\n\\",
                "+\\                    (Par d\u00ef\u00bf\u00bdfaut \"/\")\\n\\",
                "+\\    -uriroot <dir>  The r\u00ef\u00bf\u00bdpertoire racine contre lequel les fichiers seront r\u00ef\u00bf\u00bdsolus\\n\\",
                "+\\                    , (Par d\u00ef\u00bf\u00bdfaut le r\u00ef\u00bf\u00bdpertoire depuis lequel jspc est appel\u00ef\u00bf\u00bd)\\n\\",
                "+\\    -webinc <file>  Cr\u00ef\u00bf\u00bdation d''association partielle de servlet pour l''option -webapp.\\n\\",
                "+\\    -webxml <file>  Cr\u00ef\u00bf\u00bdation d''un fichier web.xml complet pour l''option -webapp.\\n\\",
                " \\    -ieplugin <clsid>  Le classid du Plugin Java Plugin pour Internet Explorer\\n\\",
                "-\\    -sax2 <driverclassname>  Le nom de classe du Driver SAX 2.0 \u00e0 utiliser\\n\\",
                "+\\    -sax2 <driverclassname>  Le nom de classe du Driver SAX 2.0 \u00ef\u00bf\u00bd utiliser\\n\\",
                " \\    -trimSpaces        Trim spaces in template text between actions, directives\\n\\",
                "@@ -210,3 +212,3 @@ jspc.webxml.header=<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\\n\\",
                " <!--\\n\\",
                "-Cr\u00e9er automatiquement par le JspC Apache Jakarta Tomcat.\\n\\",
                "+Cr\u00ef\u00bf\u00bder automatiquement par le JspC Apache Jakarta Tomcat.\\n\\",
                " -->\\n\\",
                "@@ -219,3 +221,3 @@ jspc.webinc.header=\\n\\",
                " <!--\\n\\",
                "-Cr\u00e9er automatiquement par le JspC Apache Jakarta Tomcat.\\n\\",
                "+Cr\u00ef\u00bf\u00bder automatiquement par le JspC Apache Jakarta Tomcat.\\n\\",
                " Placez ce fragment dans le fichier web.xml avant all icon, display-name,\\n\\",
                "@@ -229,7 +231,7 @@ env-entry, and ejb-ref elements should follow this fragment.\\n\\",
                " -->\\n",
                "-jspc.error.jasperException=erreur-le fichier ''{0}'' a g\u00e9n\u00e9r\u00e9 l''exception d''\u00e9valuation suivante: {1}",
                "-jspc.error.generalException=ERREUR-le fichier ''{0}'' a g\u00e9n\u00e9r\u00e9 l''exception g\u00e9n\u00e9rale suivante:",
                "+jspc.error.jasperException=erreur-le fichier ''{0}'' a g\u00ef\u00bf\u00bdn\u00ef\u00bf\u00bdr\u00ef\u00bf\u00bd l''exception d''\u00ef\u00bf\u00bdvaluation suivante: {1}",
                "+jspc.error.generalException=ERREUR-le fichier ''{0}'' a g\u00ef\u00bf\u00bdn\u00ef\u00bf\u00bdr\u00ef\u00bf\u00bd l''exception g\u00ef\u00bf\u00bdn\u00ef\u00bf\u00bdrale suivante:",
                " jspc.error.fileDoesNotExist=L''argument fichier ''{0}'' n''existe pas",
                "-jspc.error.emptyWebApp=-webapp n\u00e9cessite \u00e0 sa suite un argument fichier",
                "-jsp.error.library.invalid=La page JSP page est incorrecte d''apr\u00e8s la librairie {0}: {1}",
                "+jspc.error.emptyWebApp=-webapp n\u00ef\u00bf\u00bdcessite \u00ef\u00bf\u00bd sa suite un argument fichier",
                "+jsp.error.library.invalid=La page JSP page est incorrecte d''apr\u00ef\u00bf\u00bds la librairie {0}: {1}",
                " jsp.error.tlvclass.instantiation=Impossible de charger ou d''instancier la classe TagLibraryValidator: {0}",
                "@@ -237,38 +239,38 @@ jsp.error.tlv.invalid.page=Message d''erreurs de validation provenant du TagLibr",
                " jsp.error.tei.invalid.attributes=Message d''erreurs de validation provenant du TagExtraInfo pour {0}",
                "-jsp.parser.sax.propertynotsupported=Propri\u00e9t\u00e9 SAX non support\u00e9e: {0}",
                "-jsp.parser.sax.propertynotrecognized=Propri\u00e9t\u00e9 SAX non reconnue: {0}",
                "-jsp.parser.sax.featurenotsupported=Fonctionnalit\u00e9 SAX non support\u00e9e: {0}",
                "-jsp.parser.sax.featurenotrecognized=Fonctionnalit\u00e9 SAX non reconnue: {0}",
                "-jsp.error.no.more.content=Fin de contenu alors que l''\u00e9valution n''\u00e9tait pas termin\u00e9e: erreur de tags imbriqu\u00e9s?",
                "-jsp.error.parse.xml=Erreur d''\u00e9valuation XML sur le fichier {0}",
                "-jsp.error.parse.xml.line=Erreur d''\u00e9valuation XML sur le fichier  {0}: (ligne {1}, col {2})",
                "-jsp.error.parse.xml.scripting.invalid.body=Le corps de l''\u00e9l\u00e9ment {0} ne doit contenir aucun \u00e9l\u00e9ments XML",
                "+jsp.parser.sax.propertynotsupported=Propri\u00ef\u00bf\u00bdt\u00ef\u00bf\u00bd SAX non support\u00ef\u00bf\u00bde: {0}",
                "+jsp.parser.sax.propertynotrecognized=Propri\u00ef\u00bf\u00bdt\u00ef\u00bf\u00bd SAX non reconnue: {0}",
                "+jsp.parser.sax.featurenotsupported=Fonctionnalit\u00ef\u00bf\u00bd SAX non support\u00ef\u00bf\u00bde: {0}",
                "+jsp.parser.sax.featurenotrecognized=Fonctionnalit\u00ef\u00bf\u00bd SAX non reconnue: {0}",
                "+jsp.error.no.more.content=Fin de contenu alors que l''\u00ef\u00bf\u00bdvalution n''\u00ef\u00bf\u00bdtait pas termin\u00ef\u00bf\u00bde: erreur de tags imbriqu\u00ef\u00bf\u00bds?",
                "+jsp.error.parse.xml=Erreur d''\u00ef\u00bf\u00bdvaluation XML sur le fichier {0}",
                "+jsp.error.parse.xml.line=Erreur d''\u00ef\u00bf\u00bdvaluation XML sur le fichier  {0}: (ligne {1}, col {2})",
                "+jsp.error.parse.xml.scripting.invalid.body=Le corps de l''\u00ef\u00bf\u00bdl\u00ef\u00bf\u00bdment {0} ne doit contenir aucun \u00ef\u00bf\u00bdl\u00ef\u00bf\u00bdments XML",
                " jsp.error.internal.tldinit=Exception lors de l'initialisation de TldLocationsCache: {0}",
                " jsp.error.internal.filenotfound=Erreur interne: Fichier {0} introuvable",
                "-jsp.error.internal.evaluator_not_found=Erreur interne: Impossible de charger l''\u00e9valuateur d''expression",
                "+jsp.error.internal.evaluator_not_found=Erreur interne: Impossible de charger l''\u00ef\u00bf\u00bdvaluateur d''expression",
                " jsp.error.parse.xml.invalidPublicId=PUBLIC ID invalide: {0}",
                " jsp.error.include.flush.invalid.value=Valeur incorrecte pour l''attribut flush: {0}",
                "-jsp.error.unsupported.encoding=Encodage non support\u00e9: {0}",
                "+jsp.error.unsupported.encoding=Encodage non support\u00ef\u00bf\u00bd: {0}",
                " jsp.warning.unknown.element.in.variable=Attention: Element inconnu {0} dans la variable",
                "-tld.error.variableNotAllowed=Ceci est une erreur pour le tag qui poss\u00e8de une ou plusieurs variables subelements pour avoir une classe TagExtraInfo qui retourne un objet non-nul.",
                "-jsp.error.tldInWebDotXmlNotFound=Ne peut trouver le TLD {1} pour l''URI {0} indiqu\u00e9e dans le fichier web.xml",
                "-jsp.error.taglibDirective.absUriCannotBeResolved=L''uri absolue: {0} ne peut \u00eatre r\u00e9solu dans le fichier web.xml ou dans les fichiers jar d\u00e9ploy\u00e9s avec cette application",
                "-jsp.error.taglibDirective.missing.location=Ni l''uri' ni l''attribut 'tagdir' n''ont \u00e9t\u00e9 indiqu\u00e9s dans la directive taglib",
                "-jsp.error.invalid.tagdir=Le r\u00e9pertoire du fichier Tag {0} ne commence pas par \\\"/WEB-INF/tags\\\"",
                "-jsp.error.unterminated.user.tag=Tag user-defined non termin\u00e9: Le tag de fermeture {0} est introuvable found ou incorrectement imbriqu\u00e9",
                "-#jspx.error.templateDataNotInJspCdata=Erreur de validation: l''\u00e9l\u00e9ment &lt;{0}&gt; ne peut avoir de donn\u00e9es template. Les donn\u00e9es Template doivent \u00eatre encapsul\u00e9es \u00e0 l''int\u00e9rieur d''un \u00e9l\u00e9ment &lt;jsp:cdata&gt;. [JSP1.2 PFD section 5.1.9]\\nDonn\u00e9e Template en erreur: {1}",
                "-jspx.error.templateDataNotInJspCdata=Erreur de validation: l''\u00e9l\u00e9ment &lt;{0}&gt; ne peut avoir de donn\u00e9es template. Les donn\u00e9es Template doivent \u00eatre encapsul\u00e9es \u00e0 l''int\u00e9rieur d''un \u00e9l\u00e9ment &lt;jsp:text&gt;. [JSP1.2 PFD section 5.1.9]\\nDonn\u00e9e Template en erreur: {1}",
                "+tld.error.variableNotAllowed=Ceci est une erreur pour le tag qui poss\u00ef\u00bf\u00bdde une ou plusieurs variables subelements pour avoir une classe TagExtraInfo qui retourne un objet non-nul.",
                "+jsp.error.tldInWebDotXmlNotFound=Ne peut trouver le TLD {1} pour l''URI {0} indiqu\u00ef\u00bf\u00bde dans le fichier web.xml",
                "+jsp.error.taglibDirective.absUriCannotBeResolved=L''uri absolue: {0} ne peut \u00ef\u00bf\u00bdtre r\u00ef\u00bf\u00bdsolu dans le fichier web.xml ou dans les fichiers jar d\u00ef\u00bf\u00bdploy\u00ef\u00bf\u00bds avec cette application",
                "+jsp.error.taglibDirective.missing.location=Ni l''uri' ni l''attribut 'tagdir' n''ont \u00ef\u00bf\u00bdt\u00ef\u00bf\u00bd indiqu\u00ef\u00bf\u00bds dans la directive taglib",
                "+jsp.error.invalid.tagdir=Le r\u00ef\u00bf\u00bdpertoire du fichier Tag {0} ne commence pas par \\\"/WEB-INF/tags\\\"",
                "+jsp.error.unterminated.user.tag=Tag user-defined non termin\u00ef\u00bf\u00bd: Le tag de fermeture {0} est introuvable found ou incorrectement imbriqu\u00ef\u00bf\u00bd",
                "+#jspx.error.templateDataNotInJspCdata=Erreur de validation: l''\u00ef\u00bf\u00bdl\u00ef\u00bf\u00bdment &lt;{0}&gt; ne peut avoir de donn\u00ef\u00bf\u00bdes template. Les donn\u00ef\u00bf\u00bdes Template doivent \u00ef\u00bf\u00bdtre encapsul\u00ef\u00bf\u00bdes \u00ef\u00bf\u00bd l''int\u00ef\u00bf\u00bdrieur d''un \u00ef\u00bf\u00bdl\u00ef\u00bf\u00bdment &lt;jsp:cdata&gt;. [JSP1.2 PFD section 5.1.9]\\nDonn\u00ef\u00bf\u00bde Template en erreur: {1}",
                "+jspx.error.templateDataNotInJspCdata=Erreur de validation: l''\u00ef\u00bf\u00bdl\u00ef\u00bf\u00bdment &lt;{0}&gt; ne peut avoir de donn\u00ef\u00bf\u00bdes template. Les donn\u00ef\u00bf\u00bdes Template doivent \u00ef\u00bf\u00bdtre encapsul\u00ef\u00bf\u00bdes \u00ef\u00bf\u00bd l''int\u00ef\u00bf\u00bdrieur d''un \u00ef\u00bf\u00bdl\u00ef\u00bf\u00bdment &lt;jsp:text&gt;. [JSP1.2 PFD section 5.1.9]\\nDonn\u00ef\u00bf\u00bde Template en erreur: {1}",
                " #Erreur lors du traitement du fichier jar de la taglib {0}: {1}",
                "-jsp.error.taglib.reserved.prefix=Le pr\u00e9fixe taglib {0} est r\u00e9serv\u00e9",
                "-jsp.error.invalid.javaEncoding=Encodage java incorrect. Essai de {0} puis de {1}. Les deux ont \u00e9chou\u00e9.",
                "-jsp.error.needAlternateJavaEncoding=L''encodage java par d\u00e9faut {0} est incorrect sur votre environnement java. Une alternative peut \u00eatre indiqu\u00e9e via le param\u00eatre 'javaEncoding' de la JspServlet.",
                "-#Erreur lors de la compilation, utilis\u00e9 pour la ligne jsp des messages d''erreur",
                "-jsp.error.single.line.number=Une erreur s''est produite \u00e0 la ligne: {0} dans le fichier jsp: {1}",
                "+jsp.error.taglib.reserved.prefix=Le pr\u00ef\u00bf\u00bdfixe taglib {0} est r\u00ef\u00bf\u00bdserv\u00ef\u00bf\u00bd",
                "+jsp.error.invalid.javaEncoding=Encodage java incorrect. Essai de {0} puis de {1}. Les deux ont \u00ef\u00bf\u00bdchou\u00ef\u00bf\u00bd.",
                "+jsp.error.needAlternateJavaEncoding=L''encodage java par d\u00ef\u00bf\u00bdfaut {0} est incorrect sur votre environnement java. Une alternative peut \u00ef\u00bf\u00bdtre indiqu\u00ef\u00bf\u00bde via le param\u00ef\u00bf\u00bdtre 'javaEncoding' de la JspServlet.",
                "+#Erreur lors de la compilation, utilis\u00ef\u00bf\u00bd pour la ligne jsp des messages d''erreur",
                "+jsp.error.single.line.number=Une erreur s''est produite \u00ef\u00bf\u00bd la ligne: {0} dans le fichier jsp: {1}",
                " jsp.error.multiple.line.number=\\n\\nUne erreur s''est produite entre les lignes: {0} et {1} dans le fichier jsp: {2}\\n\\n",
                "-jsp.error.corresponding.servlet=Erreur de servlet g\u00e9n\u00e9r\u00e9e:\\n",
                "-jsp.error.empty.body.not.allowed=Un corps vide n'est pas autoris\u00e9 pour {0}",
                "-jsp.error.jspbody.required=Doit utiliser jsp:body pour indiqu\u00e9 le corps de tag body de {0} si jsp:attribute est utilis\u00e9.",
                "+jsp.error.corresponding.servlet=Erreur de servlet g\u00ef\u00bf\u00bdn\u00ef\u00bf\u00bdr\u00ef\u00bf\u00bde:\\n",
                "+jsp.error.empty.body.not.allowed=Un corps vide n'est pas autoris\u00ef\u00bf\u00bd pour {0}",
                "+jsp.error.jspbody.required=Doit utiliser jsp:body pour indiqu\u00ef\u00bf\u00bd le corps de tag body de {0} si jsp:attribute est utilis\u00ef\u00bf\u00bd.",
                " jsp.error.jspbody.emptybody.only=Le tag {0} ne peut avoir que jsp:attribute dans son corps.",
                "-jsp.error.no.scriptlets=Les \u00e9l\u00e9ments de Scripting ( <%!, <jsp:declaration, <%=, <jsp:expression, <%, <jsp:scriptlet ) ne sont pas autoris\u00e9s ici.",
                "-jsp.error.internal.unexpected_node_type=Erreur Interne: Type de node inattendu rencontr\u00e9",
                "+jsp.error.no.scriptlets=Les \u00ef\u00bf\u00bdl\u00ef\u00bf\u00bdments de Scripting ( <%!, <jsp:declaration, <%=, <jsp:expression, <%, <jsp:scriptlet ) ne sont pas autoris\u00ef\u00bf\u00bds ici.",
                "+jsp.error.internal.unexpected_node_type=Erreur Interne: Type de node inattendu rencontr\u00ef\u00bf\u00bd",
                " jsp.error.tld.fn.invalid.signature=Synthaxe invalide pour la signature de fonction dans la TLD.  Librairie de Tag : {0}, Fonction: {1}",
                "@@ -276,28 +278,28 @@ jsp.error.tld.fn.invalid.signature.classnotfound=Synthaxe invalide pour la signa",
                " jsp.error.tld.fn.invalid.signature.commaexpected=Synthaxe invalide pour la signature de fonction dans la TLD.  Virgule ',' attendue.  Librairie de Tag: {0}, Fonction: {1}.",
                "-jsp.error.tld.fn.invalid.signature.parenexpected=Synthaxe invalide pour la signature de fonction dans la TLD.  Parenth\u00e8se '(' attendue.  Librairie de Tag: {0}, Fonction: {1}.",
                "-jsp.error.dynamic.attributes.not.implemented=Le tag {0} indique qu''il accepte des attributs dynamics mais n''impl\u00e9mente pas l''interface requise",
                "+jsp.error.tld.fn.invalid.signature.parenexpected=Synthaxe invalide pour la signature de fonction dans la TLD.  Parenth\u00ef\u00bf\u00bdse '(' attendue.  Librairie de Tag: {0}, Fonction: {1}.",
                "+jsp.error.dynamic.attributes.not.implemented=Le tag {0} indique qu''il accepte des attributs dynamics mais n''impl\u00ef\u00bf\u00bdmente pas l''interface requise",
                " jsp.error.nomatching.fragment=Ne peut trouver une directive attribut (avec pour nom={0} et fragment=true) avant la directive fragment.",
                "-jsp.error.attribute.noequal=Symbole \u00e9gal (equal) attendu",
                "+jsp.error.attribute.noequal=Symbole \u00ef\u00bf\u00bdgal (equal) attendu",
                " jsp.error.attribute.noquote=Symbole guillemet (quote) attendu",
                "-jsp.error.attribute.unterminated=L''attribut pour {0} n''est pas correctement termin\u00e9",
                "+jsp.error.attribute.unterminated=L''attribut pour {0} n''est pas correctement termin\u00ef\u00bf\u00bd",
                " jsp.error.missing.tagInfo=L''objet TagInfo de {0} est absent de la TLD",
                "-jsp.error.fragmentwithtype=On ne peut indiquer \u00e0 la fois les attributs 'fragment' et 'type'.  Si 'fragment' est pr\u00e9sent, 'type' est fix\u00e9 comme 'javax.servlet.jsp.tagext.JspFragment'",
                "-jsp.error.fragmentwithrtexprvalue=On ne peut indiquer \u00e0 la fois les attributs 'fragment' et 'rtexprvalue'.  Si 'fragment' est pr\u00e9sent, 'rtexprvalue' est fix\u00e9 \u00e0 'true'",
                "-jsp.error.fragmentWithDeclareOrScope=Les attributs 'fragment' et 'declare' ou 'scope' sont indiqu\u00e9s dans la directive variable",
                "-jsp.error.var_and_varReader=A la fois 'var' et 'varReader' sont indiqu\u00e9s",
                "-jsp.warning.bad.urlpattern.propertygroup=Mauvaise valeur {0} dans le sous-\u00e9l\u00e9ment (subelement) url-pattern du fichier web.xml",
                "+jsp.error.fragmentwithtype=On ne peut indiquer \u00ef\u00bf\u00bd la fois les attributs 'fragment' et 'type'.  Si 'fragment' est pr\u00ef\u00bf\u00bdsent, 'type' est fix\u00ef\u00bf\u00bd comme 'javax.servlet.jsp.tagext.JspFragment'",
                "+jsp.error.fragmentwithrtexprvalue=On ne peut indiquer \u00ef\u00bf\u00bd la fois les attributs 'fragment' et 'rtexprvalue'.  Si 'fragment' est pr\u00ef\u00bf\u00bdsent, 'rtexprvalue' est fix\u00ef\u00bf\u00bd \u00ef\u00bf\u00bd 'true'",
                "+jsp.error.fragmentWithDeclareOrScope=Les attributs 'fragment' et 'declare' ou 'scope' sont indiqu\u00ef\u00bf\u00bds dans la directive variable",
                "+jsp.error.var_and_varReader=A la fois 'var' et 'varReader' sont indiqu\u00ef\u00bf\u00bds",
                "+jsp.warning.bad.urlpattern.propertygroup=Mauvaise valeur {0} dans le sous-\u00ef\u00bf\u00bdl\u00ef\u00bf\u00bdment (subelement) url-pattern du fichier web.xml",
                " jsp.error.unknown_attribute_type=Type d''attribut inconnu ({1}) pour l''attribut {0}.",
                " jsp.error.jspelement.missing.name=L''attribut obligatoire 'name' est absent de jsp:element",
                "-jsp.error.xmlns.redefinition.notimplemented=Erreur Interne: Tentative de red\u00e9finition de xmlns:{0}.  La red\u00e9finition des domaines de noms (namespaces) n''est pas impl\u00e9ment\u00e9e.",
                "+jsp.error.xmlns.redefinition.notimplemented=Erreur Interne: Tentative de red\u00ef\u00bf\u00bdfinition de xmlns:{0}.  La red\u00ef\u00bf\u00bdfinition des domaines de noms (namespaces) n''est pas impl\u00ef\u00bf\u00bdment\u00ef\u00bf\u00bde.",
                " jsp.error.could.not.add.taglibraries=Impossible d''ajouter une ou plusieurs librairies de tag.",
                "-jsp.error.duplicate.name.jspattribute=L''attribut {0} indiqu\u00e9 dans l''action standard ou sp\u00e9cifique (custom) apparait aussi comme valeur de l''attribut de nom dans le jsp:attribute inclus",
                "-jsp.error.not.in.template={0} n''est pas autoris\u00e9 dans le corps de texte de template.",
                "+jsp.error.duplicate.name.jspattribute=L''attribut {0} indiqu\u00ef\u00bf\u00bd dans l''action standard ou sp\u00ef\u00bf\u00bdcifique (custom) apparait aussi comme valeur de l''attribut de nom dans le jsp:attribute inclus",
                "+jsp.error.not.in.template={0} n''est pas autoris\u00ef\u00bf\u00bd dans le corps de texte de template.",
                " jsp.error.badStandardAction=L''action n''est pas reconnue comme une action standard.",
                " jsp.error.tagdirective.badbodycontent=Contenu de corps (body-content) ({0}) invalide dans la directive tag",
                "-jsp.error.config_pagedir_encoding_mismatch=L''encode de page (Page-encoding) indiqu\u00e9 dans le jsp-property-group ({0}) est diff\u00e9rent de celui indiqu\u00e9 dans la directive de page ({1})",
                "+jsp.error.config_pagedir_encoding_mismatch=L''encode de page (Page-encoding) indiqu\u00ef\u00bf\u00bd dans le jsp-property-group ({0}) est diff\u00ef\u00bf\u00bdrent de celui indiqu\u00ef\u00bf\u00bd dans la directive de page ({1})",
                " jsp.error.prolog_pagedir_encoding_mismatch=",
                " jsp.error.prolog_config_encoding_mismatch=",
                "-jsp.error.attribute.custom.non_rt_with_expr=D''apr\u00e8s la TLD, l''attribut {0} n''accepte aucune expression",
                "-jsp.error.scripting.variable.missing_name=Incapable de d\u00e9terminer le nom de variable scripting d''apr\u00e8s l''attribut {0}",
                "-jasper.error.emptybodycontent.nonempty=D''apr\u00e8s la TLD, le tag {0} doit \u00eatre vide, mais ne l''est pas",
                "+jsp.error.attribute.custom.non_rt_with_expr=D''apr\u00ef\u00bf\u00bds la TLD, l''attribut {0} n''accepte aucune expression",
                "+jsp.error.scripting.variable.missing_name=Incapable de d\u00ef\u00bf\u00bdterminer le nom de variable scripting d''apr\u00ef\u00bf\u00bds l''attribut {0}",
                "+jasper.error.emptybodycontent.nonempty=D''apr\u00ef\u00bf\u00bds la TLD, le tag {0} doit \u00ef\u00bf\u00bdtre vide, mais ne l''est pas",
                " jsp.error.tagfile.nameNotUnique=",
                "@@ -305,3 +307,3 @@ jsp.error.tagfile.nameFrom.noAttribute=",
                " jsp.error.tagfile.nameFrom.badAttribute=",
                "-jsp.error.useBean.noSession=Il est ill\u00e9gal pour useBean d''utiliser une port\u00e9e de session (session scope) quand la page JSP indique (via la directive de page) qu''elle ne participe pas aux sessions",
                "+jsp.error.useBean.noSession=Il est ill\u00ef\u00bf\u00bdgal pour useBean d''utiliser une port\u00ef\u00bf\u00bde de session (session scope) quand la page JSP indique (via la directive de page) qu''elle ne participe pas aux sessions",
                " jsp.error.attributes.not.allowed = {0} ne doit avoir aucun attribut",
                "diff --git a/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_ja.properties b/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_ja.properties",
                "index 7766110d8..f3df353e5 100644",
                "--- a/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_ja.properties",
                "+++ b/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_ja.properties",
                "@@ -1,18 +1,20 @@",
                "-# Licensed to the Apache Software Foundation (ASF) under one or more",
                "-# contributor license agreements.  See the NOTICE file distributed with",
                "-# this work for additional information regarding copyright ownership.",
                "-# The ASF licenses this file to You under the Apache License, Version 2.0",
                "-# (the \"License\"); you may not use this file except in compliance with",
                "-# the License.  You may obtain a copy of the License at",
                " #",
                "-#     http://www.apache.org/licenses/LICENSE-2.0",
                "+# Licensed to the Apache Software Foundation (ASF) under one",
                "+# or more contributor license agreements.  See the NOTICE file",
                "+# distributed with this work for additional information",
                "+# regarding copyright ownership.  The ASF licenses this file",
                "+# to you under the Apache License, Version 2.0 (the",
                "+# \"License\"); you may not use this file except in compliance",
                "+# with the License.  You may obtain a copy of the License at",
                " #",
                "-# Unless required by applicable law or agreed to in writing, software",
                "-# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "-# See the License for the specific language governing permissions and",
                "-# limitations under the License.",
                "-",
                "-# $Id: LocalStrings_ja.properties 565193 2007-08-12 22:53:10Z markt $",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                "+#",
                "+# Unless required by applicable law or agreed to in writing,",
                "+# software distributed under the License is distributed on an",
                "+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+# KIND, either express or implied.  See the License for the",
                "+# specific language governing permissions and limitations",
                "+# under the License.",
                " #",
                "+",
                " # Default localized string information",
                "diff --git a/plugins/osgi/src/main/resources/struts-osgi.properties b/plugins/osgi/src/main/resources/struts-osgi.properties",
                "index de035f0be..7981568e7 100644",
                "--- a/plugins/osgi/src/main/resources/struts-osgi.properties",
                "+++ b/plugins/osgi/src/main/resources/struts-osgi.properties",
                "@@ -1 +1,2 @@",
                "+#",
                " # Licensed to the Apache Software Foundation (ASF) under one",
                "@@ -8,3 +9,3 @@",
                " #",
                "-#   http://www.apache.org/licenses/LICENSE-2.0",
                "+#  http://www.apache.org/licenses/LICENSE-2.0",
                " #",
                "@@ -16,3 +17,3 @@",
                " # under the License.",
                "-",
                "+#",
                " scanning.package.includes = com.opensymphony.xwork2, \\"
            ],
            "changed_files": [
                "apps/rest-showcase/src/main/resources/velocity.properties",
                "apps/showcase/src/main/resources/globalMessages.properties",
                "apps/showcase/src/main/resources/globalMessages_de.properties",
                "apps/showcase/src/main/resources/globalMessages_en.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/DateAction.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/UITagExample-conversion.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction-conversion.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction_de.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/action/EmployeeAction_en.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/action/SkillAction.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/action/SkillAction_de.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/AddressAction-conversion.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/OperationsEnumAction-conversion.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/conversion/PersonAction-conversion.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/fileupload/MultipleFileUploadUsingListAction-conversion.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/person/EditPersonAction-conversion.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/validation/FieldValidatorsExampleAction-conversion.properties",
                "apps/showcase/src/main/resources/org/apache/struts2/showcase/validation/FieldValidatorsExampleAction.properties",
                "apps/showcase/src/main/resources/template/ajaxErrorContainers/theme.properties",
                "apps/showcase/src/main/resources/velocity.properties",
                "core/src/main/java/com/opensymphony/xwork2/interceptor/annotations/Blocked.java",
                "core/src/main/java/com/opensymphony/xwork2/util/profiling/ObjectProfiler.java",
                "core/src/main/java/com/opensymphony/xwork2/util/profiling/ProfilingTimerBean.java",
                "core/src/main/java/com/opensymphony/xwork2/util/profiling/UtilTimerStack.java",
                "core/src/main/resources/com/opensymphony/xwork2/xwork-messages.properties",
                "core/src/main/resources/org/apache/struts2/default.properties",
                "core/src/main/resources/org/apache/struts2/struts-messages.properties",
                "core/src/main/resources/org/apache/struts2/struts-messages_da.properties",
                "core/src/main/resources/org/apache/struts2/struts-messages_de.properties",
                "core/src/main/resources/org/apache/struts2/struts-messages_en.properties",
                "core/src/main/resources/org/apache/struts2/struts-messages_pl.properties",
                "core/src/main/resources/org/apache/struts2/struts-messages_pt.properties",
                "core/src/main/resources/struts-default-conversion.properties",
                "core/src/main/resources/template/css_xhtml/theme.properties",
                "core/src/main/resources/template/xhtml/theme.properties",
                "plugins/embeddedjsp/src/main/java/org/apache/struts2/el/Messages.properties",
                "plugins/embeddedjsp/src/main/java/org/apache/struts2/el/Messages_es.properties",
                "plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings.properties",
                "plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_es.properties",
                "plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_fr.properties",
                "plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_ja.properties",
                "plugins/osgi/src/main/resources/struts-osgi.properties"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "fd8e3bc912b20813fb4a668e6b5778ef483c7deb"
                ],
                [
                    "no-tag",
                    "6e51f28d86ac4bdc2c0fc7c4f913a10c2564b352"
                ]
            ],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: apps/rest-showcase/src/main/resources/velocity.properties",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin, rest, version",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9b9bd212edfb33ffa68b00e814f85112842c91d1",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511940958,
            "hunks": 39,
            "message": "[maven-release-plugin] prepare for next development iteration",
            "diff": [
                "diff --git a/apps/pom.xml b/apps/pom.xml",
                "index ad2bb01a5..1a7d12c96 100644",
                "--- a/apps/pom.xml",
                "+++ b/apps/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/apps/rest-showcase/pom.xml b/apps/rest-showcase/pom.xml",
                "index d89517489..1ac32652a 100644",
                "--- a/apps/rest-showcase/pom.xml",
                "+++ b/apps/rest-showcase/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "@@ -31,3 +31,3 @@",
                "     <packaging>war</packaging>",
                "-    <version>2.5.14.1</version>",
                "+    <version>2.6-SNAPSHOT</version>",
                "     <name>Struts 2 Rest Showcase Webapp</name>",
                "diff --git a/apps/showcase/pom.xml b/apps/showcase/pom.xml",
                "index 0f2f5e018..67921e43b 100644",
                "--- a/apps/showcase/pom.xml",
                "+++ b/apps/showcase/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-apps</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/assembly/pom.xml b/assembly/pom.xml",
                "index 9144add51..9db215a0c 100644",
                "--- a/assembly/pom.xml",
                "+++ b/assembly/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bom/pom.xml b/bom/pom.xml",
                "index 8a1be1397..577932df9 100644",
                "--- a/bom/pom.xml",
                "+++ b/bom/pom.xml",
                "@@ -32,3 +32,3 @@",
                "     <artifactId>struts2-bom</artifactId>",
                "-    <version>2.5.14.1</version>",
                "+    <version>2.6-SNAPSHOT</version>",
                "     <packaging>pom</packaging>",
                "@@ -47,3 +47,3 @@",
                "     <properties>",
                "-        <struts-version.version>2.5.14.1</struts-version.version>",
                "+        <struts-version.version>2.6-SNAPSHOT</struts-version.version>",
                "         <maven.site.skip>true</maven.site.skip>",
                "@@ -181,6 +181,2 @@",
                "     </dependencyManagement>",
                "-",
                "-  <scm>",
                "-    <tag>STRUTS_2_5_14_1</tag>",
                "-  </scm>",
                " </project>",
                "diff --git a/bundles/admin/pom.xml b/bundles/admin/pom.xml",
                "index 95e15bf75..206625c17 100644",
                "--- a/bundles/admin/pom.xml",
                "+++ b/bundles/admin/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bundles/demo/pom.xml b/bundles/demo/pom.xml",
                "index 880a3598b..ef08df400 100644",
                "--- a/bundles/demo/pom.xml",
                "+++ b/bundles/demo/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-osgi-bundles</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/bundles/pom.xml b/bundles/pom.xml",
                "index 8d0c8c9ee..b85b571fe 100755",
                "--- a/bundles/pom.xml",
                "+++ b/bundles/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/core/pom.xml b/core/pom.xml",
                "index d8dcdd7aa..0c97b0958 100644",
                "--- a/core/pom.xml",
                "+++ b/core/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/bean-validation/pom.xml b/plugins/bean-validation/pom.xml",
                "index e2412c660..d3e56935b 100644",
                "--- a/plugins/bean-validation/pom.xml",
                "+++ b/plugins/bean-validation/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/cdi/pom.xml b/plugins/cdi/pom.xml",
                "index acaa34f4f..7317b25b8 100644",
                "--- a/plugins/cdi/pom.xml",
                "+++ b/plugins/cdi/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/config-browser/pom.xml b/plugins/config-browser/pom.xml",
                "index 9ba8b7dbb..d494d4b78 100644",
                "--- a/plugins/config-browser/pom.xml",
                "+++ b/plugins/config-browser/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/convention/pom.xml b/plugins/convention/pom.xml",
                "index 30161f714..4c6c04b33 100644",
                "--- a/plugins/convention/pom.xml",
                "+++ b/plugins/convention/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/dwr/pom.xml b/plugins/dwr/pom.xml",
                "index 9d253aa84..59aff3c94 100644",
                "--- a/plugins/dwr/pom.xml",
                "+++ b/plugins/dwr/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/embeddedjsp/pom.xml b/plugins/embeddedjsp/pom.xml",
                "index 880519cc0..d629781eb 100644",
                "--- a/plugins/embeddedjsp/pom.xml",
                "+++ b/plugins/embeddedjsp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/gxp/pom.xml b/plugins/gxp/pom.xml",
                "index 731978816..0fd9ec58d 100644",
                "--- a/plugins/gxp/pom.xml",
                "+++ b/plugins/gxp/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/jasperreports/pom.xml b/plugins/jasperreports/pom.xml",
                "index b4f8b2a61..e42ffa707 100644",
                "--- a/plugins/jasperreports/pom.xml",
                "+++ b/plugins/jasperreports/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/javatemplates/pom.xml b/plugins/javatemplates/pom.xml",
                "index 95616faf5..1dd248a9a 100644",
                "--- a/plugins/javatemplates/pom.xml",
                "+++ b/plugins/javatemplates/pom.xml",
                "@@ -27,3 +27,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/jfreechart/pom.xml b/plugins/jfreechart/pom.xml",
                "index 93dc3f59e..ef2dcdd6e 100644",
                "--- a/plugins/jfreechart/pom.xml",
                "+++ b/plugins/jfreechart/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "    </parent>",
                "diff --git a/plugins/json/pom.xml b/plugins/json/pom.xml",
                "index 1b562bd4e..ccacc2960 100644",
                "--- a/plugins/json/pom.xml",
                "+++ b/plugins/json/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/junit/pom.xml b/plugins/junit/pom.xml",
                "index ac1dac5c4..95be40f10 100644",
                "--- a/plugins/junit/pom.xml",
                "+++ b/plugins/junit/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/osgi/pom.xml b/plugins/osgi/pom.xml",
                "index 0b7076710..cbe48f067 100644",
                "--- a/plugins/osgi/pom.xml",
                "+++ b/plugins/osgi/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/oval/pom.xml b/plugins/oval/pom.xml",
                "index 03e36e2e5..900992201 100644",
                "--- a/plugins/oval/pom.xml",
                "+++ b/plugins/oval/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/pell-multipart/pom.xml b/plugins/pell-multipart/pom.xml",
                "index d5f9fbbd3..ed234cbf6 100644",
                "--- a/plugins/pell-multipart/pom.xml",
                "+++ b/plugins/pell-multipart/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/plexus/pom.xml b/plugins/plexus/pom.xml",
                "index fc6e07f6b..c0339815f 100644",
                "--- a/plugins/plexus/pom.xml",
                "+++ b/plugins/plexus/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/pom.xml b/plugins/pom.xml",
                "index 42379c46b..e313cba3d 100644",
                "--- a/plugins/pom.xml",
                "+++ b/plugins/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-parent</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/portlet-tiles/pom.xml b/plugins/portlet-tiles/pom.xml",
                "index bde85f85d..70fed8d45 100644",
                "--- a/plugins/portlet-tiles/pom.xml",
                "+++ b/plugins/portlet-tiles/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/portlet/pom.xml b/plugins/portlet/pom.xml",
                "index 48248c28d..492015e7f 100644",
                "--- a/plugins/portlet/pom.xml",
                "+++ b/plugins/portlet/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/rest/pom.xml b/plugins/rest/pom.xml",
                "index 798dac175..77b8119e7 100644",
                "--- a/plugins/rest/pom.xml",
                "+++ b/plugins/rest/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/sitegraph/pom.xml b/plugins/sitegraph/pom.xml",
                "index f2723f95c..6044e246f 100644",
                "--- a/plugins/sitegraph/pom.xml",
                "+++ b/plugins/sitegraph/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/sitemesh/pom.xml b/plugins/sitemesh/pom.xml",
                "index f9475416a..66375ae5e 100644",
                "--- a/plugins/sitemesh/pom.xml",
                "+++ b/plugins/sitemesh/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/spring/pom.xml b/plugins/spring/pom.xml",
                "index 5ab15d976..76b7831fc 100644",
                "--- a/plugins/spring/pom.xml",
                "+++ b/plugins/spring/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/testng/pom.xml b/plugins/testng/pom.xml",
                "index 20e7d8082..d396a0a0c 100644",
                "--- a/plugins/testng/pom.xml",
                "+++ b/plugins/testng/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/tiles/pom.xml b/plugins/tiles/pom.xml",
                "index df4d1c170..e6410375c 100644",
                "--- a/plugins/tiles/pom.xml",
                "+++ b/plugins/tiles/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14.1</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/pom.xml b/pom.xml",
                "index 2f9c4a1fe..672b126da 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -31,3 +31,3 @@",
                "     <artifactId>struts2-parent</artifactId>",
                "-    <version>2.5.14.1</version>",
                "+    <version>2.6-SNAPSHOT</version>",
                "     <packaging>pom</packaging>",
                "@@ -53,3 +53,3 @@",
                "         <url>https://github.com/apache/struts/</url>",
                "-        <tag>STRUTS_2_5_14_1</tag>",
                "+        <tag>HEAD</tag>",
                "     </scm>"
            ],
            "changed_files": [
                "apps/pom.xml",
                "apps/rest-showcase/pom.xml",
                "apps/showcase/pom.xml",
                "assembly/pom.xml",
                "bom/pom.xml",
                "bundles/admin/pom.xml",
                "bundles/demo/pom.xml",
                "bundles/pom.xml",
                "core/pom.xml",
                "plugins/bean-validation/pom.xml",
                "plugins/cdi/pom.xml",
                "plugins/config-browser/pom.xml",
                "plugins/convention/pom.xml",
                "plugins/dwr/pom.xml",
                "plugins/embeddedjsp/pom.xml",
                "plugins/gxp/pom.xml",
                "plugins/jasperreports/pom.xml",
                "plugins/javatemplates/pom.xml",
                "plugins/jfreechart/pom.xml",
                "plugins/json/pom.xml",
                "plugins/junit/pom.xml",
                "plugins/osgi/pom.xml",
                "plugins/oval/pom.xml",
                "plugins/pell-multipart/pom.xml",
                "plugins/plexus/pom.xml",
                "plugins/pom.xml",
                "plugins/portlet-tiles/pom.xml",
                "plugins/portlet/pom.xml",
                "plugins/rest/pom.xml",
                "plugins/sitegraph/pom.xml",
                "plugins/sitemesh/pom.xml",
                "plugins/spring/pom.xml",
                "plugins/testng/pom.xml",
                "plugins/tiles/pom.xml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "d36ec579fc590e5b43ef03c89947d70a8b54001e"
                ]
            ],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: apps/rest-showcase/pom.xml, plugins/rest/pom.xml",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: rest, plugin",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "794cd5e1413f77f6a350528e4b068dad872c3642",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510907662,
            "hunks": 2,
            "message": "WW-4892 Marks handler as deprecated",
            "diff": [
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/handler/JsonLibHandler.java b/plugins/rest/src/main/java/org/apache/struts2/rest/handler/JsonLibHandler.java",
                "index fb86cc959..84b19d875 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/handler/JsonLibHandler.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/handler/JsonLibHandler.java",
                "@@ -36,3 +36,6 @@ import com.opensymphony.xwork2.inject.Inject;",
                "  * Handles JSON content using json-lib",
                "+ *",
                "+ * @deprecated Use {@link JacksonLibHandler} instead",
                "  */",
                "+@Deprecated",
                " public class JsonLibHandler extends AbstractContentTypeHandler {"
            ],
            "changed_files": [
                "plugins/rest/src/main/java/org/apache/struts2/rest/handler/JsonLibHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4892": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: plugins/rest/src/main/java/org/apache/struts2/rest/handler/JsonLibHandler.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: handler",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: rest, plugin, handler",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4892",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "941374ecdb99ccc316f6b527b8df0f1cf2bb80c0",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510907563,
            "hunks": 1,
            "message": "WW-4892 Uses Jackson handler as a default one to handle JSON",
            "diff": [
                "diff --git a/plugins/rest/src/main/resources/struts-plugin.xml b/plugins/rest/src/main/resources/struts-plugin.xml",
                "index 910496048..2a49ceba0 100644",
                "--- a/plugins/rest/src/main/resources/struts-plugin.xml",
                "+++ b/plugins/rest/src/main/resources/struts-plugin.xml",
                "@@ -33,3 +33,3 @@",
                "     <bean type=\"org.apache.struts2.rest.handler.ContentTypeHandler\" name=\"xml\" class=\"org.apache.struts2.rest.handler.XStreamHandler\" />",
                "-    <bean type=\"org.apache.struts2.rest.handler.ContentTypeHandler\" name=\"json\" class=\"org.apache.struts2.rest.handler.JsonLibHandler\" />",
                "+    <bean type=\"org.apache.struts2.rest.handler.ContentTypeHandler\" name=\"json\" class=\"org.apache.struts2.rest.handler.JacksonLibHandler\" />",
                "     <bean type=\"org.apache.struts2.rest.handler.ContentTypeHandler\" name=\"html\" class=\"org.apache.struts2.rest.handler.HtmlHandler\" />"
            ],
            "changed_files": [
                "plugins/rest/src/main/resources/struts-plugin.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4892": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: plugins/rest/src/main/resources/struts-plugin.xml",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: jackson, handler",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: rest, plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4892",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1c0976a8693519f03b3796215bb9140a3c3160fc",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1509196195,
            "hunks": 17,
            "message": "WW-4874 Introduces Servlet3 plugin by adding support for async action methods",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/AsyncManager.java b/core/src/main/java/com/opensymphony/xwork2/AsyncManager.java",
                "new file mode 100644",
                "index 000000000..fb6563859",
                "--- /dev/null",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/AsyncManager.java",
                "@@ -0,0 +1,35 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package com.opensymphony.xwork2;",
                "+",
                "+import java.util.concurrent.Callable;",
                "+",
                "+/**",
                "+ * Adds support for invoke async actions. This allows us to support action methods that return {@link Callable}",
                "+ * as well as invoking them in separate not-container thread then executing the result in another container thread.",
                "+ *",
                "+ * @since 2.5.14",
                "+ */",
                "+public interface AsyncManager {",
                "+    boolean hasAsyncActionResult();",
                "+",
                "+    Object getAsyncActionResult();",
                "+",
                "+    void invokeAsyncAction(Callable asyncAction);",
                "+}",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java b/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "index 5777007c1..da38e4eb5 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "@@ -42,2 +42,3 @@ import java.util.List;",
                " import java.util.Map;",
                "+import java.util.concurrent.Callable;",
                "@@ -73,2 +74,4 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "     protected OgnlUtil ognlUtil;",
                "+    protected AsyncManager asyncManager;",
                "+    protected Callable asyncAction;",
                "     protected WithLazyParams.LazyParamInjector lazyParamInjector;",
                "@@ -110,2 +113,7 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "+    @Inject(required=false)",
                "+    public void setAsyncManager(AsyncManager asyncManager) {",
                "+        this.asyncManager = asyncManager;",
                "+    }",
                "+",
                "     public Object getAction() {",
                "@@ -239,45 +247,57 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "-            if (interceptors.hasNext()) {",
                "-                final InterceptorMapping interceptorMapping = interceptors.next();",
                "-                String interceptorMsg = \"interceptorMapping: \" + interceptorMapping.getName();",
                "-                UtilTimerStack.push(interceptorMsg);",
                "-                try {",
                "-                    Interceptor interceptor = interceptorMapping.getInterceptor();",
                "-                    if (interceptor instanceof WithLazyParams) {",
                "-                        interceptor = lazyParamInjector.injectParams(interceptor, interceptorMapping.getParams(), invocationContext);",
                "+            if (asyncManager == null || !asyncManager.hasAsyncActionResult()) {",
                "+                if (interceptors.hasNext()) {",
                "+                    final InterceptorMapping interceptorMapping = interceptors.next();",
                "+                    String interceptorMsg = \"interceptorMapping: \" + interceptorMapping.getName();",
                "+                    UtilTimerStack.push(interceptorMsg);",
                "+                    try {",
                "+                        Interceptor interceptor = interceptorMapping.getInterceptor();",
                "+                        if (interceptor instanceof WithLazyParams) {",
                "+                            interceptor = lazyParamInjector.injectParams(interceptor, interceptorMapping.getParams(), invocationContext);",
                "+                        }",
                "+                        resultCode = interceptor.intercept(DefaultActionInvocation.this);",
                "+                    } finally {",
                "+                        UtilTimerStack.pop(interceptorMsg);",
                "                     }",
                "-                    resultCode = interceptor.intercept(DefaultActionInvocation.this);",
                "-                } finally {",
                "-                    UtilTimerStack.pop(interceptorMsg);",
                "+                } else {",
                "+                    resultCode = invokeActionOnly();",
                "                 }",
                "             } else {",
                "-                resultCode = invokeActionOnly();",
                "+                Object asyncActionResult = asyncManager.getAsyncActionResult();",
                "+                if (asyncActionResult instanceof Throwable) {",
                "+                    throw new Exception((Throwable) asyncActionResult);",
                "+                }",
                "+                asyncAction = null;",
                "+                resultCode = saveResult(proxy.getConfig(), asyncActionResult);",
                "             }",
                "-            // this is needed because the result will be executed, then control will return to the Interceptor, which will",
                "-            // return above and flow through again",
                "-            if (!executed) {",
                "-                if (preResultListeners != null) {",
                "-                    LOG.trace(\"Executing PreResultListeners for result [{}]\", result);",
                "-",
                "-                    for (Object preResultListener : preResultListeners) {",
                "-                        PreResultListener listener = (PreResultListener) preResultListener;",
                "-",
                "-                        String _profileKey = \"preResultListener: \";",
                "-                        try {",
                "-                            UtilTimerStack.push(_profileKey);",
                "-                            listener.beforeResult(this, resultCode);",
                "-                        }",
                "-                        finally {",
                "-                            UtilTimerStack.pop(_profileKey);",
                "+            if (asyncManager == null || asyncAction == null) {",
                "+                // this is needed because the result will be executed, then control will return to the Interceptor, which will",
                "+                // return above and flow through again",
                "+                if (!executed) {",
                "+                    if (preResultListeners != null) {",
                "+                        LOG.trace(\"Executing PreResultListeners for result [{}]\", result);",
                "+",
                "+                        for (Object preResultListener : preResultListeners) {",
                "+                            PreResultListener listener = (PreResultListener) preResultListener;",
                "+",
                "+                            String _profileKey = \"preResultListener: \";",
                "+                            try {",
                "+                                UtilTimerStack.push(_profileKey);",
                "+                                listener.beforeResult(this, resultCode);",
                "+                            } finally {",
                "+                                UtilTimerStack.pop(_profileKey);",
                "+                            }",
                "                         }",
                "                     }",
                "-                }",
                "-                // now execute the result, if we're supposed to",
                "-                if (proxy.getExecuteResult()) {",
                "-                    executeResult();",
                "-                }",
                "+                    // now execute the result, if we're supposed to",
                "+                    if (proxy.getExecuteResult()) {",
                "+                        executeResult();",
                "+                    }",
                "-                executed = true;",
                "+                    executed = true;",
                "+                }",
                "+            } else {",
                "+                asyncManager.invokeAsyncAction(asyncAction);",
                "             }",
                "@@ -497,2 +517,5 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "             return null;",
                "+        } else if (methodResult instanceof Callable) {",
                "+            asyncAction = (Callable) methodResult;",
                "+            return null;",
                "         } else {",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "index dcc5fe72a..1672f9ead 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "@@ -563,4 +563,12 @@ public class Dispatcher {",
                "-            ActionProxy proxy = getContainer().getInstance(ActionProxyFactory.class).createActionProxy(",
                "-                    namespace, name, method, extraContext, true, false);",
                "+            ActionProxy proxy;",
                "+",
                "+            //check if we are probably in an async resuming",
                "+            ActionInvocation inv = ActionContext.getContext().getActionInvocation();",
                "+            if (inv == null || inv.isExecuted()) {",
                "+                proxy = getContainer().getInstance(ActionProxyFactory.class).createActionProxy(namespace, name, method,",
                "+                        extraContext, true, false);",
                "+            } else {",
                "+                proxy = inv.getProxy();",
                "+            }",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/PrepareOperations.java b/core/src/main/java/org/apache/struts2/dispatcher/PrepareOperations.java",
                "index 354cad7fa..c216cdfb0 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/PrepareOperations.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/PrepareOperations.java",
                "@@ -81,5 +81,8 @@ public class PrepareOperations {",
                "         } else {",
                "-            ValueStack stack = dispatcher.getContainer().getInstance(ValueStackFactory.class).createValueStack();",
                "-            stack.getContext().putAll(dispatcher.createContextMap(request, response, null));",
                "-            ctx = new ActionContext(stack.getContext());",
                "+            ctx = ServletActionContext.getActionContext(request);   //checks if we are probably in an async",
                "+            if (ctx == null) {",
                "+                ValueStack stack = dispatcher.getContainer().getInstance(ValueStackFactory.class).createValueStack();",
                "+                stack.getContext().putAll(dispatcher.createContextMap(request, response, null));",
                "+                ctx = new ActionContext(stack.getContext());",
                "+            }",
                "         }",
                "diff --git a/plugins/pom.xml b/plugins/pom.xml",
                "index c336d767e..4a9c7647d 100644",
                "--- a/plugins/pom.xml",
                "+++ b/plugins/pom.xml",
                "@@ -58,2 +58,3 @@",
                "         <module>tiles</module>",
                "+        <module>servlet3</module>",
                "     </modules>",
                "diff --git a/plugins/servlet3/pom.xml b/plugins/servlet3/pom.xml",
                "new file mode 100644",
                "index 000000000..36de62611",
                "--- /dev/null",
                "+++ b/plugins/servlet3/pom.xml",
                "@@ -0,0 +1,46 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                "+<!--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                "+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">",
                "+    <modelVersion>4.0.0</modelVersion>",
                "+    <parent>",
                "+        <groupId>org.apache.struts</groupId>",
                "+        <artifactId>struts2-plugins</artifactId>",
                "+        <version>2.5.14-SNAPSHOT</version>",
                "+    </parent>",
                "+",
                "+    <artifactId>struts2-servlet3-plugin</artifactId>",
                "+    <name>Struts 2 Servlet3 Plugin</name>",
                "+    <packaging>jar</packaging>",
                "+",
                "+    <properties>",
                "+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "+    </properties>",
                "+",
                "+    <dependencies>",
                "+        <dependency>",
                "+            <groupId>javax.servlet</groupId>",
                "+            <artifactId>javax.servlet-api</artifactId>",
                "+            <version>3.0.1</version>",
                "+            <scope>provided</scope>",
                "+        </dependency>",
                "+    </dependencies>",
                "+</project>",
                "diff --git a/plugins/servlet3/src/main/java/org/apache/struts2/servlet3/async/AsyncAction.java b/plugins/servlet3/src/main/java/org/apache/struts2/servlet3/async/AsyncAction.java",
                "new file mode 100644",
                "index 000000000..912cfe765",
                "--- /dev/null",
                "+++ b/plugins/servlet3/src/main/java/org/apache/struts2/servlet3/async/AsyncAction.java",
                "@@ -0,0 +1,65 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.servlet3.async;",
                "+",
                "+import java.util.concurrent.Callable;",
                "+import java.util.concurrent.Executor;",
                "+",
                "+/**",
                "+ * A {@link Callable} with a timeout value and an {@link Executor}.",
                "+ *",
                "+ * @since 2.5.14",
                "+ */",
                "+public class AsyncAction implements Callable {",
                "+    private Callable callable;",
                "+    private Long timeout;",
                "+    private Executor executor;",
                "+",
                "+    public AsyncAction(Callable callable) {",
                "+        this.callable = callable;",
                "+    }",
                "+",
                "+    public AsyncAction(long timeout, Callable callable) {",
                "+        this(callable);",
                "+        this.timeout = timeout;",
                "+    }",
                "+",
                "+    public AsyncAction(Executor executor, Callable callable) {",
                "+        this(callable);",
                "+        this.executor = executor;",
                "+    }",
                "+",
                "+    public AsyncAction(long timeout, Executor executor, Callable callable) {",
                "+        this(timeout, callable);",
                "+        this.executor = executor;",
                "+    }",
                "+",
                "+    public Long getTimeout() {",
                "+        return timeout;",
                "+    }",
                "+",
                "+    public Executor getExecutor() {",
                "+        return executor;",
                "+    }",
                "+",
                "+    @Override",
                "+    public Object call() throws Exception {",
                "+        return callable.call();",
                "+    }",
                "+}",
                "diff --git a/plugins/servlet3/src/main/java/org/apache/struts2/servlet3/async/Servlet3AsyncManager.java b/plugins/servlet3/src/main/java/org/apache/struts2/servlet3/async/Servlet3AsyncManager.java",
                "new file mode 100644",
                "index 000000000..f72f58036",
                "--- /dev/null",
                "+++ b/plugins/servlet3/src/main/java/org/apache/struts2/servlet3/async/Servlet3AsyncManager.java",
                "@@ -0,0 +1,149 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.servlet3.async;",
                "+",
                "+import com.opensymphony.xwork2.AsyncManager;",
                "+import org.apache.logging.log4j.LogManager;",
                "+import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.ServletActionContext;",
                "+",
                "+import javax.servlet.AsyncContext;",
                "+import javax.servlet.AsyncEvent;",
                "+import javax.servlet.AsyncListener;",
                "+import javax.servlet.http.HttpServletRequest;",
                "+import java.io.IOException;",
                "+import java.util.concurrent.Callable;",
                "+import java.util.concurrent.Executor;",
                "+import java.util.concurrent.atomic.AtomicInteger;",
                "+",
                "+/**",
                "+ * Implements {@link AsyncManager} to add support for invoke async actions via Servlet 3's API.",
                "+ *",
                "+ * @since 2.5.14",
                "+ */",
                "+public class Servlet3AsyncManager implements AsyncManager, AsyncListener {",
                "+    private static final Logger LOG = LogManager.getLogger(Servlet3AsyncManager.class);",
                "+    private static final AtomicInteger threadCount = new AtomicInteger(0);",
                "+",
                "+    private AsyncContext asyncContext;",
                "+    private boolean asyncActionStarted;",
                "+    private Boolean asyncCompleted;",
                "+    private Object asyncActionResult;",
                "+",
                "+    @Override",
                "+    public void invokeAsyncAction(final Callable asyncAction) {",
                "+        if (asyncActionStarted) {",
                "+            return;",
                "+        }",
                "+",
                "+        Long timeout = null;",
                "+        Executor executor = null;",
                "+        if (asyncAction instanceof AsyncAction) {",
                "+            AsyncAction customAsyncAction = (AsyncAction) asyncAction;",
                "+            timeout = customAsyncAction.getTimeout();",
                "+            executor = customAsyncAction.getExecutor();",
                "+        }",
                "+",
                "+        HttpServletRequest req = ServletActionContext.getRequest();",
                "+        asyncActionResult = null;",
                "+        asyncCompleted = false;",
                "+",
                "+        if (asyncContext == null || !req.isAsyncStarted()) {",
                "+            asyncContext = req.startAsync(req, ServletActionContext.getResponse());",
                "+            asyncContext.addListener(this);",
                "+            if (timeout != null) {",
                "+                asyncContext.setTimeout(timeout);",
                "+            }",
                "+        }",
                "+        asyncActionStarted = true;",
                "+        LOG.debug(\"Async processing started for \" + asyncContext);",
                "+",
                "+        final Runnable task = new Runnable() {",
                "+            @Override",
                "+            public void run() {",
                "+                try {",
                "+                    setAsyncActionResultAndDispatch(asyncAction.call());",
                "+                } catch (Throwable e) {",
                "+                    setAsyncActionResultAndDispatch(e);",
                "+                }",
                "+            }",
                "+        };",
                "+        if (executor != null) {",
                "+            executor.execute(task);",
                "+        } else {",
                "+            final Thread thread = new Thread(new Runnable() {",
                "+                @Override",
                "+                public void run() {",
                "+                    try {",
                "+                        task.run();",
                "+                    } finally {",
                "+                        threadCount.decrementAndGet();",
                "+                    }",
                "+                }",
                "+            }, this.getClass().getSimpleName() + \"-\" + threadCount.incrementAndGet());",
                "+            thread.start();",
                "+        }",
                "+    }",
                "+",
                "+    private void setAsyncActionResultAndDispatch(Object asyncActionResult) {",
                "+        this.asyncActionResult = asyncActionResult;",
                "+",
                "+        String log = \"Async result [\" + asyncActionResult + \"] of \" + asyncContext;",
                "+        if (asyncCompleted) {",
                "+            LOG.error(log + \" - could not complete result executing due to timeout or network error\");",
                "+        } else {",
                "+            LOG.debug(log + \" - dispatching request to execute result in container\");",
                "+            asyncContext.dispatch();",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean hasAsyncActionResult() {",
                "+        return asyncActionResult != null;",
                "+    }",
                "+",
                "+    @Override",
                "+    public Object getAsyncActionResult() {",
                "+        return asyncActionResult;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void onComplete(AsyncEvent asyncEvent) throws IOException {",
                "+        asyncContext = null;",
                "+        asyncCompleted = true;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void onTimeout(AsyncEvent asyncEvent) throws IOException {",
                "+        LOG.debug(\"Processing timeout for \" + asyncEvent.getAsyncContext());",
                "+        setAsyncActionResultAndDispatch(\"timeout\");",
                "+    }",
                "+",
                "+    @Override",
                "+    public void onError(AsyncEvent asyncEvent) throws IOException {",
                "+        Throwable e = asyncEvent.getThrowable();",
                "+        LOG.error(\"Processing error for \" + asyncEvent.getAsyncContext(), e);",
                "+        setAsyncActionResultAndDispatch(e);",
                "+    }",
                "+",
                "+    @Override",
                "+    public void onStartAsync(AsyncEvent asyncEvent) throws IOException {",
                "+",
                "+    }",
                "+}",
                "diff --git a/plugins/servlet3/src/main/resources/struts-plugin.xml b/plugins/servlet3/src/main/resources/struts-plugin.xml",
                "new file mode 100644",
                "index 000000000..9c6a75208",
                "--- /dev/null",
                "+++ b/plugins/servlet3/src/main/resources/struts-plugin.xml",
                "@@ -0,0 +1,29 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>",
                "+<!--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                "+<!DOCTYPE struts PUBLIC",
                "+        \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\"",
                "+        \"http://struts.apache.org/dtds/struts-2.5.dtd\">",
                "+",
                "+<struts>",
                "+    <bean type=\"com.opensymphony.xwork2.AsyncManager\" name=\"default\"",
                "+          class=\"org.apache.struts2.servlet3.async.Servlet3AsyncManager\" scope=\"prototype\" />",
                "+</struts>"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/AsyncManager.java",
                "core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "core/src/main/java/org/apache/struts2/dispatcher/PrepareOperations.java",
                "plugins/pom.xml",
                "plugins/servlet3/pom.xml",
                "plugins/servlet3/src/main/java/org/apache/struts2/servlet3/async/AsyncAction.java",
                "plugins/servlet3/src/main/java/org/apache/struts2/servlet3/async/Servlet3AsyncManager.java",
                "plugins/servlet3/src/main/resources/struts-plugin.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4874": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4874",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a2824b7c87659c0c8f8cfc4b1b1fe2cc60b19138",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510907580,
            "hunks": 1,
            "message": "WW-4892 Makes json-lib optional",
            "diff": [
                "diff --git a/plugins/rest/pom.xml b/plugins/rest/pom.xml",
                "index 8997c995e..77b8119e7 100644",
                "--- a/plugins/rest/pom.xml",
                "+++ b/plugins/rest/pom.xml",
                "@@ -46,2 +46,3 @@",
                "             <classifier>jdk15</classifier>",
                "+            <optional>true</optional>",
                "         </dependency>"
            ],
            "changed_files": [
                "plugins/rest/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4892": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: plugins/rest/pom.xml",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: option",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: rest, plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4892",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4a1d42e3d55fcf4198c288734bdc4966006afc58",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508655258,
            "hunks": 74,
            "message": "Fixes encoding",
            "diff": [
                "diff --git a/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_es.properties b/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_es.properties",
                "index 5a1597d27..63d75d653 100644",
                "--- a/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_es.properties",
                "+++ b/plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_es.properties",
                "@@ -1,19 +1,15 @@",
                "+# Licensed to the Apache Software Foundation (ASF) under one or more",
                "+# contributor license agreements.  See the NOTICE file distributed with",
                "+# this work for additional information regarding copyright ownership.",
                "+# The ASF licenses this file to You under the Apache License, Version 2.0",
                "+# (the \"License\"); you may not use this file except in compliance with",
                "+# the License.  You may obtain a copy of the License at",
                " #",
                "-# Licensed to the Apache Software Foundation (ASF) under one",
                "-# or more contributor license agreements.  See the NOTICE file",
                "-# distributed with this work for additional information",
                "-# regarding copyright ownership.  The ASF licenses this file",
                "-# to you under the Apache License, Version 2.0 (the",
                "-# \"License\"); you may not use this file except in compliance",
                "-# with the License.  You may obtain a copy of the License at",
                "-#",
                "-#  http://www.apache.org/licenses/LICENSE-2.0",
                "-#",
                "-# Unless required by applicable law or agreed to in writing,",
                "-# software distributed under the License is distributed on an",
                "-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "-# KIND, either express or implied.  See the License for the",
                "-# specific language governing permissions and limitations",
                "-# under the License.",
                "+#     http://www.apache.org/licenses/LICENSE-2.0",
                " #",
                "+# Unless required by applicable law or agreed to in writing, software",
                "+# distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+# See the License for the specific language governing permissions and",
                "+# limitations under the License.",
                "@@ -22,5 +18,5 @@",
                "-jsp.error.bad.servlet.engine=\u00ef\u00bf\u00bdVersi\u00ef\u00bf\u00bdn incorrecta del motor servlet!",
                "+jsp.error.bad.servlet.engine=\u00c2\u00a1Versi\u00c3\u00b3n incorrecta del motor servlet!",
                " jsp.error.no.scratch.dir=El motor JSP no tiene configurado un directorio de trabajo.\\",
                "-\\n A\u00ef\u00bf\u00bdada \\\"jsp.initparams=scratchdir=<dir-name>\\\" \\",
                "+\\n A\u00c3\u00b1ada \\\"jsp.initparams=scratchdir=<dir-name>\\\" \\",
                " \\n en el fichero servlets.properties para este contexto.",
                "@@ -42,6 +38,6 @@ jsp.error.not.impl.include=Error Interno: include no implementado",
                " jsp.error.unavailable=JSP ha sido marcado como no disponible",
                "-jsp.error.usebean.missing.attribute=useBean: falta atributo id o est\u00ef\u00bf\u00bd mal digitado",
                "+jsp.error.usebean.missing.attribute=useBean: falta atributo id o est\u00c3\u00a1 mal digitado",
                " jsp.error.usebean.missing.type=useBean ({0}): Se debe de especificar atributo class o type:",
                " jsp.error.usebean.duplicate=useBean: Nombre de bean duplicado: {0}",
                "-jsp.error.usebean.prohibited.as.session=No puedo usar como bean de sesi\u00ef\u00bf\u00bdn {0} ya que est\u00ef\u00bf\u00bd prohibido \\",
                "+jsp.error.usebean.prohibited.as.session=No puedo usar como bean de sesi\u00c3\u00b3n {0} ya que est\u00c3\u00a1 prohibido \\",
                " por directiva jsp definida previamente: ",
                "@@ -52,21 +48,21 @@ jsp.error.classname=No pude determinar el nombre de clase desde el fichero .clas",
                " jsp.warning.bad.type=Aviso: tipo incorrecto en archivo .class",
                "-jsp.error.data.file.write=Error mientras escrib\u00ef\u00bf\u00bda el archivo de datos",
                "-jsp.error.page.invalid.buffer=Directiva Page: medida de buffer inv\u00ef\u00bf\u00bdlida",
                "-jsp.error.page.conflict.contenttype=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'contentType' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.data.file.write=Error mientras escrib\u00c3\u00ada el archivo de datos",
                "+jsp.error.page.invalid.buffer=Directiva Page: medida de buffer inv\u00c3\u00a1lida",
                "+jsp.error.page.conflict.contenttype=Directiva Page: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'contentType' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.contenttype=Directiva Page: valor incorrecto para contentType",
                "-jsp.error.page.conflict.session=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'session' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.session=Directiva Page: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'session' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.session=Directiva Page: valor incorrecto para session",
                "-jsp.error.page.conflict.buffer=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'buffer'con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.buffer=Directiva Page: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'buffer'con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.buffer=Directiva Page: valor incorrecto para buffer",
                "-jsp.error.page.conflict.autoflush=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'autoFlush' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.autoflush=Directiva Page: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'autoFlush' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.autoflush==Directiva Page: valor incorrecto para autoFlush",
                "-jsp.error.page.conflict.isthreadsafe=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'isThreadSafe' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.isthreadsafe=Directiva Page: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'isThreadSafe' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.isthreadsafe==Directiva Page: valor incorrecto para isThreadSafe",
                "-jsp.error.page.conflict.info=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'info' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.info=Directiva Page: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'info' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.info==Directiva Page: valor incorrecto para info",
                "-jsp.error.page.conflict.iserrorpage=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'isErrorPage' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.iserrorpage=Directiva Page: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'isErrorPage' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.invalid.iserrorpage==Directiva Page: valor incorrecto para isErrorPage",
                "-jsp.error.page.conflict.errorpage=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'errorPage' con valores distintos (viejo: {0}, nuevo: {1})",
                "-jsp.error.page.conflict.language=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'language' con valores distintos (viejo: {0}, nuevo: {1})",
                "-jsp.error.tag.conflict.language=Directiva Tag: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'language' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.errorpage=Directiva Page: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'errorPage' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.language=Directiva Page: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'language' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.tag.conflict.language=Directiva Tag: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'language' con valores distintos (viejo: {0}, nuevo: {1})",
                " jsp.error.page.language.nonjava=Directiva Page: atributo language incorrecto",
                "@@ -75,26 +71,26 @@ jsp.error.page.defafterusar.language=Directiva Page: No puede definir language t",
                " jsp.error.page.nomapping.language=Directiva Page: No hay mapeado para language: ",
                "-jsp.error.page.conflict.extends=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'extends' con valores distintos (viejo: {0}, nuevo: {1})",
                "-jsp.error.page.conflict.iselignored=Directiva Page: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'isELIgnored' con valores distintos (viejo: {0}, nuevo: {1})",
                "-jsp.error.tag.conflict.iselignored=Directiva Tag: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias de 'isELIgnored' con valores distintos (viejo: {0}, nuevo: {1})",
                "-jsp.error.page.invalid.iselignored=Directiva Page: valor inv\u00ef\u00bf\u00bdlido para isELIgnored",
                "+jsp.error.page.conflict.extends=Directiva Page: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'extends' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.conflict.iselignored=Directiva Page: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'isELIgnored' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.tag.conflict.iselignored=Directiva Tag: es ilegal tener m\u00c3\u00baltiples ocurrencias de 'isELIgnored' con valores distintos (viejo: {0}, nuevo: {1})",
                "+jsp.error.page.invalid.iselignored=Directiva Page: valor inv\u00c3\u00a1lido para isELIgnored",
                " jsp.error.tag.invalid.iselignored=Directiva Tag: valor incorrecto para isELIgnored",
                "-jsp.error.page.multi.pageencoding=La directiva Page no debe de tener m\u00ef\u00bf\u00bdltiples ocurrencias de pageencoding",
                "-jsp.error.tag.conflict.attr=Directiva Tag: es ilegal tener m\u00ef\u00bf\u00bdltiples ocurrencias del atributo \\\"{0}\\\" con valores distintos (viejo: {1}, nuevo: {2})",
                "-jsp.error.tag.multi.pageencoding=La directiva Tag no debe de tener m\u00ef\u00bf\u00bdltiples ocurrencias de pageencoding",
                "-jsp.error.page.bad_b_and_a_combo=Directiva Page: Combinaci\u00ef\u00bf\u00bdn ilegal de buffer=\\\"none\\\" y autoFlush=\\\"false\\\"",
                "+jsp.error.page.multi.pageencoding=La directiva Page no debe de tener m\u00c3\u00baltiples ocurrencias de pageencoding",
                "+jsp.error.tag.conflict.attr=Directiva Tag: es ilegal tener m\u00c3\u00baltiples ocurrencias del atributo \\\"{0}\\\" con valores distintos (viejo: {1}, nuevo: {2})",
                "+jsp.error.tag.multi.pageencoding=La directiva Tag no debe de tener m\u00c3\u00baltiples ocurrencias de pageencoding",
                "+jsp.error.page.bad_b_and_a_combo=Directiva Page: Combinaci\u00c3\u00b3n ilegal de buffer=\\\"none\\\" y autoFlush=\\\"false\\\"",
                " jsp.error.not.impl.taglib=Error Interno: Tag extensions no implementado",
                " jsp.error.include.missing.file=No tiene argumento de nombre de fichero ",
                "-jsp.error.include.bad.file=Argumento de nombre de fichero no v\u00ef\u00bf\u00bdlido",
                "+jsp.error.include.bad.file=Argumento de nombre de fichero no v\u00c3\u00a1lido",
                " jsp.error.include.exception=No se puede incluir {0}",
                " jsp.error.stream.closed=Stream cerrado",
                "-jsp.error.invalid.forward=Tag forward no v\u00ef\u00bf\u00bdlido",
                "-jsp.error.unknownException=\u00ef\u00bf\u00bdError no caturado!. Deber\u00ef\u00bf\u00bdas de considerar el poner una p\u00ef\u00bf\u00bdgina de error para avisar de los errores m\u00ef\u00bf\u00bds elegantemente",
                "-jsp.error.invalid.directive=Directiva no v\u00ef\u00bf\u00bdlida",
                "+jsp.error.invalid.forward=Tag forward no v\u00c3\u00a1lido",
                "+jsp.error.unknownException=\u00c2\u00a1Error no caturado!. Deber\u00c3\u00adas de considerar el poner una p\u00c3\u00a1gina de error para avisar de los errores m\u00c3\u00a1s elegantemente",
                "+jsp.error.invalid.directive=Directiva no v\u00c3\u00a1lida",
                " jsp.error.directive.istagfile=La Directiva {0} no puede usarse en archivo de tag",
                "-jsp.error.directive.isnottagfile=La Directiva {0} s\u00ef\u00bf\u00bdlo se puede usar en un archivo de tag",
                "+jsp.error.directive.isnottagfile=La Directiva {0} s\u00c3\u00b3lo se puede usar en un archivo de tag",
                " jsp.error.tagfile.tld.name=El atributo \\\"name\\\" de la directiva tag tiene un valor {0} mientras que el tag \\\"name\\\" del elemento \\\"tag-file\\\" en el TLD es {1}",
                "-jsp.error.action.istagfile=La acci\u00ef\u00bf\u00bdn {0} no se puede usar en un archivo tag",
                "-jsp.error.action.isnottagfile=La acci\u00ef\u00bf\u00bdn {0} s\u00ef\u00bf\u00bdlo se puede usar en archivos tag",
                "+jsp.error.action.istagfile=La acci\u00c3\u00b3n {0} no se puede usar en un archivo tag",
                "+jsp.error.action.isnottagfile=La acci\u00c3\u00b3n {0} s\u00c3\u00b3lo se puede usar en archivos tag",
                " jsp.error.unterminated=Tag {0} no terminado",
                "-jsp.error.usebean.notinsamefile=El Tag useBean debe de empezar y terminar en el mismo archivo f\u00ef\u00bf\u00bdsico",
                "+jsp.error.usebean.notinsamefile=El Tag useBean debe de empezar y terminar en el mismo archivo f\u00c3\u00adsico",
                " jsp.error.loadclass.taghandler=No se puede cargar la clase {0}",
                "@@ -109,6 +105,6 @@ jsp.error.usebean.class.notfound=Clase: {0} no hallada",
                " jsp.error.file.cannot.read=No se puede leer el archivo: {0}",
                "-jsp.error.file.already.registered=El archivo {0} ya se ha visto, \u00ef\u00bf\u00bdpodr\u00ef\u00bf\u00bda ser un include recursivo?",
                "+jsp.error.file.already.registered=El archivo {0} ya se ha visto, \u00c2\u00bfpodr\u00c3\u00ada ser un include recursivo?",
                " jsp.error.file.not.registered=Archivo {0} not visto en include",
                " jsp.error.quotes.unterminated=Comillas no terminadas",
                "-jsp.error.attr.quoted=El valor del atributo deber\u00ef\u00bf\u00bda ir entre comillas",
                "+jsp.error.attr.quoted=El valor del atributo deber\u00c3\u00ada ir entre comillas",
                " jsp.error.attr.novalue=Atributo {0} no tiene valor",
                "@@ -117,20 +113,20 @@ jsp.error.param.noname=No hay nombre en el tag PARAM",
                " jsp.error.param.novalue=No hay valor en el tag PARAM",
                "-jsp.error.beans.nullbean=Se ha intentado una operaci\u00ef\u00bf\u00bdn de bean en un objeto nulo",
                "+jsp.error.beans.nullbean=Se ha intentado una operaci\u00c3\u00b3n de bean en un objeto nulo",
                " jsp.error.beans.nobeaninfo=No se puede encontrar BeanInfo para el bean  ''{0}'' seguramente la clase no existe",
                "-jsp.error.beans.introspection=Una excepci\u00ef\u00bf\u00bdn ha tenido lugar mientras se le\u00ef\u00bf\u00bda el m\u00ef\u00bf\u00bdtodo de lectura de la propiedad ''{0}'' en un bean del tipo ''{1}'':\\n{2}",
                "-jsp.error.beans.nomethod=No puedo encontrar un m\u00ef\u00bf\u00bdtodo para leer la propiedad ''{0}'' en un bean del tipo ''{1}''",
                "-jsp.error.beans.nomethod.setproperty=No puedo encontrar un m\u00ef\u00bf\u00bdtodo para escribir la propiedad ''{0}'' en un bean del tipo ''{2}''",
                "-jsp.error.beans.noproperty=No puedo encontrar informaci\u00ef\u00bf\u00bdn de la propiedad ''{0}'' en un bean del tipo ''{1}''",
                "+jsp.error.beans.introspection=Una excepci\u00c3\u00b3n ha tenido lugar mientras se le\u00c3\u00ada el m\u00c3\u00a9todo de lectura de la propiedad ''{0}'' en un bean del tipo ''{1}'':\\n{2}",
                "+jsp.error.beans.nomethod=No puedo encontrar un m\u00c3\u00a9todo para leer la propiedad ''{0}'' en un bean del tipo ''{1}''",
                "+jsp.error.beans.nomethod.setproperty=No puedo encontrar un m\u00c3\u00a9todo para escribir la propiedad ''{0}'' en un bean del tipo ''{2}''",
                "+jsp.error.beans.noproperty=No puedo encontrar informaci\u00c3\u00b3n de la propiedad ''{0}'' en un bean del tipo ''{1}''",
                " jsp.error.beans.setproperty.noindexset=No puedo poner la propiedad indexada",
                "-jsp.error.include.tag=Tag jsp:include no v\u00ef\u00bf\u00bdlido",
                "+jsp.error.include.tag=Tag jsp:include no v\u00c3\u00a1lido",
                " jsp.error.include.noflush=jsp:include necesita tener \\\"flush=true\\\"",
                "-jsp.error.include.badflush=jsp:include page=\\\"...\\\" flush=\\\"true\\\" es la \u00ef\u00bf\u00bdnica combinaci\u00ef\u00bf\u00bdn v\u00ef\u00bf\u00bdlida en JSP 1.0",
                "-jsp.error.attempt_to_clear_flushed_buffer=Error: Se ha intentado limpiar un buffer que ya hab\u00ef\u00bf\u00bda sido escrito",
                "+jsp.error.include.badflush=jsp:include page=\\\"...\\\" flush=\\\"true\\\" es la \u00c3\u00banica combinaci\u00c3\u00b3n v\u00c3\u00a1lida en JSP 1.0",
                "+jsp.error.attempt_to_clear_flushed_buffer=Error: Se ha intentado limpiar un buffer que ya hab\u00c3\u00ada sido escrito",
                " jsp.error.overflow=Error:Buffer de JSP desbordado",
                "-jsp.error.paramexpected=El tag \\\"param\\\" era esperado con los atributos \\\"name\\\" y \\\"value\\\" despu\u00ef\u00bf\u00bds del tag \\\"params\\\".",
                "-jsp.error.param.invalidUse=La acci\u00ef\u00bf\u00bdn jsp:param no debe de ser usada fuera de los elementos jsp:include, jsp:forward o jsp:params",
                "+jsp.error.paramexpected=El tag \\\"param\\\" era esperado con los atributos \\\"name\\\" y \\\"value\\\" despu\u00c3\u00a9s del tag \\\"params\\\".",
                "+jsp.error.param.invalidUse=La acci\u00c3\u00b3n jsp:param no debe de ser usada fuera de los elementos jsp:include, jsp:forward o jsp:params",
                " jsp.error.params.invalidUse=jsp:params debe de ser un hijo directo de jsp:plugin",
                " jsp.error.fallback.invalidUse=jsp:fallback debe de ser un hijo directo de jsp:plugin",
                "-jsp.error.namedAttribute.invalidUse=jsp:attribute debe de ser el subelemento de una acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar o de cliente",
                "-jsp.error.jspbody.invalidUse=jsp:body debe de ser el subelemento de una acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar o de cliente",
                "+jsp.error.namedAttribute.invalidUse=jsp:attribute debe de ser el subelemento de una acci\u00c3\u00b3n est\u00c3\u00a1ndar o de cliente",
                "+jsp.error.jspbody.invalidUse=jsp:body debe de ser el subelemento de una acci\u00c3\u00b3n est\u00c3\u00a1ndar o de cliente",
                " jsp.error.closeindividualparam=El tag param necesita ser cerrado con \\\"/>\\\"",
                "@@ -141,4 +137,4 @@ jsp.error.plugin.notype=Tipo no declarado en jsp:plugin",
                " jsp.error.plugin.badtype=Valor ilegal para atributo 'type' en jsp:plugin: debe de ser 'bean' o 'applet'",
                "-jsp.error.plugin.nocode=C\u00ef\u00bf\u00bddigo no declarado en jsp:plugin",
                "-jsp.error.ise_on_clear=Es ilegal usar clear() cuando el tama\u00ef\u00bf\u00bdo del buffer es cero",
                "+jsp.error.plugin.nocode=C\u00c3\u00b3digo no declarado en jsp:plugin",
                "+jsp.error.ise_on_clear=Es ilegal usar clear() cuando el tama\u00c3\u00b1o del buffer es cero",
                " jsp.error.setproperty.beanNotFound=setProperty: Bean {0} no encontrado",
                "@@ -151,17 +147,17 @@ jsp.error.setproperty.beanInfoNotFound=setproperty: beanInfo para bean {0} no en",
                " jsp.error.setproperty.paramOrValue=setProperty: O param o value pueden estar presentes",
                "-jsp.error.setproperty.arrayVal=setProperty: No puede escribir en la propiedad de array {0} a trav\u00ef\u00bf\u00bds de una valor de cadena literal",
                "-jsp.warning.keepgen=Aviso: valor incorrecto para el initParam keepgen. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "-jsp.warning.xpoweredBy=Aviso: valor incorrecto para el initParam xpoweredBy. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "-jsp.warning.enablePooling=Aviso: valor incorrecto para el initParam enablePooling. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"true\\\"",
                "-jsp.warning.invalidTagPoolSize=Aviso: valor incorrecto para el par\u00ef\u00bf\u00bdmetro init llamado tagPoolSize. Se usar\u00ef\u00bf\u00bd la medida por defecto de {0}",
                "-jsp.warning.mappedFile=Aviso: valor incorrecto para el initParam mappedFile. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "-jsp.warning.sendErrToClient=Aviso: valor incorrecto para el initParam sendErrToClient. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "-jsp.warning.classDebugInfo=Aviso: valor incorrecto para el initParam classdebuginfo. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "-jsp.warning.checkInterval=Aviso: valor incorrecto para el initParam checkInterval. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"300\\\" segundos",
                "-jsp.warning.development=Aviso: valor incorrecto para el initParam development. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"true\\\"",
                "-jsp.warning.fork=Aviso: valor incorrecto para el initParam fork. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"true\\\"",
                "-jsp.warning.reloading=Aviso: valor incorrecto para el initParam reloading. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"true\\\"",
                "-jsp.warning.dumpSmap=Aviso: valor incorrecto para el initParam dumpSmap. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "-jsp.warning.genchararray=Aviso: valor incorrecto para el initParam genStrAsCharArray. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "-jsp.warning.suppressSmap=Aviso: valor incorrecto para el initParam suppressSmap. Se usar\u00ef\u00bf\u00bd el valor por defecto de \\\"false\\\"",
                "+jsp.error.setproperty.arrayVal=setProperty: No puede escribir en la propiedad de array {0} a trav\u00c3\u00a9s de una valor de cadena literal",
                "+jsp.warning.keepgen=Aviso: valor incorrecto para el initParam keepgen. Se usar\u00c3\u00a1 el valor por defecto de \\\"false\\\"",
                "+jsp.warning.xpoweredBy=Aviso: valor incorrecto para el initParam xpoweredBy. Se usar\u00c3\u00a1 el valor por defecto de \\\"false\\\"",
                "+jsp.warning.enablePooling=Aviso: valor incorrecto para el initParam enablePooling. Se usar\u00c3\u00a1 el valor por defecto de \\\"true\\\"",
                "+jsp.warning.invalidTagPoolSize=Aviso: valor incorrecto para el par\u00c3\u00a1metro init llamado tagPoolSize. Se usar\u00c3\u00a1 la medida por defecto de {0}",
                "+jsp.warning.mappedFile=Aviso: valor incorrecto para el initParam mappedFile. Se usar\u00c3\u00a1 el valor por defecto de \\\"false\\\"",
                "+jsp.warning.sendErrToClient=Aviso: valor incorrecto para el initParam sendErrToClient. Se usar\u00c3\u00a1 el valor por defecto de \\\"false\\\"",
                "+jsp.warning.classDebugInfo=Aviso: valor incorrecto para el initParam classdebuginfo. Se usar\u00c3\u00a1 el valor por defecto de \\\"false\\\"",
                "+jsp.warning.checkInterval=Aviso: valor incorrecto para el initParam checkInterval. Se usar\u00c3\u00a1 el valor por defecto de \\\"300\\\" segundos",
                "+jsp.warning.development=Aviso: valor incorrecto para el initParam development. Se usar\u00c3\u00a1 el valor por defecto de \\\"true\\\"",
                "+jsp.warning.fork=Aviso: valor incorrecto para el initParam fork. Se usar\u00c3\u00a1 el valor por defecto de \\\"true\\\"",
                "+jsp.warning.reloading=Aviso: valor incorrecto para el initParam reloading. Se usar\u00c3\u00a1 el valor por defecto de \\\"true\\\"",
                "+jsp.warning.dumpSmap=Aviso: valor incorrecto para el initParam dumpSmap. Se usar\u00c3\u00a1 el valor por defecto de \\\"false\\\"",
                "+jsp.warning.genchararray=Aviso: valor incorrecto para el initParam genStrAsCharArray. Se usar\u00c3\u00a1 el valor por defecto de \\\"false\\\"",
                "+jsp.warning.suppressSmap=Aviso: valor incorrecto para el initParam suppressSmap. Se usar\u00c3\u00a1 el valor por defecto de \\\"false\\\"",
                " jsp.error.badtaglib=No se puede abrir la biblioteca de tags {0}: {1}",
                "@@ -176,8 +172,8 @@ jsp.warning.unknown.element.in.initParam=Elemento desconocido ({0}) en init-para",
                " jsp.warning.unknown.element.in.function=Elemento desconocido ({0}) en function",
                "-jsp.error.more.than.one.taglib=M\u00ef\u00bf\u00bds de una biblioteca de tags en el TLD: {0}",
                "+jsp.error.more.than.one.taglib=M\u00c3\u00a1s de una biblioteca de tags en el TLD: {0}",
                " jsp.error.teiclass.instantiation=No se puede cargar la clase TagExtraInfo llamada: {0}",
                "-jsp.error.non_null_tei_and_var_subelems=Tag {0} tiene uno o m\u00ef\u00bf\u00bds subelementos variable y una clase TagExtraInfo que devuelve una o m\u00ef\u00bf\u00bds VariableInfo",
                "-jsp.error.parse.error.in.TLD=Error de an\u00ef\u00bf\u00bdlisis en el descriptor de biblioteca de tags: {0}",
                "+jsp.error.non_null_tei_and_var_subelems=Tag {0} tiene uno o m\u00c3\u00a1s subelementos variable y una clase TagExtraInfo que devuelve una o m\u00c3\u00a1s VariableInfo",
                "+jsp.error.parse.error.in.TLD=Error de an\u00c3\u00a1lisis en el descriptor de biblioteca de tags: {0}",
                " jsp.error.unable.to.open.TLD=No se puede abrir el descriptor de biblioteca de tags: {0}",
                "-jsp.buffer.size.zero=Tama\u00ef\u00bf\u00bdo de buffer <= 0",
                "+jsp.buffer.size.zero=Tama\u00c3\u00b1o de buffer <= 0",
                " jsp.error.file.not.found=Archivo JSP \\\"{0}\\\" no encontrado",
                "@@ -191,4 +187,4 @@ jsp.message.java_file_name_is=El Nombre del Archivo Java es: {0}",
                " jsp.message.class_file_name_is=El Nombre del Archivo de clase es: {0}",
                "-jsp.message.accepted=Acept\u00ef\u00bf\u00bd {0} en {1}",
                "-jsp.message.adding_jar=A\u00ef\u00bf\u00bdadiendo jar {0} a mi classpath",
                "+jsp.message.accepted=Acept\u00c3\u00b3 {0} en {1}",
                "+jsp.message.adding_jar=A\u00c3\u00b1adiendo jar {0} a mi classpath",
                " jsp.message.compiling_with=Compilado con: {0}",
                "@@ -196,3 +192,3 @@ jsp.message.template_text=texto plantilla",
                " jsp.error.missing_attribute=De acuerdo con el TLD el atributo {0} es obligatorio para el tag {1}",
                "-jsp.error.bad_attribute=El atributo {0} no es v\u00ef\u00bf\u00bdlido seg\u00ef\u00bf\u00bdn el TLD especificado",
                "+jsp.error.bad_attribute=El atributo {0} no es v\u00c3\u00a1lido seg\u00c3\u00ban el TLD especificado",
                " jsp.error.tld.unable_to_read=Imposible de leer TLD \\\"{1}\\\" desde archivo JAR \\\"{0}\\\": {2}",
                "@@ -204,14 +200,14 @@ jsp.message.cp_is=Classpath {0} es: {1}",
                " jsp.error.unable.to_load_taghandler_class=No se puede cargar clase manejadora {0} del tag a causa de {1}",
                "-jsp.error.unable.to_find_method=No se puede encontrar el m\u00ef\u00bf\u00bdtodo de escritura para el atributo: {0}",
                "+jsp.error.unable.to_find_method=No se puede encontrar el m\u00c3\u00a9todo de escritura para el atributo: {0}",
                " jsp.error.unable.to_convert_string=No pude convertir un String a {0} para atributo {1}",
                "-jsp.error.unable.to_introspect=No se puede hacer introspecci\u00ef\u00bf\u00bdn en manejador de tag clase: {0} a causa de {1}",
                "+jsp.error.unable.to_introspect=No se puede hacer introspecci\u00c3\u00b3n en manejador de tag clase: {0} a causa de {1}",
                " jsp.error.bad_tag=No existe el tag {0} en la biblioteca importada con prefijo {1}",
                " jsp.error.xml.bad_tag=No se ha definido el tag \\\"{0}\\\" en la biblioteca tag asociada con uri \\\"{1}\\\"",
                "-jsp.error.bad_string_Character=No puede extraer un Character desde un array de tama\u00ef\u00bf\u00bdo cero",
                "-jsp.error.bad_string_char=No puede extraer un char desde un array de tama\u00ef\u00bf\u00bdo cero",
                "-jsp.warning.compiler.class.cantcreate=No puedo crear una instancia de la clase especificada {0} de plugin del compilador debido a {1}. Se usar\u00ef\u00bf\u00bd el compilador Java de Sun.",
                "-jsp.warning.compiler.class.notfound=No puedo encontrar una instancia de la clase {0} de plugin de compilador. Se usar\u00ef\u00bf\u00bd el compilador del Java de Sun.",
                "-jsp.warning.compiler.path.notfound=Trayectoria del compilador especificado {0} no encontrada. Se usar\u00ef\u00bf\u00bd el PATH del sistema.",
                "-jsp.error.jspc.uriroot_not_dir=La opci\u00ef\u00bf\u00bdn -uriroot debe de especificar un directorio ya existente",
                "-jsp.error.jspc.missingTarget=Falta target: Debe de especificar -webapp o -uriroot o una o m\u00ef\u00bf\u00bds p\u00ef\u00bf\u00bdginas JSP",
                "+jsp.error.bad_string_Character=No puede extraer un Character desde un array de tama\u00c3\u00b1o cero",
                "+jsp.error.bad_string_char=No puede extraer un char desde un array de tama\u00c3\u00b1o cero",
                "+jsp.warning.compiler.class.cantcreate=No puedo crear una instancia de la clase especificada {0} de plugin del compilador debido a {1}. Se usar\u00c3\u00a1 el compilador Java de Sun.",
                "+jsp.warning.compiler.class.notfound=No puedo encontrar una instancia de la clase {0} de plugin de compilador. Se usar\u00c3\u00a1 el compilador del Java de Sun.",
                "+jsp.warning.compiler.path.notfound=Trayectoria del compilador especificado {0} no encontrada. Se usar\u00c3\u00a1 el PATH del sistema.",
                "+jsp.error.jspc.uriroot_not_dir=La opci\u00c3\u00b3n -uriroot debe de especificar un directorio ya existente",
                "+jsp.error.jspc.missingTarget=Falta target: Debe de especificar -webapp o -uriroot o una o m\u00c3\u00a1s p\u00c3\u00a1ginas JSP",
                " jsp.error.jspc.no_uriroot=No se ha especificado uriroot y no puede ser localizado en los archivos JSP especificados",
                "@@ -221,5 +217,5 @@ donde <Archivos JSP> son:\\n\\",
                " \\    -webapp <dir>      Un directorio conteniendo una web-app. Todas las\\n\\",
                "-\\                       p\u00ef\u00bf\u00bdginas jsp ser\u00ef\u00bf\u00bdn compiladas recursivamente\\n\\",
                "-o cualquier n\u00ef\u00bf\u00bdmero de\\n\\",
                "-\\    <Archivo>          Un Archivo para ser interpretado como una p\u00ef\u00bf\u00bdgina jsp\\n\\",
                "+\\                       p\u00c3\u00a1ginas jsp ser\u00c3\u00a1n compiladas recursivamente\\n\\",
                "+o cualquier n\u00c3\u00bamero de\\n\\",
                "+\\    <Archivo>          Un Archivo para ser interpretado como una p\u00c3\u00a1gina jsp\\n\\",
                " y donde <opciones> incluyen:\\n\\",
                "@@ -228,4 +224,4 @@ y donde <opciones> incluyen:\\n\\",
                " \\    -d <dir>           Directorio de salida\\n\\",
                "-\\    -l                 Muestra el nombre de la p\u00ef\u00bf\u00bdgina JSP al ocurrir un fallo\\n\\",
                "-\\    -s                 Muestra el nombre de la p\u00ef\u00bf\u00bdgina JSP al tener \u00ef\u00bf\u00bdxito\\n\\",
                "+\\    -l                 Muestra el nombre de la p\u00c3\u00a1gina JSP al ocurrir un fallo\\n\\",
                "+\\    -s                 Muestra el nombre de la p\u00c3\u00a1gina JSP al tener \u00c3\u00a9xito\\n\\",
                " \\    -p <name>          Nombre del package objetivo\\n\\",
                "@@ -233,6 +229,6 @@ y donde <opciones> incluyen:\\n\\",
                " \\    -c <name>          Nombre de la clase objetivo\\n\\",
                "-\\                       (s\u00ef\u00bf\u00bdlo se aplica a la primera p\u00ef\u00bf\u00bdgina JSP)\\n\\",
                "-\\    -mapped            Genera llamadas separadas a write() para cada l\u00ef\u00bf\u00bdnea de\\n\\",
                "+\\                       (s\u00c3\u00b3lo se aplica a la primera p\u00c3\u00a1gina JSP)\\n\\",
                "+\\    -mapped            Genera llamadas separadas a write() para cada l\u00c3\u00adnea de\\n\\",
                " \\                       HTML en el JSP\\n\\",
                "-\\    -die[#]            Genera un c\u00ef\u00bf\u00bddigo de retorno de error (#) en errores\\n\\",
                "+\\    -die[#]            Genera un c\u00c3\u00b3digo de retorno de error (#) en errores\\n\\",
                " \\                       fatales. (por defecto 1).\\n\\",
                "@@ -246,3 +242,3 @@ y donde <opciones> incluyen:\\n\\",
                " \\    -classpath <path>  Pasa por alto la propiedad de sistema java.class.path\\n\\",
                "-\\    -xpoweredBy        A\u00ef\u00bf\u00bdade cabecera de respuesta  X-Powered-By\\n\\",
                "+\\    -xpoweredBy        A\u00c3\u00b1ade cabecera de respuesta  X-Powered-By\\n\\",
                " \\    -trimSpaces        Trim spaces in template text between actions, directives\\n\\",
                "@@ -276,3 +272,3 @@ Los Elementos: session-config, mime-mapping, welcome-file-list, error-page, tagl",
                " resource-ref, security-constraint, login-config, security-role,\\n\\",
                "-env-entry y ejb-ref deber\u00ef\u00bf\u00bdn de ir despu\u00ef\u00bf\u00bds de este fragmento .\\n\\",
                "+env-entry y ejb-ref deber\u00c3\u00a1n de ir despu\u00c3\u00a9s de este fragmento .\\n\\",
                " -->\\n",
                "@@ -280,17 +276,17 @@ jspc.webinc.insertEnd=<!-- Fin de mapeos de servlet JSPC -->",
                " jspc.webinc.insertStart=<!-- Inicio de mapeos de servlet JSPC -->",
                "-jspc.error.jasperException=error-el archivo ''{0}'' ha generado la excepci\u00ef\u00bf\u00bdn de sint\u00ef\u00bf\u00bdxis siguiente: {1}",
                "-jspc.error.generalException=ERROR-el archivo ''{0}'' ha generado la excepci\u00ef\u00bf\u00bdn general siguiente:",
                "+jspc.error.jasperException=error-el archivo ''{0}'' ha generado la excepci\u00c3\u00b3n de sint\u00c3\u00a1xis siguiente: {1}",
                "+jspc.error.generalException=ERROR-el archivo ''{0}'' ha generado la excepci\u00c3\u00b3n general siguiente:",
                " jspc.error.fileDoesNotExist=El archivo ''{0}'' utilizado como argumento no existe.",
                " jspc.error.emptyWebApp=-webapp necesita un argumento de archivo",
                "-jsp.error.library.invalid=La p\u00ef\u00bf\u00bdgina JSP es incorrecta de acuerdo a la biblioteca {0}: {1}",
                "+jsp.error.library.invalid=La p\u00c3\u00a1gina JSP es incorrecta de acuerdo a la biblioteca {0}: {1}",
                " jsp.error.tlvclass.instantiation=No pude cargar o instanciar clase TagLibraryValidator: {0}",
                "-jsp.error.tlv.invalid.page=Mensajes de error de validaci\u00ef\u00bf\u00bdn desde TagLibraryValidator para {0} in {1}",
                "-jsp.error.tei.invalid.attributes=Mensajes de error de validaci\u00ef\u00bf\u00bdn desde TagExtraInfo para {0}",
                "+jsp.error.tlv.invalid.page=Mensajes de error de validaci\u00c3\u00b3n desde TagLibraryValidator para {0} in {1}",
                "+jsp.error.tei.invalid.attributes=Mensajes de error de validaci\u00c3\u00b3n desde TagExtraInfo para {0}",
                " jsp.parser.sax.propertynotsupported=Propiedad SAX no soportada: {0}",
                " jsp.parser.sax.propertynotrecognized=Propiedad SAX no reconocida: {0}",
                "-jsp.parser.sax.featurenotsupported=Caracter\u00ef\u00bf\u00bdstica SAX no soportada: {0}",
                "-jsp.parser.sax.featurenotrecognized=Caracter\u00ef\u00bf\u00bdstica SAX no reconocida: {0}",
                "-jsp.error.no.more.content=Alcanzado fin de contenido mietras se requer\u00ef\u00bf\u00bda m\u00ef\u00bf\u00bds an\u00ef\u00bf\u00bdlisis: \u00ef\u00bf\u00bderror de anidamiento de tag?",
                "-jsp.error.parse.xml=Error de an\u00ef\u00bf\u00bdlisis XML en archivo {0}",
                "-jsp.error.parse.xml.line=Error de an\u00ef\u00bf\u00bdlisis XML en archivo {0}: (l\u00ef\u00bf\u00bdnea {1}, col {2})",
                "+jsp.parser.sax.featurenotsupported=Caracter\u00c3\u00adstica SAX no soportada: {0}",
                "+jsp.parser.sax.featurenotrecognized=Caracter\u00c3\u00adstica SAX no reconocida: {0}",
                "+jsp.error.no.more.content=Alcanzado fin de contenido mietras se requer\u00c3\u00ada m\u00c3\u00a1s an\u00c3\u00a1lisis: \u00c2\u00bferror de anidamiento de tag?",
                "+jsp.error.parse.xml=Error de an\u00c3\u00a1lisis XML en archivo {0}",
                "+jsp.error.parse.xml.line=Error de an\u00c3\u00a1lisis XML en archivo {0}: (l\u00c3\u00adnea {1}, col {2})",
                " jsp.error.parse.xml.scripting.invalid.body=El cuerpo de elemento {0} no debe de contener elementos XML",
                "@@ -301,6 +297,6 @@ jsp.error.parse.xml.invalidPublicId=PUBLIC ID incorrecta: {0}",
                " jsp.error.include.flush.invalid.value=Valor incorrecto para atributo flush: {0}",
                "-jsp.error.unsupported.encoding=Codificaci\u00ef\u00bf\u00bdn no soportada: {0}",
                "-tld.error.variableNotAllowed=Es un error para un tag, que tiene uno o m\u00ef\u00bf\u00bds subelementos variables, el tener una clase TagExtraInfo que devuelve un objeto no nulo.",
                "+jsp.error.unsupported.encoding=Codificaci\u00c3\u00b3n no soportada: {0}",
                "+tld.error.variableNotAllowed=Es un error para un tag, que tiene uno o m\u00c3\u00a1s subelementos variables, el tener una clase TagExtraInfo que devuelve un objeto no nulo.",
                " jsp.error.tldInWebDotXmlNotFound=No pude localizar TLD {1} para URI {0} especificado en web.xml",
                "-jsp.error.taglibDirective.absUriCannotBeResolved=La uri absoluta: {0} no puede resolverse o en web.xml o el los archivos jar desplegados con esta aplicaci\u00ef\u00bf\u00bdn",
                "+jsp.error.taglibDirective.absUriCannotBeResolved=La uri absoluta: {0} no puede resolverse o en web.xml o el los archivos jar desplegados con esta aplicaci\u00c3\u00b3n",
                " jsp.error.taglibDirective.missing.location=No se ha especificado ni el atributo \\'uri\\' ni el \\'tagdir\\'",
                "@@ -310,31 +306,31 @@ jsp.error.unterminated.user.tag=Tag definido por usuario no terminado: tag final",
                " #jspx.error.templateDataNotInJspCdata=Validation Error: Element &lt;{0}&gt; cannot have template data. Template data must be encapsulated within a &lt;jsp:cdata&gt; element. [JSP1.2 PFD section 5.1.9]\\nTemplate data in error: {1}",
                "-jspx.error.templateDataNotInJspCdata=Error de Validaci\u00ef\u00bf\u00bdn: El Elemento &lt;{0}&gt; no puede tener datos plantilla. Los datos plantilla deben de estar encapsulados dentro de un elemento &lt;jsp:text&gt;. [JSP1.2 PFD secci\u00ef\u00bf\u00bdn 5.1.9]\\nDatos de Plantilla en error: {1}",
                "+jspx.error.templateDataNotInJspCdata=Error de Validaci\u00c3\u00b3n: El Elemento &lt;{0}&gt; no puede tener datos plantilla. Los datos plantilla deben de estar encapsulados dentro de un elemento &lt;jsp:text&gt;. [JSP1.2 PFD secci\u00c3\u00b3n 5.1.9]\\nDatos de Plantilla en error: {1}",
                " #Error while processing taglib jar file {0}: {1}",
                "-jsp.error.taglib.reserved.prefix=El prefijo taglib {0} est\u00ef\u00bf\u00bd reservado",
                "-jsp.error.invalid.javaEncoding=Codificaciones java incorrectas. Intent\u00ef\u00bf\u00bd {0} y luego {1}. Ambas fallaron.",
                "-jsp.error.needAlternateJavaEncoding=La codificaci\u00ef\u00bf\u00bdn java por defecto {0} es incorrecta en tu plataforma java. Se puede especificar una alternativa v\u00ef\u00bf\u00bda par\u00ef\u00bf\u00bdmetro 'javaEncoding' de JspServlet.",
                "+jsp.error.taglib.reserved.prefix=El prefijo taglib {0} est\u00c3\u00a1 reservado",
                "+jsp.error.invalid.javaEncoding=Codificaciones java incorrectas. Intent\u00c3\u00a9 {0} y luego {1}. Ambas fallaron.",
                "+jsp.error.needAlternateJavaEncoding=La codificaci\u00c3\u00b3n java por defecto {0} es incorrecta en tu plataforma java. Se puede especificar una alternativa v\u00c3\u00ada par\u00c3\u00a1metro 'javaEncoding' de JspServlet.",
                " #Error when compiling, used for jsp line number error messages",
                "-jsp.error.single.line.number=Ha tenido lugar un error en la l\u00ef\u00bf\u00bdnea: {0} en el archivo jsp: {1}",
                "-jsp.error.multiple.line.number=\\n\\nHa tenido lugar un error entre las l\u00ef\u00bf\u00bdneas: {0} y {1} en el archivo jsp: {2}\\n\\n",
                "+jsp.error.single.line.number=Ha tenido lugar un error en la l\u00c3\u00adnea: {0} en el archivo jsp: {1}",
                "+jsp.error.multiple.line.number=\\n\\nHa tenido lugar un error entre las l\u00c3\u00adneas: {0} y {1} en el archivo jsp: {2}\\n\\n",
                " jsp.error.corresponding.servlet=Error de servlet generado:\\n",
                "-jsp.error.empty.body.not.allowed=Cuerpo vac\u00ef\u00bf\u00bdo no permitido para {0}",
                "+jsp.error.empty.body.not.allowed=Cuerpo vac\u00c3\u00ado no permitido para {0}",
                " jsp.error.jspbody.required=Se debe de usar jsp:body para especificar cuerpo tag para {0} si se usa jsp:attribute.",
                "-jsp.error.jspbody.emptybody.only=El tag {0} s\u00ef\u00bf\u00bdlo puede tener jsp:attribute en su cuerpo.",
                "-jsp.error.no.scriptlets=Los elementos de Scripting (&lt;%!, &lt;jsp:declaration, &lt;%=, &lt;jsp:expression, &lt;%, &lt;jsp:scriptlet ) no est\u00ef\u00bf\u00bdn permitidos aqu\u00ef\u00bf\u00bd.",
                "+jsp.error.jspbody.emptybody.only=El tag {0} s\u00c3\u00b3lo puede tener jsp:attribute en su cuerpo.",
                "+jsp.error.no.scriptlets=Los elementos de Scripting (&lt;%!, &lt;jsp:declaration, &lt;%=, &lt;jsp:expression, &lt;%, &lt;jsp:scriptlet ) no est\u00c3\u00a1n permitidos aqu\u00c3\u00ad.",
                " jsp.error.internal.unexpected_node_type=Error Interno: Encontrado tipo de nodo inesperado",
                "-jsp.error.tld.fn.invalid.signature=Sint\u00ef\u00bf\u00bdxis incorrecta para firma de funci\u00ef\u00bf\u00bdn en TLD. Biblioteca de Tag: {0}, Funci\u00ef\u00bf\u00bdn: {1}",
                "-jsp.error.tld.fn.duplicate.name=Nombre duplicado de funci\u00ef\u00bf\u00bdn {0} en biblioteca de tag {1}",
                "-jsp.error.tld.fn.invalid.signature.commaexpected=Sint\u00ef\u00bf\u00bdxis incorrecta para firma de funci\u00ef\u00bf\u00bdn en TLD. Se esperaba Coma ','. Biblioteca de Tag: {0}, Funci\u00ef\u00bf\u00bdn: {1}.",
                "-jsp.error.tld.fn.invalid.signature.parenexpected=Sint\u00ef\u00bf\u00bdxis incorrecta para firma de funci\u00ef\u00bf\u00bdn en TLD. Se esperaba Par\u00ef\u00bf\u00bdntesis '('. Biblioteca de Tag: {0}, Funci\u00ef\u00bf\u00bdn: {1}.",
                "-jsp.error.tld.mandatory.element.missing=Falta o est\u00ef\u00bf\u00bd vac\u00ef\u00bf\u00bdo elemento TLD obligatorio: {0}",
                "-jsp.error.dynamic.attributes.not.implemented=El tag {0} declara que acepta atributos din\u00ef\u00bf\u00bdmicos pero no implementa la interfaz requerida",
                "+jsp.error.tld.fn.invalid.signature=Sint\u00c3\u00a1xis incorrecta para firma de funci\u00c3\u00b3n en TLD. Biblioteca de Tag: {0}, Funci\u00c3\u00b3n: {1}",
                "+jsp.error.tld.fn.duplicate.name=Nombre duplicado de funci\u00c3\u00b3n {0} en biblioteca de tag {1}",
                "+jsp.error.tld.fn.invalid.signature.commaexpected=Sint\u00c3\u00a1xis incorrecta para firma de funci\u00c3\u00b3n en TLD. Se esperaba Coma ','. Biblioteca de Tag: {0}, Funci\u00c3\u00b3n: {1}.",
                "+jsp.error.tld.fn.invalid.signature.parenexpected=Sint\u00c3\u00a1xis incorrecta para firma de funci\u00c3\u00b3n en TLD. Se esperaba Par\u00c3\u00a9ntesis '('. Biblioteca de Tag: {0}, Funci\u00c3\u00b3n: {1}.",
                "+jsp.error.tld.mandatory.element.missing=Falta o est\u00c3\u00a1 vac\u00c3\u00ado elemento TLD obligatorio: {0}",
                "+jsp.error.dynamic.attributes.not.implemented=El tag {0} declara que acepta atributos din\u00c3\u00a1micos pero no implementa la interfaz requerida",
                " jsp.error.nomatching.fragment=No puedo hallar una directiva de atributo (con name={0} y fragment=true) antes de la directiva de fragment.",
                "-jsp.error.attribute.noequal=se esperaba s\u00ef\u00bf\u00bdmbolo igual",
                "-jsp.error.attribute.noquote=se esperaba s\u00ef\u00bf\u00bdmbolo comillas",
                "-jsp.error.attribute.unterminated=el atributo para {0} no est\u00ef\u00bf\u00bd terminado correctamente",
                "+jsp.error.attribute.noequal=se esperaba s\u00c3\u00admbolo igual",
                "+jsp.error.attribute.noquote=se esperaba s\u00c3\u00admbolo comillas",
                "+jsp.error.attribute.unterminated=el atributo para {0} no est\u00c3\u00a1 terminado correctamente",
                " jsp.error.missing.tagInfo=El objeto TagInfo para {0} falta del TLD",
                "-jsp.error.fragmentwithtype=No puede especificar ambos atributos 'fragment' y 'type'. Si est\u00ef\u00bf\u00bd presente 'fragment', 'type' se pone como 'javax.servlet.jsp.tagext.JspFragment'",
                "-jsp.error.fragmentwithrtexprvalue=No puede especificar ambos atributos 'fragment' y 'rtexprvalue'.  Si est\u00ef\u00bf\u00bd presente 'fragment', 'rtexprvalue' se pone como 'true'",
                "+jsp.error.fragmentwithtype=No puede especificar ambos atributos 'fragment' y 'type'. Si est\u00c3\u00a1 presente 'fragment', 'type' se pone como 'javax.servlet.jsp.tagext.JspFragment'",
                "+jsp.error.fragmentwithrtexprvalue=No puede especificar ambos atributos 'fragment' y 'rtexprvalue'.  Si est\u00c3\u00a1 presente 'fragment', 'rtexprvalue' se pone como 'true'",
                " jsp.error.fragmentWithDeclareOrScope=Ambos atributos 'fragment' y 'declare' o 'scope' se han especificado en la directiva variable",
                "-jsp.error.var_and_varReader=S\u00ef\u00bf\u00bdlo se puede especificar uno de \\'var\\' o \\'varReader\\'",
                "+jsp.error.var_and_varReader=S\u00c3\u00b3lo se puede especificar uno de \\'var\\' o \\'varReader\\'",
                " jsp.error.missing_var_or_varReader=Falta atributo \\'var\\' o \\'varReader\\'",
                "@@ -343,8 +339,8 @@ jsp.error.unknown_attribute_type=Tipo de atributo desconocido ({1}) para atribut",
                " jsp.error.jspelement.missing.name=Falta atributo obligatorio XML-style \\'name\\'",
                "-jsp.error.xmlns.redefinition.notimplemented=Error interno: Intento de redefinir xmlns:{0}. La redefinici\u00ef\u00bf\u00bdn de espacios de nombre no est\u00ef\u00bf\u00bd implementada.",
                "-jsp.error.could.not.add.taglibraries=No pude a\u00ef\u00bf\u00bdadir una o m\u00ef\u00bf\u00bds bibliotecas.",
                "-jsp.error.duplicate.name.jspattribute=El atributo {0} especificado en la acci\u00ef\u00bf\u00bdn standard o custom tambi\u00ef\u00bf\u00bdn aparece como el valor del atributo name en jsp:attribute",
                "+jsp.error.xmlns.redefinition.notimplemented=Error interno: Intento de redefinir xmlns:{0}. La redefinici\u00c3\u00b3n de espacios de nombre no est\u00c3\u00a1 implementada.",
                "+jsp.error.could.not.add.taglibraries=No pude a\u00c3\u00b1adir una o m\u00c3\u00a1s bibliotecas.",
                "+jsp.error.duplicate.name.jspattribute=El atributo {0} especificado en la acci\u00c3\u00b3n standard o custom tambi\u00c3\u00a9n aparece como el valor del atributo name en jsp:attribute",
                " jsp.error.not.in.template={0} no permitido en una plantilla cuerpo de texto.",
                "-jsp.error.badStandardAction=Acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar incorrecta",
                "-jsp.error.xml.badStandardAction=Acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar incorrecta: {0}",
                "+jsp.error.badStandardAction=Acci\u00c3\u00b3n est\u00c3\u00a1ndar incorrecta",
                "+jsp.error.xml.badStandardAction=Acci\u00c3\u00b3n est\u00c3\u00a1ndar incorrecta: {0}",
                " jsp.error.tagdirective.badbodycontent=body-content incorrecto ({0}) en directiva tag",
                "@@ -354,25 +350,25 @@ jsp.error.prolog_pagedir_encoding_mismatch=El Page-encoding especificado en XML",
                " jsp.error.prolog_config_encoding_mismatch=El Page-encoding especificado en XML prolog ({0}) difiere del especificado en jsp-property-group ({1})",
                "-jsp.error.attribute.custom.non_rt_with_expr=Seg\u00ef\u00bf\u00bdn el TLD o la directiva attribute del archivo tag, el atributo {0} no acepta expresiones",
                "-jsp.error.attribute.standard.non_rt_with_expr=El atributo {0} de la acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar {1} no acepta expresiones",
                "+jsp.error.attribute.custom.non_rt_with_expr=Seg\u00c3\u00ban el TLD o la directiva attribute del archivo tag, el atributo {0} no acepta expresiones",
                "+jsp.error.attribute.standard.non_rt_with_expr=El atributo {0} de la acci\u00c3\u00b3n est\u00c3\u00a1ndar {1} no acepta expresiones",
                " jsp.error.scripting.variable.missing_name=Imposible determinar nombre de variable de scripting desde atributo {0}",
                "-jasper.error.emptybodycontent.nonempty=Seg\u00ef\u00bf\u00bdn el TLD, el tag {0} debe de estar vac\u00ef\u00bf\u00bdo, pero no lo est\u00ef\u00bf\u00bd",
                "-jsp.error.tagfile.nameNotUnique=El valor de {0} y el valor de {1} en la l\u00ef\u00bf\u00bdnea {2} son el mismo.",
                "+jasper.error.emptybodycontent.nonempty=Seg\u00c3\u00ban el TLD, el tag {0} debe de estar vac\u00c3\u00ado, pero no lo est\u00c3\u00a1",
                "+jsp.error.tagfile.nameNotUnique=El valor de {0} y el valor de {1} en la l\u00c3\u00adnea {2} son el mismo.",
                " jsp.error.tagfile.nameFrom.noAttribute=No puedo hallar una directiva attribute con un atributo name con un valor \\\"{0}\\\", el valor de este atributo name-from-attribute.",
                "-jsp.error.tagfile.nameFrom.badAttribute=La directiva attribute (declarada en la l\u00ef\u00bf\u00bdnea {1} y cuyo atributo name es \\\"{0}\\\", el valor de este atributo name-from-attribute attribute) debe de ser del tipo java.lang.String, es \\\"required\\\" y no un \\\"rtexprvalue\\\".",
                "-jsp.error.page.noSession=No puedo acceder al \u00ef\u00bf\u00bdmbito de sesi\u00ef\u00bf\u00bdn en una p\u00ef\u00bf\u00bdgina que no participa en una sesi\u00ef\u00bf\u00bdn",
                "-jsp.error.useBean.noSession=Es ilegal para useBean usar un \u00ef\u00bf\u00bdmbito de sesi\u00ef\u00bf\u00bdn cuando la p\u00ef\u00bf\u00bdgina JSP declara (v\u00ef\u00bf\u00bda directiva page) que no participa en sesiones",
                "-jsp.error.xml.encodingByteOrderUnsupported=El orden de byte dado para encoding \\\"{0}\\\" no est\u00ef\u00bf\u00bd soportado",
                "-jsp.error.xml.encodingDeclInvalid=Nombre de codificaci\u00ef\u00bf\u00bdn \\\"{0}\\\" incorrecto.",
                "-jsp.error.xml.encodingDeclRequired=Se necesita la declaraci\u00ef\u00bf\u00bdn encoding en la declaraci\u00ef\u00bf\u00bdn de texto",
                "-jsp.error.xml.morePseudoAttributes=se esperan m\u00ef\u00bf\u00bds pseudo-atributos",
                "-jsp.error.xml.noMorePseudoAttributes=no se permiten m\u00ef\u00bf\u00bds pseudo-atributos.",
                "-jsp.error.xml.versionInfoRequired=Se requiere la versi\u00ef\u00bf\u00bdn en la declaraci\u00ef\u00bf\u00bdn XML.",
                "-jsp.error.xml.xmlDeclUnterminated=La declaraci\u00ef\u00bf\u00bdn XML debe de terminar con \\\"?>\\\".",
                "-jsp.error.xml.reservedPITarget=La instrucci\u00ef\u00bf\u00bdn de procesamiento que coincide con \\\"[xX][mM][lL]\\\" no est\u00ef\u00bf\u00bd permitida.",
                "-jsp.error.xml.spaceRequiredInPI=Se necesita un espacio en blanco entre la instrucci\u00ef\u00bf\u00bdn de procesamiento y los datos.",
                "-jsp.error.xml.invalidCharInContent=Un car\u00ef\u00bf\u00bdcter XML incorrecto (Unicode: 0x{0}) se hall\u00ef\u00bf\u00bd en el contenido del elemento del documento.",
                "-jsp.error.xml.spaceRequiredBeforeStandalone=Se necesita un espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00ef\u00bf\u00bdn XML.",
                "-jsp.error.xml.sdDeclInvalid=El valor de declaraci\u00ef\u00bf\u00bdn de documento standalone debe de ser \\\"yes\\\" o \\\"no\\\", no \\\"{0}\\\".",
                "-jsp.error.xml.invalidCharInPI=Se hall\u00ef\u00bf\u00bd un car\u00ef\u00bf\u00bdcter XML incorrecto (Unicode: 0x{0}) en la instrucci\u00ef\u00bf\u00bdn de procesamiento",
                "-jsp.error.xml.versionNotSupported=No se soporta la versi\u00ef\u00bf\u00bdn XML \\\"{0}\\\", s\u00ef\u00bf\u00bdlo se soporta XML 1.0",
                "+jsp.error.tagfile.nameFrom.badAttribute=La directiva attribute (declarada en la l\u00c3\u00adnea {1} y cuyo atributo name es \\\"{0}\\\", el valor de este atributo name-from-attribute attribute) debe de ser del tipo java.lang.String, es \\\"required\\\" y no un \\\"rtexprvalue\\\".",
                "+jsp.error.page.noSession=No puedo acceder al \u00c3\u00a1mbito de sesi\u00c3\u00b3n en una p\u00c3\u00a1gina que no participa en una sesi\u00c3\u00b3n",
                "+jsp.error.useBean.noSession=Es ilegal para useBean usar un \u00c3\u00a1mbito de sesi\u00c3\u00b3n cuando la p\u00c3\u00a1gina JSP declara (v\u00c3\u00ada directiva page) que no participa en sesiones",
                "+jsp.error.xml.encodingByteOrderUnsupported=El orden de byte dado para encoding \\\"{0}\\\" no est\u00c3\u00a1 soportado",
                "+jsp.error.xml.encodingDeclInvalid=Nombre de codificaci\u00c3\u00b3n \\\"{0}\\\" incorrecto.",
                "+jsp.error.xml.encodingDeclRequired=Se necesita la declaraci\u00c3\u00b3n encoding en la declaraci\u00c3\u00b3n de texto",
                "+jsp.error.xml.morePseudoAttributes=se esperan m\u00c3\u00a1s pseudo-atributos",
                "+jsp.error.xml.noMorePseudoAttributes=no se permiten m\u00c3\u00a1s pseudo-atributos.",
                "+jsp.error.xml.versionInfoRequired=Se requiere la versi\u00c3\u00b3n en la declaraci\u00c3\u00b3n XML.",
                "+jsp.error.xml.xmlDeclUnterminated=La declaraci\u00c3\u00b3n XML debe de terminar con \\\"?>\\\".",
                "+jsp.error.xml.reservedPITarget=La instrucci\u00c3\u00b3n de procesamiento que coincide con \\\"[xX][mM][lL]\\\" no est\u00c3\u00a1 permitida.",
                "+jsp.error.xml.spaceRequiredInPI=Se necesita un espacio en blanco entre la instrucci\u00c3\u00b3n de procesamiento y los datos.",
                "+jsp.error.xml.invalidCharInContent=Un car\u00c3\u00a1cter XML incorrecto (Unicode: 0x{0}) se hall\u00c3\u00b3 en el contenido del elemento del documento.",
                "+jsp.error.xml.spaceRequiredBeforeStandalone=Se necesita un espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00c3\u00b3n XML.",
                "+jsp.error.xml.sdDeclInvalid=El valor de declaraci\u00c3\u00b3n de documento standalone debe de ser \\\"yes\\\" o \\\"no\\\", no \\\"{0}\\\".",
                "+jsp.error.xml.invalidCharInPI=Se hall\u00c3\u00b3 un car\u00c3\u00a1cter XML incorrecto (Unicode: 0x{0}) en la instrucci\u00c3\u00b3n de procesamiento",
                "+jsp.error.xml.versionNotSupported=No se soporta la versi\u00c3\u00b3n XML \\\"{0}\\\", s\u00c3\u00b3lo se soporta XML 1.0",
                " jsp.error.xml.pseudoAttrNameExpected=se esperaba un pseudo-atributo name.",
                "@@ -380,19 +376,19 @@ jsp.error.xml.expectedByte=Se esperaba byte {0} de {1}-byte de secuencia UTF-8.",
                " jsp.error.xml.invalidByte=Incorrecto byte {0} de {1}-byte de secuencia UTF-8.",
                "-jsp.error.xml.operationNotSupported=La operaci\u00ef\u00bf\u00bdn \\\"{0}\\\" no est\u00ef\u00bf\u00bd soportada por lector {1}.",
                "-jsp.error.xml.invalidHighSurrogate=Surrogaci\u00ef\u00bf\u00bdn Alta de bits en secuencia UTF-8 no debe de exceder 0x10, pero se hall\u00ef\u00bf\u00bd 0x{0}.",
                "+jsp.error.xml.operationNotSupported=La operaci\u00c3\u00b3n \\\"{0}\\\" no est\u00c3\u00a1 soportada por lector {1}.",
                "+jsp.error.xml.invalidHighSurrogate=Surrogaci\u00c3\u00b3n Alta de bits en secuencia UTF-8 no debe de exceder 0x10, pero se hall\u00c3\u00b3 0x{0}.",
                " jsp.error.xml.invalidASCII=El Byte \\\"{0}\\\" no es ASCII de 7-bit.",
                "-jsp.error.xml.spaceRequiredBeforeEncodingInXMLDecl=Se necesita espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00ef\u00bf\u00bdn XML.",
                "-jsp.error.xml.spaceRequiredBeforeEncodingInTextDecl=Se necesita espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00ef\u00bf\u00bdn text.",
                "-jsp.error.xml.spaceRequiredBeforeVersionInTextDecl=Se necesita espacio en blanco antes del pseudo-atributo version en la declaraci\u00ef\u00bf\u00bdn text.",
                "-jsp.error.xml.spaceRequiredBeforeVersionInXMLDecl=Se necesita espacio en blanco antes del pseudo-atributo version en la declaraci\u00ef\u00bf\u00bdn XML.",
                "-jsp.error.xml.eqRequiredInXMLDecl=El car\u00ef\u00bf\u00bdcter '' = '' debe de serguir a \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn XML.",
                "-jsp.error.xml.eqRequiredInTextDecl=El car\u00ef\u00bf\u00bdcter '' = '' debe de serguir a \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn text.",
                "-jsp.error.xml.quoteRequiredInTextDecl=El valor que sigue a \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn text debe de ser una cadena entre comillas.",
                "-jsp.error.xml.quoteRequiredInXMLDecl=El valor que sigue a \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn XML debe de ser un cadena entre comillas.",
                "-jsp.error.xml.invalidCharInTextDecl=Un car\u00ef\u00bf\u00bdcter XML incorrecto (Unicode: 0x{0}) se hall\u00ef\u00bf\u00bd en la declaraci\u00ef\u00bf\u00bdn text",
                "-jsp.error.xml.invalidCharInXMLDecl=Un car\u00ef\u00bf\u00bdcter XML incorrecto (Unicode: 0x{0}) se hall\u00ef\u00bf\u00bd en la declaraci\u00ef\u00bf\u00bdn XML",
                "-jsp.error.xml.closeQuoteMissingInTextDecl=Faltan las comillas de cierre en el valor que sigue a \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn text.",
                "-jsp.error.xml.closeQuoteMissingInXMLDecl=Faltan las comillas de cierre en el valor que sigue a  \\\"{0}\\\" en la declaraci\u00ef\u00bf\u00bdn XML.",
                "-jsp.error.multiple.jsp=No puedo tener m\u00ef\u00bf\u00bdltiples especificaciones de",
                "-jsp.error.jspoutput.conflict=&lt;jsp:output&gt;: ilegal tener ocurrencias m\u00ef\u00bf\u00bdltiples de \\\"{0}\\\" con diferentes valores (viejo: {1}, nuevo: {2})",
                "+jsp.error.xml.spaceRequiredBeforeEncodingInXMLDecl=Se necesita espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00c3\u00b3n XML.",
                "+jsp.error.xml.spaceRequiredBeforeEncodingInTextDecl=Se necesita espacio en blanco antes del pseudo-atributo encoding en la declaraci\u00c3\u00b3n text.",
                "+jsp.error.xml.spaceRequiredBeforeVersionInTextDecl=Se necesita espacio en blanco antes del pseudo-atributo version en la declaraci\u00c3\u00b3n text.",
                "+jsp.error.xml.spaceRequiredBeforeVersionInXMLDecl=Se necesita espacio en blanco antes del pseudo-atributo version en la declaraci\u00c3\u00b3n XML.",
                "+jsp.error.xml.eqRequiredInXMLDecl=El car\u00c3\u00a1cter '' = '' debe de serguir a \\\"{0}\\\" en la declaraci\u00c3\u00b3n XML.",
                "+jsp.error.xml.eqRequiredInTextDecl=El car\u00c3\u00a1cter '' = '' debe de serguir a \\\"{0}\\\" en la declaraci\u00c3\u00b3n text.",
                "+jsp.error.xml.quoteRequiredInTextDecl=El valor que sigue a \\\"{0}\\\" en la declaraci\u00c3\u00b3n text debe de ser una cadena entre comillas.",
                "+jsp.error.xml.quoteRequiredInXMLDecl=El valor que sigue a \\\"{0}\\\" en la declaraci\u00c3\u00b3n XML debe de ser un cadena entre comillas.",
                "+jsp.error.xml.invalidCharInTextDecl=Un car\u00c3\u00a1cter XML incorrecto (Unicode: 0x{0}) se hall\u00c3\u00b3 en la declaraci\u00c3\u00b3n text",
                "+jsp.error.xml.invalidCharInXMLDecl=Un car\u00c3\u00a1cter XML incorrecto (Unicode: 0x{0}) se hall\u00c3\u00b3 en la declaraci\u00c3\u00b3n XML",
                "+jsp.error.xml.closeQuoteMissingInTextDecl=Faltan las comillas de cierre en el valor que sigue a \\\"{0}\\\" en la declaraci\u00c3\u00b3n text.",
                "+jsp.error.xml.closeQuoteMissingInXMLDecl=Faltan las comillas de cierre en el valor que sigue a  \\\"{0}\\\" en la declaraci\u00c3\u00b3n XML.",
                "+jsp.error.multiple.jsp=No puedo tener m\u00c3\u00baltiples especificaciones de",
                "+jsp.error.jspoutput.conflict=&lt;jsp:output&gt;: ilegal tener ocurrencias m\u00c3\u00baltiples de \\\"{0}\\\" con diferentes valores (viejo: {1}, nuevo: {2})",
                " jsp.error.jspoutput.doctypenamesystem=&lt;jsp:output&gt;: atributos 'doctype-root-element' y 'doctype-system' deben de aparecer juntos",
                "@@ -400,3 +396,3 @@ jsp.error.jspoutput.doctypepulicsystem=&lt;jsp:output&gt;: atributo 'doctype-sys",
                " jsp.error.jspoutput.nonemptybody=&lt;jsp:output&gt; no debe de tener un cuerpo",
                "-jsp.error.jspoutput.invalidUse=&lt;jsp:output&gt; no se debe de usar en sint\u00ef\u00bf\u00bdxis est\u00ef\u00bf\u00bdndar",
                "+jsp.error.jspoutput.invalidUse=&lt;jsp:output&gt; no se debe de usar en sint\u00c3\u00a1xis est\u00c3\u00a1ndar",
                " jsp.error.attributes.not.allowed = {0} no debe de tener atributos",
                "@@ -404,6 +400,6 @@ jsp.error.tagfile.badSuffix=Falta sufijo \\\".tag\\\" en trayectoria de archivo de t",
                " jsp.error.tagfile.illegalPath=Trayectoria de archivo de tag: {0}, debe de comenzar con \\\"/WEB-INF/tags\\\" o \\\"/META-INF/tags\\\"",
                "-jsp.error.plugin.wrongRootElement=El nombre del elemento ra\u00ef\u00bf\u00bdz en {0} difiere de {1}",
                "+jsp.error.plugin.wrongRootElement=El nombre del elemento ra\u00c3\u00adz en {0} difiere de {1}",
                " jsp.error.attribute.invalidPrefix=El prefijo de atributo {0} no se correponde con ninguna biblioteca importada",
                "-jsp.error.nested.jspattribute=Una acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar jsp:attribute no puede estar anidada dentro de otra acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar jsp:attribute",
                "-jsp.error.nested.jspbody=Una acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar jsp:body no puede estar anidada dentro de otra acci\u00ef\u00bf\u00bdn est\u00ef\u00bf\u00bdndar jsp:body o jsp:attribute",
                "+jsp.error.nested.jspattribute=Una acci\u00c3\u00b3n est\u00c3\u00a1ndar jsp:attribute no puede estar anidada dentro de otra acci\u00c3\u00b3n est\u00c3\u00a1ndar jsp:attribute",
                "+jsp.error.nested.jspbody=Una acci\u00c3\u00b3n est\u00c3\u00a1ndar jsp:body no puede estar anidada dentro de otra acci\u00c3\u00b3n est\u00c3\u00a1ndar jsp:body o jsp:attribute",
                " jsp.error.variable.either.name=O el atributo name-given o name-from-attribute deben de ser especificados en una directiva variable",
                "@@ -413,13 +409,13 @@ jsp.error.attribute.null_name=Nombre de atributo nulo",
                " jsp.error.jsptext.badcontent=\\'&lt;\\', cuando aparece en el cuerpo de &lt;jsp:text&gt;, debe de estar encapsulado dentro de un CDATA",
                "-jsp.error.jsproot.version.invalid=N\u00ef\u00bf\u00bdmero incorrecto de versi\u00ef\u00bf\u00bdn: \\\"{0}\\\", debe de ser \\\"1.2\\\" o \\\"2.0\\\"",
                "-jsp.error.noFunctionPrefix=La funci\u00ef\u00bf\u00bdn {0} debe de usarse con un prefijo cuando no se especifica un espacio de nombres por defecto",
                "-jsp.error.noFunction=La funci\u00ef\u00bf\u00bdn {0} no puede ser localizada mediante el prefijo especificado",
                "-jsp.error.noFunctionMethod=El m\u00ef\u00bf\u00bdtodo \\\"{0}\\\" para la funci\u00ef\u00bf\u00bdn \\\"{1}\\\" no se pudo hallar en la clase \\\"{2}\\\"",
                "-jsp.error.function.classnotfound=La clase {0} especificada en el TLD para la funci\u00ef\u00bf\u00bdn {1} no se puede hallar: {2}",
                "-jsp.error.signature.classnotfound=La clase {0} especificada en la firma del m\u00ef\u00bf\u00bdtodo en el TLD para la funci\u00ef\u00bf\u00bdn {1} no se puede hallar. {2}",
                "+jsp.error.jsproot.version.invalid=N\u00c3\u00bamero incorrecto de versi\u00c3\u00b3n: \\\"{0}\\\", debe de ser \\\"1.2\\\" o \\\"2.0\\\"",
                "+jsp.error.noFunctionPrefix=La funci\u00c3\u00b3n {0} debe de usarse con un prefijo cuando no se especifica un espacio de nombres por defecto",
                "+jsp.error.noFunction=La funci\u00c3\u00b3n {0} no puede ser localizada mediante el prefijo especificado",
                "+jsp.error.noFunctionMethod=El m\u00c3\u00a9todo \\\"{0}\\\" para la funci\u00c3\u00b3n \\\"{1}\\\" no se pudo hallar en la clase \\\"{2}\\\"",
                "+jsp.error.function.classnotfound=La clase {0} especificada en el TLD para la funci\u00c3\u00b3n {1} no se puede hallar: {2}",
                "+jsp.error.signature.classnotfound=La clase {0} especificada en la firma del m\u00c3\u00a9todo en el TLD para la funci\u00c3\u00b3n {1} no se puede hallar. {2}",
                " jsp.error.text.has_subelement=&lt;jsp:text&gt; no debe de tener subelementos",
                " jsp.error.data.file.read=Error leyendo archivo \\\"{0}\\\"",
                "-jsp.error.prefix.refined=Intento de redefinir el prefijo {0} por {1}, cuando ya estaba definido como {2} en el \u00ef\u00bf\u00bdmbito en curso.",
                "+jsp.error.prefix.refined=Intento de redefinir el prefijo {0} por {1}, cuando ya estaba definido como {2} en el \u00c3\u00a1mbito en curso.",
                " jsp.error.nested_jsproot=&lt;jsp:root&gt; anidado",
                "-jsp.error.unbalanced.endtag=El tgag final \\\"&lt;/{0}\\\" est\u00ef\u00bf\u00bd desequilibrado",
                "+jsp.error.unbalanced.endtag=El tgag final \\\"&lt;/{0}\\\" est\u00c3\u00a1 desequilibrado",
                " jsp.error.invalid.bean="
            ],
            "changed_files": [
                "plugins/embeddedjsp/src/main/resources/org/apache/struts2/jasper/resources/LocalStrings_es.properties"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "88a29b3faae296f807bec7eeb18a27b3bdadaf4a"
                ],
                [
                    "no-tag",
                    "cd85d7017b10d6b403cb883a07d8ea276eaed2a9"
                ],
                [
                    "no-tag",
                    "1323c225ab159e0d2693c7e4a5f9edd3051e877f"
                ]
            ],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "eaed709f1d314f02b3318667c434e5addc922154",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511592086,
            "hunks": 5,
            "message": "WW-4874 Refactors technology name, servlet3, to asset name, async",
            "diff": [
                "diff --git a/plugins/async/pom.xml b/plugins/async/pom.xml",
                "new file mode 100644",
                "index 000000000..6ed07cff8",
                "--- /dev/null",
                "+++ b/plugins/async/pom.xml",
                "@@ -0,0 +1,46 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                "+<!--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                "+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">",
                "+    <modelVersion>4.0.0</modelVersion>",
                "+    <parent>",
                "+        <groupId>org.apache.struts</groupId>",
                "+        <artifactId>struts2-plugins</artifactId>",
                "+        <version>2.5.14-SNAPSHOT</version>",
                "+    </parent>",
                "+",
                "+    <artifactId>struts2-async-plugin</artifactId>",
                "+    <name>Struts 2 Async Plugin</name>",
                "+    <packaging>jar</packaging>",
                "+",
                "+    <properties>",
                "+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "+    </properties>",
                "+",
                "+    <dependencies>",
                "+        <dependency>",
                "+            <groupId>javax.servlet</groupId>",
                "+            <artifactId>javax.servlet-api</artifactId>",
                "+            <version>3.0.1</version>",
                "+            <scope>provided</scope>",
                "+        </dependency>",
                "+    </dependencies>",
                "+</project>",
                "diff --git a/plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java b/plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java",
                "new file mode 100644",
                "index 000000000..27729d56b",
                "--- /dev/null",
                "+++ b/plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java",
                "@@ -0,0 +1,65 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.async;",
                "+",
                "+import java.util.concurrent.Callable;",
                "+import java.util.concurrent.Executor;",
                "+",
                "+/**",
                "+ * A {@link Callable} with a timeout value and an {@link Executor}.",
                "+ *",
                "+ * @since 2.5.14",
                "+ */",
                "+public class AsyncAction implements Callable {",
                "+    private Callable callable;",
                "+    private Long timeout;",
                "+    private Executor executor;",
                "+",
                "+    public AsyncAction(Callable callable) {",
                "+        this.callable = callable;",
                "+    }",
                "+",
                "+    public AsyncAction(long timeout, Callable callable) {",
                "+        this(callable);",
                "+        this.timeout = timeout;",
                "+    }",
                "+",
                "+    public AsyncAction(Executor executor, Callable callable) {",
                "+        this(callable);",
                "+        this.executor = executor;",
                "+    }",
                "+",
                "+    public AsyncAction(long timeout, Executor executor, Callable callable) {",
                "+        this(timeout, callable);",
                "+        this.executor = executor;",
                "+    }",
                "+",
                "+    public Long getTimeout() {",
                "+        return timeout;",
                "+    }",
                "+",
                "+    public Executor getExecutor() {",
                "+        return executor;",
                "+    }",
                "+",
                "+    @Override",
                "+    public Object call() throws Exception {",
                "+        return callable.call();",
                "+    }",
                "+}",
                "diff --git a/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java b/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "new file mode 100644",
                "index 000000000..4617dca3b",
                "--- /dev/null",
                "+++ b/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "@@ -0,0 +1,149 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.async;",
                "+",
                "+import com.opensymphony.xwork2.AsyncManager;",
                "+import org.apache.logging.log4j.LogManager;",
                "+import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.ServletActionContext;",
                "+",
                "+import javax.servlet.AsyncContext;",
                "+import javax.servlet.AsyncEvent;",
                "+import javax.servlet.AsyncListener;",
                "+import javax.servlet.http.HttpServletRequest;",
                "+import java.io.IOException;",
                "+import java.util.concurrent.Callable;",
                "+import java.util.concurrent.Executor;",
                "+import java.util.concurrent.atomic.AtomicInteger;",
                "+",
                "+/**",
                "+ * Implements {@link AsyncManager} to add support for invoke async actions via Servlet 3's API.",
                "+ *",
                "+ * @since 2.5.14",
                "+ */",
                "+public class DefaultAsyncManager implements AsyncManager, AsyncListener {",
                "+    private static final Logger LOG = LogManager.getLogger(DefaultAsyncManager.class);",
                "+    private static final AtomicInteger threadCount = new AtomicInteger(0);",
                "+",
                "+    private AsyncContext asyncContext;",
                "+    private boolean asyncActionStarted;",
                "+    private Boolean asyncCompleted;",
                "+    private Object asyncActionResult;",
                "+",
                "+    @Override",
                "+    public void invokeAsyncAction(final Callable asyncAction) {",
                "+        if (asyncActionStarted) {",
                "+            return;",
                "+        }",
                "+",
                "+        Long timeout = null;",
                "+        Executor executor = null;",
                "+        if (asyncAction instanceof AsyncAction) {",
                "+            AsyncAction customAsyncAction = (AsyncAction) asyncAction;",
                "+            timeout = customAsyncAction.getTimeout();",
                "+            executor = customAsyncAction.getExecutor();",
                "+        }",
                "+",
                "+        HttpServletRequest req = ServletActionContext.getRequest();",
                "+        asyncActionResult = null;",
                "+        asyncCompleted = false;",
                "+",
                "+        if (asyncContext == null || !req.isAsyncStarted()) {",
                "+            asyncContext = req.startAsync(req, ServletActionContext.getResponse());",
                "+            asyncContext.addListener(this);",
                "+            if (timeout != null) {",
                "+                asyncContext.setTimeout(timeout);",
                "+            }",
                "+        }",
                "+        asyncActionStarted = true;",
                "+        LOG.debug(\"Async processing started for \" + asyncContext);",
                "+",
                "+        final Runnable task = new Runnable() {",
                "+            @Override",
                "+            public void run() {",
                "+                try {",
                "+                    setAsyncActionResultAndDispatch(asyncAction.call());",
                "+                } catch (Throwable e) {",
                "+                    setAsyncActionResultAndDispatch(e);",
                "+                }",
                "+            }",
                "+        };",
                "+        if (executor != null) {",
                "+            executor.execute(task);",
                "+        } else {",
                "+            final Thread thread = new Thread(new Runnable() {",
                "+                @Override",
                "+                public void run() {",
                "+                    try {",
                "+                        task.run();",
                "+                    } finally {",
                "+                        threadCount.decrementAndGet();",
                "+                    }",
                "+                }",
                "+            }, this.getClass().getSimpleName() + \"-\" + threadCount.incrementAndGet());",
                "+            thread.start();",
                "+        }",
                "+    }",
                "+",
                "+    private void setAsyncActionResultAndDispatch(Object asyncActionResult) {",
                "+        this.asyncActionResult = asyncActionResult;",
                "+",
                "+        String log = \"Async result [\" + asyncActionResult + \"] of \" + asyncContext;",
                "+        if (asyncCompleted) {",
                "+            LOG.error(log + \" - could not complete result executing due to timeout or network error\");",
                "+        } else {",
                "+            LOG.debug(log + \" - dispatching request to execute result in container\");",
                "+            asyncContext.dispatch();",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean hasAsyncActionResult() {",
                "+        return asyncActionResult != null;",
                "+    }",
                "+",
                "+    @Override",
                "+    public Object getAsyncActionResult() {",
                "+        return asyncActionResult;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void onComplete(AsyncEvent asyncEvent) throws IOException {",
                "+        asyncContext = null;",
                "+        asyncCompleted = true;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void onTimeout(AsyncEvent asyncEvent) throws IOException {",
                "+        LOG.debug(\"Processing timeout for \" + asyncEvent.getAsyncContext());",
                "+        setAsyncActionResultAndDispatch(\"timeout\");",
                "+    }",
                "+",
                "+    @Override",
                "+    public void onError(AsyncEvent asyncEvent) throws IOException {",
                "+        Throwable e = asyncEvent.getThrowable();",
                "+        LOG.error(\"Processing error for \" + asyncEvent.getAsyncContext(), e);",
                "+        setAsyncActionResultAndDispatch(e);",
                "+    }",
                "+",
                "+    @Override",
                "+    public void onStartAsync(AsyncEvent asyncEvent) throws IOException {",
                "+",
                "+    }",
                "+}",
                "diff --git a/plugins/async/src/main/resources/struts-plugin.xml b/plugins/async/src/main/resources/struts-plugin.xml",
                "new file mode 100644",
                "index 000000000..fb71372d9",
                "--- /dev/null",
                "+++ b/plugins/async/src/main/resources/struts-plugin.xml",
                "@@ -0,0 +1,29 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>",
                "+<!--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                "+<!DOCTYPE struts PUBLIC",
                "+        \"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\"",
                "+        \"http://struts.apache.org/dtds/struts-2.5.dtd\">",
                "+",
                "+<struts>",
                "+    <bean type=\"com.opensymphony.xwork2.AsyncManager\" name=\"default\"",
                "+          class=\"org.apache.struts2.async.DefaultAsyncManager\" scope=\"prototype\" />",
                "+</struts>",
                "diff --git a/plugins/pom.xml b/plugins/pom.xml",
                "index 4a9c7647d..d94046cd7 100644",
                "--- a/plugins/pom.xml",
                "+++ b/plugins/pom.xml",
                "@@ -58,3 +58,3 @@",
                "         <module>tiles</module>",
                "-        <module>servlet3</module>",
                "+        <module>async</module>",
                "     </modules>"
            ],
            "changed_files": [
                "plugins/async/pom.xml",
                "plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java",
                "plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "plugins/async/src/main/resources/struts-plugin.xml",
                "plugins/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4874": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4874",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "38a1434114059c45731730717af4788f83e5348a",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508606685,
            "hunks": 19,
            "message": "Adds missing header with license and fixes tests",
            "diff": [
                "diff --git a/bundles/admin/src/main/resources/osgi/admin/commandResult.ftl b/bundles/admin/src/main/resources/osgi/admin/commandResult.ftl",
                "index 44dd1b58a..9d37f6bfd 100644",
                "--- a/bundles/admin/src/main/resources/osgi/admin/commandResult.ftl",
                "+++ b/bundles/admin/src/main/resources/osgi/admin/commandResult.ftl",
                "@@ -1 +1,21 @@",
                "+<#--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                " ${output!}",
                "diff --git a/bundles/admin/src/main/resources/osgi/admin/shell.ftl b/bundles/admin/src/main/resources/osgi/admin/shell.ftl",
                "index 8c788d6b6..3c92ea5f6 100644",
                "--- a/bundles/admin/src/main/resources/osgi/admin/shell.ftl",
                "+++ b/bundles/admin/src/main/resources/osgi/admin/shell.ftl",
                "@@ -1,5 +1,3 @@",
                "-<!--",
                "+<#--",
                " /*",
                "- * $Id: webconsole.html 590812 2007-10-31 20:32:54Z apetrelli $",
                "- *",
                "  * Licensed to the Apache Software Foundation (ASF) under one",
                "diff --git a/bundles/admin/src/main/resources/osgi/admin/viewBundle.ftl b/bundles/admin/src/main/resources/osgi/admin/viewBundle.ftl",
                "index 13a1ae864..87f59e689 100644",
                "--- a/bundles/admin/src/main/resources/osgi/admin/viewBundle.ftl",
                "+++ b/bundles/admin/src/main/resources/osgi/admin/viewBundle.ftl",
                "@@ -1 +1,21 @@",
                "+<#--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                " <html>",
                "diff --git a/bundles/admin/src/main/resources/osgi/admin/viewBundles.ftl b/bundles/admin/src/main/resources/osgi/admin/viewBundles.ftl",
                "index 96ee51b19..23033829b 100644",
                "--- a/bundles/admin/src/main/resources/osgi/admin/viewBundles.ftl",
                "+++ b/bundles/admin/src/main/resources/osgi/admin/viewBundles.ftl",
                "@@ -1 +1,21 @@",
                "+<#--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                " <html>",
                "diff --git a/bundles/demo/src/main/java/actions/osgi/HelloWorldAction.java b/bundles/demo/src/main/java/actions/osgi/HelloWorldAction.java",
                "index cfaa2797a..b2b8a16e0 100644",
                "--- a/bundles/demo/src/main/java/actions/osgi/HelloWorldAction.java",
                "+++ b/bundles/demo/src/main/java/actions/osgi/HelloWorldAction.java",
                "@@ -1 +1,21 @@",
                "+/*",
                "+ * $Id$",
                "+ *",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                " package actions.osgi;",
                "diff --git a/bundles/demo/src/main/resources/content/osgi/bundles.ftl b/bundles/demo/src/main/resources/content/osgi/bundles.ftl",
                "index e9decadf0..7b2006efb 100644",
                "--- a/bundles/demo/src/main/resources/content/osgi/bundles.ftl",
                "+++ b/bundles/demo/src/main/resources/content/osgi/bundles.ftl",
                "@@ -1 +1,21 @@",
                "+<#--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                " <html>",
                "diff --git a/bundles/demo/src/main/resources/content/osgi/hello-convention.ftl b/bundles/demo/src/main/resources/content/osgi/hello-convention.ftl",
                "index e47d160ce..7dde413ce 100644",
                "--- a/bundles/demo/src/main/resources/content/osgi/hello-convention.ftl",
                "+++ b/bundles/demo/src/main/resources/content/osgi/hello-convention.ftl",
                "@@ -1 +1,21 @@",
                "+<#--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                " <html>",
                "diff --git a/bundles/demo/src/main/resources/content/osgi/hello.ftl b/bundles/demo/src/main/resources/content/osgi/hello.ftl",
                "index fec234335..343319b8c 100644",
                "--- a/bundles/demo/src/main/resources/content/osgi/hello.ftl",
                "+++ b/bundles/demo/src/main/resources/content/osgi/hello.ftl",
                "@@ -1 +1,21 @@",
                "+<#--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                " <html>",
                "diff --git a/bundles/demo/src/main/resources/content/osgi/hello.vm b/bundles/demo/src/main/resources/content/osgi/hello.vm",
                "index 40c1ff029..ed95682d1 100644",
                "--- a/bundles/demo/src/main/resources/content/osgi/hello.vm",
                "+++ b/bundles/demo/src/main/resources/content/osgi/hello.vm",
                "@@ -1 +1,19 @@",
                "+#*",
                "+* Licensed to the Apache Software Foundation (ASF) under one",
                "+* or more contributor license agreements.  See the NOTICE file",
                "+* distributed with this work for additional information",
                "+* regarding copyright ownership.  The ASF licenses this file",
                "+* to you under the Apache License, Version 2.0 (the",
                "+* \"License\"); you may not use this file except in compliance",
                "+* with the License.  You may obtain a copy of the License at",
                "+*",
                "+*  http://www.apache.org/licenses/LICENSE-2.0",
                "+*",
                "+* Unless required by applicable law or agreed to in writing,",
                "+* software distributed under the License is distributed on an",
                "+* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+* KIND, either express or implied.  See the License for the",
                "+* specific language governing permissions and limitations",
                "+* under the License.",
                "+*# ",
                " <html>",
                "diff --git a/bundles/demo/src/main/resources/content/osgi/home.ftl b/bundles/demo/src/main/resources/content/osgi/home.ftl",
                "index 089c89e85..b6645fd52 100644",
                "--- a/bundles/demo/src/main/resources/content/osgi/home.ftl",
                "+++ b/bundles/demo/src/main/resources/content/osgi/home.ftl",
                "@@ -1 +1,21 @@",
                "+<#--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                " <html>",
                "diff --git a/plugins/embeddedjsp/pom.xml b/plugins/embeddedjsp/pom.xml",
                "index 599e0686c..efa531311 100644",
                "--- a/plugins/embeddedjsp/pom.xml",
                "+++ b/plugins/embeddedjsp/pom.xml",
                "@@ -1,2 +1,2 @@",
                "-<?xml version=\"1.0\"?>",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                " <!--",
                "@@ -21,3 +21,4 @@",
                " -->",
                "-<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">",
                "+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
                "+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">",
                "     <modelVersion>4.0.0</modelVersion>",
                "@@ -103,3 +104,2 @@",
                "                     </additionalClasspathElements>",
                "-                    <forkMode>never</forkMode>",
                "                 </configuration>",
                "@@ -109,3 +109,3 @@",
                "     <properties>",
                "-    \t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "     </properties>",
                "diff --git a/pom.xml b/pom.xml",
                "index f1c4801b7..96f722b00 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -237,6 +237,4 @@",
                "                         <excludes>",
                "-                            <exclude>src/test/resources/org/apache/struts2/views/jsp/ui/*</exclude>",
                "                             <exclude>src/main/resources/org/apache/struts2/static/domTT.js</exclude>",
                "-                            <exclude>src/test/resources/org/apache/struts2/interceptor/validation/*</exclude>",
                "-                            <exclude>src/site/resources/tags/**</exclude>",
                "+                            <exclude>src/site/resources/tags/**/*.html</exclude>",
                "                             <exclude>src/main/resources/*LICENSE.txt</exclude>",
                "@@ -248,2 +246,6 @@",
                "                             <exclude>src/main/webapp/**/*.txt</exclude>",
                "+                            <exclude>src/main/resources/**/sitegraph-usage.txt</exclude>",
                "+                            <exclude>src/main/resources/static/css/**/*.css</exclude>",
                "+                            <exclude>src/main/resources/static/js/**/*.js</exclude>",
                "+                            <exclude>src/main/resources/docs.cfg</exclude>",
                "                         </excludes>",
                "@@ -355,2 +357,3 @@",
                "                 <artifactId>apache-rat-plugin</artifactId>",
                "+                <version>0.12</version>",
                "             </plugin>"
            ],
            "changed_files": [
                "bundles/admin/src/main/resources/osgi/admin/commandResult.ftl",
                "bundles/admin/src/main/resources/osgi/admin/shell.ftl",
                "bundles/admin/src/main/resources/osgi/admin/viewBundle.ftl",
                "bundles/admin/src/main/resources/osgi/admin/viewBundles.ftl",
                "bundles/demo/src/main/java/actions/osgi/HelloWorldAction.java",
                "bundles/demo/src/main/resources/content/osgi/bundles.ftl",
                "bundles/demo/src/main/resources/content/osgi/hello-convention.ftl",
                "bundles/demo/src/main/resources/content/osgi/hello.ftl",
                "bundles/demo/src/main/resources/content/osgi/hello.vm",
                "bundles/demo/src/main/resources/content/osgi/home.ftl",
                "plugins/embeddedjsp/pom.xml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "885ad89d4945e0201400327523098e4624ff8619"
                ]
            ],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0a86e4fe1621bc0fdd01346aed94eab1f0ab920d",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508873271,
            "hunks": 7,
            "message": "WW-4875 Add ability to use Java based configuration",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/config/StrutsJavaConfiguration.java b/core/src/main/java/org/apache/struts2/config/StrutsJavaConfiguration.java",
                "new file mode 100644",
                "index 000000000..da84d5e46",
                "--- /dev/null",
                "+++ b/core/src/main/java/org/apache/struts2/config/StrutsJavaConfiguration.java",
                "@@ -0,0 +1,32 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.config;",
                "+",
                "+import java.util.List;",
                "+",
                "+import org.apache.struts2.config.entities.BeanConfig;",
                "+import org.apache.struts2.config.entities.ConstantConfig;",
                "+",
                "+public interface StrutsJavaConfiguration {",
                "+    List<BeanConfig> beans();",
                "+",
                "+    List<ConstantConfig> constants();",
                "+",
                "+    List<String> unknownHandlerStack();",
                "+}",
                "diff --git a/core/src/main/java/org/apache/struts2/config/StrutsJavaConfigurationProvider.java b/core/src/main/java/org/apache/struts2/config/StrutsJavaConfigurationProvider.java",
                "new file mode 100644",
                "index 000000000..8ab6dafa4",
                "--- /dev/null",
                "+++ b/core/src/main/java/org/apache/struts2/config/StrutsJavaConfigurationProvider.java",
                "@@ -0,0 +1,174 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.config;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.HashMap;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+import java.util.Map.Entry;",
                "+",
                "+import org.apache.logging.log4j.LogManager;",
                "+import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts2.config.entities.BeanConfig;",
                "+import org.apache.struts2.config.entities.ConstantConfig;",
                "+",
                "+import com.opensymphony.xwork2.config.Configuration;",
                "+import com.opensymphony.xwork2.config.ConfigurationException;",
                "+import com.opensymphony.xwork2.config.ConfigurationProvider;",
                "+import com.opensymphony.xwork2.config.entities.UnknownHandlerConfig;",
                "+import com.opensymphony.xwork2.config.impl.LocatableFactory;",
                "+import com.opensymphony.xwork2.config.providers.ValueSubstitutor;",
                "+import com.opensymphony.xwork2.inject.ContainerBuilder;",
                "+import com.opensymphony.xwork2.inject.Inject;",
                "+import com.opensymphony.xwork2.util.location.LocatableProperties;",
                "+import com.opensymphony.xwork2.util.location.Location;",
                "+import com.opensymphony.xwork2.util.location.LocationUtils;",
                "+",
                "+public class StrutsJavaConfigurationProvider implements ConfigurationProvider {",
                "+    private static final Logger LOG = LogManager.getLogger(StrutsJavaConfigurationProvider.class);",
                "+",
                "+    private final StrutsJavaConfiguration javaConfig;",
                "+    private Configuration configuration;",
                "+    private boolean throwExceptionOnDuplicateBeans = true;",
                "+    private ValueSubstitutor valueSubstitutor;",
                "+",
                "+    public StrutsJavaConfigurationProvider(StrutsJavaConfiguration javaConfig) {",
                "+        this.javaConfig = javaConfig;",
                "+    }",
                "+",
                "+    public void setThrowExceptionOnDuplicateBeans(boolean val) {",
                "+        this.throwExceptionOnDuplicateBeans = val;",
                "+    }",
                "+",
                "+    @Inject(required = false)",
                "+    public void setValueSubstitutor(ValueSubstitutor valueSubstitutor) {",
                "+        this.valueSubstitutor = valueSubstitutor;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void register(ContainerBuilder builder, LocatableProperties props) throws ConfigurationException {",
                "+        Map<String, Object> loadedBeans = new HashMap<>();",
                "+",
                "+        // bean",
                "+        List<BeanConfig> beanConfigs = javaConfig.beans();",
                "+        if (beanConfigs != null) {",
                "+            for (BeanConfig bc : beanConfigs) {",
                "+                if (bc != null) {",
                "+                    registerBean(loadedBeans, builder, bc);",
                "+                }",
                "+            }",
                "+        }",
                "+",
                "+        // constant",
                "+        List<ConstantConfig> constantConfigList = javaConfig.constants();",
                "+        if (constantConfigList != null) {",
                "+            for (ConstantConfig constantConf : constantConfigList) {",
                "+                if (constantConf != null) {",
                "+                    Map<String, String> constantMap = constantConf.getAllAsStringsMap();",
                "+                    for (Entry<String, String> entr : constantMap.entrySet()) {",
                "+                        if (entr.getKey() != null && entr.getValue() != null) {",
                "+                            registerConstant(props, entr.getKey(), entr.getValue());",
                "+                        }",
                "+                    }",
                "+                }",
                "+            }",
                "+        }",
                "+",
                "+        // unknown-handler-stack",
                "+        List<String> unknownHandlers = javaConfig.unknownHandlerStack();",
                "+        if (unknownHandlers != null) {",
                "+            List<UnknownHandlerConfig> unknownHandlerStack = new ArrayList<>();",
                "+            for (String unknownHandler : unknownHandlers) {",
                "+                Location location = LocationUtils.getLocation(unknownHandler);",
                "+                unknownHandlerStack.add(new UnknownHandlerConfig(unknownHandler, location));",
                "+            }",
                "+",
                "+            if (!unknownHandlerStack.isEmpty()) {",
                "+                configuration.setUnknownHandlerStack(unknownHandlerStack);",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    private void registerConstant(LocatableProperties props, String key, String value) {",
                "+        if (valueSubstitutor != null) {",
                "+            LOG.debug(\"Substituting value [{}] using [{}]\", value, valueSubstitutor.getClass().getName());",
                "+            value = valueSubstitutor.substitute(value);",
                "+        }",
                "+",
                "+        props.setProperty(key, value, javaConfig);",
                "+    }",
                "+",
                "+    private void registerBean(Map<String, Object> loadedBeans, ContainerBuilder containerBuilder, BeanConfig beanConf) {",
                "+        try {",
                "+            if (beanConf.isOnlyStatic()) {",
                "+                // Force loading of class to detect no class def found",
                "+                // exceptions",
                "+                beanConf.getClazz().getDeclaredClasses();",
                "+                containerBuilder.injectStatics(beanConf.getClazz());",
                "+            } else {",
                "+                if (containerBuilder.contains(beanConf.getType(), beanConf.getName())) {",
                "+                    Location loc = LocationUtils",
                "+                            .getLocation(loadedBeans.get(beanConf.getType().getName() + beanConf.getName()));",
                "+                    if (throwExceptionOnDuplicateBeans) {",
                "+                        throw new ConfigurationException(\"Bean type \" + beanConf.getType() + \" with the name \"",
                "+                                + beanConf.getName() + \" has already been loaded by \" + loc);",
                "+                    }",
                "+                }",
                "+",
                "+                // Force loading of class to detect no class def found",
                "+                // exceptions",
                "+                beanConf.getClazz().getDeclaredConstructors();",
                "+",
                "+                LOG.debug(\"Loaded type: {} name: {} clazz: {}\", beanConf.getType(), beanConf.getName(),",
                "+                        beanConf.getClazz());",
                "+                containerBuilder.factory(",
                "+                        beanConf.getType(), beanConf.getName(), new LocatableFactory(beanConf.getName(),",
                "+                                beanConf.getType(), beanConf.getClazz(), beanConf.getScope(), javaConfig),",
                "+                        beanConf.getScope());",
                "+            }",
                "+            loadedBeans.put(beanConf.getType().getName() + beanConf.getName(), javaConfig);",
                "+        } catch (Throwable ex) {",
                "+            if (!beanConf.isOptional()) {",
                "+                throw new ConfigurationException(",
                "+                        \"Unable to load bean: type:\" + beanConf.getType() + \" class:\" + beanConf.getClazz(), ex);",
                "+            } else {",
                "+                LOG.debug(\"Unable to load optional class: {}\", beanConf.getClazz());",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public void init(Configuration configuration) throws ConfigurationException {",
                "+        this.configuration = configuration;",
                "+    }",
                "+",
                "+    @Override",
                "+    public boolean needsReload() {",
                "+        return false;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void loadPackages() throws ConfigurationException {",
                "+    }",
                "+",
                "+    @Override",
                "+    public void destroy() {",
                "+    }",
                "+}",
                "diff --git a/core/src/main/java/org/apache/struts2/config/entities/BeanConfig.java b/core/src/main/java/org/apache/struts2/config/entities/BeanConfig.java",
                "new file mode 100644",
                "index 000000000..d01db0f0d",
                "--- /dev/null",
                "+++ b/core/src/main/java/org/apache/struts2/config/entities/BeanConfig.java",
                "@@ -0,0 +1,76 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.config.entities;",
                "+",
                "+import com.opensymphony.xwork2.inject.Container;",
                "+import com.opensymphony.xwork2.inject.Scope;",
                "+",
                "+public class BeanConfig {",
                "+    private final Class<?> clazz;",
                "+    private final String name;",
                "+    private final Class<?> type;",
                "+    private final Scope scope;",
                "+    private final boolean onlyStatic;",
                "+    private final boolean optional;",
                "+",
                "+    public BeanConfig(Class<?> clazz) {",
                "+        this(clazz, Container.DEFAULT_NAME);",
                "+    }",
                "+",
                "+    public BeanConfig(Class<?> clazz, String name) {",
                "+        this(clazz, name, clazz);",
                "+    }",
                "+",
                "+    public BeanConfig(Class<?> clazz, String name, Class<?> type) {",
                "+        this(clazz, name, type, Scope.SINGLETON, false, false);",
                "+    }",
                "+",
                "+    public BeanConfig(Class<?> clazz, String name, Class<?> type, Scope scope, boolean onlyStatic, boolean optional) {",
                "+        this.clazz = clazz;",
                "+        this.name = name;",
                "+        this.type = type;",
                "+        this.scope = scope;",
                "+        this.onlyStatic = onlyStatic;",
                "+        this.optional = optional;",
                "+    }",
                "+",
                "+    public Class<?> getClazz() {",
                "+        return clazz;",
                "+    }",
                "+",
                "+    public String getName() {",
                "+        return name;",
                "+    }",
                "+",
                "+    public Class<?> getType() {",
                "+        return type;",
                "+    }",
                "+",
                "+    public Scope getScope() {",
                "+        return scope;",
                "+    }",
                "+",
                "+    public boolean isOnlyStatic() {",
                "+        return onlyStatic;",
                "+    }",
                "+",
                "+    public boolean isOptional() {",
                "+        return optional;",
                "+    }",
                "+}",
                "diff --git a/core/src/main/java/org/apache/struts2/config/entities/ConstantConfig.java b/core/src/main/java/org/apache/struts2/config/entities/ConstantConfig.java",
                "new file mode 100644",
                "index 000000000..00f3a1338",
                "--- /dev/null",
                "+++ b/core/src/main/java/org/apache/struts2/config/entities/ConstantConfig.java",
                "@@ -0,0 +1,1307 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.config.entities;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.HashMap;",
                "+import java.util.List;",
                "+import java.util.Locale;",
                "+import java.util.Map;",
                "+import java.util.Set;",
                "+import java.util.regex.Pattern;",
                "+",
                "+import org.apache.commons.lang3.StringUtils;",
                "+import org.apache.struts2.StrutsConstants;",
                "+",
                "+public class ConstantConfig {",
                "+    private Boolean devMode;",
                "+    private Boolean i18nReload;",
                "+    private String i18nEncoding;",
                "+    private Boolean configurationXmlReload;",
                "+    private List<String> actionExtension;",
                "+    private List<Pattern> actionExcludePattern;",
                "+    private Boolean tagAltSyntax;",
                "+    private Integer urlHttpPort;",
                "+    private Integer urlHttpsPort;",
                "+    private String urlIncludeParams;",
                "+    private BeanConfig urlRenderer;",
                "+    private BeanConfig objectFactory;",
                "+    private BeanConfig objectFactoryActionFactory;",
                "+    private BeanConfig objectFactoryResultFactory;",
                "+    private BeanConfig objectFactoryConverterFactory;",
                "+    private BeanConfig objectFactoryInterceptorFactory;",
                "+    private BeanConfig objectFactoryValidatorFactory;",
                "+    private BeanConfig objectFactoryUnknownHandlerFactory;",
                "+    private BeanConfig objectTypeDeterminer;",
                "+    private Locale locale;",
                "+    private Boolean dispatcherParametersWorkaround;",
                "+    private BeanConfig freemarkerManagerClassname;",
                "+    private String freemarkerTemplatesCacheUpdateDelay;",
                "+    private Boolean freemarkerBeanwrapperCache;",
                "+    private Integer freemarkerMruMaxStrongSize;",
                "+    private BeanConfig velocityManagerClassname;",
                "+    private String velocityConfigfile;",
                "+    private String velocityToolboxlocation;",
                "+    private List<String> velocityContexts;",
                "+    private String uiTemplateDir;",
                "+    private String uiTheme;",
                "+    private String uiThemeExpansionToken;",
                "+    private Long multipartMaxSize;",
                "+    private String multipartSaveDir;",
                "+    private Integer multipartBufferSize;",
                "+    private BeanConfig multipartParser;",
                "+    private Boolean multipartEnabled;",
                "+    private Pattern multipartValidationRegex;",
                "+    private String objectFactorySpringAutoWire;",
                "+    private Boolean objectFactorySpringAutoWireAlwaysRespect;",
                "+    private Boolean objectFactorySpringUseClassCache;",
                "+    private Boolean objectFactorySpringEnableAopSupport;",
                "+    private Boolean xsltNocache;",
                "+    private List<String> customProperties;",
                "+    private List<String> customI18nResources;",
                "+    private BeanConfig mapperClass;",
                "+    private List<String> mapperPrefixMapping;",
                "+    private Boolean serveStatic;",
                "+    private Boolean serveStaticBrowserCache;",
                "+    private Boolean enableDynamicMethodInvocation;",
                "+    private Boolean enableSlashesInActionNames;",
                "+    private List<String> mapperComposite;",
                "+    private BeanConfig actionProxyFactory;",
                "+    private Boolean freemarkerWrapperAltMap;",
                "+    private BeanConfig xworkConverter;",
                "+    private Boolean mapperAlwaysSelectFullNamespace;",
                "+    private BeanConfig xworkTextProvider;",
                "+    private BeanConfig localeProvider;",
                "+    private BeanConfig localeProviderFactory;",
                "+    private String mapperIdParameterName;",
                "+    private Boolean ognlAllowStaticMethodAccess;",
                "+    private BeanConfig actionValidatorManager;",
                "+    private BeanConfig valueStackFactory;",
                "+    private BeanConfig reflectionProvider;",
                "+    private BeanConfig reflectionContextFactory;",
                "+    private BeanConfig patternMatcher;",
                "+    private BeanConfig staticContentLoader;",
                "+    private BeanConfig unknownHandlerManager;",
                "+    private Boolean elThrowExceptionOnFailure;",
                "+    private Boolean ognlLogMissingProperties;",
                "+    private Boolean ognlEnableExpressionCache;",
                "+    private Boolean ognlEnableOGNLEvalExpression;",
                "+    private Boolean disableRequestAttributeValueStackLookup;",
                "+    private BeanConfig viewUrlHelper;",
                "+    private BeanConfig converterCollection;",
                "+    private BeanConfig converterArray;",
                "+    private BeanConfig converterDate;",
                "+    private BeanConfig converterNumber;",
                "+    private BeanConfig converterString;",
                "+    private Boolean handleException;",
                "+    private BeanConfig converterPropertiesProcessor;",
                "+    private BeanConfig converterFileProcessor;",
                "+    private BeanConfig converterAnnotationProcessor;",
                "+    private BeanConfig converterCreator;",
                "+    private BeanConfig ConverterHolder;",
                "+    private BeanConfig expressionParser;",
                "+    private Pattern allowedActionNames;",
                "+    private String defaultActionName;",
                "+    private Pattern allowedMethodNames;",
                "+    private String defaultMethodName;",
                "+    private Boolean mapperActionPrefixEnabled;",
                "+    private Boolean mapperActionPrefixCrossNamespaces;",
                "+    private String uiTemplateSuffix;",
                "+    private BeanConfig dispatcherErrorHandler;",
                "+    private Set<Class<?>> excludedClasses;",
                "+    private List<Pattern> excludedPackageNamePatterns;",
                "+    private Set<String> excludedPackageNames;",
                "+    private BeanConfig excludedPatternsChecker;",
                "+    private BeanConfig acceptedPatternsChecker;",
                "+    private Set<Pattern> overrideExcludedPatterns;",
                "+    private Set<Pattern> overrideAcceptedPatterns;",
                "+    private Set<Pattern> additionalExcludedPatterns;",
                "+    private Set<Pattern> additionalAcceptedPatterns;",
                "+    private BeanConfig contentTypeMatcher;",
                "+    private String strictMethodInvocationMethodRegex;",
                "+    private BeanConfig textProviderFactory;",
                "+    private BeanConfig localizedTextProvider;",
                "+    private Boolean disallowProxyMemberAccess;",
                "+",
                "+    protected String beanConfToString(BeanConfig beanConf) {",
                "+        return beanConf == null ? null : beanConf.getName();",
                "+    }",
                "+",
                "+    private String classesToString(Set<Class<?>> classes) {",
                "+        List<String> list = null;",
                "+        if (classes != null && !classes.isEmpty()) {",
                "+            list = new ArrayList<String>();",
                "+            for (Class<?> c : classes) {",
                "+                list.add(c.getName());",
                "+            }",
                "+        }",
                "+        return StringUtils.join(list, ',');",
                "+    }",
                "+",
                "+    public Map<String, String> getAllAsStringsMap() {",
                "+        Map<String, String> map = new HashMap<>();",
                "+",
                "+        map.put(StrutsConstants.STRUTS_DEVMODE, String.valueOf(devMode));",
                "+        map.put(StrutsConstants.STRUTS_I18N_RELOAD, String.valueOf(i18nReload));",
                "+        map.put(StrutsConstants.STRUTS_I18N_ENCODING, i18nEncoding);",
                "+        map.put(StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, String.valueOf(configurationXmlReload));",
                "+        map.put(StrutsConstants.STRUTS_ACTION_EXTENSION, StringUtils.join(actionExtension, ','));",
                "+        map.put(StrutsConstants.STRUTS_ACTION_EXCLUDE_PATTERN, StringUtils.join(actionExcludePattern, ','));",
                "+        map.put(StrutsConstants.STRUTS_TAG_ALTSYNTAX, String.valueOf(tagAltSyntax));",
                "+        map.put(StrutsConstants.STRUTS_URL_HTTP_PORT, String.valueOf(urlHttpPort));",
                "+        map.put(StrutsConstants.STRUTS_URL_HTTPS_PORT, String.valueOf(urlHttpsPort));",
                "+        map.put(StrutsConstants.STRUTS_URL_INCLUDEPARAMS, urlIncludeParams);",
                "+        map.put(StrutsConstants.STRUTS_URL_RENDERER, beanConfToString(urlRenderer));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY, beanConfToString(objectFactory));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_ACTIONFACTORY, beanConfToString(objectFactoryActionFactory));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_RESULTFACTORY, beanConfToString(objectFactoryResultFactory));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_CONVERTERFACTORY, beanConfToString(objectFactoryConverterFactory));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_INTERCEPTORFACTORY, beanConfToString(objectFactoryInterceptorFactory));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_VALIDATORFACTORY, beanConfToString(objectFactoryValidatorFactory));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_UNKNOWNHANDLERFACTORY, beanConfToString(objectFactoryUnknownHandlerFactory));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTTYPEDETERMINER, beanConfToString(objectTypeDeterminer));",
                "+        map.put(StrutsConstants.STRUTS_LOCALE, locale == null ? null : locale.getLanguage());",
                "+        map.put(StrutsConstants.STRUTS_DISPATCHER_PARAMETERSWORKAROUND, String.valueOf(dispatcherParametersWorkaround));",
                "+        map.put(StrutsConstants.STRUTS_FREEMARKER_MANAGER_CLASSNAME, beanConfToString(freemarkerManagerClassname));",
                "+        map.put(StrutsConstants.STRUTS_FREEMARKER_TEMPLATES_CACHE_UPDATE_DELAY, freemarkerTemplatesCacheUpdateDelay);",
                "+        map.put(StrutsConstants.STRUTS_FREEMARKER_BEANWRAPPER_CACHE, String.valueOf(freemarkerBeanwrapperCache));",
                "+        map.put(StrutsConstants.STRUTS_FREEMARKER_MRU_MAX_STRONG_SIZE, String.valueOf(freemarkerMruMaxStrongSize));",
                "+        map.put(StrutsConstants.STRUTS_VELOCITY_MANAGER_CLASSNAME, beanConfToString(velocityManagerClassname));",
                "+        map.put(StrutsConstants.STRUTS_VELOCITY_CONFIGFILE, velocityConfigfile);",
                "+        map.put(StrutsConstants.STRUTS_VELOCITY_TOOLBOXLOCATION, velocityToolboxlocation);",
                "+        map.put(StrutsConstants.STRUTS_VELOCITY_CONTEXTS, StringUtils.join(velocityContexts, ','));",
                "+        map.put(StrutsConstants.STRUTS_UI_TEMPLATEDIR, uiTemplateDir);",
                "+        map.put(StrutsConstants.STRUTS_UI_THEME, uiTheme);",
                "+        map.put(StrutsConstants.STRUTS_UI_THEME_EXPANSION_TOKEN, uiThemeExpansionToken);",
                "+        map.put(StrutsConstants.STRUTS_MULTIPART_MAXSIZE, String.valueOf(multipartMaxSize));",
                "+        map.put(StrutsConstants.STRUTS_MULTIPART_SAVEDIR, multipartSaveDir);",
                "+        map.put(StrutsConstants.STRUTS_MULTIPART_BUFFERSIZE, String.valueOf(multipartBufferSize));",
                "+        map.put(StrutsConstants.STRUTS_MULTIPART_PARSER, beanConfToString(multipartParser));",
                "+        map.put(StrutsConstants.STRUTS_MULTIPART_ENABLED, String.valueOf(multipartEnabled));",
                "+        map.put(StrutsConstants.STRUTS_MULTIPART_VALIDATION_REGEX, String.valueOf(multipartValidationRegex));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_SPRING_AUTOWIRE, objectFactorySpringAutoWire);",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_SPRING_AUTOWIRE_ALWAYS_RESPECT, String.valueOf(objectFactorySpringAutoWireAlwaysRespect));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_SPRING_USE_CLASS_CACHE, String.valueOf(objectFactorySpringUseClassCache));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_SPRING_ENABLE_AOP_SUPPORT, String.valueOf(objectFactorySpringEnableAopSupport));",
                "+        map.put(StrutsConstants.STRUTS_XSLT_NOCACHE, String.valueOf(xsltNocache));",
                "+        map.put(StrutsConstants.STRUTS_CUSTOM_PROPERTIES, StringUtils.join(customProperties, ','));",
                "+        map.put(StrutsConstants.STRUTS_CUSTOM_I18N_RESOURCES, StringUtils.join(customI18nResources, ','));",
                "+        map.put(StrutsConstants.STRUTS_MAPPER_CLASS, beanConfToString(mapperClass));",
                "+        map.put(StrutsConstants.PREFIX_BASED_MAPPER_CONFIGURATION, StringUtils.join(mapperPrefixMapping, ','));",
                "+        map.put(StrutsConstants.STRUTS_SERVE_STATIC_CONTENT, String.valueOf(serveStatic));",
                "+        map.put(StrutsConstants.STRUTS_SERVE_STATIC_BROWSER_CACHE, String.valueOf(serveStaticBrowserCache));",
                "+        map.put(StrutsConstants.STRUTS_ENABLE_DYNAMIC_METHOD_INVOCATION, String.valueOf(enableDynamicMethodInvocation));",
                "+        map.put(StrutsConstants.STRUTS_ENABLE_SLASHES_IN_ACTION_NAMES, String.valueOf(enableSlashesInActionNames));",
                "+        map.put(StrutsConstants.STRUTS_MAPPER_COMPOSITE, StringUtils.join(mapperComposite, ','));",
                "+        map.put(StrutsConstants.STRUTS_ACTIONPROXYFACTORY, beanConfToString(actionProxyFactory));",
                "+        map.put(StrutsConstants.STRUTS_FREEMARKER_WRAPPER_ALT_MAP, String.valueOf(freemarkerWrapperAltMap));",
                "+        map.put(StrutsConstants.STRUTS_XWORKCONVERTER, beanConfToString(xworkConverter));",
                "+        map.put(StrutsConstants.STRUTS_ALWAYS_SELECT_FULL_NAMESPACE, String.valueOf(mapperAlwaysSelectFullNamespace));",
                "+        map.put(StrutsConstants.STRUTS_XWORKTEXTPROVIDER, beanConfToString(xworkTextProvider));",
                "+        map.put(StrutsConstants.STRUTS_LOCALE_PROVIDER, beanConfToString(localeProvider));",
                "+        map.put(StrutsConstants.STRUTS_LOCALE_PROVIDER_FACTORY, beanConfToString(localeProviderFactory));",
                "+        map.put(StrutsConstants.STRUTS_ID_PARAMETER_NAME, mapperIdParameterName);",
                "+        map.put(StrutsConstants.STRUTS_ALLOW_STATIC_METHOD_ACCESS, String.valueOf(ognlAllowStaticMethodAccess));",
                "+        map.put(StrutsConstants.STRUTS_ACTIONVALIDATORMANAGER, beanConfToString(actionValidatorManager));",
                "+        map.put(StrutsConstants.STRUTS_VALUESTACKFACTORY, beanConfToString(valueStackFactory));",
                "+        map.put(StrutsConstants.STRUTS_REFLECTIONPROVIDER, beanConfToString(reflectionProvider));",
                "+        map.put(StrutsConstants.STRUTS_REFLECTIONCONTEXTFACTORY, beanConfToString(reflectionContextFactory));",
                "+        map.put(StrutsConstants.STRUTS_PATTERNMATCHER, beanConfToString(patternMatcher));",
                "+        map.put(StrutsConstants.STRUTS_STATIC_CONTENT_LOADER, beanConfToString(staticContentLoader));",
                "+        map.put(StrutsConstants.STRUTS_UNKNOWN_HANDLER_MANAGER, beanConfToString(unknownHandlerManager));",
                "+        map.put(StrutsConstants.STRUTS_EL_THROW_EXCEPTION, String.valueOf(elThrowExceptionOnFailure));",
                "+        map.put(StrutsConstants.STRUTS_LOG_MISSING_PROPERTIES, String.valueOf(ognlLogMissingProperties));",
                "+        map.put(StrutsConstants.STRUTS_ENABLE_OGNL_EXPRESSION_CACHE, String.valueOf(ognlEnableExpressionCache));",
                "+        map.put(StrutsConstants.STRUTS_ENABLE_OGNL_EVAL_EXPRESSION, String.valueOf(ognlEnableOGNLEvalExpression));",
                "+        map.put(StrutsConstants.STRUTS_DISABLE_REQUEST_ATTRIBUTE_VALUE_STACK_LOOKUP, String.valueOf(disableRequestAttributeValueStackLookup));",
                "+        map.put(StrutsConstants.STRUTS_URL_HELPER, beanConfToString(viewUrlHelper));",
                "+        map.put(StrutsConstants.STRUTS_CONVERTER_COLLECTION, beanConfToString(converterCollection));",
                "+        map.put(StrutsConstants.STRUTS_CONVERTER_ARRAY, beanConfToString(converterArray));",
                "+        map.put(StrutsConstants.STRUTS_CONVERTER_DATE, beanConfToString(converterDate));",
                "+        map.put(StrutsConstants.STRUTS_CONVERTER_NUMBER, beanConfToString(converterNumber));",
                "+        map.put(StrutsConstants.STRUTS_CONVERTER_STRING, beanConfToString(converterString));",
                "+        map.put(StrutsConstants.STRUTS_HANDLE_EXCEPTION, String.valueOf(handleException));",
                "+        map.put(StrutsConstants.STRUTS_CONVERTER_PROPERTIES_PROCESSOR, beanConfToString(converterPropertiesProcessor));",
                "+        map.put(StrutsConstants.STRUTS_CONVERTER_FILE_PROCESSOR, beanConfToString(converterFileProcessor));",
                "+        map.put(StrutsConstants.STRUTS_CONVERTER_ANNOTATION_PROCESSOR, beanConfToString(converterAnnotationProcessor));",
                "+        map.put(StrutsConstants.STRUTS_CONVERTER_CREATOR, beanConfToString(converterCreator));",
                "+        map.put(StrutsConstants.STRUTS_CONVERTER_HOLDER, beanConfToString(ConverterHolder));",
                "+        map.put(StrutsConstants.STRUTS_EXPRESSION_PARSER, beanConfToString(expressionParser));",
                "+        map.put(StrutsConstants.STRUTS_ALLOWED_ACTION_NAMES, String.valueOf(allowedActionNames));",
                "+        map.put(StrutsConstants.STRUTS_DEFAULT_ACTION_NAME, defaultActionName);",
                "+        map.put(StrutsConstants.STRUTS_ALLOWED_METHOD_NAMES, String.valueOf(allowedMethodNames));",
                "+        map.put(StrutsConstants.STRUTS_DEFAULT_METHOD_NAME, defaultMethodName);",
                "+        map.put(StrutsConstants.STRUTS_MAPPER_ACTION_PREFIX_ENABLED, String.valueOf(mapperActionPrefixEnabled));",
                "+        map.put(StrutsConstants.STRUTS_MAPPER_ACTION_PREFIX_CROSSNAMESPACES, String.valueOf(mapperActionPrefixCrossNamespaces));",
                "+        map.put(StrutsConstants.DEFAULT_TEMPLATE_TYPE_CONFIG_KEY, uiTemplateSuffix);",
                "+        map.put(StrutsConstants.STRUTS_DISPATCHER_ERROR_HANDLER, beanConfToString(dispatcherErrorHandler));",
                "+        map.put(StrutsConstants.STRUTS_EXCLUDED_CLASSES, classesToString(excludedClasses));",
                "+        map.put(StrutsConstants.STRUTS_EXCLUDED_PACKAGE_NAME_PATTERNS, StringUtils.join(excludedPackageNamePatterns, ','));",
                "+        map.put(StrutsConstants.STRUTS_EXCLUDED_PACKAGE_NAMES, StringUtils.join(excludedPackageNames, ','));",
                "+        map.put(StrutsConstants.STRUTS_EXCLUDED_PATTERNS_CHECKER, beanConfToString(excludedPatternsChecker));",
                "+        map.put(StrutsConstants.STRUTS_ACCEPTED_PATTERNS_CHECKER, beanConfToString(acceptedPatternsChecker));",
                "+        map.put(StrutsConstants.STRUTS_OVERRIDE_EXCLUDED_PATTERNS, StringUtils.join(overrideExcludedPatterns, ','));",
                "+        map.put(StrutsConstants.STRUTS_OVERRIDE_ACCEPTED_PATTERNS, StringUtils.join(overrideAcceptedPatterns, ','));",
                "+        map.put(StrutsConstants.STRUTS_ADDITIONAL_EXCLUDED_PATTERNS, StringUtils.join(additionalExcludedPatterns, ','));",
                "+        map.put(StrutsConstants.STRUTS_ADDITIONAL_ACCEPTED_PATTERNS, StringUtils.join(additionalAcceptedPatterns, ','));",
                "+        map.put(StrutsConstants.STRUTS_CONTENT_TYPE_MATCHER, beanConfToString(contentTypeMatcher));",
                "+        map.put(StrutsConstants.STRUTS_SMI_METHOD_REGEX, strictMethodInvocationMethodRegex);",
                "+        map.put(StrutsConstants.STRUTS_TEXT_PROVIDER_FACTORY, beanConfToString(textProviderFactory));",
                "+        map.put(StrutsConstants.STRUTS_LOCALIZED_TEXT_PROVIDER, beanConfToString(localizedTextProvider));",
                "+        map.put(StrutsConstants.STRUTS_DISALLOW_PROXY_MEMBER_ACCESS, String.valueOf(disallowProxyMemberAccess));",
                "+",
                "+        return map;",
                "+    }",
                "+",
                "+    public Boolean getDevMode() {",
                "+        return devMode;",
                "+    }",
                "+",
                "+    public void setDevMode(Boolean devMode) {",
                "+        this.devMode = devMode;",
                "+    }",
                "+",
                "+    public Boolean getI18nReload() {",
                "+        return i18nReload;",
                "+    }",
                "+",
                "+    public void setI18nReload(Boolean i18nReload) {",
                "+        this.i18nReload = i18nReload;",
                "+    }",
                "+",
                "+    public String getI18nEncoding() {",
                "+        return i18nEncoding;",
                "+    }",
                "+",
                "+    public void setI18nEncoding(String i18nEncoding) {",
                "+        this.i18nEncoding = i18nEncoding;",
                "+    }",
                "+",
                "+    public Boolean getConfigurationXmlReload() {",
                "+        return configurationXmlReload;",
                "+    }",
                "+",
                "+    public void setConfigurationXmlReload(Boolean configurationXmlReload) {",
                "+        this.configurationXmlReload = configurationXmlReload;",
                "+    }",
                "+",
                "+    public List<String> getActionExtension() {",
                "+        return actionExtension;",
                "+    }",
                "+",
                "+    public void setActionExtension(List<String> actionExtension) {",
                "+        this.actionExtension = actionExtension;",
                "+    }",
                "+",
                "+    public List<Pattern> getActionExcludePattern() {",
                "+        return actionExcludePattern;",
                "+    }",
                "+",
                "+    public void setActionExcludePattern(List<Pattern> actionExcludePattern) {",
                "+        this.actionExcludePattern = actionExcludePattern;",
                "+    }",
                "+",
                "+    public Boolean getTagAltSyntax() {",
                "+        return tagAltSyntax;",
                "+    }",
                "+",
                "+    public void setTagAltSyntax(Boolean tagAltSyntax) {",
                "+        this.tagAltSyntax = tagAltSyntax;",
                "+    }",
                "+",
                "+    public Integer getUrlHttpPort() {",
                "+        return urlHttpPort;",
                "+    }",
                "+",
                "+    public void setUrlHttpPort(Integer urlHttpPort) {",
                "+        this.urlHttpPort = urlHttpPort;",
                "+    }",
                "+",
                "+    public Integer getUrlHttpsPort() {",
                "+        return urlHttpsPort;",
                "+    }",
                "+",
                "+    public void setUrlHttpsPort(Integer urlHttpsPort) {",
                "+        this.urlHttpsPort = urlHttpsPort;",
                "+    }",
                "+",
                "+    public String getUrlIncludeParams() {",
                "+        return urlIncludeParams;",
                "+    }",
                "+",
                "+    public void setUrlIncludeParams(String urlIncludeParams) {",
                "+        this.urlIncludeParams = urlIncludeParams;",
                "+    }",
                "+",
                "+    public BeanConfig getUrlRenderer() {",
                "+        return urlRenderer;",
                "+    }",
                "+",
                "+    public void setUrlRenderer(BeanConfig urlRenderer) {",
                "+        this.urlRenderer = urlRenderer;",
                "+    }",
                "+",
                "+    public void setUrlRenderer(Class<?> clazz) {",
                "+        this.urlRenderer = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getObjectFactory() {",
                "+        return objectFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactory(BeanConfig objectFactory) {",
                "+        this.objectFactory = objectFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactory(Class<?> clazz) {",
                "+        this.objectFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getObjectFactoryActionFactory() {",
                "+        return objectFactoryActionFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryActionFactory(BeanConfig objectFactoryActionFactory) {",
                "+        this.objectFactoryActionFactory = objectFactoryActionFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryActionFactory(Class<?> clazz) {",
                "+        this.objectFactoryActionFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getObjectFactoryResultFactory() {",
                "+        return objectFactoryResultFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryResultFactory(BeanConfig objectFactoryResultFactory) {",
                "+        this.objectFactoryResultFactory = objectFactoryResultFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryResultFactory(Class<?> clazz) {",
                "+        this.objectFactoryResultFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getObjectFactoryConverterFactory() {",
                "+        return objectFactoryConverterFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryConverterFactory(BeanConfig objectFactoryConverterFactory) {",
                "+        this.objectFactoryConverterFactory = objectFactoryConverterFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryConverterFactory(Class<?> clazz) {",
                "+        this.objectFactoryConverterFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getObjectFactoryInterceptorFactory() {",
                "+        return objectFactoryInterceptorFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryInterceptorFactory(BeanConfig objectFactoryInterceptorFactory) {",
                "+        this.objectFactoryInterceptorFactory = objectFactoryInterceptorFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryInterceptorFactory(Class<?> clazz) {",
                "+        this.objectFactoryInterceptorFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getObjectFactoryValidatorFactory() {",
                "+        return objectFactoryValidatorFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryValidatorFactory(BeanConfig objectFactoryValidatorFactory) {",
                "+        this.objectFactoryValidatorFactory = objectFactoryValidatorFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryValidatorFactory(Class<?> clazz) {",
                "+        this.objectFactoryValidatorFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getObjectFactoryUnknownHandlerFactory() {",
                "+        return objectFactoryUnknownHandlerFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryUnknownHandlerFactory(BeanConfig objectFactoryUnknownHandlerFactory) {",
                "+        this.objectFactoryUnknownHandlerFactory = objectFactoryUnknownHandlerFactory;",
                "+    }",
                "+",
                "+    public void setObjectFactoryUnknownHandlerFactory(Class<?> clazz) {",
                "+        this.objectFactoryUnknownHandlerFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getObjectTypeDeterminer() {",
                "+        return objectTypeDeterminer;",
                "+    }",
                "+",
                "+    public void setObjectTypeDeterminer(BeanConfig objectTypeDeterminer) {",
                "+        this.objectTypeDeterminer = objectTypeDeterminer;",
                "+    }",
                "+",
                "+    public void setObjectTypeDeterminer(Class<?> clazz) {",
                "+        this.objectTypeDeterminer = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Locale getLocale() {",
                "+        return locale;",
                "+    }",
                "+",
                "+    public void setLocale(Locale locale) {",
                "+        this.locale = locale;",
                "+    }",
                "+",
                "+    public Boolean getDispatcherParametersWorkaround() {",
                "+        return dispatcherParametersWorkaround;",
                "+    }",
                "+",
                "+    public void setDispatcherParametersWorkaround(Boolean dispatcherParametersWorkaround) {",
                "+        this.dispatcherParametersWorkaround = dispatcherParametersWorkaround;",
                "+    }",
                "+",
                "+    public BeanConfig getFreemarkerManagerClassname() {",
                "+        return freemarkerManagerClassname;",
                "+    }",
                "+",
                "+    public void setFreemarkerManagerClassname(BeanConfig freemarkerManagerClassname) {",
                "+        this.freemarkerManagerClassname = freemarkerManagerClassname;",
                "+    }",
                "+",
                "+    public void setFreemarkerManagerClassname(Class<?> clazz) {",
                "+        this.freemarkerManagerClassname = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public String getFreemarkerTemplatesCacheUpdateDelay() {",
                "+        return freemarkerTemplatesCacheUpdateDelay;",
                "+    }",
                "+",
                "+    public void setFreemarkerTemplatesCacheUpdateDelay(String freemarkerTemplatesCacheUpdateDelay) {",
                "+        this.freemarkerTemplatesCacheUpdateDelay = freemarkerTemplatesCacheUpdateDelay;",
                "+    }",
                "+",
                "+    public Boolean getFreemarkerBeanwrapperCache() {",
                "+        return freemarkerBeanwrapperCache;",
                "+    }",
                "+",
                "+    public void setFreemarkerBeanwrapperCache(Boolean freemarkerBeanwrapperCache) {",
                "+        this.freemarkerBeanwrapperCache = freemarkerBeanwrapperCache;",
                "+    }",
                "+",
                "+    public Integer getFreemarkerMruMaxStrongSize() {",
                "+        return freemarkerMruMaxStrongSize;",
                "+    }",
                "+",
                "+    public void setFreemarkerMruMaxStrongSize(Integer freemarkerMruMaxStrongSize) {",
                "+        this.freemarkerMruMaxStrongSize = freemarkerMruMaxStrongSize;",
                "+    }",
                "+",
                "+    public BeanConfig getVelocityManagerClassname() {",
                "+        return velocityManagerClassname;",
                "+    }",
                "+",
                "+    public void setVelocityManagerClassname(BeanConfig velocityManagerClassname) {",
                "+        this.velocityManagerClassname = velocityManagerClassname;",
                "+    }",
                "+",
                "+    public void setVelocityManagerClassname(Class<?> clazz) {",
                "+        this.velocityManagerClassname = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public String getVelocityConfigfile() {",
                "+        return velocityConfigfile;",
                "+    }",
                "+",
                "+    public void setVelocityConfigfile(String velocityConfigfile) {",
                "+        this.velocityConfigfile = velocityConfigfile;",
                "+    }",
                "+",
                "+    public String getVelocityToolboxlocation() {",
                "+        return velocityToolboxlocation;",
                "+    }",
                "+",
                "+    public void setVelocityToolboxlocation(String velocityToolboxlocation) {",
                "+        this.velocityToolboxlocation = velocityToolboxlocation;",
                "+    }",
                "+",
                "+    public List<String> getVelocityContexts() {",
                "+        return velocityContexts;",
                "+    }",
                "+",
                "+    public void setVelocityContexts(List<String> velocityContexts) {",
                "+        this.velocityContexts = velocityContexts;",
                "+    }",
                "+",
                "+    public String getUiTemplateDir() {",
                "+        return uiTemplateDir;",
                "+    }",
                "+",
                "+    public void setUiTemplateDir(String uiTemplateDir) {",
                "+        this.uiTemplateDir = uiTemplateDir;",
                "+    }",
                "+",
                "+    public String getUiTheme() {",
                "+        return uiTheme;",
                "+    }",
                "+",
                "+    public void setUiTheme(String uiTheme) {",
                "+        this.uiTheme = uiTheme;",
                "+    }",
                "+",
                "+    public String getUiThemeExpansionToken() {",
                "+        return uiThemeExpansionToken;",
                "+    }",
                "+",
                "+    public void setUiThemeExpansionToken(String uiThemeExpansionToken) {",
                "+        this.uiThemeExpansionToken = uiThemeExpansionToken;",
                "+    }",
                "+",
                "+    public Long getMultipartMaxSize() {",
                "+        return multipartMaxSize;",
                "+    }",
                "+",
                "+    public void setMultipartMaxSize(Long multipartMaxSize) {",
                "+        this.multipartMaxSize = multipartMaxSize;",
                "+    }",
                "+",
                "+    public String getMultipartSaveDir() {",
                "+        return multipartSaveDir;",
                "+    }",
                "+",
                "+    public void setMultipartSaveDir(String multipartSaveDir) {",
                "+        this.multipartSaveDir = multipartSaveDir;",
                "+    }",
                "+",
                "+    public Integer getMultipartBufferSize() {",
                "+        return multipartBufferSize;",
                "+    }",
                "+",
                "+    public void setMultipartBufferSize(Integer multipartBufferSize) {",
                "+        this.multipartBufferSize = multipartBufferSize;",
                "+    }",
                "+",
                "+    public BeanConfig getMultipartParser() {",
                "+        return multipartParser;",
                "+    }",
                "+",
                "+    public void setMultipartParser(BeanConfig multipartParser) {",
                "+        this.multipartParser = multipartParser;",
                "+    }",
                "+",
                "+    public void setMultipartParser(Class<?> clazz) {",
                "+        this.multipartParser = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Boolean getMultipartEnabled() {",
                "+        return multipartEnabled;",
                "+    }",
                "+",
                "+    public void setMultipartEnabled(Boolean multipartEnabled) {",
                "+        this.multipartEnabled = multipartEnabled;",
                "+    }",
                "+",
                "+    public Pattern getMultipartValidationRegex() {",
                "+        return multipartValidationRegex;",
                "+    }",
                "+",
                "+    public void setMultipartValidationRegex(Pattern multipartValidationRegex) {",
                "+        this.multipartValidationRegex = multipartValidationRegex;",
                "+    }",
                "+",
                "+    public String getObjectFactorySpringAutoWire() {",
                "+        return objectFactorySpringAutoWire;",
                "+    }",
                "+",
                "+    public void setObjectFactorySpringAutoWire(String objectFactorySpringAutoWire) {",
                "+        this.objectFactorySpringAutoWire = objectFactorySpringAutoWire;",
                "+    }",
                "+",
                "+    public Boolean getObjectFactorySpringAutoWireAlwaysRespect() {",
                "+        return objectFactorySpringAutoWireAlwaysRespect;",
                "+    }",
                "+",
                "+    public void setObjectFactorySpringAutoWireAlwaysRespect(Boolean objectFactorySpringAutoWireAlwaysRespect) {",
                "+        this.objectFactorySpringAutoWireAlwaysRespect = objectFactorySpringAutoWireAlwaysRespect;",
                "+    }",
                "+",
                "+    public Boolean getObjectFactorySpringUseClassCache() {",
                "+        return objectFactorySpringUseClassCache;",
                "+    }",
                "+",
                "+    public void setObjectFactorySpringUseClassCache(Boolean objectFactorySpringUseClassCache) {",
                "+        this.objectFactorySpringUseClassCache = objectFactorySpringUseClassCache;",
                "+    }",
                "+",
                "+    public Boolean getObjectFactorySpringEnableAopSupport() {",
                "+        return objectFactorySpringEnableAopSupport;",
                "+    }",
                "+",
                "+    public void setObjectFactorySpringEnableAopSupport(Boolean objectFactorySpringEnableAopSupport) {",
                "+        this.objectFactorySpringEnableAopSupport = objectFactorySpringEnableAopSupport;",
                "+    }",
                "+",
                "+    public Boolean getXsltNocache() {",
                "+        return xsltNocache;",
                "+    }",
                "+",
                "+    public void setXsltNocache(Boolean xsltNocache) {",
                "+        this.xsltNocache = xsltNocache;",
                "+    }",
                "+",
                "+    public List<String> getCustomProperties() {",
                "+        return customProperties;",
                "+    }",
                "+",
                "+    public void setCustomProperties(List<String> customProperties) {",
                "+        this.customProperties = customProperties;",
                "+    }",
                "+",
                "+    public List<String> getCustomI18nResources() {",
                "+        return customI18nResources;",
                "+    }",
                "+",
                "+    public void setCustomI18nResources(List<String> customI18nResources) {",
                "+        this.customI18nResources = customI18nResources;",
                "+    }",
                "+",
                "+    public BeanConfig getMapperClass() {",
                "+        return mapperClass;",
                "+    }",
                "+",
                "+    public void setMapperClass(BeanConfig mapperClass) {",
                "+        this.mapperClass = mapperClass;",
                "+    }",
                "+",
                "+    public void setMapperClass(Class<?> clazz) {",
                "+        this.mapperClass = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public List<String> getMapperPrefixMapping() {",
                "+        return mapperPrefixMapping;",
                "+    }",
                "+",
                "+    public void setMapperPrefixMapping(List<String> mapperPrefixMapping) {",
                "+        this.mapperPrefixMapping = mapperPrefixMapping;",
                "+    }",
                "+",
                "+    public Boolean getServeStatic() {",
                "+        return serveStatic;",
                "+    }",
                "+",
                "+    public void setServeStatic(Boolean serveStatic) {",
                "+        this.serveStatic = serveStatic;",
                "+    }",
                "+",
                "+    public Boolean getServeStaticBrowserCache() {",
                "+        return serveStaticBrowserCache;",
                "+    }",
                "+",
                "+    public void setServeStaticBrowserCache(Boolean serveStaticBrowserCache) {",
                "+        this.serveStaticBrowserCache = serveStaticBrowserCache;",
                "+    }",
                "+",
                "+    public Boolean getEnableDynamicMethodInvocation() {",
                "+        return enableDynamicMethodInvocation;",
                "+    }",
                "+",
                "+    public void setEnableDynamicMethodInvocation(Boolean enableDynamicMethodInvocation) {",
                "+        this.enableDynamicMethodInvocation = enableDynamicMethodInvocation;",
                "+    }",
                "+",
                "+    public Boolean getEnableSlashesInActionNames() {",
                "+        return enableSlashesInActionNames;",
                "+    }",
                "+",
                "+    public void setEnableSlashesInActionNames(Boolean enableSlashesInActionNames) {",
                "+        this.enableSlashesInActionNames = enableSlashesInActionNames;",
                "+    }",
                "+",
                "+    public List<String> getMapperComposite() {",
                "+        return mapperComposite;",
                "+    }",
                "+",
                "+    public void setMapperComposite(List<String> mapperComposite) {",
                "+        this.mapperComposite = mapperComposite;",
                "+    }",
                "+",
                "+    public BeanConfig getActionProxyFactory() {",
                "+        return actionProxyFactory;",
                "+    }",
                "+",
                "+    public void setActionProxyFactory(BeanConfig actionProxyFactory) {",
                "+        this.actionProxyFactory = actionProxyFactory;",
                "+    }",
                "+",
                "+    public void setActionProxyFactory(Class<?> clazz) {",
                "+        this.actionProxyFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Boolean getFreemarkerWrapperAltMap() {",
                "+        return freemarkerWrapperAltMap;",
                "+    }",
                "+",
                "+    public void setFreemarkerWrapperAltMap(Boolean freemarkerWrapperAltMap) {",
                "+        this.freemarkerWrapperAltMap = freemarkerWrapperAltMap;",
                "+    }",
                "+",
                "+    public BeanConfig getXworkConverter() {",
                "+        return xworkConverter;",
                "+    }",
                "+",
                "+    public void setXworkConverter(BeanConfig xworkConverter) {",
                "+        this.xworkConverter = xworkConverter;",
                "+    }",
                "+",
                "+    public void setXworkConverter(Class<?> clazz) {",
                "+        this.xworkConverter = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Boolean getMapperAlwaysSelectFullNamespace() {",
                "+        return mapperAlwaysSelectFullNamespace;",
                "+    }",
                "+",
                "+    public void setMapperAlwaysSelectFullNamespace(Boolean mapperAlwaysSelectFullNamespace) {",
                "+        this.mapperAlwaysSelectFullNamespace = mapperAlwaysSelectFullNamespace;",
                "+    }",
                "+",
                "+    public BeanConfig getXworkTextProvider() {",
                "+        return xworkTextProvider;",
                "+    }",
                "+",
                "+    public void setXworkTextProvider(BeanConfig xworkTextProvider) {",
                "+        this.xworkTextProvider = xworkTextProvider;",
                "+    }",
                "+",
                "+    public void setXworkTextProvider(Class<?> clazz) {",
                "+        this.xworkTextProvider = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getLocaleProvider() {",
                "+        return localeProvider;",
                "+    }",
                "+",
                "+    public void setLocaleProvider(BeanConfig localeProvider) {",
                "+        this.localeProvider = localeProvider;",
                "+    }",
                "+",
                "+    public void setLocaleProvider(Class<?> clazz) {",
                "+        this.localeProvider = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getLocaleProviderFactory() {",
                "+        return localeProviderFactory;",
                "+    }",
                "+",
                "+    public void setLocaleProviderFactory(BeanConfig localeProviderFactory) {",
                "+        this.localeProviderFactory = localeProviderFactory;",
                "+    }",
                "+",
                "+    public void setLocaleProviderFactory(Class<?> clazz) {",
                "+        this.localeProviderFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public String getMapperIdParameterName() {",
                "+        return mapperIdParameterName;",
                "+    }",
                "+",
                "+    public void setMapperIdParameterName(String mapperIdParameterName) {",
                "+        this.mapperIdParameterName = mapperIdParameterName;",
                "+    }",
                "+",
                "+    public Boolean getOgnlAllowStaticMethodAccess() {",
                "+        return ognlAllowStaticMethodAccess;",
                "+    }",
                "+",
                "+    public void setOgnlAllowStaticMethodAccess(Boolean ognlAllowStaticMethodAccess) {",
                "+        this.ognlAllowStaticMethodAccess = ognlAllowStaticMethodAccess;",
                "+    }",
                "+",
                "+    public BeanConfig getActionValidatorManager() {",
                "+        return actionValidatorManager;",
                "+    }",
                "+",
                "+    public void setActionValidatorManager(BeanConfig actionValidatorManager) {",
                "+        this.actionValidatorManager = actionValidatorManager;",
                "+    }",
                "+",
                "+    public void setActionValidatorManager(Class<?> clazz) {",
                "+        this.actionValidatorManager = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getValueStackFactory() {",
                "+        return valueStackFactory;",
                "+    }",
                "+",
                "+    public void setValueStackFactory(BeanConfig valueStackFactory) {",
                "+        this.valueStackFactory = valueStackFactory;",
                "+    }",
                "+",
                "+    public void setValueStackFactory(Class<?> clazz) {",
                "+        this.valueStackFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getReflectionProvider() {",
                "+        return reflectionProvider;",
                "+    }",
                "+",
                "+    public void setReflectionProvider(BeanConfig reflectionProvider) {",
                "+        this.reflectionProvider = reflectionProvider;",
                "+    }",
                "+",
                "+    public void setReflectionProvider(Class<?> clazz) {",
                "+        this.reflectionProvider = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getReflectionContextFactory() {",
                "+        return reflectionContextFactory;",
                "+    }",
                "+",
                "+    public void setReflectionContextFactory(BeanConfig reflectionContextFactory) {",
                "+        this.reflectionContextFactory = reflectionContextFactory;",
                "+    }",
                "+",
                "+    public void setReflectionContextFactory(Class<?> clazz) {",
                "+        this.reflectionContextFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getPatternMatcher() {",
                "+        return patternMatcher;",
                "+    }",
                "+",
                "+    public void setPatternMatcher(BeanConfig patternMatcher) {",
                "+        this.patternMatcher = patternMatcher;",
                "+    }",
                "+",
                "+    public void setPatternMatcher(Class<?> clazz) {",
                "+        this.patternMatcher = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getStaticContentLoader() {",
                "+        return staticContentLoader;",
                "+    }",
                "+",
                "+    public void setStaticContentLoader(BeanConfig staticContentLoader) {",
                "+        this.staticContentLoader = staticContentLoader;",
                "+    }",
                "+",
                "+    public void setStaticContentLoader(Class<?> clazz) {",
                "+        this.staticContentLoader = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getUnknownHandlerManager() {",
                "+        return unknownHandlerManager;",
                "+    }",
                "+",
                "+    public void setUnknownHandlerManager(BeanConfig unknownHandlerManager) {",
                "+        this.unknownHandlerManager = unknownHandlerManager;",
                "+    }",
                "+",
                "+    public void setUnknownHandlerManager(Class<?> clazz) {",
                "+        this.unknownHandlerManager = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Boolean getElThrowExceptionOnFailure() {",
                "+        return elThrowExceptionOnFailure;",
                "+    }",
                "+",
                "+    public void setElThrowExceptionOnFailure(Boolean elThrowExceptionOnFailure) {",
                "+        this.elThrowExceptionOnFailure = elThrowExceptionOnFailure;",
                "+    }",
                "+",
                "+    public Boolean getOgnlLogMissingProperties() {",
                "+        return ognlLogMissingProperties;",
                "+    }",
                "+",
                "+    public void setOgnlLogMissingProperties(Boolean ognlLogMissingProperties) {",
                "+        this.ognlLogMissingProperties = ognlLogMissingProperties;",
                "+    }",
                "+",
                "+    public Boolean getOgnlEnableExpressionCache() {",
                "+        return ognlEnableExpressionCache;",
                "+    }",
                "+",
                "+    public void setOgnlEnableExpressionCache(Boolean ognlEnableExpressionCache) {",
                "+        this.ognlEnableExpressionCache = ognlEnableExpressionCache;",
                "+    }",
                "+",
                "+    public Boolean getOgnlEnableOGNLEvalExpression() {",
                "+        return ognlEnableOGNLEvalExpression;",
                "+    }",
                "+",
                "+    public void setOgnlEnableOGNLEvalExpression(Boolean ognlEnableOGNLEvalExpression) {",
                "+        this.ognlEnableOGNLEvalExpression = ognlEnableOGNLEvalExpression;",
                "+    }",
                "+",
                "+    public Boolean getDisableRequestAttributeValueStackLookup() {",
                "+        return disableRequestAttributeValueStackLookup;",
                "+    }",
                "+",
                "+    public void setDisableRequestAttributeValueStackLookup(Boolean disableRequestAttributeValueStackLookup) {",
                "+        this.disableRequestAttributeValueStackLookup = disableRequestAttributeValueStackLookup;",
                "+    }",
                "+",
                "+    public BeanConfig getViewUrlHelper() {",
                "+        return viewUrlHelper;",
                "+    }",
                "+",
                "+    public void setViewUrlHelper(BeanConfig viewUrlHelper) {",
                "+        this.viewUrlHelper = viewUrlHelper;",
                "+    }",
                "+",
                "+    public void setViewUrlHelper(Class<?> clazz) {",
                "+        this.viewUrlHelper = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConverterCollection() {",
                "+        return converterCollection;",
                "+    }",
                "+",
                "+    public void setConverterCollection(BeanConfig converterCollection) {",
                "+        this.converterCollection = converterCollection;",
                "+    }",
                "+",
                "+    public void setConverterCollection(Class<?> clazz) {",
                "+        this.converterCollection = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConverterArray() {",
                "+        return converterArray;",
                "+    }",
                "+",
                "+    public void setConverterArray(BeanConfig converterArray) {",
                "+        this.converterArray = converterArray;",
                "+    }",
                "+",
                "+    public void setConverterArray(Class<?> clazz) {",
                "+        this.converterArray = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConverterDate() {",
                "+        return converterDate;",
                "+    }",
                "+",
                "+    public void setConverterDate(BeanConfig converterDate) {",
                "+        this.converterDate = converterDate;",
                "+    }",
                "+",
                "+    public void setConverterDate(Class<?> clazz) {",
                "+        this.converterDate = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConverterNumber() {",
                "+        return converterNumber;",
                "+    }",
                "+",
                "+    public void setConverterNumber(BeanConfig converterNumber) {",
                "+        this.converterNumber = converterNumber;",
                "+    }",
                "+",
                "+    public void setConverterNumber(Class<?> clazz) {",
                "+        this.converterNumber = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConverterString() {",
                "+        return converterString;",
                "+    }",
                "+",
                "+    public void setConverterString(BeanConfig converterString) {",
                "+        this.converterString = converterString;",
                "+    }",
                "+",
                "+    public void setConverterString(Class<?> clazz) {",
                "+        this.converterString = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Boolean getHandleException() {",
                "+        return handleException;",
                "+    }",
                "+",
                "+    public void setHandleException(Boolean handleException) {",
                "+        this.handleException = handleException;",
                "+    }",
                "+",
                "+    public BeanConfig getConverterPropertiesProcessor() {",
                "+        return converterPropertiesProcessor;",
                "+    }",
                "+",
                "+    public void setConverterPropertiesProcessor(BeanConfig converterPropertiesProcessor) {",
                "+        this.converterPropertiesProcessor = converterPropertiesProcessor;",
                "+    }",
                "+",
                "+    public void setConverterPropertiesProcessor(Class<?> clazz) {",
                "+        this.converterPropertiesProcessor = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConverterFileProcessor() {",
                "+        return converterFileProcessor;",
                "+    }",
                "+",
                "+    public void setConverterFileProcessor(BeanConfig converterFileProcessor) {",
                "+        this.converterFileProcessor = converterFileProcessor;",
                "+    }",
                "+",
                "+    public void setConverterFileProcessor(Class<?> clazz) {",
                "+        this.converterFileProcessor = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConverterAnnotationProcessor() {",
                "+        return converterAnnotationProcessor;",
                "+    }",
                "+",
                "+    public void setConverterAnnotationProcessor(BeanConfig converterAnnotationProcessor) {",
                "+        this.converterAnnotationProcessor = converterAnnotationProcessor;",
                "+    }",
                "+",
                "+    public void setConverterAnnotationProcessor(Class<?> clazz) {",
                "+        this.converterAnnotationProcessor = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConverterCreator() {",
                "+        return converterCreator;",
                "+    }",
                "+",
                "+    public void setConverterCreator(BeanConfig converterCreator) {",
                "+        this.converterCreator = converterCreator;",
                "+    }",
                "+",
                "+    public void setConverterCreator(Class<?> clazz) {",
                "+        this.converterCreator = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConverterHolder() {",
                "+        return ConverterHolder;",
                "+    }",
                "+",
                "+    public void setConverterHolder(BeanConfig ConverterHolder) {",
                "+        this.ConverterHolder = ConverterHolder;",
                "+    }",
                "+",
                "+    public void setConverterHolder(Class<?> clazz) {",
                "+        this.ConverterHolder = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getExpressionParser() {",
                "+        return expressionParser;",
                "+    }",
                "+",
                "+    public void setExpressionParser(BeanConfig expressionParser) {",
                "+        this.expressionParser = expressionParser;",
                "+    }",
                "+",
                "+    public void setExpressionParser(Class<?> clazz) {",
                "+        this.expressionParser = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Pattern getAllowedActionNames() {",
                "+        return allowedActionNames;",
                "+    }",
                "+",
                "+    public void setAllowedActionNames(Pattern allowedActionNames) {",
                "+        this.allowedActionNames = allowedActionNames;",
                "+    }",
                "+",
                "+    public String getDefaultActionName() {",
                "+        return defaultActionName;",
                "+    }",
                "+",
                "+    public void setDefaultActionName(String defaultActionName) {",
                "+        this.defaultActionName = defaultActionName;",
                "+    }",
                "+",
                "+    public Pattern getAllowedMethodNames() {",
                "+        return allowedMethodNames;",
                "+    }",
                "+",
                "+    public void setAllowedMethodNames(Pattern allowedMethodNames) {",
                "+        this.allowedMethodNames = allowedMethodNames;",
                "+    }",
                "+",
                "+    public String getDefaultMethodName() {",
                "+        return defaultMethodName;",
                "+    }",
                "+",
                "+    public void setDefaultMethodName(String defaultMethodName) {",
                "+        this.defaultMethodName = defaultMethodName;",
                "+    }",
                "+",
                "+    public Boolean getMapperActionPrefixEnabled() {",
                "+        return mapperActionPrefixEnabled;",
                "+    }",
                "+",
                "+    public void setMapperActionPrefixEnabled(Boolean mapperActionPrefixEnabled) {",
                "+        this.mapperActionPrefixEnabled = mapperActionPrefixEnabled;",
                "+    }",
                "+",
                "+    public Boolean getMapperActionPrefixCrossNamespaces() {",
                "+        return mapperActionPrefixCrossNamespaces;",
                "+    }",
                "+",
                "+    public void setMapperActionPrefixCrossNamespaces(Boolean mapperActionPrefixCrossNamespaces) {",
                "+        this.mapperActionPrefixCrossNamespaces = mapperActionPrefixCrossNamespaces;",
                "+    }",
                "+",
                "+    public String getUiTemplateSuffix() {",
                "+        return uiTemplateSuffix;",
                "+    }",
                "+",
                "+    public void setUiTemplateSuffix(String uiTemplateSuffix) {",
                "+        this.uiTemplateSuffix = uiTemplateSuffix;",
                "+    }",
                "+",
                "+    public BeanConfig getDispatcherErrorHandler() {",
                "+        return dispatcherErrorHandler;",
                "+    }",
                "+",
                "+    public void setDispatcherErrorHandler(BeanConfig dispatcherErrorHandler) {",
                "+        this.dispatcherErrorHandler = dispatcherErrorHandler;",
                "+    }",
                "+",
                "+    public void setDispatcherErrorHandler(Class<?> clazz) {",
                "+        this.dispatcherErrorHandler = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Set<Class<?>> getExcludedClasses() {",
                "+        return excludedClasses;",
                "+    }",
                "+",
                "+    public void setExcludedClasses(Set<Class<?>> excludedClasses) {",
                "+        this.excludedClasses = excludedClasses;",
                "+    }",
                "+",
                "+    public List<Pattern> getExcludedPackageNamePatterns() {",
                "+        return excludedPackageNamePatterns;",
                "+    }",
                "+",
                "+    public void setExcludedPackageNamePatterns(List<Pattern> excludedPackageNamePatterns) {",
                "+        this.excludedPackageNamePatterns = excludedPackageNamePatterns;",
                "+    }",
                "+",
                "+    public Set<String> getExcludedPackageNames() {",
                "+        return excludedPackageNames;",
                "+    }",
                "+",
                "+    public void setExcludedPackageNames(Set<String> excludedPackageNames) {",
                "+        this.excludedPackageNames = excludedPackageNames;",
                "+    }",
                "+",
                "+    public BeanConfig getExcludedPatternsChecker() {",
                "+        return excludedPatternsChecker;",
                "+    }",
                "+",
                "+    public void setExcludedPatternsChecker(BeanConfig excludedPatternsChecker) {",
                "+        this.excludedPatternsChecker = excludedPatternsChecker;",
                "+    }",
                "+",
                "+    public void setExcludedPatternsChecker(Class<?> clazz) {",
                "+        this.excludedPatternsChecker = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getAcceptedPatternsChecker() {",
                "+        return acceptedPatternsChecker;",
                "+    }",
                "+",
                "+    public void setAcceptedPatternsChecker(BeanConfig acceptedPatternsChecker) {",
                "+        this.acceptedPatternsChecker = acceptedPatternsChecker;",
                "+    }",
                "+",
                "+    public void setAcceptedPatternsChecker(Class<?> clazz) {",
                "+        this.acceptedPatternsChecker = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Set<Pattern> getOverrideExcludedPatterns() {",
                "+        return overrideExcludedPatterns;",
                "+    }",
                "+",
                "+    public void setOverrideExcludedPatterns(Set<Pattern> overrideExcludedPatterns) {",
                "+        this.overrideExcludedPatterns = overrideExcludedPatterns;",
                "+    }",
                "+",
                "+    public Set<Pattern> getOverrideAcceptedPatterns() {",
                "+        return overrideAcceptedPatterns;",
                "+    }",
                "+",
                "+    public void setOverrideAcceptedPatterns(Set<Pattern> overrideAcceptedPatterns) {",
                "+        this.overrideAcceptedPatterns = overrideAcceptedPatterns;",
                "+    }",
                "+",
                "+    public Set<Pattern> getAdditionalExcludedPatterns() {",
                "+        return additionalExcludedPatterns;",
                "+    }",
                "+",
                "+    public void setAdditionalExcludedPatterns(Set<Pattern> additionalExcludedPatterns) {",
                "+        this.additionalExcludedPatterns = additionalExcludedPatterns;",
                "+    }",
                "+",
                "+    public Set<Pattern> getAdditionalAcceptedPatterns() {",
                "+        return additionalAcceptedPatterns;",
                "+    }",
                "+",
                "+    public void setAdditionalAcceptedPatterns(Set<Pattern> additionalAcceptedPatterns) {",
                "+        this.additionalAcceptedPatterns = additionalAcceptedPatterns;",
                "+    }",
                "+",
                "+    public BeanConfig getContentTypeMatcher() {",
                "+        return contentTypeMatcher;",
                "+    }",
                "+",
                "+    public void setContentTypeMatcher(BeanConfig contentTypeMatcher) {",
                "+        this.contentTypeMatcher = contentTypeMatcher;",
                "+    }",
                "+",
                "+    public void setContentTypeMatcher(Class<?> clazz) {",
                "+        this.contentTypeMatcher = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public String getStrictMethodInvocationMethodRegex() {",
                "+        return strictMethodInvocationMethodRegex;",
                "+    }",
                "+",
                "+    public void setStrictMethodInvocationMethodRegex(String strictMethodInvocationMethodRegex) {",
                "+        this.strictMethodInvocationMethodRegex = strictMethodInvocationMethodRegex;",
                "+    }",
                "+",
                "+    public BeanConfig getTextProviderFactory() {",
                "+        return textProviderFactory;",
                "+    }",
                "+",
                "+    public void setTextProviderFactory(BeanConfig textProviderFactory) {",
                "+        this.textProviderFactory = textProviderFactory;",
                "+    }",
                "+",
                "+    public void setTextProviderFactory(Class<?> clazz) {",
                "+        this.textProviderFactory = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getLocalizedTextProvider() {",
                "+        return localizedTextProvider;",
                "+    }",
                "+",
                "+    public void setLocalizedTextProvider(BeanConfig localizedTextProvider) {",
                "+        this.localizedTextProvider = localizedTextProvider;",
                "+    }",
                "+",
                "+    public void setLocalizedTextProvider(Class<?> clazz) {",
                "+        this.localizedTextProvider = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Boolean getDisallowProxyMemberAccess() {",
                "+        return disallowProxyMemberAccess;",
                "+    }",
                "+",
                "+    public void setDisallowProxyMemberAccess(Boolean disallowProxyMemberAccess) {",
                "+        this.disallowProxyMemberAccess = disallowProxyMemberAccess;",
                "+    }",
                "+}",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "index dcc5fe72a..a6546e52f 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "@@ -50,2 +50,4 @@ import org.apache.struts2.config.DefaultPropertiesProvider;",
                " import org.apache.struts2.config.PropertiesConfigurationProvider;",
                "+import org.apache.struts2.config.StrutsJavaConfiguration;",
                "+import org.apache.struts2.config.StrutsJavaConfigurationProvider;",
                " import org.apache.struts2.config.StrutsXmlConfigurationProvider;",
                "@@ -413,2 +415,26 @@ public class Dispatcher {",
                "+    private void init_JavaConfigurations() {",
                "+        String configClasses = initParams.get(\"javaConfigClasses\");",
                "+        if (configClasses != null) {",
                "+            String[] classes = configClasses.split(\"\\\\s*[,]\\\\s*\");",
                "+            for (String cname : classes) {",
                "+                try {",
                "+                    Class cls = ClassLoaderUtil.loadClass(cname, this.getClass());",
                "+                    StrutsJavaConfiguration config = (StrutsJavaConfiguration) cls.newInstance();",
                "+                    configurationManager.addContainerProvider(createJavaConfigurationProvider(config));",
                "+                } catch (InstantiationException e) {",
                "+                    throw new ConfigurationException(\"Unable to instantiate java configuration: \" + cname, e);",
                "+                } catch (IllegalAccessException e) {",
                "+                    throw new ConfigurationException(\"Unable to access java configuration: \" + cname, e);",
                "+                } catch (ClassNotFoundException e) {",
                "+                    throw new ConfigurationException(\"Unable to locate java configuration class: \" + cname, e);",
                "+                }",
                "+            }",
                "+        }",
                "+    }",
                "+",
                "+    protected StrutsJavaConfigurationProvider createJavaConfigurationProvider(StrutsJavaConfiguration config) {",
                "+        return new StrutsJavaConfigurationProvider(config);",
                "+    }",
                "+",
                "     private void init_CustomConfigurationProviders() {",
                "@@ -490,2 +516,3 @@ public class Dispatcher {",
                "             init_TraditionalXmlConfigurations(); // [2]",
                "+            init_JavaConfigurations();",
                "             init_LegacyStrutsProperties(); // [3]"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/config/StrutsJavaConfiguration.java",
                "core/src/main/java/org/apache/struts2/config/StrutsJavaConfigurationProvider.java",
                "core/src/main/java/org/apache/struts2/config/entities/BeanConfig.java",
                "core/src/main/java/org/apache/struts2/config/entities/ConstantConfig.java",
                "core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4875": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: base",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4875",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cde63169f0b8717fc29355509f5ac365a843993a",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510178506,
            "hunks": 11,
            "message": "WW-4888 add escaping options to text tag",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/components/Text.java b/core/src/main/java/org/apache/struts2/components/Text.java",
                "index c7935ac7c..a5ea21715 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/Text.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/Text.java",
                "@@ -21,2 +21,3 @@ package org.apache.struts2.components;",
                " import com.opensymphony.xwork2.util.ValueStack;",
                "+import org.apache.commons.lang3.StringEscapeUtils;",
                " import org.apache.commons.lang3.StringUtils;",
                "@@ -60,2 +61,6 @@ import java.util.List;",
                "  *      <li>name* (String) - the i18n message key</li>",
                "+ *      <li>escapeHtml (Boolean) - Escape HTML. Defaults to false</li>",
                "+ *      <li>escapeJavaScript (Boolean) - Escape JavaScript. Defaults to false</li>",
                "+ *      <li>escapeXml (Boolean) - Escape XML. Defaults to false</li>",
                "+ *      <li>escapeCsv (Boolean) - Escape CSV. Defaults to false</li>",
                "  * </ul>",
                "@@ -121,2 +126,6 @@ public class Text extends ContextBean implements Param.UnnamedParametric {",
                "     protected String searchStack;",
                "+    private boolean escapeHtml = false;",
                "+    private boolean escapeJavaScript = false;",
                "+    private boolean escapeXml = false;",
                "+    private boolean escapeCsv = false;",
                "@@ -136,2 +145,22 @@ public class Text extends ContextBean implements Param.UnnamedParametric {",
                "+    @StrutsTagAttribute(description=\"Whether to escape HTML\", type=\"Boolean\", defaultValue=\"false\")",
                "+    public void setEscapeHtml(boolean escape) {",
                "+        this.escapeHtml = escape;",
                "+    }",
                "+    ",
                "+    @StrutsTagAttribute(description=\"Whether to escape Javascript\", type=\"Boolean\", defaultValue=\"false\")",
                "+    public void setEscapeJavaScript(boolean escapeJavaScript) {",
                "+        this.escapeJavaScript = escapeJavaScript;",
                "+    }",
                "+",
                "+    @StrutsTagAttribute(description=\"Whether to escape XML\", type=\"Boolean\", defaultValue=\"false\")",
                "+    public void setEscapeXml(boolean escapeXml) {",
                "+        this.escapeXml = escapeXml;",
                "+    }",
                "+",
                "+    @StrutsTagAttribute(description=\"Whether to escape CSV (useful to escape a value for a column)\", type=\"Boolean\", defaultValue=\"false\")",
                "+    public void setEscapeCsv(boolean escapeCsv) {",
                "+        this.escapeCsv = escapeCsv;",
                "+    }",
                "+",
                "     public boolean usesBody() {",
                "@@ -163,3 +192,3 @@ public class Text extends ContextBean implements Param.UnnamedParametric {",
                "                 if (getVar() == null) {",
                "-                    writer.write(msg);",
                "+                    writer.write(prepare(msg));",
                "                 } else {",
                "@@ -186,2 +215,20 @@ public class Text extends ContextBean implements Param.UnnamedParametric {",
                "     }",
                "+",
                "+    private String prepare(String value) {",
                "+        String result = value;",
                "+        if (escapeHtml) {",
                "+            result = StringEscapeUtils.escapeHtml4(result);",
                "+        }",
                "+        if (escapeJavaScript) {",
                "+            result = StringEscapeUtils.escapeEcmaScript(result);",
                "+        }",
                "+        if (escapeXml) {",
                "+            result = StringEscapeUtils.escapeXml(result);",
                "+        }",
                "+        if (escapeCsv) {",
                "+            result = StringEscapeUtils.escapeCsv(result);",
                "+        }",
                "+",
                "+        return result;",
                "+    }",
                " }",
                "diff --git a/core/src/main/java/org/apache/struts2/views/jsp/PropertyTag.java b/core/src/main/java/org/apache/struts2/views/jsp/PropertyTag.java",
                "index 12abe6bbb..85fed48c9 100644",
                "--- a/core/src/main/java/org/apache/struts2/views/jsp/PropertyTag.java",
                "+++ b/core/src/main/java/org/apache/struts2/views/jsp/PropertyTag.java",
                "@@ -37,3 +37,3 @@ public class PropertyTag extends ComponentTagSupport {",
                "     private String value;",
                "-    private boolean escapeHtml = true;",
                "+    private boolean escapeHtml = false;",
                "     private boolean escapeJavaScript = false;",
                "diff --git a/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java b/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java",
                "index 6407954fa..c0420dfad 100644",
                "--- a/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java",
                "+++ b/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java",
                "@@ -37,2 +37,6 @@ public class TextTag extends ContextBeanTag {",
                "     protected String searchValueStack;",
                "+    private boolean escapeHtml = false;",
                "+    private boolean escapeJavaScript = false;",
                "+    private boolean escapeXml = false;",
                "+    private boolean escapeCsv = false;",
                "@@ -48,2 +52,6 @@ public class TextTag extends ContextBeanTag {",
                "         text.setSearchValueStack(searchValueStack);",
                "+        text.setEscapeHtml(escapeHtml);",
                "+        text.setEscapeJavaScript(escapeJavaScript);",
                "+        text.setEscapeXml(escapeXml);",
                "+        text.setEscapeCsv(escapeCsv);",
                "     }",
                "@@ -57,2 +65,19 @@ public class TextTag extends ContextBeanTag {",
                "     }",
                "+",
                "+    public void setEscapeHtml(boolean escapeHtml) {",
                "+        this.escapeHtml = escapeHtml;",
                "+    }",
                "+",
                "+    public void setEscapeJavaScript(boolean escapeJavaScript) {",
                "+        this.escapeJavaScript = escapeJavaScript;",
                "+    }",
                "+    ",
                "+    public void setEscapeXml(boolean escapeXml) {",
                "+        this.escapeXml = escapeXml;",
                "+    }",
                "+",
                "+    public void setEscapeCsv(boolean escapeCsv) {",
                "+        this.escapeCsv = escapeCsv;",
                "+    }",
                "+",
                " }",
                "diff --git a/core/src/site/resources/tags/text.html b/core/src/site/resources/tags/text.html",
                "index bd2e51115..f068caddb 100644",
                "--- a/core/src/site/resources/tags/text.html",
                "+++ b/core/src/site/resources/tags/text.html",
                "@@ -35,2 +35,34 @@ Please do not edit it directly.",
                " \t\t\t</tr>",
                "+\t\t\t\t<tr>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">escapeCsv</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">Boolean</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">Whether to escape CSV (useful to escape a value for a column)</td>",
                "+\t\t\t\t</tr>",
                "+\t\t\t\t<tr>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">escapeHtml</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">Boolean</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">Whether to escape HTML</td>",
                "+\t\t\t\t</tr>",
                "+\t\t\t\t<tr>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">escapeJavaScript</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">Boolean</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">Whether to escape Javascript</td>",
                "+\t\t\t\t</tr>",
                "+\t\t\t\t<tr>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">escapeXml</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">false</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">Boolean</td>",
                "+\t\t\t\t\t<td align=\"left\" valign=\"top\">Whether to escape XML</td>",
                "+\t\t\t\t</tr>",
                " \t\t\t\t<tr>"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/components/Text.java",
                "core/src/main/java/org/apache/struts2/views/jsp/PropertyTag.java",
                "core/src/main/java/org/apache/struts2/views/jsp/TextTag.java",
                "core/src/site/resources/tags/text.html"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4888": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: option",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4888",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4738d1d80228f86da880ed207294349566a260a2",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513181094,
            "hunks": 11,
            "message": "WW-4873 Makes ActionInvocation not serializable",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ActionInvocation.java b/core/src/main/java/com/opensymphony/xwork2/ActionInvocation.java",
                "index 908349806..472f23ea7 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ActionInvocation.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ActionInvocation.java",
                "@@ -23,4 +23,2 @@ import com.opensymphony.xwork2.util.ValueStack;",
                "-import java.io.Serializable;",
                "-",
                " /**",
                "@@ -33,3 +31,3 @@ import java.io.Serializable;",
                "  */",
                "-public interface ActionInvocation extends Serializable {",
                "+public interface ActionInvocation {",
                "@@ -180,18 +178,2 @@ public interface ActionInvocation extends Serializable {",
                "-    /**",
                "-     * Prepares instance of ActionInvocation to be serializable,",
                "-     * which simple means removing all unserializable fields, eg. Container",
                "-     *",
                "-     * @return ActionInvocation which can be serialize (eg. into HttpSession)",
                "-     */",
                "-    ActionInvocation serialize();",
                "-",
                "-    /**",
                "-     * Performs opposite process to restore back ActionInvocation after deserialisation",
                "-     *",
                "-     * @param actionContext current {@link ActionContext}",
                "-     * @return fully operational ActionInvocation",
                "-     */",
                "-    ActionInvocation deserialize(ActionContext actionContext);",
                "-",
                " }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java b/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "index 5777007c1..6b039d680 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "@@ -502,25 +502,2 @@ public class DefaultActionInvocation implements ActionInvocation {",
                "-    /**",
                "-     * Version ready to be serialize",
                "-     *",
                "-     * @return instance without reference to {@link Container}",
                "-     */",
                "-    public ActionInvocation serialize() {",
                "-        DefaultActionInvocation that = this;",
                "-        that.container = null;",
                "-        return that;",
                "-    }",
                "-",
                "-    /**",
                "-     * Restoring Container",
                "-     *",
                "-     * @param actionContext current {@link ActionContext}",
                "-     * @return instance which can be used to invoke action",
                "-     */",
                "-    public ActionInvocation deserialize(ActionContext actionContext) {",
                "-        DefaultActionInvocation that = this;",
                "-        that.container = actionContext.getContainer();",
                "-        return that;",
                "-    }",
                "-",
                " }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/mock/MockActionInvocation.java b/core/src/main/java/com/opensymphony/xwork2/mock/MockActionInvocation.java",
                "index 9053273dc..f37e8a6ae 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/mock/MockActionInvocation.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/mock/MockActionInvocation.java",
                "@@ -126,10 +126,2 @@ public class MockActionInvocation implements ActionInvocation {",
                "-    public ActionInvocation serialize() {",
                "-        return this;",
                "-    }",
                "-",
                "-    public ActionInvocation deserialize(ActionContext actionContext) {",
                "-        return this;",
                "-    }",
                "-",
                " }",
                "diff --git a/core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java b/core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java",
                "index 5f1ad483d..6eaaf7366 100644",
                "--- a/core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java",
                "+++ b/core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java",
                "@@ -61,3 +61,3 @@ public class InvocationSessionStore {",
                "-        return invocationContext.invocation.deserialize(ActionContext.getContext());",
                "+        return invocationContext.invocation;",
                "     }",
                "@@ -73,3 +73,3 @@ public class InvocationSessionStore {",
                "     public static void storeInvocation(String key, String token, ActionInvocation invocation) {",
                "-        InvocationContext invocationContext = new InvocationContext(invocation.serialize(), token);",
                "+        InvocationContext invocationContext = new InvocationContext(invocation, token);",
                "         Map invocationMap = getInvocationMap();",
                "diff --git a/plugins/dwr/src/main/java/org/apache/struts2/validators/DWRValidator.java b/plugins/dwr/src/main/java/org/apache/struts2/validators/DWRValidator.java",
                "index 04c371afb..b77b59a6b 100644",
                "--- a/plugins/dwr/src/main/java/org/apache/struts2/validators/DWRValidator.java",
                "+++ b/plugins/dwr/src/main/java/org/apache/struts2/validators/DWRValidator.java",
                "@@ -112,3 +112,2 @@ public class DWRValidator {",
                "     public static class ValidatorActionInvocation extends DefaultActionInvocation {",
                "-        private static final long serialVersionUID = -7645433725470191275L;",
                "diff --git a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "index e018591c6..0857a780e 100644",
                "--- a/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "+++ b/plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "@@ -48,4 +48,2 @@ public class RestActionInvocation extends DefaultActionInvocation {",
                "-    private static final long serialVersionUID = 3485701178946428716L;",
                "-",
                "     private static final Logger LOG = LogManager.getLogger(RestActionInvocation.class);",
                "diff --git a/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsDecorator.java b/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsDecorator.java",
                "index f7b35de2d..b172eb4fb 100644",
                "--- a/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsDecorator.java",
                "+++ b/plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsDecorator.java",
                "@@ -142,4 +142,2 @@ public abstract class OldDecorator2NewStrutsDecorator extends BaseWebAppDecorato",
                "-        private static final long serialVersionUID = -4808072199157363028L;",
                "-",
                "         ActionSupport action;",
                "@@ -198,10 +196,2 @@ public abstract class OldDecorator2NewStrutsDecorator extends BaseWebAppDecorato",
                "-        public ActionInvocation serialize() {",
                "-            return null;",
                "-        }",
                "-",
                "-        public ActionInvocation deserialize(ActionContext actionContext) {",
                "-            return null;",
                "-        }",
                "-",
                "     }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/ActionInvocation.java",
                "core/src/main/java/com/opensymphony/xwork2/DefaultActionInvocation.java",
                "core/src/main/java/com/opensymphony/xwork2/mock/MockActionInvocation.java",
                "core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java",
                "plugins/dwr/src/main/java/org/apache/struts2/validators/DWRValidator.java",
                "plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                "plugins/sitemesh/src/main/java/org/apache/struts2/sitemesh/OldDecorator2NewStrutsDecorator.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4873": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: plugins/rest/src/main/java/org/apache/struts2/rest/RestActionInvocation.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: rest, plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4873",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cb389d292d04922576a453e0d66502ca73db2b63",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508483129,
            "hunks": 105,
            "message": "Fixes Maven site generation",
            "diff": [
                "diff --git a/core/src/site/site.xml b/core/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/core/src/site/site.xml",
                "+++ b/core/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/cdi/src/site/site.xml b/plugins/cdi/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/cdi/src/site/site.xml",
                "+++ b/plugins/cdi/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/config-browser/src/site/site.xml b/plugins/config-browser/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/config-browser/src/site/site.xml",
                "+++ b/plugins/config-browser/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/convention/src/site/site.xml b/plugins/convention/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/convention/src/site/site.xml",
                "+++ b/plugins/convention/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/dwr/src/site/site.xml b/plugins/dwr/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/dwr/src/site/site.xml",
                "+++ b/plugins/dwr/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/embeddedjsp/src/site/site.xml b/plugins/embeddedjsp/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/embeddedjsp/src/site/site.xml",
                "+++ b/plugins/embeddedjsp/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/gxp/src/site/site.xml b/plugins/gxp/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/gxp/src/site/site.xml",
                "+++ b/plugins/gxp/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/jasperreports/src/site/site.xml b/plugins/jasperreports/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/jasperreports/src/site/site.xml",
                "+++ b/plugins/jasperreports/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/javatemplates/src/site/site.xml b/plugins/javatemplates/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/javatemplates/src/site/site.xml",
                "+++ b/plugins/javatemplates/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/jfreechart/src/site/site.xml b/plugins/jfreechart/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/jfreechart/src/site/site.xml",
                "+++ b/plugins/jfreechart/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/json/src/site/site.xml b/plugins/json/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/json/src/site/site.xml",
                "+++ b/plugins/json/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/junit/src/site/site.xml b/plugins/junit/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/junit/src/site/site.xml",
                "+++ b/plugins/junit/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/osgi/src/site/site.xml b/plugins/osgi/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/osgi/src/site/site.xml",
                "+++ b/plugins/osgi/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/oval/src/site/site.xml b/plugins/oval/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/oval/src/site/site.xml",
                "+++ b/plugins/oval/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/pell-multipart/src/site/site.xml b/plugins/pell-multipart/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/pell-multipart/src/site/site.xml",
                "+++ b/plugins/pell-multipart/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/plexus/src/site/site.xml b/plugins/plexus/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/plexus/src/site/site.xml",
                "+++ b/plugins/plexus/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/portlet-tiles/src/site/site.xml b/plugins/portlet-tiles/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/portlet-tiles/src/site/site.xml",
                "+++ b/plugins/portlet-tiles/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/portlet/src/site/site.xml b/plugins/portlet/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/portlet/src/site/site.xml",
                "+++ b/plugins/portlet/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/rest/src/site/site.xml b/plugins/rest/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/rest/src/site/site.xml",
                "+++ b/plugins/rest/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/sitegraph/src/site/site.xml b/plugins/sitegraph/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/sitegraph/src/site/site.xml",
                "+++ b/plugins/sitegraph/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/sitemesh/src/site/site.xml b/plugins/sitemesh/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/sitemesh/src/site/site.xml",
                "+++ b/plugins/sitemesh/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/spring/src/site/site.xml b/plugins/spring/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/spring/src/site/site.xml",
                "+++ b/plugins/spring/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/src/site/site.xml b/plugins/src/site/site.xml",
                "index e03d26d5c..4065327fd 100644",
                "--- a/plugins/src/site/site.xml",
                "+++ b/plugins/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -50,8 +50,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/testng/src/site/site.xml b/plugins/testng/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/testng/src/site/site.xml",
                "+++ b/plugins/testng/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/plugins/tiles/src/site/site.xml b/plugins/tiles/src/site/site.xml",
                "index 07a667ec7..3c5109b0c 100644",
                "--- a/plugins/tiles/src/site/site.xml",
                "+++ b/plugins/tiles/src/site/site.xml",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -49,8 +49,7 @@",
                "         <footer>",
                "-            <div class=\"row span12\">",
                "-                Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-                project logos are trademarks of The Apache Software Foundation.",
                "-            </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>",
                "-",
                "     </body>",
                "diff --git a/src/site/site.xml b/src/site/site.xml",
                "index 07aaf7588..b27ae54bf 100644",
                "--- a/src/site/site.xml",
                "+++ b/src/site/site.xml",
                "@@ -21,3 +21,3 @@",
                " -->",
                "-<project name=\"Struts 2\">",
                "+<project name=\"Apache Struts\">",
                "     <skin>",
                "@@ -25,3 +25,3 @@",
                "         <artifactId>maven-fluido-skin</artifactId>",
                "-        <version>1.3.1</version>",
                "+        <version>${fluido-skin.version}</version>",
                "     </skin>",
                "@@ -37,4 +37,4 @@",
                "     </bannerRight>",
                "-    <publishDate position=\"none\"/>",
                "-    <version position=\"none\"/>",
                "+    <publishDate position=\"left\"/>",
                "+    <version position=\"right\"/>",
                "     <body>",
                "@@ -50,9 +50,13 @@",
                "         <menu ref=\"reports\"/>",
                "-        <menu ref=\"modules\"/>",
                "+        <menu name=\"Modules\">",
                "+            <item name=\"Struts 2 Core\" href=\"struts2-core/index.html\"/>",
                "+            <item name=\"Struts Plugins\" href=\"struts2-plugins/index.html\"/>",
                "+            <item name=\"Struts OSGi Bundles\" href=\"struts2-osgi-bundles/index.html\"/>",
                "+        </menu>",
                "         <footer>",
                "-           <div class=\"row span12\">",
                "-               Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts",
                "-               project logos are trademarks of The Apache Software Foundation.",
                "-           </div>",
                "+            <![CDATA[<div class=\"row span12\">",
                "+            Apache Struts, Struts, Apache, the Apache feather logo, and the Apache Struts project",
                "+            logos are trademarks of The Apache Software Foundation.",
                "+            </div>]]>",
                "         </footer>"
            ],
            "changed_files": [
                "core/src/site/site.xml",
                "plugins/cdi/src/site/site.xml",
                "plugins/config-browser/src/site/site.xml",
                "plugins/convention/src/site/site.xml",
                "plugins/dwr/src/site/site.xml",
                "plugins/embeddedjsp/src/site/site.xml",
                "plugins/gxp/src/site/site.xml",
                "plugins/jasperreports/src/site/site.xml",
                "plugins/javatemplates/src/site/site.xml",
                "plugins/jfreechart/src/site/site.xml",
                "plugins/json/src/site/site.xml",
                "plugins/junit/src/site/site.xml",
                "plugins/osgi/src/site/site.xml",
                "plugins/oval/src/site/site.xml",
                "plugins/pell-multipart/src/site/site.xml",
                "plugins/plexus/src/site/site.xml",
                "plugins/portlet-tiles/src/site/site.xml",
                "plugins/portlet/src/site/site.xml",
                "plugins/rest/src/site/site.xml",
                "plugins/sitegraph/src/site/site.xml",
                "plugins/sitemesh/src/site/site.xml",
                "plugins/spring/src/site/site.xml",
                "plugins/src/site/site.xml",
                "plugins/testng/src/site/site.xml",
                "plugins/tiles/src/site/site.xml",
                "src/site/site.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: plugins/rest/src/site/site.xml",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: rest, plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "705887272356956587b23335c8bf2334e73d6cce",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1512372584,
            "hunks": 2,
            "message": "Adds missing dependency",
            "diff": [
                "diff --git a/plugins/json/pom.xml b/plugins/json/pom.xml",
                "index ccacc2960..c84fdff03 100644",
                "--- a/plugins/json/pom.xml",
                "+++ b/plugins/json/pom.xml",
                "@@ -91,2 +91,8 @@",
                "+        <dependency>",
                "+            <groupId>org.springframework</groupId>",
                "+            <artifactId>spring-web</artifactId>",
                "+            <scope>test</scope>",
                "+        </dependency>",
                "+",
                "         <dependency>",
                "diff --git a/plugins/rest/pom.xml b/plugins/rest/pom.xml",
                "index 77b8119e7..06fa959ed 100644",
                "--- a/plugins/rest/pom.xml",
                "+++ b/plugins/rest/pom.xml",
                "@@ -70,2 +70,8 @@",
                "+        <dependency>",
                "+            <groupId>org.springframework</groupId>",
                "+            <artifactId>spring-web</artifactId>",
                "+            <optional>true</optional>",
                "+        </dependency>",
                "+",
                "         <dependency>"
            ],
            "changed_files": [
                "plugins/json/pom.xml",
                "plugins/rest/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: plugins/rest/pom.xml",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: rest, plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "69d6287566f23dcfded5fdcf8f25ac14f9c257e3",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508183126,
            "hunks": 1,
            "message": "WW-4871 Reverts setMinimumFractionDigits(1) to pass rest tests",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "index ca5e7a152..97ac2506b 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "@@ -67,8 +67,11 @@ public class StringConverter extends DefaultTypeConverter {",
                "             format.setGroupingUsed(false);",
                "-            if (BigDecimal.class.isInstance(value))",
                "-                format.setMaximumFractionDigits(Integer.MAX_VALUE);",
                "-            else if (Double.class.isInstance(value))",
                "-                format.setMaximumFractionDigits(15);",
                "-            else if (Float.class.isInstance(value))",
                "-                format.setMaximumFractionDigits(7);",
                "+            if (BigDecimal.class.isInstance(value) || Double.class.isInstance(value) || Float.class.isInstance(value)) {",
                "+                format.setMinimumFractionDigits(1);",
                "+                if (BigDecimal.class.isInstance(value))",
                "+                    format.setMaximumFractionDigits(Integer.MAX_VALUE);",
                "+                else if (Double.class.isInstance(value))",
                "+                    format.setMaximumFractionDigits(15);",
                "+                else if (Float.class.isInstance(value))",
                "+                    format.setMaximumFractionDigits(7);",
                "+            }",
                "             return format.format(value);"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4871": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: rest",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4871",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4394238b7e9a61e263f2a4af1f3fd100a5a09e57",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515327573,
            "hunks": 13,
            "message": "un-deprecate TypeConversion.converter plus some improvements See WW-4906",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/annotations/TypeConversion.java b/core/src/main/java/com/opensymphony/xwork2/conversion/annotations/TypeConversion.java",
                "index 8039f97bb..6c86d4a6d 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/annotations/TypeConversion.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/annotations/TypeConversion.java",
                "@@ -84,5 +84,5 @@ import java.lang.annotation.Target;",
                "  * <td>converter</td>",
                "- * <td>DEPRECATED: either this or value</td>",
                "+ * <td>either this or value</td>",
                "  * <td>&nbsp;</td>",
                "- * <td>The class name of the TypeConverter to be used as converter.</td>",
                "+ * <td>The class or bean name of the TypeConverter to be used as converter.</td>",
                "  * </tr>",
                "@@ -91,4 +91,4 @@ import java.lang.annotation.Target;",
                "  * <td>either this or value</td>",
                "- * <td>&nbsp;</td>",
                "- * <td>The class of the TypeConverter to be used as converter. XWorkBasicConverter by default.</td>",
                "+ * <td>XWorkBasicConverter</td>",
                "+ * <td>The class of the TypeConverter to be used as converter.</td>",
                "  * </tr>",
                "@@ -183,3 +183,3 @@ public @interface TypeConversion {",
                "     /**",
                "-     * The class of the TypeConverter to be used as converter.",
                "+     * The class or bean name of the TypeConverter to be used as converter.",
                "      *",
                "@@ -187,6 +187,5 @@ public @interface TypeConversion {",
                "      *",
                "-     * @return class of the TypeConverter to be used as converter",
                "-     * @deprecated user {@link #converterClass()} instead",
                "+     * @return class or bean name of the TypeConverter to be used as converter",
                "+     * @see {@link #converterClass()}",
                "      */",
                "-    @Deprecated",
                "     String converter() default \"\";",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionAnnotationProcessor.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionAnnotationProcessor.java",
                "index 2a3786869..8021f3f92 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionAnnotationProcessor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionAnnotationProcessor.java",
                "@@ -28,2 +28,3 @@ import com.opensymphony.xwork2.conversion.annotations.TypeConversion;",
                " import com.opensymphony.xwork2.inject.Inject;",
                "+import com.opensymphony.xwork2.util.ClassLoaderUtil;",
                " import org.apache.commons.lang3.StringUtils;",
                "@@ -82,6 +83,3 @@ public class DefaultConversionAnnotationProcessor implements ConversionAnnotatio",
                "                     if (StringUtils.isNoneEmpty(tc.converter())) {",
                "-                        converterClass = Thread.currentThread().getContextClassLoader().loadClass(tc.converter());",
                "-                        //check if the converter is a type converter if it is one",
                "-                        //then just put it in the map as is. Otherwise",
                "-                        //put a value in for the type converter of the class",
                "+                        converterClass = ClassLoaderUtil.loadClass(tc.converter(), this.getClass());",
                "                     } else {",
                "@@ -92,4 +90,11 @@ public class DefaultConversionAnnotationProcessor implements ConversionAnnotatio",
                "+                    //check if the converter is a type converter if it is one",
                "+                    //then just put it in the map as is. Otherwise",
                "+                    //put a value in for the type converter of the class",
                "                     if (converterClass.isAssignableFrom(TypeConverter.class)) {",
                "-                        mapping.put(key, converterCreator.createTypeConverter(tc.converter()));",
                "+                        if (StringUtils.isNoneEmpty(tc.converter())) {",
                "+                            mapping.put(key, converterCreator.createTypeConverter(tc.converter()));",
                "+                        } else {",
                "+                            mapping.put(key, converterCreator.createTypeConverter(tc.converterClass()));",
                "+                        }",
                "                     } else {",
                "@@ -102,3 +107,3 @@ public class DefaultConversionAnnotationProcessor implements ConversionAnnotatio",
                "                     if (StringUtils.isNoneEmpty(tc.converter())) {",
                "-                        mapping.put(key, Thread.currentThread().getContextClassLoader().loadClass(tc.converter()));",
                "+                        mapping.put(key, ClassLoaderUtil.loadClass(tc.converter(), this.getClass()));",
                "                     } else {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionFileProcessor.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionFileProcessor.java",
                "index d07cf3cce..7995b7dc3 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionFileProcessor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionFileProcessor.java",
                "@@ -88,3 +88,3 @@ public class DefaultConversionFileProcessor implements ConversionFileProcessor {",
                "-                        Class converterClass = Thread.currentThread().getContextClassLoader().loadClass((String) entry.getValue());",
                "+                        Class converterClass = ClassLoaderUtil.loadClass((String) entry.getValue(), this.getClass());",
                "@@ -104,3 +104,3 @@ public class DefaultConversionFileProcessor implements ConversionFileProcessor {",
                "                     else {",
                "-                        Class _c = Thread.currentThread().getContextClassLoader().loadClass((String) entry.getValue());",
                "+                        Class _c = ClassLoaderUtil.loadClass((String) entry.getValue(), this.getClass());",
                "                         LOG.debug(\"\\t{}:{} [treated as Class {}]\", key, entry.getValue(), _c);"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/annotations/TypeConversion.java",
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionAnnotationProcessor.java",
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionFileProcessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4906": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4906",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e65d77bae1757b7306bfac8deb38704335d43779",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511626225,
            "hunks": 4,
            "message": "WW-4874 Updates parent version",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/AsyncManager.java b/core/src/main/java/com/opensymphony/xwork2/AsyncManager.java",
                "index fb6563859..5bada9c77 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/AsyncManager.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/AsyncManager.java",
                "@@ -26,3 +26,3 @@ import java.util.concurrent.Callable;",
                "  *",
                "- * @since 2.5.14",
                "+ * @since 2.6",
                "  */",
                "diff --git a/plugins/async/pom.xml b/plugins/async/pom.xml",
                "index b5e5ae02b..b92e8ad60 100644",
                "--- a/plugins/async/pom.xml",
                "+++ b/plugins/async/pom.xml",
                "@@ -26,3 +26,3 @@",
                "         <artifactId>struts2-plugins</artifactId>",
                "-        <version>2.5.14-SNAPSHOT</version>",
                "+        <version>2.6-SNAPSHOT</version>",
                "     </parent>",
                "diff --git a/plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java b/plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java",
                "index 27729d56b..3baf78fbd 100644",
                "--- a/plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java",
                "+++ b/plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java",
                "@@ -26,3 +26,3 @@ import java.util.concurrent.Executor;",
                "  *",
                "- * @since 2.5.14",
                "+ * @since 2.6",
                "  */",
                "diff --git a/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java b/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "index 4617dca3b..1e84f27f0 100644",
                "--- a/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "+++ b/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "@@ -37,3 +37,3 @@ import java.util.concurrent.atomic.AtomicInteger;",
                "  *",
                "- * @since 2.5.14",
                "+ * @since 2.6",
                "  */"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/AsyncManager.java",
                "plugins/async/pom.xml",
                "plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java",
                "plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4874": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4874",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8b7c68171e8bfe16ea57eb6ec232778f1502e067",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1509428866,
            "hunks": 1,
            "message": "WW-4871 Fixes java.text.NumberFormat.format's float to double conversion.",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "index efbfeda6b..3e038983d 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "@@ -69,2 +69,5 @@ public class StringConverter extends DefaultTypeConverter {",
                "                 format.setMaximumFractionDigits(Integer.MAX_VALUE);",
                "+                if (Float.class.isInstance(value)) {",
                "+                    value = Double.valueOf(value.toString());",
                "+                }",
                "             }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4871": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4871",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "29b29a9c64aa4700b0f3c52f250ef27a9dc67516",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515573554,
            "hunks": 0,
            "message": "Merge pull request #196 from lukaszlenart/init-like-a-boss WW-4905: Allows Initializable interface on implementing class instead of interface",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4905": ""
            },
            "ghissue_refs": {
                "196": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request, allow, implement",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4905",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 196",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "81a7fdb47fd1c74d2fbc9660509af6ccfdd28813",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1509107608,
            "hunks": 0,
            "message": "Merge pull request #178 from lukaszlenart/text-provider-resurection WW-4884: Allow define just a TextProvider",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4884": ""
            },
            "ghissue_refs": {
                "178": "Add alternative way for custom TextProvider apache/struts-examples#18"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request, allow",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4884",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 178",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c3b85aef7c2cacc58432fd94ec52a512177439bc",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1516087156,
            "hunks": 0,
            "message": "Merge pull request #202 from lukaszlenart/limitable-extendable WW-4909: Renames a constant and adds a test",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4909": ""
            },
            "ghissue_refs": {
                "202": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4909",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 202",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d5c71968dab132b713885fdca1b4036af1b5ddcb",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1509897663,
            "hunks": 0,
            "message": "Merge pull request #180 from yasserzamani/WW-4846-tests WW-4846 Adds unit tests",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4846": ""
            },
            "ghissue_refs": {
                "180": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4846",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 180",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "29e1847f64088b1d172631fbc5253b0f2e40144f",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1516013446,
            "hunks": 0,
            "message": "Merge pull request #199 from yasserzamani/WW-4906  fix conversion by annotation and WW-4906",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4906": ""
            },
            "ghissue_refs": {
                "199": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request, version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4906",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 199",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e1767d9525a16d782a1a0c07f40fbb926fae3c79",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514881644,
            "hunks": 8,
            "message": "Moves Initializable interface into implementing class instead of interface",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/ConversionPropertiesProcessor.java b/core/src/main/java/com/opensymphony/xwork2/conversion/ConversionPropertiesProcessor.java",
                "index d9e96fc5b..5fc6dd206 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/ConversionPropertiesProcessor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/ConversionPropertiesProcessor.java",
                "@@ -20,4 +20,2 @@ package com.opensymphony.xwork2.conversion;",
                "-import com.opensymphony.xwork2.inject.Initializable;",
                "-",
                " /**",
                "@@ -25,3 +23,3 @@ import com.opensymphony.xwork2.inject.Initializable;",
                "  */",
                "-public interface ConversionPropertiesProcessor extends Initializable {",
                "+public interface ConversionPropertiesProcessor {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionPropertiesProcessor.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionPropertiesProcessor.java",
                "index a76394c68..a665c9818 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionPropertiesProcessor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionPropertiesProcessor.java",
                "@@ -25,2 +25,3 @@ import com.opensymphony.xwork2.conversion.TypeConverterCreator;",
                " import com.opensymphony.xwork2.conversion.TypeConverterHolder;",
                "+import com.opensymphony.xwork2.inject.Initializable;",
                " import com.opensymphony.xwork2.inject.Inject;",
                "@@ -36,3 +37,3 @@ import java.util.Properties;",
                "-public class DefaultConversionPropertiesProcessor implements ConversionPropertiesProcessor {",
                "+public class DefaultConversionPropertiesProcessor implements ConversionPropertiesProcessor, Initializable {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java b/core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java",
                "index d945e0a26..ca11235af 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java",
                "@@ -24,2 +24,3 @@ import com.opensymphony.xwork2.XWorkException;",
                " import com.opensymphony.xwork2.config.ConfigurationException;",
                "+import com.opensymphony.xwork2.inject.Initializable;",
                " import com.opensymphony.xwork2.inject.Inject;",
                "@@ -46,3 +47,3 @@ import java.util.zip.ZipInputStream;",
                "  */",
                "-public class DefaultValidatorFactory implements ValidatorFactory {",
                "+public class DefaultValidatorFactory implements ValidatorFactory, Initializable {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/validator/ValidatorFactory.java b/core/src/main/java/com/opensymphony/xwork2/validator/ValidatorFactory.java",
                "index 5c3ce7ed4..8510fe6bb 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/validator/ValidatorFactory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/validator/ValidatorFactory.java",
                "@@ -20,4 +20,2 @@ package com.opensymphony.xwork2.validator;",
                "-import com.opensymphony.xwork2.inject.Initializable;",
                "-",
                " /**",
                "@@ -229,3 +227,3 @@ import com.opensymphony.xwork2.inject.Initializable;",
                "  */",
                "-public interface ValidatorFactory extends Initializable {",
                "+public interface ValidatorFactory {"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/ConversionPropertiesProcessor.java",
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionPropertiesProcessor.java",
                "core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java",
                "core/src/main/java/com/opensymphony/xwork2/validator/ValidatorFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: implement",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ce5492ddf286ec40e687d077406e0d4ab492f4f6",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510413880,
            "hunks": 0,
            "message": "Merge pull request #184 from sdutry/WW-4713-deprecation-phase WW-4713 Added deprecation warnings as preparation to drop searchValue\u00e2\u0080\u00a6",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4713": ""
            },
            "ghissue_refs": {
                "184": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4713",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 184",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "97012c78a9a5fe795d087a6f80ab76a63792944d",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517296624,
            "hunks": 0,
            "message": "Merge pull request #189 from lukaszlenart/upgrade-spring WW-4899: upgrade Spring",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4899": ""
            },
            "ghissue_refs": {
                "189": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: upgrade, request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4899",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 189",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6e96f11debc4fa52c65a12b28fea82b514b96abd",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508656904,
            "hunks": 0,
            "message": "Merge pull request #175 from lukaszlenart/act-of-law WW-4877: adds missing header with license",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4877": ""
            },
            "ghissue_refs": {
                "175": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4877",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 175",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8eb282f76b3995fcce965dc299a69688c64aea1e",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514815205,
            "hunks": 0,
            "message": "Merge pull request #195 from lukaszlenart/fix-prefix-based-factory WW-4903: fixes PrefixBasedActionProxyFactory",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4903": ""
            },
            "ghissue_refs": {
                "195": "REST: adds a note about PrefixActionProxyFactory apache/struts-site#90"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: base, request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4903",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 195",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9bf89f82dc436a59bd23efc3834e1d9c4b3a0d29",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1516016307,
            "hunks": 0,
            "message": "Merge pull request #200 from HedjuHor/BeanValidation_GroupingConstraints WW-4907 support JSR 303 Validation Groups in BeanValidation-Plugin",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4907": ""
            },
            "ghissue_refs": {
                "200": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin, request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4907",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 200",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0fb84fa055cfd7d94fdb93353aa984e3c51911f8",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510246992,
            "hunks": 0,
            "message": "Merge pull request #181 from sdutry/WW-4888 WW-4888 add escaping possibilities to text-tag",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4888": ""
            },
            "ghissue_refs": {
                "181": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4888",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 181",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "20a7b6503ff58a3e1e8bdabc07dd61cf36254cca",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517404697,
            "hunks": 0,
            "message": "Merge pull request #207 from lukaszlenart/sessionless WW-4741: Do not create session",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4741": ""
            },
            "ghissue_refs": {
                "207": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4741",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 207",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7c7d5be4414ec472633bae817fd5a07ee790e1e3",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511853313,
            "hunks": 0,
            "message": "Merge pull request #187 from lukaszlenart/jackson-5 WW-4892 WW-4893: Use Jackson to handle JSON request",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4892": "",
                "WW-4893": ""
            },
            "ghissue_refs": {
                "187": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request, jackson",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4892, WW-4893",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 187",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9beb94013602e443fd90b82b9b9afb416c0bf3e3",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1516428572,
            "hunks": 0,
            "message": "Merge pull request #201 from HedjuHor/WW-4891 WW-4891 Debug tag should not display anything when not in dev mode",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4891": ""
            },
            "ghissue_refs": {
                "201": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4891",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 201",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "278a2112b961cacc53a001afe54ab33b8d98d922",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513239508,
            "hunks": 0,
            "message": "Merge pull request #190 from yasserzamani/WW-4901 WW-4901 Decouples from URL.openConnection implementation of container",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4901": ""
            },
            "ghissue_refs": {
                "190": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request, implement",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4901",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 190",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d35ab6d9451e3521e9c4e2b1c9a16ba367493499",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510055299,
            "hunks": 0,
            "message": "Merge pull request #172 from yasserzamani/WW-4869 WW-4869 Fixes JarEntryRevision",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4869": ""
            },
            "ghissue_refs": {
                "172": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4869",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 172",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5e4b38598420d83b53592860c04d9fd4164c720f",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515499122,
            "hunks": 11,
            "message": "support Constraints Group in BeanValidation-Plugin",
            "diff": [
                "diff --git a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidateGroup.java b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidateGroup.java",
                "new file mode 100644",
                "index 000000000..4ca0b37cb",
                "--- /dev/null",
                "+++ b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidateGroup.java",
                "@@ -0,0 +1,50 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts.beanvalidation.constraints;",
                "+",
                "+import java.lang.annotation.ElementType;",
                "+import java.lang.annotation.Retention;",
                "+import java.lang.annotation.RetentionPolicy;",
                "+import java.lang.annotation.Target;",
                "+",
                "+/**",
                "+ * Validation with Group Constrains on execution method (Action)",
                "+ * <p>",
                "+ * Example, Validate with on special group",
                "+ * </p>",
                "+ * <pre>",
                "+ *",
                "+ *  {@literal @}ValidateGroup(CarChecks.class)",
                "+ *  {@literal @}Action...",
                "+ * </pre>",
                "+ * <p>",
                "+ * <p>",
                "+ * Example, Validate with severals special group",
                "+ * </p>",
                "+ * <pre>",
                "+ *  {@literal @}ValidateGroup(Default.class, CarChecks.class, DriverChecks.class)",
                "+ *  {@literal @}Action...",
                "+ * </pre>",
                "+ */",
                "+@Target({ElementType.METHOD})",
                "+@Retention(RetentionPolicy.RUNTIME)",
                "+public @interface ValidateGroup {",
                "+",
                "+    Class<?>[] value() default {};",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "index 12629c901..bdbca6a2f 100644",
                "--- a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "+++ b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "@@ -29,6 +29,7 @@ import com.opensymphony.xwork2.validator.ValidatorContext;",
                " import org.apache.commons.lang3.BooleanUtils;",
                "-import org.apache.commons.lang3.reflect.MethodUtils;",
                " import org.apache.commons.lang3.StringUtils;",
                "+import org.apache.commons.lang3.reflect.MethodUtils;",
                " import org.apache.logging.log4j.LogManager;",
                " import org.apache.logging.log4j.Logger;",
                "+import org.apache.struts.beanvalidation.constraints.ValidateGroup;",
                " import org.apache.struts.beanvalidation.validation.constant.ValidatorConstants;",
                "@@ -39,2 +40,3 @@ import javax.validation.Validator;",
                " import java.lang.reflect.Method;",
                "+import java.util.Arrays;",
                " import java.util.Set;",
                "@@ -97,2 +99,3 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "         }",
                "+        Class<?>[] validationGroup = getValidationGroups(action, methodName);",
                "@@ -101,3 +104,3 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "             // performing bean validation on action",
                "-            performBeanValidation(action, validator);",
                "+            performBeanValidation(action, validator, validationGroup);",
                "         }",
                "@@ -107,5 +110,10 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "-    protected void performBeanValidation(Object action, Validator validator) {",
                "+    protected Class<?>[] getValidationGroups(Object action, String methodName) throws NoSuchMethodException {",
                "+        ValidateGroup validateGroup = MethodUtils.getAnnotation(getActionMethod(action.getClass(), methodName), ValidateGroup.class, true, true);",
                "+        return validateGroup == null ? new Class[]{} : validateGroup.value();",
                "+    }",
                "+",
                "+    protected void performBeanValidation(Object action, Validator validator, Class<?>[] groups) {",
                "-        LOG.trace(\"Initiating bean validation..\");",
                "+        LOG.trace(\"Initiating bean validation.. with groups [{}]\", Arrays.toString(groups));",
                "@@ -116,6 +124,6 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "             Object model = (Object)((ModelDriven<?>) action).getModel();",
                "-            constraintViolations = validator.validate(model);",
                "+            constraintViolations = validator.validate(model, groups);",
                "         } else {",
                "             LOG.trace(\"Performing validation on action..\");",
                "-            constraintViolations = validator.validate(action);",
                "+            constraintViolations = validator.validate(action, groups);",
                "         }",
                "@@ -126,3 +134,3 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "     @SuppressWarnings(\"nls\")",
                "-    private void addBeanValidationErrors(Set<ConstraintViolation<Object>> constraintViolations, Object action) {",
                "+    protected void addBeanValidationErrors(Set<ConstraintViolation<Object>> constraintViolations, Object action) {",
                "         if (constraintViolations != null) {"
            ],
            "changed_files": [
                "plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidateGroup.java",
                "plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "3fa7aa92174972427900c9e13a265782de19944f",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1507873251,
            "hunks": 0,
            "message": "Merge pull request #167 from yasserzamani/WW-4034 WW-4034 Allows to use custom JSONwriter",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4034": ""
            },
            "ghissue_refs": {
                "167": "[WW-5173] - Attempt to fix DI behaviour for custom cache factories #573"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request, allow, custom",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4034",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 167",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8b608e334aecdce558e9d98531e3ffa8c5538905",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513417492,
            "hunks": 0,
            "message": "Merge pull request #192 from yasserzamani/WW-4873_2 WW-4873 Makes ActionInvocation not serializable and InvocationSessionStore$InvocationContext transient",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4873": ""
            },
            "ghissue_refs": {
                "192": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4873",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 192",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d4b620d06d17888532c82fecb39b43869336fa94",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513171825,
            "hunks": 0,
            "message": "Merge pull request #191 from yasserzamani/WW-4900 WW-4900 Makes BackgroundProcess transient",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4900": ""
            },
            "ghissue_refs": {
                "191": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4900",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 191",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b5e878e4212b0f4ef30b7bdf617a17819cc5baea",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511289851,
            "hunks": 20,
            "message": "replace String.valueOf with Objects.toString to better handle null values in java configuration",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/config/entities/ConstantConfig.java b/core/src/main/java/org/apache/struts2/config/entities/ConstantConfig.java",
                "index 00f3a1338..9f191e4b5 100644",
                "--- a/core/src/main/java/org/apache/struts2/config/entities/ConstantConfig.java",
                "+++ b/core/src/main/java/org/apache/struts2/config/entities/ConstantConfig.java",
                "@@ -25,2 +25,3 @@ import java.util.Locale;",
                " import java.util.Map;",
                "+import java.util.Objects;",
                " import java.util.Set;",
                "@@ -159,11 +160,11 @@ public class ConstantConfig {",
                "-        map.put(StrutsConstants.STRUTS_DEVMODE, String.valueOf(devMode));",
                "-        map.put(StrutsConstants.STRUTS_I18N_RELOAD, String.valueOf(i18nReload));",
                "+        map.put(StrutsConstants.STRUTS_DEVMODE, Objects.toString(devMode, null));",
                "+        map.put(StrutsConstants.STRUTS_I18N_RELOAD, Objects.toString(i18nReload, null));",
                "         map.put(StrutsConstants.STRUTS_I18N_ENCODING, i18nEncoding);",
                "-        map.put(StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, String.valueOf(configurationXmlReload));",
                "+        map.put(StrutsConstants.STRUTS_CONFIGURATION_XML_RELOAD, Objects.toString(configurationXmlReload, null));",
                "         map.put(StrutsConstants.STRUTS_ACTION_EXTENSION, StringUtils.join(actionExtension, ','));",
                "         map.put(StrutsConstants.STRUTS_ACTION_EXCLUDE_PATTERN, StringUtils.join(actionExcludePattern, ','));",
                "-        map.put(StrutsConstants.STRUTS_TAG_ALTSYNTAX, String.valueOf(tagAltSyntax));",
                "-        map.put(StrutsConstants.STRUTS_URL_HTTP_PORT, String.valueOf(urlHttpPort));",
                "-        map.put(StrutsConstants.STRUTS_URL_HTTPS_PORT, String.valueOf(urlHttpsPort));",
                "+        map.put(StrutsConstants.STRUTS_TAG_ALTSYNTAX, Objects.toString(tagAltSyntax, null));",
                "+        map.put(StrutsConstants.STRUTS_URL_HTTP_PORT, Objects.toString(urlHttpPort, null));",
                "+        map.put(StrutsConstants.STRUTS_URL_HTTPS_PORT, Objects.toString(urlHttpsPort, null));",
                "         map.put(StrutsConstants.STRUTS_URL_INCLUDEPARAMS, urlIncludeParams);",
                "@@ -179,7 +180,7 @@ public class ConstantConfig {",
                "         map.put(StrutsConstants.STRUTS_LOCALE, locale == null ? null : locale.getLanguage());",
                "-        map.put(StrutsConstants.STRUTS_DISPATCHER_PARAMETERSWORKAROUND, String.valueOf(dispatcherParametersWorkaround));",
                "+        map.put(StrutsConstants.STRUTS_DISPATCHER_PARAMETERSWORKAROUND, Objects.toString(dispatcherParametersWorkaround, null));",
                "         map.put(StrutsConstants.STRUTS_FREEMARKER_MANAGER_CLASSNAME, beanConfToString(freemarkerManagerClassname));",
                "         map.put(StrutsConstants.STRUTS_FREEMARKER_TEMPLATES_CACHE_UPDATE_DELAY, freemarkerTemplatesCacheUpdateDelay);",
                "-        map.put(StrutsConstants.STRUTS_FREEMARKER_BEANWRAPPER_CACHE, String.valueOf(freemarkerBeanwrapperCache));",
                "-        map.put(StrutsConstants.STRUTS_FREEMARKER_MRU_MAX_STRONG_SIZE, String.valueOf(freemarkerMruMaxStrongSize));",
                "+        map.put(StrutsConstants.STRUTS_FREEMARKER_BEANWRAPPER_CACHE, Objects.toString(freemarkerBeanwrapperCache, null));",
                "+        map.put(StrutsConstants.STRUTS_FREEMARKER_MRU_MAX_STRONG_SIZE, Objects.toString(freemarkerMruMaxStrongSize, null));",
                "         map.put(StrutsConstants.STRUTS_VELOCITY_MANAGER_CLASSNAME, beanConfToString(velocityManagerClassname));",
                "@@ -191,13 +192,13 @@ public class ConstantConfig {",
                "         map.put(StrutsConstants.STRUTS_UI_THEME_EXPANSION_TOKEN, uiThemeExpansionToken);",
                "-        map.put(StrutsConstants.STRUTS_MULTIPART_MAXSIZE, String.valueOf(multipartMaxSize));",
                "+        map.put(StrutsConstants.STRUTS_MULTIPART_MAXSIZE, Objects.toString(multipartMaxSize, null));",
                "         map.put(StrutsConstants.STRUTS_MULTIPART_SAVEDIR, multipartSaveDir);",
                "-        map.put(StrutsConstants.STRUTS_MULTIPART_BUFFERSIZE, String.valueOf(multipartBufferSize));",
                "+        map.put(StrutsConstants.STRUTS_MULTIPART_BUFFERSIZE, Objects.toString(multipartBufferSize, null));",
                "         map.put(StrutsConstants.STRUTS_MULTIPART_PARSER, beanConfToString(multipartParser));",
                "-        map.put(StrutsConstants.STRUTS_MULTIPART_ENABLED, String.valueOf(multipartEnabled));",
                "-        map.put(StrutsConstants.STRUTS_MULTIPART_VALIDATION_REGEX, String.valueOf(multipartValidationRegex));",
                "+        map.put(StrutsConstants.STRUTS_MULTIPART_ENABLED, Objects.toString(multipartEnabled, null));",
                "+        map.put(StrutsConstants.STRUTS_MULTIPART_VALIDATION_REGEX, Objects.toString(multipartValidationRegex, null));",
                "         map.put(StrutsConstants.STRUTS_OBJECTFACTORY_SPRING_AUTOWIRE, objectFactorySpringAutoWire);",
                "-        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_SPRING_AUTOWIRE_ALWAYS_RESPECT, String.valueOf(objectFactorySpringAutoWireAlwaysRespect));",
                "-        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_SPRING_USE_CLASS_CACHE, String.valueOf(objectFactorySpringUseClassCache));",
                "-        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_SPRING_ENABLE_AOP_SUPPORT, String.valueOf(objectFactorySpringEnableAopSupport));",
                "-        map.put(StrutsConstants.STRUTS_XSLT_NOCACHE, String.valueOf(xsltNocache));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_SPRING_AUTOWIRE_ALWAYS_RESPECT, Objects.toString(objectFactorySpringAutoWireAlwaysRespect, null));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_SPRING_USE_CLASS_CACHE, Objects.toString(objectFactorySpringUseClassCache, null));",
                "+        map.put(StrutsConstants.STRUTS_OBJECTFACTORY_SPRING_ENABLE_AOP_SUPPORT, Objects.toString(objectFactorySpringEnableAopSupport, null));",
                "+        map.put(StrutsConstants.STRUTS_XSLT_NOCACHE, Objects.toString(xsltNocache, null));",
                "         map.put(StrutsConstants.STRUTS_CUSTOM_PROPERTIES, StringUtils.join(customProperties, ','));",
                "@@ -206,11 +207,11 @@ public class ConstantConfig {",
                "         map.put(StrutsConstants.PREFIX_BASED_MAPPER_CONFIGURATION, StringUtils.join(mapperPrefixMapping, ','));",
                "-        map.put(StrutsConstants.STRUTS_SERVE_STATIC_CONTENT, String.valueOf(serveStatic));",
                "-        map.put(StrutsConstants.STRUTS_SERVE_STATIC_BROWSER_CACHE, String.valueOf(serveStaticBrowserCache));",
                "-        map.put(StrutsConstants.STRUTS_ENABLE_DYNAMIC_METHOD_INVOCATION, String.valueOf(enableDynamicMethodInvocation));",
                "-        map.put(StrutsConstants.STRUTS_ENABLE_SLASHES_IN_ACTION_NAMES, String.valueOf(enableSlashesInActionNames));",
                "+        map.put(StrutsConstants.STRUTS_SERVE_STATIC_CONTENT, Objects.toString(serveStatic, null));",
                "+        map.put(StrutsConstants.STRUTS_SERVE_STATIC_BROWSER_CACHE, Objects.toString(serveStaticBrowserCache, null));",
                "+        map.put(StrutsConstants.STRUTS_ENABLE_DYNAMIC_METHOD_INVOCATION, Objects.toString(enableDynamicMethodInvocation, null));",
                "+        map.put(StrutsConstants.STRUTS_ENABLE_SLASHES_IN_ACTION_NAMES, Objects.toString(enableSlashesInActionNames, null));",
                "         map.put(StrutsConstants.STRUTS_MAPPER_COMPOSITE, StringUtils.join(mapperComposite, ','));",
                "         map.put(StrutsConstants.STRUTS_ACTIONPROXYFACTORY, beanConfToString(actionProxyFactory));",
                "-        map.put(StrutsConstants.STRUTS_FREEMARKER_WRAPPER_ALT_MAP, String.valueOf(freemarkerWrapperAltMap));",
                "+        map.put(StrutsConstants.STRUTS_FREEMARKER_WRAPPER_ALT_MAP, Objects.toString(freemarkerWrapperAltMap, null));",
                "         map.put(StrutsConstants.STRUTS_XWORKCONVERTER, beanConfToString(xworkConverter));",
                "-        map.put(StrutsConstants.STRUTS_ALWAYS_SELECT_FULL_NAMESPACE, String.valueOf(mapperAlwaysSelectFullNamespace));",
                "+        map.put(StrutsConstants.STRUTS_ALWAYS_SELECT_FULL_NAMESPACE, Objects.toString(mapperAlwaysSelectFullNamespace, null));",
                "         map.put(StrutsConstants.STRUTS_XWORKTEXTPROVIDER, beanConfToString(xworkTextProvider));",
                "@@ -219,3 +220,3 @@ public class ConstantConfig {",
                "         map.put(StrutsConstants.STRUTS_ID_PARAMETER_NAME, mapperIdParameterName);",
                "-        map.put(StrutsConstants.STRUTS_ALLOW_STATIC_METHOD_ACCESS, String.valueOf(ognlAllowStaticMethodAccess));",
                "+        map.put(StrutsConstants.STRUTS_ALLOW_STATIC_METHOD_ACCESS, Objects.toString(ognlAllowStaticMethodAccess, null));",
                "         map.put(StrutsConstants.STRUTS_ACTIONVALIDATORMANAGER, beanConfToString(actionValidatorManager));",
                "@@ -227,7 +228,7 @@ public class ConstantConfig {",
                "         map.put(StrutsConstants.STRUTS_UNKNOWN_HANDLER_MANAGER, beanConfToString(unknownHandlerManager));",
                "-        map.put(StrutsConstants.STRUTS_EL_THROW_EXCEPTION, String.valueOf(elThrowExceptionOnFailure));",
                "-        map.put(StrutsConstants.STRUTS_LOG_MISSING_PROPERTIES, String.valueOf(ognlLogMissingProperties));",
                "-        map.put(StrutsConstants.STRUTS_ENABLE_OGNL_EXPRESSION_CACHE, String.valueOf(ognlEnableExpressionCache));",
                "-        map.put(StrutsConstants.STRUTS_ENABLE_OGNL_EVAL_EXPRESSION, String.valueOf(ognlEnableOGNLEvalExpression));",
                "-        map.put(StrutsConstants.STRUTS_DISABLE_REQUEST_ATTRIBUTE_VALUE_STACK_LOOKUP, String.valueOf(disableRequestAttributeValueStackLookup));",
                "+        map.put(StrutsConstants.STRUTS_EL_THROW_EXCEPTION, Objects.toString(elThrowExceptionOnFailure, null));",
                "+        map.put(StrutsConstants.STRUTS_LOG_MISSING_PROPERTIES, Objects.toString(ognlLogMissingProperties, null));",
                "+        map.put(StrutsConstants.STRUTS_ENABLE_OGNL_EXPRESSION_CACHE, Objects.toString(ognlEnableExpressionCache, null));",
                "+        map.put(StrutsConstants.STRUTS_ENABLE_OGNL_EVAL_EXPRESSION, Objects.toString(ognlEnableOGNLEvalExpression, null));",
                "+        map.put(StrutsConstants.STRUTS_DISABLE_REQUEST_ATTRIBUTE_VALUE_STACK_LOOKUP, Objects.toString(disableRequestAttributeValueStackLookup, null));",
                "         map.put(StrutsConstants.STRUTS_URL_HELPER, beanConfToString(viewUrlHelper));",
                "@@ -238,3 +239,3 @@ public class ConstantConfig {",
                "         map.put(StrutsConstants.STRUTS_CONVERTER_STRING, beanConfToString(converterString));",
                "-        map.put(StrutsConstants.STRUTS_HANDLE_EXCEPTION, String.valueOf(handleException));",
                "+        map.put(StrutsConstants.STRUTS_HANDLE_EXCEPTION, Objects.toString(handleException, null));",
                "         map.put(StrutsConstants.STRUTS_CONVERTER_PROPERTIES_PROCESSOR, beanConfToString(converterPropertiesProcessor));",
                "@@ -245,8 +246,8 @@ public class ConstantConfig {",
                "         map.put(StrutsConstants.STRUTS_EXPRESSION_PARSER, beanConfToString(expressionParser));",
                "-        map.put(StrutsConstants.STRUTS_ALLOWED_ACTION_NAMES, String.valueOf(allowedActionNames));",
                "+        map.put(StrutsConstants.STRUTS_ALLOWED_ACTION_NAMES, Objects.toString(allowedActionNames, null));",
                "         map.put(StrutsConstants.STRUTS_DEFAULT_ACTION_NAME, defaultActionName);",
                "-        map.put(StrutsConstants.STRUTS_ALLOWED_METHOD_NAMES, String.valueOf(allowedMethodNames));",
                "+        map.put(StrutsConstants.STRUTS_ALLOWED_METHOD_NAMES, Objects.toString(allowedMethodNames, null));",
                "         map.put(StrutsConstants.STRUTS_DEFAULT_METHOD_NAME, defaultMethodName);",
                "-        map.put(StrutsConstants.STRUTS_MAPPER_ACTION_PREFIX_ENABLED, String.valueOf(mapperActionPrefixEnabled));",
                "-        map.put(StrutsConstants.STRUTS_MAPPER_ACTION_PREFIX_CROSSNAMESPACES, String.valueOf(mapperActionPrefixCrossNamespaces));",
                "+        map.put(StrutsConstants.STRUTS_MAPPER_ACTION_PREFIX_ENABLED, Objects.toString(mapperActionPrefixEnabled, null));",
                "+        map.put(StrutsConstants.STRUTS_MAPPER_ACTION_PREFIX_CROSSNAMESPACES, Objects.toString(mapperActionPrefixCrossNamespaces, null));",
                "         map.put(StrutsConstants.DEFAULT_TEMPLATE_TYPE_CONFIG_KEY, uiTemplateSuffix);",
                "@@ -266,3 +267,3 @@ public class ConstantConfig {",
                "         map.put(StrutsConstants.STRUTS_LOCALIZED_TEXT_PROVIDER, beanConfToString(localizedTextProvider));",
                "-        map.put(StrutsConstants.STRUTS_DISALLOW_PROXY_MEMBER_ACCESS, String.valueOf(disallowProxyMemberAccess));",
                "+        map.put(StrutsConstants.STRUTS_DISALLOW_PROXY_MEMBER_ACCESS, Objects.toString(disallowProxyMemberAccess, null));"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/config/entities/ConstantConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: XML",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "f5f53a9f822547b6a11f8435007ab25f4e4be512",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510247111,
            "hunks": 0,
            "message": "Merge pull request #173 from yasserzamani/WW-4871 WW-4871 Fixes StringConverter and improves it's tests",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4871": ""
            },
            "ghissue_refs": {
                "173": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4871",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 173",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "77cbafb74d02377995783302551a1f04aee440ee",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515316708,
            "hunks": 5,
            "message": "fix conversion by annotation",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionAnnotationProcessor.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionAnnotationProcessor.java",
                "index bfe355b3e..2a3786869 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionAnnotationProcessor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionAnnotationProcessor.java",
                "@@ -71,3 +71,3 @@ public class DefaultConversionAnnotationProcessor implements ConversionAnnotatio",
                "                 //for properties of classes",
                "-                else if (tc.rule() != ConversionRule.ELEMENT || tc.rule() == ConversionRule.KEY || tc.rule() == ConversionRule.COLLECTION) {",
                "+                else if (tc.rule() != ConversionRule.ELEMENT && tc.rule() != ConversionRule.KEY && tc.rule() != ConversionRule.COLLECTION) {",
                "                     if (StringUtils.isNoneEmpty(tc.converter())) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java",
                "index ac4b611b7..07358887b 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java",
                "@@ -502,11 +502,28 @@ public class XWorkConverter extends DefaultTypeConverter {",
                "                     TypeConversion tc = (TypeConversion) annotation;",
                "-                    if (mapping.containsKey(tc.key())) {",
                "-                        break;",
                "-                    }",
                "                     String key = tc.key();",
                "-                    // Default to the property name",
                "+                    // Default to the property name with prefix",
                "                     if (StringUtils.isEmpty(key)) {",
                "                         key = AnnotationUtils.resolvePropertyName(method);",
                "+                        switch (tc.rule()) {",
                "+                            case COLLECTION:",
                "+                                key = DefaultObjectTypeDeterminer.DEPRECATED_ELEMENT_PREFIX + key;",
                "+                                break;",
                "+                            case CREATE_IF_NULL:",
                "+                                key = DefaultObjectTypeDeterminer.CREATE_IF_NULL_PREFIX + key;",
                "+                                break;",
                "+                            case ELEMENT:",
                "+                                key = DefaultObjectTypeDeterminer.ELEMENT_PREFIX + key;",
                "+                                break;",
                "+                            case KEY:",
                "+                                key = DefaultObjectTypeDeterminer.KEY_PREFIX + key;",
                "+                                break;",
                "+                            case KEY_PROPERTY:",
                "+                                key = DefaultObjectTypeDeterminer.KEY_PROPERTY_PREFIX + key;",
                "+                                break;",
                "+                        }",
                "                         LOG.debug(\"Retrieved key [{}] from method name [{}]\", key, method.getName());",
                "                     }",
                "+                    if (mapping.containsKey(key)) {",
                "+                        break;",
                "+                    }",
                "                     annotationProcessor.process(mapping, tc, key);"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionAnnotationProcessor.java",
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "9b892cc7fd86b3d0be55f21d63d4dd455612a1bb",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517305629,
            "hunks": 0,
            "message": "Merge pull request #206 from lukaszlenart/scan-deeper WW-4912: scan package-info and class at the same time",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4912": ""
            },
            "ghissue_refs": {
                "206": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4912",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 206",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "09ede581508f317ff5e70df484c302facb44f2cf",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510554381,
            "hunks": 0,
            "message": "Merge pull request #185 from yasserzamani/WW-4876-improvement WW-4876 WW-4841 Parses validators after all injections done",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4876": "",
                "WW-4841": ""
            },
            "ghissue_refs": {
                "185": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4876, WW-4841",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 185",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e9fe38608acf7f570e6494849f90a806cfce7fe0",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508831715,
            "hunks": 0,
            "message": "Merge pull request #176 from lukaszlenart/multipart-regex WW-4862: Multipart regex",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4862": ""
            },
            "ghissue_refs": {
                "176": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4862",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 176",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f803ddb16e1ccb04c8ebf5381d647e9ae08744c8",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515172121,
            "hunks": 0,
            "message": "Merge pull request #197 from sdutry/formatting-changes Minor Formatting changes",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "197": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 197",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7116ac8801582f593f6d08bb96cb20b232955362",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514478927,
            "hunks": 1,
            "message": "WW-4903 Uses StrutsActionProxyFactory as a default factory",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java b/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "index f6ec48337..03052ec6a 100644",
                "--- a/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "+++ b/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "@@ -61,3 +61,3 @@ import java.util.Set;",
                "  */",
                "-public class PrefixBasedActionProxyFactory extends DefaultActionProxyFactory implements Initializable {",
                "+public class PrefixBasedActionProxyFactory extends StrutsActionProxyFactory implements Initializable {"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4903": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: base",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4903",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "66ae66141362e3fd1c3db26149e15619f6c20fcb",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1509024492,
            "hunks": 1,
            "message": "WW-4871 Drops setMinimumFractionDigits",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "index 8243e0860..efbfeda6b 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "@@ -68,3 +68,2 @@ public class StringConverter extends DefaultTypeConverter {",
                "             if (BigDecimal.class.isInstance(value) || Double.class.isInstance(value) || Float.class.isInstance(value)) {",
                "-                format.setMinimumFractionDigits(1);",
                "                 format.setMaximumFractionDigits(Integer.MAX_VALUE);"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4871": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4871",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "15e6be1d66be7bc60d26b305dcf768e540900346",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514474588,
            "hunks": 3,
            "message": "WW-4903 Drops injecting defined factory to avoid mapping exception",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java b/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "index c522d1a6d..6810abb89 100644",
                "--- a/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "+++ b/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "@@ -62,3 +62,2 @@ public class PrefixBasedActionProxyFactory extends DefaultActionProxyFactory {",
                "     private Map<String, ActionProxyFactory> actionProxyFactories = new HashMap<>();",
                "-    private ActionProxyFactory defaultFactory;",
                "@@ -69,7 +68,2 @@ public class PrefixBasedActionProxyFactory extends DefaultActionProxyFactory {",
                "-    @Inject(StrutsConstants.STRUTS_ACTIONPROXYFACTORY)",
                "-    public void setActionProxyFactory(ActionProxyFactory factory) {",
                "-        this.defaultFactory = factory;",
                "-    }",
                "-",
                "     @Inject(StrutsConstants.PREFIX_BASED_MAPPER_CONFIGURATION)",
                "@@ -108,4 +102,4 @@ public class PrefixBasedActionProxyFactory extends DefaultActionProxyFactory {",
                "         }",
                "-        LOG.debug(\"Cannot find any matching ActionProxyFactory, falling back to [{}]\", defaultFactory);",
                "-        return defaultFactory.createActionProxy(namespace, actionName, methodName, extraContext, executeResult, cleanupContext);",
                "+        LOG.debug(\"Cannot find any matching ActionProxyFactory, falling back to [{}]\", super.getClass().getName());",
                "+        return super.createActionProxy(namespace, actionName, methodName, extraContext, executeResult, cleanupContext);",
                "     }"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4903": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: base",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4903",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b60425e5348ad0b4e503e442594417d93dd61856",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1509902851,
            "hunks": 1,
            "message": "WW-4871 Documents our manual jdk fix by a TODO",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "index 3e038983d..f7ad4ead4 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "@@ -69,2 +69,3 @@ public class StringConverter extends DefaultTypeConverter {",
                "                 format.setMaximumFractionDigits(Integer.MAX_VALUE);",
                "+                // TODO: delete this if statement when jdk fixed java.text.NumberFormat.format's behavior with Float",
                "                 if (Float.class.isInstance(value)) {"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4871": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4871",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "17b598433db28681344b65d10436ccac5f1fff54",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1516313425,
            "hunks": 6,
            "message": "WW-4891 PrepareOperations overrideDevMode for explicitly switch on for this action only",
            "diff": [
                "diff --git a/apps/showcase/src/main/java/org/apache/struts2/showcase/tag/nonui/debugtag/DebugTagAction.java b/apps/showcase/src/main/java/org/apache/struts2/showcase/tag/nonui/debugtag/DebugTagAction.java",
                "new file mode 100644",
                "index 000000000..e3c268150",
                "--- /dev/null",
                "+++ b/apps/showcase/src/main/java/org/apache/struts2/showcase/tag/nonui/debugtag/DebugTagAction.java",
                "@@ -0,0 +1,30 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.showcase.tag.nonui.debugtag;",
                "+",
                "+import com.opensymphony.xwork2.ActionSupport;",
                "+import org.apache.struts2.dispatcher.PrepareOperations;",
                "+",
                "+public class DebugTagAction extends ActionSupport {",
                "+",
                "+    public String execute() throws Exception {",
                "+        PrepareOperations.overrideDevMode(true); // Just for Showcase, explicitly switch on for this action only",
                "+        return SUCCESS;",
                "+    }",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/apps/showcase/src/main/resources/struts-tags-non-ui.xml b/apps/showcase/src/main/resources/struts-tags-non-ui.xml",
                "index 484341976..42d0506ae 100644",
                "--- a/apps/showcase/src/main/resources/struts-tags-non-ui.xml",
                "+++ b/apps/showcase/src/main/resources/struts-tags-non-ui.xml",
                "@@ -153,3 +153,3 @@",
                "         </action>",
                "-        <action name=\"debugTagDemo\">",
                "+\t\t<action name=\"debugTagDemo\" class=\"org.apache.struts2.showcase.tag.nonui.debugtag.DebugTagAction\">",
                "             <result>/WEB-INF/tags/non-ui/debug.jsp</result>",
                "diff --git a/apps/showcase/src/main/webapp/WEB-INF/tags/non-ui/debug.jsp b/apps/showcase/src/main/webapp/WEB-INF/tags/non-ui/debug.jsp",
                "index 45131e87c..1629bf3ab 100644",
                "--- a/apps/showcase/src/main/webapp/WEB-INF/tags/non-ui/debug.jsp",
                "+++ b/apps/showcase/src/main/webapp/WEB-INF/tags/non-ui/debug.jsp",
                "@@ -44,3 +44,3 @@",
                " \t\t    <p/>",
                "-\t\t    <s:debug disabled=\"false\" />",
                "+\t\t    <s:debug />",
                " \t\t</div>",
                "diff --git a/core/src/main/java/org/apache/struts2/components/Debug.java b/core/src/main/java/org/apache/struts2/components/Debug.java",
                "index 87c32de87..e1c72fb28 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/Debug.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/Debug.java",
                "@@ -32,2 +32,3 @@ import java.util.List;",
                "+import org.apache.struts2.dispatcher.PrepareOperations;",
                " import org.apache.struts2.views.annotations.StrutsTag;",
                "@@ -36,3 +37,3 @@ import org.apache.struts2.StrutsException;",
                " @StrutsTag(name=\"debug\", tldTagClass=\"org.apache.struts2.views.jsp.ui.DebugTag\",",
                "-        description=\"Prints debugging information (Only if 'struts.devMode' enabled or disable tag is set 'false')\")",
                "+        description=\"Prints debugging information (Only if 'struts.devMode' is enabled)\")",
                " public class Debug extends UIBean {",
                "@@ -90,3 +91,3 @@ public class Debug extends UIBean {",
                "     protected boolean showDebug() {",
                "-        return (devMode || \"false\".equalsIgnoreCase(disabled));",
                "+        return (devMode || Boolean.TRUE == PrepareOperations.getDevModeOverride());",
                "     }"
            ],
            "changed_files": [
                "apps/showcase/src/main/java/org/apache/struts2/showcase/tag/nonui/debugtag/DebugTagAction.java",
                "apps/showcase/src/main/resources/struts-tags-non-ui.xml",
                "apps/showcase/src/main/webapp/WEB-INF/tags/non-ui/debug.jsp",
                "core/src/main/java/org/apache/struts2/components/Debug.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4891": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: switch",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4891",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8d4194bbf7364625a5b4f407ef48208c4ba524fd",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517302293,
            "hunks": 2,
            "message": "allow duplicate in AnnotationUtils.findAnnotations result See also WW-4912",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "index dd148550e..cbebc8003 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "@@ -179,3 +179,3 @@ public class AnnotationUtils {",
                "             T ann = aClass.getAnnotation(annotationClass);",
                "-            if (ann != null && !anns.contains(ann)) {",
                "+            if (ann != null) {",
                "                 anns.add(ann);",
                "@@ -184,3 +184,3 @@ public class AnnotationUtils {",
                "             ann = aClass.getPackage().getAnnotation(annotationClass);",
                "-            if (ann != null && !anns.contains(ann)) {",
                "+            if (ann != null) {",
                "                 anns.add(ann);"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4912": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: allow",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4912",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6fc695970f60d7cceca075314076d574370c1a05",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514476569,
            "hunks": 8,
            "message": "WW-4903 Uses Initializable to properly initialise the factory",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java b/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "index 6810abb89..f6ec48337 100644",
                "--- a/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "+++ b/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "@@ -24,2 +24,3 @@ import com.opensymphony.xwork2.DefaultActionProxyFactory;",
                " import com.opensymphony.xwork2.inject.Container;",
                "+import com.opensymphony.xwork2.inject.Initializable;",
                " import com.opensymphony.xwork2.inject.Inject;",
                "@@ -29,4 +30,7 @@ import org.apache.struts2.StrutsConstants;",
                "+import java.util.Arrays;",
                " import java.util.HashMap;",
                "+import java.util.HashSet;",
                " import java.util.Map;",
                "+import java.util.Set;",
                "@@ -57,3 +61,3 @@ import java.util.Map;",
                "  */",
                "-public class PrefixBasedActionProxyFactory extends DefaultActionProxyFactory {",
                "+public class PrefixBasedActionProxyFactory extends DefaultActionProxyFactory implements Initializable {",
                "@@ -62,2 +66,3 @@ public class PrefixBasedActionProxyFactory extends DefaultActionProxyFactory {",
                "     private Map<String, ActionProxyFactory> actionProxyFactories = new HashMap<>();",
                "+    private Set<String> prefixes = new HashSet<>();",
                "@@ -71,14 +76,18 @@ public class PrefixBasedActionProxyFactory extends DefaultActionProxyFactory {",
                "         if (list != null) {",
                "-            String[] factories = list.split(\",\");",
                "-            for (String factory : factories) {",
                "-                String[] thisFactory = factory.split(\":\");",
                "-                if (thisFactory.length == 2) {",
                "-                    String factoryPrefix = thisFactory[0].trim();",
                "-                    String factoryName = thisFactory[1].trim();",
                "-                    ActionProxyFactory obj = container.getInstance(ActionProxyFactory.class, factoryName);",
                "-                    if (obj != null) {",
                "-                        actionProxyFactories.put(factoryPrefix, obj);",
                "-                    } else {",
                "-                        LOG.warn(\"Invalid PrefixBasedActionProxyFactory config entry: [{}]\", factory);",
                "-                    }",
                "+            prefixes = new HashSet<>(Arrays.asList(list.split(\",\")));",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public void init() {",
                "+        for (String factory : prefixes) {",
                "+            String[] thisFactory = factory.split(\":\");",
                "+            if (thisFactory.length == 2) {",
                "+                String factoryPrefix = thisFactory[0].trim();",
                "+                String factoryName = thisFactory[1].trim();",
                "+                ActionProxyFactory obj = container.getInstance(ActionProxyFactory.class, factoryName);",
                "+                if (obj != null) {",
                "+                    actionProxyFactories.put(factoryPrefix, obj);",
                "+                } else {",
                "+                    LOG.warn(\"Invalid PrefixBasedActionProxyFactory config entry: [{}]\", factory);",
                "                 }",
                "@@ -105,3 +114,2 @@ public class PrefixBasedActionProxyFactory extends DefaultActionProxyFactory {",
                "     }",
                "-",
                " }"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4903": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: base",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4903",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7a9b5029a59412e1b9faf1a1699451f880e29af0",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511289996,
            "hunks": 3,
            "message": "WW-4875 Add json constant configuration",
            "diff": [
                "diff --git a/plugins/json/src/main/java/org/apache/struts2/json/JSONConstants.java b/plugins/json/src/main/java/org/apache/struts2/json/JSONConstants.java",
                "index e3dbf4b7b..f5cb292bd 100644",
                "--- a/plugins/json/src/main/java/org/apache/struts2/json/JSONConstants.java",
                "+++ b/plugins/json/src/main/java/org/apache/struts2/json/JSONConstants.java",
                "@@ -32,2 +32,3 @@ public class JSONConstants {",
                "     public static final String RESULT_EXCLUDE_PROXY_PROPERTIES = \"struts.json.result.excludeProxyProperties\";",
                "+    public static final String DATE_FORMAT = \"struts.json.dateformat\";",
                " }",
                "diff --git a/plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java b/plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java",
                "index 4eba2630d..0547e92c8 100644",
                "--- a/plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java",
                "+++ b/plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java",
                "@@ -458,3 +458,3 @@ public class JSONResult implements Result {",
                "-    @Inject(required=false,value=\"struts.json.dateformat\")",
                "+    @Inject(required = false, value = JSONConstants.DATE_FORMAT)",
                "     public void setDefaultDateFormat(String defaultDateFormat) {",
                "diff --git a/plugins/json/src/main/java/org/apache/struts2/json/config/entities/JSONConstantConfig.java b/plugins/json/src/main/java/org/apache/struts2/json/config/entities/JSONConstantConfig.java",
                "new file mode 100644",
                "index 000000000..ee7fab60f",
                "--- /dev/null",
                "+++ b/plugins/json/src/main/java/org/apache/struts2/json/config/entities/JSONConstantConfig.java",
                "@@ -0,0 +1,71 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.json.config.entities;",
                "+",
                "+import java.util.Map;",
                "+import java.util.Objects;",
                "+",
                "+import org.apache.struts2.config.entities.BeanConfig;",
                "+import org.apache.struts2.config.entities.ConstantConfig;",
                "+import org.apache.struts2.json.JSONConstants;",
                "+",
                "+public class JSONConstantConfig extends ConstantConfig {",
                "+    private BeanConfig jsonWriter;",
                "+    private Boolean jsonResultExcludeProxyProperties;",
                "+    private String jsonDateFormat;",
                "+",
                "+    @Override",
                "+    public Map<String, String> getAllAsStringsMap() {",
                "+        Map<String, String> map = super.getAllAsStringsMap();",
                "+",
                "+        map.put(JSONConstants.JSON_WRITER, beanConfToString(jsonWriter));",
                "+        map.put(JSONConstants.RESULT_EXCLUDE_PROXY_PROPERTIES, Objects.toString(jsonResultExcludeProxyProperties, null));",
                "+        map.put(JSONConstants.DATE_FORMAT, jsonDateFormat);",
                "+",
                "+        return map;",
                "+    }",
                "+",
                "+    public BeanConfig getJsonWriter() {",
                "+        return jsonWriter;",
                "+    }",
                "+",
                "+    public void setJsonWriter(BeanConfig jsonWriter) {",
                "+        this.jsonWriter = jsonWriter;",
                "+    }",
                "+",
                "+    public void setJsonWriter(Class<?> clazz) {",
                "+        this.jsonWriter = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Boolean getJsonResultExcludeProxyProperties() {",
                "+        return jsonResultExcludeProxyProperties;",
                "+    }",
                "+",
                "+    public void setJsonResultExcludeProxyProperties(Boolean jsonResultExcludeProxyProperties) {",
                "+        this.jsonResultExcludeProxyProperties = jsonResultExcludeProxyProperties;",
                "+    }",
                "+",
                "+    public String getJsonDateFormat() {",
                "+        return jsonDateFormat;",
                "+    }",
                "+",
                "+    public void setJsonDateFormat(String jsonDateFormat) {",
                "+        this.jsonDateFormat = jsonDateFormat;",
                "+    }",
                "+}"
            ],
            "changed_files": [
                "plugins/json/src/main/java/org/apache/struts2/json/JSONConstants.java",
                "plugins/json/src/main/java/org/apache/struts2/json/JSONResult.java",
                "plugins/json/src/main/java/org/apache/struts2/json/config/entities/JSONConstantConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4875": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4875",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0d42ff50ac147df883372c0c513734af8abaee39",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510907526,
            "hunks": 3,
            "message": "WW-4893 Upgrades Jackson to version 2.9.2",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 222a2d11f..02c8fcaed 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -105,2 +105,3 @@",
                "         <log4j2.version>2.9.1</log4j2.version>",
                "+        <jackson.version>2.9.2</jackson.version>",
                "@@ -1002,3 +1003,3 @@",
                "                 <artifactId>jackson-core</artifactId>",
                "-                <version>2.8.2</version>",
                "+                <version>${jackson.version}</version>",
                "             </dependency>",
                "@@ -1007,3 +1008,3 @@",
                "                 <artifactId>jackson-databind</artifactId>",
                "-                <version>2.8.2</version>",
                "+                <version>${jackson.version}</version>",
                "             </dependency>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4893": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: upgrade, jackson, version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4893",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a5db2881308cfccf52edf165447188ba09124772",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510137417,
            "hunks": 4,
            "message": "WW-4871 Removes assignment to value parameter",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "index f7ad4ead4..97669438a 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "@@ -67,10 +67,11 @@ public class StringConverter extends DefaultTypeConverter {",
                "             format.setGroupingUsed(false);",
                "+            // TODO: delete this variable and corresponding if statement when jdk fixed java.text.NumberFormat.format's behavior with Float",
                "+            Object fixedValue = value;",
                "             if (BigDecimal.class.isInstance(value) || Double.class.isInstance(value) || Float.class.isInstance(value)) {",
                "                 format.setMaximumFractionDigits(Integer.MAX_VALUE);",
                "-                // TODO: delete this if statement when jdk fixed java.text.NumberFormat.format's behavior with Float",
                "                 if (Float.class.isInstance(value)) {",
                "-                    value = Double.valueOf(value.toString());",
                "+                    fixedValue = Double.valueOf(value.toString());",
                "                 }",
                "             }",
                "-            return format.format(value);",
                "+            return format.format(fixedValue);",
                "         } else {"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4871": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4871",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8af1d014cbd3b5b3e1e524dbcf8b554b7a6b954c",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508143118,
            "hunks": 1,
            "message": "WW-4871 Fixes StringConverter and improves it's tests",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "index d8895e8c2..ca5e7a152 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "@@ -67,5 +67,8 @@ public class StringConverter extends DefaultTypeConverter {",
                "             format.setGroupingUsed(false);",
                "-            if (Double.class.isInstance(value) || BigDecimal.class.isInstance(value)) {",
                "-                format.setMinimumFractionDigits(1);",
                "-            }",
                "+            if (BigDecimal.class.isInstance(value))",
                "+                format.setMaximumFractionDigits(Integer.MAX_VALUE);",
                "+            else if (Double.class.isInstance(value))",
                "+                format.setMaximumFractionDigits(15);",
                "+            else if (Float.class.isInstance(value))",
                "+                format.setMaximumFractionDigits(7);",
                "             return format.format(value);"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4871": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4871",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "acabbdf77c7ecffabadd640069f2bc9f29c9ba5f",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508568194,
            "hunks": 0,
            "message": "Merge pull request #174 from lukaszlenart/site-generation Site generation",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "174": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 174",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1f9386e8921c77cab55fd40f4f015a00d1d5c09a",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508668917,
            "hunks": 1,
            "message": "WW-4880 Upgrades Spring to version 4.1.9",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 867b13eb2..c75226e4d 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -107,3 +107,3 @@",
                "         <currentVersion>${project.version}</currentVersion>",
                "-        <struts2.springPlatformVersion>4.1.6.RELEASE</struts2.springPlatformVersion>",
                "+        <struts2.springPlatformVersion>4.1.9.RELEASE</struts2.springPlatformVersion>",
                "         <ognl.version>3.1.15</ognl.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4880": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: upgrade, version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4880",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "eddab32e7526ad2ad56a247988ab7e2655bccc9f",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513837788,
            "hunks": 0,
            "message": "Merge pull request #194 from sdutry/sonar/string-optimize-single-characters used char instead of a single character string",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "194": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 194",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "888f2fc8e0e8dc3087a2ee787727933b63df4040",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508827140,
            "hunks": 1,
            "message": "WW-4871 Fixes max fraction digits to Integer.MAX_VALUE",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "index 8d05190c0..8243e0860 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "@@ -69,11 +69,3 @@ public class StringConverter extends DefaultTypeConverter {",
                "                 format.setMinimumFractionDigits(1);",
                "-                if (BigDecimal.class.isInstance(value)) {",
                "-                    format.setMaximumFractionDigits(Integer.MAX_VALUE);",
                "-                }",
                "-                else if (Double.class.isInstance(value)) {",
                "-                    format.setMaximumFractionDigits(325);   //double MIN_VALUE",
                "-                }",
                "-                else if (Float.class.isInstance(value)) {",
                "-                    format.setMaximumFractionDigits(60);    //float MIN_VALUE",
                "-                }",
                "+                format.setMaximumFractionDigits(Integer.MAX_VALUE);",
                "             }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4871": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4871",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "74460831dc2dcdcd9969dcff6cd8c02dbfb4b951",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517303291,
            "hunks": 0,
            "message": "Merge pull request #1 from yasserzamani/scan-deeper Scan even deeper :)",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b2ff4bb56b21af384e5602ac68d80125b8da74ca",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511902066,
            "hunks": 3,
            "message": "WW-4875 Add spring constant configuration",
            "diff": [
                "diff --git a/plugins/spring/src/main/java/org/apache/struts2/spring/SpringConstants.java b/plugins/spring/src/main/java/org/apache/struts2/spring/SpringConstants.java",
                "new file mode 100644",
                "index 000000000..f174e2ff6",
                "--- /dev/null",
                "+++ b/plugins/spring/src/main/java/org/apache/struts2/spring/SpringConstants.java",
                "@@ -0,0 +1,25 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.spring;",
                "+",
                "+public class SpringConstants {",
                "+    public static final String SPRING_CLASS_RELOADING_WATCH_LIST = \"struts.class.reloading.watchList\";",
                "+    public static final String SPRING_CLASS_RELOADING_ACCEPT_CLASSES = \"struts.class.reloading.acceptClasses\";",
                "+    public static final String SPRING_CLASS_RELOADING_RELOAD_CONFIG = \"struts.class.reloading.reloadConfig\";",
                "+}",
                "diff --git a/plugins/spring/src/main/java/org/apache/struts2/spring/StrutsSpringObjectFactory.java b/plugins/spring/src/main/java/org/apache/struts2/spring/StrutsSpringObjectFactory.java",
                "index 8d6c229a7..157518c27 100644",
                "--- a/plugins/spring/src/main/java/org/apache/struts2/spring/StrutsSpringObjectFactory.java",
                "+++ b/plugins/spring/src/main/java/org/apache/struts2/spring/StrutsSpringObjectFactory.java",
                "@@ -96,5 +96,5 @@ public class StrutsSpringObjectFactory extends SpringObjectFactory {",
                "-        String watchList = container.getInstance(String.class, \"struts.class.reloading.watchList\");",
                "-        String acceptClasses = container.getInstance(String.class, \"struts.class.reloading.acceptClasses\");",
                "-        String reloadConfig = container.getInstance(String.class, \"struts.class.reloading.reloadConfig\");",
                "+        String watchList = container.getInstance(String.class, SpringConstants.SPRING_CLASS_RELOADING_WATCH_LIST);",
                "+        String acceptClasses = container.getInstance(String.class, SpringConstants.SPRING_CLASS_RELOADING_ACCEPT_CLASSES);",
                "+        String reloadConfig = container.getInstance(String.class, SpringConstants.SPRING_CLASS_RELOADING_RELOAD_CONFIG);",
                "diff --git a/plugins/spring/src/main/java/org/apache/struts2/spring/config/entities/SpringConstantConfig.java b/plugins/spring/src/main/java/org/apache/struts2/spring/config/entities/SpringConstantConfig.java",
                "new file mode 100644",
                "index 000000000..d948490ba",
                "--- /dev/null",
                "+++ b/plugins/spring/src/main/java/org/apache/struts2/spring/config/entities/SpringConstantConfig.java",
                "@@ -0,0 +1,70 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.spring.config.entities;",
                "+",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+import java.util.Objects;",
                "+import java.util.Set;",
                "+import java.util.regex.Pattern;",
                "+",
                "+import org.apache.commons.lang3.StringUtils;",
                "+import org.apache.struts2.config.entities.ConstantConfig;",
                "+import org.apache.struts2.spring.SpringConstants;",
                "+",
                "+public class SpringConstantConfig extends ConstantConfig {",
                "+    private List<String> classReloadingWatchList;",
                "+    private Set<Pattern> classReloadingAcceptClasses;",
                "+    private Boolean classReloadingReloadConfig;",
                "+",
                "+    @Override",
                "+    public Map<String, String> getAllAsStringsMap() {",
                "+        Map<String, String> map = super.getAllAsStringsMap();",
                "+",
                "+        map.put(SpringConstants.SPRING_CLASS_RELOADING_WATCH_LIST, StringUtils.join(classReloadingWatchList, ','));",
                "+        map.put(SpringConstants.SPRING_CLASS_RELOADING_ACCEPT_CLASSES, StringUtils.join(classReloadingAcceptClasses, ','));",
                "+        map.put(SpringConstants.SPRING_CLASS_RELOADING_RELOAD_CONFIG, Objects.toString(classReloadingReloadConfig, null));",
                "+",
                "+        return map;",
                "+    }",
                "+",
                "+    public List<String> getClassReloadingWatchList() {",
                "+        return classReloadingWatchList;",
                "+    }",
                "+",
                "+    public void setClassReloadingWatchList(List<String> classReloadingWatchList) {",
                "+        this.classReloadingWatchList = classReloadingWatchList;",
                "+    }",
                "+",
                "+    public Set<Pattern> getClassReloadingAcceptClasses() {",
                "+        return classReloadingAcceptClasses;",
                "+    }",
                "+",
                "+    public void setClassReloadingAcceptClasses(Set<Pattern> classReloadingAcceptClasses) {",
                "+        this.classReloadingAcceptClasses = classReloadingAcceptClasses;",
                "+    }",
                "+",
                "+    public Boolean getClassReloadingReloadConfig() {",
                "+        return classReloadingReloadConfig;",
                "+    }",
                "+",
                "+    public void setClassReloadingReloadConfig(Boolean classReloadingReloadConfig) {",
                "+        this.classReloadingReloadConfig = classReloadingReloadConfig;",
                "+    }",
                "+}"
            ],
            "changed_files": [
                "plugins/spring/src/main/java/org/apache/struts2/spring/SpringConstants.java",
                "plugins/spring/src/main/java/org/apache/struts2/spring/StrutsSpringObjectFactory.java",
                "plugins/spring/src/main/java/org/apache/struts2/spring/config/entities/SpringConstantConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4875": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4875",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "86bb7fced47e9735554d15b87c3b6a77c3c9d128",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508305154,
            "hunks": 2,
            "message": "WW-4871 Fixes max fraction digits to bigger than max precision",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "index 5f4a290ec..8d05190c0 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "@@ -73,6 +73,6 @@ public class StringConverter extends DefaultTypeConverter {",
                "                 else if (Double.class.isInstance(value)) {",
                "-                    format.setMaximumFractionDigits(15);",
                "+                    format.setMaximumFractionDigits(325);   //double MIN_VALUE",
                "                 }",
                "                 else if (Float.class.isInstance(value)) {",
                "-                    format.setMaximumFractionDigits(7);",
                "+                    format.setMaximumFractionDigits(60);    //float MIN_VALUE",
                "                 }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4871": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4871",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4ac287abd7da73273b162b2dc203c3636e9cb44f",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511625362,
            "hunks": 1,
            "message": "WW-4874 Adds unit tests",
            "diff": [
                "diff --git a/plugins/async/pom.xml b/plugins/async/pom.xml",
                "index 6ed07cff8..b5e5ae02b 100644",
                "--- a/plugins/async/pom.xml",
                "+++ b/plugins/async/pom.xml",
                "@@ -44,2 +44,20 @@",
                "         </dependency>",
                "+",
                "+        <dependency>",
                "+            <groupId>mockobjects</groupId>",
                "+            <artifactId>mockobjects-core</artifactId>",
                "+            <scope>test</scope>",
                "+        </dependency>",
                "+",
                "+        <dependency>",
                "+            <groupId>org.springframework</groupId>",
                "+            <artifactId>spring-test</artifactId>",
                "+            <scope>test</scope>",
                "+        </dependency>",
                "+",
                "+        <dependency>",
                "+            <groupId>org.springframework</groupId>",
                "+            <artifactId>spring-web</artifactId>",
                "+            <scope>test</scope>",
                "+        </dependency>",
                "     </dependencies>"
            ],
            "changed_files": [
                "plugins/async/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4874": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4874",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "3514e4f68287dc7e36875dc878fa9a0bc7e1ee01",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508184162,
            "hunks": 4,
            "message": "WW-4871 Fixes previous unit tests after setMinimumFractionDigits(1)",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "index 97ac2506b..5f4a290ec 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java",
                "@@ -69,8 +69,11 @@ public class StringConverter extends DefaultTypeConverter {",
                "                 format.setMinimumFractionDigits(1);",
                "-                if (BigDecimal.class.isInstance(value))",
                "+                if (BigDecimal.class.isInstance(value)) {",
                "                     format.setMaximumFractionDigits(Integer.MAX_VALUE);",
                "-                else if (Double.class.isInstance(value))",
                "+                }",
                "+                else if (Double.class.isInstance(value)) {",
                "                     format.setMaximumFractionDigits(15);",
                "-                else if (Float.class.isInstance(value))",
                "+                }",
                "+                else if (Float.class.isInstance(value)) {",
                "                     format.setMaximumFractionDigits(7);",
                "+                }",
                "             }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/StringConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4871": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4871",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a66f92c66d9cb039716d7e6e893d2f3ed404e076",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515180324,
            "hunks": 0,
            "message": "Merge pull request #198 from sdutry/formatting-changes add tests to UIBean class",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "198": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 198",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "86baf2109822b9696b14361d442571a317a134db",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1516181327,
            "hunks": 0,
            "message": "Merge pull request #203 from yasserzamani/init_test_scopes add tests for initializable to cover more scopes",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "203": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 203",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8ef8581d0caf5eed57df267c1afa4ed111f42c52",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517394479,
            "hunks": 0,
            "message": "Merge pull request #2 from yasserzamani/sessionless test no session but with locale parameter",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "2": "WW-4865: Add \"requiredValue\" parameter to Checkbox Struts Tag #169"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 2",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "80698ed516ff83d02149c58b03246945f6316eae",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1512157560,
            "hunks": 0,
            "message": "Merge pull request #186 from sdutry/sonar-entrySet changed Map iterations to use entrySet when both key and value are used",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "186": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 186",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4b2050734cb5f26aac7d3a569f26b8a1e3291baa",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1507873170,
            "hunks": 0,
            "message": "Merge pull request #171 from Prodigysov/remove-obsolete-todo remove an obsolete TODO comment",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "171": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 171",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "55ae024c0af6feef0efd6e90ba76bea54a3037e0",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1509044299,
            "hunks": 3,
            "message": "WW-4875 Add location information for java based configuration",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/location/LocationUtils.java b/core/src/main/java/com/opensymphony/xwork2/util/location/LocationUtils.java",
                "index 550e19e01..138bd48ed 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/location/LocationUtils.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/location/LocationUtils.java",
                "@@ -21,2 +21,4 @@ package com.opensymphony.xwork2.util.location;",
                " import com.opensymphony.xwork2.util.ClassLoaderUtil;",
                "+",
                "+import org.apache.struts2.config.StrutsJavaConfiguration;",
                " import org.w3c.dom.Element;",
                "@@ -307,2 +309,6 @@ public class LocationUtils {",
                "+        if (obj instanceof StrutsJavaConfiguration) {",
                "+            return new LocationImpl(description, obj.toString());",
                "+        }",
                "+",
                "         return Location.UNKNOWN;",
                "diff --git a/core/src/main/java/org/apache/struts2/config/StrutsJavaConfigurationProvider.java b/core/src/main/java/org/apache/struts2/config/StrutsJavaConfigurationProvider.java",
                "index 8ab6dafa4..5aaaf57e2 100644",
                "--- a/core/src/main/java/org/apache/struts2/config/StrutsJavaConfigurationProvider.java",
                "+++ b/core/src/main/java/org/apache/struts2/config/StrutsJavaConfigurationProvider.java",
                "@@ -130,3 +130,3 @@ public class StrutsJavaConfigurationProvider implements ConfigurationProvider {",
                "                         throw new ConfigurationException(\"Bean type \" + beanConf.getType() + \" with the name \"",
                "-                                + beanConf.getName() + \" has already been loaded by \" + loc);",
                "+                                + beanConf.getName() + \" has already been loaded by \" + loc, javaConfig);",
                "                     }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/location/LocationUtils.java",
                "core/src/main/java/org/apache/struts2/config/StrutsJavaConfigurationProvider.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4875": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: base",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4875",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "302b53d43c1665a745836ab355e1703a424e7f8d",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511289942,
            "hunks": 1,
            "message": "WW-4875 Add convention constant configuration",
            "diff": [
                "diff --git a/plugins/convention/src/main/java/org/apache/struts2/convention/config/entities/ConventionConstantConfig.java b/plugins/convention/src/main/java/org/apache/struts2/convention/config/entities/ConventionConstantConfig.java",
                "new file mode 100644",
                "index 000000000..d151a154f",
                "--- /dev/null",
                "+++ b/plugins/convention/src/main/java/org/apache/struts2/convention/config/entities/ConventionConstantConfig.java",
                "@@ -0,0 +1,331 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.convention.config.entities;",
                "+",
                "+import java.util.HashMap;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+import java.util.Objects;",
                "+import java.util.Set;",
                "+",
                "+import org.apache.commons.lang3.StringUtils;",
                "+import org.apache.struts2.config.entities.BeanConfig;",
                "+import org.apache.struts2.config.entities.ConstantConfig;",
                "+import org.apache.struts2.convention.ConventionConstants;",
                "+",
                "+public class ConventionConstantConfig extends ConstantConfig {",
                "+    private BeanConfig conventionActionConfigBuilder;",
                "+    private BeanConfig conventionActionNameBuilder;",
                "+    private BeanConfig conventionResultMapBuilder;",
                "+    private BeanConfig conventionInterceptorMapBuilder;",
                "+    private BeanConfig conventionConventionsService;",
                "+    private Boolean conventionActionNameLowercase;",
                "+    private String conventionActionNameSeparator;",
                "+    private Set<String> conventionActionSuffix;",
                "+    private Boolean conventionClassesReload;",
                "+    private String conventionResultPath;",
                "+    private String conventionDefaultParentPackage;",
                "+    private Boolean conventionRedirectToSlash;",
                "+    private Set<String> conventionRelativeResultTypes;",
                "+    private Boolean conventionExcludeParentClassLoader;",
                "+    private Boolean conventionActionAlwaysMapExecute;",
                "+    private Set<String> conventionActionFileProtocols;",
                "+    private Boolean conventionActionDisableScanning;",
                "+    private List<String> conventionActionIncludeJars;",
                "+    private Boolean conventionPackageLocatorsDisable;",
                "+    private List<String> conventionActionPackages;",
                "+    private Boolean conventionActionCheckImplementsAction;",
                "+    private List<String> conventionExcludePackages;",
                "+    private List<String> conventionPackageLocators;",
                "+    private String conventionPackageLocatorsBasePackage;",
                "+    private Boolean conventionActionMapAllMatches;",
                "+    private Boolean conventionActionEagerLoading;",
                "+    private Boolean conventionResultFlatLayout;",
                "+",
                "+    @Override",
                "+    public Map<String, String> getAllAsStringsMap() {",
                "+        Map<String, String> map = new HashMap<>();",
                "+",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_CONFIG_BUILDER, beanConfToString(conventionActionConfigBuilder));",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_NAME_BUILDER, beanConfToString(conventionActionNameBuilder));",
                "+        map.put(ConventionConstants.CONVENTION_RESULT_MAP_BUILDER, beanConfToString(conventionResultMapBuilder));",
                "+        map.put(ConventionConstants.CONVENTION_INTERCEPTOR_MAP_BUILDER, beanConfToString(conventionInterceptorMapBuilder));",
                "+        map.put(ConventionConstants.CONVENTION_CONVENTIONS_SERVICE, beanConfToString(conventionConventionsService));",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_NAME_LOWERCASE, Objects.toString(conventionActionNameLowercase, null));",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_NAME_SEPARATOR, conventionActionNameSeparator);",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_SUFFIX, StringUtils.join(conventionActionSuffix, ','));",
                "+        map.put(ConventionConstants.CONVENTION_CLASSES_RELOAD, Objects.toString(conventionClassesReload, null));",
                "+        map.put(ConventionConstants.CONVENTION_RESULT_PATH, conventionResultPath);",
                "+        map.put(ConventionConstants.CONVENTION_DEFAULT_PARENT_PACKAGE, conventionDefaultParentPackage);",
                "+        map.put(ConventionConstants.CONVENTION_REDIRECT_TO_SLASH, Objects.toString(conventionRedirectToSlash, null));",
                "+        map.put(ConventionConstants.CONVENTION_RELATIVE_RESULT_TYPES, StringUtils.join(conventionRelativeResultTypes, ','));",
                "+        map.put(ConventionConstants.CONVENTION_EXCLUDE_PARENT_CLASS_LOADER, Objects.toString(conventionExcludeParentClassLoader, null));",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_ALWAYS_MAP_EXECUTE, Objects.toString(conventionActionAlwaysMapExecute, null));",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_FILE_PROTOCOLS, StringUtils.join(conventionActionFileProtocols, ','));",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_DISABLE_SCANNING, Objects.toString(conventionActionDisableScanning, null));",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_INCLUDE_JARS, StringUtils.join(conventionActionIncludeJars, ','));",
                "+        map.put(ConventionConstants.CONVENTION_PACKAGE_LOCATORS_DISABLE, Objects.toString(conventionPackageLocatorsDisable, null));",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_PACKAGES, StringUtils.join(conventionActionPackages, ','));",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_CHECK_IMPLEMENTS_ACTION, Objects.toString(conventionActionCheckImplementsAction, null));",
                "+        map.put(ConventionConstants.CONVENTION_EXCLUDE_PACKAGES, StringUtils.join(conventionExcludePackages, ','));",
                "+        map.put(ConventionConstants.CONVENTION_PACKAGE_LOCATORS, StringUtils.join(conventionPackageLocators, ','));",
                "+        map.put(ConventionConstants.CONVENTION_PACKAGE_LOCATORS_BASE_PACKAGE, conventionPackageLocatorsBasePackage);",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_MAP_ALL_MATCHES, Objects.toString(conventionActionMapAllMatches, null));",
                "+        map.put(ConventionConstants.CONVENTION_ACTION_EAGER_LOADING, Objects.toString(conventionActionEagerLoading, null));",
                "+        map.put(ConventionConstants.CONVENTION_RESULT_FLAT_LAYOUT, Objects.toString(conventionResultFlatLayout, null));",
                "+",
                "+        return map;",
                "+    }",
                "+",
                "+    public BeanConfig getConventionActionConfigBuilder() {",
                "+        return conventionActionConfigBuilder;",
                "+    }",
                "+",
                "+    public void setConventionActionConfigBuilder(BeanConfig conventionActionConfigBuilder) {",
                "+        this.conventionActionConfigBuilder = conventionActionConfigBuilder;",
                "+    }",
                "+",
                "+    public void setConventionActionConfigBuilder(Class<?> clazz) {",
                "+        this.conventionActionConfigBuilder = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConventionActionNameBuilder() {",
                "+        return conventionActionNameBuilder;",
                "+    }",
                "+",
                "+    public void setConventionActionNameBuilder(BeanConfig conventionActionNameBuilder) {",
                "+        this.conventionActionNameBuilder = conventionActionNameBuilder;",
                "+    }",
                "+",
                "+    public void setConventionActionNameBuilder(Class<?> clazz) {",
                "+        this.conventionActionNameBuilder = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConventionResultMapBuilder() {",
                "+        return conventionResultMapBuilder;",
                "+    }",
                "+",
                "+    public void setConventionResultMapBuilder(BeanConfig conventionResultMapBuilder) {",
                "+        this.conventionResultMapBuilder = conventionResultMapBuilder;",
                "+    }",
                "+",
                "+    public void setConventionResultMapBuilder(Class<?> clazz) {",
                "+        this.conventionResultMapBuilder = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConventionInterceptorMapBuilder() {",
                "+        return conventionInterceptorMapBuilder;",
                "+    }",
                "+",
                "+    public void setConventionInterceptorMapBuilder(BeanConfig conventionInterceptorMapBuilder) {",
                "+        this.conventionInterceptorMapBuilder = conventionInterceptorMapBuilder;",
                "+    }",
                "+",
                "+    public void setConventionInterceptorMapBuilder(Class<?> clazz) {",
                "+        this.conventionInterceptorMapBuilder = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public BeanConfig getConventionConventionsService() {",
                "+        return conventionConventionsService;",
                "+    }",
                "+",
                "+    public void setConventionConventionsService(BeanConfig conventionConventionsService) {",
                "+        this.conventionConventionsService = conventionConventionsService;",
                "+    }",
                "+",
                "+    public void setConventionConventionsService(Class<?> clazz) {",
                "+        this.conventionConventionsService = new BeanConfig(clazz, clazz.getName());",
                "+    }",
                "+",
                "+    public Boolean getConventionActionNameLowercase() {",
                "+        return conventionActionNameLowercase;",
                "+    }",
                "+",
                "+    public void setConventionActionNameLowercase(Boolean conventionActionNameLowercase) {",
                "+        this.conventionActionNameLowercase = conventionActionNameLowercase;",
                "+    }",
                "+",
                "+    public String getConventionActionNameSeparator() {",
                "+        return conventionActionNameSeparator;",
                "+    }",
                "+",
                "+    public void setConventionActionNameSeparator(String conventionActionNameSeparator) {",
                "+        this.conventionActionNameSeparator = conventionActionNameSeparator;",
                "+    }",
                "+",
                "+    public Set<String> getConventionActionSuffix() {",
                "+        return conventionActionSuffix;",
                "+    }",
                "+",
                "+    public void setConventionActionSuffix(Set<String> conventionActionSuffix) {",
                "+        this.conventionActionSuffix = conventionActionSuffix;",
                "+    }",
                "+",
                "+    public Boolean getConventionClassesReload() {",
                "+        return conventionClassesReload;",
                "+    }",
                "+",
                "+    public void setConventionClassesReload(Boolean conventionClassesReload) {",
                "+        this.conventionClassesReload = conventionClassesReload;",
                "+    }",
                "+",
                "+    public String getConventionResultPath() {",
                "+        return conventionResultPath;",
                "+    }",
                "+",
                "+    public void setConventionResultPath(String conventionResultPath) {",
                "+        this.conventionResultPath = conventionResultPath;",
                "+    }",
                "+",
                "+    public String getConventionDefaultParentPackage() {",
                "+        return conventionDefaultParentPackage;",
                "+    }",
                "+",
                "+    public void setConventionDefaultParentPackage(String conventionDefaultParentPackage) {",
                "+        this.conventionDefaultParentPackage = conventionDefaultParentPackage;",
                "+    }",
                "+",
                "+    public Boolean getConventionRedirectToSlash() {",
                "+        return conventionRedirectToSlash;",
                "+    }",
                "+",
                "+    public void setConventionRedirectToSlash(Boolean conventionRedirectToSlash) {",
                "+        this.conventionRedirectToSlash = conventionRedirectToSlash;",
                "+    }",
                "+",
                "+    public Set<String> getConventionRelativeResultTypes() {",
                "+        return conventionRelativeResultTypes;",
                "+    }",
                "+",
                "+    public void setConventionRelativeResultTypes(Set<String> conventionRelativeResultTypes) {",
                "+        this.conventionRelativeResultTypes = conventionRelativeResultTypes;",
                "+    }",
                "+",
                "+    public Boolean getConventionExcludeParentClassLoader() {",
                "+        return conventionExcludeParentClassLoader;",
                "+    }",
                "+",
                "+    public void setConventionExcludeParentClassLoader(Boolean conventionExcludeParentClassLoader) {",
                "+        this.conventionExcludeParentClassLoader = conventionExcludeParentClassLoader;",
                "+    }",
                "+",
                "+    public Boolean getConventionActionAlwaysMapExecute() {",
                "+        return conventionActionAlwaysMapExecute;",
                "+    }",
                "+",
                "+    public void setConventionActionAlwaysMapExecute(Boolean conventionActionAlwaysMapExecute) {",
                "+        this.conventionActionAlwaysMapExecute = conventionActionAlwaysMapExecute;",
                "+    }",
                "+",
                "+    public Set<String> getConventionActionFileProtocols() {",
                "+        return conventionActionFileProtocols;",
                "+    }",
                "+",
                "+    public void setConventionActionFileProtocols(Set<String> conventionActionFileProtocols) {",
                "+        this.conventionActionFileProtocols = conventionActionFileProtocols;",
                "+    }",
                "+",
                "+    public Boolean getConventionActionDisableScanning() {",
                "+        return conventionActionDisableScanning;",
                "+    }",
                "+",
                "+    public void setConventionActionDisableScanning(Boolean conventionActionDisableScanning) {",
                "+        this.conventionActionDisableScanning = conventionActionDisableScanning;",
                "+    }",
                "+",
                "+    public List<String> getConventionActionIncludeJars() {",
                "+        return conventionActionIncludeJars;",
                "+    }",
                "+",
                "+    public void setConventionActionIncludeJars(List<String> conventionActionIncludeJars) {",
                "+        this.conventionActionIncludeJars = conventionActionIncludeJars;",
                "+    }",
                "+",
                "+    public Boolean getConventionPackageLocatorsDisable() {",
                "+        return conventionPackageLocatorsDisable;",
                "+    }",
                "+",
                "+    public void setConventionPackageLocatorsDisable(Boolean conventionPackageLocatorsDisable) {",
                "+        this.conventionPackageLocatorsDisable = conventionPackageLocatorsDisable;",
                "+    }",
                "+",
                "+    public List<String> getConventionActionPackages() {",
                "+        return conventionActionPackages;",
                "+    }",
                "+",
                "+    public void setConventionActionPackages(List<String> conventionActionPackages) {",
                "+        this.conventionActionPackages = conventionActionPackages;",
                "+    }",
                "+",
                "+    public Boolean getConventionActionCheckImplementsAction() {",
                "+        return conventionActionCheckImplementsAction;",
                "+    }",
                "+",
                "+    public void setConventionActionCheckImplementsAction(Boolean conventionActionCheckImplementsAction) {",
                "+        this.conventionActionCheckImplementsAction = conventionActionCheckImplementsAction;",
                "+    }",
                "+",
                "+    public List<String> getConventionExcludePackages() {",
                "+        return conventionExcludePackages;",
                "+    }",
                "+",
                "+    public void setConventionExcludePackages(List<String> conventionExcludePackages) {",
                "+        this.conventionExcludePackages = conventionExcludePackages;",
                "+    }",
                "+",
                "+    public List<String> getConventionPackageLocators() {",
                "+        return conventionPackageLocators;",
                "+    }",
                "+",
                "+    public void setConventionPackageLocators(List<String> conventionPackageLocators) {",
                "+        this.conventionPackageLocators = conventionPackageLocators;",
                "+    }",
                "+",
                "+    public String getConventionPackageLocatorsBasePackage() {",
                "+        return conventionPackageLocatorsBasePackage;",
                "+    }",
                "+",
                "+    public void setConventionPackageLocatorsBasePackage(String conventionPackageLocatorsBasePackage) {",
                "+        this.conventionPackageLocatorsBasePackage = conventionPackageLocatorsBasePackage;",
                "+    }",
                "+",
                "+    public Boolean getConventionActionMapAllMatches() {",
                "+        return conventionActionMapAllMatches;",
                "+    }",
                "+",
                "+    public void setConventionActionMapAllMatches(Boolean conventionActionMapAllMatches) {",
                "+        this.conventionActionMapAllMatches = conventionActionMapAllMatches;",
                "+    }",
                "+",
                "+    public Boolean getConventionActionEagerLoading() {",
                "+        return conventionActionEagerLoading;",
                "+    }",
                "+",
                "+    public void setConventionActionEagerLoading(Boolean conventionActionEagerLoading) {",
                "+        this.conventionActionEagerLoading = conventionActionEagerLoading;",
                "+    }",
                "+",
                "+    public Boolean getConventionResultFlatLayout() {",
                "+        return conventionResultFlatLayout;",
                "+    }",
                "+",
                "+    public void setConventionResultFlatLayout(Boolean conventionResultFlatLayout) {",
                "+        this.conventionResultFlatLayout = conventionResultFlatLayout;",
                "+    }",
                "+}"
            ],
            "changed_files": [
                "plugins/convention/src/main/java/org/apache/struts2/convention/config/entities/ConventionConstantConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4875": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4875",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "94758b699cfea1bb8bfba777dcc383b4dcd41436",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513025804,
            "hunks": 8,
            "message": "WW-4901 Decouples Struts from URL.openConnection implementation of container",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java b/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java",
                "index 3356fbb5a..fbe503858 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java",
                "@@ -25,3 +25,2 @@ import org.apache.logging.log4j.LogManager;",
                " import java.io.IOException;",
                "-import java.net.JarURLConnection;",
                " import java.net.URL;",
                "@@ -39,7 +38,5 @@ public class JarEntryRevision extends Revision {",
                "     public static Revision build(URL fileUrl, FileManager fileManager) {",
                "-        // File within a Jar",
                "-        // Find separator index of jar filename and filename within jar",
                "-        JarURLConnection conn = null;",
                "+        StrutsJarURLConnection conn = null;",
                "         try {",
                "-            conn = (JarURLConnection) fileUrl.openConnection();",
                "+            conn = new StrutsJarURLConnection(fileUrl);",
                "             conn.setUseCaches(false);",
                "@@ -57,6 +54,3 @@ public class JarEntryRevision extends Revision {",
                "             if(null != conn) {",
                "-                try {",
                "-                    conn.getInputStream().close();",
                "-                } catch (IOException ignored) {",
                "-                }",
                "+                conn.disconnect();",
                "             }",
                "@@ -74,6 +68,6 @@ public class JarEntryRevision extends Revision {",
                "     public boolean needsReloading() {",
                "-        JarURLConnection conn = null;",
                "+        StrutsJarURLConnection conn = null;",
                "         long lastLastModified = lastModified;",
                "         try {",
                "-            conn = (JarURLConnection) jarFileURL.openConnection();",
                "+            conn = new StrutsJarURLConnection(jarFileURL);",
                "             conn.setUseCaches(false);",
                "@@ -84,6 +78,3 @@ public class JarEntryRevision extends Revision {",
                "             if(null != conn) {",
                "-                try {",
                "-                    conn.getInputStream().close();",
                "-                } catch (IOException ignored) {",
                "-                }",
                "+                conn.disconnect();",
                "             }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/fs/StrutsJarURLConnection.java b/core/src/main/java/com/opensymphony/xwork2/util/fs/StrutsJarURLConnection.java",
                "new file mode 100644",
                "index 000000000..5a59a6205",
                "--- /dev/null",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/fs/StrutsJarURLConnection.java",
                "@@ -0,0 +1,93 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package com.opensymphony.xwork2.util.fs;",
                "+",
                "+import java.io.IOException;",
                "+import java.io.InputStream;",
                "+import java.net.JarURLConnection;",
                "+import java.net.MalformedURLException;",
                "+import java.net.URL;",
                "+import java.nio.file.Files;",
                "+import java.nio.file.Path;",
                "+import java.nio.file.StandardCopyOption;",
                "+import java.security.AccessController;",
                "+import java.security.PrivilegedActionException;",
                "+import java.security.PrivilegedExceptionAction;",
                "+import java.util.jar.JarFile;",
                "+",
                "+/**",
                "+ * WW-4901 Decouples Struts from {@link URL#openConnection()} implementation of container (e.g. IBM WebSphere com.ibm.ws.classloader.Handler$ClassLoaderURLConnection)",
                "+ * @since 2.5.15",
                "+ */",
                "+class StrutsJarURLConnection extends JarURLConnection {",
                "+    private JarFile jarFile;",
                "+",
                "+    StrutsJarURLConnection(URL url) throws MalformedURLException {",
                "+        super(url);",
                "+    }",
                "+",
                "+    @Override",
                "+    public JarFile getJarFile() throws IOException {",
                "+        connect();",
                "+        return jarFile;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void connect() throws IOException {",
                "+        if (connected)",
                "+            return;",
                "+",
                "+        try (final InputStream in = getJarFileURL().openConnection().getInputStream()) {",
                "+            jarFile = AccessController.doPrivileged(",
                "+                    new PrivilegedExceptionAction<JarFile>() {",
                "+                        public JarFile run() throws IOException {",
                "+                            Path tmpFile = Files.createTempFile(\"jar_cache\", null);",
                "+                            try {",
                "+                                Files.copy(in, tmpFile, StandardCopyOption.REPLACE_EXISTING);",
                "+                                JarFile jarFile = new JarFile(tmpFile.toFile(), true, JarFile.OPEN_READ);",
                "+                                tmpFile.toFile().deleteOnExit();",
                "+                                return jarFile;",
                "+                            } catch (Throwable thr) {",
                "+                                try {",
                "+                                    Files.delete(tmpFile);",
                "+                                } catch (IOException ioe) {",
                "+                                    thr.addSuppressed(ioe);",
                "+                                }",
                "+                                throw thr;",
                "+                            } finally {",
                "+                                in.close();",
                "+                            }",
                "+                        }",
                "+                    });",
                "+            connected = true;",
                "+        } catch (PrivilegedActionException pae) {",
                "+            throw (IOException) pae.getException();",
                "+        }",
                "+    }",
                "+",
                "+    void disconnect() {",
                "+        if (connected) {",
                "+            connected = false;",
                "+            try {",
                "+                jarFile.close();",
                "+            } catch (IOException ignored) {",
                "+            }",
                "+        }",
                "+    }",
                "+}"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java",
                "core/src/main/java/com/opensymphony/xwork2/util/fs/StrutsJarURLConnection.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4901": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: implement",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4901",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c4bd87e51074374c08b0b05d7b708aa9a5b7d257",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513581880,
            "hunks": 0,
            "message": "Merge pull request #193 from yasserzamani/defaultActionInvocation_coverage Increases the coverage of DefaultActionInvocation",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "193": "WW-4873 Makes ActionInvocation not serializable and InvocationSessionStore$InvocationContext transient #192"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 193",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a728c74f21b76443c2b24c463041666fc1e05554",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511853280,
            "hunks": 0,
            "message": "Merge pull request #183 from lukaszlenart/pimp-my-struts Pimp my struts",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "183": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 183",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "025aba98fe4bcffe4d68d0992a644d373c80d764",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510254671,
            "hunks": 1,
            "message": "WW-4851 upgrade Log4j2 to version 2.9.1",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 1a391aacc..64a7095b0 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -104,3 +104,3 @@",
                "         <tiles-request.version>1.0.6</tiles-request.version>",
                "-        <log4j2.version>2.9.0</log4j2.version>",
                "+        <log4j2.version>2.9.1</log4j2.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4851": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: upgrade, version",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4851",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "033573e8fb5c4aceba1e4469b41ff777210a109a",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514796653,
            "hunks": 3,
            "message": "WW-4903 Reverts to previous initialise mechanism",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java b/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "index 03052ec6a..cf196a9b2 100644",
                "--- a/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "+++ b/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "@@ -61,3 +61,3 @@ import java.util.Set;",
                "  */",
                "-public class PrefixBasedActionProxyFactory extends StrutsActionProxyFactory implements Initializable {",
                "+public class PrefixBasedActionProxyFactory extends StrutsActionProxyFactory {",
                "@@ -66,3 +66,2 @@ public class PrefixBasedActionProxyFactory extends StrutsActionProxyFactory impl",
                "     private Map<String, ActionProxyFactory> actionProxyFactories = new HashMap<>();",
                "-    private Set<String> prefixes = new HashSet<>();",
                "@@ -76,18 +75,14 @@ public class PrefixBasedActionProxyFactory extends StrutsActionProxyFactory impl",
                "         if (list != null) {",
                "-            prefixes = new HashSet<>(Arrays.asList(list.split(\",\")));",
                "-        }",
                "-    }",
                "-",
                "-    @Override",
                "-    public void init() {",
                "-        for (String factory : prefixes) {",
                "-            String[] thisFactory = factory.split(\":\");",
                "-            if (thisFactory.length == 2) {",
                "-                String factoryPrefix = thisFactory[0].trim();",
                "-                String factoryName = thisFactory[1].trim();",
                "-                ActionProxyFactory obj = container.getInstance(ActionProxyFactory.class, factoryName);",
                "-                if (obj != null) {",
                "-                    actionProxyFactories.put(factoryPrefix, obj);",
                "-                } else {",
                "-                    LOG.warn(\"Invalid PrefixBasedActionProxyFactory config entry: [{}]\", factory);",
                "+            Set<String> prefixes = new HashSet<>(Arrays.asList(list.split(\",\")));",
                "+            for (String factory : prefixes) {",
                "+                String[] thisFactory = factory.split(\":\");",
                "+                if (thisFactory.length == 2) {",
                "+                    String factoryPrefix = thisFactory[0].trim();",
                "+                    String factoryName = thisFactory[1].trim();",
                "+                    ActionProxyFactory obj = container.getInstance(ActionProxyFactory.class, factoryName);",
                "+                    if (obj != null) {",
                "+                        actionProxyFactories.put(factoryPrefix, obj);",
                "+                    } else {",
                "+                        LOG.warn(\"Invalid PrefixBasedActionProxyFactory config entry: [{}]\", factory);",
                "+                    }",
                "                 }"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4903": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: base",
                    "relevance": 4
                },
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4903",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2eb809144aac4b3682c52817ec01546057f7c7d5",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517397390,
            "hunks": 0,
            "message": "Merge pull request #3 from yasserzamani/sessionless test not create when no session",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "3": "Basic LocalDateTime support #532"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: request",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 3",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0f2e0b1023587779542bb9d5e7b6689117f11fc8",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1500288644,
            "hunks": 2,
            "message": "Adds empty line",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java",
                "index 602eeaf6d..0bbad6c6a 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java",
                "@@ -52,2 +52,3 @@ public interface TypeConverter {",
                "     String TYPE_CONVERTER_CONTEXT_KEY = \"_typeConverter\";",
                "-}",
                "\\ No newline at end of file",
                "+",
                "+}"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "86323c34e0f37b515b9441f68b0426b6615a55d6",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1495438997,
            "hunks": 9,
            "message": "Reuses existing context instead of creating a new MemberAccess each time",
            "diff": [
                "diff --git a/plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java b/plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java",
                "index ccc2edf55..f7d7aa24f 100644",
                "--- a/plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java",
                "+++ b/plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java",
                "@@ -20,2 +20,3 @@ package org.apache.struts2.oval.interceptor;",
                "+import com.opensymphony.xwork2.ActionContext;",
                " import com.opensymphony.xwork2.ActionInvocation;",
                "@@ -28,4 +29,2 @@ import com.opensymphony.xwork2.interceptor.MethodFilterInterceptor;",
                " import com.opensymphony.xwork2.interceptor.PrefixMethodInvocationUtil;",
                "-import com.opensymphony.xwork2.ognl.OgnlUtil;",
                "-import com.opensymphony.xwork2.ognl.SecurityMemberAccess;",
                " import com.opensymphony.xwork2.util.ValueStack;",
                "@@ -34,3 +33,4 @@ import net.sf.oval.expression.ExpressionLanguage;",
                " import net.sf.oval.expression.ExpressionLanguageOGNLImpl;",
                "-import ognl.*;",
                "+import ognl.Ognl;",
                "+import ognl.OgnlException;",
                " import org.apache.logging.log4j.Logger;",
                "@@ -52,3 +52,2 @@ import java.util.List;",
                " import java.util.Map;",
                "-import java.util.Objects;",
                "@@ -71,2 +70,6 @@ public class OValValidationInterceptor extends MethodFilterInterceptor {",
                "+    public OValValidationInterceptor() {",
                "+        ognlExpressionLanguage = new ExpressionLanguageOGNL();",
                "+    }",
                "+",
                "     @Inject",
                "@@ -89,12 +92,2 @@ public class OValValidationInterceptor extends MethodFilterInterceptor {",
                "-    @Inject",
                "-    public void setOgnlUtil(OgnlUtil ognlUtil) {",
                "-        SecurityMemberAccess securityMemberAccess = new SecurityMemberAccess(false);",
                "-        securityMemberAccess.setExcludedClasses(ognlUtil.getExcludedClasses());",
                "-        securityMemberAccess.setExcludedPackageNamePatterns(ognlUtil.getExcludedPackageNamePatterns());",
                "-        securityMemberAccess.setExcludedPackageNames(ognlUtil.getExcludedPackageNames());",
                "-",
                "-        ognlExpressionLanguage = new ExpressionLanguageOGNL(securityMemberAccess);",
                "-    }",
                "-",
                "     /**",
                "@@ -314,18 +307,6 @@ class ExpressionLanguageOGNL extends ExpressionLanguageOGNLImpl {",
                "-    private MemberAccess memberAccess;",
                "-",
                "-    public ExpressionLanguageOGNL(MemberAccess memberAccess) {",
                "-        this.memberAccess = memberAccess;",
                "-    }",
                "-",
                "     public Object evaluate(final String expression, final Map<String, ? > values) throws ExpressionEvaluationException {",
                "         try {",
                "-            final OgnlContext ctx = (OgnlContext) Ognl.createDefaultContext(null, memberAccess);",
                "-",
                "-            for (final Map.Entry<String, ?> entry : values.entrySet()) {",
                "-                ctx.put(entry.getKey(), entry.getValue());",
                "-            }",
                "-",
                "             LOG.debug(\"Evaluating OGNL expression: {1}\", expression);",
                "-            return Ognl.getValue(expression, ctx, ctx);",
                "+            return Ognl.getValue(expression, ActionContext.getContext().getContextMap(), values);",
                "         } catch (final OgnlException ex) {"
            ],
            "changed_files": [
                "plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "fb23b719f222e4c1fcddca694202db9541644c34",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513804113,
            "hunks": 20,
            "message": "used char instead of a single character string",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/entities/AllowedMethods.java b/core/src/main/java/com/opensymphony/xwork2/config/entities/AllowedMethods.java",
                "index 1e6c64448..fa645883e 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/entities/AllowedMethods.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/entities/AllowedMethods.java",
                "@@ -58,3 +58,3 @@ public class AllowedMethods {",
                "             } else if (method.startsWith(\"regex:\")) {",
                "-                String pattern = method.substring(method.indexOf(\":\") + 1);",
                "+                String pattern = method.substring(method.indexOf(':') + 1);",
                "                 allowedMethods.add(new PatternAllowedMethod(pattern, method));",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/GlobalLocalizedTextProvider.java b/core/src/main/java/com/opensymphony/xwork2/util/GlobalLocalizedTextProvider.java",
                "index 97ca7dcd0..fce1b995c 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/GlobalLocalizedTextProvider.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/GlobalLocalizedTextProvider.java",
                "@@ -173,4 +173,4 @@ public class GlobalLocalizedTextProvider extends AbstractLocalizedTextProvider {",
                "-            while ((i = indexedTextName.indexOf(\"[\", i + 1)) != -1) {",
                "-                int j = indexedTextName.indexOf(\"]\", i);",
                "+            while ((i = indexedTextName.indexOf('[', i + 1)) != -1) {",
                "+                int j = indexedTextName.indexOf(']', i);",
                "                 String a = indexedTextName.substring(0, i);",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProvider.java b/core/src/main/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProvider.java",
                "index 6366a8691..1dc74b70d 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProvider.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProvider.java",
                "@@ -234,4 +234,4 @@ public class StrutsLocalizedTextProvider extends AbstractLocalizedTextProvider {",
                "-            while ((i = indexedTextName.indexOf(\"[\", i + 1)) != -1) {",
                "-                int j = indexedTextName.indexOf(\"]\", i);",
                "+            while ((i = indexedTextName.indexOf('[', i + 1)) != -1) {",
                "+                int j = indexedTextName.indexOf(']', i);",
                "                 String a = indexedTextName.substring(0, i);",
                "@@ -295,3 +295,3 @@ public class StrutsLocalizedTextProvider extends AbstractLocalizedTextProvider {",
                "         // see if it's a child property",
                "-        int idx = aTextName.indexOf(\".\");",
                "+        int idx = aTextName.indexOf('.');",
                "@@ -302,3 +302,3 @@ public class StrutsLocalizedTextProvider extends AbstractLocalizedTextProvider {",
                "             if (aTextName.startsWith(XWorkConverter.CONVERSION_ERROR_PROPERTY_PREFIX)) {",
                "-                idx = aTextName.indexOf(\".\", XWorkConverter.CONVERSION_ERROR_PROPERTY_PREFIX.length());",
                "+                idx = aTextName.indexOf('.', XWorkConverter.CONVERSION_ERROR_PROPERTY_PREFIX.length());",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/finder/ClassFinder.java b/core/src/main/java/com/opensymphony/xwork2/util/finder/ClassFinder.java",
                "index 678a2baed..fcbd08e4e 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/finder/ClassFinder.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/finder/ClassFinder.java",
                "@@ -191,3 +191,3 @@ public interface ClassFinder {",
                "         public String getPackageName(){",
                "-            return name.indexOf(\".\") > 0 ? name.substring(0, name.lastIndexOf(\".\")) : \"\" ;",
                "+            return name.indexOf('.') > 0 ? name.substring(0, name.lastIndexOf('.')) : \"\" ;",
                "         }",
                "diff --git a/core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java b/core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java",
                "index 7a0113b87..b41b4d60e 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java",
                "@@ -91,4 +91,4 @@ public class ServletUrlRenderer implements UrlRenderer {",
                "             // prioritised before this [in start(Writer) method]",
                "-            if (_value != null && _value.indexOf(\"?\") > 0) {",
                "-                _value = _value.substring(0, _value.indexOf(\"?\"));",
                "+            if (_value != null && _value.indexOf('?') > 0) {",
                "+                _value = _value.substring(0, _value.indexOf('?'));",
                "             }",
                "@@ -152,6 +152,6 @@ public class ServletUrlRenderer implements UrlRenderer {",
                "         Map actionParams = null;",
                "-        if (action != null && action.indexOf(\"?\") > 0) {",
                "-            String queryString = action.substring(action.indexOf(\"?\") + 1);",
                "+        if (action != null && action.indexOf('?') > 0) {",
                "+            String queryString = action.substring(action.indexOf('?') + 1);",
                "             actionParams = urlHelper.parseQueryString(queryString, false);",
                "-            action = action.substring(0, action.indexOf(\"?\"));",
                "+            action = action.substring(0, action.indexOf('?'));",
                "         }",
                "@@ -324,3 +324,3 @@ public class ServletUrlRenderer implements UrlRenderer {",
                "         if (StringUtils.contains(value, \"?\")) {",
                "-            String queryString = value.substring(value.indexOf(\"?\") + 1);",
                "+            String queryString = value.substring(value.indexOf('?') + 1);",
                "diff --git a/core/src/main/java/org/apache/struts2/components/template/BaseTemplateEngine.java b/core/src/main/java/org/apache/struts2/components/template/BaseTemplateEngine.java",
                "index 7f5deb50c..050ffb195 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/template/BaseTemplateEngine.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/template/BaseTemplateEngine.java",
                "@@ -144,3 +144,3 @@ public abstract class BaseTemplateEngine implements TemplateEngine {",
                "         String t = template.toString();",
                "-        if (t.indexOf(\".\") <= 0) {",
                "+        if (t.indexOf('.') <= 0) {",
                "             return t + \".\" + getSuffix();",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java b/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "index e4725e792..224e36a7c 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "@@ -165,4 +165,4 @@ public class DefaultActionMapper implements ActionMapper {",
                "                             if (!allowSlashesInActionNames && !allowActionCrossNamespaceAccess) {",
                "-                                if (actionName.lastIndexOf(\"/\") != -1) {",
                "-                                    actionName = actionName.substring(actionName.lastIndexOf(\"/\") + 1);",
                "+                                if (actionName.lastIndexOf('/') != -1) {",
                "+                                    actionName = actionName.substring(actionName.lastIndexOf('/') + 1);",
                "                                 }",
                "@@ -273,3 +273,3 @@ public class DefaultActionMapper implements ActionMapper {",
                "-        int indexOfSemicolon = uri.indexOf(\";\");",
                "+        int indexOfSemicolon = uri.indexOf(';');",
                "         uri = (indexOfSemicolon > -1) ? uri.substring(0, indexOfSemicolon) : uri;",
                "@@ -293,3 +293,3 @@ public class DefaultActionMapper implements ActionMapper {",
                "             String name = mapping.getName();",
                "-            int exclamation = name.lastIndexOf(\"!\");",
                "+            int exclamation = name.lastIndexOf('!');",
                "             if (exclamation != -1) {",
                "@@ -343,3 +343,3 @@ public class DefaultActionMapper implements ActionMapper {",
                "         String namespace, name;",
                "-        int lastSlash = uri.lastIndexOf(\"/\");",
                "+        int lastSlash = uri.lastIndexOf('/');",
                "         if (lastSlash == -1) {",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/multipart/AbstractMultiPartRequest.java b/core/src/main/java/org/apache/struts2/dispatcher/multipart/AbstractMultiPartRequest.java",
                "index 112621c3e..700364047 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/multipart/AbstractMultiPartRequest.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/multipart/AbstractMultiPartRequest.java",
                "@@ -133,4 +133,4 @@ public abstract class AbstractMultiPartRequest implements MultiPartRequest {",
                "-        int forwardSlash = fileName.lastIndexOf(\"/\");",
                "-        int backwardSlash = fileName.lastIndexOf(\"\\\\\");",
                "+        int forwardSlash = fileName.lastIndexOf('/');",
                "+        int backwardSlash = fileName.lastIndexOf('\\\\');",
                "         if (forwardSlash != -1 && forwardSlash > backwardSlash) {",
                "diff --git a/core/src/main/java/org/apache/struts2/result/ServletDispatcherResult.java b/core/src/main/java/org/apache/struts2/result/ServletDispatcherResult.java",
                "index 136e700cd..f29a771ed 100644",
                "--- a/core/src/main/java/org/apache/struts2/result/ServletDispatcherResult.java",
                "+++ b/core/src/main/java/org/apache/struts2/result/ServletDispatcherResult.java",
                "@@ -139,4 +139,4 @@ public class ServletDispatcherResult extends StrutsResultSupport {",
                "             // see WW-2120",
                "-            if (StringUtils.isNotEmpty(finalLocation) && finalLocation.indexOf(\"?\") > 0) {",
                "-                String queryString = finalLocation.substring(finalLocation.indexOf(\"?\") + 1);",
                "+            if (StringUtils.isNotEmpty(finalLocation) && finalLocation.indexOf('?') > 0) {",
                "+                String queryString = finalLocation.substring(finalLocation.indexOf('?') + 1);",
                "                 HttpParameters parameters = getParameters(invocation);",
                "diff --git a/core/src/main/java/org/apache/struts2/result/ServletRedirectResult.java b/core/src/main/java/org/apache/struts2/result/ServletRedirectResult.java",
                "index 90e94c975..0879ab06d 100644",
                "--- a/core/src/main/java/org/apache/struts2/result/ServletRedirectResult.java",
                "+++ b/core/src/main/java/org/apache/struts2/result/ServletRedirectResult.java",
                "@@ -273,3 +273,3 @@ public class ServletRedirectResult extends StrutsResultSupport implements Reflec",
                "             if (url.contains(\"?\")) {",
                "-                rawUrl = url.substring(0, url.indexOf(\"?\"));",
                "+                rawUrl = url.substring(0, url.indexOf('?'));",
                "             }",
                "diff --git a/core/src/main/java/org/apache/struts2/views/jsp/TagUtils.java b/core/src/main/java/org/apache/struts2/views/jsp/TagUtils.java",
                "index ea212ac65..1484ccfc0 100644",
                "--- a/core/src/main/java/org/apache/struts2/views/jsp/TagUtils.java",
                "+++ b/core/src/main/java/org/apache/struts2/views/jsp/TagUtils.java",
                "@@ -100,3 +100,3 @@ public class TagUtils {",
                "                 String path = RequestUtils.getServletPath(request);",
                "-                return path.substring(0, path.lastIndexOf(\"/\"));",
                "+                return path.substring(0, path.lastIndexOf('/'));",
                "             }",
                "diff --git a/core/src/main/java/org/apache/struts2/views/velocity/components/AbstractDirective.java b/core/src/main/java/org/apache/struts2/views/velocity/components/AbstractDirective.java",
                "index 1bed8ef89..99f005940 100644",
                "--- a/core/src/main/java/org/apache/struts2/views/velocity/components/AbstractDirective.java",
                "+++ b/core/src/main/java/org/apache/struts2/views/velocity/components/AbstractDirective.java",
                "@@ -148,3 +148,3 @@ public abstract class AbstractDirective extends Directive {",
                "-        int idx = param.indexOf(\"=\");",
                "+        int idx = param.indexOf('=');"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/config/entities/AllowedMethods.java",
                "core/src/main/java/com/opensymphony/xwork2/util/GlobalLocalizedTextProvider.java",
                "core/src/main/java/com/opensymphony/xwork2/util/StrutsLocalizedTextProvider.java",
                "core/src/main/java/com/opensymphony/xwork2/util/finder/ClassFinder.java",
                "core/src/main/java/org/apache/struts2/components/ServletUrlRenderer.java",
                "core/src/main/java/org/apache/struts2/components/template/BaseTemplateEngine.java",
                "core/src/main/java/org/apache/struts2/dispatcher/mapper/DefaultActionMapper.java",
                "core/src/main/java/org/apache/struts2/dispatcher/multipart/AbstractMultiPartRequest.java",
                "core/src/main/java/org/apache/struts2/result/ServletDispatcherResult.java",
                "core/src/main/java/org/apache/struts2/result/ServletRedirectResult.java",
                "core/src/main/java/org/apache/struts2/views/jsp/TagUtils.java",
                "core/src/main/java/org/apache/struts2/views/velocity/components/AbstractDirective.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: base, request, allow",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "42cc8bd0fd0927f00a5dc3db642ca1b20b8ffd85",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1516335525,
            "hunks": 11,
            "message": "Align OptGroup with Select 1. allow set freemarker sequence or hash as list 2. if list is a List, use 'top' as listKey and listValue",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/components/ListUIBean.java b/core/src/main/java/org/apache/struts2/components/ListUIBean.java",
                "index 6e24e822e..7d835d322 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/ListUIBean.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/ListUIBean.java",
                "@@ -72,3 +72,3 @@ public abstract class ListUIBean extends UIBean {",
                "             value = findValue((String) list);",
                "-        } else if (list instanceof Collection) {",
                "+        } else if (list instanceof Collection || list instanceof Map) {",
                "             value = list;",
                "@@ -109,2 +109,4 @@ public abstract class ListUIBean extends UIBean {",
                "             addParameter(\"listKey\", \"key\");",
                "+        } else {",
                "+            addParameter(\"listKey\", \"top\");",
                "         }",
                "@@ -121,2 +123,4 @@ public abstract class ListUIBean extends UIBean {",
                "             addParameter(\"listValue\", \"value\");",
                "+        } else {",
                "+            addParameter(\"listValue\", \"top\");",
                "         }",
                "diff --git a/core/src/main/java/org/apache/struts2/components/OptGroup.java b/core/src/main/java/org/apache/struts2/components/OptGroup.java",
                "index 58d0b9a72..95d94d26e 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/OptGroup.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/OptGroup.java",
                "@@ -129,3 +129,3 @@ public class OptGroup extends Component {",
                "     @StrutsTagAttribute(description=\"Set the list attribute.\")",
                "-    public void setList(String list) {",
                "+    public void setList(Object list) {",
                "         internalUiBean.setList(list);",
                "diff --git a/core/src/main/resources/template/simple/optgroup.ftl b/core/src/main/resources/template/simple/optgroup.ftl",
                "index f1f8a3e9e..765591cca 100644",
                "--- a/core/src/main/resources/template/simple/optgroup.ftl",
                "+++ b/core/src/main/resources/template/simple/optgroup.ftl",
                "@@ -23,8 +23,8 @@",
                " <#list optGroupInternalListUiBeans as optGroupInternalListUiBean>",
                "-<optgroup ",
                "+<optgroup<#rt>",
                " \t<#if optGroupInternalListUiBean.parameters.label?has_content>",
                "-\tlabel=\"${optGroupInternalListUiBean.parameters.label}\"",
                "+ label=\"${optGroupInternalListUiBean.parameters.label}\"<#rt>",
                " \t</#if>",
                " \t<#if optGroupInternalListUiBean.parameters.disabled!false>",
                "-\tdisabled=\"disabled\"",
                "+ disabled=\"disabled\"<#rt>",
                " \t</#if>",
                "@@ -32,3 +32,2 @@",
                " >",
                "-",
                " <#list optGroupInternalListUiBean.parameters.list as optGroupBean>",
                "@@ -38,8 +37,8 @@",
                " \t<#assign tmpKeyStr = tmpKey.toString() />",
                "-\t<option value=\"${tmpKeyStr?html}\"",
                "+\t<option value=\"${tmpKeyStr?html}\"<#rt>",
                " \t<#if tag.contains(parameters.nameValue, tmpKey) == true>",
                "-\tselected=\"selected\"",
                "+\tselected=\"selected\"<#rt>",
                " \t</#if>",
                "-\t>${tmpValue?html}",
                "-\t</option>",
                "+\t>${tmpValue?html}<#t>",
                "+\t</option><#lt>",
                " <#assign trash=stack.pop() />"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/components/ListUIBean.java",
                "core/src/main/java/org/apache/struts2/components/OptGroup.java",
                "core/src/main/resources/template/simple/optgroup.ftl"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: allow",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "dd8ba56425d5cab99b4c03312c56a78e22749663",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514817915,
            "hunks": 6,
            "message": "Extends factories to allow return implementing type",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/Factory.java b/core/src/main/java/com/opensymphony/xwork2/inject/Factory.java",
                "index 8ef85fb2c..cd709c8b0 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/Factory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/Factory.java",
                "@@ -2,3 +2,3 @@",
                "  * Copyright (C) 2006 Google Inc.",
                "- *",
                "+ * <p>",
                "  * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "@@ -6,5 +6,5 @@",
                "  * You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "+ * <p>",
                "+ * http://www.apache.org/licenses/LICENSE-2.0",
                "+ * <p>",
                "  * Unless required by applicable law or agreed to in writing, software",
                "@@ -25,10 +25,18 @@ public interface Factory<T> {",
                "-  /**",
                "-   * Creates an object to be injected.",
                "-   *",
                "-   * @param context of this injection",
                "-   * @return instance to be injected",
                "-   * @throws Exception if unable to create object",
                "-   */",
                "-  T create(Context context) throws Exception;",
                "+    /**",
                "+     * Creates an object to be injected.",
                "+     *",
                "+     * @param context of this injection",
                "+     * @return instance to be injected",
                "+     * @throws Exception if unable to create object",
                "+     */",
                "+    T create(Context context) throws Exception;",
                "+",
                "+    /**",
                "+     * Returns a class of <T>",
                "+     *",
                "+     * @return class of the object",
                "+     */",
                "+    Class<? extends T> type();",
                "+",
                " }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/InternalFactory.java b/core/src/main/java/com/opensymphony/xwork2/inject/InternalFactory.java",
                "index 30391836b..cc0988a9a 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/InternalFactory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/InternalFactory.java",
                "@@ -2,3 +2,3 @@",
                "  * Copyright (C) 2006 Google Inc.",
                "- *",
                "+ * <p>",
                "  * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "@@ -6,5 +6,5 @@",
                "  * You may obtain a copy of the License at",
                "- *",
                "- *  http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "+ * <p>",
                "+ * http://www.apache.org/licenses/LICENSE-2.0",
                "+ * <p>",
                "  * Unless required by applicable law or agreed to in writing, software",
                "@@ -27,9 +27,17 @@ interface InternalFactory<T> extends Serializable {",
                "-  /**",
                "-   * Creates an object to be injected.",
                "-   *",
                "-   * @param context of this injection",
                "-   * @return instance to be injected",
                "-   */",
                "-  T create(InternalContext context);",
                "+    /**",
                "+     * Creates an object to be injected.",
                "+     *",
                "+     * @param context of this injection",
                "+     * @return instance to be injected",
                "+     */",
                "+    T create(InternalContext context);",
                "+",
                "+    /**",
                "+     * Returns a class of <T>",
                "+     *",
                "+     * @return class of the object",
                "+     */",
                "+    Class<? extends T> type();",
                "+",
                " }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/inject/Factory.java",
                "core/src/main/java/com/opensymphony/xwork2/inject/InternalFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: allow, implement",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f351e8582926f6395628617110d6515f4405134e",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508606991,
            "hunks": 1,
            "message": "Uses property instead of hardcoding path",
            "diff": [
                "diff --git a/plugins/embeddedjsp/pom.xml b/plugins/embeddedjsp/pom.xml",
                "index efa531311..b7d32d6b6 100644",
                "--- a/plugins/embeddedjsp/pom.xml",
                "+++ b/plugins/embeddedjsp/pom.xml",
                "@@ -102,3 +102,3 @@",
                "                     <additionalClasspathElements>",
                "-                        <element>target/test-classes/jsps.jar</element>",
                "+                        <element>${project.build.testOutputDirectory}/jsps.jar</element>",
                "                     </additionalClasspathElements>"
            ],
            "changed_files": [
                "plugins/embeddedjsp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d64365770dabfffd8797aec08871de68fe4c85b4",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514972756,
            "hunks": 2,
            "message": "Uses the new interface to initialise object when setting up the framework",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionPropertiesProcessor.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionPropertiesProcessor.java",
                "index a665c9818..7336db1ec 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionPropertiesProcessor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionPropertiesProcessor.java",
                "@@ -25,2 +25,3 @@ import com.opensymphony.xwork2.conversion.TypeConverterCreator;",
                " import com.opensymphony.xwork2.conversion.TypeConverterHolder;",
                "+import com.opensymphony.xwork2.inject.EarlyInitializable;",
                " import com.opensymphony.xwork2.inject.Initializable;",
                "@@ -37,3 +38,3 @@ import java.util.Properties;",
                "-public class DefaultConversionPropertiesProcessor implements ConversionPropertiesProcessor, Initializable {",
                "+public class DefaultConversionPropertiesProcessor implements ConversionPropertiesProcessor, EarlyInitializable {"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultConversionPropertiesProcessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "5cd409d382e00b190bfe4e957c4167d06b8f9da1",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1495434646,
            "hunks": 27,
            "message": "Uses OGNL 3.2.2 which always requires MemberAccess",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ActionContext.java b/core/src/main/java/com/opensymphony/xwork2/ActionContext.java",
                "index 4e4367fcb..e2c8b8048 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ActionContext.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ActionContext.java",
                "@@ -20,4 +20,6 @@ package com.opensymphony.xwork2;",
                "+import com.opensymphony.xwork2.conversion.TypeConverter;",
                " import com.opensymphony.xwork2.inject.Container;",
                " import com.opensymphony.xwork2.util.ValueStack;",
                "+import ognl.OgnlContext;",
                " import org.apache.struts2.dispatcher.HttpParameters;",
                "@@ -186,2 +188,6 @@ public class ActionContext implements Serializable {",
                "     public Map<String, Object> getContextMap() {",
                "+        Map<String, Object> context = getContext().context;",
                "+        if (context instanceof OgnlContext) {",
                "+            ((OgnlContext) context).put(TypeConverter.TYPE_CONVERTER_CONTEXT_KEY, ((OgnlContext) context).getTypeConverter());",
                "+        }",
                "         return context;",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "index 17bbf9c1b..0982936dc 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "@@ -679,3 +679,3 @@ public class OgnlUtil {",
                "-        return Ognl.createDefaultContext(root, resolver, defaultConverter, memberAccess);",
                "+        return Ognl.createDefaultContext(root, memberAccess, resolver, defaultConverter);",
                "     }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java",
                "index d766241e8..07464e04d 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java",
                "@@ -96,3 +96,3 @@ public class OgnlValueStack implements Serializable, ValueStack, ClearableValueS",
                "         this.securityMemberAccess = new SecurityMemberAccess(allowStaticMethodAccess);",
                "-        this.context = Ognl.createDefaultContext(this.root, accessor, new OgnlTypeConverterWrapper(xworkConverter), securityMemberAccess);",
                "+        this.context = Ognl.createDefaultContext(this.root, securityMemberAccess, accessor, new OgnlTypeConverterWrapper(xworkConverter));",
                "         context.put(VALUE_STACK, this);",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java b/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "index 905ef775c..092cb8aad 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "@@ -21,3 +21,3 @@ package com.opensymphony.xwork2.ognl;",
                " import com.opensymphony.xwork2.util.ProxyUtil;",
                "-import ognl.DefaultMemberAccess;",
                "+import ognl.MemberAccess;",
                " import org.apache.logging.log4j.LogManager;",
                "@@ -25,3 +25,5 @@ import org.apache.logging.log4j.Logger;",
                "-import java.lang.reflect.*;",
                "+import java.lang.reflect.AccessibleObject;",
                "+import java.lang.reflect.Member;",
                "+import java.lang.reflect.Modifier;",
                " import java.util.Collections;",
                "@@ -36,3 +38,3 @@ import java.util.regex.Pattern;",
                "  */",
                "-public class SecurityMemberAccess extends DefaultMemberAccess {",
                "+public class SecurityMemberAccess implements MemberAccess {",
                "@@ -49,3 +51,2 @@ public class SecurityMemberAccess extends DefaultMemberAccess {",
                "     public SecurityMemberAccess(boolean method) {",
                "-        super(false);",
                "         allowStaticMethodAccess = method;",
                "@@ -57,2 +58,24 @@ public class SecurityMemberAccess extends DefaultMemberAccess {",
                "+    @Override",
                "+    public Object setup(Map context, Object target, Member member, String propertyName) {",
                "+        Object result = null;",
                "+",
                "+        if (isAccessible(context, target, member, propertyName)) {",
                "+            AccessibleObject accessible = (AccessibleObject) member;",
                "+",
                "+            if (!accessible.isAccessible()) {",
                "+                result = Boolean.TRUE;",
                "+                accessible.setAccessible(true);",
                "+            }",
                "+        }",
                "+        return result;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void restore(Map context, Object target, Member member, String propertyName, Object state) {",
                "+        if (state != null) {",
                "+            ((AccessibleObject) member).setAccessible((Boolean) state);",
                "+        }",
                "+    }",
                "+",
                "     @Override",
                "@@ -107,4 +130,3 @@ public class SecurityMemberAccess extends DefaultMemberAccess {",
                "-        // Now check for standard scope rules",
                "-        return super.isAccessible(context, target, member, propertyName) && isAcceptableProperty(propertyName);",
                "+        return Modifier.isPublic(member.getModifiers()) && isAcceptableProperty(propertyName);",
                "     }",
                "@@ -134,3 +156,3 @@ public class SecurityMemberAccess extends DefaultMemberAccess {",
                "         }",
                "-        ",
                "+",
                "         final String targetPackageName = targetPackage == null ? \"\" : targetPackage.getName();",
                "@@ -144,3 +166,3 @@ public class SecurityMemberAccess extends DefaultMemberAccess {",
                "-        for (String packageName: excludedPackageNames) {",
                "+        for (String packageName : excludedPackageNames) {",
                "             if (targetPackageName.startsWith(packageName) || targetPackageName.equals(packageName)",
                "diff --git a/core/src/main/java/org/apache/struts2/views/jsp/ui/OgnlTool.java b/core/src/main/java/org/apache/struts2/views/jsp/ui/OgnlTool.java",
                "index 952575503..9f6e8513a 100644",
                "--- a/core/src/main/java/org/apache/struts2/views/jsp/ui/OgnlTool.java",
                "+++ b/core/src/main/java/org/apache/struts2/views/jsp/ui/OgnlTool.java",
                "@@ -20,3 +20,3 @@ package org.apache.struts2.views.jsp.ui;",
                "-import ognl.Ognl;",
                "+import com.opensymphony.xwork2.ActionContext;",
                " import ognl.OgnlException;",
                "@@ -32,6 +32,6 @@ public class OgnlTool {",
                "     private OgnlUtil ognlUtil;",
                "-    ",
                "+",
                "     public OgnlTool() {",
                "     }",
                "-    ",
                "+",
                "     @Inject",
                "@@ -40,6 +40,6 @@ public class OgnlTool {",
                "     }",
                "-    ",
                "+",
                "     public Object findValue(String expr, Object context) {",
                "         try {",
                "-            return Ognl.getValue(ognlUtil.compile(expr), context);",
                "+            return ognlUtil.getValue(expr, ActionContext.getContext().getContextMap(), context);",
                "         } catch (OgnlException e) {",
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index 27462a1e4..204c5f1c0 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -51,3 +51,2 @@",
                "                 ognl.MemberAccess,",
                "-                ognl.DefaultMemberAccess,",
                "                 com.opensymphony.xwork2.ognl.SecurityMemberAccess,",
                "diff --git a/plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java b/plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java",
                "index bf660c25b..ccc2edf55 100644",
                "--- a/plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java",
                "+++ b/plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java",
                "@@ -28,3 +28,9 @@ import com.opensymphony.xwork2.interceptor.MethodFilterInterceptor;",
                " import com.opensymphony.xwork2.interceptor.PrefixMethodInvocationUtil;",
                "+import com.opensymphony.xwork2.ognl.OgnlUtil;",
                "+import com.opensymphony.xwork2.ognl.SecurityMemberAccess;",
                " import com.opensymphony.xwork2.util.ValueStack;",
                "+import net.sf.oval.exception.ExpressionEvaluationException;",
                "+import net.sf.oval.expression.ExpressionLanguage;",
                "+import net.sf.oval.expression.ExpressionLanguageOGNLImpl;",
                "+import ognl.*;",
                " import org.apache.logging.log4j.Logger;",
                "@@ -45,2 +51,4 @@ import java.lang.reflect.Method;",
                " import java.util.List;",
                "+import java.util.Map;",
                "+import java.util.Objects;",
                "@@ -61,2 +69,4 @@ public class OValValidationInterceptor extends MethodFilterInterceptor {",
                "+    private ExpressionLanguage ognlExpressionLanguage;",
                "+",
                "     @Inject",
                "@@ -79,2 +89,12 @@ public class OValValidationInterceptor extends MethodFilterInterceptor {",
                "+    @Inject",
                "+    public void setOgnlUtil(OgnlUtil ognlUtil) {",
                "+        SecurityMemberAccess securityMemberAccess = new SecurityMemberAccess(false);",
                "+        securityMemberAccess.setExcludedClasses(ognlUtil.getExcludedClasses());",
                "+        securityMemberAccess.setExcludedPackageNamePatterns(ognlUtil.getExcludedPackageNamePatterns());",
                "+        securityMemberAccess.setExcludedPackageNames(ognlUtil.getExcludedPackageNames());",
                "+",
                "+        ognlExpressionLanguage = new ExpressionLanguageOGNL(securityMemberAccess);",
                "+    }",
                "+",
                "     /**",
                "@@ -155,2 +175,3 @@ public class OValValidationInterceptor extends MethodFilterInterceptor {",
                "         Validator validator = configurers.isEmpty() ? new Validator() : new Validator(configurers);",
                "+        validator.addExpressionLanguage(\"ognl\", ognlExpressionLanguage);",
                "         //if the method is annotated with a @Profiles annotation, use those profiles",
                "@@ -286,2 +307,30 @@ public class OValValidationInterceptor extends MethodFilterInterceptor {",
                "     }",
                "+",
                " }",
                "+",
                "+class ExpressionLanguageOGNL extends ExpressionLanguageOGNLImpl {",
                "+",
                "+    private static final Logger LOG = LogManager.getLogger(ExpressionLanguageOGNL.class);",
                "+",
                "+    private MemberAccess memberAccess;",
                "+",
                "+    public ExpressionLanguageOGNL(MemberAccess memberAccess) {",
                "+        this.memberAccess = memberAccess;",
                "+    }",
                "+",
                "+    public Object evaluate(final String expression, final Map<String, ? > values) throws ExpressionEvaluationException {",
                "+        try {",
                "+            final OgnlContext ctx = (OgnlContext) Ognl.createDefaultContext(null, memberAccess);",
                "+",
                "+            for (final Map.Entry<String, ?> entry : values.entrySet()) {",
                "+                ctx.put(entry.getKey(), entry.getValue());",
                "+            }",
                "+",
                "+            LOG.debug(\"Evaluating OGNL expression: {1}\", expression);",
                "+            return Ognl.getValue(expression, ctx, ctx);",
                "+        } catch (final OgnlException ex) {",
                "+            throw new ExpressionEvaluationException(\"Evaluating script with OGNL failed.\", ex);",
                "+        }",
                "+    }",
                "+}",
                "+"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/ActionContext.java",
                "core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java",
                "core/src/main/java/com/opensymphony/xwork2/ognl/SecurityMemberAccess.java",
                "core/src/main/java/org/apache/struts2/views/jsp/ui/OgnlTool.java",
                "core/src/main/resources/struts-default.xml",
                "plugins/oval/src/main/java/org/apache/struts2/oval/interceptor/OValValidationInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "7518e809ddd290e3a80b0133b19a1bdfe7738dbb",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515778568,
            "hunks": 3,
            "message": "fixed getValidationGroups get called if not skipped Validation removed unnecessary LOG.isDebugEnabled()",
            "diff": [
                "diff --git a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "index f2b2e9b0b..1545b4870 100644",
                "--- a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "+++ b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "@@ -96,6 +96,3 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "-        if (LOG.isDebugEnabled()) {",
                "-            LOG.debug(\"Validating [{}/{}] with method [{}]\", invocation.getProxy().getNamespace(), invocation.getProxy().getActionName(), methodName);",
                "-        }",
                "-        Class<?>[] validationGroup = getValidationGroups(action, methodName);",
                "+        LOG.debug(\"Validating [{}/{}] with method [{}]\", invocation.getProxy().getNamespace(), invocation.getProxy().getActionName(), methodName);",
                "@@ -103,2 +100,3 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "                 true, true)) {",
                "+            Class<?>[] validationGroup = getValidationGroups(action, methodName);",
                "             // performing bean validation on action",
                "@@ -158,5 +156,3 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "                     }",
                "-                    if (LOG.isDebugEnabled()) {",
                "-                        LOG.debug(\"Adding field error [{}] with message [{}]\", fieldName, validationError.getMessage());",
                "-                    }",
                "+                    LOG.debug(\"Adding field error [{}] with message [{}]\", fieldName, validationError.getMessage());",
                "                     validatorContext.addFieldError(fieldName, validationError.getMessage());"
            ],
            "changed_files": [
                "plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "a9899b662212b10a73ebc8b9e15a3e95785bf0fe",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1516963630,
            "hunks": 8,
            "message": "Introduces new method find all annotations",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "index c37103526..567c9fd79 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "@@ -23,2 +23,3 @@ import java.lang.reflect.Field;",
                " import java.lang.reflect.Method;",
                "+import java.util.ArrayList;",
                " import java.util.Arrays;",
                "@@ -131,3 +132,3 @@ public class AnnotationUtils {",
                "     /**",
                "-     * Returns the annotation on the given class or the package of the class. This searchs up the",
                "+     * Returns the annotation on the given class or the package of the class. This searches up the",
                "      * class hierarchy and the package hierarchy for the closest match.",
                "@@ -153,2 +154,31 @@ public class AnnotationUtils {",
                "     }",
                "+",
                "+    /**",
                "+     * Returns the annotation on the given class or the package of the class. This searches up the",
                "+     * class hierarchy and the package hierarchy for the closest match.",
                "+     *",
                "+     * @param <T>             class type",
                "+     * @param clazz           The class to search for the annotation.",
                "+     * @param annotationClass The Class of the annotation.",
                "+     * @return The annotation or null.",
                "+     */",
                "+    public static <T extends Annotation> List<T> findAnnotations(Class<?> clazz, Class<T> annotationClass) {",
                "+        List<T> anns = new ArrayList<>();",
                "+",
                "+        T ann = clazz.getAnnotation(annotationClass);",
                "+        if (ann != null) {",
                "+            anns.add(ann);",
                "+        }",
                "+",
                "+        ann = clazz.getPackage().getAnnotation(annotationClass);",
                "+        if (ann != null) {",
                "+            anns.add(ann);",
                "+        }",
                "+",
                "+        if (clazz.getSuperclass() != Object.class) {",
                "+            anns.addAll(findAnnotations(clazz.getSuperclass(), annotationClass));",
                "+        }",
                "+",
                "+        return anns;",
                "+    }",
                " }",
                "diff --git a/plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java b/plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java",
                "index a4e7eceb8..bc586d4ac 100644",
                "--- a/plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java",
                "+++ b/plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java",
                "@@ -751,4 +751,4 @@ public class PackageBasedActionConfigBuilder implements ActionConfigBuilder {",
                "     private Set<String> getAllowedMethods(Class<?> actionClass) {",
                "-        AllowedMethods annotation = AnnotationUtils.findAnnotation(actionClass, AllowedMethods.class);",
                "-        if (annotation == null) {",
                "+        List<AllowedMethods> annotations = AnnotationUtils.findAnnotations(actionClass, AllowedMethods.class);",
                "+        if (annotations == null || annotations.isEmpty()) {",
                "             return Collections.emptySet();",
                "@@ -756,4 +756,4 @@ public class PackageBasedActionConfigBuilder implements ActionConfigBuilder {",
                "             Set<String> methods = new HashSet<>();",
                "-            for (String method : annotation.value()) {",
                "-                methods.add(method);",
                "+            for (AllowedMethods allowedMethods : annotations) {",
                "+                methods.addAll(Arrays.asList(allowedMethods.value()));",
                "             }",
                "@@ -926,3 +926,3 @@ public class PackageBasedActionConfigBuilder implements ActionConfigBuilder {",
                "         if (annotation != null) {",
                "-            actionName = annotation.value() != null && annotation.value().equals(Action.DEFAULT_VALUE) ? actionName : annotation.value();",
                "+            actionName = annotation.value().equals(Action.DEFAULT_VALUE) ? actionName : annotation.value();",
                "             actionName = StringUtils.contains(actionName, \"/\") && !slashesInActionNames ? StringUtils.substringAfterLast(actionName, \"/\") : actionName;",
                "@@ -962,3 +962,3 @@ public class PackageBasedActionConfigBuilder implements ActionConfigBuilder {",
                "         //add exception mappings from annotation",
                "-        if (annotation != null && annotation.exceptionMappings() != null)",
                "+        if (annotation != null)",
                "             actionConfig.addExceptionMappings(buildExceptionMappings(annotation.exceptionMappings(), actionName));",
                "@@ -999,4 +999,3 @@ public class PackageBasedActionConfigBuilder implements ActionConfigBuilder {",
                "                     .exception(), exceptionMapping.result());",
                "-            if (exceptionMapping.params() != null)",
                "-                builder.addParams(StringTools.createParameterMap(exceptionMapping.params()));",
                "+            builder.addParams(StringTools.createParameterMap(exceptionMapping.params()));",
                "             exceptionMappings.add(builder.build());"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: base, plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d63cc99f24c0576e5b1c14d3feb09ba8c87f5262",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1490349810,
            "hunks": 12,
            "message": "Adjusts OGNL usage to avoid modify immutable context",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java",
                "index 19b262678..29268b874 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java",
                "@@ -46,7 +46,8 @@ public interface TypeConverter",
                "      */",
                "-    public Object convertValue(Map<String, Object> context, Object target, Member member, String propertyName, Object value, Class toType);",
                "+    Object convertValue(Map<String, Object> context, Object target, Member member, String propertyName, Object value, Class toType);",
                "-    public static final Object NO_CONVERSION_POSSIBLE = \"ognl.NoConversionPossible\";",
                "-    ",
                "-    public static final String TYPE_CONVERTER_CONTEXT_KEY = \"_typeConverter\";",
                "+    Object NO_CONVERSION_POSSIBLE = \"ognl.NoConversionPossible\";",
                "+",
                "+    @Deprecated",
                "+    String TYPE_CONVERTER_CONTEXT_KEY = \"_typeConverter\";",
                " }",
                "\\ No newline at end of file",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultTypeConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultTypeConverter.java",
                "index 15ecbcf7b..e8fdb2c00 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultTypeConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultTypeConverter.java",
                "@@ -21,3 +21,2 @@ package com.opensymphony.xwork2.conversion.impl;",
                " import com.opensymphony.xwork2.ActionContext;",
                "-import com.opensymphony.xwork2.LocaleProvider;",
                " import com.opensymphony.xwork2.LocaleProviderFactory;",
                "@@ -27,2 +26,3 @@ import com.opensymphony.xwork2.inject.Inject;",
                " import com.opensymphony.xwork2.ognl.XWorkTypeConverterWrapper;",
                "+import ognl.OgnlContext;",
                "@@ -83,13 +83,18 @@ public abstract class DefaultTypeConverter implements TypeConverter {",
                "-    public TypeConverter getTypeConverter( Map<String, Object> context )",
                "-    {",
                "-        Object obj = context.get(TypeConverter.TYPE_CONVERTER_CONTEXT_KEY);",
                "-        if (obj instanceof TypeConverter) {",
                "-            return (TypeConverter) obj;",
                "-            ",
                "-        // for backwards-compatibility",
                "-        } else if (obj instanceof ognl.TypeConverter) {",
                "-            return new XWorkTypeConverterWrapper((ognl.TypeConverter) obj);",
                "+    public TypeConverter getTypeConverter( Map<String, Object> context ) {",
                "+        ognl.TypeConverter converter = null;",
                "+",
                "+        if (context instanceof OgnlContext) {",
                "+            converter = ((OgnlContext) context).getTypeConverter();",
                "+        }",
                "+",
                "+        if (converter != null) {",
                "+            if (converter instanceof TypeConverter) {",
                "+                return (TypeConverter) converter;",
                "+            } else {",
                "+                return new XWorkTypeConverterWrapper(converter);",
                "+            }",
                "         }",
                "-        return null; ",
                "+",
                "+        return null;",
                "     }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "index 0f2d78e5f..17bbf9c1b 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "@@ -186,4 +186,2 @@ public class OgnlUtil {",
                "-        Ognl.setTypeConverter(context, getTypeConverterFromContext(context));",
                "-",
                "         Object oldRoot = Ognl.getRoot(context);",
                "@@ -247,3 +245,2 @@ public class OgnlUtil {",
                "     public void setProperty(String name, Object value, Object o, Map<String, Object> context, boolean throwPropertyExceptions) {",
                "-        Ognl.setTypeConverter(context, getTypeConverterFromContext(context));",
                "@@ -489,7 +486,4 @@ public class OgnlUtil {",
                "-        TypeConverter converter = getTypeConverterFromContext(context);",
                "         final Map contextFrom = createDefaultContext(from, null);",
                "-        Ognl.setTypeConverter(contextFrom, converter);",
                "         final Map contextTo = createDefaultContext(to, null);",
                "-        Ognl.setTypeConverter(contextTo, converter);",
                "@@ -669,14 +663,2 @@ public class OgnlUtil {",
                "-    TypeConverter getTypeConverterFromContext(Map<String, Object> context) {",
                "-        /*ValueStack stack = (ValueStack) context.get(ActionContext.VALUE_STACK);",
                "-        Container cont = (Container)stack.getContext().get(ActionContext.CONTAINER);",
                "-        if (cont != null) {",
                "-            return new OgnlTypeConverterWrapper(cont.getInstance(XWorkConverter.class));",
                "-        } else {",
                "-            throw new IllegalArgumentException(\"Cannot find type converter in context map\");",
                "-        }",
                "-        */",
                "-        return defaultConverter;",
                "-    }",
                "-",
                "     protected Map createDefaultContext(Object root) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java",
                "index ab580691b..d766241e8 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java",
                "@@ -98,3 +98,2 @@ public class OgnlValueStack implements Serializable, ValueStack, ClearableValueS",
                "         context.put(VALUE_STACK, this);",
                "-        Ognl.setClassResolver(context, accessor);",
                "         ((OgnlContext) context).setTraceEvaluations(false);"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java",
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/DefaultTypeConverter.java",
                "core/src/main/java/com/opensymphony/xwork2/ognl/OgnlUtil.java",
                "core/src/main/java/com/opensymphony/xwork2/ognl/OgnlValueStack.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "8251dd836f845c360f2c9a9571c517c95a6cbb5e",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514109375,
            "hunks": 1,
            "message": "decrease log level for timeout",
            "diff": [
                "diff --git a/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java b/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "index ed69548fc..8543590bb 100644",
                "--- a/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "+++ b/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "@@ -108,3 +108,3 @@ public class DefaultAsyncManager implements AsyncManager, AsyncListener {",
                "         if (asyncCompleted) {",
                "-            LOG.error(log + \" - could not complete result executing due to timeout or network error\");",
                "+            LOG.debug(log + \" - could not complete result executing due to timeout or network error\");",
                "         } else {"
            ],
            "changed_files": [
                "plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "3d33a82da59eaf44a404de2ef37d62c569a236bb",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1507912669,
            "hunks": 1,
            "message": "Fixes JavaDoc",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java b/core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java",
                "index 571f5c3d3..a947caea7 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java",
                "@@ -49,3 +49,3 @@ import java.util.*;",
                "  * The files are uploaded when the object is instantiated. If there are any errors they are logged using",
                "- * {@link #addError(String)}. An action handling a multipart form should first check {@link #hasErrors()}",
                "+ * {@link #addError(LocalizedMessage)}. An action handling a multipart form should first check {@link #hasErrors()}",
                "  * before doing any other processing."
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/dispatcher/multipart/MultiPartRequestWrapper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: request",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "aee171c3b8ad401006612c4df44ed540fb2ed7e3",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514295652,
            "hunks": 11,
            "message": "add showcase for async plugin",
            "diff": [
                "diff --git a/apps/showcase/pom.xml b/apps/showcase/pom.xml",
                "index 7f277124e..c64fe5693 100644",
                "--- a/apps/showcase/pom.xml",
                "+++ b/apps/showcase/pom.xml",
                "@@ -91,2 +91,7 @@",
                "+        <dependency>",
                "+            <groupId>org.apache.struts</groupId>",
                "+            <artifactId>struts2-async-plugin</artifactId>",
                "+        </dependency>",
                "+",
                "         <dependency>",
                "diff --git a/apps/showcase/src/main/java/org/apache/struts2/showcase/async/AsyncFilter.java b/apps/showcase/src/main/java/org/apache/struts2/showcase/async/AsyncFilter.java",
                "new file mode 100644",
                "index 000000000..95d98ca53",
                "--- /dev/null",
                "+++ b/apps/showcase/src/main/java/org/apache/struts2/showcase/async/AsyncFilter.java",
                "@@ -0,0 +1,53 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.showcase.async;",
                "+",
                "+import javax.servlet.Filter;",
                "+import javax.servlet.FilterChain;",
                "+import javax.servlet.FilterConfig;",
                "+import javax.servlet.ServletException;",
                "+import javax.servlet.ServletRequest;",
                "+import javax.servlet.ServletResponse;",
                "+import javax.servlet.http.HttpServletRequest;",
                "+import java.io.IOException;",
                "+",
                "+/**",
                "+ * Filters async actions directly to Struts servlet",
                "+ */",
                "+public class AsyncFilter implements Filter {",
                "+    @Override",
                "+    public void init(FilterConfig filterConfig) throws ServletException {",
                "+",
                "+    }",
                "+",
                "+    @Override",
                "+    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {",
                "+        String requestURI = ((HttpServletRequest) servletRequest).getRequestURI();",
                "+        if (!requestURI.contains(\"/async/receiveNewMessages\")) {",
                "+            filterChain.doFilter(servletRequest, servletResponse); // Just continue chain.",
                "+        } else {",
                "+            servletRequest.getRequestDispatcher(\"/async/receiveNewMessages\").forward(servletRequest, servletResponse);",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public void destroy() {",
                "+",
                "+    }",
                "+}",
                "diff --git a/apps/showcase/src/main/java/org/apache/struts2/showcase/async/ChatRoomAction.java b/apps/showcase/src/main/java/org/apache/struts2/showcase/async/ChatRoomAction.java",
                "new file mode 100644",
                "index 000000000..5877fe6e1",
                "--- /dev/null",
                "+++ b/apps/showcase/src/main/java/org/apache/struts2/showcase/async/ChatRoomAction.java",
                "@@ -0,0 +1,68 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.showcase.async;",
                "+",
                "+import com.opensymphony.xwork2.ActionSupport;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+import java.util.concurrent.Callable;",
                "+",
                "+/**",
                "+ * Example to illustrate the <code>async</code> plugin.",
                "+ */",
                "+public class ChatRoomAction extends ActionSupport {",
                "+    private String message;",
                "+    private Integer lastIndex;",
                "+    private List<String> newMessages;",
                "+",
                "+    private static final List<String> messages = new ArrayList<>();",
                "+",
                "+    public void setMessage(String message) {",
                "+        this.message = message;",
                "+    }",
                "+",
                "+    public void setLastIndex(Integer lastIndex) {",
                "+        this.lastIndex = lastIndex;",
                "+    }",
                "+",
                "+    public List<String> getNewMessages() {",
                "+        return newMessages;",
                "+    }",
                "+",
                "+    public Callable<String> receiveNewMessages() throws Exception {",
                "+        return new Callable<String>() {",
                "+            @Override",
                "+            public String call() throws Exception {",
                "+                while (lastIndex >= messages.size()) {",
                "+                    Thread.sleep(3000);",
                "+                }",
                "+                newMessages = messages.subList(lastIndex, messages.size());",
                "+                return SUCCESS;",
                "+            }",
                "+        };",
                "+    }",
                "+",
                "+    public String sendMessage() {",
                "+        synchronized (messages) {",
                "+            messages.add(message);",
                "+        }",
                "+        return SUCCESS;",
                "+    }",
                "+}",
                "diff --git a/apps/showcase/src/main/resources/struts-async.xml b/apps/showcase/src/main/resources/struts-async.xml",
                "new file mode 100644",
                "index 000000000..faa38656c",
                "--- /dev/null",
                "+++ b/apps/showcase/src/main/resources/struts-async.xml",
                "@@ -0,0 +1,49 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>",
                "+<!--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                "+<!DOCTYPE struts PUBLIC",
                "+\t\"-//Apache Software Foundation//DTD Struts Configuration 2.5//EN\"",
                "+\t\"http://struts.apache.org/dtds/struts-2.5.dtd\">",
                "+",
                "+<struts>",
                "+    <package name=\"async\" extends=\"json-default\" namespace=\"/async\">",
                "+",
                "+        <action name=\"receiveNewMessages\" class=\"org.apache.struts2.showcase.async.ChatRoomAction\" method=\"receiveNewMessages\">",
                "+            <result name=\"success\" type=\"json\">",
                "+                <param name=\"root\">newMessages</param>",
                "+            </result>",
                "+            <result name=\"timeout\" type=\"json\">",
                "+                <param name=\"root\">newMessages</param>",
                "+            </result>",
                "+        </action>",
                "+",
                "+        <action name=\"sendMessage\" class=\"org.apache.struts2.showcase.async.ChatRoomAction\" method=\"sendMessage\">",
                "+            <result name=\"success\" type=\"json\">",
                "+                <param name=\"root\">newMessages</param>",
                "+            </result>",
                "+            <result name=\"timeout\" type=\"json\">",
                "+                <param name=\"root\">newMessages</param>",
                "+            </result>",
                "+        </action>",
                "+",
                "+    </package>",
                "+",
                "+</struts>",
                "diff --git a/apps/showcase/src/main/resources/struts.xml b/apps/showcase/src/main/resources/struts.xml",
                "index 46611f9cd..ee7dbcee3 100644",
                "--- a/apps/showcase/src/main/resources/struts.xml",
                "+++ b/apps/showcase/src/main/resources/struts.xml",
                "@@ -76,2 +76,4 @@",
                "+    <include file=\"struts-async.xml\" />",
                "+",
                "     <package name=\"default\" extends=\"struts-default\">",
                "diff --git a/apps/showcase/src/main/webapp/WEB-INF/decorators/main.jsp b/apps/showcase/src/main/webapp/WEB-INF/decorators/main.jsp",
                "index 727b28c5b..bcbe36113 100644",
                "--- a/apps/showcase/src/main/webapp/WEB-INF/decorators/main.jsp",
                "+++ b/apps/showcase/src/main/webapp/WEB-INF/decorators/main.jsp",
                "@@ -237,2 +237,3 @@",
                "                                     href=\"%{url}\">Model Driven</s:a></li>",
                "+                            <li><s:a value=\"/async/index.html\">Async</s:a></li>",
                "                         </ul>",
                "diff --git a/apps/showcase/src/main/webapp/WEB-INF/web.xml b/apps/showcase/src/main/webapp/WEB-INF/web.xml",
                "index 204ed6f7d..d69061e9c 100644",
                "--- a/apps/showcase/src/main/webapp/WEB-INF/web.xml",
                "+++ b/apps/showcase/src/main/webapp/WEB-INF/web.xml",
                "@@ -25,3 +25,9 @@",
                "     <display-name>Struts Showcase Application</display-name>",
                "-\t",
                "+",
                "+    <filter>",
                "+        <filter-name>async</filter-name>",
                "+        <filter-class>org.apache.struts2.showcase.async.AsyncFilter</filter-class>",
                "+        <async-supported>true</async-supported>",
                "+    </filter>",
                "+",
                "     <filter>",
                "@@ -42,2 +48,7 @@",
                "+    <filter-mapping>",
                "+        <filter-name>async</filter-name>",
                "+        <url-pattern>/async/*</url-pattern>",
                "+    </filter-mapping>",
                "+",
                "     <filter-mapping>",
                "@@ -115,2 +126,9 @@",
                "+    <servlet>",
                "+        <servlet-name>strutsServlet</servlet-name>",
                "+        <servlet-class>org.apache.struts2.dispatcher.servlet.StrutsServlet</servlet-class>",
                "+        <load-on-startup>1</load-on-startup>",
                "+        <async-supported>true</async-supported>",
                "+    </servlet>",
                "+",
                "     <servlet-mapping>",
                "@@ -130,2 +148,7 @@",
                "+    <servlet-mapping>",
                "+        <servlet-name>strutsServlet</servlet-name>",
                "+        <url-pattern>/async/receiveNewMessages</url-pattern>",
                "+    </servlet-mapping>",
                "+",
                "     <!-- END SNIPPET: dwr -->",
                "diff --git a/apps/showcase/src/main/webapp/async/index.html b/apps/showcase/src/main/webapp/async/index.html",
                "new file mode 100644",
                "index 000000000..3726eb7f8",
                "--- /dev/null",
                "+++ b/apps/showcase/src/main/webapp/async/index.html",
                "@@ -0,0 +1,119 @@",
                "+<!--",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+-->",
                "+<html>",
                "+<head>",
                "+\t<title>Struts2 Showcase - Async Example</title>",
                "+\t<script>",
                "+        function User () {",
                "+            this.lastIndex = 0;",
                "+            this.sendMessage = function(message) {",
                "+                $.ajax({",
                "+                    url: \"sendMessage\",",
                "+                    data: {",
                "+                        message: message",
                "+                    }",
                "+                });",
                "+            };",
                "+            this.receiveNewMessages = function() {",
                "+                $.ajax({",
                "+                    url: \"receiveNewMessages\",",
                "+                    context: this,",
                "+                    data: {",
                "+                        lastIndex: this.lastIndex",
                "+                    },",
                "+                    success: function (result) {",
                "+                        if (result != null) {//result is null on timeout",
                "+                            var msgs = $('#msgs');",
                "+                            var messages = msgs.val();",
                "+                            msgs.val(messages + result + '\\n');",
                "+                            this.lastIndex += result.length;",
                "+                        }",
                "+                        this.receiveNewMessages();",
                "+                    }",
                "+                });",
                "+            };",
                "+            this.receiveNewMessages();",
                "+        }",
                "+",
                "+        var user;",
                "+        ",
                "+        function sendMessage() {",
                "+            var msg = $('#msg');",
                "+            var message = msg.val();",
                "+            if (message.length > 0) {",
                "+                user.sendMessage(message);",
                "+                msg.val('');",
                "+            }",
                "+            return false;",
                "+        }",
                "+",
                "+        $(function() {",
                "+            user = new User();",
                "+        });",
                "+",
                "+\t</script>",
                "+</head>",
                "+",
                "+<body>",
                "+<div class=\"page-header\">",
                "+\t<h1>Async Example</h1>",
                "+</div>",
                "+",
                "+",
                "+",
                "+<div class=\"container-fluid\">",
                "+\t<div class=\"row\">",
                "+\t\t<div class=\"col-md-12\" style=\"text-align: center;\">",
                "+",
                "+\t\t\t<p>",
                "+\t\t\t\tThese examples illustrate Struts build in support for async request processing.",
                "+\t\t\t</p>",
                "+\t\t\t<p>",
                "+\t\t\t\tWhen you have a process that takes a long time, it can make your app not scalable under heavy load conditions.",
                "+\t\t\t\tScalability limitations include running out of memory or exhausting the pool of container threads.",
                "+\t\t\t\tTo create scalable web applications, you must ensure that no threads associated with a request",
                "+\t\t\t\tare sitting idle, so the container can use them to process new requests.",
                "+\t\t\t\tAsynchronous processing refers to assigning these blocking operations to a new thread and returning",
                "+\t\t\t\tthe thread associated with the request immediately to the container.",
                "+                <br/> Reference: <a href=\"https://docs.oracle.com/javaee/7/tutorial/servlets012.htm\">Asynchronous Processing</a>",
                "+\t\t\t\t<br/> An interesting and vital use case for the async request processing is server push.",
                "+\t\t\t\tA good solution is to use the Servlet 3.0+ asynchronous feature.",
                "+\t\t\t</p>",
                "+",
                "+\t\t\t<br/>",
                "+            <h2>Example: A minimal chat room using server push</h2>",
                "+            <h3>Open current page in different tabs, browsers and computers then send messages.</h3>",
                "+            <h4>This is a minimal chat room which uses server push to retrieve new messages.",
                "+            It doesn't poll the server frequently to check if a new message is available to display.",
                "+            Instead it waits for the server to push back new messages. This approach has two obvious advantages:",
                "+            low-lag communication without requests being sent, and no waste of server resources and network bandwidth.</h4>",
                "+            <h5>Reference: <a href=\"https://www.javaworld.com/article/2077995/java-concurrency/java-concurrency-asynchronous-processing-support-in-servlet-3-0.html\">",
                "+                Asynchronous processing support in Servlet 3.0</a></h5>",
                "+            <textarea id=\"msgs\" cols=\"40\" rows=\"5\" title=\"messages\" readonly></textarea><br/>",
                "+\t\t\t<form>",
                "+\t\t\t\t<input name=\"msg\" id=\"msg\" type=\"text\" title=\"message\" required />",
                "+\t\t\t\t<input type=\"submit\" value=\"Send\" onclick=\"return sendMessage();\" />",
                "+\t\t\t</form>",
                "+\t\t</div>",
                "+\t</div>",
                "+</div>",
                "+</body>",
                "+</html>"
            ],
            "changed_files": [
                "apps/showcase/pom.xml",
                "apps/showcase/src/main/java/org/apache/struts2/showcase/async/AsyncFilter.java",
                "apps/showcase/src/main/java/org/apache/struts2/showcase/async/ChatRoomAction.java",
                "apps/showcase/src/main/resources/struts-async.xml",
                "apps/showcase/src/main/resources/struts.xml",
                "apps/showcase/src/main/webapp/WEB-INF/decorators/main.jsp",
                "apps/showcase/src/main/webapp/WEB-INF/web.xml",
                "apps/showcase/src/main/webapp/async/index.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d1df216b32db1622d3df48fd058bce5d009a17bf",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515837546,
            "hunks": 4,
            "message": "change default behavior",
            "diff": [
                "diff --git a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidationGroup.java b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidationGroup.java",
                "index dccebba6b..19332288f 100644",
                "--- a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidationGroup.java",
                "+++ b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidationGroup.java",
                "@@ -20,2 +20,3 @@ package org.apache.struts.beanvalidation.constraints;",
                "+import javax.validation.groups.Default;",
                " import java.lang.annotation.ElementType;",
                "@@ -48,3 +49,3 @@ public @interface ValidationGroup {",
                "-    Class<?>[] value() default {};",
                "+    Class<?>[] value() default {Default.class};",
                " }",
                "\\ No newline at end of file",
                "diff --git a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "index 1545b4870..75c25f9c3 100644",
                "--- a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "+++ b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "@@ -39,2 +39,3 @@ import javax.validation.ConstraintViolation;",
                " import javax.validation.Validator;",
                "+import javax.validation.groups.Default;",
                " import java.lang.reflect.Method;",
                "@@ -110,3 +111,3 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "         ValidationGroup validationGroup = MethodUtils.getAnnotation(getActionMethod(action.getClass(), methodName), ValidationGroup.class, true, true);",
                "-        return validationGroup == null ? new Class[]{} : validationGroup.value();",
                "+        return validationGroup == null ? new Class[]{Default.class} : validationGroup.value();",
                "     }"
            ],
            "changed_files": [
                "plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidationGroup.java",
                "plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "2b2de35519ede4627944f18feb349641b3be57ec",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515777987,
            "hunks": 4,
            "message": "Revert \"fixed some Logger calls. Hint:https://logging.apache.org/log4j/2.0/manual/api.html\" This reverts commit 87b2bd8",
            "diff": [
                "diff --git a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "index 7c93710ae..f2b2e9b0b 100644",
                "--- a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "+++ b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "@@ -96,2 +96,5 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "+        if (LOG.isDebugEnabled()) {",
                "+            LOG.debug(\"Validating [{}/{}] with method [{}]\", invocation.getProxy().getNamespace(), invocation.getProxy().getActionName(), methodName);",
                "+        }",
                "         Class<?>[] validationGroup = getValidationGroups(action, methodName);",
                "@@ -100,3 +103,2 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "                 true, true)) {",
                "-            LOG.debug(\"Validating [{}/{}] with method [{}] and groups [{}]\", invocation.getProxy().getNamespace(), invocation.getProxy().getActionName(), methodName, Arrays.toString(validationGroup));",
                "             // performing bean validation on action",
                "@@ -115,3 +117,3 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "-        LOG.trace(\"Initiating bean validation..\");",
                "+        LOG.trace(\"Initiating bean validation.. with groups [{}]\", Arrays.toString(groups));",
                "@@ -156,3 +158,5 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "                     }",
                "-                    LOG.debug(\"Adding field error [{}] with message [{}]\", fieldName, validationError.getMessage());",
                "+                    if (LOG.isDebugEnabled()) {",
                "+                        LOG.debug(\"Adding field error [{}] with message [{}]\", fieldName, validationError.getMessage());",
                "+                    }",
                "                     validatorContext.addFieldError(fieldName, validationError.getMessage());"
            ],
            "changed_files": [
                "plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "cf19d5130c3e7ef70af87944418233c81782809c",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515226036,
            "hunks": 1,
            "message": "Adds missing test dependency",
            "diff": [
                "diff --git a/plugins/embeddedjsp/pom.xml b/plugins/embeddedjsp/pom.xml",
                "index d629781eb..414a2a4bc 100644",
                "--- a/plugins/embeddedjsp/pom.xml",
                "+++ b/plugins/embeddedjsp/pom.xml",
                "@@ -48,2 +48,7 @@",
                "         </dependency>",
                "+        <dependency>",
                "+            <groupId>org.springframework</groupId>",
                "+            <artifactId>spring-web</artifactId>",
                "+            <scope>test</scope>",
                "+        </dependency>",
                "         <dependency>"
            ],
            "changed_files": [
                "plugins/embeddedjsp/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "87c2746fc7eb40861df63dc5f3582447b6851eeb",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514972665,
            "hunks": 1,
            "message": "Introduces dedicated factory to perform object's initialisation",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/InitializableFactory.java b/core/src/main/java/com/opensymphony/xwork2/inject/InitializableFactory.java",
                "new file mode 100644",
                "index 000000000..0994ace88",
                "--- /dev/null",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/InitializableFactory.java",
                "@@ -0,0 +1,56 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package com.opensymphony.xwork2.inject;",
                "+",
                "+import org.apache.logging.log4j.LogManager;",
                "+import org.apache.logging.log4j.Logger;",
                "+",
                "+class InitializableFactory<T> implements InternalFactory<T> {",
                "+",
                "+    private static final Logger LOG = LogManager.getLogger(InitializableFactory.class);",
                "+",
                "+    private InternalFactory<T> internalFactory;",
                "+",
                "+    private InitializableFactory(InternalFactory<T> internalFactory) {",
                "+        this.internalFactory = internalFactory;",
                "+    }",
                "+",
                "+    public static InternalFactory<?> wrapIfNeeded(InternalFactory<?> internalFactory) {",
                "+        if (Initializable.class.isAssignableFrom(internalFactory.type())) {",
                "+            return new InitializableFactory<>(internalFactory);",
                "+        }",
                "+        return internalFactory;",
                "+    }",
                "+",
                "+    @Override",
                "+    public T create(InternalContext context) {",
                "+        T instance = internalFactory.create(context);",
                "+        if (Initializable.class.isAssignableFrom(instance.getClass())) {",
                "+            Initializable.class.cast(instance).init();",
                "+        } else {",
                "+            LOG.error(\"Class {} is not marked as {}!\", internalFactory.getClass().getName(), Initializable.class.getName());",
                "+        }",
                "+        return instance;",
                "+    }",
                "+",
                "+    @Override",
                "+    public Class<? extends T> type() {",
                "+        return internalFactory.type();",
                "+    }",
                "+}"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/inject/InitializableFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: perform",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "836d7a0de857d037362a4234f6d7eaea925836cc",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510816614,
            "hunks": 1,
            "message": "Upgrades to the latest OGNL 3.2.4 version",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 7d931a8f4..010eca73b 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -100,3 +100,3 @@",
                "         <struts2.springPlatformVersion>4.1.9.RELEASE</struts2.springPlatformVersion>",
                "-        <ognl.version>3.2.3</ognl.version>",
                "+        <ognl.version>3.2.4</ognl.version>",
                "         <asm.version>5.2</asm.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: upgrade, version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "67bdf684196ae214d814513f52a0d38d4ed8e954",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515230039,
            "hunks": 11,
            "message": "Normalises name of property with Spring version",
            "diff": [
                "diff --git a/apps/pom.xml b/apps/pom.xml",
                "index 1a7d12c96..791f306ba 100644",
                "--- a/apps/pom.xml",
                "+++ b/apps/pom.xml",
                "@@ -101,3 +101,3 @@",
                "             <artifactId>spring-test</artifactId>",
                "-            <version>${struts2.springPlatformVersion}</version>",
                "+            <version>${spring.platformVersion}</version>",
                "             <scope>test</scope>",
                "diff --git a/pom.xml b/pom.xml",
                "index 73267690e..b15d3b880 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -99,3 +99,3 @@",
                "-        <struts2.springPlatformVersion>4.3.13.RELEASE</struts2.springPlatformVersion>",
                "+        <spring.platformVersion>4.3.13.RELEASE</spring.platformVersion>",
                "         <ognl.version>3.1.15</ognl.version>",
                "@@ -880,3 +880,3 @@",
                "                 <artifactId>spring-core</artifactId>",
                "-                <version>${struts2.springPlatformVersion}</version>",
                "+                <version>${spring.platformVersion}</version>",
                "             </dependency>",
                "@@ -885,3 +885,3 @@",
                "                 <artifactId>spring-webmvc-portlet</artifactId>",
                "-                <version>${struts2.springPlatformVersion}</version>",
                "+                <version>${spring.platformVersion}</version>",
                "             </dependency>",
                "@@ -890,3 +890,3 @@",
                "                 <artifactId>spring-context</artifactId>",
                "-                <version>${struts2.springPlatformVersion}</version>",
                "+                <version>${spring.platformVersion}</version>",
                "             </dependency>",
                "@@ -895,3 +895,3 @@",
                "                 <artifactId>spring-aop</artifactId>",
                "-                <version>${struts2.springPlatformVersion}</version>",
                "+                <version>${spring.platformVersion}</version>",
                "             </dependency>",
                "@@ -900,3 +900,3 @@",
                "                 <artifactId>spring-aspects</artifactId>",
                "-                <version>${struts2.springPlatformVersion}</version>",
                "+                <version>${spring.platformVersion}</version>",
                "             </dependency>",
                "@@ -905,3 +905,3 @@",
                "                 <artifactId>spring-beans</artifactId>",
                "-                <version>${struts2.springPlatformVersion}</version>",
                "+                <version>${spring.platformVersion}</version>",
                "             </dependency>",
                "@@ -910,3 +910,3 @@",
                "                 <artifactId>spring-test</artifactId>",
                "-                <version>${struts2.springPlatformVersion}</version>",
                "+                <version>${spring.platformVersion}</version>",
                "             </dependency>",
                "@@ -915,3 +915,3 @@",
                "                 <artifactId>spring-context-support</artifactId>",
                "-                <version>${struts2.springPlatformVersion}</version>",
                "+                <version>${spring.platformVersion}</version>",
                "             </dependency>",
                "@@ -920,3 +920,3 @@",
                "                 <artifactId>spring-web</artifactId>",
                "-                <version>${struts2.springPlatformVersion}</version>",
                "+                <version>${spring.platformVersion}</version>",
                "             </dependency>"
            ],
            "changed_files": [
                "apps/pom.xml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "a4183b63f80bcc93ed6d308b319837ce656fc183",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514818299,
            "hunks": 3,
            "message": "Adjusts class to the new Initializable mechanism",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java b/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "index cf196a9b2..03052ec6a 100644",
                "--- a/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "+++ b/core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java",
                "@@ -61,3 +61,3 @@ import java.util.Set;",
                "  */",
                "-public class PrefixBasedActionProxyFactory extends StrutsActionProxyFactory {",
                "+public class PrefixBasedActionProxyFactory extends StrutsActionProxyFactory implements Initializable {",
                "@@ -66,2 +66,3 @@ public class PrefixBasedActionProxyFactory extends StrutsActionProxyFactory {",
                "     private Map<String, ActionProxyFactory> actionProxyFactories = new HashMap<>();",
                "+    private Set<String> prefixes = new HashSet<>();",
                "@@ -75,14 +76,18 @@ public class PrefixBasedActionProxyFactory extends StrutsActionProxyFactory {",
                "         if (list != null) {",
                "-            Set<String> prefixes = new HashSet<>(Arrays.asList(list.split(\",\")));",
                "-            for (String factory : prefixes) {",
                "-                String[] thisFactory = factory.split(\":\");",
                "-                if (thisFactory.length == 2) {",
                "-                    String factoryPrefix = thisFactory[0].trim();",
                "-                    String factoryName = thisFactory[1].trim();",
                "-                    ActionProxyFactory obj = container.getInstance(ActionProxyFactory.class, factoryName);",
                "-                    if (obj != null) {",
                "-                        actionProxyFactories.put(factoryPrefix, obj);",
                "-                    } else {",
                "-                        LOG.warn(\"Invalid PrefixBasedActionProxyFactory config entry: [{}]\", factory);",
                "-                    }",
                "+            prefixes = new HashSet<>(Arrays.asList(list.split(\",\")));",
                "+        }",
                "+    }",
                "+",
                "+    @Override",
                "+    public void init() {",
                "+        for (String factory : prefixes) {",
                "+            String[] thisFactory = factory.split(\":\");",
                "+            if (thisFactory.length == 2) {",
                "+                String factoryPrefix = thisFactory[0].trim();",
                "+                String factoryName = thisFactory[1].trim();",
                "+                ActionProxyFactory obj = container.getInstance(ActionProxyFactory.class, factoryName);",
                "+                if (obj != null) {",
                "+                    actionProxyFactories.put(factoryPrefix, obj);",
                "+                } else {",
                "+                    LOG.warn(\"Invalid PrefixBasedActionProxyFactory config entry: [{}]\", factory);",
                "                 }"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/factory/PrefixBasedActionProxyFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: base",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "bffa47acf14b47133d8a8dff925fee8acf4823e8",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514104850,
            "hunks": 2,
            "message": "define constant for timeout result",
            "diff": [
                "diff --git a/plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java b/plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java",
                "index 3baf78fbd..1edf5d45a 100644",
                "--- a/plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java",
                "+++ b/plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java",
                "@@ -29,2 +29,8 @@ import java.util.concurrent.Executor;",
                " public class AsyncAction implements Callable {",
                "+",
                "+    /**",
                "+     * The action invocation was successful but did not return the result before timeout.",
                "+     */",
                "+    public static final String TIMEOUT = \"timeout\";",
                "+",
                "     private Callable callable;",
                "diff --git a/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java b/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "index 1e84f27f0..ed69548fc 100644",
                "--- a/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "+++ b/plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java",
                "@@ -134,3 +134,3 @@ public class DefaultAsyncManager implements AsyncManager, AsyncListener {",
                "         LOG.debug(\"Processing timeout for \" + asyncEvent.getAsyncContext());",
                "-        setAsyncActionResultAndDispatch(\"timeout\");",
                "+        setAsyncActionResultAndDispatch(AsyncAction.TIMEOUT);",
                "     }"
            ],
            "changed_files": [
                "plugins/async/src/main/java/org/apache/struts2/async/AsyncAction.java",
                "plugins/async/src/main/java/org/apache/struts2/async/DefaultAsyncManager.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "e717e469a4ad74edd689073cb1fb5afb818f1521",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1512372552,
            "hunks": 1,
            "message": "Uses the latest Spring version",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 672b126da..73267690e 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -99,3 +99,3 @@",
                "-        <struts2.springPlatformVersion>4.1.9.RELEASE</struts2.springPlatformVersion>",
                "+        <struts2.springPlatformVersion>4.3.13.RELEASE</struts2.springPlatformVersion>",
                "         <ognl.version>3.1.15</ognl.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "74dd8d69901f8e1afe7e0ffe60b5dbab9071f36e",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514818014,
            "hunks": 13,
            "message": "Adds implementation of the type() method",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/XWorkJUnit4TestCase.java b/core/src/main/java/com/opensymphony/xwork2/XWorkJUnit4TestCase.java",
                "index 8b8979a0a..ebec23fa2 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/XWorkJUnit4TestCase.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/XWorkJUnit4TestCase.java",
                "@@ -76,2 +76,6 @@ public abstract class XWorkJUnit4TestCase {",
                "+                    @Override",
                "+                    public Class type() {",
                "+                        return impl.getClass();",
                "+                    }",
                "                 }, Scope.SINGLETON);",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/XWorkTestCase.java b/core/src/main/java/com/opensymphony/xwork2/XWorkTestCase.java",
                "index e6dfd6953..21442dabc 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/XWorkTestCase.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/XWorkTestCase.java",
                "@@ -84,3 +84,7 @@ public abstract class XWorkTestCase extends TestCase {",
                "                     }",
                "-                    ",
                "+",
                "+                    @Override",
                "+                    public Class type() {",
                "+                        return impl.getClass();",
                "+                    }",
                "                 }, Scope.SINGLETON);",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java b/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "index c8f98b82e..44746771c 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "@@ -174,2 +174,7 @@ public class DefaultConfiguration implements Configuration {",
                "             }",
                "+",
                "+            @Override",
                "+            public Class<? extends Configuration> type() {",
                "+                return DefaultConfiguration.this.getClass();",
                "+            }",
                "         });",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/impl/LocatableConstantFactory.java b/core/src/main/java/com/opensymphony/xwork2/config/impl/LocatableConstantFactory.java",
                "index 334e72676..1d36e6245 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/impl/LocatableConstantFactory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/impl/LocatableConstantFactory.java",
                "@@ -38,3 +38,8 @@ public class LocatableConstantFactory<T> extends Located implements Factory {",
                "     }",
                "-    ",
                "+",
                "+    @Override",
                "+    public Class type() {",
                "+        return constant.getClass();",
                "+    }",
                "+",
                "     @Override",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/impl/LocatableFactory.java b/core/src/main/java/com/opensymphony/xwork2/config/impl/LocatableFactory.java",
                "index 05e447c6f..712809487 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/impl/LocatableFactory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/impl/LocatableFactory.java",
                "@@ -53,2 +53,7 @@ public class LocatableFactory<T> extends Located implements Factory<T> {",
                "+    @Override",
                "+    public Class<? extends T> type() {",
                "+        return implementation;",
                "+    }",
                "+",
                "     @Override",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java b/core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java",
                "index 04597e1cd..94c766cac 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java",
                "@@ -115,2 +115,3 @@ import org.apache.struts2.dispatcher.HttpParameters;",
                " import org.apache.struts2.dispatcher.Parameter;",
                "+import org.apache.struts2.factory.PrefixBasedActionProxyFactory;",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java b/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java",
                "index 73ca87bdb..6b8048a9f 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java",
                "@@ -57,2 +57,7 @@ public enum Scope {",
                "+                @Override",
                "+                public Class<? extends T> type() {",
                "+                    return factory.type();",
                "+                }",
                "+",
                "                 @Override",
                "@@ -91,2 +96,7 @@ public enum Scope {",
                "+                @Override",
                "+                public Class<? extends T> type() {",
                "+                    return factory.type();",
                "+                }",
                "+",
                "                 @Override",
                "@@ -116,2 +126,7 @@ public enum Scope {",
                "+                @Override",
                "+                public Class<? extends T> type() {",
                "+                    return factory.type();",
                "+                }",
                "+",
                "                 @Override",
                "@@ -141,2 +156,7 @@ public enum Scope {",
                "+                @Override",
                "+                public Class<? extends T> type() {",
                "+                    return factory.type();",
                "+                }",
                "+",
                "                 @Override",
                "@@ -166,2 +186,7 @@ public enum Scope {",
                "+                @Override",
                "+                public Class<? extends T> type() {",
                "+                    return factory.type();",
                "+                }",
                "+",
                "                 @Override",
                "diff --git a/core/src/main/java/org/apache/struts2/config/AbstractBeanSelectionProvider.java b/core/src/main/java/org/apache/struts2/config/AbstractBeanSelectionProvider.java",
                "index 1b5d7e42b..908a66ed9 100644",
                "--- a/core/src/main/java/org/apache/struts2/config/AbstractBeanSelectionProvider.java",
                "+++ b/core/src/main/java/org/apache/struts2/config/AbstractBeanSelectionProvider.java",
                "@@ -115,2 +115,7 @@ public abstract class AbstractBeanSelectionProvider implements BeanSelectionProv",
                "         }",
                "+",
                "+        @Override",
                "+        public Class type() {",
                "+            return type;",
                "+        }",
                "     }",
                "diff --git a/core/src/main/java/org/apache/struts2/config/StrutsXmlConfigurationProvider.java b/core/src/main/java/org/apache/struts2/config/StrutsXmlConfigurationProvider.java",
                "index c4de24938..ef27b6ce5 100644",
                "--- a/core/src/main/java/org/apache/struts2/config/StrutsXmlConfigurationProvider.java",
                "+++ b/core/src/main/java/org/apache/struts2/config/StrutsXmlConfigurationProvider.java",
                "@@ -92,2 +92,5 @@ public class StrutsXmlConfigurationProvider extends XmlConfigurationProvider {",
                "                 }",
                "+                public Class<? extends ServletContext> type() {",
                "+                    return servletContext.getClass();",
                "+                }",
                "             });"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/XWorkJUnit4TestCase.java",
                "core/src/main/java/com/opensymphony/xwork2/XWorkTestCase.java",
                "core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "core/src/main/java/com/opensymphony/xwork2/config/impl/LocatableConstantFactory.java",
                "core/src/main/java/com/opensymphony/xwork2/config/impl/LocatableFactory.java",
                "core/src/main/java/com/opensymphony/xwork2/config/providers/XWorkConfigurationProvider.java",
                "core/src/main/java/com/opensymphony/xwork2/inject/Scope.java",
                "core/src/main/java/org/apache/struts2/config/AbstractBeanSelectionProvider.java",
                "core/src/main/java/org/apache/struts2/config/StrutsXmlConfigurationProvider.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: implement",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "0bde78cc36df1ee9b68a8010a27c6b3c591edeef",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510604007,
            "hunks": 33,
            "message": "changed Map iterations to use entrySet when both key and value are used",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/impl/AbstractMatcher.java b/core/src/main/java/com/opensymphony/xwork2/config/impl/AbstractMatcher.java",
                "index a7c7b2811..d75a39b18 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/impl/AbstractMatcher.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/impl/AbstractMatcher.java",
                "@@ -156,4 +156,4 @@ public abstract class AbstractMatcher<E> implements Serializable {",
                "         //this will set the group index references, like {1}",
                "-        for (String key : orig.keySet()) {",
                "-            map.put(key, convertParam(orig.get(key), vars));",
                "+        for (Map.Entry<String,String> entry : orig.entrySet()) {",
                "+            map.put(entry.getKey(), convertParam(entry.getValue(), vars));",
                "         }",
                "@@ -162,5 +162,5 @@ public abstract class AbstractMatcher<E> implements Serializable {",
                "         //now add the non-numeric values",
                "-        for (String key: vars.keySet()) {",
                "-            if (!NumberUtils.isNumber(key)) {",
                "-                map.put(key, vars.get(key));",
                "+        for (Map.Entry<String,String> entry: vars.entrySet()) {",
                "+            if (!NumberUtils.isNumber(entry.getKey())) {",
                "+                map.put(entry.getKey(), entry.getValue());",
                "             }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcher.java b/core/src/main/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcher.java",
                "index ec498d41c..b94fff63a 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcher.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcher.java",
                "@@ -61,4 +61,4 @@ public class ActionConfigMatcher extends AbstractMatcher<ActionConfig> implement",
                "         super(patternMatcher);",
                "-        for (String name : configs.keySet()) {",
                "-            addPattern(name, configs.get(name), looseMatch);",
                "+        for (Map.Entry<String, ActionConfig> entry : configs.entrySet()) {",
                "+            addPattern(entry.getKey(), entry.getValue(), looseMatch);",
                "         }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java b/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "index 9d5d430c4..c8f98b82e 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "@@ -421,4 +421,4 @@ public class DefaultConfiguration implements Configuration {",
                "-            for (String ns : namespaceActionConfigs.keySet()) {",
                "-                namespaceActionConfigMatchers.put(ns, new ActionConfigMatcher(matcher, namespaceActionConfigs.get(ns), true));",
                "+            for (Map.Entry<String, Map<String, ActionConfig>> entry : namespaceActionConfigs.entrySet()) {",
                "+                namespaceActionConfigMatchers.put(entry.getKey(), new ActionConfigMatcher(matcher, entry.getValue(), true));",
                "             }",
                "@@ -498,7 +498,7 @@ public class DefaultConfiguration implements Configuration {",
                "-            for (String namespace : namespaceActionConfigs.keySet()) {",
                "-                Map<String, ActionConfig> actionConfigs = namespaceActionConfigs.get(namespace);",
                "+            for (Map.Entry<String, Map<String, ActionConfig>> entry : namespaceActionConfigs.entrySet()) {",
                "+                Map<String, ActionConfig> actionConfigs = entry.getValue();",
                "                 for (String s : actionConfigs.keySet()) {",
                "-                    buff.append(namespace).append(\"/\").append(s).append(\"\\n\");",
                "+                    buff.append(entry.getKey()).append(\"/\").append(s).append(\"\\n\");",
                "                 }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/config/providers/InterceptorBuilder.java b/core/src/main/java/com/opensymphony/xwork2/config/providers/InterceptorBuilder.java",
                "index e2584b19d..bf84cf366 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/config/providers/InterceptorBuilder.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/config/providers/InterceptorBuilder.java",
                "@@ -132,4 +132,4 @@ public class InterceptorBuilder {",
                "          */",
                "-        for (String key : refParams.keySet()) {",
                "-            String value = refParams.get(key);",
                "+        for (Map.Entry<String, String> entry : refParams.entrySet()) {",
                "+            String key = entry.getKey();",
                "@@ -146,3 +146,3 @@ public class InterceptorBuilder {",
                "-                map.put(key, value);",
                "+                map.put(key, entry.getValue());",
                "                 params.put(name, map);",
                "@@ -156,5 +156,5 @@ public class InterceptorBuilder {",
                "-        for (String key : params.keySet()) {",
                "-",
                "-            Map<String, String> map = params.get(key);",
                "+        for (Map.Entry<String, Map<String, String>> entry : params.entrySet()) {",
                "+            String key = entry.getKey();",
                "+            Map<String, String> map = entry.getValue();",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java",
                "index ee1f8f432..ac4b611b7 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java",
                "@@ -414,4 +414,4 @@ public class XWorkConverter extends DefaultTypeConverter {",
                "                         LOG.debug(\"Converter is null for property [{}]. Mapping size [{}]:\", property, mapping.size());",
                "-                        for (String next : mapping.keySet()) {",
                "-                            LOG.debug(\"{}:{}\", next, mapping.get(next));",
                "+                        for (Map.Entry<String, Object> entry : mapping.entrySet()) {",
                "+                            LOG.debug(\"{}:{}\", entry.getKey(), entry.getValue());",
                "                         }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/interceptor/ParameterFilterInterceptor.java b/core/src/main/java/com/opensymphony/xwork2/interceptor/ParameterFilterInterceptor.java",
                "index 172b429a4..3f0414a31 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/interceptor/ParameterFilterInterceptor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/interceptor/ParameterFilterInterceptor.java",
                "@@ -120,3 +120,5 @@ public class ParameterFilterInterceptor extends AbstractInterceptor {",
                "-            for (String currRule : includesExcludesMap.keySet()) {",
                "+            for (Map.Entry<String, Boolean> entry : includesExcludesMap.entrySet()) {",
                "+                String currRule = entry.getKey();",
                "+",
                "                 if (param.startsWith(currRule) &&",
                "@@ -124,3 +126,3 @@ public class ParameterFilterInterceptor extends AbstractInterceptor {",
                "                 ) {",
                "-                    currentAllowed = includesExcludesMap.get(currRule);",
                "+                    currentAllowed = entry.getValue();",
                "                 }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java b/core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java",
                "index 02615d855..6dc1c1953 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java",
                "@@ -174,6 +174,7 @@ public class ParametersInterceptor extends MethodFilterInterceptor {",
                "-        for (String name : params.keySet()) {",
                "-            Parameter parameter = params.get(name);",
                "-            if (isAcceptableParameter(name, action)) {",
                "-                acceptableParameters.put(name, parameter);",
                "+        for (Map.Entry<String, Parameter> entry : params.entrySet()) {",
                "+            String parameterName = entry.getKey();",
                "+",
                "+            if (isAcceptableParameter(parameterName, action)) {",
                "+                acceptableParameters.put(parameterName, entry.getValue());",
                "             }",
                "@@ -272,6 +273,6 @@ public class ParametersInterceptor extends MethodFilterInterceptor {",
                "         StringBuilder logEntry = new StringBuilder();",
                "-        for (String name : parameters.keySet()) {",
                "-            logEntry.append(String.valueOf(name));",
                "+        for (Map.Entry<String, Parameter> entry : parameters.entrySet()) {",
                "+            logEntry.append(entry.getKey());",
                "             logEntry.append(\" => \");",
                "-            logEntry.append(parameters.get(name).getValue());",
                "+            logEntry.append(entry.getValue().getValue());",
                "             logEntry.append(\" \");",
                "diff --git a/core/src/main/java/org/apache/struts2/components/UIBean.java b/core/src/main/java/org/apache/struts2/components/UIBean.java",
                "index fe0f65c3c..1a0356a0c 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/UIBean.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/UIBean.java",
                "@@ -1243,5 +1243,7 @@ public abstract class UIBean extends Component {",
                " \tpublic void setDynamicAttributes(Map<String, Object> tagDynamicAttributes) {",
                "-        for (String key : tagDynamicAttributes.keySet()) {",
                "+        for (Map.Entry<String, Object> entry : tagDynamicAttributes.entrySet()) {",
                "+            String key = entry.getKey();",
                "+",
                "             if (!isValidTagAttribute(key)) {",
                "-                dynamicAttributes.put(key, tagDynamicAttributes.get(key));",
                "+                dynamicAttributes.put(key, entry.getValue());",
                "             }",
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaStreamMultiPartRequest.java b/core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaStreamMultiPartRequest.java",
                "index 69c08193e..2d016f56b 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaStreamMultiPartRequest.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaStreamMultiPartRequest.java",
                "@@ -62,4 +62,4 @@ public class JakartaStreamMultiPartRequest extends AbstractMultiPartRequest {",
                "         LOG.debug(\"Performing File Upload temporary storage cleanup.\");",
                "-        for (String fieldName : fileInfos.keySet()) {",
                "-            for (FileInfo fileInfo : fileInfos.get(fieldName)) {",
                "+        for (List<FileInfo> fileInfoList : fileInfos.values()) {",
                "+            for (FileInfo fileInfo : fileInfoList) {",
                "                 File file = fileInfo.getFile();",
                "diff --git a/core/src/main/java/org/apache/struts2/result/PostbackResult.java b/core/src/main/java/org/apache/struts2/result/PostbackResult.java",
                "index 6ce109ca5..d040fbbb7 100644",
                "--- a/core/src/main/java/org/apache/struts2/result/PostbackResult.java",
                "+++ b/core/src/main/java/org/apache/struts2/result/PostbackResult.java",
                "@@ -217,4 +217,5 @@ public class PostbackResult extends StrutsResultSupport {",
                "         Map<String, String[]> params = request.getParameterMap();",
                "-        for (String name : params.keySet()) {",
                "-            String[] values = params.get(name);",
                "+        for (Map.Entry<String, String[]> entry : params.entrySet()) {",
                "+            String name = entry.getKey();",
                "+            String[] values = entry.getValue();",
                "             if (isElementIncluded(name, values)) {",
                "diff --git a/core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java b/core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java",
                "index f6800d9e2..a70dde64e 100644",
                "--- a/core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java",
                "+++ b/core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java",
                "@@ -526,4 +526,4 @@ public class FreemarkerManager {",
                "         if (tagLibraries != null) {",
                "-            for (String prefix : tagLibraries.keySet()) {",
                "-                model.put(prefix, tagLibraries.get(prefix).getModels(stack, request, response));",
                "+            for (Map.Entry<String, TagLibraryModelProvider> entry : tagLibraries.entrySet()) {",
                "+                model.put(entry.getKey(), entry.getValue().getModels(stack, request, response));",
                "             }",
                "diff --git a/plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java b/plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java",
                "index 31f088d38..a4e7eceb8 100644",
                "--- a/plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java",
                "+++ b/plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java",
                "@@ -683,4 +683,3 @@ public class PackageBasedActionConfigBuilder implements ActionConfigBuilder {",
                "                     boolean found = false;",
                "-                    for (String method : map.keySet()) {",
                "-                        List<Action> actions = map.get(method);",
                "+                    for (List<Action> actions : map.values()) {",
                "                         for (Action action : actions) {",
                "@@ -711,4 +710,5 @@ public class PackageBasedActionConfigBuilder implements ActionConfigBuilder {",
                "                 // Build the actions for the annotations",
                "-                for (String method : map.keySet()) {",
                "-                    List<Action> actions = map.get(method);",
                "+                for (Map.Entry<String, List<Action>> entry : map.entrySet()) {",
                "+                    String method = entry.getKey();",
                "+                    List<Action> actions = entry.getValue();",
                "                     for (Action action : actions) {",
                "diff --git a/plugins/javatemplates/src/main/java/org/apache/struts2/views/java/XHTMLTagSerializer.java b/plugins/javatemplates/src/main/java/org/apache/struts2/views/java/XHTMLTagSerializer.java",
                "index 730071c2c..ab7203687 100644",
                "--- a/plugins/javatemplates/src/main/java/org/apache/struts2/views/java/XHTMLTagSerializer.java",
                "+++ b/plugins/javatemplates/src/main/java/org/apache/struts2/views/java/XHTMLTagSerializer.java",
                "@@ -26,2 +26,3 @@ import java.io.IOException;",
                " import java.io.Writer;",
                "+import java.util.Map;",
                "@@ -55,7 +56,7 @@ public class XHTMLTagSerializer implements TagSerializer {",
                "         if (attrs != null) {",
                "-            for (String key : attrs.keySet()) {",
                "+            for (Map.Entry<String, String> entry : attrs.entrySet()) {",
                "                 writer.write(\" \");",
                "-                writer.write(key);",
                "+                writer.write(entry.getKey());",
                "                 writer.write(\"=\\\"\");",
                "-                writer.write(attrs.get(key));",
                "+                writer.write(entry.getValue());",
                "                 writer.write(\"\\\"\");",
                "diff --git a/plugins/json/src/main/java/org/apache/struts2/json/JSONCleaner.java b/plugins/json/src/main/java/org/apache/struts2/json/JSONCleaner.java",
                "index ce847c230..35daab0df 100644",
                "--- a/plugins/json/src/main/java/org/apache/struts2/json/JSONCleaner.java",
                "+++ b/plugins/json/src/main/java/org/apache/struts2/json/JSONCleaner.java",
                "@@ -103,4 +103,3 @@ public abstract class JSONCleaner {",
                "         if (includesExcludesMap != null) {",
                "-            for (String currRule : includesExcludesMap.keySet()) {",
                "-                Filter f = includesExcludesMap.get(currRule);",
                "+            for (Filter f : includesExcludesMap.values()) {",
                "                 if (f.pattern.matcher(ognl).matches()) {",
                "diff --git a/plugins/osgi/src/main/java/org/apache/struts2/osgi/host/BaseOsgiHost.java b/plugins/osgi/src/main/java/org/apache/struts2/osgi/host/BaseOsgiHost.java",
                "index b095da5ab..a29374658 100644",
                "--- a/plugins/osgi/src/main/java/org/apache/struts2/osgi/host/BaseOsgiHost.java",
                "+++ b/plugins/osgi/src/main/java/org/apache/struts2/osgi/host/BaseOsgiHost.java",
                "@@ -110,8 +110,9 @@ public abstract class BaseOsgiHost implements OsgiHost {",
                "         } else {",
                "-            for (String runLevel : runLevels.keySet()) {",
                "-                if (\"1\".endsWith(runLevel)) {",
                "+            for (Map.Entry<String, String> runLevel : runLevels.entrySet()) {",
                "+                String runLevelKey = runLevel.getKey();",
                "+                if (\"1\".endsWith(runLevelKey)) {",
                "                     throw new StrutsException(\"Run level dirs must be greater than 1. Run level 1 is reserved for the Felix bundles\");",
                "                 }",
                "-                List<String> bundles = getBundlesInDir(runLevels.get(runLevel));",
                "-                configProps.put(AutoProcessor.AUTO_START_PROP + \".\" + runLevel, StringUtils.join(bundles, \" \"));",
                "+                List<String> bundles = getBundlesInDir(runLevel.getValue());",
                "+                configProps.put(AutoProcessor.AUTO_START_PROP + \".\" + runLevelKey, StringUtils.join(bundles, \" \"));",
                "             }",
                "@@ -321,2 +322,2 @@ public abstract class BaseOsgiHost implements OsgiHost {",
                "-}",
                "\\ No newline at end of file",
                "+}",
                "diff --git a/plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java b/plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java",
                "index 286bff23c..52447edf3 100644",
                "--- a/plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java",
                "+++ b/plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java",
                "@@ -280,4 +280,5 @@ public class PortletUrlHelper {",
                "             result = new LinkedHashMap<String, String[]>(params.size());",
                "-            for ( String key : params.keySet() ) {",
                "-                Object val = params.get(key);",
                "+            for (Map.Entry<String, Object> entry : params.entrySet() ) {",
                "+                String key = entry.getKey();",
                "+                Object val = entry.getValue();",
                "                 if (val instanceof String[]) {",
                "diff --git a/plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsWildcardServletApplicationContext.java b/plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsWildcardServletApplicationContext.java",
                "index 63c0fdc7a..7af6069bb 100644",
                "--- a/plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsWildcardServletApplicationContext.java",
                "+++ b/plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsWildcardServletApplicationContext.java",
                "@@ -120,6 +120,5 @@ public class StrutsWildcardServletApplicationContext extends ServletApplicationC",
                "-        for (String resource : matches.keySet()) {",
                "-            if (pattern.matcher(resource).matches()) {",
                "-                URL url = matches.get(resource);",
                "-                resources.add(new StrutsApplicationResource(url));",
                "+        for (Map.Entry<String, URL> entry : matches.entrySet()) {",
                "+            if (pattern.matcher(entry.getKey()).matches()) {",
                "+                resources.add(new StrutsApplicationResource(entry.getValue()));",
                "             }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/config/impl/AbstractMatcher.java",
                "core/src/main/java/com/opensymphony/xwork2/config/impl/ActionConfigMatcher.java",
                "core/src/main/java/com/opensymphony/xwork2/config/impl/DefaultConfiguration.java",
                "core/src/main/java/com/opensymphony/xwork2/config/providers/InterceptorBuilder.java",
                "core/src/main/java/com/opensymphony/xwork2/conversion/impl/XWorkConverter.java",
                "core/src/main/java/com/opensymphony/xwork2/interceptor/ParameterFilterInterceptor.java",
                "core/src/main/java/com/opensymphony/xwork2/interceptor/ParametersInterceptor.java",
                "core/src/main/java/org/apache/struts2/components/UIBean.java",
                "core/src/main/java/org/apache/struts2/dispatcher/multipart/JakartaStreamMultiPartRequest.java",
                "core/src/main/java/org/apache/struts2/result/PostbackResult.java",
                "core/src/main/java/org/apache/struts2/views/freemarker/FreemarkerManager.java",
                "plugins/convention/src/main/java/org/apache/struts2/convention/PackageBasedActionConfigBuilder.java",
                "plugins/javatemplates/src/main/java/org/apache/struts2/views/java/XHTMLTagSerializer.java",
                "plugins/json/src/main/java/org/apache/struts2/json/JSONCleaner.java",
                "plugins/osgi/src/main/java/org/apache/struts2/osgi/host/BaseOsgiHost.java",
                "plugins/portlet/src/main/java/org/apache/struts2/portlet/util/PortletUrlHelper.java",
                "plugins/tiles/src/main/java/org/apache/struts2/tiles/StrutsWildcardServletApplicationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: base, plugin, request, version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "cb3299b3c9582538248852f4cd0a84bd3e3c4cbc",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508600852,
            "hunks": 4,
            "message": "Enables Rat plugin on each build",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 25118a5be..8a1fa67b6 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -130,39 +130,2 @@",
                "         </profile>",
                "-<!--",
                "-        TODO: A lot of files is missing the license header :(",
                "-        <profile>",
                "-            <id>apache-release</id>",
                "-            <build>",
                "-                <plugins>",
                "-                    <plugin>",
                "-                        <groupId>org.apache.rat</groupId>",
                "-                        <artifactId>apache-rat-plugin</artifactId>",
                "-                        <executions>",
                "-                            <execution>",
                "-                                <phase>verify</phase>",
                "-                                <goals>",
                "-                                    <goal>check</goal>",
                "-                                </goals>",
                "-                                <configuration>",
                "-                                    <useMavenDefaultExcludes>true</useMavenDefaultExcludes>",
                "-                                    <useIdeaDefaultExcludes>true</useIdeaDefaultExcludes>",
                "-                                    <useDefaultExcludes>true</useDefaultExcludes>",
                "-                                    <addDefaultLicenseMatchers>false</addDefaultLicenseMatchers>",
                "-                                    <licenseMatchers>",
                "-                                        <classNames>",
                "-                                            <className>org.apache.rat.analysis.license.ApacheSoftwareLicense20</className>",
                "-                                        </classNames>",
                "-                                    </licenseMatchers>",
                "-                                    <includes>",
                "-                                        <include>pom.xml</include>",
                "-                                        <include>src/**</include>",
                "-                                    </includes>",
                "-                                </configuration>",
                "-                            </execution>",
                "-                        </executions>",
                "-                    </plugin>",
                "-                </plugins>",
                "-            </build>",
                "-        </profile>",
                "--->",
                "         <profile>",
                "@@ -256,2 +219,29 @@",
                "                 </plugin>",
                "+                <plugin>",
                "+                    <groupId>org.apache.rat</groupId>",
                "+                    <artifactId>apache-rat-plugin</artifactId>",
                "+                    <configuration>",
                "+                        <useMavenDefaultExcludes>true</useMavenDefaultExcludes>",
                "+                        <useIdeaDefaultExcludes>true</useIdeaDefaultExcludes>",
                "+                        <useDefaultExcludes>true</useDefaultExcludes>",
                "+                        <addDefaultLicenseMatchers>false</addDefaultLicenseMatchers>",
                "+                        <licenseMatchers>",
                "+                            <classNames>",
                "+                                <className>org.apache.rat.analysis.license.ApacheSoftwareLicense20</className>",
                "+                            </classNames>",
                "+                        </licenseMatchers>",
                "+                        <includes>",
                "+                            <include>pom.xml</include>",
                "+                            <include>src/**</include>",
                "+                        </includes>",
                "+                        <excludes>",
                "+                            <exclude>src/test/resources/org/apache/struts2/views/jsp/ui/*</exclude>",
                "+                            <exclude>src/main/resources/org/apache/struts2/static/domTT.js</exclude>",
                "+                            <exclude>src/test/resources/org/apache/struts2/interceptor/validation/*</exclude>",
                "+                            <exclude>src/site/resources/tags/**</exclude>",
                "+                            <exclude>src/main/resources/*LICENSE.txt</exclude>",
                "+                            <exclude>src/test/resources/com/opensymphony/xwork2/somefile.txt</exclude>",
                "+                        </excludes>",
                "+                    </configuration>",
                "+                </plugin>",
                "             </plugins>",
                "@@ -315,2 +305,15 @@",
                "             </plugin>",
                "+            <plugin>",
                "+                <groupId>org.apache.rat</groupId>",
                "+                <artifactId>apache-rat-plugin</artifactId>",
                "+                <executions>",
                "+                    <execution>",
                "+                        <phase>verify</phase>",
                "+                        <goals>",
                "+                            <goal>check</goal>",
                "+                        </goals>",
                "+                    </execution>",
                "+                </executions>",
                "+            </plugin>",
                "+",
                "         </plugins>",
                "@@ -347,16 +350,2 @@",
                "                 <artifactId>apache-rat-plugin</artifactId>",
                "-                <configuration>",
                "-                    <includes>",
                "-                        <include>pom.xml</include>",
                "-                        <include>src/**</include>",
                "-                    </includes>",
                "-                    <excludes>",
                "-                        <exclude>src/test/resources/org/apache/struts2/views/jsp/ui/*</exclude>",
                "-                        <exclude>src/main/resources/org/apache/struts2/static/domTT.js</exclude>",
                "-                        <exclude>src/test/resources/org/apache/struts2/interceptor/validation/*</exclude>",
                "-                        <exclude>src/site/resources/tags/**</exclude>",
                "-                        <exclude>src/main/resources/*LICENSE.txt</exclude>",
                "-                        <exclude>src/test/resources/com/opensymphony/xwork2/somefile.txt</exclude>",
                "-                    </excludes>",
                "-                </configuration>",
                "             </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "215eb627d46d448aa5f7ebf7697b34736946b339",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515696434,
            "hunks": 3,
            "message": "refactoring ValidateGroup -> ValidationGroup",
            "diff": [
                "diff --git a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidationGroup.java b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidationGroup.java",
                "new file mode 100644",
                "index 000000000..dccebba6b",
                "--- /dev/null",
                "+++ b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidationGroup.java",
                "@@ -0,0 +1,50 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts.beanvalidation.constraints;",
                "+",
                "+import java.lang.annotation.ElementType;",
                "+import java.lang.annotation.Retention;",
                "+import java.lang.annotation.RetentionPolicy;",
                "+import java.lang.annotation.Target;",
                "+",
                "+/**",
                "+ * Validation with Group Constrains on execution method (Action)",
                "+ * <p>",
                "+ * Example, Validate with on special group",
                "+ * </p>",
                "+ * <pre>",
                "+ *",
                "+ *  {@literal @}ValidationGroup(CarChecks.class)",
                "+ *  {@literal @}Action...",
                "+ * </pre>",
                "+ * <p>",
                "+ * <p>",
                "+ * Example, Validate with severals special group",
                "+ * </p>",
                "+ * <pre>",
                "+ *  {@literal @}ValidationGroup(Default.class, CarChecks.class, DriverChecks.class)",
                "+ *  {@literal @}Action...",
                "+ * </pre>",
                "+ */",
                "+@Target({ElementType.METHOD})",
                "+@Retention(RetentionPolicy.RUNTIME)",
                "+public @interface ValidationGroup {",
                "+",
                "+    Class<?>[] value() default {};",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "index bdbca6a2f..f2b2e9b0b 100644",
                "--- a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "+++ b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "@@ -33,3 +33,3 @@ import org.apache.logging.log4j.LogManager;",
                " import org.apache.logging.log4j.Logger;",
                "-import org.apache.struts.beanvalidation.constraints.ValidateGroup;",
                "+import org.apache.struts.beanvalidation.constraints.ValidationGroup;",
                " import org.apache.struts.beanvalidation.validation.constant.ValidatorConstants;",
                "@@ -111,4 +111,4 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "     protected Class<?>[] getValidationGroups(Object action, String methodName) throws NoSuchMethodException {",
                "-        ValidateGroup validateGroup = MethodUtils.getAnnotation(getActionMethod(action.getClass(), methodName), ValidateGroup.class, true, true);",
                "-        return validateGroup == null ? new Class[]{} : validateGroup.value();",
                "+        ValidationGroup validationGroup = MethodUtils.getAnnotation(getActionMethod(action.getClass(), methodName), ValidationGroup.class, true, true);",
                "+        return validationGroup == null ? new Class[]{} : validationGroup.value();",
                "     }"
            ],
            "changed_files": [
                "plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/constraints/ValidationGroup.java",
                "plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "c14dca5be37bbb02a26b77010158e427f487b107",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510391466,
            "hunks": 1,
            "message": "Uses full plugin name",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index 4939f24c7..d6eacdc9e 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -11,2 +11,2 @@ script: mvn test -DskipAssembly",
                " after_success:",
                "-  - mvn clean cobertura:cobertura coveralls:report -Ptravis-coveralls -DskipAssembly",
                "+  - mvn clean cobertura:cobertura org.eluder.coveralls:coveralls-maven-plugin:report -Ptravis-coveralls -DskipAssembly"
            ],
            "changed_files": [
                ".travis.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "87b2bd81387ac9fd1eaf7ea40fd07e1adae69671",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515701062,
            "hunks": 4,
            "message": "fixed some Logger calls. Hint:https://logging.apache.org/log4j/2.0/manual/api.html",
            "diff": [
                "diff --git a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "index f2b2e9b0b..7c93710ae 100644",
                "--- a/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "+++ b/plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java",
                "@@ -96,5 +96,2 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "-        if (LOG.isDebugEnabled()) {",
                "-            LOG.debug(\"Validating [{}/{}] with method [{}]\", invocation.getProxy().getNamespace(), invocation.getProxy().getActionName(), methodName);",
                "-        }",
                "         Class<?>[] validationGroup = getValidationGroups(action, methodName);",
                "@@ -103,2 +100,3 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "                 true, true)) {",
                "+            LOG.debug(\"Validating [{}/{}] with method [{}] and groups [{}]\", invocation.getProxy().getNamespace(), invocation.getProxy().getActionName(), methodName, Arrays.toString(validationGroup));",
                "             // performing bean validation on action",
                "@@ -117,3 +115,3 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "-        LOG.trace(\"Initiating bean validation.. with groups [{}]\", Arrays.toString(groups));",
                "+        LOG.trace(\"Initiating bean validation..\");",
                "@@ -158,5 +156,3 @@ public class BeanValidationInterceptor extends MethodFilterInterceptor {",
                "                     }",
                "-                    if (LOG.isDebugEnabled()) {",
                "-                        LOG.debug(\"Adding field error [{}] with message [{}]\", fieldName, validationError.getMessage());",
                "-                    }",
                "+                    LOG.debug(\"Adding field error [{}] with message [{}]\", fieldName, validationError.getMessage());",
                "                     validatorContext.addFieldError(fieldName, validationError.getMessage());"
            ],
            "changed_files": [
                "plugins/bean-validation/src/main/java/org/apache/struts/beanvalidation/validation/interceptor/BeanValidationInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "9f082b264ca4b4ddff1ff134af7521d478082c5b",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511296012,
            "hunks": 2,
            "message": "Make ConventionConstantConfig inherit map of constants from ConstantConfig",
            "diff": [
                "diff --git a/plugins/convention/src/main/java/org/apache/struts2/convention/config/entities/ConventionConstantConfig.java b/plugins/convention/src/main/java/org/apache/struts2/convention/config/entities/ConventionConstantConfig.java",
                "index d151a154f..50bca2c88 100644",
                "--- a/plugins/convention/src/main/java/org/apache/struts2/convention/config/entities/ConventionConstantConfig.java",
                "+++ b/plugins/convention/src/main/java/org/apache/struts2/convention/config/entities/ConventionConstantConfig.java",
                "@@ -20,3 +20,2 @@ package org.apache.struts2.convention.config.entities;",
                "-import java.util.HashMap;",
                " import java.util.List;",
                "@@ -62,3 +61,3 @@ public class ConventionConstantConfig extends ConstantConfig {",
                "     public Map<String, String> getAllAsStringsMap() {",
                "-        Map<String, String> map = new HashMap<>();",
                "+        Map<String, String> map = super.getAllAsStringsMap();"
            ],
            "changed_files": [
                "plugins/convention/src/main/java/org/apache/struts2/convention/config/entities/ConventionConstantConfig.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "8e93446c1ceb6d0f648457ba2bb1a256d14b25ea",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1500288067,
            "hunks": 5,
            "message": "Reformats code",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java b/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java",
                "index 29268b874..602eeaf6d 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java",
                "@@ -25,5 +25,5 @@ import java.util.Map;",
                "  * Interface for accessing the type conversion facilities within a context.",
                "- * ",
                "+ *",
                "  * This interface was copied from OGNL's TypeConverter",
                "- * ",
                "+ *",
                "  * @author Luke Blanshard (blanshlu@netscape.net)",
                "@@ -31,19 +31,19 @@ import java.util.Map;",
                "  */",
                "-public interface TypeConverter",
                "-{",
                "+public interface TypeConverter {",
                "     /**",
                "-       * Converts the given value to a given type.  The OGNL context, target, member and",
                "-       * name of property being set are given.  This method should be able to handle",
                "-       * conversion in general without any context, target, member or property name specified.",
                "-       * @param context context under which the conversion is being done",
                "-       * @param target target object in which the property is being set",
                "-       * @param member member (Constructor, Method or Field) being set",
                "-       * @param propertyName property name being set",
                "-       * @param value value to be converted",
                "-       * @param toType type to which value is converted",
                "-       * @return Converted value of type toType or TypeConverter.NoConversionPossible to indicate that the",
                "-                 conversion was not possible.",
                "+     * Converts the given value to a given type.  The OGNL context, target, member and",
                "+     * name of property being set are given.  This method should be able to handle",
                "+     * conversion in general without any context, target, member or property name specified.",
                "+     *",
                "+     * @param context      context under which the conversion is being done",
                "+     * @param target       target object in which the property is being set",
                "+     * @param member       member (Constructor, Method or Field) being set",
                "+     * @param propertyName property name being set",
                "+     * @param value        value to be converted",
                "+     * @param toType       type to which value is converted",
                "+     * @return Converted value of type toType or TypeConverter.NoConversionPossible to indicate that the",
                "+     * conversion was not possible.",
                "      */",
                "     Object convertValue(Map<String, Object> context, Object target, Member member, String propertyName, Object value, Class toType);",
                "-    ",
                "+",
                "     Object NO_CONVERSION_POSSIBLE = \"ognl.NoConversionPossible\";"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/conversion/TypeConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: version",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "b0270eb16f95e77ee9070bf43ebba0ccbc101e5b",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514186659,
            "hunks": 1,
            "message": "add async plugin to dependency management",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index d1acf4086..add1d6794 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -534,2 +534,7 @@",
                "             </dependency>",
                "+            <dependency>",
                "+                <groupId>org.apache.struts</groupId>",
                "+                <artifactId>struts2-async-plugin</artifactId>",
                "+                <version>${project.version}</version>",
                "+            </dependency>",
                "             <dependency>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: plugin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "fe65910e0ed582e65663c9d30de30e41b79e340b",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515015847,
            "hunks": 1,
            "message": "change tabs into spaces (formatting)",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/components/UrlRenderer.java b/core/src/main/java/org/apache/struts2/components/UrlRenderer.java",
                "index 29890250e..b2f838a9a 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/UrlRenderer.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/UrlRenderer.java",
                "@@ -30,23 +30,23 @@ import java.io.Writer;",
                " public interface UrlRenderer {",
                "-\t",
                "-\t/**",
                "-\t * Preprocessing step",
                "-\t * @param provider The {@link UrlProvider} component that \"owns\" this renderer.",
                "-\t */",
                "-\tvoid beforeRenderUrl(UrlProvider provider);",
                "-\t",
                "-\t/**",
                "-\t * Render a URL.",
                "-\t * @param writer A writer that the implementation can use to write the result to.",
                "-\t * @param provider The {@link UrlProvider} component that \"owns\" this renderer.",
                "-\t */",
                "-\tvoid renderUrl(Writer writer, UrlProvider provider);",
                "-\t",
                "-\t/**",
                "-\t * Render a Form URL.",
                "-\t * @param formComponent The {@link Form} component that \"owns\" this renderer.",
                "-\t */",
                "-\tvoid renderFormUrl(Form formComponent);",
                "-",
                "-      void setActionMapper(ActionMapper actionMapper);",
                "+",
                "+    /**",
                "+     * Preprocessing step",
                "+     * @param provider The {@link UrlProvider} component that \"owns\" this renderer.",
                "+     */",
                "+    void beforeRenderUrl(UrlProvider provider);",
                "+",
                "+    /**",
                "+     * Render a URL.",
                "+     * @param writer A writer that the implementation can use to write the result to.",
                "+     * @param provider The {@link UrlProvider} component that \"owns\" this renderer.",
                "+     */",
                "+    void renderUrl(Writer writer, UrlProvider provider);",
                "+",
                "+    /**",
                "+     * Render a Form URL.",
                "+     * @param formComponent The {@link Form} component that \"owns\" this renderer.",
                "+     */",
                "+    void renderFormUrl(Form formComponent);",
                "+",
                "+    void setActionMapper(ActionMapper actionMapper);"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/components/UrlRenderer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "79951db2aa748d1c2935ac2774248e4527954fdc"
                ],
                [
                    "no-tag",
                    "38e3734930f0ebbb844cc62f38e08f5097947c6e"
                ]
            ],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d082aaca2a6d2d3a37b374ad34f4ea8d091d09f1",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513083257,
            "hunks": 15,
            "message": "WW-4901 Falls back if JarURLConnection was present already",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java b/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java",
                "index fbe503858..dc5f0a757 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java",
                "@@ -25,2 +25,3 @@ import org.apache.logging.log4j.LogManager;",
                " import java.io.IOException;",
                "+import java.net.JarURLConnection;",
                " import java.net.URL;",
                "@@ -38,5 +39,5 @@ public class JarEntryRevision extends Revision {",
                "     public static Revision build(URL fileUrl, FileManager fileManager) {",
                "-        StrutsJarURLConnection conn = null;",
                "+        JarURLConnection conn = null;",
                "         try {",
                "-            conn = new StrutsJarURLConnection(fileUrl);",
                "+            conn = StrutsJarURLConnection.openConnection(fileUrl);",
                "             conn.setUseCaches(false);",
                "@@ -54,3 +55,6 @@ public class JarEntryRevision extends Revision {",
                "             if(null != conn) {",
                "-                conn.disconnect();",
                "+                try {",
                "+                    conn.getInputStream().close();",
                "+                } catch (IOException ignored) {",
                "+                }",
                "             }",
                "@@ -68,6 +72,6 @@ public class JarEntryRevision extends Revision {",
                "     public boolean needsReloading() {",
                "-        StrutsJarURLConnection conn = null;",
                "+        JarURLConnection conn = null;",
                "         long lastLastModified = lastModified;",
                "         try {",
                "-            conn = new StrutsJarURLConnection(jarFileURL);",
                "+            conn = StrutsJarURLConnection.openConnection(jarFileURL);",
                "             conn.setUseCaches(false);",
                "@@ -78,3 +82,6 @@ public class JarEntryRevision extends Revision {",
                "             if(null != conn) {",
                "-                conn.disconnect();",
                "+                try {",
                "+                    conn.getInputStream().close();",
                "+                } catch (IOException ignored) {",
                "+                }",
                "             }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/fs/StrutsJarURLConnection.java b/core/src/main/java/com/opensymphony/xwork2/util/fs/StrutsJarURLConnection.java",
                "index 5a59a6205..8c1b71a79 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/fs/StrutsJarURLConnection.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/fs/StrutsJarURLConnection.java",
                "@@ -25,2 +25,3 @@ import java.net.MalformedURLException;",
                " import java.net.URL;",
                "+import java.net.URLConnection;",
                " import java.nio.file.Files;",
                "@@ -34,3 +35,4 @@ import java.util.jar.JarFile;",
                " /**",
                "- * WW-4901 Decouples Struts from {@link URL#openConnection()} implementation of container (e.g. IBM WebSphere com.ibm.ws.classloader.Handler$ClassLoaderURLConnection)",
                "+ * WW-4901 Decouples from underlying implementation of {@link URL#openConnection()}",
                "+ * e.g. from IBM WebSphere com.ibm.ws.classloader.Handler$ClassLoaderURLConnection",
                "  * @since 2.5.15",
                "@@ -40,3 +42,3 @@ class StrutsJarURLConnection extends JarURLConnection {",
                "-    StrutsJarURLConnection(URL url) throws MalformedURLException {",
                "+    private StrutsJarURLConnection(URL url) throws MalformedURLException {",
                "         super(url);",
                "@@ -52,4 +54,5 @@ class StrutsJarURLConnection extends JarURLConnection {",
                "     public void connect() throws IOException {",
                "-        if (connected)",
                "+        if (connected) {",
                "             return;",
                "+        }",
                "@@ -83,7 +86,10 @@ class StrutsJarURLConnection extends JarURLConnection {",
                "-    void disconnect() {",
                "-        if (connected) {",
                "-            connected = false;",
                "+",
                "+    static JarURLConnection openConnection(URL url) throws IOException {",
                "+        URLConnection conn = url.openConnection();",
                "+        if (conn instanceof JarURLConnection) {",
                "+            return (JarURLConnection) conn;",
                "+        } else {",
                "             try {",
                "-                jarFile.close();",
                "+                conn.getInputStream().close();",
                "             } catch (IOException ignored) {",
                "@@ -91,2 +97,5 @@ class StrutsJarURLConnection extends JarURLConnection {",
                "         }",
                "+",
                "+        StrutsJarURLConnection result = new StrutsJarURLConnection(url);",
                "+        return result;",
                "     }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java",
                "core/src/main/java/com/opensymphony/xwork2/util/fs/StrutsJarURLConnection.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4901": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4901",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cf71e0f34f4a0d7da55d280592ac61e8a2d3482c",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517299516,
            "hunks": 2,
            "message": "add support finding annotations on interfaces and their packages See also WW-4912",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "index c08841c63..dd148550e 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "@@ -20,2 +20,4 @@ package com.opensymphony.xwork2.util;",
                "+import org.apache.commons.lang3.ClassUtils;",
                "+",
                " import java.lang.annotation.Annotation;",
                "@@ -170,14 +172,17 @@ public class AnnotationUtils {",
                "-        T ann = clazz.getAnnotation(annotationClass);",
                "-        if (ann != null) {",
                "-            anns.add(ann);",
                "-        }",
                "+        List<Class<?>> classes = new ArrayList<>();",
                "+        classes.add(clazz);",
                "-        ann = clazz.getPackage().getAnnotation(annotationClass);",
                "-        if (ann != null) {",
                "-            anns.add(ann);",
                "-        }",
                "+        classes.addAll(ClassUtils.getAllSuperclasses(clazz));",
                "+        classes.addAll(ClassUtils.getAllInterfaces(clazz));",
                "+        for (Class<?> aClass : classes) {",
                "+            T ann = aClass.getAnnotation(annotationClass);",
                "+            if (ann != null && !anns.contains(ann)) {",
                "+                anns.add(ann);",
                "+            }",
                "-        if (clazz.getSuperclass() != Object.class) {",
                "-            anns.addAll(findAnnotations(clazz.getSuperclass(), annotationClass));",
                "+            ann = aClass.getPackage().getAnnotation(annotationClass);",
                "+            if (ann != null && !anns.contains(ann)) {",
                "+                anns.add(ann);",
                "+            }",
                "         }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4912": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4912",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a4439376b806fa73f96f469315d51ad83591b796",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1509111359,
            "hunks": 3,
            "message": "WW-4878 Fixes typo and adds missing interceptor",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/interceptor/ActionMappingParametersInterceptor.java b/core/src/main/java/org/apache/struts2/interceptor/ActionMappingParametersInterceptor.java",
                "new file mode 100644",
                "index 000000000..967f74877",
                "--- /dev/null",
                "+++ b/core/src/main/java/org/apache/struts2/interceptor/ActionMappingParametersInterceptor.java",
                "@@ -0,0 +1,107 @@",
                "+/*",
                "+ * Licensed to the Apache Software Foundation (ASF) under one",
                "+ * or more contributor license agreements.  See the NOTICE file",
                "+ * distributed with this work for additional information",
                "+ * regarding copyright ownership.  The ASF licenses this file",
                "+ * to you under the Apache License, Version 2.0 (the",
                "+ * \"License\"); you may not use this file except in compliance",
                "+ * with the License.  You may obtain a copy of the License at",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing,",
                "+ * software distributed under the License is distributed on an",
                "+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+ * KIND, either express or implied.  See the License for the",
                "+ * specific language governing permissions and limitations",
                "+ * under the License.",
                "+ */",
                "+package org.apache.struts2.interceptor;",
                "+",
                "+import com.opensymphony.xwork2.ActionContext;",
                "+import com.opensymphony.xwork2.interceptor.ParametersInterceptor;",
                "+import org.apache.struts2.ServletActionContext;",
                "+import org.apache.struts2.dispatcher.HttpParameters;",
                "+import org.apache.struts2.dispatcher.mapper.ActionMapping;",
                "+",
                "+import java.util.Map;",
                "+",
                "+/**",
                "+ * <!-- START SNIPPET: description -->",
                "+ * <p>",
                "+ * This interceptor sets all parameters from the action mapping, for this request, on the value stack.  It operates",
                "+ * exactly like {@link ParametersInterceptor}, only the parameters come from the {@link ActionMapping}, not the",
                "+ * {@link ActionContext#getParameters()} method.",
                "+ * </p>",
                "+ *",
                "+ * <!-- END SNIPPET: description -->",
                "+ *",
                "+ * <p><u>Interceptor parameters:</u></p>",
                "+ *",
                "+ * <!-- START SNIPPET: parameters -->",
                "+ *",
                "+ * <ul>",
                "+ *",
                "+ * <li>ordered - set to true if you want the top-down property setter behaviour</li>",
                "+ *",
                "+ * </ul>",
                "+ *",
                "+ * <!-- END SNIPPET: parameters -->",
                "+ *",
                "+ * <p><u>Extending the interceptor:</u></p>",
                "+ *",
                "+ * <!-- START SNIPPET: extending -->",
                "+ *",
                "+ * <p>",
                "+ * The best way to add behavior to this interceptor is to utilize the {@link com.opensymphony.xwork2.interceptor.ParameterNameAware} interface in your",
                "+ * actions. However, if you wish to apply a global rule that isn't implemented in your action, then you could extend",
                "+ * this interceptor and override the {@link #acceptableName(String)} method.",
                "+ * </p>",
                "+ *",
                "+ * <!-- END SNIPPET: extending -->",
                "+ *",
                "+ * <p><u>Example code:</u></p>",
                "+ *",
                "+ * <pre>",
                "+ * <!-- START SNIPPET: example -->",
                "+ * &lt;action name=\"someAction\" class=\"com.examples.SomeAction\"&gt;",
                "+ *     &lt;interceptor-ref name=\"mappingParams\"/&gt;",
                "+ *     &lt;result name=\"success\"&gt;good_result.ftl&lt;/result&gt;",
                "+ * &lt;/action&gt;",
                "+ * <!-- END SNIPPET: example -->",
                "+ * </pre>",
                "+ */",
                "+public class ActionMappingParametersInterceptor extends ParametersInterceptor {",
                "+",
                "+    /**",
                "+     * @param ac The action context",
                "+     * @return the parameters from the action mapping in the context.  If none found, returns an empty map.",
                "+     */",
                "+    @Override",
                "+    protected HttpParameters retrieveParameters(ActionContext ac) {",
                "+        ActionMapping mapping = (ActionMapping) ac.get(ServletActionContext.ACTION_MAPPING);",
                "+        if (mapping != null) {",
                "+            return HttpParameters.create(mapping.getParams()).build();",
                "+        } else {",
                "+            return HttpParameters.create().build();",
                "+        }",
                "+    }",
                "+",
                "+    /**",
                "+     * Adds the parameters into context's ParameterMap",
                "+     *",
                "+     * @param ac        The action context",
                "+     * @param newParams The parameter map to apply",
                "+     *                  <p>",
                "+     *                  In this class this is a no-op, since the parameters were fetched from the same location.",
                "+     *                  In subclasses both retrieveParameters() and addParametersToContext() should be overridden.",
                "+     *                  </p>",
                "+     */",
                "+    @Override",
                "+    protected void addParametersToContext(ActionContext ac, Map<String, ?> newParams) {",
                "+        HttpParameters previousParams = ac.getParameters();",
                "+        HttpParameters.Builder combinedParams = HttpParameters.create().withParent(previousParams).withExtraParams(newParams);",
                "+",
                "+        ac.setParameters(combinedParams.build());",
                "+    }",
                "+}",
                "diff --git a/core/src/main/resources/struts-default.xml b/core/src/main/resources/struts-default.xml",
                "index 3c68264d2..27462a1e4 100644",
                "--- a/core/src/main/resources/struts-default.xml",
                "+++ b/core/src/main/resources/struts-default.xml",
                "@@ -223,3 +223,4 @@",
                "             <interceptor name=\"params\" class=\"com.opensymphony.xwork2.interceptor.ParametersInterceptor\"/>",
                "-            <interceptor name=\"actionMappingParams\" class=\"org.apache.struts2.interceptor.ActionMappingParametersInteceptor\"/>",
                "+            <interceptor name=\"paramRemover\" class=\"com.opensymphony.xwork2.interceptor.ParameterRemoverInterceptor\"/>",
                "+            <interceptor name=\"actionMappingParams\" class=\"org.apache.struts2.interceptor.ActionMappingParametersInterceptor\"/>",
                "             <interceptor name=\"prepare\" class=\"com.opensymphony.xwork2.interceptor.PrepareInterceptor\"/>",
                "@@ -239,2 +240,3 @@",
                "             <interceptor name=\"annotationWorkflow\" class=\"com.opensymphony.xwork2.interceptor.annotations.AnnotationWorkflowInterceptor\" />",
                "+            <interceptor name=\"annotationParameterFilter\" class=\"com.opensymphony.xwork2.interceptor.annotations.AnnotationParameterFilterInterceptor\" />",
                "             <interceptor name=\"multiselect\" class=\"org.apache.struts2.interceptor.MultiselectInterceptor\" />"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/interceptor/ActionMappingParametersInterceptor.java",
                "core/src/main/resources/struts-default.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4878": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4878",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "10027dae424231aeb6b7a4110ddc3c308bd2038b",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508690263,
            "hunks": 1,
            "message": "WW-4862 Extends existing regex to include charset",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "index 93632fa12..dcc5fe72a 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "@@ -87,3 +87,3 @@ public class Dispatcher {",
                "-    public static final String MULTIPART_FORM_DATA_REGEX = \"^multipart/form-data(; boundary=[0-9a-zA-Z'()+_,\\\\-./:=?]{1,70})?\";",
                "+    public static final String MULTIPART_FORM_DATA_REGEX = \"^multipart/form-data(; boundary=[0-9a-zA-Z'()+_,\\\\-./:=?]{1,70})?(;charset=[a-zA-Z\\\\-0-9]{3,14})?\";"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4862": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4862",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7a251ddca92eaac6d56f9768d95df45271f51f11",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515016382,
            "hunks": 2,
            "message": "add curly brackets (formatting) - add curly brackets around single line conditional statements",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/components/UIBean.java b/core/src/main/java/org/apache/struts2/components/UIBean.java",
                "index fa41c57a0..3038d117b 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/UIBean.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/UIBean.java",
                "@@ -1263,4 +1263,5 @@ public abstract class UIBean extends Component {",
                "             String key = (String) entry.getKey();",
                "-            if(!isValidTagAttribute(key) && !key.equals(\"dynamicAttributes\"))",
                "+            if (!isValidTagAttribute(key) && !key.equals(\"dynamicAttributes\")) {",
                "                 dynamicAttributes.put(key, entry.getValue());",
                "+            }",
                "         }"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/components/UIBean.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1d0b375afd142d39940babe9889775fa57ad2cf4"
                ]
            ],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bfbc17e1ad496c18933fda5a3b53f097cc5c2ecf",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510410805,
            "hunks": 6,
            "message": "WW-4713 Added deprecation warnings as preparation to drop searchValueStack attribute from the <s:text/> tag",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/components/Text.java b/core/src/main/java/org/apache/struts2/components/Text.java",
                "index a5ea21715..8ce179ff4 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/Text.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/Text.java",
                "@@ -125,2 +125,3 @@ public class Text extends ContextBean implements Param.UnnamedParametric {",
                "     protected String name;",
                "+    @Deprecated",
                "     protected String searchStack;",
                "@@ -140,2 +141,3 @@ public class Text extends ContextBean implements Param.UnnamedParametric {",
                "+    @Deprecated",
                "     @StrutsTagAttribute(description=\"Search the stack if property is not found on resources\", type = \"Boolean\", defaultValue = \"false\")",
                "diff --git a/core/src/main/java/org/apache/struts2/util/TextProviderHelper.java b/core/src/main/java/org/apache/struts2/util/TextProviderHelper.java",
                "index 5200844c1..145f6c006 100644",
                "--- a/core/src/main/java/org/apache/struts2/util/TextProviderHelper.java",
                "+++ b/core/src/main/java/org/apache/struts2/util/TextProviderHelper.java",
                "@@ -64,3 +64,6 @@ public class TextProviderHelper {",
                "      * @return the message if found, otherwise the defaultMessage",
                "+     *",
                "+     * @deprecated The stack should never be searched for the key. Use the version without the searchStack boolean instead.",
                "      */",
                "+    @Deprecated",
                "     public static String getText(String key, String defaultMessage, List<Object> args, ValueStack stack, boolean searchStack) {",
                "diff --git a/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java b/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java",
                "index c0420dfad..b47e8e0e4 100644",
                "--- a/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java",
                "+++ b/core/src/main/java/org/apache/struts2/views/jsp/TextTag.java",
                "@@ -36,2 +36,3 @@ public class TextTag extends ContextBeanTag {",
                "     protected String name;",
                "+    @Deprecated",
                "     protected String searchValueStack;",
                "@@ -62,2 +63,3 @@ public class TextTag extends ContextBeanTag {",
                "+    @Deprecated",
                "     public void setSearchValueStack(String searchStack) {"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/components/Text.java",
                "core/src/main/java/org/apache/struts2/util/TextProviderHelper.java",
                "core/src/main/java/org/apache/struts2/views/jsp/TextTag.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4713": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4713",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e9a4bcd776e82afb135091f7ad48ada90bf5d2e6",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517379695,
            "hunks": 6,
            "message": "WW-4741 Does not create session if it doesn't exist",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/interceptor/I18nInterceptor.java b/core/src/main/java/org/apache/struts2/interceptor/I18nInterceptor.java",
                "index 502c21bd0..ba4993660 100644",
                "--- a/core/src/main/java/org/apache/struts2/interceptor/I18nInterceptor.java",
                "+++ b/core/src/main/java/org/apache/struts2/interceptor/I18nInterceptor.java",
                "@@ -283,11 +283,12 @@ public class I18nInterceptor extends AbstractInterceptor {",
                "         public Locale store(ActionInvocation invocation, Locale locale) {",
                "-            //save it in session",
                "-            Map<String, Object> session = invocation.getInvocationContext().getSession();",
                "+            LOG.debug(\"Do not create session if it doesn't exist\");",
                "+            HttpSession session = ServletActionContext.getRequest().getSession(false);",
                "             if (session != null) {",
                "-                String sessionId = ServletActionContext.getRequest().getSession().getId();",
                "+                String sessionId = session.getId();",
                "                 synchronized (sessionId.intern()) {",
                "-                    session.put(attributeName, locale);",
                "+                    invocation.getInvocationContext().getSession().put(attributeName, locale);",
                "                 }",
                "             }",
                "+",
                "             return locale;",
                "@@ -300,15 +301,11 @@ public class I18nInterceptor extends AbstractInterceptor {",
                "             LOG.debug(\"Checks session for saved locale\");",
                "-            Map<String, Object> session = invocation.getInvocationContext().getSession();",
                "+            HttpSession session = ServletActionContext.getRequest().getSession(false);",
                "             if (session != null) {",
                "-                //[WW-4741] Do not force session creation while this is a read operation",
                "-                HttpSession httpSession = ServletActionContext.getRequest().getSession(false);",
                "-                if(null != httpSession) {",
                "-                    String sessionId = httpSession.getId();",
                "-                    synchronized (sessionId.intern()) {",
                "-                        Object sessionLocale = session.get(attributeName);",
                "-                        if (sessionLocale != null && sessionLocale instanceof Locale) {",
                "-                            locale = (Locale) sessionLocale;",
                "-                            LOG.debug(\"Applied session locale: {}\", locale);",
                "-                        }",
                "+                String sessionId = session.getId();",
                "+                synchronized (sessionId.intern()) {",
                "+                    Object sessionLocale = invocation.getInvocationContext().getSession().get(attributeName);",
                "+                    if (sessionLocale != null && sessionLocale instanceof Locale) {",
                "+                        locale = (Locale) sessionLocale;",
                "+                        LOG.debug(\"Applied session locale: {}\", locale);",
                "                     }"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/interceptor/I18nInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4741": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4741",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b5cfccace3e7044dccfa3b73b80adc657a29ddad",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517393024,
            "hunks": 2,
            "message": "test no session but with locale parameter See also WW-4741",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/interceptor/I18nInterceptor.java b/core/src/main/java/org/apache/struts2/interceptor/I18nInterceptor.java",
                "index ba4993660..682bbe6d7 100644",
                "--- a/core/src/main/java/org/apache/struts2/interceptor/I18nInterceptor.java",
                "+++ b/core/src/main/java/org/apache/struts2/interceptor/I18nInterceptor.java",
                "@@ -283,3 +283,2 @@ public class I18nInterceptor extends AbstractInterceptor {",
                "         public Locale store(ActionInvocation invocation, Locale locale) {",
                "-            LOG.debug(\"Do not create session if it doesn't exist\");",
                "             HttpSession session = ServletActionContext.getRequest().getSession(false);",
                "@@ -291,2 +290,4 @@ public class I18nInterceptor extends AbstractInterceptor {",
                "                 }",
                "+            } else {",
                "+                LOG.debug(\"session creation avoided as it doesn't exist already\");",
                "             }"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/interceptor/I18nInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4741": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4741",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dda3facc265d4e1c3b1c60fa2bcc4240953ee35c",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513156282,
            "hunks": 8,
            "message": "WW-4900 Makes BackgroundProcess transient",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java b/core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java",
                "index 20b330eae..5210c4072 100644",
                "--- a/core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java",
                "+++ b/core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java",
                "@@ -33,6 +33,7 @@ public class BackgroundProcess implements Serializable {",
                "-    protected Object action;",
                "-    protected ActionInvocation invocation;",
                "+    //WW-4900 transient since 2.5.15",
                "+    transient protected ActionInvocation invocation;",
                "+    transient protected Exception exception;",
                "+",
                "     protected String result;",
                "-    protected Exception exception;",
                "     protected boolean done;",
                "@@ -46,5 +47,4 @@ public class BackgroundProcess implements Serializable {",
                "      */",
                "-    public BackgroundProcess(String threadName, final ActionInvocation invocation, int threadPriority) {",
                "+    BackgroundProcess(String threadName, final ActionInvocation invocation, int threadPriority) {",
                "         this.invocation = invocation;",
                "-        this.action = invocation.getAction();",
                "         try {",
                "@@ -77,3 +77,3 @@ public class BackgroundProcess implements Serializable {",
                "      */",
                "-    protected void beforeInvocation() throws Exception {",
                "+    private void beforeInvocation() throws Exception {",
                "         ActionContext.setContext(invocation.getInvocationContext());",
                "@@ -88,3 +88,3 @@ public class BackgroundProcess implements Serializable {",
                "      */",
                "-    protected void afterInvocation() throws Exception {",
                "+    private void afterInvocation() throws Exception {",
                "         ActionContext.setContext(null);",
                "@@ -98,3 +98,3 @@ public class BackgroundProcess implements Serializable {",
                "     public Object getAction() {",
                "-        return action;",
                "+        return invocation.getAction();",
                "     }",
                "diff --git a/core/src/main/java/org/apache/struts2/interceptor/ExecuteAndWaitInterceptor.java b/core/src/main/java/org/apache/struts2/interceptor/ExecuteAndWaitInterceptor.java",
                "index 2b3e063e0..b49ebcae7 100644",
                "--- a/core/src/main/java/org/apache/struts2/interceptor/ExecuteAndWaitInterceptor.java",
                "+++ b/core/src/main/java/org/apache/struts2/interceptor/ExecuteAndWaitInterceptor.java",
                "@@ -245,2 +245,8 @@ public class ExecuteAndWaitInterceptor extends MethodFilterInterceptor {",
                "+            //WW-4900 Checks if from a de-serialized session? so background thread missed, let's start a new one.",
                "+            if (bp != null && bp.getInvocation() == null) {",
                "+                session.remove(KEY + name);",
                "+                bp = null;",
                "+            }",
                "+",
                "             if ((!executeAfterValidationPass || secondTime) && bp == null) {"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java",
                "core/src/main/java/org/apache/struts2/interceptor/ExecuteAndWaitInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4900": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4900",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "02b61b2c053e29e2198d9af7d2d17f814feef625",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515941681,
            "hunks": 8,
            "message": "WW-4891 Debug tag should not display anything when not in dev mode",
            "diff": [
                "diff --git a/apps/showcase/src/main/webapp/WEB-INF/tags/non-ui/debug.jsp b/apps/showcase/src/main/webapp/WEB-INF/tags/non-ui/debug.jsp",
                "index 1629bf3ab..45131e87c 100644",
                "--- a/apps/showcase/src/main/webapp/WEB-INF/tags/non-ui/debug.jsp",
                "+++ b/apps/showcase/src/main/webapp/WEB-INF/tags/non-ui/debug.jsp",
                "@@ -44,3 +44,3 @@",
                " \t\t    <p/>",
                "-\t\t    <s:debug />",
                "+\t\t    <s:debug disabled=\"false\" />",
                " \t\t</div>",
                "diff --git a/core/src/main/java/org/apache/struts2/components/Debug.java b/core/src/main/java/org/apache/struts2/components/Debug.java",
                "index c0b33d934..87c32de87 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/Debug.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/Debug.java",
                "@@ -36,9 +36,8 @@ import org.apache.struts2.StrutsException;",
                " @StrutsTag(name=\"debug\", tldTagClass=\"org.apache.struts2.views.jsp.ui.DebugTag\",",
                "-        description=\"Prints debugging information\")",
                "+        description=\"Prints debugging information (Only if 'struts.devMode' enabled or disable tag is set 'false')\")",
                " public class Debug extends UIBean {",
                "     public static final String TEMPLATE = \"debug\";",
                "-    ",
                "+",
                "     protected ReflectionProvider reflectionProvider;",
                "-    ",
                "@@ -52,3 +51,3 @@ public class Debug extends UIBean {",
                "     }",
                "-    ",
                "+",
                "     protected String getDefaultTemplate() {",
                "@@ -60,19 +59,34 @@ public class Debug extends UIBean {",
                "-        ValueStack stack = getStack();",
                "-        Iterator iter = stack.getRoot().iterator();",
                "-        List stackValues = new ArrayList(stack.getRoot().size());",
                "-        while (iter.hasNext()) {",
                "-            Object o = iter.next();",
                "-            Map values;",
                "-            try {",
                "-                values = reflectionProvider.getBeanMap(o);",
                "-            } catch (Exception e) {",
                "-                throw new StrutsException(\"Caught an exception while getting the property values of \" + o, e);",
                "+        if (showDebug()) {",
                "+            ValueStack stack = getStack();",
                "+            Iterator iter = stack.getRoot().iterator();",
                "+            List stackValues = new ArrayList(stack.getRoot().size());",
                "+            while (iter.hasNext()) {",
                "+                Object o = iter.next();",
                "+                Map values;",
                "+                try {",
                "+                    values = reflectionProvider.getBeanMap(o);",
                "+                } catch (Exception e) {",
                "+                    throw new StrutsException(\"Caught an exception while getting the property values of \" + o, e);",
                "+                }",
                "+                stackValues.add(new DebugMapEntry(o.getClass().getName(), values));",
                "             }",
                "-            stackValues.add(new DebugMapEntry(o.getClass().getName(), values));",
                "+",
                "+            addParameter(\"stackValues\", stackValues);",
                "         }",
                "+        return result;",
                "+    }",
                "-        addParameter(\"stackValues\", stackValues);",
                "+    @Override",
                "+    public boolean end(Writer writer, String body) {",
                "+        if (showDebug()) {",
                "+            return super.end(writer, body);",
                "+        } else {",
                "+            popComponentStack();",
                "+            return false;",
                "+        }",
                "+    }",
                "-        return result;",
                "+    protected boolean showDebug() {",
                "+        return (devMode || \"false\".equalsIgnoreCase(disabled));",
                "     }"
            ],
            "changed_files": [
                "apps/showcase/src/main/webapp/WEB-INF/tags/non-ui/debug.jsp",
                "core/src/main/java/org/apache/struts2/components/Debug.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4891": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4891",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6b131550a649106766f45c83279b036544afc58c",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513158095,
            "hunks": 3,
            "message": "WW-4900 Reverts BackgroundProcess access modifiers",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java b/core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java",
                "index 5210c4072..cc30f8ac4 100644",
                "--- a/core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java",
                "+++ b/core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java",
                "@@ -47,3 +47,3 @@ public class BackgroundProcess implements Serializable {",
                "      */",
                "-    BackgroundProcess(String threadName, final ActionInvocation invocation, int threadPriority) {",
                "+    public BackgroundProcess(String threadName, final ActionInvocation invocation, int threadPriority) {",
                "         this.invocation = invocation;",
                "@@ -77,3 +77,3 @@ public class BackgroundProcess implements Serializable {",
                "      */",
                "-    private void beforeInvocation() throws Exception {",
                "+    protected void beforeInvocation() throws Exception {",
                "         ActionContext.setContext(invocation.getInvocationContext());",
                "@@ -88,3 +88,3 @@ public class BackgroundProcess implements Serializable {",
                "      */",
                "-    private void afterInvocation() throws Exception {",
                "+    protected void afterInvocation() throws Exception {",
                "         ActionContext.setContext(null);"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/interceptor/BackgroundProcess.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4900": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4900",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2941416a1832393a25a9bb823f5763fc7851da23",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513236905,
            "hunks": 3,
            "message": "WW-4873 Makes InvocationSessionStore$InvocationContext transient",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java b/core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java",
                "index 6eaaf7366..15662de38 100644",
                "--- a/core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java",
                "+++ b/core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java",
                "@@ -22,3 +22,2 @@ import com.opensymphony.xwork2.ActionContext;",
                " import com.opensymphony.xwork2.ActionInvocation;",
                "-import com.opensymphony.xwork2.util.ValueStack;",
                "@@ -58,6 +57,10 @@ public class InvocationSessionStore {",
                "-        ValueStack stack = invocationContext.invocation.getStack();",
                "-        ActionContext.getContext().setValueStack(stack);",
                "+        ActionInvocation savedInvocation = null;",
                "+        if (invocationContext.invocation != null) {",
                "+            savedInvocation = invocationContext.invocation;",
                "+            ActionContext.setContext(savedInvocation.getInvocationContext());",
                "+            ActionContext.getContext().setValueStack(savedInvocation.getStack());",
                "+        }",
                "-        return invocationContext.invocation;",
                "+        return savedInvocation;",
                "     }",
                "@@ -111,3 +114,5 @@ public class InvocationSessionStore {",
                "-        ActionInvocation invocation;",
                "+        //WW-4873 transient since 2.5.15",
                "+        transient ActionInvocation invocation;",
                "+",
                "         String token;"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/util/InvocationSessionStore.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4873": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4873",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dc645bec4d6aa21b88372a06f0eca0c7b7b0d38b",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514296130,
            "hunks": 1,
            "message": "Merge branch 'master' into WW-4874",
            "diff": [
                "diff --cc core/src/test/java/com/opensymphony/xwork2/DefaultActionInvocationTest.java",
                "index 4226ef83a,4e75acda2..91b6b11b9",
                "--- a/core/src/test/java/com/opensymphony/xwork2/DefaultActionInvocationTest.java",
                "+++ b/core/src/test/java/com/opensymphony/xwork2/DefaultActionInvocationTest.java",
                "@@@ -344,88 -324,70 +328,156 @@@ public class DefaultActionInvocationTes",
                " +    public void testInvokeWithAsyncManager() throws Exception {",
                " +        DefaultActionInvocation dai = new DefaultActionInvocation(new HashMap<String, Object>(), false);",
                " +        dai.stack = container.getInstance(ValueStackFactory.class).createValueStack();",
                " +",
                " +        final Semaphore lock = new Semaphore(1);",
                " +        lock.acquire();",
                " +        dai.setAsyncManager(new AsyncManager() {",
                " +            Object asyncActionResult;",
                " +            @Override",
                " +            public boolean hasAsyncActionResult() {",
                " +                return asyncActionResult != null;",
                " +            }",
                " +",
                " +            @Override",
                " +            public Object getAsyncActionResult() {",
                " +                return asyncActionResult;",
                " +            }",
                " +",
                " +            @Override",
                " +            public void invokeAsyncAction(Callable asyncAction) {",
                " +                try {",
                " +                    asyncActionResult = asyncAction.call();",
                " +                } catch (Exception e) {",
                " +                    asyncActionResult = e;",
                " +                }",
                " +                lock.release();",
                " +            }",
                " +        });",
                " +",
                " +        dai.action = new Callable<Callable<String>>() {",
                " +            @Override",
                " +            public Callable<String> call() throws Exception {",
                " +                return new Callable<String>() {",
                " +                    @Override",
                " +                    public String call() throws Exception {",
                " +                        return \"success\";",
                " +                    }",
                " +                };",
                " +            }",
                " +        };",
                " +",
                " +        MockActionProxy actionProxy = new MockActionProxy();",
                " +        actionProxy.setMethod(\"call\");",
                " +        dai.proxy = actionProxy;",
                " +",
                " +        final boolean[] preResultExecuted = new boolean[1];",
                " +        dai.addPreResultListener(new PreResultListener() {",
                " +            @Override",
                " +            public void beforeResult(ActionInvocation invocation, String resultCode) {",
                " +                preResultExecuted[0] = true;",
                " +            }",
                " +        });",
                " +",
                " +        List<InterceptorMapping> interceptorMappings = new ArrayList<>();",
                " +        MockInterceptor mockInterceptor1 = new MockInterceptor();",
                " +        mockInterceptor1.setFoo(\"test1\");",
                " +        mockInterceptor1.setExpectedFoo(\"test1\");",
                " +        interceptorMappings.add(new InterceptorMapping(\"test1\", mockInterceptor1));",
                " +        dai.interceptors = interceptorMappings.iterator();",
                " +",
                " +        dai.ognlUtil = new OgnlUtil();",
                " +",
                " +        dai.invoke();",
                " +",
                " +        assertTrue(\"interceptor1 should be executed\", mockInterceptor1.isExecuted());",
                " +        assertFalse(\"preResultListener should no be executed\", preResultExecuted[0]);",
                " +        assertNotNull(\"an async action should be saved\", dai.asyncAction);",
                " +        assertFalse(\"invocation should not be executed\", dai.executed);",
                " +        assertNull(\"a null result should be passed to upper and wait for the async result\", dai.resultCode);",
                " +",
                " +        if(lock.tryAcquire(1500L, TimeUnit.MILLISECONDS)) {",
                " +            try {",
                " +                dai.invoke();",
                " +                assertTrue(\"preResultListener should be executed\", preResultExecuted[0]);",
                " +                assertNull(\"async action should be cleared\", dai.asyncAction);",
                " +                assertTrue(\"invocation should be executed\", dai.executed);",
                " +                assertEquals(\"success\", dai.resultCode);",
                " +            } finally {",
                " +                lock.release();",
                " +            }",
                " +        } else {",
                " +            lock.release();",
                " +            fail(\"async result did not received on timeout!\");",
                " +        }",
                " +    }",
                " +",
                "+     public void testActionEventListener() throws Exception {",
                "+         ActionProxy actionProxy = actionProxyFactory.createActionProxy(\"\",",
                "+                 \"ExceptionFoo\", \"exceptionMethod\", new HashMap<String, Object>());",
                "+         DefaultActionInvocation defaultActionInvocation = (DefaultActionInvocation) actionProxy.getInvocation();",
                "+ ",
                "+         SimpleActionEventListener actionEventListener = new SimpleActionEventListener(\"prepared\", \"exceptionHandled\");",
                "+         defaultActionInvocation.setActionEventListener(actionEventListener);",
                "+         defaultActionInvocation.init(actionProxy);",
                "+ ",
                "+         SimpleAction action = (SimpleAction) defaultActionInvocation.getAction();",
                "+         action.setThrowException(true);",
                "+ ",
                "+         defaultActionInvocation.unknownHandlerManager = new DefaultUnknownHandlerManager() {",
                "+             @Override",
                "+             public boolean hasUnknownHandlers() {",
                "+                 return false;",
                "+             }",
                "+         };",
                "+ ",
                "+         String result = defaultActionInvocation.invoke();",
                "+ ",
                "+         // then",
                "+         assertEquals(\"prepared\", action.getName());",
                "+         assertEquals(\"exceptionHandled\", result);",
                "+     }",
                "+ ",
                "+     public void testActionChainResult() throws Exception {",
                "+         ActionProxy actionProxy = actionProxyFactory.createActionProxy(\"\", \"Foo\", null,",
                "+                 new HashMap<String, Object>());",
                "+         DefaultActionInvocation defaultActionInvocation = (DefaultActionInvocation) actionProxy.getInvocation();",
                "+         defaultActionInvocation.init(actionProxy);",
                "+ ",
                "+         SimpleAction action = (SimpleAction) defaultActionInvocation.getAction();",
                "+         action.setFoo(1);",
                "+         action.setBar(2);",
                "+ ",
                "+         defaultActionInvocation.invoke();",
                "+ ",
                "+         // then",
                "+         assertTrue(defaultActionInvocation.result instanceof ActionChainResult);",
                "+         Result result = defaultActionInvocation.getResult();",
                "+         assertTrue(result instanceof MockResult);",
                "+     }",
                "+ ",
                "+     public void testNoResultDefined() throws Exception {",
                "+         ActionProxy actionProxy = actionProxyFactory.createActionProxy(\"\", \"Foo\", null,",
                "+                 new HashMap<String, Object>());",
                "+         DefaultActionInvocation defaultActionInvocation = (DefaultActionInvocation) actionProxy.getInvocation();",
                "+         defaultActionInvocation.init(actionProxy);",
                "+ ",
                "+         try {",
                "+             defaultActionInvocation.invoke();//foo==bar so returns error which is not defined",
                "+             fail(\"should not possible when result is not defined\");",
                "+         } catch (Exception ignored) {",
                "+         }",
                "+     }",
                "+ ",
                "+     public void testNullResultPossible() throws Exception {",
                "+         ActionProxy actionProxy = actionProxyFactory.createActionProxy(\"\",",
                "+                 \"NullFoo\", \"nullMethod\", new HashMap<String, Object>());",
                "+         DefaultActionInvocation defaultActionInvocation = (DefaultActionInvocation) actionProxy.getInvocation();",
                "+         defaultActionInvocation.init(actionProxy);",
                "+ ",
                "+         String result = defaultActionInvocation.invoke();",
                "+ ",
                "+         assertNull(result);",
                "+     }",
                "+ ",
                "      @Override"
            ],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4874": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4874",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c1e0528d46424e31e0706d873f5e07bca4c898eb",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1507991500,
            "hunks": 14,
            "message": "WW-4869 Fixes JarEntryRevision",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java b/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java",
                "index 4b962af08..268710fb8 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java",
                "@@ -5,8 +5,6 @@ import org.apache.logging.log4j.Logger;",
                " import org.apache.logging.log4j.LogManager;",
                "-import org.apache.commons.io.FileUtils;",
                " import java.io.IOException;",
                "+import java.net.JarURLConnection;",
                " import java.net.URL;",
                "-import java.util.jar.JarFile;",
                "-import java.util.zip.ZipEntry;",
                "@@ -19,7 +17,3 @@ public class JarEntryRevision extends Revision {",
                "-    private static final String JAR_FILE_NAME_SEPARATOR = \"!/\";",
                "-    private static final String JAR_FILE_EXTENSION_END = \".jar/\";",
                "-",
                "-    private String jarFileName;",
                "-    private String fileNameInJar;",
                "+    private URL jarFileURL;",
                "     private long lastModified;",
                "@@ -29,24 +23,9 @@ public class JarEntryRevision extends Revision {",
                "         // Find separator index of jar filename and filename within jar",
                "-        String jarFileName = \"\";",
                "+        JarURLConnection conn = null;",
                "         try {",
                "-            String fileName = fileUrl.toString();",
                "-            int separatorIndex = fileName.indexOf(JAR_FILE_NAME_SEPARATOR);",
                "-            if (separatorIndex == -1) {",
                "-                separatorIndex = fileName.lastIndexOf(JAR_FILE_EXTENSION_END);",
                "-            }",
                "-            if (separatorIndex == -1) {",
                "-                LOG.warn(\"Could not find end of jar file!\");",
                "-                return null;",
                "-            }",
                "-",
                "-            // Split file name",
                "-            jarFileName = fileName.substring(0, separatorIndex);",
                "-            int index = separatorIndex + JAR_FILE_NAME_SEPARATOR.length();",
                "-            String fileNameInJar = fileName.substring(index).replaceAll(\"%20\", \" \");",
                "-",
                "+            conn = (JarURLConnection) fileUrl.openConnection();",
                "+            conn.setUseCaches(false);",
                "             URL url = fileManager.normalizeToFileProtocol(fileUrl);",
                "             if (url != null) {",
                "-                JarFile jarFile = new JarFile(FileUtils.toFile(url));",
                "-                ZipEntry entry = jarFile.getEntry(fileNameInJar);",
                "-                return new JarEntryRevision(jarFileName, fileNameInJar, entry.getTime());",
                "+                return new JarEntryRevision(fileUrl, conn.getJarEntry().getTime());",
                "             } else {",
                "@@ -55,13 +34,20 @@ public class JarEntryRevision extends Revision {",
                "         } catch (Throwable e) {",
                "-            LOG.warn(\"Could not create JarEntryRevision for [{}]!\", jarFileName, e);",
                "+            LOG.warn(\"Could not create JarEntryRevision for [{}]!\", fileUrl, e);",
                "             return null;",
                "         }",
                "+        finally {",
                "+            if(null != conn) {",
                "+                try {",
                "+                    conn.getInputStream().close();",
                "+                } catch (IOException ignored) {",
                "+                }",
                "+            }",
                "+        }",
                "     }",
                "-    private JarEntryRevision(String jarFileName, String fileNameInJar, long lastModified) {",
                "-        if ((jarFileName == null) || (fileNameInJar == null)) {",
                "-            throw new IllegalArgumentException(\"JarFileName and FileNameInJar cannot be null\");",
                "+    private JarEntryRevision(URL jarFileURL, long lastModified) {",
                "+        if (jarFileURL == null) {",
                "+            throw new IllegalArgumentException(\"jarFileURL cannot be null\");",
                "         }",
                "-        this.jarFileName = jarFileName;",
                "-        this.fileNameInJar = fileNameInJar;",
                "+        this.jarFileURL = jarFileURL;",
                "         this.lastModified = lastModified;",
                "@@ -70,11 +56,20 @@ public class JarEntryRevision extends Revision {",
                "     public boolean needsReloading() {",
                "-        ZipEntry entry;",
                "+        JarURLConnection conn = null;",
                "+        long lastLastModified = lastModified;",
                "         try {",
                "-            JarFile jarFile = new JarFile(this.jarFileName);",
                "-            entry = jarFile.getEntry(this.fileNameInJar);",
                "-        } catch (IOException e) {",
                "-            entry = null;",
                "+            conn = (JarURLConnection) jarFileURL.openConnection();",
                "+            conn.setUseCaches(false);",
                "+            lastLastModified = conn.getJarEntry().getTime();",
                "+        } catch (IOException ignored) {",
                "+        }",
                "+        finally {",
                "+            if(null != conn) {",
                "+                try {",
                "+                    conn.getInputStream().close();",
                "+                } catch (IOException ignored) {",
                "+                }",
                "+            }",
                "         }",
                "-        return entry != null && (lastModified < entry.getTime());",
                "+        return lastModified < lastLastModified;",
                "     }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/fs/JarEntryRevision.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4869": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4869",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9418cb5e89001f90a5e5b9320e03dfd372b2c18d",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510489110,
            "hunks": 3,
            "message": "WW-4876 WW-4841 Parses validators after all injections done",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java b/core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java",
                "index 2770c48b0..d945e0a26 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java",
                "@@ -57,2 +57,6 @@ public class DefaultValidatorFactory implements ValidatorFactory {",
                "         this.validatorFileParser = parser;",
                "+    }",
                "+",
                "+    @Override",
                "+    public void init() {",
                "         parseValidators();",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/validator/ValidatorFactory.java b/core/src/main/java/com/opensymphony/xwork2/validator/ValidatorFactory.java",
                "index 8510fe6bb..5c3ce7ed4 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/validator/ValidatorFactory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/validator/ValidatorFactory.java",
                "@@ -20,2 +20,4 @@ package com.opensymphony.xwork2.validator;",
                "+import com.opensymphony.xwork2.inject.Initializable;",
                "+",
                " /**",
                "@@ -227,3 +229,3 @@ package com.opensymphony.xwork2.validator;",
                "  */",
                "-public interface ValidatorFactory {",
                "+public interface ValidatorFactory extends Initializable {"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/validator/DefaultValidatorFactory.java",
                "core/src/main/java/com/opensymphony/xwork2/validator/ValidatorFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4876": "",
                "WW-4841": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4876, WW-4841",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fb8f139b069dd32ccecf9abe6b4c110a666ca860",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513838616,
            "hunks": 2,
            "message": "WW-4874 Renames local variable inv to invocation",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "index 1672f9ead..dd2f76bea 100644",
                "--- a/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "+++ b/core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java",
                "@@ -566,4 +566,4 @@ public class Dispatcher {",
                "             //check if we are probably in an async resuming",
                "-            ActionInvocation inv = ActionContext.getContext().getActionInvocation();",
                "-            if (inv == null || inv.isExecuted()) {",
                "+            ActionInvocation invocation = ActionContext.getContext().getActionInvocation();",
                "+            if (invocation == null || invocation.isExecuted()) {",
                "                 proxy = getContainer().getInstance(ActionProxyFactory.class).createActionProxy(namespace, name, method,",
                "@@ -571,3 +571,3 @@ public class Dispatcher {",
                "             } else {",
                "-                proxy = inv.getProxy();",
                "+                proxy = invocation.getProxy();",
                "             }"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/dispatcher/Dispatcher.java"
            ],
            "message_reference_content": [],
            "jira_refs": {
                "WW-4874": ""
            },
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": [
                {
                    "id": "BUG_IN_MESSAGE",
                    "message": "The commit message references some bug tracking ticket: WW-4874",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "031bd1aceb668c7a910bcec60855c47e35fa37ac",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513411669,
            "hunks": 2,
            "message": "Adds empty line to kick Travis build",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index b7fc7f118..14daf858e 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -19,2 +19,3 @@ cache:",
                "   directories:",
                "-  - $HOME/.m2",
                "\\ No newline at end of file",
                "+  - $HOME/.m2",
                "+  ",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                ".travis.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8817c508c59acaea75c1b4588b6909c3a5662eee",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508665107,
            "hunks": 4,
            "message": "Defines a new profile to check missing dependencies",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 84f2af763..0eacc4eb3 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -130,2 +130,21 @@",
                "         </profile>",
                "+        <profile>",
                "+            <id>dependency-check</id>",
                "+            <build>",
                "+                <plugins>",
                "+                    <plugin>",
                "+                        <groupId>org.owasp</groupId>",
                "+                        <artifactId>dependency-check-maven</artifactId>",
                "+                        <executions>",
                "+                            <execution>",
                "+                                <phase>verify</phase>",
                "+                                <goals>",
                "+                                    <goal>check</goal>",
                "+                                </goals>",
                "+                            </execution>",
                "+                        </executions>",
                "+                    </plugin>",
                "+                </plugins>",
                "+            </build>",
                "+        </profile>",
                "         <profile>",
                "@@ -256,4 +275,15 @@",
                "                 </plugin>",
                "+                <plugin>",
                "+                    <groupId>org.owasp</groupId>",
                "+                    <artifactId>dependency-check-maven</artifactId>",
                "+                    <version>3.0.1</version>",
                "+                    <configuration>",
                "+                        <failBuildOnCVSS>8</failBuildOnCVSS>",
                "+                        <skipProvidedScope>true</skipProvidedScope>",
                "+                        <skipRuntimeScope>true</skipRuntimeScope>",
                "+                    </configuration>",
                "+                </plugin>",
                "             </plugins>",
                "         </pluginManagement>",
                "+",
                "         <plugins>",
                "@@ -360,3 +390,13 @@",
                "                 <artifactId>apache-rat-plugin</artifactId>",
                "-                <version>0.12</version>",
                "+            </plugin>",
                "+            <plugin>",
                "+                <groupId>org.owasp</groupId>",
                "+                <artifactId>dependency-check-maven</artifactId>",
                "+                <reportSets>",
                "+                    <reportSet>",
                "+                        <reports>",
                "+                            <report>aggregate</report>",
                "+                        </reports>",
                "+                    </reportSet>",
                "+                </reportSets>",
                "             </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "2e7f5c0d4009d17d2e327e9caecfaa4ab6f44e7c",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508658683,
            "hunks": 7,
            "message": "Changes how docs are fetched",
            "diff": [
                "diff --git a/assembly/pom.xml b/assembly/pom.xml",
                "index a7518bac1..eaffae9b9 100644",
                "--- a/assembly/pom.xml",
                "+++ b/assembly/pom.xml",
                "@@ -77,3 +77,3 @@",
                "                     <execution>",
                "-                        <id>cwiki-docs</id>",
                "+                        <id>docs</id>",
                "                         <phase>prepare-package</phase>",
                "@@ -83,4 +83,4 @@",
                "                         <configuration>",
                "-                            <tasks>",
                "-                                <mkdir dir=\"${project.build.directory}/cwiki/\" />",
                "+                            <target>",
                "+                                <mkdir dir=\"${project.build.directory}/docs/\" />",
                "                                 <exec executable=\"wget\">",
                "@@ -88,3 +88,3 @@",
                "                                     <arg value=\"-nH\" />",
                "-                                    <arg value=\"--cut-dirs=3\" />",
                "+                                    <arg value=\"-x\" />",
                "                                     <arg value=\"-nv\" />",
                "@@ -92,14 +92,10 @@",
                "                                     <arg value=\"-L\" />",
                "-                                    <arg value=\"-l 0\" />",
                "                                     <arg value=\"-np\" />",
                "-                                    <arg value=\"--directory-prefix=${project.build.directory}/cwiki\" />",
                "+                                    <arg value=\"--directory-prefix=${project.build.directory}/docs\" />",
                "                                     <arg value=\"--no-check-certificate\" />",
                "                                     <arg value=\"-r\" />",
                "-                                    <arg value=\"http://struts.apache.org/docs/\" />",
                "+                                    <arg value=\"-i\" />",
                "+                                    <arg value=\"src/main/resources/docs-urls.txt\" />",
                "                                 </exec>",
                "-                                <delete>",
                "-                                    <fileset dir=\"${project.build.directory}/cwiki/\" includes=\"**/index.*\" />",
                "-                                </delete>",
                "-                                <copy file=\"${project.build.directory}/cwiki/home.html\" tofile=\"${project.build.directory}/cwiki/index.html\" />",
                "-                            </tasks>",
                "+                            </target>",
                "                         </configuration>"
            ],
            "changed_files": [
                "assembly/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a29051c835cb93d68578039361b8b325c2bd7831",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515016792,
            "hunks": 1,
            "message": "add missing @Override annotation",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/components/UIBean.java b/core/src/main/java/org/apache/struts2/components/UIBean.java",
                "index 3038d117b..b7c4432e4 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/UIBean.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/UIBean.java",
                "@@ -530,2 +530,3 @@ public abstract class UIBean extends Component {",
                "+    @Override",
                "     public boolean end(Writer writer, String body) {"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/components/UIBean.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7ada6c4c6bebd751fbbbcf279192144c08e16246",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508483080,
            "hunks": 6,
            "message": "Adds missing dependency and drops unused properties",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 3a83b32cc..2eb242fce 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -84,2 +84,4 @@",
                "     <properties>",
                "+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "+",
                "         <currentVersion>${project.version}</currentVersion>",
                "@@ -92,8 +94,4 @@",
                "-        <!-- SCM Site Configuration -->",
                "-        <site.mainDirectory>${project.build.directory}/site</site.mainDirectory>",
                "-        <siteContent.path>${site.mainDirectory}/staging</siteContent.path>",
                "-        <scmCheckout.path>${site.mainDirectory}/scm</scmCheckout.path>",
                "-        <siteDeploy.url>file://${siteContent.path}</siteDeploy.url>",
                "-        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "+        <!-- Site generation -->",
                "+        <fluido-skin.version>1.6</fluido-skin.version>",
                "     </properties>",
                "@@ -259,10 +257,2 @@",
                "             </plugin>",
                "-            <plugin>",
                "-                <groupId>org.apache.maven.plugins</groupId>",
                "-                <artifactId>maven-scm-publish-plugin</artifactId>",
                "-                <configuration>",
                "-                    <checkoutDirectory>${scmCheckout.path}</checkoutDirectory>",
                "-                    <content>${siteContent.path}</content>",
                "-                </configuration>",
                "-            </plugin>",
                "             <plugin>",
                "@@ -271,3 +261,2 @@",
                "                 <configuration>",
                "-                    <stagingSiteURL>${siteDeploy.url}</stagingSiteURL>",
                "                     <relativizeDecorationLinks>false</relativizeDecorationLinks>",
                "@@ -275,2 +264,7 @@",
                "                 <dependencies>",
                "+                    <dependency>",
                "+                        <groupId>org.apache.maven.doxia</groupId>",
                "+                        <artifactId>doxia-core</artifactId>",
                "+                        <version>1.7</version>",
                "+                    </dependency>",
                "                     <dependency>",
                "@@ -293,2 +287,5 @@",
                "                 <artifactId>maven-project-info-reports-plugin</artifactId>",
                "+                <configuration>",
                "+                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>",
                "+                </configuration>",
                "             </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "67b7fc3f3e57dbe94f4f607ba3b44edc69e55065",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514881599,
            "hunks": 3,
            "message": "Avoids initialising singletons once marked as Initializable",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "index e62d01314..6ae5e07c9 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "@@ -101,8 +101,10 @@ public final class ContainerBuilder {",
                "         factories.put(key, scopedFactory);",
                "-        if (scope == Scope.SINGLETON) {",
                "-            singletonFactories.add(createCallableFactory(key, scopedFactory));",
                "-        }",
                "+",
                "+        InternalFactory<T> callableFactory = createCallableFactory(key, scopedFactory);",
                "         if (Initializable.class.isAssignableFrom(factory.type())) {",
                "-            initializableFactories.add(createCallableFactory(key, scopedFactory));",
                "+            initializableFactories.add(callableFactory);",
                "+        } else if (scope == Scope.SINGLETON) {",
                "+            singletonFactories.add(callableFactory);",
                "         }",
                "+",
                "         return this;"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5ef76872595f00a0d7623e590f012a451615db65",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511767155,
            "hunks": 2,
            "message": "Suppresses some false positives on OWASP Dependency Check",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 222a2d11f..5843f02d8 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -275,2 +275,5 @@",
                "                     <configuration>",
                "+                        <suppressionFiles>",
                "+                            <suppressionFile>src/etc/project-suppression.xml</suppressionFile>",
                "+                        </suppressionFiles>",
                "                         <failBuildOnCVSS>8</failBuildOnCVSS>",
                "diff --git a/src/etc/project-suppression.xml b/src/etc/project-suppression.xml",
                "new file mode 100644",
                "index 000000000..2c2ac0b39",
                "--- /dev/null",
                "+++ b/src/etc/project-suppression.xml",
                "@@ -0,0 +1,19 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                "+<suppressions xmlns=\"https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.1.xsd\">",
                "+    <suppress>",
                "+        <notes><![CDATA[",
                "+        This suppresses false positives identified on Struts Annotations.",
                "+        ]]></notes>",
                "+        <gav regex=\"true\">org\\.apache\\.struts:struts\\-annotations\\:1\\.0\\.6</gav>",
                "+        <cpe>cpe:/a:apache:struts:1.0.6</cpe>",
                "+    </suppress>",
                "+    <suppress>",
                "+        <notes><![CDATA[",
                "+        This suppresses false positives identified on Struts 1.",
                "+        ]]></notes>",
                "+        <gav regex=\"true\">org\\.apache\\.struts\\:struts\\-*:1\\.3\\.8</gav>",
                "+        <cpe>cpe:/a:apache:struts:1.3.8</cpe>",
                "+        <cpe>cpe:/a:apache:tiles:1.3.8</cpe>",
                "+        <cpe>cpe:/a:apache:struts:1.3.8</cpe>",
                "+    </suppress>",
                "+</suppressions>",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                "pom.xml",
                "src/etc/project-suppression.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e23197ab1b343e15f2bb1f4e21257db6cf83d3ba",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1516033944,
            "hunks": 3,
            "message": "Uses the new constant and makes an old one deprecated",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/ognl/accessor/XWorkListPropertyAccessor.java b/core/src/main/java/com/opensymphony/xwork2/ognl/accessor/XWorkListPropertyAccessor.java",
                "index cb406b79b..242d09772 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/ognl/accessor/XWorkListPropertyAccessor.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/ognl/accessor/XWorkListPropertyAccessor.java",
                "@@ -30,2 +30,3 @@ import ognl.OgnlException;",
                " import ognl.PropertyAccessor;",
                "+import org.apache.struts2.StrutsConstants;",
                "@@ -51,8 +52,14 @@ public class XWorkListPropertyAccessor extends ListPropertyAccessor {",
                "     private int autoGrowCollectionLimit = 255;",
                "-    ",
                "+",
                "+    @Deprecated()",
                "     @Inject(value = \"xwork.autoGrowCollectionLimit\", required = false)",
                "-\tpublic void setAutoGrowCollectionLimit(String value) {",
                "-\t\tthis.autoGrowCollectionLimit = Integer.valueOf(value);",
                "-\t}",
                "+    public void setDeprecatedAutoGrowCollectionLimit(String value) {",
                "+        this.autoGrowCollectionLimit = Integer.valueOf(value);",
                "+    }",
                "+    @Inject(value = StrutsConstants.STRUTS_OGNL_AUTO_GROWTH_COLLECTION_LIMIT, required = false)",
                "+    public void setAutoGrowCollectionLimit(String value) {",
                "+        this.autoGrowCollectionLimit = Integer.parseInt(value);",
                "+    }",
                "+",
                "     @Inject(\"java.util.Collection\")"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/ognl/accessor/XWorkListPropertyAccessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "726a0391e43b890587181a2a9ca95fdc4ac0f02d",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508483101,
            "hunks": 7,
            "message": "Simplifies sipping modules",
            "diff": [
                "diff --git a/apps/pom.xml b/apps/pom.xml",
                "index 3c3c11e84..ffc4b1f05 100644",
                "--- a/apps/pom.xml",
                "+++ b/apps/pom.xml",
                "@@ -38,2 +38,9 @@",
                "+    <properties>",
                "+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "+",
                "+        <maven.site.skip>true</maven.site.skip>",
                "+        <maven.site.deploy.skip>true</maven.site.deploy.skip>",
                "+    </properties>",
                "+",
                "     <build>",
                "@@ -80,10 +87,2 @@",
                "             </plugin>",
                "-            <plugin>",
                "-                <artifactId>maven-site-plugin</artifactId>",
                "-                <configuration>",
                "-                    <skip>true</skip>",
                "-                    <skipDeploy>true</skipDeploy>",
                "-                    <generateReports>false</generateReports>",
                "-                </configuration>",
                "-            </plugin>",
                "         </plugins>",
                "@@ -109,5 +108,2 @@",
                "-    <properties>",
                "-    \t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "-    </properties>",
                " </project>",
                "diff --git a/assembly/pom.xml b/assembly/pom.xml",
                "index 3df176779..0e7d34246 100644",
                "--- a/assembly/pom.xml",
                "+++ b/assembly/pom.xml",
                "@@ -12,14 +12,11 @@",
                "-    <build>",
                "-        <plugins>",
                "+    <properties>",
                "+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "-            <plugin>",
                "-                <artifactId>maven-site-plugin</artifactId>",
                "-                <configuration>",
                "-                    <skip>true</skip>",
                "-                    <skipDeploy>true</skipDeploy>",
                "-                    <generateReports>false</generateReports>",
                "-                </configuration>",
                "-            </plugin>",
                "+        <maven.site.skip>true</maven.site.skip>",
                "+        <maven.site.deploy.skip>true</maven.site.deploy.skip>",
                "+    </properties>",
                "+    <build>",
                "+        <plugins>",
                "             <plugin>",
                "@@ -251,6 +248,2 @@",
                "     </dependencies>",
                "-",
                "-    <properties>",
                "-    \t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",
                "-    </properties>",
                " </project>",
                "diff --git a/bom/pom.xml b/bom/pom.xml",
                "index b01a9f727..482fb1985 100644",
                "--- a/bom/pom.xml",
                "+++ b/bom/pom.xml",
                "@@ -28,17 +28,6 @@",
                "         <struts-version.version>2.5.14-SNAPSHOT</struts-version.version>",
                "+        <maven.site.skip>true</maven.site.skip>",
                "+        <maven.site.deploy.skip>true</maven.site.deploy.skip>",
                "     </properties>",
                "-    <build>",
                "-        <plugins>",
                "-            <plugin>",
                "-                <artifactId>maven-site-plugin</artifactId>",
                "-                <configuration>",
                "-                    <skip>true</skip>",
                "-                    <skipDeploy>true</skipDeploy>",
                "-                    <generateReports>false</generateReports>",
                "-                </configuration>",
                "-            </plugin>",
                "-        </plugins>",
                "-    </build>",
                "-",
                "     <dependencyManagement>"
            ],
            "changed_files": [
                "apps/pom.xml",
                "assembly/pom.xml",
                "bom/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d821c27291e315854a1d479137cc193f2b4a0ca3",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508955643,
            "hunks": 4,
            "message": "Injects user defined provider and uses it if available",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/StrutsTextProviderFactory.java b/core/src/main/java/com/opensymphony/xwork2/StrutsTextProviderFactory.java",
                "index e7d22d99a..a2d2fa3a9 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/StrutsTextProviderFactory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/StrutsTextProviderFactory.java",
                "@@ -31,2 +31,3 @@ public class StrutsTextProviderFactory implements TextProviderFactory {",
                "     protected LocalizedTextProvider localizedTextProvider;",
                "+    protected TextProvider defaultTextProvider;",
                "@@ -42,2 +43,7 @@ public class StrutsTextProviderFactory implements TextProviderFactory {",
                "+    @Inject(required = false)",
                "+    public void setDefaultTextProvider(TextProvider defaultTextProvider) {",
                "+        this.defaultTextProvider = defaultTextProvider;",
                "+    }",
                "+",
                "     @Override",
                "@@ -63,2 +69,6 @@ public class StrutsTextProviderFactory implements TextProviderFactory {",
                "     protected TextProvider getTextProvider(Class clazz) {",
                "+        if (defaultTextProvider != null) {",
                "+            return defaultTextProvider;",
                "+        }",
                "+",
                "         return new TextProviderSupport(clazz, localeProviderFactory.createLocaleProvider(), localizedTextProvider);",
                "@@ -67,2 +77,6 @@ public class StrutsTextProviderFactory implements TextProviderFactory {",
                "     protected TextProvider getTextProvider(ResourceBundle bundle) {",
                "+        if (defaultTextProvider != null) {",
                "+            return defaultTextProvider;",
                "+        }",
                "+",
                "         return new TextProviderSupport(bundle, localeProviderFactory.createLocaleProvider(), localizedTextProvider);"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/StrutsTextProviderFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c956d1a40d4f618dcaa3dd8acbd6c09b1933cf25",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510389749,
            "hunks": 4,
            "message": "Adds support for coveralls",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index 57ba3df4c..4939f24c7 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -8,2 +8,5 @@ jdk:",
                " install: true",
                "-script: mvn test -DskipAssembly",
                "\\ No newline at end of file",
                "+script: mvn test -DskipAssembly",
                "+",
                "+after_success:",
                "+  - mvn clean cobertura:cobertura coveralls:report -Ptravis-coveralls -DskipAssembly",
                "diff --git a/pom.xml b/pom.xml",
                "index 50fbf2735..70552f85a 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -168,2 +168,6 @@",
                "             </activation>",
                "+            <properties>",
                "+                <!-- coverall version 4.3.0 does not work with java 9, see https://github.com/trautonen/coveralls-maven-plugin/issues/112 -->",
                "+                <coveralls.skip>true</coveralls.skip>",
                "+            </properties>",
                "             <build>",
                "@@ -182,2 +186,28 @@",
                "         </profile>",
                "+        <profile>",
                "+            <id>travis-coveralls</id>",
                "+            <build>",
                "+                <plugins>",
                "+                    <plugin>",
                "+                        <groupId>org.codehaus.mojo</groupId>",
                "+                        <artifactId>cobertura-maven-plugin</artifactId>",
                "+                        <version>2.7</version>",
                "+                        <configuration>",
                "+                            <format>xml</format>",
                "+                            <maxmem>256m</maxmem>",
                "+                            <!-- aggregated reports for multi-module projects -->",
                "+                            <aggregate>true</aggregate>",
                "+                        </configuration>",
                "+                    </plugin>",
                "+                    <plugin>",
                "+                        <groupId>org.eluder.coveralls</groupId>",
                "+                        <artifactId>coveralls-maven-plugin</artifactId>",
                "+                        <version>4.3.0</version>",
                "+                        <configuration>",
                "+                            <repoToken>${env.coveralls_repo_token}</repoToken>",
                "+                        </configuration>",
                "+                    </plugin>",
                "+                </plugins>",
                "+            </build>",
                "+        </profile>",
                "     </profiles>"
            ],
            "changed_files": [
                ".travis.yml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b88639313f90c4ca9fe57b9f137b97a40b1b5f5b",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510137236,
            "hunks": 3,
            "message": "Fixes issue with CI and SCM",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index d1acf4086..1a391aacc 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -50,5 +50,5 @@",
                "     <scm>",
                "-        <connection>scm:git:git://git.apache.org/struts.git</connection>",
                "-        <developerConnection>scm:git:https://git-wip-us.apache.org/repos/asf/struts.git</developerConnection>",
                "-        <url>http://git.apache.org/struts.git</url>",
                "+        <connection>scm:git:https://gitbox.apache.org/repos/asf/struts.git</connection>",
                "+        <developerConnection>scm:git:https://gitbox.apache.org/repos/asf/struts.git</developerConnection>",
                "+        <url>https://github.com/apache/struts/</url>",
                "         <tag>HEAD</tag>",
                "@@ -58,3 +58,3 @@",
                "         <system>JIRA</system>",
                "-        <url>https://issues.apache.org/jira/browse/WW</url>",
                "+        <url>https://issues.apache.org/jira/projects/WW</url>",
                "     </issueManagement>",
                "@@ -63,3 +63,3 @@",
                "         <system>Jenkins</system>",
                "-        <url>https://builds.apache.org/hudson/view/S-Z/view/Struts</url>",
                "+        <url>builds.apache.org/view/S-Z/view/Struts/</url>",
                "         <notifiers>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "95a24c87a44e4a6e3c3c6366afe624c7b932de24",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517379747,
            "hunks": 1,
            "message": "Adds autogenerated file",
            "diff": [
                "diff --git a/core/src/site/resources/tags/debug.html b/core/src/site/resources/tags/debug.html",
                "index ce3349012..60dfaccc2 100644",
                "--- a/core/src/site/resources/tags/debug.html",
                "+++ b/core/src/site/resources/tags/debug.html",
                "@@ -14,3 +14,3 @@ Please do not edit it directly.",
                " \t\t<!-- START SNIPPET: tagdescription -->",
                "-\t\tPrints debugging information",
                "+\t\tPrints debugging information (Only if 'struts.devMode' is enabled)",
                " \t\t<!-- END SNIPPET: tagdescription -->"
            ],
            "changed_files": [
                "core/src/site/resources/tags/debug.html"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b04683181cd861ea1b2a1640b9e21c6d5441e70b",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514972730,
            "hunks": 6,
            "message": "Adjusts builder to handle the new interfaces",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "index 6ae5e07c9..7673facbf 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "@@ -49,3 +49,3 @@ public final class ContainerBuilder {",
                "     final List<InternalFactory<?>> singletonFactories = new ArrayList<>();",
                "-    final List<InternalFactory<?>> initializableFactories = new ArrayList<>();",
                "+    final List<InternalFactory<?>> earlyInitializableFactories = new ArrayList<>();",
                "     final List<Class<?>> staticInjections = new ArrayList<>();",
                "@@ -103,4 +103,4 @@ public final class ContainerBuilder {",
                "         InternalFactory<T> callableFactory = createCallableFactory(key, scopedFactory);",
                "-        if (Initializable.class.isAssignableFrom(factory.type())) {",
                "-            initializableFactories.add(callableFactory);",
                "+        if (EarlyInitializable.class.isAssignableFrom(factory.type())) {",
                "+            earlyInitializableFactories.add(callableFactory);",
                "         } else if (scope == Scope.SINGLETON) {",
                "@@ -610,3 +610,11 @@ public final class ContainerBuilder {",
                "         created = true;",
                "-        final ContainerImpl container = new ContainerImpl(new HashMap<>(factories));",
                "+",
                "+        final Map<Key<?>, InternalFactory<?>> realFactories = new HashMap<>();",
                "+",
                "+        for (Map.Entry<Key<?>, InternalFactory<?>> entry : factories.entrySet()) {",
                "+            realFactories.put(entry.getKey(), InitializableFactory.wrapIfNeeded(entry.getValue()));",
                "+        }",
                "+",
                "+        final ContainerImpl container = new ContainerImpl(realFactories);",
                "+",
                "         if (loadSingletons) {",
                "@@ -615,3 +623,3 @@ public final class ContainerBuilder {",
                "                     for (InternalFactory<?> factory : singletonFactories) {",
                "-                        factory.create(context);",
                "+                        InitializableFactory.wrapIfNeeded(factory).create(context);",
                "                     }",
                "@@ -621,7 +629,7 @@ public final class ContainerBuilder {",
                "         }",
                "+",
                "         container.callInContext(new ContainerImpl.ContextualCallable<Void>() {",
                "             public Void call(InternalContext context) {",
                "-            for (InternalFactory<?> factory : initializableFactories) {",
                "-                Initializable instance = (Initializable) factory.create(context);",
                "-                instance.init();",
                "+            for (InternalFactory<?> factory : earlyInitializableFactories) {",
                "+                InitializableFactory.wrapIfNeeded(factory).create(context);",
                "             }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5325f7834beeb75f960bad0d3fa729cd9141e42e",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508955562,
            "hunks": 1,
            "message": "Defines a new alias",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java b/core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java",
                "index 8249a0667..fb780037b 100644",
                "--- a/core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java",
                "+++ b/core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java",
                "@@ -397,2 +397,3 @@ public class DefaultBeanSelectionProvider extends AbstractBeanSelectionProvider",
                "         alias(TextProvider.class, StrutsConstants.STRUTS_XWORKTEXTPROVIDER, builder, props, Scope.PROTOTYPE);",
                "+        alias(TextProvider.class, StrutsConstants.STRUTS_TEXT_PROVIDER, builder, props, Scope.PROTOTYPE);",
                "         alias(TextProviderFactory.class, StrutsConstants.STRUTS_TEXT_PROVIDER_FACTORY, builder, props, Scope.PROTOTYPE);"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/config/DefaultBeanSelectionProvider.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d5926b7a2196fab0735acac094b6438bb7cf4a94",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1516879674,
            "hunks": 2,
            "message": "Searches hierarchy down to Object class for annotation",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "index 42c113f34..c37103526 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "@@ -141,3 +141,3 @@ public class AnnotationUtils {",
                "         T ann = clazz.getAnnotation(annotationClass);",
                "-        while (ann == null && clazz != null) {",
                "+        if (ann == null && clazz != Object.class) {",
                "             ann = clazz.getAnnotation(annotationClass);",
                "@@ -146,7 +146,4 @@ public class AnnotationUtils {",
                "             }",
                "-            if (ann == null) {",
                "-                clazz = clazz.getSuperclass();",
                "-                if (clazz != null) {",
                "-                    ann = clazz.getAnnotation(annotationClass);",
                "-                }",
                "+            if (ann == null && clazz != Object.class) {",
                "+                ann = findAnnotation(clazz.getSuperclass(), annotationClass);",
                "             }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c21fb94921113eb3e91b27549fedbb9ef2d194a3",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1516033886,
            "hunks": 1,
            "message": "Defines a new constant to limit collection auto growth",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/StrutsConstants.java b/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "index 6ee09ffb6..d01e15088 100644",
                "--- a/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "+++ b/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "@@ -330,2 +330,4 @@ public final class StrutsConstants {",
                "     public static final String STRUTS_DISALLOW_PROXY_MEMBER_ACCESS = \"struts.disallowProxyMemberAccess\";",
                "+",
                "+    public static final String STRUTS_OGNL_AUTO_GROWTH_COLLECTION_LIMIT = \"struts.ognl.autoGrowthCollectionLimit\";",
                " }"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/StrutsConstants.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "fad603c49bfd19082d14f59f3bfcd1df15571cb4",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514972714,
            "hunks": 1,
            "message": "Adds a dedicated interfaces to clearly tell CI which beans must be instantiated early",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/EarlyInitializable.java b/core/src/main/java/com/opensymphony/xwork2/inject/EarlyInitializable.java",
                "new file mode 100644",
                "index 000000000..bf5d5f412",
                "--- /dev/null",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/EarlyInitializable.java",
                "@@ -0,0 +1,22 @@",
                "+/*",
                "+ * Copyright 2002-2006,2009 The Apache Software Foundation.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package com.opensymphony.xwork2.inject;",
                "+",
                "+/**",
                "+ * A marking interface that will tell CI to initialise the bean when instating the whole objects' graph",
                "+ */",
                "+public interface EarlyInitializable extends Initializable {",
                "+}"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/inject/EarlyInitializable.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e4a3669061d952652e576054715cd10e19091840",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515502257,
            "hunks": 7,
            "message": "Moves wrapping factories into Scope",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "index 7673facbf..405eb3f1e 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "@@ -611,9 +611,3 @@ public final class ContainerBuilder {",
                "-        final Map<Key<?>, InternalFactory<?>> realFactories = new HashMap<>();",
                "-",
                "-        for (Map.Entry<Key<?>, InternalFactory<?>> entry : factories.entrySet()) {",
                "-            realFactories.put(entry.getKey(), InitializableFactory.wrapIfNeeded(entry.getValue()));",
                "-        }",
                "-",
                "-        final ContainerImpl container = new ContainerImpl(realFactories);",
                "+        final ContainerImpl container = new ContainerImpl(factories);",
                "@@ -623,3 +617,3 @@ public final class ContainerBuilder {",
                "                     for (InternalFactory<?> factory : singletonFactories) {",
                "-                        InitializableFactory.wrapIfNeeded(factory).create(context);",
                "+                        factory.create(context);",
                "                     }",
                "@@ -632,6 +626,6 @@ public final class ContainerBuilder {",
                "             public Void call(InternalContext context) {",
                "-            for (InternalFactory<?> factory : earlyInitializableFactories) {",
                "-                InitializableFactory.wrapIfNeeded(factory).create(context);",
                "-            }",
                "-            return null;",
                "+                for (InternalFactory<?> factory : earlyInitializableFactories) {",
                "+                    factory.create(context);",
                "+                }",
                "+                return null;",
                "             }",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/InitializableFactory.java b/core/src/main/java/com/opensymphony/xwork2/inject/InitializableFactory.java",
                "index 0994ace88..9859937bd 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/InitializableFactory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/InitializableFactory.java",
                "@@ -33,3 +33,3 @@ class InitializableFactory<T> implements InternalFactory<T> {",
                "-    public static InternalFactory<?> wrapIfNeeded(InternalFactory<?> internalFactory) {",
                "+    public static <T> InternalFactory<T> wrapIfNeeded(InternalFactory<T> internalFactory) {",
                "         if (Initializable.class.isAssignableFrom(internalFactory.type())) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java b/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java",
                "index 6b8048a9f..5248c006a 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java",
                "@@ -51,3 +51,3 @@ public enum Scope {",
                "                         if (instance == null) {",
                "-                            instance = factory.create(context);",
                "+                            instance = InitializableFactory.wrapIfNeeded(factory).create(context);",
                "                         }",
                "@@ -90,3 +90,3 @@ public enum Scope {",
                "                     if (t == null) {",
                "-                        t = factory.create(context);",
                "+                        t = InitializableFactory.wrapIfNeeded(factory).create(context);",
                "                         threadLocal.set(t);",
                "@@ -203,3 +203,3 @@ public enum Scope {",
                "             public T call() throws Exception {",
                "-                return factory.create(context);",
                "+                return InitializableFactory.wrapIfNeeded(factory).create(context);",
                "             }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "core/src/main/java/com/opensymphony/xwork2/inject/InitializableFactory.java",
                "core/src/main/java/com/opensymphony/xwork2/inject/Scope.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "46462b3d00f5fb5843ca9a748ea214934ffcd4b5",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517212277,
            "hunks": 2,
            "message": "Rephrases JavaDoc to better express function's meaning",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "index 567c9fd79..1273b5036 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "@@ -156,4 +156,4 @@ public class AnnotationUtils {",
                "     /**",
                "-     * Returns the annotation on the given class or the package of the class. This searches up the",
                "-     * class hierarchy and the package hierarchy for the closest match.",
                "+     * Returns a list of the annotation on the given class or the package of the class.",
                "+     * This searches up the class hierarchy and the package hierarchy.",
                "      *",
                "@@ -162,3 +162,3 @@ public class AnnotationUtils {",
                "      * @param annotationClass The Class of the annotation.",
                "-     * @return The annotation or null.",
                "+     * @return List of the annotations or an empty list.",
                "      */"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b8c06608cc0f49c5765adaa5aea220d9edec5dc4",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508659792,
            "hunks": 2,
            "message": "Uses new docs location when preparing packages",
            "diff": [
                "diff --git a/assembly/src/main/assembly/all.xml b/assembly/src/main/assembly/all.xml",
                "index ab63068c9..4566fe2a1 100644",
                "--- a/assembly/src/main/assembly/all.xml",
                "+++ b/assembly/src/main/assembly/all.xml",
                "@@ -107,3 +107,3 @@",
                "       <fileSet>",
                "-        <directory>target/cwiki</directory>",
                "+        <directory>target/docs</directory>",
                "         <outputDirectory>docs/docs</outputDirectory>",
                "diff --git a/assembly/src/main/assembly/docs.xml b/assembly/src/main/assembly/docs.xml",
                "index 9d0ad03c2..d16b36366 100644",
                "--- a/assembly/src/main/assembly/docs.xml",
                "+++ b/assembly/src/main/assembly/docs.xml",
                "@@ -48,3 +48,3 @@",
                "         <fileSet>",
                "-            <directory>target/cwiki</directory>",
                "+            <directory>target/docs</directory>",
                "             <outputDirectory>docs/docs</outputDirectory>"
            ],
            "changed_files": [
                "assembly/src/main/assembly/all.xml",
                "assembly/src/main/assembly/docs.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "72058bf4c6dc7491aee48a519c0e0eb5961b10a5",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1517213043,
            "hunks": 2,
            "message": "Reverts findAnnotation to its previous state",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "index 1273b5036..c08841c63 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java",
                "@@ -142,3 +142,3 @@ public class AnnotationUtils {",
                "         T ann = clazz.getAnnotation(annotationClass);",
                "-        if (ann == null && clazz != Object.class) {",
                "+        while (ann == null && clazz != null) {",
                "             ann = clazz.getAnnotation(annotationClass);",
                "@@ -147,4 +147,7 @@ public class AnnotationUtils {",
                "             }",
                "-            if (ann == null && clazz != Object.class) {",
                "-                ann = findAnnotation(clazz.getSuperclass(), annotationClass);",
                "+            if (ann == null) {",
                "+                clazz = clazz.getSuperclass();",
                "+                if (clazz != null) {",
                "+                    ann = clazz.getAnnotation(annotationClass);",
                "+                }",
                "             }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/util/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "2bb122e4bba677042d0e4a41df853f321675e54b",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508658743,
            "hunks": 1,
            "message": "Excludes fonts",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 96f722b00..ac2a8377f 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -250,2 +250,3 @@",
                "                             <exclude>src/main/resources/docs.cfg</exclude>",
                "+                            <exclude>src/main/webapp/fonts/**/*</exclude>",
                "                         </excludes>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "bea5537e9e513040b89980878ac9487032c7a48e",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511858181,
            "hunks": 1,
            "message": "Fixes issue with accessing the Central relates to https://github.com/jeremylong/DependencyCheck/issues/978",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 49c432a92..672b126da 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -313,3 +313,3 @@",
                "                     <artifactId>dependency-check-maven</artifactId>",
                "-                    <version>3.0.1</version>",
                "+                    <version>3.0.2</version>",
                "                     <configuration>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b91d3caa47607b9069db134f3977283428d5f530",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510305445,
            "hunks": 1,
            "message": "Adds schema to have a proper URL",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 64a7095b0..124c73f8a 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -63,3 +63,3 @@",
                "         <system>Jenkins</system>",
                "-        <url>builds.apache.org/view/S-Z/view/Struts/</url>",
                "+        <url>https://builds.apache.org/view/S-Z/view/Struts/</url>",
                "         <notifiers>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "afe897a108f498566bbe3b2110e3e80d0bd58b79",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508955550,
            "hunks": 3,
            "message": "Deprecates the old extension point and defines a new one",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/StrutsConstants.java b/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "index 970f52b0b..6ee09ffb6 100644",
                "--- a/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "+++ b/core/src/main/java/org/apache/struts2/StrutsConstants.java",
                "@@ -204,3 +204,7 @@ public final class StrutsConstants {",
                "-    /** XWork default text provider */",
                "+    /**",
                "+     * XWork default text provider",
                "+     * @deprecated use {@link #STRUTS_TEXT_PROVIDER} instead",
                "+     */",
                "+    @Deprecated",
                "     public static final String STRUTS_XWORKTEXTPROVIDER = \"struts.xworkTextProvider\";",
                "@@ -321,4 +325,4 @@ public final class StrutsConstants {",
                "+    public static final String STRUTS_TEXT_PROVIDER = \"struts.textProvider\";",
                "     public static final String STRUTS_TEXT_PROVIDER_FACTORY = \"struts.textProviderFactory\";",
                "-",
                "     public static final String STRUTS_LOCALIZED_TEXT_PROVIDER = \"struts.localizedTextProvider\";"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/StrutsConstants.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "49ef41c218ccef783c87cbd210bf232e67af90ec",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514882039,
            "hunks": 14,
            "message": "Drops unneeded JavaDoc formatting",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerImpl.java b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerImpl.java",
                "index 43db07f04..9505c64ef 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerImpl.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerImpl.java",
                "@@ -1,5 +1,4 @@",
                "-/**",
                "+/*",
                "  * Copyright (C) 2006 Google Inc.",
                "  *",
                "- * <p>",
                "  * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "@@ -7,3 +6,2 @@",
                "  * You may obtain a copy of the License at",
                "- * </p>",
                "  *",
                "@@ -11,3 +9,2 @@",
                "  *",
                "- * <p>",
                "  * Unless required by applicable law or agreed to in writing, software",
                "@@ -17,5 +14,3 @@",
                "  * limitations under the License.",
                "- * </p>",
                "  */",
                "-",
                " package com.opensymphony.xwork2.inject;",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/Factory.java b/core/src/main/java/com/opensymphony/xwork2/inject/Factory.java",
                "index cd709c8b0..8287af65e 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/Factory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/Factory.java",
                "@@ -1,4 +1,4 @@",
                "-/**",
                "+/*",
                "  * Copyright (C) 2006 Google Inc.",
                "- * <p>",
                "+ *",
                "  * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "@@ -6,5 +6,5 @@",
                "  * You may obtain a copy of the License at",
                "- * <p>",
                "- * http://www.apache.org/licenses/LICENSE-2.0",
                "- * <p>",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "  * Unless required by applicable law or agreed to in writing, software",
                "@@ -15,3 +15,2 @@",
                "  */",
                "-",
                " package com.opensymphony.xwork2.inject;",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/InternalFactory.java b/core/src/main/java/com/opensymphony/xwork2/inject/InternalFactory.java",
                "index cc0988a9a..4e61d255d 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/InternalFactory.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/InternalFactory.java",
                "@@ -1,4 +1,4 @@",
                "-/**",
                "+/*",
                "  * Copyright (C) 2006 Google Inc.",
                "- * <p>",
                "+ *",
                "  * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "@@ -6,5 +6,5 @@",
                "  * You may obtain a copy of the License at",
                "- * <p>",
                "- * http://www.apache.org/licenses/LICENSE-2.0",
                "- * <p>",
                "+ *",
                "+ *  http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "  * Unless required by applicable law or agreed to in writing, software",
                "@@ -15,3 +15,2 @@",
                "  */",
                "-",
                " package com.opensymphony.xwork2.inject;"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/inject/ContainerImpl.java",
                "core/src/main/java/com/opensymphony/xwork2/inject/Factory.java",
                "core/src/main/java/com/opensymphony/xwork2/inject/InternalFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "87967b9f84100b86f492870ee3205486802f5ab2",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510750460,
            "hunks": 5,
            "message": "changed Map iteration to use entrySet",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java b/core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java",
                "index c7942fb1c..3223f47bb 100644",
                "--- a/core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java",
                "+++ b/core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java",
                "@@ -28,3 +28,5 @@ import org.apache.struts2.dispatcher.HttpParameters;",
                " import java.util.HashMap;",
                "+import java.util.HashSet;",
                " import java.util.Map;",
                "+import java.util.Set;",
                "@@ -62,3 +64,5 @@ public class CheckboxInterceptor extends AbstractInterceptor {",
                "-        for (String name : parameters.keySet()) {",
                "+        Set<String> checkboxParameters = new HashSet<>();",
                "+        for (Map.Entry<String, Parameter> parameter : parameters.entrySet()) {",
                "+            String name = parameter.getKey();",
                "             if (name.startsWith(\"__checkbox_\")) {",
                "@@ -66,4 +70,4 @@ public class CheckboxInterceptor extends AbstractInterceptor {",
                "-                Parameter value = parameters.get(name);",
                "-                parameters = parameters.remove(name);",
                "+                Parameter value = parameter.getValue();",
                "+\t\tcheckboxParameters.add(name);",
                "                 if (value.isMultiple()) {",
                "@@ -80,3 +84,3 @@ public class CheckboxInterceptor extends AbstractInterceptor {",
                "         }",
                "-",
                "+\tparameters.remove(checkboxParameters);"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "90784224962b0768a5a6911f4ace0e404d3e689d",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1513410611,
            "hunks": 1,
            "message": "Adds cache to speed up build on Travis",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index adda7a1c3..b7fc7f118 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -16 +16,5 @@ env:",
                "     secure: DusDFL9cuX+mj64tXQfrYVbUVYnxlXmad4nuIMj0/lgDbwJ6kxYasJmR99bdvwu08gS9D5b7a+m7WJTN0FNATzEiiGDXcM+TiDPlYDh7dcalU4QGiLmMuCCEw1r7hp2XE4BWVgDfFhCsHhStgjE4RXzHIyPowoPXr4ugPf8at6w=",
                "+",
                "+cache:",
                "+  directories:",
                "+  - $HOME/.m2",
                "\\ No newline at end of file"
            ],
            "changed_files": [
                ".travis.yml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d267180735ba0c9b60ff4717eb6b8d0855d3ca7d",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508655056,
            "hunks": 1,
            "message": "Puts back JavaDoc reference",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/views/jsp/ui/AnchorTag.java b/core/src/main/java/org/apache/struts2/views/jsp/ui/AnchorTag.java",
                "index 55672a9e3..956f63ad3 100644",
                "--- a/core/src/main/java/org/apache/struts2/views/jsp/ui/AnchorTag.java",
                "+++ b/core/src/main/java/org/apache/struts2/views/jsp/ui/AnchorTag.java",
                "@@ -28,2 +28,5 @@ import javax.servlet.http.HttpServletResponse;",
                "+/**",
                "+ * @see Anchor",
                "+ */",
                " public class AnchorTag extends AbstractClosingTag {"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/views/jsp/ui/AnchorTag.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1ef53a2c512e94fbe11595b02be339825bec1f13",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508680035,
            "hunks": 2,
            "message": "Drops unused entries",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index c75226e4d..d1acf4086 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -74,9 +74,2 @@",
                "-    <distributionManagement>",
                "-        <site>",
                "-            <id>apache-site</id>",
                "-            <url>scm:svn:https://svn.apache.org/repos/infra/websites/production/struts/content/release/2.3.x/</url>",
                "-        </site>",
                "-    </distributionManagement>",
                "-",
                "     <modules>",
                "@@ -106,3 +99,2 @@",
                "-        <currentVersion>${project.version}</currentVersion>",
                "         <struts2.springPlatformVersion>4.1.9.RELEASE</struts2.springPlatformVersion>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4152cbc71cf787fb1711e7832ecaf6bafe756dba",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514817973,
            "hunks": 7,
            "message": "Uses factory's type to detect Initilizable interfaces",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "index 4fbae8ee2..e62d01314 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "@@ -59,2 +59,7 @@ public final class ContainerBuilder {",
                "                 }",
                "+",
                "+                @Override",
                "+                public Class<? extends Container> type() {",
                "+                    return Container.class;",
                "+                }",
                "             };",
                "@@ -68,2 +73,7 @@ public final class ContainerBuilder {",
                "                 }",
                "+",
                "+                @Override",
                "+                public Class<? extends Logger> type() {",
                "+                    return Logger.class;",
                "+                }",
                "             };",
                "@@ -94,3 +104,3 @@ public final class ContainerBuilder {",
                "         }",
                "-        if (Initializable.class.isAssignableFrom(key.getType())) {",
                "+        if (Initializable.class.isAssignableFrom(factory.type())) {",
                "             initializableFactories.add(createCallableFactory(key, scopedFactory));",
                "@@ -110,2 +120,7 @@ public final class ContainerBuilder {",
                "             }",
                "+",
                "+            @Override",
                "+            public Class<? extends T> type() {",
                "+                return scopedFactory.type();",
                "+            }",
                "         };",
                "@@ -147,2 +162,7 @@ public final class ContainerBuilder {",
                "+            @Override",
                "+            public Class<? extends T> type() {",
                "+                return factory.type();",
                "+            }",
                "+",
                "             @Override",
                "@@ -233,2 +253,7 @@ public final class ContainerBuilder {",
                "+            @Override",
                "+            public Class<? extends T> type() {",
                "+                return implementation;",
                "+            }",
                "+",
                "             @Override",
                "@@ -517,2 +542,7 @@ public final class ContainerBuilder {",
                "+            @Override",
                "+            public Class<? extends T> type() {",
                "+                return (Class<? extends T>) value.getClass();",
                "+            }",
                "+",
                "             @Override"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "76d0bc5ff440d50933d142c38e71d958b1547ca3",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511794055,
            "hunks": 1,
            "message": "Adds support to generate a report with outdated dependencies",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 581bf397d..48691f77b 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -439,2 +439,16 @@",
                "             </plugin>",
                "+            <plugin>",
                "+                <groupId>org.codehaus.mojo</groupId>",
                "+                <artifactId>versions-maven-plugin</artifactId>",
                "+                <version>2.5</version>",
                "+                <reportSets>",
                "+                    <reportSet>",
                "+                        <reports>",
                "+                            <report>dependency-updates-report</report>",
                "+                            <report>plugin-updates-report</report>",
                "+                            <report>property-updates-report</report>",
                "+                        </reports>",
                "+                    </reportSet>",
                "+                </reportSets>",
                "+            </plugin>",
                "         </plugins>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a512f98eaafa95c6418363f4c00edc05a96b8dfa",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510178891,
            "hunks": 1,
            "message": "reverted accidental change",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/views/jsp/PropertyTag.java b/core/src/main/java/org/apache/struts2/views/jsp/PropertyTag.java",
                "index 85fed48c9..12abe6bbb 100644",
                "--- a/core/src/main/java/org/apache/struts2/views/jsp/PropertyTag.java",
                "+++ b/core/src/main/java/org/apache/struts2/views/jsp/PropertyTag.java",
                "@@ -37,3 +37,3 @@ public class PropertyTag extends ComponentTagSupport {",
                "     private String value;",
                "-    private boolean escapeHtml = false;",
                "+    private boolean escapeHtml = true;",
                "     private boolean escapeJavaScript = false;"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/views/jsp/PropertyTag.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "08945013b250116fcde9cc594ba828e46f6cb273",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508663061,
            "hunks": 1,
            "message": "Excludes additional text files",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index ac2a8377f..84f2af763 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -247,2 +247,4 @@",
                "                             <exclude>src/main/resources/**/sitegraph-usage.txt</exclude>",
                "+                            <exclude>src/main/resources/**/docs-urls.txt</exclude>",
                "+                            <exclude>src/etc/header.txt</exclude>",
                "                             <exclude>src/main/resources/static/css/**/*.css</exclude>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "eabf4eda21b0c415c183eda5a0ee99e32cb64727",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1514798103,
            "hunks": 1,
            "message": "Verifies licenses before building a package",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 672b126da..644bf0d21 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -388,3 +388,3 @@",
                "                     <execution>",
                "-                        <phase>verify</phase>",
                "+                        <phase>prepare-package</phase>",
                "                         <goals>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "80045fcdf37ea277991a6fd5433d176d8bbe3edd",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508568238,
            "hunks": 2,
            "message": "Tries fix tests when running on JDK9",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 2eb242fce..11e723197 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -166,2 +166,21 @@",
                "         </profile>",
                "+        <profile>",
                "+            <id>jdk9</id>",
                "+            <activation>",
                "+                <jdk>9</jdk>",
                "+            </activation>",
                "+            <build>",
                "+                <pluginManagement>",
                "+                    <plugins>",
                "+                        <plugin>",
                "+                            <groupId>org.apache.maven.plugins</groupId>",
                "+                            <artifactId>maven-surefire-plugin</artifactId>",
                "+                            <configuration>",
                "+                                <argLine>--add-modules java.activation --add-modules java.xml.bind</argLine>",
                "+                            </configuration>",
                "+                        </plugin>",
                "+                    </plugins>",
                "+                </pluginManagement>",
                "+            </build>",
                "+        </profile>",
                "     </profiles>",
                "@@ -179,3 +198,3 @@",
                "                     <artifactId>maven-surefire-plugin</artifactId>",
                "-                    <version>2.19.1</version>",
                "+                    <version>2.20.1</version>",
                "                     <configuration>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "2f7dda7ed6e5bf34739ecaaea8bc8bfadd199be3",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1490349755,
            "hunks": 1,
            "message": "Uses OGNL without #context magical key",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index d1acf4086..7d931a8f4 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -100,3 +100,3 @@",
                "         <struts2.springPlatformVersion>4.1.9.RELEASE</struts2.springPlatformVersion>",
                "-        <ognl.version>3.1.15</ognl.version>",
                "+        <ognl.version>3.2.3</ognl.version>",
                "         <asm.version>5.2</asm.version>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "00b5f43c8a6ab3eccdac58e00d579a29403ac7d8",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510750695,
            "hunks": 3,
            "message": "changed tabs into spaces",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java b/core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java",
                "index 3223f47bb..91321e533 100644",
                "--- a/core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java",
                "+++ b/core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java",
                "@@ -71,5 +71,5 @@ public class CheckboxInterceptor extends AbstractInterceptor {",
                "                 Parameter value = parameter.getValue();",
                "-\t\tcheckboxParameters.add(name);",
                "+                checkboxParameters.add(name);",
                "                 if (value.isMultiple()) {",
                "-              \t    LOG.debug(\"Bypassing automatic checkbox detection due to multiple checkboxes of the same name: {}\", name);",
                "+                    LOG.debug(\"Bypassing automatic checkbox detection due to multiple checkboxes of the same name: {}\", name);",
                "                     continue;",
                "@@ -84,3 +84,3 @@ public class CheckboxInterceptor extends AbstractInterceptor {",
                "         }",
                "-\tparameters.remove(checkboxParameters);",
                "+        parameters.remove(checkboxParameters);"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/interceptor/CheckboxInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "38450c9a707c00c8c3150b5c4619d7dabe1eca59",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515485098,
            "hunks": 1,
            "message": "improve tests for lazy and early initialization",
            "diff": [
                "diff --git a/core/pom.xml b/core/pom.xml",
                "index 0c97b0958..66519f0b2 100644",
                "--- a/core/pom.xml",
                "+++ b/core/pom.xml",
                "@@ -67,3 +67,2 @@",
                "                         <exclude>**/AnnotatedTestBean.java</exclude>",
                "-                        <exclude>**/ContainerImplTest.java</exclude>",
                "                         <exclude>**/DefaultFileManagerTest.java</exclude>"
            ],
            "changed_files": [
                "core/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ad98881dd55bd1432a5ca471768061458a247cc2",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511793502,
            "hunks": 2,
            "message": "Adds support for UpdateImpact",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index d6eacdc9e..adda7a1c3 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -11,2 +11,6 @@ script: mvn test -DskipAssembly",
                " after_success:",
                "-  - mvn clean cobertura:cobertura org.eluder.coveralls:coveralls-maven-plugin:report -Ptravis-coveralls -DskipAssembly",
                "+  - mvn clean cobertura:cobertura org.eluder.coveralls:coveralls-maven-plugin:report com.updateimpact:updateimpact-maven-plugin:submit -Ptravis-coveralls,update-impact -DskipAssembly",
                "+",
                "+env:",
                "+  global:",
                "+    secure: DusDFL9cuX+mj64tXQfrYVbUVYnxlXmad4nuIMj0/lgDbwJ6kxYasJmR99bdvwu08gS9D5b7a+m7WJTN0FNATzEiiGDXcM+TiDPlYDh7dcalU4QGiLmMuCCEw1r7hp2XE4BWVgDfFhCsHhStgjE4RXzHIyPowoPXr4ugPf8at6w=",
                "diff --git a/pom.xml b/pom.xml",
                "index ab3f55370..581bf397d 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -209,2 +209,14 @@",
                "         </profile>",
                "+        <profile>",
                "+            <id>update-impact</id>",
                "+            <build>",
                "+                <plugins>",
                "+                    <plugin>",
                "+                        <groupId>com.updateimpact</groupId>",
                "+                        <artifactId>updateimpact-maven-plugin</artifactId>",
                "+                        <version>1.0.10</version>",
                "+                    </plugin>",
                "+                </plugins>",
                "+            </build>",
                "+        </profile>",
                "     </profiles>"
            ],
            "changed_files": [
                ".travis.yml",
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "75d7bf481cb032641a0b602aa4032dc788f86132",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511950968,
            "hunks": 1,
            "message": "Uses Java 6 in the pom",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 3de13c5d9..ccce626f5 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -168,4 +168,4 @@",
                "                     <configuration>",
                "-                        <source>1.5</source>",
                "-                        <target>1.5</target>",
                "+                        <source>1.6</source>",
                "+                        <target>1.6</target>",
                "                     </configuration>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_3_35",
                "STRUTS_2_3_36",
                "STRUTS_2_3_37"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "de6adde37e9144e914c45d2ed9187ff54673f850",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1508658664,
            "hunks": 2,
            "message": "Uses <target/> instead of <tasks/> to avoid warnings",
            "diff": [
                "diff --git a/apps/pom.xml b/apps/pom.xml",
                "index e7e0fa6e8..9d6e4ff75 100644",
                "--- a/apps/pom.xml",
                "+++ b/apps/pom.xml",
                "@@ -53,3 +53,3 @@",
                "                         <configuration>",
                "-                            <tasks>",
                "+                            <target>",
                "                                 <copy todir=\"${project.build.directory}/${project.artifactId}/WEB-INF/src/java\" failonerror=\"false\">",
                "@@ -60,3 +60,3 @@",
                "                                 </copy>",
                "-                            </tasks>",
                "+                            </target>",
                "                         </configuration>"
            ],
            "changed_files": [
                "apps/pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "0713da431c4d498c2243bd1e0bd4977907b16b50",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515014154,
            "hunks": 6,
            "message": "add missing @Override annotations",
            "diff": [
                "diff --git a/core/src/main/java/org/apache/struts2/components/Anchor.java b/core/src/main/java/org/apache/struts2/components/Anchor.java",
                "index 5eeb3c860..ef874ee40 100644",
                "--- a/core/src/main/java/org/apache/struts2/components/Anchor.java",
                "+++ b/core/src/main/java/org/apache/struts2/components/Anchor.java",
                "@@ -82,2 +82,3 @@ public class Anchor extends ClosingUIBean {",
                "+    @Override",
                "     public String getDefaultOpenTemplate() {",
                "@@ -86,2 +87,3 @@ public class Anchor extends ClosingUIBean {",
                "+    @Override",
                "     protected String getDefaultTemplate() {",
                "@@ -90,2 +92,3 @@ public class Anchor extends ClosingUIBean {",
                "+    @Override",
                "     public boolean usesBody() {",
                "@@ -137,2 +140,3 @@ public class Anchor extends ClosingUIBean {",
                "      */",
                "+    @Override",
                "     public boolean end(Writer writer, String body) {",
                "@@ -153,3 +157,3 @@ public class Anchor extends ClosingUIBean {",
                "-",
                "+    @Override",
                "     public void addParameter(String key, Object value) {",
                "@@ -198,2 +202,3 @@ public class Anchor extends ClosingUIBean {",
                "+    @Override",
                "     @StrutsTagAttribute(description = \"The target value to use, if not using action\")"
            ],
            "changed_files": [
                "core/src/main/java/org/apache/struts2/components/Anchor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5e237e0fd3280dbb272ae3d3af627a7439d0809d",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1515521374,
            "hunks": 2,
            "message": "fix and add test for lazy and early initialization of prototypes",
            "diff": [
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "index 405eb3f1e..77c21cee1 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "@@ -610,5 +610,3 @@ public final class ContainerBuilder {",
                "         created = true;",
                "-",
                "-        final ContainerImpl container = new ContainerImpl(factories);",
                "-",
                "+        final ContainerImpl container = new ContainerImpl(new HashMap<>(factories));",
                "         if (loadSingletons) {",
                "diff --git a/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java b/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java",
                "index 5248c006a..86592bbe1 100644",
                "--- a/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java",
                "+++ b/core/src/main/java/com/opensymphony/xwork2/inject/Scope.java",
                "@@ -35,3 +35,3 @@ public enum Scope {",
                "                                                       InternalFactory<? extends T> factory) {",
                "-            return factory;",
                "+            return InitializableFactory.wrapIfNeeded(factory);",
                "         }"
            ],
            "changed_files": [
                "core/src/main/java/com/opensymphony/xwork2/inject/ContainerBuilder.java",
                "core/src/main/java/com/opensymphony/xwork2/inject/Scope.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7c4f30f619e00e1acf107e5ec2064a8990f4edfd",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510391454,
            "hunks": 1,
            "message": "Drops unneeded property",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 70552f85a..ab3f55370 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -205,5 +205,2 @@",
                "                         <version>4.3.0</version>",
                "-                        <configuration>",
                "-                            <repoToken>${env.coveralls_repo_token}</repoToken>",
                "-                        </configuration>",
                "                     </plugin>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "0207c09b1177dea99bb6be2ef3df7be94926e9fd",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1511774894,
            "hunks": 1,
            "message": "Adds missing license header",
            "diff": [
                "diff --git a/src/etc/project-suppression.xml b/src/etc/project-suppression.xml",
                "index 2c2ac0b39..2ef62e209 100644",
                "--- a/src/etc/project-suppression.xml",
                "+++ b/src/etc/project-suppression.xml",
                "@@ -1,2 +1,20 @@",
                " <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                "+<!--",
                "+  Licensed to the Apache Software Foundation (ASF) under one",
                "+  or more contributor license agreements.  See the NOTICE file",
                "+  distributed with this work for additional information",
                "+  regarding copyright ownership.  The ASF licenses this file",
                "+  to you under the Apache License, Version 2.0 (the",
                "+  \"License\"); you may not use this file except in compliance",
                "+  with the License.  You may obtain a copy of the License at",
                "+",
                "+   http://www.apache.org/licenses/LICENSE-2.0",
                "+",
                "+  Unless required by applicable law or agreed to in writing,",
                "+  software distributed under the License is distributed on an",
                "+  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
                "+  KIND, either express or implied.  See the License for the",
                "+  specific language governing permissions and limitations",
                "+  under the License.",
                "+-->",
                " <suppressions xmlns=\"https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.1.xsd\">"
            ],
            "changed_files": [
                "src/etc/project-suppression.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "47a4a57d2d7fc4d5ab1765f6bd31bf1b0f0d583c",
            "repository": "https://github.com/apache/struts",
            "timestamp": 1510305679,
            "hunks": 1,
            "message": "Adds proper url to Sonar host",
            "diff": [
                "diff --git a/pom.xml b/pom.xml",
                "index 124c73f8a..50fbf2735 100644",
                "--- a/pom.xml",
                "+++ b/pom.xml",
                "@@ -108,2 +108,5 @@",
                "         <fluido-skin.version>1.6</fluido-skin.version>",
                "+",
                "+        <!-- Sonar -->",
                "+        <sonar.host.url>https://builds.apache.org/analysis/</sonar.host.url>",
                "     </properties>"
            ],
            "changed_files": [
                "pom.xml"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "STRUTS_2_5_14",
                "STRUTS_2_5_14_1",
                "STRUTS_2_5_15",
                "STRUTS_2_5_16",
                "STRUTS_2_5_17",
                "STRUTS_2_5_18",
                "STRUTS_2_5_19",
                "STRUTS_2_5_20",
                "STRUTS_2_5_21",
                "STRUTS_2_5_22",
                "STRUTS_2_5_23",
                "STRUTS_2_5_24",
                "STRUTS_2_5_25",
                "STRUTS_2_5_26",
                "STRUTS_2_5_27",
                "STRUTS_2_5_28",
                "STRUTS_2_5_28_1",
                "STRUTS_2_5_28_2",
                "STRUTS_2_5_28_3",
                "STRUTS_2_5_29",
                "STRUTS_2_5_30",
                "STRUTS_2_5_31",
                "STRUTS_2_5_32",
                "STRUTS_2_5_33",
                "STRUTS_6_0_0",
                "STRUTS_6_0_0_RC1",
                "STRUTS_6_0_0_RC2",
                "STRUTS_6_0_0_RC3",
                "STRUTS_6_0_0_RC4",
                "STRUTS_6_0_1",
                "STRUTS_6_0_2",
                "STRUTS_6_0_3",
                "STRUTS_6_1_0",
                "STRUTS_6_1_1",
                "STRUTS_6_1_2",
                "STRUTS_6_1_2_1",
                "STRUTS_6_1_2_2",
                "STRUTS_6_2_0",
                "STRUTS_6_3_0",
                "STRUTS_6_3_0_1",
                "STRUTS_6_3_0_2",
                "STRUTS_6_3_0_RC1",
                "STRUTS_6_4_0",
                "STRUTS_7_0_0_M1",
                "STRUTS_7_0_0_M2",
                "STRUTS_7_0_0_M3",
                "STRUTS_7_0_0_M4",
                "STRUTS_7_0_0_M5",
                "STRUTS_7_0_0_M6",
                "STRUTS_7_0_0_M7"
            ],
            "matched_rules": []
        }
    ]
}
