{
    "advisory_record": {
        "cve_id": "CVE-2018-16984",
        "description": "An issue was discovered in Django 2.1 before 2.1.2, in which unprivileged users can read the password hashes of arbitrary accounts. The read-only password widget used by the Django Admin to display an obfuscated password hash was bypassed if a user has only the \"view\" permission (new in Django 2.1), resulting in display of the entire password hash to those users. This may result in a vulnerability for sites with legacy user accounts using insecure hashes.",
        "reserved_timestamp": 1536796800,
        "published_timestamp": 1538503200,
        "updated_timestamp": 1556787966,
        "repository_url": null,
        "references": {
            "https://www.djangoproject.com/weblog/2018/oct/01/security-release/": 7,
            "": 6,
            "http://www.securitytracker.com/id/1041749": 2,
            "https://security.netapp.com/advisory/ntap-20190502-0009/": 2,
            "commit::bf39978a53f117ca02e9a0c78b76664a41a54745": 2,
            "commit::c4bd5b597e0aa2432e4c867b86650f18af117851": 2,
            "https://security.netapp.com/en": 2,
            "https://www.netapp.com/": 1,
            "https://mysupport.netapp.com": 1,
            "https://community.netapp.com": 1,
            "https://www.netapp.com/company/contact-us/": 1,
            "https://security.netapp.com": 1,
            "https://security.netapp.com/advisory/": 1,
            "https://security.netapp.com/bulletins/": 1,
            "https://security.netapp.com/contact/": 1,
            "https://security.netapp.com/policy/": 1,
            "https://security.netapp.com/resources/": 1,
            "https://security.netapp.com/certs/": 1,
            "https://security.netapp.com/advisory": 1,
            "https://security.netapp.com/advisory/ntap-20190502-0009": 1,
            "https://www.netapp.com/company/legal/privacy-policy/": 1,
            "https://nvd.nist.gov/vuln/detail/CVE-2018-16984": 1,
            "https://mysupport.netapp.com/info/communications/ECMLP2397079.html": 1,
            "https://mysupport.netapp.com/site/downloads/": 1,
            "http://mysupport.netapp.com": 1,
            "https://security.netapp.com/advisory/NTAP-20190502-0009": 1,
            "https://www.netapp.com/forms/site-feedback/": 1
        },
        "affected_products": [
            "Admin",
            "Django",
            "n/a"
        ],
        "versions": {
            "status": "affected",
            "version": "n/a"
        },
        "files": [
            "read-only"
        ],
        "keywords": [
            "discover",
            "legacy",
            "issue",
            "result",
            "have",
            "insecure",
            "obfuscate",
            "hash",
            "view",
            "permission",
            "admin",
            "account",
            "vulnerability",
            "password",
            "django",
            "user",
            "widget",
            "display",
            "read",
            "bypass",
            "site"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "c4bd5b597e0aa2432e4c867b86650f18af117851",
            "repository": "https://github.com/django/django",
            "timestamp": 1536844121,
            "hunks": 6,
            "message": "Fixed CVE-2018-16984 -- Fixed password hash disclosure to admin \"view only\" users. Thanks Claude Paroz & Tim Graham for collaborating on the patch. # Conflicts: #\ttests/auth_tests/test_views.py",
            "diff": [
                "diff --git a/django/contrib/admin/helpers.py b/django/contrib/admin/helpers.py",
                "index a5b03e3b5d..3c6092d9f6 100644",
                "--- a/django/contrib/admin/helpers.py",
                "+++ b/django/contrib/admin/helpers.py",
                "@@ -204,2 +204,8 @@ class AdminReadonlyField:",
                "         else:",
                "+            if field in self.form.fields:",
                "+                widget = self.form[field].field.widget",
                "+                # This isn't elegant but suffices for contrib.auth's",
                "+                # ReadOnlyPasswordHashWidget.",
                "+                if getattr(widget, 'read_only', False):",
                "+                    return widget.render(field, value)",
                "             if f is None:",
                "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py",
                "index dda6a07f02..472d2c5c8e 100644",
                "--- a/django/contrib/auth/forms.py",
                "+++ b/django/contrib/auth/forms.py",
                "@@ -24,2 +24,3 @@ class ReadOnlyPasswordHashWidget(forms.Widget):",
                "     template_name = 'auth/widgets/read_only_password_hash.html'",
                "+    read_only = True",
                "diff --git a/tests/auth_tests/test_views.py b/tests/auth_tests/test_views.py",
                "index c7d64d5d48..60b90cef0a 100644",
                "--- a/tests/auth_tests/test_views.py",
                "+++ b/tests/auth_tests/test_views.py",
                "@@ -16,3 +16,3 @@ from django.contrib.auth.forms import (",
                " )",
                "-from django.contrib.auth.models import User",
                "+from django.contrib.auth.models import Permission, User",
                " from django.contrib.auth.views import (",
                "@@ -21,2 +21,3 @@ from django.contrib.auth.views import (",
                " )",
                "+from django.contrib.contenttypes.models import ContentType",
                " from django.contrib.sessions.middleware import SessionMiddleware",
                "@@ -1117,2 +1118,7 @@ class LogoutTest(AuthViewsTestCase):",
                "+def get_perm(Model, perm):",
                "+    ct = ContentType.objects.get_for_model(Model)",
                "+    return Permission.objects.get(content_type=ct, codename=perm)",
                "+",
                "+",
                " # Redirect in test_user_change_password will fail if session auth hash",
                "@@ -1223,2 +1229,21 @@ class ChangelistTests(AuthViewsTestCase):",
                "+    def test_view_user_password_is_readonly(self):",
                "+        u = User.objects.get(username='testclient')",
                "+        u.is_superuser = False",
                "+        u.save()",
                "+        u.user_permissions.add(get_perm(User, 'view_user'))",
                "+        response = self.client.get(reverse('auth_test_admin:auth_user_change', args=(u.pk,)),)",
                "+        algo, salt, hash_string = (u.password.split('$'))",
                "+        self.assertContains(response, '<div class=\"readonly\">testclient</div>')",
                "+        # ReadOnlyPasswordHashWidget is used to render the field.",
                "+        self.assertContains(",
                "+            response,",
                "+            '<strong>algorithm</strong>: %s\\n\\n'",
                "+            '<strong>salt</strong>: %s**********\\n\\n'",
                "+            '<strong>hash</strong>: %s**************************\\n\\n' % (",
                "+                algo, salt[:2], hash_string[:6],",
                "+            ),",
                "+            html=True,",
                "+        )",
                "+"
            ],
            "changed_files": [
                "django/contrib/admin/helpers.py",
                "django/contrib/auth/forms.py",
                "tests/auth_tests/test_views.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [
                "CVE-2018-16984"
            ],
            "twins": [
                [
                    "no-tag",
                    "bf39978a53f117ca02e9a0c78b76664a41a54745"
                ]
            ],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "VULN_ID_IN_MESSAGE",
                    "message": "The commit message mentions the vulnerability ID",
                    "relevance": 64
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: user, hash, view, admin, password",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: view, admin",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "176d20b92a8d2427b68ebf6e6824ded665013d86",
            "repository": "https://github.com/django/django",
            "timestamp": 1538092321,
            "hunks": 3,
            "message": "[2.1.x] Fixed #29809 -- Fixed a crash when a \"view only\" user POSTs to the admin user change form. Backport of a7284cc0c3620030b43034cdf41216c0941bf411 from master",
            "diff": [
                "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py",
                "index 472d2c5c8e..0fa30d70c7 100644",
                "--- a/django/contrib/auth/forms.py",
                "+++ b/django/contrib/auth/forms.py",
                "@@ -152,3 +152,3 @@ class UserChangeForm(forms.ModelForm):",
                "         # field does not have access to the initial value",
                "-        return self.initial[\"password\"]",
                "+        return self.initial.get('password')",
                "diff --git a/tests/auth_tests/test_views.py b/tests/auth_tests/test_views.py",
                "index 60b90cef0a..f6a84d50a4 100644",
                "--- a/tests/auth_tests/test_views.py",
                "+++ b/tests/auth_tests/test_views.py",
                "@@ -1233,2 +1233,3 @@ class ChangelistTests(AuthViewsTestCase):",
                "         u.save()",
                "+        original_password = u.password",
                "         u.user_permissions.add(get_perm(User, 'view_user'))",
                "@@ -1247,2 +1248,10 @@ class ChangelistTests(AuthViewsTestCase):",
                "         )",
                "+        # Value in POST data is ignored.",
                "+        data = self.get_user_data(u)",
                "+        data['password'] = 'shouldnotchange'",
                "+        change_url = reverse('auth_test_admin:auth_user_change', args=(u.pk,))",
                "+        response = self.client.post(change_url, data)",
                "+        self.assertRedirects(response, reverse('auth_test_admin:auth_user_changelist'))",
                "+        u.refresh_from_db()",
                "+        self.assertEqual(u.password, original_password)"
            ],
            "changed_files": [
                "django/contrib/auth/forms.py",
                "tests/auth_tests/test_views.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29809": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: view, admin, user",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: view",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29809",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d4fc111c2467c6a9d9491807497e13b08b80dc5d",
            "repository": "https://github.com/django/django",
            "timestamp": 1538489932,
            "hunks": 2,
            "message": "Refs #27795 -- Removed force_bytes() usage in admindocs. Refs #12892 is probably obsolete.",
            "diff": [
                "diff --git a/django/contrib/admindocs/utils.py b/django/contrib/admindocs/utils.py",
                "index fa72d60d57..7347a42180 100644",
                "--- a/django/contrib/admindocs/utils.py",
                "+++ b/django/contrib/admindocs/utils.py",
                "@@ -7,3 +7,2 @@ from email.parser import HeaderParser",
                " from django.urls import reverse",
                "-from django.utils.encoding import force_bytes",
                " from django.utils.safestring import mark_safe",
                "@@ -79,3 +78,3 @@ def parse_rst(text, default_reference_context, thing_being_parsed=None):",
                "     }",
                "-    thing_being_parsed = thing_being_parsed and force_bytes('<%s>' % thing_being_parsed)",
                "+    thing_being_parsed = thing_being_parsed and '<%s>' % thing_being_parsed",
                "     # Wrap ``text`` in some reST that sets the default role to ``cmsreference``,"
            ],
            "changed_files": [
                "django/contrib/admindocs/utils.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27795": "",
                "12892": "Fixed #9107 -- Allowed URL parameters to set values of fields in admin inlines. #12882"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: admin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: admin",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27795, 12892",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a7284cc0c3620030b43034cdf41216c0941bf411",
            "repository": "https://github.com/django/django",
            "timestamp": 1538092321,
            "hunks": 3,
            "message": "Fixed #29809 -- Fixed a crash when a \"view only\" user POSTs to the admin user change form.",
            "diff": [
                "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py",
                "index 472d2c5c8e..0fa30d70c7 100644",
                "--- a/django/contrib/auth/forms.py",
                "+++ b/django/contrib/auth/forms.py",
                "@@ -152,3 +152,3 @@ class UserChangeForm(forms.ModelForm):",
                "         # field does not have access to the initial value",
                "-        return self.initial[\"password\"]",
                "+        return self.initial.get('password')",
                "diff --git a/tests/auth_tests/test_views.py b/tests/auth_tests/test_views.py",
                "index f29f5f0949..d12830ddc8 100644",
                "--- a/tests/auth_tests/test_views.py",
                "+++ b/tests/auth_tests/test_views.py",
                "@@ -1223,2 +1223,3 @@ class ChangelistTests(AuthViewsTestCase):",
                "         u.save()",
                "+        original_password = u.password",
                "         u.user_permissions.add(get_perm(User, 'view_user'))",
                "@@ -1237,2 +1238,10 @@ class ChangelistTests(AuthViewsTestCase):",
                "         )",
                "+        # Value in POST data is ignored.",
                "+        data = self.get_user_data(u)",
                "+        data['password'] = 'shouldnotchange'",
                "+        change_url = reverse('auth_test_admin:auth_user_change', args=(u.pk,))",
                "+        response = self.client.post(change_url, data)",
                "+        self.assertRedirects(response, reverse('auth_test_admin:auth_user_changelist'))",
                "+        u.refresh_from_db()",
                "+        self.assertEqual(u.password, original_password)"
            ],
            "changed_files": [
                "django/contrib/auth/forms.py",
                "tests/auth_tests/test_views.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29809": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: view, admin, user",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: view",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29809",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f3d3338e06d571a529bb2046428eeac8e56bcbf6",
            "repository": "https://github.com/django/django",
            "timestamp": 1539132600,
            "hunks": 1,
            "message": "Fixed #29829 -- Remove unused code in contrib.sites.models._simple_domain_name_validator().",
            "diff": [
                "diff --git a/django/contrib/sites/models.py b/django/contrib/sites/models.py",
                "index 19f52e4487..4e6d3df17a 100644",
                "--- a/django/contrib/sites/models.py",
                "+++ b/django/contrib/sites/models.py",
                "@@ -16,4 +16,2 @@ def _simple_domain_name_validator(value):",
                "     \"\"\"",
                "-    if not value:",
                "-        return",
                "     checks = ((s in value) for s in string.whitespace)"
            ],
            "changed_files": [
                "django/contrib/sites/models.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29829": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: site",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: site",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29829",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "70d0a1ca02f42c0f8984b6234ca0f9d7e354a135",
            "repository": "https://github.com/django/django",
            "timestamp": 1536842174,
            "hunks": 3,
            "message": "Fixed #29711 -- Added a system check for uniquness of admin actions' __name__.",
            "diff": [
                "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py",
                "index d129acb124..4007a781fb 100644",
                "--- a/django/contrib/admin/checks.py",
                "+++ b/django/contrib/admin/checks.py",
                "@@ -608,2 +608,3 @@ class ModelAdminChecks(BaseModelAdminChecks):",
                "             *self._check_action_permission_methods(admin_obj),",
                "+            *self._check_actions_uniqueness(admin_obj),",
                "         ]",
                "@@ -946,2 +947,14 @@ class ModelAdminChecks(BaseModelAdminChecks):",
                "+    def _check_actions_uniqueness(self, obj):",
                "+        \"\"\"Check that every action has a unique __name__.\"\"\"",
                "+        names = [name for _, name, _ in obj._get_base_actions()]",
                "+        if len(names) != len(set(names)):",
                "+            return [checks.Error(",
                "+                '__name__ attributes of actions defined in %s must be '",
                "+                'unique.' % obj.__class__,",
                "+                obj=obj.__class__,",
                "+                id='admin.E130',",
                "+            )]",
                "+        return []",
                "+",
                "diff --git a/tests/modeladmin/test_checks.py b/tests/modeladmin/test_checks.py",
                "index 6a10441471..89fde35d3c 100644",
                "--- a/tests/modeladmin/test_checks.py",
                "+++ b/tests/modeladmin/test_checks.py",
                "@@ -1311 +1311,28 @@ class ActionsCheckTests(CheckTestCase):",
                "         )",
                "+",
                "+    def test_actions_not_unique(self):",
                "+        def action(modeladmin, request, queryset):",
                "+            pass",
                "+",
                "+        class BandAdmin(ModelAdmin):",
                "+            actions = (action, action)",
                "+",
                "+        self.assertIsInvalid(",
                "+            BandAdmin, Band,",
                "+            \"__name__ attributes of actions defined in \"",
                "+            \"<class 'modeladmin.test_checks.ActionsCheckTests.\"",
                "+            \"test_actions_not_unique.<locals>.BandAdmin'> must be unique.\",",
                "+            id='admin.E130',",
                "+        )",
                "+",
                "+    def test_actions_unique(self):",
                "+        def action1(modeladmin, request, queryset):",
                "+            pass",
                "+",
                "+        def action2(modeladmin, request, queryset):",
                "+            pass",
                "+",
                "+        class BandAdmin(ModelAdmin):",
                "+            actions = (action1, action2)",
                "+",
                "+        self.assertIsValid(BandAdmin, Band)"
            ],
            "changed_files": [
                "django/contrib/admin/checks.py",
                "tests/modeladmin/test_checks.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29711": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: admin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: admin",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29711",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "de8eb07c7ae619e42781c9c0adecb521cdc3a353",
            "repository": "https://github.com/django/django",
            "timestamp": 1536677385,
            "hunks": 6,
            "message": "Reused a duplicated class in admin_scripts tests.",
            "diff": [
                "diff --git a/tests/admin_scripts/tests.py b/tests/admin_scripts/tests.py",
                "index c60194fe72..df0fcd6276 100644",
                "--- a/tests/admin_scripts/tests.py",
                "+++ b/tests/admin_scripts/tests.py",
                "@@ -1461,2 +1461,9 @@ class ManageTestserver(AdminScriptTestCase):",
                " ##########################################################################",
                "+class ColorCommand(BaseCommand):",
                "+    requires_system_checks = False",
                "+",
                "+    def handle(self, *args, **options):",
                "+        self.stdout.write('Hello, world!', self.style.ERROR)",
                "+        self.stderr.write('Hello, world!', self.style.ERROR)",
                "+",
                "@@ -1544,12 +1551,5 @@ class CommandTypes(AdminScriptTestCase):",
                "     def test_command_color(self):",
                "-        class Command(BaseCommand):",
                "-            requires_system_checks = False",
                "-",
                "-            def handle(self, *args, **options):",
                "-                self.stdout.write('Hello, world!', self.style.ERROR)",
                "-                self.stderr.write('Hello, world!', self.style.ERROR)",
                "-",
                "         out = StringIO()",
                "         err = StringIO()",
                "-        command = Command(stdout=out, stderr=err)",
                "+        command = ColorCommand(stdout=out, stderr=err)",
                "         call_command(command)",
                "@@ -1566,12 +1566,5 @@ class CommandTypes(AdminScriptTestCase):",
                "         \"--no-color prevent colorization of the output\"",
                "-        class Command(BaseCommand):",
                "-            requires_system_checks = False",
                "-",
                "-            def handle(self, *args, **options):",
                "-                self.stdout.write('Hello, world!', self.style.ERROR)",
                "-                self.stderr.write('Hello, world!', self.style.ERROR)",
                "-",
                "         out = StringIO()",
                "         err = StringIO()",
                "-        command = Command(stdout=out, stderr=err, no_color=True)",
                "+        command = ColorCommand(stdout=out, stderr=err, no_color=True)",
                "         call_command(command)",
                "@@ -1582,3 +1575,3 @@ class CommandTypes(AdminScriptTestCase):",
                "         err = StringIO()",
                "-        command = Command(stdout=out, stderr=err)",
                "+        command = ColorCommand(stdout=out, stderr=err)",
                "         call_command(command, no_color=True)"
            ],
            "changed_files": [
                "tests/admin_scripts/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: admin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: admin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "9f6d0c11eb0c42fb9e6b311de3a5d669a7cd54e6",
            "repository": "https://github.com/django/django",
            "timestamp": 1538661922,
            "hunks": 1,
            "message": "Removed Jinja2 dependency from admin_checks tests.",
            "diff": [
                "diff --git a/tests/admin_checks/tests.py b/tests/admin_checks/tests.py",
                "index d5661a137d..df1cd6f96f 100644",
                "--- a/tests/admin_checks/tests.py",
                "+++ b/tests/admin_checks/tests.py",
                "@@ -134,3 +134,3 @@ class SystemChecksTestCase(SimpleTestCase):",
                "             {",
                "-                'BACKEND': 'django.template.backends.jinja2.Jinja2',",
                "+                'BACKEND': 'django.template.backends.dummy.TemplateStrings',",
                "                 'DIRS': [],"
            ],
            "changed_files": [
                "tests/admin_checks/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: admin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: admin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "9b508bdb9ba522750fa72d49c2190ed9a0ed1290",
            "repository": "https://github.com/django/django",
            "timestamp": 1538657418,
            "hunks": 2,
            "message": "Removed unnecessary skipUnless in HTTPSitemapTests. contrib.sites is included in INSTALLED_APPS by SitemapTestsBase.",
            "diff": [
                "diff --git a/tests/sitemaps_tests/test_http.py b/tests/sitemaps_tests/test_http.py",
                "index b1797840b3..e757170241 100644",
                "--- a/tests/sitemaps_tests/test_http.py",
                "+++ b/tests/sitemaps_tests/test_http.py",
                "@@ -4,3 +4,2 @@ from unittest import skipUnless",
                "-from django.apps import apps",
                " from django.conf import settings",
                "@@ -205,4 +204,2 @@ class HTTPSitemapTests(SitemapTestsBase):",
                "-    @skipUnless(apps.is_installed('django.contrib.sites'),",
                "-                \"django.contrib.sites app not installed.\")",
                "     def test_sitemap_get_urls_no_site_1(self):"
            ],
            "changed_files": [
                "tests/sitemaps_tests/test_http.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: site",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: site",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "747db4018bc83f91a20a4d615c2a1b812f707480",
            "repository": "https://github.com/django/django",
            "timestamp": 1537888001,
            "hunks": 2,
            "message": "Simplified AdminFieldExtractionMixin.get_admin_form_fields().",
            "diff": [
                "diff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py",
                "index df1936aa90..908f78bf9b 100644",
                "--- a/tests/admin_views/tests.py",
                "+++ b/tests/admin_views/tests.py",
                "@@ -70,13 +70,6 @@ class AdminFieldExtractionMixin:",
                "         \"\"\"",
                "-        admin_form = response.context['adminform']",
                "-        fieldsets = list(admin_form)",
                "-",
                "-        field_lines = []",
                "-        for fieldset in fieldsets:",
                "-            field_lines += list(fieldset)",
                "-",
                "         fields = []",
                "-        for field_line in field_lines:",
                "-            fields += list(field_line)",
                "-",
                "+        for fieldset in response.context['adminform']:",
                "+            for field_line in fieldset:",
                "+                fields.extend(field_line)",
                "         return fields"
            ],
            "changed_files": [
                "tests/admin_views/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: admin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: view, admin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "e9defb3f6e60b626e9ec40ff5df1322fceb52601",
            "repository": "https://github.com/django/django",
            "timestamp": 1538399513,
            "hunks": 2,
            "message": "Simplified contrib.admin.utils.quote().",
            "diff": [
                "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py",
                "index 1db552bcd8..1590b6f65d 100644",
                "--- a/django/contrib/admin/utils.py",
                "+++ b/django/contrib/admin/utils.py",
                "@@ -15,2 +15,4 @@ from django.utils.translation import ngettext, override as translation_override",
                "+QUOTE_MAP = {i: '_%02X' % i for i in b'\":/_#?;@&=+$,\"[]<>%\\n\\\\'}",
                "+",
                "@@ -66,10 +68,3 @@ def quote(s):",
                "     \"\"\"",
                "-    if not isinstance(s, str):",
                "-        return s",
                "-    res = list(s)",
                "-    for i in range(len(res)):",
                "-        c = res[i]",
                "-        if c in \"\"\":/_#?;@&=+$,\"[]<>%\\n\\\\\"\"\":",
                "-            res[i] = '_%02X' % ord(c)",
                "-    return ''.join(res)",
                "+    return s.translate(QUOTE_MAP) if isinstance(s, str) else s"
            ],
            "changed_files": [
                "django/contrib/admin/utils.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: admin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: admin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "a47dd99cc6883fe3e35895e8c5d4bb53996bd184",
            "repository": "https://github.com/django/django",
            "timestamp": 1538398774,
            "hunks": 4,
            "message": "[2.1.x] Refs #27795 -- Removed force_bytes() usage in MySQL backend. The mysqlclient cursor attribute `_last_executed` is always stored as bytes. Decode it. TextField values are already type str. No need to decode. Backport of efd8a82e268a82b3ad0be77bd5b4548c30bcb4d7 from master",
            "diff": [
                "diff --git a/django/db/backends/mysql/operations.py b/django/db/backends/mysql/operations.py",
                "index 31f92ac5cd..e3092f0c17 100644",
                "--- a/django/db/backends/mysql/operations.py",
                "+++ b/django/db/backends/mysql/operations.py",
                "@@ -6,3 +6,2 @@ from django.utils import timezone",
                " from django.utils.duration import duration_microseconds",
                "-from django.utils.encoding import force_text",
                "@@ -137,3 +136,6 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "         # See MySQLdb/cursors.py in the source distribution.",
                "-        return force_text(getattr(cursor, '_last_executed', None), errors='replace')",
                "+        query = getattr(cursor, '_last_executed', None)",
                "+        if query is not None:",
                "+            query = query.decode(errors='replace')",
                "+        return query",
                "@@ -228,5 +230,3 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "         internal_type = expression.output_field.get_internal_type()",
                "-        if internal_type == 'TextField':",
                "-            converters.append(self.convert_textfield_value)",
                "-        elif internal_type in ['BooleanField', 'NullBooleanField']:",
                "+        if internal_type in ['BooleanField', 'NullBooleanField']:",
                "             converters.append(self.convert_booleanfield_value)",
                "@@ -239,7 +239,2 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "-    def convert_textfield_value(self, value, expression, connection):",
                "-        if value is not None:",
                "-            value = force_text(value)",
                "-        return value",
                "-",
                "     def convert_booleanfield_value(self, value, expression, connection):"
            ],
            "changed_files": [
                "django/db/backends/mysql/operations.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27795": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f3f31b0fc26f772b198c9683a427f2f7fe208c37"
                ]
            ],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: read",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "0c20850774e1ba2f408745916e2279592999ee98",
            "repository": "https://github.com/django/django",
            "timestamp": 1537212701,
            "hunks": 3,
            "message": "Removed unused admin_url and root_path context variables in admindocs. Unused since 915ef79b08862680e82d6a772d6ead22735e9a2f and aaf77c1676e44019abe544911ff7a06eb2690295.",
            "diff": [
                "diff --git a/django/contrib/admindocs/views.py b/django/contrib/admindocs/views.py",
                "index a8875a9747..4a70801774 100644",
                "--- a/django/contrib/admindocs/views.py",
                "+++ b/django/contrib/admindocs/views.py",
                "@@ -16,3 +16,3 @@ from django.http import Http404",
                " from django.template.engine import Engine",
                "-from django.urls import get_mod_func, get_resolver, get_urlconf, reverse",
                "+from django.urls import get_mod_func, get_resolver, get_urlconf",
                " from django.utils.decorators import method_decorator",
                "@@ -46,3 +46,2 @@ class BaseAdminDocsView(TemplateView):",
                "             **kwargs,",
                "-            'root_path': reverse('admin:index'),",
                "             **admin.site.each_context(self.request),",
                "@@ -54,10 +53,2 @@ class BookmarkletsView(BaseAdminDocsView):",
                "-    def get_context_data(self, **kwargs):",
                "-        context = super().get_context_data(**kwargs)",
                "-        context.update({",
                "-            'admin_url': \"%s://%s%s\" % (",
                "-                self.request.scheme, self.request.get_host(), context['root_path'])",
                "-        })",
                "-        return context",
                "-"
            ],
            "changed_files": [
                "django/contrib/admindocs/views.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: admin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: view, admin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "e4df8e6dc021fa472fa77f9b835db74810184748",
            "repository": "https://github.com/django/django",
            "timestamp": 1538509376,
            "hunks": 3,
            "message": "Simplified contrib.admin.utils.unquote().",
            "diff": [
                "diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py",
                "index 1590b6f65d..dd6b108ff3 100644",
                "--- a/django/contrib/admin/utils.py",
                "+++ b/django/contrib/admin/utils.py",
                "@@ -2,2 +2,3 @@ import datetime",
                " import decimal",
                "+import re",
                " from collections import defaultdict",
                "@@ -16,2 +17,4 @@ from django.utils.translation import ngettext, override as translation_override",
                " QUOTE_MAP = {i: '_%02X' % i for i in b'\":/_#?;@&=+$,\"[]<>%\\n\\\\'}",
                "+UNQUOTE_MAP = {v: chr(k) for k, v in QUOTE_MAP.items()}",
                "+UNQUOTE_RE = re.compile('_(?:%s)' % '|'.join([x[1:] for x in UNQUOTE_MAP]))",
                "@@ -72,18 +75,4 @@ def quote(s):",
                " def unquote(s):",
                "-    \"\"\"Undo the effects of quote(). Based heavily on urllib.parse.unquote().\"\"\"",
                "-    mychr = chr",
                "-    myatoi = int",
                "-    list = s.split('_')",
                "-    res = [list[0]]",
                "-    myappend = res.append",
                "-    del list[0]",
                "-    for item in list:",
                "-        if item[1:2]:",
                "-            try:",
                "-                myappend(mychr(myatoi(item[:2], 16)) + item[2:])",
                "-            except ValueError:",
                "-                myappend('_' + item)",
                "-        else:",
                "-            myappend('_' + item)",
                "-    return \"\".join(res)",
                "+    \"\"\"Undo the effects of quote().\"\"\"",
                "+    return UNQUOTE_RE.sub(lambda m: UNQUOTE_MAP[m.group(0)], s)"
            ],
            "changed_files": [
                "django/contrib/admin/utils.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: admin",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: admin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "024abe5b82d95ee60cb18a77ebf841ad715467fa",
            "repository": "https://github.com/django/django",
            "timestamp": 1537985928,
            "hunks": 9,
            "message": "Fixed #29630 -- Fixed crash of sliced queries with multiple columns with the same name on Oracle 12.1. Regression in 0899d583bdb140910698d00d17f5f1abc8774b07. Thanks Tim Graham for the review and Jani Tiainen for help.",
            "diff": [
                "diff --git a/django/db/backends/oracle/compiler.py b/django/db/backends/oracle/compiler.py",
                "new file mode 100644",
                "index 0000000000..819f241f80",
                "--- /dev/null",
                "+++ b/django/db/backends/oracle/compiler.py",
                "@@ -0,0 +1,60 @@",
                "+from django.db import NotSupportedError",
                "+from django.db.models.sql import compiler",
                "+",
                "+",
                "+class SQLCompiler(compiler.SQLCompiler):",
                "+    def as_sql(self, with_limits=True, with_col_aliases=False):",
                "+        \"\"\"",
                "+        Create the SQL for this query. Return the SQL string and list of",
                "+        parameters. This is overridden from the original Query class to handle",
                "+        the restriction in Oracle 12.1 and emulate LIMIT and OFFSET with",
                "+        a subquery.",
                "+",
                "+        If 'with_limits' is False, any limit/offset information is not included",
                "+        in the query.",
                "+        \"\"\"",
                "+        # Whether the query must be constructed using limit/offset.",
                "+        do_offset = with_limits and (self.query.high_mark is not None or self.query.low_mark)",
                "+        if not do_offset:",
                "+            sql, params = super().as_sql(with_limits=False, with_col_aliases=with_col_aliases)",
                "+        elif not self.connection.features.supports_select_for_update_with_limit and self.query.select_for_update:",
                "+            raise NotSupportedError(",
                "+                'LIMIT/OFFSET is not supported with select_for_update on this '",
                "+                'database backend.'",
                "+            )",
                "+        else:",
                "+            sql, params = super().as_sql(with_limits=False, with_col_aliases=True)",
                "+            # Wrap the base query in an outer SELECT * with boundaries on",
                "+            # the \"_RN\" column. This is the canonical way to emulate LIMIT",
                "+            # and OFFSET on Oracle.",
                "+            high_where = ''",
                "+            if self.query.high_mark is not None:",
                "+                high_where = 'WHERE ROWNUM <= %d' % (self.query.high_mark,)",
                "+",
                "+            if self.query.low_mark:",
                "+                sql = (",
                "+                    'SELECT * FROM (SELECT \"_SUB\".*, ROWNUM AS \"_RN\" FROM (%s) '",
                "+                    '\"_SUB\" %s) WHERE \"_RN\" > %d' % (sql, high_where, self.query.low_mark)",
                "+                )",
                "+            else:",
                "+                # Simplify the query to support subqueries if there's no offset.",
                "+                sql = (",
                "+                    'SELECT * FROM (SELECT \"_SUB\".* FROM (%s) \"_SUB\" %s)' % (sql, high_where)",
                "+                )",
                "+        return sql, params",
                "+",
                "+",
                "+class SQLInsertCompiler(compiler.SQLInsertCompiler, SQLCompiler):",
                "+    pass",
                "+",
                "+",
                "+class SQLDeleteCompiler(compiler.SQLDeleteCompiler, SQLCompiler):",
                "+    pass",
                "+",
                "+",
                "+class SQLUpdateCompiler(compiler.SQLUpdateCompiler, SQLCompiler):",
                "+    pass",
                "+",
                "+",
                "+class SQLAggregateCompiler(compiler.SQLAggregateCompiler, SQLCompiler):",
                "+    pass",
                "diff --git a/django/db/backends/oracle/features.py b/django/db/backends/oracle/features.py",
                "index 81eb03f2b5..c44b5041e7 100644",
                "--- a/django/db/backends/oracle/features.py",
                "+++ b/django/db/backends/oracle/features.py",
                "@@ -2,2 +2,3 @@ from django.db.backends.base.features import BaseDatabaseFeatures",
                " from django.db.utils import InterfaceError",
                "+from django.utils.functional import cached_property",
                "@@ -57 +58,9 @@ class DatabaseFeatures(BaseDatabaseFeatures):",
                "     max_query_params = 2**16 - 1",
                "+",
                "+    @cached_property",
                "+    def has_fetch_offset_support(self):",
                "+        return self.connection.oracle_version >= (12, 2)",
                "+",
                "+    @cached_property",
                "+    def allow_sliced_subqueries_with_in(self):",
                "+        return self.has_fetch_offset_support",
                "diff --git a/django/db/backends/oracle/operations.py b/django/db/backends/oracle/operations.py",
                "index 9cfee5897d..dcbcb5e47f 100644",
                "--- a/django/db/backends/oracle/operations.py",
                "+++ b/django/db/backends/oracle/operations.py",
                "@@ -10,2 +10,3 @@ from django.utils import timezone",
                " from django.utils.encoding import force_bytes",
                "+from django.utils.functional import cached_property",
                "@@ -581 +582,7 @@ END;",
                "         return len(objs)",
                "+",
                "+    @cached_property",
                "+    def compiler_module(self):",
                "+        if self.connection.features.has_fetch_offset_support:",
                "+            return super().compiler_module",
                "+        return 'django.db.backends.oracle.compiler'",
                "diff --git a/tests/queries/tests.py b/tests/queries/tests.py",
                "index 65917f84fb..25e3b283ec 100644",
                "--- a/tests/queries/tests.py",
                "+++ b/tests/queries/tests.py",
                "@@ -1838,11 +1838,11 @@ class Queries6Tests(TestCase):",
                "         generic = NamedCategory.objects.create(name=\"Generic\")",
                "-        t1 = Tag.objects.create(name='t1', category=generic)",
                "-        Tag.objects.create(name='t2', parent=t1, category=generic)",
                "-        t3 = Tag.objects.create(name='t3', parent=t1)",
                "-        t4 = Tag.objects.create(name='t4', parent=t3)",
                "-        Tag.objects.create(name='t5', parent=t3)",
                "+        cls.t1 = Tag.objects.create(name='t1', category=generic)",
                "+        cls.t2 = Tag.objects.create(name='t2', parent=cls.t1, category=generic)",
                "+        cls.t3 = Tag.objects.create(name='t3', parent=cls.t1)",
                "+        cls.t4 = Tag.objects.create(name='t4', parent=cls.t3)",
                "+        cls.t5 = Tag.objects.create(name='t5', parent=cls.t3)",
                "         n1 = Note.objects.create(note='n1', misc='foo', id=1)",
                "-        ann1 = Annotation.objects.create(name='a1', tag=t1)",
                "+        ann1 = Annotation.objects.create(name='a1', tag=cls.t1)",
                "         ann1.notes.add(n1)",
                "-        Annotation.objects.create(name='a2', tag=t4)",
                "+        Annotation.objects.create(name='a2', tag=cls.t4)",
                "@@ -1925,2 +1925,20 @@ class Queries6Tests(TestCase):",
                "+    def test_multiple_columns_with_the_same_name_slice(self):",
                "+        self.assertEqual(",
                "+            list(Tag.objects.order_by('name').values_list('name', 'category__name')[:2]),",
                "+            [('t1', 'Generic'), ('t2', 'Generic')],",
                "+        )",
                "+        self.assertSequenceEqual(",
                "+            Tag.objects.order_by('name').select_related('category')[:2],",
                "+            [self.t1, self.t2],",
                "+        )",
                "+        self.assertEqual(",
                "+            list(Tag.objects.order_by('-name').values_list('name', 'parent__name')[:2]),",
                "+            [('t5', 't3'), ('t4', 't3')],",
                "+        )",
                "+        self.assertSequenceEqual(",
                "+            Tag.objects.order_by('-name').select_related('parent')[:2],",
                "+            [self.t5, self.t4],",
                "+        )",
                "+"
            ],
            "changed_files": [
                "django/db/backends/oracle/compiler.py",
                "django/db/backends/oracle/features.py",
                "django/db/backends/oracle/operations.py",
                "tests/queries/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29630": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: view",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29630",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2349cbd909c387d2d05cda20ce8d0c63c1b1c6c4",
            "repository": "https://github.com/django/django",
            "timestamp": 1537910181,
            "hunks": 2,
            "message": "Fixed #29782 -- Added better error message when filtering queryset with AnonymousUser.",
            "diff": [
                "diff --git a/django/contrib/auth/models.py b/django/contrib/auth/models.py",
                "index 3e28da2ad4..6603fbafb8 100644",
                "--- a/django/contrib/auth/models.py",
                "+++ b/django/contrib/auth/models.py",
                "@@ -385,2 +385,5 @@ class AnonymousUser:",
                "+    def __int__(self):",
                "+        raise TypeError('Cannot cast AnonymousUser to int. Are you trying to use it in place of User?')",
                "+",
                "     def save(self):",
                "diff --git a/tests/auth_tests/test_models.py b/tests/auth_tests/test_models.py",
                "index 755511bbb4..7bee3d7d31 100644",
                "--- a/tests/auth_tests/test_models.py",
                "+++ b/tests/auth_tests/test_models.py",
                "@@ -347,2 +347,10 @@ class AnonymousUserTests(SimpleTestCase):",
                "+    def test_int(self):",
                "+        msg = (",
                "+            'Cannot cast AnonymousUser to int. Are you trying to use it in '",
                "+            'place of User?'",
                "+        )",
                "+        with self.assertRaisesMessage(TypeError, msg):",
                "+            int(self.user)",
                "+",
                "     def test_delete(self):"
            ],
            "changed_files": [
                "django/contrib/auth/models.py",
                "tests/auth_tests/test_models.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29782": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: user",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29782",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f53ed7846bc5ed305ae5547af6e504d0deeafd05",
            "repository": "https://github.com/django/django",
            "timestamp": 1537666238,
            "hunks": 7,
            "message": "[2.1.x] Refs #29784 -- Normalized Python docs links to omit the version. Backport of ad9a28ee38e3352b16cc6c9ae7f55f90c64710cc from master.",
            "diff": [
                "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py",
                "index befade160f..b603cc9a15 100644",
                "--- a/django/conf/global_settings.py",
                "+++ b/django/conf/global_settings.py",
                "@@ -306,3 +306,3 @@ FILE_UPLOAD_TEMP_DIR = None",
                " # The numeric mode to set newly-uploaded files to. The value should be a mode",
                "-# you'd pass directly to os.chmod; see https://docs.python.org/3/library/os.html#files-and-directories.",
                "+# you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.",
                " FILE_UPLOAD_PERMISSIONS = None",
                "@@ -311,3 +311,3 @@ FILE_UPLOAD_PERMISSIONS = None",
                " # The value should be a mode as you'd pass to os.chmod;",
                "-# see https://docs.python.org/3/library/os.html#files-and-directories.",
                "+# see https://docs.python.org/library/os.html#files-and-directories.",
                " FILE_UPLOAD_DIRECTORY_PERMISSIONS = None",
                "diff --git a/django/contrib/admin/models.py b/django/contrib/admin/models.py",
                "index c7bac4061e..f0138435ca 100644",
                "--- a/django/contrib/admin/models.py",
                "+++ b/django/contrib/admin/models.py",
                "@@ -56,3 +56,3 @@ class LogEntry(models.Model):",
                "     object_id = models.TextField(_('object id'), blank=True, null=True)",
                "-    # Translators: 'repr' means representation (https://docs.python.org/3/library/functions.html#repr)",
                "+    # Translators: 'repr' means representation (https://docs.python.org/library/functions.html#repr)",
                "     object_repr = models.CharField(_('object repr'), max_length=200)",
                "diff --git a/django/contrib/gis/db/backends/postgis/const.py b/django/contrib/gis/db/backends/postgis/const.py",
                "index 0d6d809ec3..4b511eb149 100644",
                "--- a/django/contrib/gis/db/backends/postgis/const.py",
                "+++ b/django/contrib/gis/db/backends/postgis/const.py",
                "@@ -29,3 +29,3 @@ GDAL_TO_STRUCT = [",
                " # when decomposing them into GDALRasters.",
                "-# See https://docs.python.org/3/library/struct.html#format-characters",
                "+# See https://docs.python.org/library/struct.html#format-characters",
                " STRUCT_SIZE = {",
                "diff --git a/django/http/response.py b/django/http/response.py",
                "index 266c6efb73..f303852a40 100644",
                "--- a/django/http/response.py",
                "+++ b/django/http/response.py",
                "@@ -240,3 +240,3 @@ class HttpResponseBase:",
                "     # These methods partially implement the file-like object interface.",
                "-    # See https://docs.python.org/3/library/io.html#io.IOBase",
                "+    # See https://docs.python.org/library/io.html#io.IOBase",
                "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py",
                "index ef6579f5bb..f77850e868 100644",
                "--- a/django/template/defaultfilters.py",
                "+++ b/django/template/defaultfilters.py",
                "@@ -227,3 +227,3 @@ def stringformat(value, arg):",
                "-    See https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting",
                "+    See https://docs.python.org/library/stdtypes.html#printf-style-string-formatting",
                "     for documentation of Python string formatting.",
                "diff --git a/tests/test_runner_apps/sample/doctests.py b/tests/test_runner_apps/sample/doctests.py",
                "index 6d9403442c..8707ecaf86 100644",
                "--- a/tests/test_runner_apps/sample/doctests.py",
                "+++ b/tests/test_runner_apps/sample/doctests.py",
                "@@ -2,3 +2,3 @@",
                " Doctest example from the official Python documentation.",
                "-https://docs.python.org/3/library/doctest.html",
                "+https://docs.python.org/library/doctest.html",
                " \"\"\""
            ],
            "changed_files": [
                "django/conf/global_settings.py",
                "django/contrib/admin/models.py",
                "django/contrib/gis/db/backends/postgis/const.py",
                "django/http/response.py",
                "django/template/defaultfilters.py",
                "tests/test_runner_apps/sample/doctests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29784": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: admin",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29784",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5195b99e2c3804ec5f9c98d29e0cf76bf44b0cec",
            "repository": "https://github.com/django/django",
            "timestamp": 1532279507,
            "hunks": 26,
            "message": "Fixed #29560 -- Added --force-color management command option.",
            "diff": [
                "diff --git a/django/core/management/base.py b/django/core/management/base.py",
                "index 651674534f..354e778a70 100644",
                "--- a/django/core/management/base.py",
                "+++ b/django/core/management/base.py",
                "@@ -97,3 +97,3 @@ class DjangoHelpFormatter(HelpFormatter):",
                "         '--version', '--verbosity', '--traceback', '--settings', '--pythonpath',",
                "-        '--no-color',",
                "+        '--no-color', '--force_color',",
                "     }",
                "@@ -229,5 +229,7 @@ class BaseCommand:",
                "-    def __init__(self, stdout=None, stderr=None, no_color=False):",
                "+    def __init__(self, stdout=None, stderr=None, no_color=False, force_color=False):",
                "         self.stdout = OutputWrapper(stdout or sys.stdout)",
                "         self.stderr = OutputWrapper(stderr or sys.stderr)",
                "+        if no_color and force_color:",
                "+            raise CommandError(\"'no_color' and 'force_color' can't be used together.\")",
                "         if no_color:",
                "@@ -235,3 +237,3 @@ class BaseCommand:",
                "         else:",
                "-            self.style = color_style()",
                "+            self.style = color_style(force_color)",
                "             self.stderr.style_func = self.style.ERROR",
                "@@ -282,2 +284,6 @@ class BaseCommand:",
                "         )",
                "+        parser.add_argument(",
                "+            '--force-color', action='store_true',",
                "+            help='Force colorization of the command output.',",
                "+        )",
                "         self.add_arguments(parser)",
                "@@ -341,3 +347,7 @@ class BaseCommand:",
                "         \"\"\"",
                "-        if options['no_color']:",
                "+        if options['force_color'] and options['no_color']:",
                "+            raise CommandError(\"The --no-color and --force-color options can't be used together.\")",
                "+        if options['force_color']:",
                "+            self.style = color_style(force_color=True)",
                "+        elif options['no_color']:",
                "             self.style = no_style()",
                "diff --git a/django/core/management/color.py b/django/core/management/color.py",
                "index 42600fa1c8..572329bb0c 100644",
                "--- a/django/core/management/color.py",
                "+++ b/django/core/management/color.py",
                "@@ -66,3 +66,3 @@ def no_style():",
                "-def color_style():",
                "+def color_style(force_color=False):",
                "     \"\"\"",
                "@@ -70,3 +70,3 @@ def color_style():",
                "     \"\"\"",
                "-    if not supports_color():",
                "+    if not force_color and not supports_color():",
                "         return no_style()",
                "diff --git a/tests/admin_scripts/tests.py b/tests/admin_scripts/tests.py",
                "index df0fcd6276..410652efbc 100644",
                "--- a/tests/admin_scripts/tests.py",
                "+++ b/tests/admin_scripts/tests.py",
                "@@ -42,3 +42,3 @@ SYSTEM_CHECK_MSG = 'System check identified no issues'",
                "-class AdminScriptTestCase(unittest.TestCase):",
                "+class AdminScriptTestCase(SimpleTestCase):",
                "@@ -972,5 +972,5 @@ class ManageAlternateSettings(AdminScriptTestCase):",
                "             out,",
                "-            \"EXECUTE: noargs_command options=[('no_color', False), \"",
                "-            \"('pythonpath', None), ('settings', 'alternate_settings'), \"",
                "-            \"('traceback', False), ('verbosity', 1)]\"",
                "+            \"EXECUTE: noargs_command options=[('force_color', False), \"",
                "+            \"('no_color', False), ('pythonpath', None), ('settings', \"",
                "+            \"'alternate_settings'), ('traceback', False), ('verbosity', 1)]\"",
                "         )",
                "@@ -984,5 +984,5 @@ class ManageAlternateSettings(AdminScriptTestCase):",
                "             out,",
                "-            \"EXECUTE: noargs_command options=[('no_color', False), \"",
                "-            \"('pythonpath', None), ('settings', None), ('traceback', False), \"",
                "-            \"('verbosity', 1)]\"",
                "+            \"EXECUTE: noargs_command options=[('force_color', False), \"",
                "+            \"('no_color', False), ('pythonpath', None), ('settings', None), \"",
                "+            \"('traceback', False), ('verbosity', 1)]\"",
                "         )",
                "@@ -996,5 +996,5 @@ class ManageAlternateSettings(AdminScriptTestCase):",
                "             out,",
                "-            \"EXECUTE: noargs_command options=[('no_color', True), \"",
                "-            \"('pythonpath', None), ('settings', 'alternate_settings'), \"",
                "-            \"('traceback', False), ('verbosity', 1)]\"",
                "+            \"EXECUTE: noargs_command options=[('force_color', False), \"",
                "+            \"('no_color', True), ('pythonpath', None), ('settings', \"",
                "+            \"'alternate_settings'), ('traceback', False), ('verbosity', 1)]\"",
                "         )",
                "@@ -1427,3 +1427,3 @@ class ManageTestserver(AdminScriptTestCase):",
                "             traceback=False, addrport='', no_color=False, use_ipv6=False,",
                "-            skip_checks=True, interactive=True,",
                "+            skip_checks=True, interactive=True, force_color=False,",
                "         )",
                "@@ -1438,2 +1438,3 @@ class ManageTestserver(AdminScriptTestCase):",
                "             addrport='',",
                "+            force_color=False,",
                "             insecure_serving=False,",
                "@@ -1580,2 +1581,30 @@ class CommandTypes(AdminScriptTestCase):",
                "+    def test_force_color_execute(self):",
                "+        out = StringIO()",
                "+        err = StringIO()",
                "+        with mock.patch.object(sys.stdout, 'isatty', lambda: False):",
                "+            command = ColorCommand(stdout=out, stderr=err)",
                "+            call_command(command, force_color=True)",
                "+        self.assertEqual(out.getvalue(), '\\x1b[31;1mHello, world!\\n\\x1b[0m')",
                "+        self.assertEqual(err.getvalue(), '\\x1b[31;1mHello, world!\\n\\x1b[0m')",
                "+",
                "+    def test_force_color_command_init(self):",
                "+        out = StringIO()",
                "+        err = StringIO()",
                "+        with mock.patch.object(sys.stdout, 'isatty', lambda: False):",
                "+            command = ColorCommand(stdout=out, stderr=err, force_color=True)",
                "+            call_command(command)",
                "+        self.assertEqual(out.getvalue(), '\\x1b[31;1mHello, world!\\n\\x1b[0m')",
                "+        self.assertEqual(err.getvalue(), '\\x1b[31;1mHello, world!\\n\\x1b[0m')",
                "+",
                "+    def test_no_color_force_color_mutually_exclusive_execute(self):",
                "+        msg = \"The --no-color and --force-color options can't be used together.\"",
                "+        with self.assertRaisesMessage(CommandError, msg):",
                "+            call_command(BaseCommand(), no_color=True, force_color=True)",
                "+",
                "+    def test_no_color_force_color_mutually_exclusive_command_init(self):",
                "+        msg = \"'no_color' and 'force_color' can't be used together.\"",
                "+        with self.assertRaisesMessage(CommandError, msg):",
                "+            call_command(BaseCommand(no_color=True, force_color=True))",
                "+",
                "     def test_custom_stdout(self):",
                "@@ -1657,5 +1686,6 @@ class CommandTypes(AdminScriptTestCase):",
                "             \"EXECUTE:BaseCommand labels=%s, \"",
                "-            \"options=[('no_color', False), ('option_a', %s), ('option_b', %s), \"",
                "-            \"('option_c', '3'), ('pythonpath', None), ('settings', None), \"",
                "-            \"('traceback', False), ('verbosity', 1)]\") % (labels, option_a, option_b)",
                "+            \"options=[('force_color', False), ('no_color', False), \"",
                "+            \"('option_a', %s), ('option_b', %s), ('option_c', '3'), \"",
                "+            \"('pythonpath', None), ('settings', None), ('traceback', False), \"",
                "+            \"('verbosity', 1)]\") % (labels, option_a, option_b)",
                "         self.assertNoOutput(err)",
                "@@ -1733,5 +1763,5 @@ class CommandTypes(AdminScriptTestCase):",
                "             out,",
                "-            \"EXECUTE: noargs_command options=[('no_color', False), \"",
                "-            \"('pythonpath', None), ('settings', None), ('traceback', False), \"",
                "-            \"('verbosity', 1)]\"",
                "+            \"EXECUTE: noargs_command options=[('force_color', False), \"",
                "+            \"('no_color', False), ('pythonpath', None), ('settings', None), \"",
                "+            \"('traceback', False), ('verbosity', 1)]\"",
                "         )",
                "@@ -1752,4 +1782,5 @@ class CommandTypes(AdminScriptTestCase):",
                "             out,",
                "-            \", options=[('no_color', False), ('pythonpath', None), \"",
                "-            \"('settings', None), ('traceback', False), ('verbosity', 1)]\"",
                "+            \", options=[('force_color', False), ('no_color', False), \"",
                "+            \"('pythonpath', None), ('settings', None), ('traceback', False), \"",
                "+            \"('verbosity', 1)]\"",
                "         )",
                "@@ -1770,4 +1801,5 @@ class CommandTypes(AdminScriptTestCase):",
                "             out,",
                "-            \", options=[('no_color', False), ('pythonpath', None), \"",
                "-            \"('settings', None), ('traceback', False), ('verbosity', 1)]\"",
                "+            \", options=[('force_color', False), ('no_color', False), \"",
                "+            \"('pythonpath', None), ('settings', None), ('traceback', False), \"",
                "+            \"('verbosity', 1)]\"",
                "         )",
                "@@ -1776,4 +1808,5 @@ class CommandTypes(AdminScriptTestCase):",
                "             out,",
                "-            \", options=[('no_color', False), ('pythonpath', None), \"",
                "-            \"('settings', None), ('traceback', False), ('verbosity', 1)]\"",
                "+            \", options=[('force_color', False), ('no_color', False), \"",
                "+            \"('pythonpath', None), ('settings', None), ('traceback', False), \"",
                "+            \"('verbosity', 1)]\"",
                "         )",
                "@@ -1799,4 +1832,5 @@ class CommandTypes(AdminScriptTestCase):",
                "             out,",
                "-            \"EXECUTE:LabelCommand label=testlabel, options=[('no_color', False), \"",
                "-            \"('pythonpath', None), ('settings', None), ('traceback', False), ('verbosity', 1)]\"",
                "+            \"EXECUTE:LabelCommand label=testlabel, options=[('force_color', \"",
                "+            \"False), ('no_color', False), ('pythonpath', None), ('settings', \"",
                "+            \"None), ('traceback', False), ('verbosity', 1)]\"",
                "         )",
                "@@ -1816,4 +1850,5 @@ class CommandTypes(AdminScriptTestCase):",
                "             out,",
                "-            \"EXECUTE:LabelCommand label=testlabel, options=[('no_color', False), \"",
                "-            \"('pythonpath', None), ('settings', None), ('traceback', False), ('verbosity', 1)]\"",
                "+            \"EXECUTE:LabelCommand label=testlabel, options=[('force_color', \"",
                "+            \"False), ('no_color', False), ('pythonpath', None), \"",
                "+            \"('settings', None), ('traceback', False), ('verbosity', 1)]\"",
                "         )",
                "@@ -1821,4 +1856,5 @@ class CommandTypes(AdminScriptTestCase):",
                "             out,",
                "-            \"EXECUTE:LabelCommand label=anotherlabel, options=[('no_color', False), \"",
                "-            \"('pythonpath', None), ('settings', None), ('traceback', False), ('verbosity', 1)]\"",
                "+            \"EXECUTE:LabelCommand label=anotherlabel, options=[('force_color', \"",
                "+            \"False), ('no_color', False), ('pythonpath', None), \"",
                "+            \"('settings', None), ('traceback', False), ('verbosity', 1)]\"",
                "         )",
                "@@ -1896,6 +1932,7 @@ class ArgumentOrder(AdminScriptTestCase):",
                "             out,",
                "-            \"EXECUTE:BaseCommand labels=('testlabel',), options=[('no_color', False), \"",
                "-            \"('option_a', 'x'), ('option_b', %s), ('option_c', '3'), \"",
                "-            \"('pythonpath', None), ('settings', 'alternate_settings'), \"",
                "-            \"('traceback', False), ('verbosity', 1)]\" % option_b",
                "+            \"EXECUTE:BaseCommand labels=('testlabel',), options=[\"",
                "+            \"('force_color', False), ('no_color', False), ('option_a', 'x'), \"",
                "+            \"('option_b', %s), ('option_c', '3'), ('pythonpath', None), \"",
                "+            \"('settings', 'alternate_settings'), ('traceback', False), \"",
                "+            \"('verbosity', 1)]\" % option_b",
                "         )",
                "diff --git a/tests/user_commands/tests.py b/tests/user_commands/tests.py",
                "index 50b1b4244f..45fe0aaf46 100644",
                "--- a/tests/user_commands/tests.py",
                "+++ b/tests/user_commands/tests.py",
                "@@ -181,5 +181,5 @@ class CommandTests(SimpleTestCase):",
                "             'Unknown option(s) for dance command: unrecognized. Valid options '",
                "-            'are: example, help, integer, no_color, opt_3, option3, '",
                "-            'pythonpath, settings, skip_checks, stderr, stdout, style, '",
                "-            'traceback, verbosity, version.'",
                "+            'are: example, force_color, help, integer, no_color, opt_3, '",
                "+            'option3, pythonpath, settings, skip_checks, stderr, stdout, '",
                "+            'style, traceback, verbosity, version.'",
                "         )",
                "@@ -190,5 +190,5 @@ class CommandTests(SimpleTestCase):",
                "             'Unknown option(s) for dance command: unrecognized, unrecognized2. '",
                "-            'Valid options are: example, help, integer, no_color, opt_3, '",
                "-            'option3, pythonpath, settings, skip_checks, stderr, stdout, '",
                "-            'style, traceback, verbosity, version.'",
                "+            'Valid options are: example, force_color, help, integer, no_color, '",
                "+            'opt_3, option3, pythonpath, settings, skip_checks, stderr, '",
                "+            'stdout, style, traceback, verbosity, version.'",
                "         )"
            ],
            "changed_files": [
                "django/core/management/base.py",
                "django/core/management/color.py",
                "tests/admin_scripts/tests.py",
                "tests/user_commands/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29560": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: admin, user",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29560",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f5e347a6402c1996a8f7063de4b314bae4a55683",
            "repository": "https://github.com/django/django",
            "timestamp": 1537200232,
            "hunks": 10,
            "message": "Fixed #27899 -- Added support for phrase/raw searching in SearchQuery. Thanks Tim Graham, Nick Pope, and Claude Paroz for contribution and review.",
            "diff": [
                "diff --git a/django/contrib/postgres/search.py b/django/contrib/postgres/search.py",
                "index 63fa9116ec..635a715250 100644",
                "--- a/django/contrib/postgres/search.py",
                "+++ b/django/contrib/postgres/search.py",
                "@@ -125,6 +125,14 @@ class SearchQuery(SearchQueryCombinable, Value):",
                "     output_field = SearchQueryField()",
                "+    SEARCH_TYPES = {",
                "+        'plain': 'plainto_tsquery',",
                "+        'phrase': 'phraseto_tsquery',",
                "+        'raw': 'to_tsquery',",
                "+    }",
                "-    def __init__(self, value, output_field=None, *, config=None, invert=False):",
                "+    def __init__(self, value, output_field=None, *, config=None, invert=False, search_type='plain'):",
                "         self.config = config",
                "         self.invert = invert",
                "+        if search_type not in self.SEARCH_TYPES:",
                "+            raise ValueError(\"Unknown search_type argument '%s'.\" % search_type)",
                "+        self.search_type = search_type",
                "         super().__init__(value, output_field=output_field)",
                "@@ -142,8 +150,9 @@ class SearchQuery(SearchQueryCombinable, Value):",
                "         params = [self.value]",
                "+        function = self.SEARCH_TYPES[self.search_type]",
                "         if self.config:",
                "             config_sql, config_params = compiler.compile(self.config)",
                "-            template = 'plainto_tsquery({}::regconfig, %s)'.format(config_sql)",
                "+            template = '{}({}::regconfig, %s)'.format(function, config_sql)",
                "             params = config_params + [self.value]",
                "         else:",
                "-            template = 'plainto_tsquery(%s)'",
                "+            template = '{}(%s)'.format(function)",
                "         if self.invert:",
                "diff --git a/django/db/backends/postgresql/features.py b/django/db/backends/postgresql/features.py",
                "index 7fbe4bae02..5d6ebc9d15 100644",
                "--- a/django/db/backends/postgresql/features.py",
                "+++ b/django/db/backends/postgresql/features.py",
                "@@ -59,2 +59,6 @@ class DatabaseFeatures(BaseDatabaseFeatures):",
                "+    @cached_property",
                "+    def is_postgresql_9_6(self):",
                "+        return self.connection.pg_version >= 90600",
                "+",
                "     @cached_property",
                "@@ -69 +73,2 @@ class DatabaseFeatures(BaseDatabaseFeatures):",
                "     supports_ignore_conflicts = is_postgresql_9_5",
                "+    has_phraseto_tsquery = is_postgresql_9_6",
                "diff --git a/tests/postgres_tests/test_search.py b/tests/postgres_tests/test_search.py",
                "index 5ab7609cb3..d53c15116f 100644",
                "--- a/tests/postgres_tests/test_search.py",
                "+++ b/tests/postgres_tests/test_search.py",
                "@@ -11,3 +11,3 @@ from django.contrib.postgres.search import (",
                " from django.db.models import F",
                "-from django.test import SimpleTestCase, modify_settings",
                "+from django.test import SimpleTestCase, modify_settings, skipUnlessDBFeature",
                "@@ -77,3 +77,3 @@ class GrailTestData:",
                "             character=guards,",
                "-            dialogue='Oh. Un cadeau. Oui oui.',",
                "+            dialogue='Oh. Un beau cadeau. Oui oui.',",
                "             dialogue_config='french',",
                "@@ -163,2 +163,42 @@ class MultipleFieldsTest(GrailTestData, PostgreSQLTestCase):",
                "+    @skipUnlessDBFeature('has_phraseto_tsquery')",
                "+    def test_phrase_search(self):",
                "+        line_qs = Line.objects.annotate(search=SearchVector('dialogue'))",
                "+        searched = line_qs.filter(search=SearchQuery('burned body his away', search_type='phrase'))",
                "+        self.assertSequenceEqual(searched, [])",
                "+        searched = line_qs.filter(search=SearchQuery('his body burned away', search_type='phrase'))",
                "+        self.assertSequenceEqual(searched, [self.verse1])",
                "+",
                "+    @skipUnlessDBFeature('has_phraseto_tsquery')",
                "+    def test_phrase_search_with_config(self):",
                "+        line_qs = Line.objects.annotate(",
                "+            search=SearchVector('scene__setting', 'dialogue', config='french'),",
                "+        )",
                "+        searched = line_qs.filter(",
                "+            search=SearchQuery('cadeau beau un', search_type='phrase', config='french'),",
                "+        )",
                "+        self.assertSequenceEqual(searched, [])",
                "+        searched = line_qs.filter(",
                "+            search=SearchQuery('un beau cadeau', search_type='phrase', config='french'),",
                "+        )",
                "+        self.assertSequenceEqual(searched, [self.french])",
                "+",
                "+    def test_raw_search(self):",
                "+        line_qs = Line.objects.annotate(search=SearchVector('dialogue'))",
                "+        searched = line_qs.filter(search=SearchQuery('Robin', search_type='raw'))",
                "+        self.assertEqual(set(searched), {self.verse0, self.verse1})",
                "+        searched = line_qs.filter(search=SearchQuery(\"Robin & !'Camelot'\", search_type='raw'))",
                "+        self.assertSequenceEqual(searched, [self.verse1])",
                "+",
                "+    def test_raw_search_with_config(self):",
                "+        line_qs = Line.objects.annotate(search=SearchVector('dialogue', config='french'))",
                "+        searched = line_qs.filter(",
                "+            search=SearchQuery(\"'cadeaux' & 'beaux'\", search_type='raw', config='french'),",
                "+        )",
                "+        self.assertSequenceEqual(searched, [self.french])",
                "+",
                "+    def test_bad_search_type(self):",
                "+        with self.assertRaisesMessage(ValueError, \"Unknown search_type argument 'foo'.\"):",
                "+            SearchQuery('kneecaps', search_type='foo')",
                "+",
                "     def test_config_query_explicit(self):"
            ],
            "changed_files": [
                "django/contrib/postgres/search.py",
                "django/db/backends/postgresql/features.py",
                "tests/postgres_tests/test_search.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27899": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: view",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27899",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5aeced6dcd881dfe7413da5356be0e9f14da3d40",
            "repository": "https://github.com/django/django",
            "timestamp": 1537985928,
            "hunks": 9,
            "message": "[2.1.x] Fixed #29630 -- Fixed crash of sliced queries with multiple columns with the same name on Oracle 12.1. Regression in 0899d583bdb140910698d00d17f5f1abc8774b07. Thanks Tim Graham for the review and Jani Tiainen for help. Backport of 024abe5b82d95ee60cb18a77ebf841ad715467fa from master",
            "diff": [
                "diff --git a/django/db/backends/oracle/compiler.py b/django/db/backends/oracle/compiler.py",
                "new file mode 100644",
                "index 0000000000..819f241f80",
                "--- /dev/null",
                "+++ b/django/db/backends/oracle/compiler.py",
                "@@ -0,0 +1,60 @@",
                "+from django.db import NotSupportedError",
                "+from django.db.models.sql import compiler",
                "+",
                "+",
                "+class SQLCompiler(compiler.SQLCompiler):",
                "+    def as_sql(self, with_limits=True, with_col_aliases=False):",
                "+        \"\"\"",
                "+        Create the SQL for this query. Return the SQL string and list of",
                "+        parameters. This is overridden from the original Query class to handle",
                "+        the restriction in Oracle 12.1 and emulate LIMIT and OFFSET with",
                "+        a subquery.",
                "+",
                "+        If 'with_limits' is False, any limit/offset information is not included",
                "+        in the query.",
                "+        \"\"\"",
                "+        # Whether the query must be constructed using limit/offset.",
                "+        do_offset = with_limits and (self.query.high_mark is not None or self.query.low_mark)",
                "+        if not do_offset:",
                "+            sql, params = super().as_sql(with_limits=False, with_col_aliases=with_col_aliases)",
                "+        elif not self.connection.features.supports_select_for_update_with_limit and self.query.select_for_update:",
                "+            raise NotSupportedError(",
                "+                'LIMIT/OFFSET is not supported with select_for_update on this '",
                "+                'database backend.'",
                "+            )",
                "+        else:",
                "+            sql, params = super().as_sql(with_limits=False, with_col_aliases=True)",
                "+            # Wrap the base query in an outer SELECT * with boundaries on",
                "+            # the \"_RN\" column. This is the canonical way to emulate LIMIT",
                "+            # and OFFSET on Oracle.",
                "+            high_where = ''",
                "+            if self.query.high_mark is not None:",
                "+                high_where = 'WHERE ROWNUM <= %d' % (self.query.high_mark,)",
                "+",
                "+            if self.query.low_mark:",
                "+                sql = (",
                "+                    'SELECT * FROM (SELECT \"_SUB\".*, ROWNUM AS \"_RN\" FROM (%s) '",
                "+                    '\"_SUB\" %s) WHERE \"_RN\" > %d' % (sql, high_where, self.query.low_mark)",
                "+                )",
                "+            else:",
                "+                # Simplify the query to support subqueries if there's no offset.",
                "+                sql = (",
                "+                    'SELECT * FROM (SELECT \"_SUB\".* FROM (%s) \"_SUB\" %s)' % (sql, high_where)",
                "+                )",
                "+        return sql, params",
                "+",
                "+",
                "+class SQLInsertCompiler(compiler.SQLInsertCompiler, SQLCompiler):",
                "+    pass",
                "+",
                "+",
                "+class SQLDeleteCompiler(compiler.SQLDeleteCompiler, SQLCompiler):",
                "+    pass",
                "+",
                "+",
                "+class SQLUpdateCompiler(compiler.SQLUpdateCompiler, SQLCompiler):",
                "+    pass",
                "+",
                "+",
                "+class SQLAggregateCompiler(compiler.SQLAggregateCompiler, SQLCompiler):",
                "+    pass",
                "diff --git a/django/db/backends/oracle/features.py b/django/db/backends/oracle/features.py",
                "index cb2fa7d558..6b6a5cdba5 100644",
                "--- a/django/db/backends/oracle/features.py",
                "+++ b/django/db/backends/oracle/features.py",
                "@@ -2,2 +2,3 @@ from django.db.backends.base.features import BaseDatabaseFeatures",
                " from django.db.utils import InterfaceError",
                "+from django.utils.functional import cached_property",
                "@@ -57 +58,9 @@ class DatabaseFeatures(BaseDatabaseFeatures):",
                "     max_query_params = 2**16 - 1",
                "+",
                "+    @cached_property",
                "+    def has_fetch_offset_support(self):",
                "+        return self.connection.oracle_version >= (12, 2)",
                "+",
                "+    @cached_property",
                "+    def allow_sliced_subqueries_with_in(self):",
                "+        return self.has_fetch_offset_support",
                "diff --git a/django/db/backends/oracle/operations.py b/django/db/backends/oracle/operations.py",
                "index 1211b5398f..78df6fefc0 100644",
                "--- a/django/db/backends/oracle/operations.py",
                "+++ b/django/db/backends/oracle/operations.py",
                "@@ -10,2 +10,3 @@ from django.utils import timezone",
                " from django.utils.encoding import force_bytes",
                "+from django.utils.functional import cached_property",
                "@@ -577 +578,7 @@ END;",
                "         return len(objs)",
                "+",
                "+    @cached_property",
                "+    def compiler_module(self):",
                "+        if self.connection.features.has_fetch_offset_support:",
                "+            return super().compiler_module",
                "+        return 'django.db.backends.oracle.compiler'",
                "diff --git a/tests/queries/tests.py b/tests/queries/tests.py",
                "index c592086fd4..29b45cf453 100644",
                "--- a/tests/queries/tests.py",
                "+++ b/tests/queries/tests.py",
                "@@ -1838,11 +1838,11 @@ class Queries6Tests(TestCase):",
                "         generic = NamedCategory.objects.create(name=\"Generic\")",
                "-        t1 = Tag.objects.create(name='t1', category=generic)",
                "-        Tag.objects.create(name='t2', parent=t1, category=generic)",
                "-        t3 = Tag.objects.create(name='t3', parent=t1)",
                "-        t4 = Tag.objects.create(name='t4', parent=t3)",
                "-        Tag.objects.create(name='t5', parent=t3)",
                "+        cls.t1 = Tag.objects.create(name='t1', category=generic)",
                "+        cls.t2 = Tag.objects.create(name='t2', parent=cls.t1, category=generic)",
                "+        cls.t3 = Tag.objects.create(name='t3', parent=cls.t1)",
                "+        cls.t4 = Tag.objects.create(name='t4', parent=cls.t3)",
                "+        cls.t5 = Tag.objects.create(name='t5', parent=cls.t3)",
                "         n1 = Note.objects.create(note='n1', misc='foo', id=1)",
                "-        ann1 = Annotation.objects.create(name='a1', tag=t1)",
                "+        ann1 = Annotation.objects.create(name='a1', tag=cls.t1)",
                "         ann1.notes.add(n1)",
                "-        Annotation.objects.create(name='a2', tag=t4)",
                "+        Annotation.objects.create(name='a2', tag=cls.t4)",
                "@@ -1925,2 +1925,20 @@ class Queries6Tests(TestCase):",
                "+    def test_multiple_columns_with_the_same_name_slice(self):",
                "+        self.assertEqual(",
                "+            list(Tag.objects.order_by('name').values_list('name', 'category__name')[:2]),",
                "+            [('t1', 'Generic'), ('t2', 'Generic')],",
                "+        )",
                "+        self.assertSequenceEqual(",
                "+            Tag.objects.order_by('name').select_related('category')[:2],",
                "+            [self.t1, self.t2],",
                "+        )",
                "+        self.assertEqual(",
                "+            list(Tag.objects.order_by('-name').values_list('name', 'parent__name')[:2]),",
                "+            [('t5', 't3'), ('t4', 't3')],",
                "+        )",
                "+        self.assertSequenceEqual(",
                "+            Tag.objects.order_by('-name').select_related('parent')[:2],",
                "+            [self.t5, self.t4],",
                "+        )",
                "+"
            ],
            "changed_files": [
                "django/db/backends/oracle/compiler.py",
                "django/db/backends/oracle/features.py",
                "django/db/backends/oracle/operations.py",
                "tests/queries/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29630": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: view",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29630",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8ef8bc0f64c463684268a7c55f3d3da4de066c0d",
            "repository": "https://github.com/django/django",
            "timestamp": 1538143032,
            "hunks": 48,
            "message": "Refs #28909 -- Simplifed code using unpacking generalizations.",
            "diff": [
                "diff --git a/django/apps/registry.py b/django/apps/registry.py",
                "index d7ac81af82..464d69a89d 100644",
                "--- a/django/apps/registry.py",
                "+++ b/django/apps/registry.py",
                "@@ -391,3 +391,3 @@ class Apps:",
                "         else:",
                "-            next_model, more_models = model_keys[0], model_keys[1:]",
                "+            next_model, *more_models = model_keys",
                "diff --git a/django/conf/__init__.py b/django/conf/__init__.py",
                "index 05c603786e..062975b1c6 100644",
                "--- a/django/conf/__init__.py",
                "+++ b/django/conf/__init__.py",
                "@@ -184,3 +184,3 @@ class UserSettingsHolder:",
                "         return sorted(",
                "-            s for s in list(self.__dict__) + dir(self.default_settings)",
                "+            s for s in [*self.__dict__, *dir(self.default_settings)]",
                "             if s not in self._deleted",
                "diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py",
                "index fb2fcdd9d6..43a90b302c 100644",
                "--- a/django/contrib/admin/options.py",
                "+++ b/django/contrib/admin/options.py",
                "@@ -258,3 +258,3 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):",
                "             kwargs['widget'] = widgets.ManyToManyRawIdWidget(db_field.remote_field, self.admin_site, using=db)",
                "-        elif db_field.name in list(self.filter_vertical) + list(self.filter_horizontal):",
                "+        elif db_field.name in [*self.filter_vertical, *self.filter_horizontal]:",
                "             kwargs['widget'] = widgets.FilteredSelectMultiple(",
                "@@ -320,3 +320,3 @@ class BaseModelAdmin(metaclass=forms.MediaDefiningClass):",
                "         form = self._get_form_for_get_fields(request, obj)",
                "-        return list(form.base_fields) + list(self.get_readonly_fields(request, obj))",
                "+        return [*form.base_fields, *self.get_readonly_fields(request, obj)]",
                "@@ -726,3 +726,3 @@ class ModelAdmin(BaseModelAdmin):",
                "         if self.get_actions(request):",
                "-            list_display = ['action_checkbox'] + list(list_display)",
                "+            list_display = ['action_checkbox', *list_display]",
                "         sortable_by = self.get_sortable_by(request)",
                "diff --git a/django/contrib/admindocs/views.py b/django/contrib/admindocs/views.py",
                "index 4a70801774..0474c38fd4 100644",
                "--- a/django/contrib/admindocs/views.py",
                "+++ b/django/contrib/admindocs/views.py",
                "@@ -280,3 +280,3 @@ class ModelDetailView(BaseAdminDocsView):",
                "                     print_arguments = ', '.join([",
                "-                        '='.join(list(arg_el[:1]) + [repr(el) for el in arg_el[1:]])",
                "+                        '='.join([arg_el[0], *map(repr, arg_el[1:])])",
                "                         for arg_el in arguments",
                "diff --git a/django/contrib/auth/management/__init__.py b/django/contrib/auth/management/__init__.py",
                "index 7c9618c63b..14c25a7399 100644",
                "--- a/django/contrib/auth/management/__init__.py",
                "+++ b/django/contrib/auth/management/__init__.py",
                "@@ -17,5 +17,3 @@ def _get_all_permissions(opts):",
                "     \"\"\"",
                "-    builtin = _get_builtin_permissions(opts)",
                "-    custom = list(opts.permissions)",
                "-    return builtin + custom",
                "+    return [*_get_builtin_permissions(opts), *opts.permissions]",
                "diff --git a/django/contrib/gis/geos/mutable_list.py b/django/contrib/gis/geos/mutable_list.py",
                "index 3e67906623..b04a2128af 100644",
                "--- a/django/contrib/gis/geos/mutable_list.py",
                "+++ b/django/contrib/gis/geos/mutable_list.py",
                "@@ -111,3 +111,3 @@ class ListMixin:",
                "         'add another list-like object'",
                "-        return self.__class__(list(self) + list(other))",
                "+        return self.__class__([*self, *other])",
                "@@ -115,3 +115,3 @@ class ListMixin:",
                "         'add to another list-like object'",
                "-        return other.__class__(list(other) + list(self))",
                "+        return other.__class__([*other, *self])",
                "diff --git a/django/contrib/gis/geos/polygon.py b/django/contrib/gis/geos/polygon.py",
                "index 9ed3b946bb..d857bf00f3 100644",
                "--- a/django/contrib/gis/geos/polygon.py",
                "+++ b/django/contrib/gis/geos/polygon.py",
                "@@ -33,4 +33,3 @@ class Polygon(GEOSGeometry):",
                "         # Getting the ext_ring and init_holes parameters from the argument list",
                "-        ext_ring = args[0]",
                "-        init_holes = args[1:]",
                "+        ext_ring, *init_holes = args",
                "         n_holes = len(init_holes)",
                "@@ -46,3 +45,3 @@ class Polygon(GEOSGeometry):",
                "-        polygon = self._create_polygon(n_holes + 1, (ext_ring,) + init_holes)",
                "+        polygon = self._create_polygon(n_holes + 1, [ext_ring, *init_holes])",
                "         super().__init__(polygon, **kwargs)",
                "diff --git a/django/contrib/gis/serializers/geojson.py b/django/contrib/gis/serializers/geojson.py",
                "index 4a62ea4251..3cd015479c 100644",
                "--- a/django/contrib/gis/serializers/geojson.py",
                "+++ b/django/contrib/gis/serializers/geojson.py",
                "@@ -15,3 +15,3 @@ class Serializer(JSONSerializer):",
                "                 self.geometry_field not in self.selected_fields):",
                "-            self.selected_fields = list(self.selected_fields) + [self.geometry_field]",
                "+            self.selected_fields = [*self.selected_fields, self.geometry_field]",
                "diff --git a/django/contrib/postgres/fields/array.py b/django/contrib/postgres/fields/array.py",
                "index a6079466af..b87575235e 100644",
                "--- a/django/contrib/postgres/fields/array.py",
                "+++ b/django/contrib/postgres/fields/array.py",
                "@@ -30,4 +30,3 @@ class ArrayField(CheckFieldDefaultMixin, Field):",
                "         if self.size:",
                "-            self.default_validators = self.default_validators[:]",
                "-            self.default_validators.append(ArrayMaxLengthValidator(self.size))",
                "+            self.default_validators = [*self.default_validators, ArrayMaxLengthValidator(self.size)]",
                "         # For performance, only add a from_db_value() method if the base field",
                "diff --git a/django/core/handlers/wsgi.py b/django/core/handlers/wsgi.py",
                "index 0b6be82607..47b008a004 100644",
                "--- a/django/core/handlers/wsgi.py",
                "+++ b/django/core/handlers/wsgi.py",
                "@@ -145,5 +145,6 @@ class WSGIHandler(base.BaseHandler):",
                "         status = '%d %s' % (response.status_code, response.reason_phrase)",
                "-        response_headers = list(response.items())",
                "-        for c in response.cookies.values():",
                "-            response_headers.append(('Set-Cookie', c.output(header='')))",
                "+        response_headers = [",
                "+            *response.items(),",
                "+            *(('Set-Cookie', c.output(header='')) for c in response.cookies.values()),",
                "+        ]",
                "         start_response(status, response_headers)",
                "diff --git a/django/core/management/__init__.py b/django/core/management/__init__.py",
                "index b4c28b3e62..e0c924bdac 100644",
                "--- a/django/core/management/__init__.py",
                "+++ b/django/core/management/__init__.py",
                "@@ -259,3 +259,3 @@ class ManagementUtility:",
                "-        subcommands = list(get_commands()) + ['help']",
                "+        subcommands = [*get_commands(), 'help']",
                "         options = [('--help', False)]",
                "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py",
                "index 7ca54e7f75..9b13bb9a3c 100644",
                "--- a/django/db/migrations/operations/models.py",
                "+++ b/django/db/migrations/operations/models.py",
                "@@ -737,5 +737,3 @@ class AddIndex(IndexOperation):",
                "         model_state = state.models[app_label, self.model_name_lower]",
                "-        indexes = list(model_state.options[self.option_name])",
                "-        indexes.append(self.index.clone())",
                "-        model_state.options[self.option_name] = indexes",
                "+        model_state.options[self.option_name] = [*model_state.options[self.option_name], self.index.clone()]",
                "         state.reload_model(app_label, self.model_name_lower, delay=True)",
                "@@ -822,5 +820,3 @@ class AddConstraint(IndexOperation):",
                "         model_state = state.models[app_label, self.model_name_lower]",
                "-        constraints = list(model_state.options[self.option_name])",
                "-        constraints.append(self.constraint)",
                "-        model_state.options[self.option_name] = constraints",
                "+        model_state.options[self.option_name] = [*model_state.options[self.option_name], self.constraint]",
                "diff --git a/django/db/migrations/state.py b/django/db/migrations/state.py",
                "index ea2db0e5af..b2671d0819 100644",
                "--- a/django/db/migrations/state.py",
                "+++ b/django/db/migrations/state.py",
                "@@ -263,3 +263,3 @@ class StateApps(Apps):",
                "         app_labels = {model_state.app_label for model_state in models.values()}",
                "-        app_configs = [AppConfigStub(label) for label in sorted(real_apps + list(app_labels))]",
                "+        app_configs = [AppConfigStub(label) for label in sorted([*real_apps, *app_labels])]",
                "         super().__init__(app_configs)",
                "@@ -270,3 +270,3 @@ class StateApps(Apps):",
                "-        self.render_multiple(list(models.values()) + self.real_models)",
                "+        self.render_multiple([*models.values(), *self.real_models])",
                "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py",
                "index 9a9c036f86..2532431821 100644",
                "--- a/django/db/models/expressions.py",
                "+++ b/django/db/models/expressions.py",
                "@@ -949,4 +949,3 @@ class Case(Expression):",
                "     def set_source_expressions(self, exprs):",
                "-        self.cases = exprs[:-1]",
                "-        self.default = exprs[-1]",
                "+        *self.cases, self.default = exprs",
                "diff --git a/django/db/models/query.py b/django/db/models/query.py",
                "index db1dc998fa..d0bec5a35f 100644",
                "--- a/django/db/models/query.py",
                "+++ b/django/db/models/query.py",
                "@@ -98,9 +98,8 @@ class ValuesIterable(BaseIterable):",
                "-        field_names = list(query.values_select)",
                "-        extra_names = list(query.extra_select)",
                "-        annotation_names = list(query.annotation_select)",
                "-",
                "         # extra(select=...) cols are always at the start of the row.",
                "-        names = extra_names + field_names + annotation_names",
                "-",
                "+        names = [",
                "+            *query.extra_select,",
                "+            *query.values_select,",
                "+            *query.annotation_select,",
                "+        ]",
                "         indexes = range(len(names))",
                "@@ -122,10 +121,9 @@ class ValuesListIterable(BaseIterable):",
                "         if queryset._fields:",
                "-            field_names = list(query.values_select)",
                "-            extra_names = list(query.extra_select)",
                "-            annotation_names = list(query.annotation_select)",
                "-",
                "             # extra(select=...) cols are always at the start of the row.",
                "-            names = extra_names + field_names + annotation_names",
                "-",
                "-            fields = list(queryset._fields) + [f for f in annotation_names if f not in queryset._fields]",
                "+            names = [",
                "+                *query.extra_select,",
                "+                *query.values_select,",
                "+                *query.annotation_select,",
                "+            ]",
                "+            fields = [*queryset._fields, *(f for f in query.annotation_select if f not in queryset._fields)]",
                "             if fields != names:",
                "@@ -354,3 +352,3 @@ class QuerySet:",
                "             raise NotImplementedError(\"aggregate() + distinct(fields) not implemented.\")",
                "-        self._validate_values_are_expressions(args + tuple(kwargs.values()), method_name='aggregate')",
                "+        self._validate_values_are_expressions((*args, *kwargs.values()), method_name='aggregate')",
                "         for arg in args:",
                "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py",
                "index 8c41116d69..ce311639da 100644",
                "--- a/django/db/models/query_utils.py",
                "+++ b/django/db/models/query_utils.py",
                "@@ -60,3 +60,3 @@ class Q(tree.Node):",
                "         negated = kwargs.pop('_negated', False)",
                "-        super().__init__(children=list(args) + sorted(kwargs.items()), connector=connector, negated=negated)",
                "+        super().__init__(children=[*args, *sorted(kwargs.items())], connector=connector, negated=negated)",
                "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py",
                "index 81f6f196d3..beb57f8ecd 100644",
                "--- a/django/db/models/sql/query.py",
                "+++ b/django/db/models/sql/query.py",
                "@@ -1098,4 +1098,4 @@ class Query:",
                "         # __exact is the default lookup if one isn't given.",
                "-        lookups = lookups or ['exact']",
                "-        for name in lookups[:-1]:",
                "+        *transforms, lookup_name = lookups or ['exact']",
                "+        for name in transforms:",
                "             lhs = self.try_transform(lhs, name)",
                "@@ -1103,3 +1103,2 @@ class Query:",
                "         # supports both transform and lookup for the name.",
                "-        lookup_name = lookups[-1]",
                "         lookup_class = lhs.get_lookup(lookup_name)",
                "@@ -1408,7 +1407,7 @@ class Query:",
                "                 if pos == -1 or fail_on_missing:",
                "-                    field_names = list(get_field_names_from_opts(opts))",
                "-                    available = sorted(",
                "-                        field_names + list(self.annotation_select) +",
                "-                        list(self._filtered_relations)",
                "-                    )",
                "+                    available = sorted([",
                "+                        *get_field_names_from_opts(opts),",
                "+                        *self.annotation_select,",
                "+                        *self._filtered_relations,",
                "+                    ])",
                "                     raise FieldError(\"Cannot resolve keyword '%s' into field. \"",
                "@@ -1778,6 +1777,6 @@ class Query:",
                "             else:",
                "-                names = sorted(",
                "-                    list(get_field_names_from_opts(opts)) + list(self.extra) +",
                "-                    list(self.annotation_select) + list(self._filtered_relations)",
                "-                )",
                "+                names = sorted([",
                "+                    *get_field_names_from_opts(opts), *self.extra,",
                "+                    *self.annotation_select, *self._filtered_relations",
                "+                ])",
                "                 raise FieldError(\"Cannot resolve keyword %r into field. \"",
                "diff --git a/django/template/engine.py b/django/template/engine.py",
                "index 381d656bbb..dfaa67ba12 100644",
                "--- a/django/template/engine.py",
                "+++ b/django/template/engine.py",
                "@@ -109,4 +109,3 @@ class Engine:",
                "         if isinstance(loader, (tuple, list)):",
                "-            args = list(loader[1:])",
                "-            loader = loader[0]",
                "+            loader, *args = loader",
                "         else:",
                "diff --git a/django/utils/html.py b/django/utils/html.py",
                "index b230c5faec..e68e25443f 100644",
                "--- a/django/utils/html.py",
                "+++ b/django/utils/html.py",
                "@@ -135,4 +135,5 @@ def format_html_join(sep, format_string, args_generator):",
                "     return mark_safe(conditional_escape(sep).join(",
                "-        format_html(format_string, *tuple(args))",
                "-        for args in args_generator))",
                "+        format_html(format_string, *args)",
                "+        for args in args_generator",
                "+    ))",
                "diff --git a/django/utils/translation/trans_real.py b/django/utils/translation/trans_real.py",
                "index 266843aa1d..c06ca34153 100644",
                "--- a/django/utils/translation/trans_real.py",
                "+++ b/django/utils/translation/trans_real.py",
                "@@ -362,3 +362,3 @@ def all_locale_paths():",
                "             app_paths.append(locale_path)",
                "-    return [globalpath] + list(settings.LOCALE_PATHS) + app_paths",
                "+    return [globalpath, *settings.LOCALE_PATHS, *app_paths]",
                "diff --git a/django/utils/tree.py b/django/utils/tree.py",
                "index 421ad5cd3c..cb45c7ee29 100644",
                "--- a/django/utils/tree.py",
                "+++ b/django/utils/tree.py",
                "@@ -73,3 +73,3 @@ class Node:",
                "     def __hash__(self):",
                "-        return hash((self.__class__, self.connector, self.negated) + tuple([",
                "+        return hash((self.__class__, self.connector, self.negated, *[",
                "             tuple(child) if isinstance(child, list) else child",
                "diff --git a/tests/file_storage/tests.py b/tests/file_storage/tests.py",
                "index 6253036679..7957323299 100644",
                "--- a/tests/file_storage/tests.py",
                "+++ b/tests/file_storage/tests.py",
                "@@ -546,4 +546,3 @@ class CustomStorage(FileSystemStorage):",
                "         \"\"\"",
                "-        parts = name.split('.')",
                "-        basename, ext = parts[0], parts[1:]",
                "+        basename, *ext = name.split('.')",
                "         number = 2",
                "diff --git a/tests/forms_tests/tests/test_forms.py b/tests/forms_tests/tests/test_forms.py",
                "index 914f2b5345..ba233e72ff 100644",
                "--- a/tests/forms_tests/tests/test_forms.py",
                "+++ b/tests/forms_tests/tests/test_forms.py",
                "@@ -1568,3 +1568,3 @@ value=\"Should escape &lt; &amp; &gt; and &lt;script&gt;alert(&#39;xss&#39;)&lt;/",
                "         p = TestFormInit()",
                "-        order = list(TestForm.field_order) + ['field1']",
                "+        order = [*TestForm.field_order, 'field1']",
                "         self.assertEqual(list(p.fields), order)",
                "diff --git a/tests/gis_tests/geos_tests/test_geos.py b/tests/gis_tests/geos_tests/test_geos.py",
                "index 62589eee9d..6818339a9b 100644",
                "--- a/tests/gis_tests/geos_tests/test_geos.py",
                "+++ b/tests/gis_tests/geos_tests/test_geos.py",
                "@@ -478,4 +478,4 @@ class GEOSTest(SimpleTestCase, TestDataMixin):",
                "             # Polygon(shell, (hole1, ... holeN))",
                "-            rings = tuple(r for r in poly)",
                "-            self.assertEqual(poly, Polygon(rings[0], rings[1:]))",
                "+            ext_ring, *int_rings = poly",
                "+            self.assertEqual(poly, Polygon(ext_ring, int_rings))",
                "diff --git a/tests/gis_tests/geos_tests/test_mutable_list.py b/tests/gis_tests/geos_tests/test_mutable_list.py",
                "index 1e51a19985..bb085b2fb2 100644",
                "--- a/tests/gis_tests/geos_tests/test_mutable_list.py",
                "+++ b/tests/gis_tests/geos_tests/test_mutable_list.py",
                "@@ -74,3 +74,3 @@ class ListMixinTest(unittest.TestCase):",
                "     def step_range(self):",
                "-        return list(range(-1 - self.limit, 0)) + list(range(1, 1 + self.limit))",
                "+        return [*range(-1 - self.limit, 0), *range(1, 1 + self.limit)]",
                "@@ -174,3 +174,3 @@ class ListMixinTest(unittest.TestCase):",
                "                     self.assertEqual(pl[:], ul[:], 'del slice [%d:%d]' % (i, j))",
                "-                    for k in list(range(-Len - 1, 0)) + list(range(1, Len)):",
                "+                    for k in [*range(-Len - 1, 0), *range(1, Len)]:",
                "                         pl, ul = self.lists_of_len(Len)",
                "@@ -180,3 +180,3 @@ class ListMixinTest(unittest.TestCase):",
                "-                for k in list(range(-Len - 1, 0)) + list(range(1, Len)):",
                "+                for k in [*range(-Len - 1, 0), *range(1, Len)]:",
                "                     pl, ul = self.lists_of_len(Len)",
                "@@ -191,3 +191,3 @@ class ListMixinTest(unittest.TestCase):",
                "-            for k in list(range(-Len - 1, 0)) + list(range(1, Len)):",
                "+            for k in [*range(-Len - 1, 0), *range(1, Len)]:",
                "                 pl, ul = self.lists_of_len(Len)",
                "diff --git a/tests/model_fields/test_field_flags.py b/tests/model_fields/test_field_flags.py",
                "index 26a345ea5c..0e9256207c 100644",
                "--- a/tests/model_fields/test_field_flags.py",
                "+++ b/tests/model_fields/test_field_flags.py",
                "@@ -78,17 +78,17 @@ class FieldFlagsTests(test.SimpleTestCase):",
                "         super().setUpClass()",
                "-        cls.fields = (",
                "-            list(AllFieldsModel._meta.fields) +",
                "-            list(AllFieldsModel._meta.private_fields)",
                "-        )",
                "+        cls.fields = [",
                "+            *AllFieldsModel._meta.fields,",
                "+            *AllFieldsModel._meta.private_fields,",
                "+        ]",
                "-        cls.all_fields = (",
                "-            cls.fields +",
                "-            list(AllFieldsModel._meta.many_to_many) +",
                "-            list(AllFieldsModel._meta.private_fields)",
                "-        )",
                "+        cls.all_fields = [",
                "+            *cls.fields,",
                "+            *AllFieldsModel._meta.many_to_many,",
                "+            *AllFieldsModel._meta.private_fields,",
                "+        ]",
                "-        cls.fields_and_reverse_objects = (",
                "-            cls.all_fields +",
                "-            list(AllFieldsModel._meta.related_objects)",
                "-        )",
                "+        cls.fields_and_reverse_objects = [",
                "+            *cls.all_fields,",
                "+            *AllFieldsModel._meta.related_objects,",
                "+        ]",
                "diff --git a/tests/template_tests/templatetags/custom.py b/tests/template_tests/templatetags/custom.py",
                "index 45acd9655e..eaaff193ee 100644",
                "--- a/tests/template_tests/templatetags/custom.py",
                "+++ b/tests/template_tests/templatetags/custom.py",
                "@@ -113,3 +113,3 @@ def simple_unlimited_args(one, two='hi', *args):",
                "     return \"simple_unlimited_args - Expected result: %s\" % (",
                "-        ', '.join(str(arg) for arg in [one, two] + list(args))",
                "+        ', '.join(str(arg) for arg in [one, two, *args])",
                "     )",
                "@@ -135,3 +135,3 @@ def simple_unlimited_args_kwargs(one, two='hi', *args, **kwargs):",
                "     return \"simple_unlimited_args_kwargs - Expected result: %s / %s\" % (",
                "-        ', '.join(str(arg) for arg in [one, two] + list(args)),",
                "+        ', '.join(str(arg) for arg in [one, two, *args]),",
                "         ', '.join('%s=%s' % (k, v) for (k, v) in sorted_kwarg)",
                "diff --git a/tests/template_tests/templatetags/inclusion.py b/tests/template_tests/templatetags/inclusion.py",
                "index 60f654ec00..242fbe80cb 100644",
                "--- a/tests/template_tests/templatetags/inclusion.py",
                "+++ b/tests/template_tests/templatetags/inclusion.py",
                "@@ -153,3 +153,3 @@ def inclusion_unlimited_args(one, two='hi', *args):",
                "             \"inclusion_unlimited_args - Expected result: %s\" % (",
                "-                ', '.join(str(arg) for arg in [one, two] + list(args))",
                "+                ', '.join(str(arg) for arg in [one, two, *args])",
                "             )",
                "@@ -168,3 +168,3 @@ def inclusion_unlimited_args_from_template(one, two='hi', *args):",
                "             \"inclusion_unlimited_args_from_template - Expected result: %s\" % (",
                "-                ', '.join(str(arg) for arg in [one, two] + list(args))",
                "+                ', '.join(str(arg) for arg in [one, two, *args])",
                "             )",
                "@@ -218,3 +218,3 @@ def inclusion_unlimited_args_kwargs(one, two='hi', *args, **kwargs):",
                "     return {\"result\": \"inclusion_unlimited_args_kwargs - Expected result: %s / %s\" % (",
                "-        ', '.join(str(arg) for arg in [one, two] + list(args)),",
                "+        ', '.join(str(arg) for arg in [one, two, *args]),",
                "         ', '.join('%s=%s' % (k, v) for (k, v) in sorted_kwarg)",
                "diff --git a/tests/utils_tests/test_baseconv.py b/tests/utils_tests/test_baseconv.py",
                "index 948b991ad3..b6bfc5ef20 100644",
                "--- a/tests/utils_tests/test_baseconv.py",
                "+++ b/tests/utils_tests/test_baseconv.py",
                "@@ -10,3 +10,3 @@ class TestBaseConv(TestCase):",
                "     def test_baseconv(self):",
                "-        nums = [-10 ** 10, 10 ** 10] + list(range(-100, 100))",
                "+        nums = [-10 ** 10, 10 ** 10, *range(-100, 100)]",
                "         for converter in [base2, base16, base36, base56, base62, base64]:"
            ],
            "changed_files": [
                "django/apps/registry.py",
                "django/conf/__init__.py",
                "django/contrib/admin/options.py",
                "django/contrib/admindocs/views.py",
                "django/contrib/auth/management/__init__.py",
                "django/contrib/gis/geos/mutable_list.py",
                "django/contrib/gis/geos/polygon.py",
                "django/contrib/gis/serializers/geojson.py",
                "django/contrib/postgres/fields/array.py",
                "django/core/handlers/wsgi.py",
                "django/core/management/__init__.py",
                "django/db/migrations/operations/models.py",
                "django/db/migrations/state.py",
                "django/db/models/expressions.py",
                "django/db/models/query.py",
                "django/db/models/query_utils.py",
                "django/db/models/sql/query.py",
                "django/template/engine.py",
                "django/utils/html.py",
                "django/utils/translation/trans_real.py",
                "django/utils/tree.py",
                "tests/file_storage/tests.py",
                "tests/forms_tests/tests/test_forms.py",
                "tests/gis_tests/geos_tests/test_geos.py",
                "tests/gis_tests/geos_tests/test_mutable_list.py",
                "tests/model_fields/test_field_flags.py",
                "tests/template_tests/templatetags/custom.py",
                "tests/template_tests/templatetags/inclusion.py",
                "tests/utils_tests/test_baseconv.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "28909": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: view, admin",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 28909",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f5335bc745d4f86d355b69549712885fd1634574",
            "repository": "https://github.com/django/django",
            "timestamp": 1537988803,
            "hunks": 2,
            "message": "[2.1.x] Fixed #29683 -- Added view permission to docs. Backport of e40e7026cad400d720963aea0ba156a19f83b058 from master.",
            "diff": [
                "diff --git a/django/contrib/auth/models.py b/django/contrib/auth/models.py",
                "index cc4f48861a..3e28da2ad4 100644",
                "--- a/django/contrib/auth/models.py",
                "+++ b/django/contrib/auth/models.py",
                "@@ -45,2 +45,3 @@ class Permission(models.Model):",
                "         - The \"delete\" permission limits the ability to delete an object.",
                "+        - The \"view\" permission limits the ability to view an object.",
                "@@ -52,4 +53,3 @@ class Permission(models.Model):",
                "-    Three basic permissions -- add, change and delete -- are automatically",
                "-    created for each Django model.",
                "+    The permissions listed above are automatically created for each model.",
                "     \"\"\""
            ],
            "changed_files": [
                "django/contrib/auth/models.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29683": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: view, permission",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29683",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "fc3a463048e52969f208a3e7821138d92b485aa6",
            "repository": "https://github.com/django/django",
            "timestamp": 1537271950,
            "hunks": 6,
            "message": "Fixed #29767 -- Made date-related casts work on SQLite Thanks R\u00c3\u00a9my Hubscher for the report and Tim Graham and Simon Charette for the reviews.",
            "diff": [
                "diff --git a/django/db/backends/base/features.py b/django/db/backends/base/features.py",
                "index 18a3350994..3dd55e80b9 100644",
                "--- a/django/db/backends/base/features.py",
                "+++ b/django/db/backends/base/features.py",
                "@@ -242,2 +242,6 @@ class BaseDatabaseFeatures:",
                "+    # How many second decimals does the database return when casting a value to",
                "+    # a type with time?",
                "+    time_cast_precision = 6",
                "+",
                "     # SQL to create a procedure for use by the Django test suite. The",
                "diff --git a/django/db/backends/sqlite3/features.py b/django/db/backends/sqlite3/features.py",
                "index 770b40a1ba..6cf23e08ce 100644",
                "--- a/django/db/backends/sqlite3/features.py",
                "+++ b/django/db/backends/sqlite3/features.py",
                "@@ -29,2 +29,3 @@ class DatabaseFeatures(BaseDatabaseFeatures):",
                "     supports_cast_with_precision = False",
                "+    time_cast_precision = 3",
                "     uses_savepoints = True",
                "diff --git a/django/db/models/functions/comparison.py b/django/db/models/functions/comparison.py",
                "index aa733816ec..44f269369d 100644",
                "--- a/django/db/models/functions/comparison.py",
                "+++ b/django/db/models/functions/comparison.py",
                "@@ -16,2 +16,16 @@ class Cast(Func):",
                "+    def as_sqlite(self, compiler, connection, **extra_context):",
                "+        db_type = self.output_field.db_type(connection)",
                "+        if db_type in {'datetime', 'time'}:",
                "+            # Use strftime as datetime/time don't keep fractional seconds.",
                "+            template = 'strftime(%%s, %(expressions)s)'",
                "+            sql, params = super().as_sql(compiler, connection, template=template, **extra_context)",
                "+            format_string = '%H:%M:%f' if db_type == 'time' else '%Y-%m-%d %H:%M:%f'",
                "+            params.insert(0, format_string)",
                "+            return sql, params",
                "+        elif db_type == 'date':",
                "+            template = 'date(%(expressions)s)'",
                "+            return super().as_sql(compiler, connection, template=template, **extra_context)",
                "+        return self.as_sql(compiler, connection, **extra_context)",
                "+",
                "     def as_mysql(self, compiler, connection, **extra_context):",
                "diff --git a/tests/db_functions/comparison/test_cast.py b/tests/db_functions/comparison/test_cast.py",
                "index ffbb357835..dafe0fa9aa 100644",
                "--- a/tests/db_functions/comparison/test_cast.py",
                "+++ b/tests/db_functions/comparison/test_cast.py",
                "@@ -12,3 +12,3 @@ from django.test import (",
                "-from ..models import Author",
                "+from ..models import Author, DTModel, Fan",
                "@@ -53,2 +53,36 @@ class CastTests(TestCase):",
                "+    def test_cast_from_db_datetime_to_date(self):",
                "+        dt_value = datetime.datetime(2018, 9, 28, 12, 42, 10, 234567)",
                "+        DTModel.objects.create(start_datetime=dt_value)",
                "+        dtm = DTModel.objects.annotate(",
                "+            start_datetime_as_date=Cast('start_datetime', models.DateField())",
                "+        ).first()",
                "+        self.assertEqual(dtm.start_datetime_as_date, datetime.date(2018, 9, 28))",
                "+",
                "+    def test_cast_from_db_datetime_to_time(self):",
                "+        dt_value = datetime.datetime(2018, 9, 28, 12, 42, 10, 234567)",
                "+        DTModel.objects.create(start_datetime=dt_value)",
                "+        dtm = DTModel.objects.annotate(",
                "+            start_datetime_as_time=Cast('start_datetime', models.TimeField())",
                "+        ).first()",
                "+        rounded_ms = int(round(.234567, connection.features.time_cast_precision) * 10**6)",
                "+        self.assertEqual(dtm.start_datetime_as_time, datetime.time(12, 42, 10, rounded_ms))",
                "+",
                "+    def test_cast_from_db_date_to_datetime(self):",
                "+        dt_value = datetime.date(2018, 9, 28)",
                "+        DTModel.objects.create(start_date=dt_value)",
                "+        dtm = DTModel.objects.annotate(start_as_datetime=Cast('start_date', models.DateTimeField())).first()",
                "+        self.assertEqual(dtm.start_as_datetime, datetime.datetime(2018, 9, 28, 0, 0, 0, 0))",
                "+",
                "+    def test_cast_from_db_datetime_to_date_group_by(self):",
                "+        author = Author.objects.create(name='John Smith', age=45)",
                "+        dt_value = datetime.datetime(2018, 9, 28, 12, 42, 10, 234567)",
                "+        Fan.objects.create(name='Margaret', age=50, author=author, fan_since=dt_value)",
                "+        fans = Fan.objects.values('author').annotate(",
                "+            fan_for_day=Cast('fan_since', models.DateField()),",
                "+            fans=models.Count('*')",
                "+        ).values()",
                "+        self.assertEqual(fans[0]['fan_for_day'], datetime.date(2018, 9, 28))",
                "+        self.assertEqual(fans[0]['fans'], 1)",
                "+",
                "     def test_cast_from_python_to_date(self):",
                "@@ -61,3 +95,6 @@ class CastTests(TestCase):",
                "         dates = Author.objects.annotate(cast_datetime=Cast(now, models.DateTimeField()))",
                "-        self.assertEqual(dates.get().cast_datetime, now)",
                "+        time_precision = datetime.timedelta(",
                "+            microseconds=10**(6 - connection.features.time_cast_precision)",
                "+        )",
                "+        self.assertAlmostEqual(dates.get().cast_datetime, now, delta=time_precision)"
            ],
            "changed_files": [
                "django/db/backends/base/features.py",
                "django/db/backends/sqlite3/features.py",
                "django/db/models/functions/comparison.py",
                "tests/db_functions/comparison/test_cast.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29767": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: view",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29767",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bf8b625a3bb6c2cb5f1be3713f3bafe2c1050366",
            "repository": "https://github.com/django/django",
            "timestamp": 1536711815,
            "hunks": 6,
            "message": "Refs #29722 -- Added introspection of materialized views for PostgreSQL.",
            "diff": [
                "diff --git a/django/db/backends/postgresql/introspection.py b/django/db/backends/postgresql/introspection.py",
                "index c20d7b659e..77db6d5cbf 100644",
                "--- a/django/db/backends/postgresql/introspection.py",
                "+++ b/django/db/backends/postgresql/introspection.py",
                "@@ -46,3 +46,3 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "             LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace",
                "-            WHERE c.relkind IN ('f', 'r', 'v')",
                "+            WHERE c.relkind IN ('f', 'm', 'r', 'v')",
                "                 AND n.nspname NOT IN ('pg_catalog', 'pg_toast')",
                "@@ -50,3 +50,3 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "         \"\"\")",
                "-        mapping = {'f': 't', 'r': 't', 'v': 'v'}",
                "+        mapping = {'f': 't', 'm': 'v', 'r': 't', 'v': 'v'}",
                "         return [",
                "@@ -61,14 +61,23 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "         \"\"\"",
                "-        # As cursor.description does not return reliably the nullable property,",
                "-        # we have to query the information_schema (#7783)",
                "+        # Query the pg_catalog tables as cursor.description does not reliably",
                "+        # return the nullable property and information_schema.columns does not",
                "+        # contain details of materialized views.",
                "         cursor.execute(\"\"\"",
                "-            SELECT column_name, is_nullable, column_default",
                "-            FROM information_schema.columns",
                "-            WHERE table_name = %s\"\"\", [table_name])",
                "+            SELECT",
                "+                a.attname AS column_name,",
                "+                NOT (a.attnotnull OR (t.typtype = 'd' AND t.typnotnull)) AS is_nullable,",
                "+                pg_get_expr(ad.adbin, ad.adrelid) AS column_default",
                "+            FROM pg_attribute a",
                "+            LEFT JOIN pg_attrdef ad ON a.attrelid = ad.adrelid AND a.attnum = ad.adnum",
                "+            JOIN pg_type t ON a.atttypid = t.oid",
                "+            JOIN pg_class c ON a.attrelid = c.oid",
                "+            JOIN pg_namespace n ON c.relnamespace = n.oid",
                "+            WHERE c.relkind IN ('f', 'm', 'r', 'v')",
                "+                AND c.relname = %s",
                "+                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')",
                "+                AND pg_catalog.pg_table_is_visible(c.oid)",
                "+        \"\"\", [table_name])",
                "         field_map = {line[0]: line[1:] for line in cursor.fetchall()}",
                "         cursor.execute(\"SELECT * FROM %s LIMIT 1\" % self.connection.ops.quote_name(table_name))",
                "-        return [",
                "-            FieldInfo(*line[0:6], field_map[line.name][0] == 'YES', field_map[line.name][1])",
                "-            for line in cursor.description",
                "-        ]",
                "+        return [FieldInfo(*line[0:6], *field_map[line.name]) for line in cursor.description]",
                "diff --git a/tests/inspectdb/tests.py b/tests/inspectdb/tests.py",
                "index 83c49eb7e3..849773ef9e 100644",
                "--- a/tests/inspectdb/tests.py",
                "+++ b/tests/inspectdb/tests.py",
                "@@ -312,2 +312,26 @@ class InspectDBTransactionalTests(TransactionTestCase):",
                "+    @skipUnless(connection.vendor == 'postgresql', 'PostgreSQL specific SQL')",
                "+    def test_include_materialized_views(self):",
                "+        \"\"\"inspectdb --include-views creates models for database materialized views.\"\"\"",
                "+        with connection.cursor() as cursor:",
                "+            cursor.execute(",
                "+                'CREATE MATERIALIZED VIEW inspectdb_people_materialized_view AS '",
                "+                'SELECT id, name FROM inspectdb_people'",
                "+            )",
                "+        out = StringIO()",
                "+        view_model = 'class InspectdbPeopleMaterializedView(models.Model):'",
                "+        view_managed = 'managed = False  # Created from a view.'",
                "+        try:",
                "+            call_command('inspectdb', table_name_filter=inspectdb_tables_only, stdout=out)",
                "+            no_views_output = out.getvalue()",
                "+            self.assertNotIn(view_model, no_views_output)",
                "+            self.assertNotIn(view_managed, no_views_output)",
                "+            call_command('inspectdb', table_name_filter=inspectdb_tables_only, include_views=True, stdout=out)",
                "+            with_views_output = out.getvalue()",
                "+            self.assertIn(view_model, with_views_output)",
                "+            self.assertIn(view_managed, with_views_output)",
                "+        finally:",
                "+            with connection.cursor() as cursor:",
                "+                cursor.execute('DROP MATERIALIZED VIEW IF EXISTS inspectdb_people_materialized_view')",
                "+",
                "     @skipUnless(connection.vendor == 'postgresql', 'PostgreSQL specific SQL')"
            ],
            "changed_files": [
                "django/db/backends/postgresql/introspection.py",
                "tests/inspectdb/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29722": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: view",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29722",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ad9a28ee38e3352b16cc6c9ae7f55f90c64710cc",
            "repository": "https://github.com/django/django",
            "timestamp": 1537666238,
            "hunks": 7,
            "message": "Refs #29784 -- Normalized Python docs links to omit the version.",
            "diff": [
                "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py",
                "index befade160f..b603cc9a15 100644",
                "--- a/django/conf/global_settings.py",
                "+++ b/django/conf/global_settings.py",
                "@@ -306,3 +306,3 @@ FILE_UPLOAD_TEMP_DIR = None",
                " # The numeric mode to set newly-uploaded files to. The value should be a mode",
                "-# you'd pass directly to os.chmod; see https://docs.python.org/3/library/os.html#files-and-directories.",
                "+# you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.",
                " FILE_UPLOAD_PERMISSIONS = None",
                "@@ -311,3 +311,3 @@ FILE_UPLOAD_PERMISSIONS = None",
                " # The value should be a mode as you'd pass to os.chmod;",
                "-# see https://docs.python.org/3/library/os.html#files-and-directories.",
                "+# see https://docs.python.org/library/os.html#files-and-directories.",
                " FILE_UPLOAD_DIRECTORY_PERMISSIONS = None",
                "diff --git a/django/contrib/admin/models.py b/django/contrib/admin/models.py",
                "index c7bac4061e..f0138435ca 100644",
                "--- a/django/contrib/admin/models.py",
                "+++ b/django/contrib/admin/models.py",
                "@@ -56,3 +56,3 @@ class LogEntry(models.Model):",
                "     object_id = models.TextField(_('object id'), blank=True, null=True)",
                "-    # Translators: 'repr' means representation (https://docs.python.org/3/library/functions.html#repr)",
                "+    # Translators: 'repr' means representation (https://docs.python.org/library/functions.html#repr)",
                "     object_repr = models.CharField(_('object repr'), max_length=200)",
                "diff --git a/django/contrib/gis/db/backends/postgis/const.py b/django/contrib/gis/db/backends/postgis/const.py",
                "index 0d6d809ec3..4b511eb149 100644",
                "--- a/django/contrib/gis/db/backends/postgis/const.py",
                "+++ b/django/contrib/gis/db/backends/postgis/const.py",
                "@@ -29,3 +29,3 @@ GDAL_TO_STRUCT = [",
                " # when decomposing them into GDALRasters.",
                "-# See https://docs.python.org/3/library/struct.html#format-characters",
                "+# See https://docs.python.org/library/struct.html#format-characters",
                " STRUCT_SIZE = {",
                "diff --git a/django/http/response.py b/django/http/response.py",
                "index 266c6efb73..f303852a40 100644",
                "--- a/django/http/response.py",
                "+++ b/django/http/response.py",
                "@@ -240,3 +240,3 @@ class HttpResponseBase:",
                "     # These methods partially implement the file-like object interface.",
                "-    # See https://docs.python.org/3/library/io.html#io.IOBase",
                "+    # See https://docs.python.org/library/io.html#io.IOBase",
                "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py",
                "index 1479da8788..ae76910a37 100644",
                "--- a/django/template/defaultfilters.py",
                "+++ b/django/template/defaultfilters.py",
                "@@ -227,3 +227,3 @@ def stringformat(value, arg):",
                "-    See https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting",
                "+    See https://docs.python.org/library/stdtypes.html#printf-style-string-formatting",
                "     for documentation of Python string formatting.",
                "diff --git a/tests/test_runner_apps/sample/doctests.py b/tests/test_runner_apps/sample/doctests.py",
                "index 6d9403442c..8707ecaf86 100644",
                "--- a/tests/test_runner_apps/sample/doctests.py",
                "+++ b/tests/test_runner_apps/sample/doctests.py",
                "@@ -2,3 +2,3 @@",
                " Doctest example from the official Python documentation.",
                "-https://docs.python.org/3/library/doctest.html",
                "+https://docs.python.org/library/doctest.html",
                " \"\"\""
            ],
            "changed_files": [
                "django/conf/global_settings.py",
                "django/contrib/admin/models.py",
                "django/contrib/gis/db/backends/postgis/const.py",
                "django/http/response.py",
                "django/template/defaultfilters.py",
                "tests/test_runner_apps/sample/doctests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29784": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: admin",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29784",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "245c36d7b6934fb0ca50eed2414253f4793f1ff5",
            "repository": "https://github.com/django/django",
            "timestamp": 1536305599,
            "hunks": 8,
            "message": "Fixed #29642 -- Added check for arguments of custom error handler views.",
            "diff": [
                "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py",
                "index 5bfab0c067..91d21c9da9 100644",
                "--- a/django/urls/resolvers.py",
                "+++ b/django/urls/resolvers.py",
                "@@ -8,2 +8,3 @@ attributes of the resolved URL match.",
                " import functools",
                "+import inspect",
                " import re",
                "@@ -14,3 +15,3 @@ from urllib.parse import quote",
                " from django.conf import settings",
                "-from django.core.checks import Warning",
                "+from django.core.checks import Error, Warning",
                " from django.core.checks.urls import check_resolver",
                "@@ -394,6 +395,29 @@ class URLResolver:",
                "     def check(self):",
                "-        warnings = []",
                "+        messages = []",
                "         for pattern in self.url_patterns:",
                "-            warnings.extend(check_resolver(pattern))",
                "-        return warnings or self.pattern.check()",
                "+            messages.extend(check_resolver(pattern))",
                "+        messages.extend(self._check_custom_error_handlers())",
                "+        return messages or self.pattern.check()",
                "+",
                "+    def _check_custom_error_handlers(self):",
                "+        messages = []",
                "+        # All handlers take (request, exception) arguments except handler500",
                "+        # which takes (request).",
                "+        for status_code, num_parameters in [(400, 2), (403, 2), (404, 2), (500, 1)]:",
                "+            handler, param_dict = self.resolve_error_handler(status_code)",
                "+            signature = inspect.signature(handler)",
                "+            args = [None] * num_parameters",
                "+            try:",
                "+                signature.bind(*args)",
                "+            except TypeError:",
                "+                msg = (",
                "+                    \"The custom handler{status_code} view '{path}' does not \"",
                "+                    \"take the correct number of arguments ({args}).\"",
                "+                ).format(",
                "+                    status_code=status_code,",
                "+                    path=handler.__module__ + '.' + handler.__qualname__,",
                "+                    args='request, exception' if num_parameters == 2 else 'request',",
                "+                )",
                "+                messages.append(Error(msg, id='urls.E007'))",
                "+        return messages",
                "diff --git a/tests/check_framework/test_urls.py b/tests/check_framework/test_urls.py",
                "index aa53af930e..cdc9595731 100644",
                "--- a/tests/check_framework/test_urls.py",
                "+++ b/tests/check_framework/test_urls.py",
                "@@ -1,3 +1,3 @@",
                " from django.conf import settings",
                "-from django.core.checks.messages import Warning",
                "+from django.core.checks.messages import Error, Warning",
                " from django.core.checks.urls import (",
                "@@ -167,2 +167,24 @@ class UpdatedToPathTests(SimpleTestCase):",
                "+class CheckCustomErrorHandlersTests(SimpleTestCase):",
                "+",
                "+    @override_settings(ROOT_URLCONF='check_framework.urls.bad_error_handlers')",
                "+    def test_bad_handlers(self):",
                "+        result = check_url_config(None)",
                "+        self.assertEqual(len(result), 4)",
                "+        for code, num_params, error in zip([400, 403, 404, 500], [2, 2, 2, 1], result):",
                "+            with self.subTest('handler{}'.format(code)):",
                "+                self.assertEqual(error, Error(",
                "+                    \"The custom handler{} view \"",
                "+                    \"'check_framework.urls.bad_error_handlers.bad_handler' \"",
                "+                    \"does not take the correct number of arguments (request{}).\"",
                "+                    .format(code, ', exception' if num_params == 2 else ''),",
                "+                    id='urls.E007',",
                "+                ))",
                "+",
                "+    @override_settings(ROOT_URLCONF='check_framework.urls.good_error_handlers')",
                "+    def test_good_handlers(self):",
                "+        result = check_url_config(None)",
                "+        self.assertEqual(result, [])",
                "+",
                "+",
                " class CheckURLSettingsTests(SimpleTestCase):",
                "diff --git a/tests/check_framework/urls/bad_error_handlers.py b/tests/check_framework/urls/bad_error_handlers.py",
                "new file mode 100644",
                "index 0000000000..d639d707df",
                "--- /dev/null",
                "+++ b/tests/check_framework/urls/bad_error_handlers.py",
                "@@ -0,0 +1,10 @@",
                "+urlpatterns = []",
                "+",
                "+handler400 = __name__ + '.bad_handler'",
                "+handler403 = __name__ + '.bad_handler'",
                "+handler404 = __name__ + '.bad_handler'",
                "+handler500 = __name__ + '.bad_handler'",
                "+",
                "+",
                "+def bad_handler():",
                "+    pass",
                "diff --git a/tests/check_framework/urls/good_error_handlers.py b/tests/check_framework/urls/good_error_handlers.py",
                "new file mode 100644",
                "index 0000000000..69bea650f7",
                "--- /dev/null",
                "+++ b/tests/check_framework/urls/good_error_handlers.py",
                "@@ -0,0 +1,10 @@",
                "+urlpatterns = []",
                "+",
                "+handler400 = __name__ + '.good_handler'",
                "+handler403 = __name__ + '.good_handler'",
                "+handler404 = __name__ + '.good_handler'",
                "+handler500 = __name__ + '.good_handler'",
                "+",
                "+",
                "+def good_handler(request, exception=None, foo='bar'):",
                "+    pass"
            ],
            "changed_files": [
                "django/urls/resolvers.py",
                "tests/check_framework/test_urls.py",
                "tests/check_framework/urls/bad_error_handlers.py",
                "tests/check_framework/urls/good_error_handlers.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29642": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: view",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29642",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "efd8a82e268a82b3ad0be77bd5b4548c30bcb4d7",
            "repository": "https://github.com/django/django",
            "timestamp": 1538398774,
            "hunks": 4,
            "message": "Refs #27795 -- Removed force_bytes() usage in MySQL backend. The mysqlclient cursor attribute `_last_executed` is always stored as bytes. Decode it. TextField values are already type str. No need to decode.",
            "diff": [
                "diff --git a/django/db/backends/mysql/operations.py b/django/db/backends/mysql/operations.py",
                "index 8a43c907ac..973a5548ff 100644",
                "--- a/django/db/backends/mysql/operations.py",
                "+++ b/django/db/backends/mysql/operations.py",
                "@@ -7,3 +7,2 @@ from django.utils import timezone",
                " from django.utils.duration import duration_microseconds",
                "-from django.utils.encoding import force_text",
                "@@ -144,3 +143,6 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "         # See MySQLdb/cursors.py in the source distribution.",
                "-        return force_text(getattr(cursor, '_last_executed', None), errors='replace')",
                "+        query = getattr(cursor, '_last_executed', None)",
                "+        if query is not None:",
                "+            query = query.decode(errors='replace')",
                "+        return query",
                "@@ -235,5 +237,3 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "         internal_type = expression.output_field.get_internal_type()",
                "-        if internal_type == 'TextField':",
                "-            converters.append(self.convert_textfield_value)",
                "-        elif internal_type in ['BooleanField', 'NullBooleanField']:",
                "+        if internal_type in ['BooleanField', 'NullBooleanField']:",
                "             converters.append(self.convert_booleanfield_value)",
                "@@ -246,7 +246,2 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "-    def convert_textfield_value(self, value, expression, connection):",
                "-        if value is not None:",
                "-            value = force_text(value)",
                "-        return value",
                "-",
                "     def convert_booleanfield_value(self, value, expression, connection):"
            ],
            "changed_files": [
                "django/db/backends/mysql/operations.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27795": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: read",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b0b4aac555711ae9116f9b54c24ec7e43a0971e9",
            "repository": "https://github.com/django/django",
            "timestamp": 1537467876,
            "hunks": 4,
            "message": "Fixed #29775 -- Fixed URL converters in a nested namespaced path. When using include() without namespaces of some urlpatterns that have an include() with namespace, the converters of the parent include() weren't being used to convert the arguments of reverse().",
            "diff": [
                "diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py",
                "index 91d21c9da9..4f2aefc9b0 100644",
                "--- a/django/urls/resolvers.py",
                "+++ b/django/urls/resolvers.py",
                "@@ -471,2 +471,4 @@ class URLResolver:",
                "                         for namespace, (prefix, sub_pattern) in url_pattern.namespace_dict.items():",
                "+                            current_converters = url_pattern.pattern.converters",
                "+                            sub_pattern.pattern.converters.update(current_converters)",
                "                             namespaces[namespace] = (p_pattern + prefix, sub_pattern)",
                "diff --git a/tests/urlpatterns/path_base64_urls.py b/tests/urlpatterns/path_base64_urls.py",
                "index 9b69f929fe..afd11ac9f6 100644",
                "--- a/tests/urlpatterns/path_base64_urls.py",
                "+++ b/tests/urlpatterns/path_base64_urls.py",
                "@@ -6,4 +6,12 @@ register_converter(converters.Base64Converter, 'base64')",
                "+subsubpatterns = [",
                "+    path('<base64:last_value>/', views.empty_view, name='subsubpattern-base64'),",
                "+]",
                "+",
                " subpatterns = [",
                "     path('<base64:value>/', views.empty_view, name='subpattern-base64'),",
                "+    path(",
                "+        '<base64:value>/',",
                "+        include((subsubpatterns, 'second-layer-namespaced-base64'), 'instance-ns-base64')",
                "+    ),",
                " ]",
                "diff --git a/tests/urlpatterns/tests.py b/tests/urlpatterns/tests.py",
                "index b3d97ec5b9..299258e56f 100644",
                "--- a/tests/urlpatterns/tests.py",
                "+++ b/tests/urlpatterns/tests.py",
                "@@ -72,2 +72,9 @@ class SimplifiedURLTests(SimpleTestCase):",
                "+    @override_settings(ROOT_URLCONF='urlpatterns.path_base64_urls')",
                "+    def test_converter_reverse_with_second_layer_instance_namespace(self):",
                "+        kwargs = included_kwargs.copy()",
                "+        kwargs['last_value'] = b'world'",
                "+        url = reverse('instance-ns-base64:subsubpattern-base64', kwargs=kwargs)",
                "+        self.assertEqual(url, '/base64/aGVsbG8=/subpatterns/d29ybGQ=/d29ybGQ=/')",
                "+",
                "     def test_path_inclusion_is_matchable(self):"
            ],
            "changed_files": [
                "django/urls/resolvers.py",
                "tests/urlpatterns/path_base64_urls.py",
                "tests/urlpatterns/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29775": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: have",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29775",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c82893cb8c6b2a4a876965426c5a5bc4590e1583",
            "repository": "https://github.com/django/django",
            "timestamp": 1538435884,
            "hunks": 7,
            "message": "Refs #27795 -- Removed force_bytes() usage from django/utils/http.py. django.utils.http.urlsafe_base64_encode() now returns a string, not a bytestring. Since URLs are represented as strings, urlsafe_base64_encode() should return a string. All uses immediately decoded the bytestring to a string anyway. As the inverse operation, urlsafe_base64_decode() accepts a string.",
            "diff": [
                "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py",
                "index 0fa30d70c7..d6b5702fff 100644",
                "--- a/django/contrib/auth/forms.py",
                "+++ b/django/contrib/auth/forms.py",
                "@@ -286,3 +286,3 @@ class PasswordResetForm(forms.Form):",
                "                 'site_name': site_name,",
                "-                'uid': urlsafe_base64_encode(force_bytes(user.pk)).decode(),",
                "+                'uid': urlsafe_base64_encode(force_bytes(user.pk)),",
                "                 'user': user,",
                "diff --git a/django/utils/http.py b/django/utils/http.py",
                "index 5a063a9956..db18e57803 100644",
                "--- a/django/utils/http.py",
                "+++ b/django/utils/http.py",
                "@@ -17,3 +17,2 @@ from django.utils.datastructures import MultiValueDict",
                " from django.utils.deprecation import RemovedInDjango30Warning",
                "-from django.utils.encoding import force_bytes",
                " from django.utils.functional import keep_lazy_text",
                "@@ -222,6 +221,6 @@ def urlsafe_base64_encode(s):",
                "     \"\"\"",
                "-    Encode a bytestring in base64 for use in URLs. Strip any trailing equal",
                "-    signs.",
                "+    Encode a bytestring to a base64 string for use in URLs. Strip any trailing",
                "+    equal signs.",
                "     \"\"\"",
                "-    return base64.urlsafe_b64encode(s).rstrip(b'\\n=')",
                "+    return base64.urlsafe_b64encode(s).rstrip(b'\\n=').decode('ascii')",
                "@@ -233,3 +232,3 @@ def urlsafe_base64_decode(s):",
                "     \"\"\"",
                "-    s = force_bytes(s)",
                "+    s = s.encode()",
                "     try:",
                "diff --git a/tests/auth_tests/test_templates.py b/tests/auth_tests/test_templates.py",
                "index 958ed47cd3..db35dc930d 100644",
                "--- a/tests/auth_tests/test_templates.py",
                "+++ b/tests/auth_tests/test_templates.py",
                "@@ -49,3 +49,3 @@ class AuthTemplateTests(TestCase):",
                "         token = default_token_generator.make_token(self.user)",
                "-        uidb64 = urlsafe_base64_encode(str(self.user.pk).encode()).decode()",
                "+        uidb64 = urlsafe_base64_encode(str(self.user.pk).encode())",
                "         url = reverse('password_reset_confirm', kwargs={'uidb64': uidb64, 'token': token})",
                "diff --git a/tests/auth_tests/test_views.py b/tests/auth_tests/test_views.py",
                "index d12830ddc8..3d0c3ecadf 100644",
                "--- a/tests/auth_tests/test_views.py",
                "+++ b/tests/auth_tests/test_views.py",
                "@@ -426,3 +426,3 @@ class UUIDUserPasswordResetTest(CustomUserPasswordResetTest):",
                "         _, path = self._test_confirm_start()",
                "-        invalid_uidb64 = urlsafe_base64_encode('INVALID_UUID'.encode()).decode()",
                "+        invalid_uidb64 = urlsafe_base64_encode('INVALID_UUID'.encode())",
                "         first, _uuidb64_, second = path.strip('/').split('/')"
            ],
            "changed_files": [
                "django/contrib/auth/forms.py",
                "django/utils/http.py",
                "tests/auth_tests/test_templates.py",
                "tests/auth_tests/test_views.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27795": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: view",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e40e7026cad400d720963aea0ba156a19f83b058",
            "repository": "https://github.com/django/django",
            "timestamp": 1537988803,
            "hunks": 2,
            "message": "Fixed #29683 -- Added view permission to docs.",
            "diff": [
                "diff --git a/django/contrib/auth/models.py b/django/contrib/auth/models.py",
                "index cc4f48861a..3e28da2ad4 100644",
                "--- a/django/contrib/auth/models.py",
                "+++ b/django/contrib/auth/models.py",
                "@@ -45,2 +45,3 @@ class Permission(models.Model):",
                "         - The \"delete\" permission limits the ability to delete an object.",
                "+        - The \"view\" permission limits the ability to view an object.",
                "@@ -52,4 +53,3 @@ class Permission(models.Model):",
                "-    Three basic permissions -- add, change and delete -- are automatically",
                "-    created for each Django model.",
                "+    The permissions listed above are automatically created for each model.",
                "     \"\"\""
            ],
            "changed_files": [
                "django/contrib/auth/models.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29683": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: view, permission",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29683",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5045f8af853c29830db5c028ad299663d96af82d",
            "repository": "https://github.com/django/django",
            "timestamp": 1538572467,
            "hunks": 4,
            "message": "Revert \"[2.1.x] Refs #27795 -- Removed force_bytes() usage in sessions.\" This reverts commit f3f31b0fc26f772b198c9683a427f2f7fe208c37.",
            "diff": [
                "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py",
                "index 5c50f87e34..3049d39ac7 100644",
                "--- a/django/contrib/sessions/backends/base.py",
                "+++ b/django/contrib/sessions/backends/base.py",
                "@@ -12,2 +12,3 @@ from django.utils.crypto import (",
                " )",
                "+from django.utils.encoding import force_bytes",
                " from django.utils.module_loading import import_string",
                "@@ -99,3 +100,3 @@ class SessionBase:",
                "     def decode(self, session_data):",
                "-        encoded_data = base64.b64decode(session_data.encode('ascii'))",
                "+        encoded_data = base64.b64decode(force_bytes(session_data))",
                "         try:",
                "diff --git a/django/contrib/sessions/backends/file.py b/django/contrib/sessions/backends/file.py",
                "index 25887fcf20..fe34dea56e 100644",
                "--- a/django/contrib/sessions/backends/file.py",
                "+++ b/django/contrib/sessions/backends/file.py",
                "@@ -77,3 +77,3 @@ class SessionStore(SessionBase):",
                "         try:",
                "-            with open(self._key_to_file(), \"r\", encoding=\"ascii\") as session_file:",
                "+            with open(self._key_to_file(), \"rb\") as session_file:",
                "                 file_data = session_file.read()",
                "diff --git a/tests/sessions_tests/tests.py b/tests/sessions_tests/tests.py",
                "index c213628dbb..dbbde133c1 100644",
                "--- a/tests/sessions_tests/tests.py",
                "+++ b/tests/sessions_tests/tests.py",
                "@@ -313,3 +313,3 @@ class SessionTestsMixin:",
                "     def test_decode_failure_logged_to_security(self):",
                "-        bad_encode = base64.b64encode(b'flaskdj:alkdjf').decode('ascii')",
                "+        bad_encode = base64.b64encode(b'flaskdj:alkdjf')",
                "         with self.assertLogs('django.security.SuspiciousSession', 'WARNING') as cm:"
            ],
            "changed_files": [
                "django/contrib/sessions/backends/base.py",
                "django/contrib/sessions/backends/file.py",
                "tests/sessions_tests/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27795": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "54eedddb5084fb572516ad4d7266e13e290c3c8d"
                ]
            ],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c52ecbda615594750ae59b789313a29893950b3d",
            "repository": "https://github.com/django/django",
            "timestamp": 1536847476,
            "hunks": 3,
            "message": "Removed shadowing of built-in hash() function.",
            "diff": [
                "diff --git a/django/contrib/auth/tokens.py b/django/contrib/auth/tokens.py",
                "index 9aa0a5262a..80fe699395 100644",
                "--- a/django/contrib/auth/tokens.py",
                "+++ b/django/contrib/auth/tokens.py",
                "@@ -30,3 +30,3 @@ class PasswordResetTokenGenerator:",
                "         try:",
                "-            ts_b36, hash = token.split(\"-\")",
                "+            ts_b36, _ = token.split(\"-\")",
                "         except ValueError:",
                "@@ -57,3 +57,3 @@ class PasswordResetTokenGenerator:",
                "         ts_b36 = int_to_base36(timestamp)",
                "-        hash = salted_hmac(",
                "+        hash_string = salted_hmac(",
                "             self.key_salt,",
                "@@ -62,3 +62,3 @@ class PasswordResetTokenGenerator:",
                "         ).hexdigest()[::2]  # Limit to 20 characters to shorten the URL.",
                "-        return \"%s-%s\" % (ts_b36, hash)",
                "+        return \"%s-%s\" % (ts_b36, hash_string)"
            ],
            "changed_files": [
                "django/contrib/auth/tokens.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: hash",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "8c3e0eb1c16abbcded3503b4ea3473b353520f61",
            "repository": "https://github.com/django/django",
            "timestamp": 1537885818,
            "hunks": 10,
            "message": "Normalized spelling of \"lowercase\" and \"lowercased\".",
            "diff": [
                "diff --git a/django/apps/config.py b/django/apps/config.py",
                "index 157fda7238..aeb47923d8 100644",
                "--- a/django/apps/config.py",
                "+++ b/django/apps/config.py",
                "@@ -46,3 +46,3 @@ class AppConfig:",
                "-        # Mapping of lower case model names to model classes. Initially set to",
                "+        # Mapping of lowercase model names to model classes. Initially set to",
                "         # None to prevent accidental access before import_models() runs.",
                "diff --git a/django/contrib/admin/widgets.py b/django/contrib/admin/widgets.py",
                "index c5cde4b14d..9385104d59 100644",
                "--- a/django/contrib/admin/widgets.py",
                "+++ b/django/contrib/admin/widgets.py",
                "@@ -358,4 +358,4 @@ class AdminUUIDInputWidget(forms.TextInput):",
                "-# Mapping of lower case language codes [returned by Django's get_language()]",
                "-# to language codes supported by select2.",
                "+# Mapping of lowercase language codes [returned by Django's get_language()] to",
                "+# language codes supported by select2.",
                " # See django/contrib/admin/static/admin/js/vendor/select2/i18n/*",
                "diff --git a/django/contrib/gis/feeds.py b/django/contrib/gis/feeds.py",
                "index 77cf4f481c..cfc078b781 100644",
                "--- a/django/contrib/gis/feeds.py",
                "+++ b/django/contrib/gis/feeds.py",
                "@@ -61,3 +61,3 @@ class GeoFeedMixin:",
                "             else:",
                "-                # Getting the lower-case geometry type.",
                "+                # Getting the lowercase geometry type.",
                "                 gtype = str(geom.geom_type).lower()",
                "diff --git a/django/contrib/gis/gdal/geomtype.py b/django/contrib/gis/gdal/geomtype.py",
                "index 2c6798a00d..3e5fea7484 100644",
                "--- a/django/contrib/gis/gdal/geomtype.py",
                "+++ b/django/contrib/gis/gdal/geomtype.py",
                "@@ -28,3 +28,3 @@ class OGRGeomType:",
                "               }",
                "-    # Reverse type dictionary, keyed by lower-case of the name.",
                "+    # Reverse type dictionary, keyed by lowercase of the name.",
                "     _str_types = {v.lower(): k for k, v in _types.items()}",
                "diff --git a/django/db/models/fields/reverse_related.py b/django/db/models/fields/reverse_related.py",
                "index dddb869513..828d79d6ac 100644",
                "--- a/django/db/models/fields/reverse_related.py",
                "+++ b/django/db/models/fields/reverse_related.py",
                "@@ -151,6 +151,6 @@ class ForeignObjectRel(FieldCacheMixin):",
                "         # accessor descriptor that retrieves related many-to-one or",
                "-        # many-to-many objects. It uses the lower-cased object_name + \"_set\",",
                "-        # but this can be overridden with the \"related_name\" option.",
                "-        # Due to backwards compatibility ModelForms need to be able to provide",
                "-        # an alternate model. See BaseInlineFormSet.get_default_prefix().",
                "+        # many-to-many objects. It uses the lowercased object_name + \"_set\",",
                "+        # but this can be overridden with the \"related_name\" option. Due to",
                "+        # backwards compatibility ModelForms need to be able to provide an",
                "+        # alternate model. See BaseInlineFormSet.get_default_prefix().",
                "         opts = model._meta if model else self.related_model._meta",
                "diff --git a/django/http/request.py b/django/http/request.py",
                "index fdd1cf8c67..7dc758d268 100644",
                "--- a/django/http/request.py",
                "+++ b/django/http/request.py",
                "@@ -540,3 +540,3 @@ def split_domain_port(host):",
                "-    Returned domain is lower-cased. If the host is invalid, the domain will be",
                "+    Returned domain is lowercased. If the host is invalid, the domain will be",
                "     empty.",
                "@@ -568,3 +568,3 @@ def validate_host(host, allowed_hosts):",
                "-    Note: This function assumes that the given host is lower-cased and has",
                "+    Note: This function assumes that the given host is lowercased and has",
                "     already had the port, if any, stripped off.",
                "diff --git a/django/http/response.py b/django/http/response.py",
                "index f303852a40..f7d248e933 100644",
                "--- a/django/http/response.py",
                "+++ b/django/http/response.py",
                "@@ -38,3 +38,3 @@ class HttpResponseBase:",
                "     def __init__(self, content_type=None, status=None, reason=None, charset=None):",
                "-        # _headers is a mapping of the lower-case name to the original case of",
                "+        # _headers is a mapping of the lowercase name to the original case of",
                "         # the header (required for working with legacy systems) and the header",
                "diff --git a/django/utils/text.py b/django/utils/text.py",
                "index 0e41cac493..8e0014fd0a 100644",
                "--- a/django/utils/text.py",
                "+++ b/django/utils/text.py",
                "@@ -415,3 +415,3 @@ def camel_case_to_spaces(value):",
                "     \"\"\"",
                "-    Split CamelCase and convert to lower case. Strip surrounding whitespace.",
                "+    Split CamelCase and convert to lowercase. Strip surrounding whitespace.",
                "     \"\"\"",
                "diff --git a/tests/many_to_one/models.py b/tests/many_to_one/models.py",
                "index cfbdb71a44..2f98bebdc0 100644",
                "--- a/tests/many_to_one/models.py",
                "+++ b/tests/many_to_one/models.py",
                "@@ -46,4 +46,4 @@ class District(models.Model):",
                " # If ticket #1578 ever slips back in, these models will not be able to be",
                "-# created (the field names being lower-cased versions of their opposite",
                "-# classes is important here).",
                "+# created (the field names being lowercased versions of their opposite classes",
                "+# is important here).",
                " class First(models.Model):"
            ],
            "changed_files": [
                "django/apps/config.py",
                "django/contrib/admin/widgets.py",
                "django/contrib/gis/feeds.py",
                "django/contrib/gis/gdal/geomtype.py",
                "django/db/models/fields/reverse_related.py",
                "django/http/request.py",
                "django/http/response.py",
                "django/utils/text.py",
                "tests/many_to_one/models.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: widget, admin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "8624459586c7916e0a5550ed03af60afa44cf387",
            "repository": "https://github.com/django/django",
            "timestamp": 1537354982,
            "hunks": 1,
            "message": "Added a test for password_changed() with a custom validator.",
            "diff": [
                "diff --git a/tests/auth_tests/test_validators.py b/tests/auth_tests/test_validators.py",
                "index d43efc6a3c..e50da39663 100644",
                "--- a/tests/auth_tests/test_validators.py",
                "+++ b/tests/auth_tests/test_validators.py",
                "@@ -59,2 +59,14 @@ class PasswordValidationTest(TestCase):",
                "+    def test_password_changed_with_custom_validator(self):",
                "+        class Validator:",
                "+            def password_changed(self, password, user):",
                "+                self.password = password",
                "+                self.user = user",
                "+",
                "+        user = object()",
                "+        validator = Validator()",
                "+        password_changed('password', user=user, password_validators=(validator,))",
                "+        self.assertIs(validator.user, user)",
                "+        self.assertEqual(validator.password, 'password')",
                "+",
                "     def test_password_validators_help_texts(self):"
            ],
            "changed_files": [
                "tests/auth_tests/test_validators.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: password",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "abeed587b119197270a885830619694b2c5ba1f1",
            "repository": "https://github.com/django/django",
            "timestamp": 1537883646,
            "hunks": 2,
            "message": "Refs #27795 -- Removed force_bytes() usage in db/backends/base/schema.py.",
            "diff": [
                "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py",
                "index 9608e95afb..663e03dafe 100644",
                "--- a/django/db/backends/base/schema.py",
                "+++ b/django/db/backends/base/schema.py",
                "@@ -11,3 +11,2 @@ from django.db.transaction import TransactionManagementError, atomic",
                " from django.utils import timezone",
                "-from django.utils.encoding import force_bytes",
                "@@ -146,3 +145,3 @@ class BaseDatabaseSchemaEditor:",
                "         for arg in args:",
                "-            h.update(force_bytes(arg))",
                "+            h.update(arg.encode())",
                "         return h.hexdigest()[:8]"
            ],
            "changed_files": [
                "django/db/backends/base/schema.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27795": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "1d65ddd9c357b7018c616ecb0369d47eeb92c3a3"
                ]
            ],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d5ed08263b58ec972a1e009f23d7b90c30b6b9c1",
            "repository": "https://github.com/django/django",
            "timestamp": 1538211262,
            "hunks": 399,
            "message": "[2.1.x] Updated translations from Transifex",
            "diff": [
                "diff --git a/django/conf/locale/az/LC_MESSAGES/django.mo b/django/conf/locale/az/LC_MESSAGES/django.mo",
                "index 5d42c5a0d5..d0489e2227 100644",
                "Binary files a/django/conf/locale/az/LC_MESSAGES/django.mo and b/django/conf/locale/az/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/az/LC_MESSAGES/django.po b/django/conf/locale/az/LC_MESSAGES/django.po",
                "index 0b5f9740d1..60ddc200e5 100644",
                "--- a/django/conf/locale/az/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/az/LC_MESSAGES/django.po",
                "@@ -11,4 +11,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "-\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"PO-Revision-Date: 2018-09-09 12:46+0000\\n\"",
                "+\"Last-Translator: Emin Mastizada <emin@linux.com>\\n\"",
                " \"Language-Team: Azerbaijani (http://www.transifex.com/django/django/language/\"",
                "@@ -473,3 +473,3 @@ msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri True v\u00c9\u0099 ya False olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                " msgid \"'%(value)s' value must be either True, False, or None.\"",
                "-msgstr \"\"",
                "+msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri True, False v\u00c9\u0099 ya None olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -662,3 +662,3 @@ msgstr \"Ke\u00c3\u00a7\u00c9\u0099rli m\u00c3\u00bcdd\u00c9\u0099t daxil edin.\"",
                " msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "-msgstr \"\"",
                "+msgstr \"G\u00c3\u00bcnl\u00c9\u0099rin say\u00c4\u00b1 {min_days} il\u00c9\u0099 {max_days} aras\u00c4\u00b1nda olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "diff --git a/django/conf/locale/br/LC_MESSAGES/django.mo b/django/conf/locale/br/LC_MESSAGES/django.mo",
                "index 345448b1fd..89e7e40f12 100644",
                "Binary files a/django/conf/locale/br/LC_MESSAGES/django.mo and b/django/conf/locale/br/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/br/LC_MESSAGES/django.po b/django/conf/locale/br/LC_MESSAGES/django.po",
                "index 34e5c01181..9c99f7c429 100644",
                "--- a/django/conf/locale/br/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/br/LC_MESSAGES/django.po",
                "@@ -8,4 +8,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                " \"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "@@ -16,3 +16,7 @@ msgstr \"\"",
                " \"Language: br\\n\"",
                "-\"Plural-Forms: nplurals=2; plural=(n > 1);\\n\"",
                "+\"Plural-Forms: nplurals=5; plural=((n%10 == 1) && (n%100 != 11) && (n%100 !\"",
                "+\"=71) && (n%100 !=91) ? 0 :(n%10 == 2) && (n%100 != 12) && (n%100 !=72) && (n\"",
                "+\"%100 !=92) ? 1 :(n%10 ==3 || n%10==4 || n%10==9) && (n%100 < 10 || n% 100 > \"",
                "+\"19) && (n%100 < 70 || n%100 > 79) && (n%100 < 90 || n%100 > 99) ? 2 :(n != 0 \"",
                "+\"&& n % 1000000 == 0) ? 3 : 4);\\n\"",
                "@@ -159,2 +163,5 @@ msgstr \"Jorjianeg\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -362,2 +369,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -372,2 +382,8 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Merkit un niver.\"",
                "@@ -378,2 +394,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -384,2 +403,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -392,2 +414,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -448,2 +473,6 @@ msgstr \"\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -610,5 +639,2 @@ msgstr \"Merkit un niver anterin.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Merkit un niver.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -625,2 +651,6 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -640,2 +670,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -680,2 +713,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -686,2 +722,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -758,2 +797,5 @@ msgstr[0] \"%(size)d okted\"",
                " msgstr[1] \"%(size)d okted\"",
                "+msgstr[2] \"%(size)d okted\"",
                "+msgstr[3] \"%(size)d okted\"",
                "+msgstr[4] \"%(size)d okted\"",
                "@@ -1027,2 +1069,5 @@ msgstr[0] \"%d bloaz\"",
                " msgstr[1] \"%d bloaz\"",
                "+msgstr[2] \"%d bloaz\"",
                "+msgstr[3] \"%d bloaz\"",
                "+msgstr[4] \"%d bloaz\"",
                "@@ -1033,2 +1078,5 @@ msgstr[0] \"%d miz\"",
                " msgstr[1] \"%d miz\"",
                "+msgstr[2] \"%d miz\"",
                "+msgstr[3] \"%d miz\"",
                "+msgstr[4] \"%d miz\"",
                "@@ -1039,2 +1087,5 @@ msgstr[0] \"%d sizhun\"",
                " msgstr[1] \"%d sizhun\"",
                "+msgstr[2] \"%d sizhun\"",
                "+msgstr[3] \"%d sizhun\"",
                "+msgstr[4] \"%d sizhun\"",
                "@@ -1045,2 +1096,5 @@ msgstr[0] \"%d deiz\"",
                " msgstr[1] \"%d deiz\"",
                "+msgstr[2] \"%d deiz\"",
                "+msgstr[3] \"%d deiz\"",
                "+msgstr[4] \"%d deiz\"",
                "@@ -1051,2 +1105,5 @@ msgstr[0] \"%d eur\"",
                " msgstr[1] \"%d eur\"",
                "+msgstr[2] \"%d eur\"",
                "+msgstr[3] \"%d eur\"",
                "+msgstr[4] \"%d eur\"",
                "@@ -1057,2 +1114,5 @@ msgstr[0] \"%d munud\"",
                " msgstr[1] \"%d munud\"",
                "+msgstr[2] \"%d munud\"",
                "+msgstr[3] \"%d munud\"",
                "+msgstr[4] \"%d munud\"",
                "diff --git a/django/conf/locale/de/LC_MESSAGES/django.mo b/django/conf/locale/de/LC_MESSAGES/django.mo",
                "index e90c930ed2..48165d6756 100644",
                "Binary files a/django/conf/locale/de/LC_MESSAGES/django.mo and b/django/conf/locale/de/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/de/LC_MESSAGES/django.po b/django/conf/locale/de/LC_MESSAGES/django.po",
                "index 273932719c..efc1a522f2 100644",
                "--- a/django/conf/locale/de/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/de/LC_MESSAGES/django.po",
                "@@ -10,3 +10,3 @@",
                " # Jannis Vajen, 2016",
                "-# Markus Holtermann <inyoka@markusholtermann.eu>, 2013,2015",
                "+# Markus Holtermann <info@markusholtermann.eu>, 2013,2015",
                " msgid \"\"",
                "@@ -16,4 +16,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "-\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"PO-Revision-Date: 2018-08-14 08:25+0000\\n\"",
                "+\"Last-Translator: Florian Apolloner <florian@apolloner.eu>\\n\"",
                " \"Language-Team: German (http://www.transifex.com/django/django/language/de/)\\n\"",
                "@@ -484,3 +484,3 @@ msgstr \"\u00e2\u0080\u009e%(value)s\u00e2\u0080\u009c Wert muss entweder True oder False sein.\"",
                " msgid \"'%(value)s' value must be either True, False, or None.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e2\u0080\u009e%(value)s\u00e2\u0080\u009c Wert muss True, False oder None sein.\"",
                "@@ -675,3 +675,3 @@ msgstr \"Bitte eine g\u00c3\u00bcltige Zeitspanne eingeben.\"",
                " msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "-msgstr \"\"",
                "+msgstr \"Die Anzahl der Tage muss zwischen {min_days} und {max_days} sein.\"",
                "diff --git a/django/conf/locale/el/LC_MESSAGES/django.mo b/django/conf/locale/el/LC_MESSAGES/django.mo",
                "index a80a720dee..29beef7c18 100644",
                "Binary files a/django/conf/locale/el/LC_MESSAGES/django.mo and b/django/conf/locale/el/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/el/LC_MESSAGES/django.po b/django/conf/locale/el/LC_MESSAGES/django.po",
                "index 4d0cea0465..1669421d5b 100644",
                "--- a/django/conf/locale/el/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/el/LC_MESSAGES/django.po",
                "@@ -7,3 +7,3 @@",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "-# Nick Mavrakis <mavrakis.n@gmail.com>, 2017",
                "+# Nick Mavrakis <mavrakis.n@gmail.com>, 2017-2018",
                " # Nikolas Demiridis <nikolas@demiridis.gr>, 2014",
                "@@ -19,5 +19,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-25 01:42+0000\\n\"",
                "-\"Last-Translator: Dimitris Glezos <glezos@transifex.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 10:11+0000\\n\"",
                "+\"Last-Translator: Nick Mavrakis <mavrakis.n@gmail.com>\\n\"",
                " \"Language-Team: Greek (http://www.transifex.com/django/django/language/el/)\\n\"",
                "@@ -170,2 +170,5 @@ msgstr \"\u00ce\u0093\u00ce\u00b5\u00cf\u0089\u00cf\u0081\u00ce\u00b3\u00ce\u00b9\u00ce\u00b1\u00ce\u00bd\u00ce\u00ac\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabyle\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -394,2 +397,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00ce\u0095\u00ce\u00b9\u00cf\u0083\u00ce\u00ac\u00ce\u00b3\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00ad\u00ce\u00bd\u00ce\u00b1\u00ce\u00bd \u00ce\u00b1\u00cf\u0081\u00ce\u00b9\u00ce\u00b8\u00ce\u00bc\u00cf\u008c.\"",
                "+",
                " #, python-format",
                "@@ -477,2 +483,6 @@ msgstr \"\u00ce\u0097 \u00cf\u0084\u00ce\u00b9\u00ce\u00bc\u00ce\u00ae '%(value)s' \u00cf\u0080\u00cf\u0081\u00ce\u00ad\u00cf\u0080\u00ce\u00b5\u00ce\u00b9 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 \u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 True \u00ce\u00ae Fa",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\u00ce\u0097 \u00cf\u0084\u00ce\u00b9\u00ce\u00bc\u00ce\u00ae '%(value)s' \u00cf\u0080\u00cf\u0081\u00ce\u00ad\u00cf\u0080\u00ce\u00b5\u00ce\u00b9 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 True, False, \u00ce\u00ae None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -654,5 +664,2 @@ msgstr \"\u00ce\u0095\u00ce\u00b9\u00cf\u0083\u00ce\u00ac\u00ce\u00b3\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00ad\u00ce\u00bd\u00ce\u00b1\u00ce\u00bd \u00ce\u00b1\u00ce\u00ba\u00ce\u00ad\u00cf\u0081\u00ce\u00b1\u00ce\u00b9\u00ce\u00bf \u00ce\u00b1\u00cf\u0081\u00ce\u00b9\u00ce\u00b8\u00ce\u00bc\u00cf\u008c.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00ce\u0095\u00ce\u00b9\u00cf\u0083\u00ce\u00ac\u00ce\u00b3\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00ad\u00ce\u00bd\u00ce\u00b1\u00ce\u00bd \u00ce\u00b1\u00cf\u0081\u00ce\u00b9\u00ce\u00b8\u00ce\u00bc\u00cf\u008c.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -669,2 +676,6 @@ msgstr \"\u00ce\u0095\u00ce\u00b9\u00cf\u0083\u00ce\u00ac\u00ce\u00b3\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00bc\u00ce\u00b9\u00ce\u00b1 \u00ce\u00ad\u00ce\u00b3\u00ce\u00ba\u00cf\u0085\u00cf\u0081\u00ce\u00b7 \u00ce\u00b4\u00ce\u00b9\u00ce\u00ac\u00cf\u0081\u00ce\u00ba\u00ce\u00b5\u00ce\u00b9\u00ce\u00b1.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00ce\u009f \u00ce\u00b1\u00cf\u0081\u00ce\u00b9\u00ce\u00b8\u00ce\u00bc\u00cf\u008c\u00cf\u0082 \u00cf\u0084\u00cf\u0089\u00ce\u00bd \u00ce\u00b7\u00ce\u00bc\u00ce\u00b5\u00cf\u0081\u00cf\u008e\u00ce\u00bd \u00cf\u0080\u00cf\u0081\u00ce\u00ad\u00cf\u0080\u00ce\u00b5\u00ce\u00b9 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 \u00ce\u00bc\u00ce\u00b5\u00cf\u0084\u00ce\u00b1\u00ce\u00be\u00cf\u008d {min_days} \u00ce\u00ba\u00ce\u00b1\u00ce\u00b9 {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -769,3 +780,3 @@ msgstr \"\u00ce\u0088\u00cf\u0087\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00be\u00ce\u00b1\u00ce\u00bd\u00ce\u00b1\u00ce\u00b5\u00ce\u00b9\u00cf\u0083\u00ce\u00ac\u00ce\u00b3\u00ce\u00b5\u00ce\u00b9 \u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00af\u00ce\u00b4\u00ce\u00b9\u00ce\u00b1 \u00cf\u0084\u00ce\u00b9\u00ce\u00bc\u00ce\u00b7. \u00ce\u0092\u00ce\u00b5\u00ce\u00b2\u00ce\u00b1\u00ce\u00b9\u00cf\u0089",
                " msgid \"The inline value did not match the parent instance.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00ce\u0097 \u00cf\u0084\u00ce\u00b9\u00ce\u00bc\u00ce\u00ae \u00ce\u00b4\u00ce\u00b5\u00ce\u00bd \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 \u00ce\u00af\u00cf\u0083\u00ce\u00b7 \u00ce\u00bc\u00ce\u00b5 \u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00b1\u00ce\u00bd\u00cf\u0084\u00ce\u00af\u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00ce\u00b9\u00cf\u0087\u00ce\u00b7 \u00cf\u0084\u00ce\u00b9\u00ce\u00bc\u00ce\u00ae \u00cf\u0084\u00ce\u00bf\u00cf\u0085 \u00ce\u00b3\u00ce\u00bf\u00ce\u00bd\u00ce\u00b9\u00ce\u00ba\u00ce\u00bf\u00cf\u008d object.\"",
                "@@ -1150,2 +1161,8 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00ce\u0091\u00ce\u00bd \u00cf\u0087\u00cf\u0081\u00ce\u00b7\u00cf\u0083\u00ce\u00b9\u00ce\u00bc\u00ce\u00bf\u00cf\u0080\u00ce\u00bf\u00ce\u00b9\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00b5\u00cf\u0084\u00ce\u00b9\u00ce\u00ba\u00ce\u00ad\u00cf\u0084\u00ce\u00b1 <meta name=\\\"referrer\\\" content=\\\"no-referrer\"",
                "+\"\\\"> \u00ce\u00ae \u00cf\u0083\u00cf\u0085\u00ce\u00bc\u00cf\u0080\u00ce\u00b5\u00cf\u0081\u00ce\u00b9\u00ce\u00bb\u00ce\u00b1\u00ce\u00bc\u00ce\u00b2\u00ce\u00ac\u00ce\u00bd\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00ba\u00ce\u00b5\u00cf\u0086\u00ce\u00b1\u00ce\u00bb\u00ce\u00af\u00ce\u00b4\u00ce\u00b1 (header) 'Referrer-Policy: no-referrer', \"",
                "+\"\u00cf\u0080\u00ce\u00b1\u00cf\u0081\u00ce\u00b1\u00ce\u00ba\u00ce\u00b1\u00ce\u00bb\u00ce\u00bf\u00cf\u008d\u00ce\u00bc\u00ce\u00b5 \u00ce\u00b1\u00cf\u0086\u00ce\u00b1\u00ce\u00b9\u00cf\u0081\u00ce\u00ad\u00cf\u0083\u00cf\u0084\u00ce\u00b5 \u00cf\u0084\u00ce\u00b1. \u00ce\u0097 \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00cf\u0083\u00cf\u0084\u00ce\u00b1\u00cf\u0083\u00ce\u00af\u00ce\u00b1 CSRF \u00ce\u00b1\u00cf\u0080\u00ce\u00b1\u00ce\u00b9\u00cf\u0084\u00ce\u00b5\u00ce\u00af \u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00ba\u00ce\u00b5\u00cf\u0086\u00ce\u00b1\u00ce\u00bb\u00ce\u00af\u00ce\u00b4\u00ce\u00b1 'Referer' \u00ce\u00bd\u00ce\u00b1 \"",
                "+\"\u00ce\u00ba\u00ce\u00ac\u00ce\u00bd\u00ce\u00b5\u00ce\u00b9 \u00ce\u00b1\u00cf\u0085\u00cf\u0083\u00cf\u0084\u00ce\u00b7\u00cf\u0081\u00cf\u008c \u00ce\u00ad\u00ce\u00bb\u00ce\u00b5\u00ce\u00b3\u00cf\u0087\u00ce\u00bf \u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00ce\u00bd referer. \u00ce\u0091\u00ce\u00bd \u00ce\u00ba\u00cf\u008d\u00cf\u0081\u00ce\u00b9\u00ce\u00bf \u00ce\u00bc\u00ce\u00ad\u00ce\u00bb\u00ce\u00b7\u00ce\u00bc\u00ce\u00b1 \u00cf\u0083\u00ce\u00b1\u00cf\u0082 \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 \u00ce\u00b7 \u00ce\u00b9\u00ce\u00b4\u00ce\u00b9\u00cf\u0089\u00cf\u0084\u00ce\u00b9\u00ce\u00ba\u00cf\u008c\u00cf\u0084\u00ce\u00b7\u00cf\u0084\u00ce\u00b1, \"",
                "+\"\u00cf\u0083\u00ce\u00ba\u00ce\u00b5\u00cf\u0086\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00bd\u00ce\u00b1 \u00cf\u0087\u00cf\u0081\u00ce\u00b7\u00cf\u0083\u00ce\u00b9\u00ce\u00bc\u00ce\u00bf\u00cf\u0080\u00ce\u00bf\u00ce\u00b9\u00ce\u00ae\u00cf\u0083\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00b5\u00ce\u00bd\u00ce\u00b1\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00ba\u00cf\u0084\u00ce\u00b9\u00ce\u00ba\u00ce\u00ad\u00cf\u0082 \u00ce\u00bc\u00ce\u00b5\u00ce\u00b8\u00cf\u008c\u00ce\u00b4\u00ce\u00bf\u00cf\u0085\u00cf\u0082 \u00cf\u008c\u00cf\u0080\u00cf\u0089\u00cf\u0082 <a rel=\\\"noreferrer\"",
                "+\"\\\" ...> \u00ce\u00b3\u00ce\u00b9\u00ce\u00b1 \u00cf\u0083\u00cf\u0085\u00ce\u00bd\u00ce\u00b4\u00ce\u00ad\u00cf\u0083\u00ce\u00bc\u00ce\u00bf\u00cf\u0085\u00cf\u0082 \u00ce\u00b1\u00cf\u0080\u00cf\u008c \u00ce\u00ac\u00ce\u00bb\u00ce\u00bb\u00ce\u00b5\u00cf\u0082 \u00ce\u00b9\u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00cf\u0083\u00ce\u00b5\u00ce\u00bb\u00ce\u00af\u00ce\u00b4\u00ce\u00b5\u00cf\u0082.\"",
                "@@ -1254,2 +1271,6 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00ce\u0092\u00ce\u00bb\u00ce\u00ad\u00cf\u0080\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00b1\u00cf\u0085\u00cf\u0084\u00cf\u008c \u00cf\u0084\u00ce\u00bf \u00ce\u00bc\u00ce\u00ae\u00ce\u00bd\u00cf\u0085\u00ce\u00bc\u00ce\u00b1 \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00b9\u00ce\u00b4\u00ce\u00ae \u00ce\u00ad\u00cf\u0087\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 <a href=\\\"https://docs.djangoproject.com/\"",
                "+\"en/%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\"",
                "+\"\\\">DEBUG=True</a> \u00cf\u0083\u00cf\u0084\u00ce\u00bf \u00ce\u00b1\u00cf\u0081\u00cf\u0087\u00ce\u00b5\u00ce\u00af\u00ce\u00bf settings \u00ce\u00ba\u00ce\u00b1\u00ce\u00b9 \u00ce\u00b4\u00ce\u00b5\u00ce\u00bd \u00ce\u00ad\u00cf\u0087\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00cf\u0081\u00cf\u0085\u00ce\u00b8\u00ce\u00bc\u00ce\u00af\u00cf\u0083\u00ce\u00b5\u00ce\u00b9 \u00ce\u00ba\u00ce\u00b1\u00ce\u00bd\u00ce\u00ad\u00ce\u00bd\u00ce\u00b1 URL \u00cf\u0083\u00cf\u0084\u00ce\u00bf \"",
                "+\"\u00ce\u00b1\u00cf\u0081\u00cf\u0087\u00ce\u00b5\u00ce\u00af\u00ce\u00bf urls.py. \u00ce\u00a3\u00cf\u0084\u00cf\u0081\u00cf\u0089\u00ce\u00b8\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00cf\u0083\u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00b4\u00ce\u00bf\u00cf\u0085\u00ce\u00bb\u00ce\u00b5\u00ce\u00b9\u00ce\u00ac!\"",
                "@@ -1259,3 +1280,3 @@ msgstr \"\u00ce\u0095\u00ce\u00b3\u00cf\u0087\u00ce\u00b5\u00ce\u00b9\u00cf\u0081\u00ce\u00af\u00ce\u00b4\u00ce\u00b9\u00ce\u00bf Django\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"\u00ce\u0098\u00ce\u00ad\u00ce\u00bc\u00ce\u00b1\u00cf\u0084\u00ce\u00b1, \u00ce\u00b1\u00ce\u00bd\u00ce\u00b1\u00cf\u0086\u00ce\u00bf\u00cf\u0081\u00ce\u00ad\u00cf\u0082 &amp; \\\"\u00cf\u0080\u00cf\u0089\u00cf\u0082 \u00ce\u00bd\u00ce\u00b1...\\\"\"",
                "diff --git a/django/conf/locale/eu/LC_MESSAGES/django.mo b/django/conf/locale/eu/LC_MESSAGES/django.mo",
                "index 561a45d94b..9b7d8433b3 100644",
                "Binary files a/django/conf/locale/eu/LC_MESSAGES/django.mo and b/django/conf/locale/eu/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/eu/LC_MESSAGES/django.po b/django/conf/locale/eu/LC_MESSAGES/django.po",
                "index 7372127521..ba3c41dc8a 100644",
                "--- a/django/conf/locale/eu/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/eu/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # Ander Mart\u00c3\u00adnez <ander.basaundi@gmail.com>, 2013-2014",
                "-# Eneko Illarramendi <eneko@illarra.com>, 2017",
                "+# Eneko Illarramendi <eneko@illarra.com>, 2017-2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "@@ -17,4 +17,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-26 20:48+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-23 14:04+0000\\n\"",
                " \"Last-Translator: Eneko Illarramendi <eneko@illarra.com>\\n\"",
                "@@ -393,2 +393,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Idatzi zenbaki bat.\"",
                "+",
                " #, python-format",
                "@@ -471,2 +474,6 @@ msgstr \"'%(value)s' balioak True edo False izan behar du.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' balioak True, False edo None izan behar du.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -559,3 +566,3 @@ msgstr \"IP helbidea\"",
                " msgid \"'%(value)s' value must be either None, True or False.\"",
                "-msgstr \"'%(value)s' balioak True, False edo None izan behar du.\"",
                "+msgstr \"'%(value)s' balioak None, True, edo False izan behar du.\"",
                "@@ -651,5 +658,2 @@ msgstr \"Idatzi zenbaki oso bat.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Idatzi zenbaki bat.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -666,2 +670,6 @@ msgstr \"Idatzi baleko iraupen bat.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Egun kopuruak {min_days} eta {max_days} artean egon behar du.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/ne/LC_MESSAGES/django.mo b/django/conf/locale/ne/LC_MESSAGES/django.mo",
                "index fc25d6d4df..2350326460 100644",
                "Binary files a/django/conf/locale/ne/LC_MESSAGES/django.mo and b/django/conf/locale/ne/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ne/LC_MESSAGES/django.po b/django/conf/locale/ne/LC_MESSAGES/django.po",
                "index f8cd93baaa..6654347457 100644",
                "--- a/django/conf/locale/ne/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ne/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # Paras Nath Chaudhary <opnchaudhary@gmail.com>, 2012",
                "-# Sagar Chalise <chalisesagar@gmail.com>, 2011-2012,2015",
                "+# Sagar Chalise <chalisesagar@gmail.com>, 2011-2012,2015,2018",
                " # Sagar Chalise <chalisesagar@gmail.com>, 2015",
                "@@ -12,3 +12,3 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "-\"PO-Revision-Date: 2018-07-21 02:37+0000\\n\"",
                "+\"PO-Revision-Date: 2018-09-29 06:13+0000\\n\"",
                " \"Last-Translator: Sagar Chalise <chalisesagar@gmail.com>\\n\"",
                "@@ -465,3 +465,3 @@ msgstr \"%(value)s' \u00e0\u00a4\u0095\u00e0\u00a5\u008b \u00e0\u00a4\u00ae\u00e0\u00a4\u00be\u00e0\u00a4\u00a8 True \u00e0\u00a4\u0085\u00e0\u00a4\u00a5\u00e0\u00a4\u00b5\u00e0\u00a4\u00be False \u00e0\u00a4\u00b9\u00e0\u00a5\u0081\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00aa\u00e0\u00a4\u00b0",
                " msgid \"'%(value)s' value must be either True, False, or None.\"",
                "-msgstr \"\"",
                "+msgstr \"'%(value)s' \u00e0\u00a4\u0095\u00e0\u00a5\u008b \u00e0\u00a4\u00ae\u00e0\u00a4\u00be\u00e0\u00a4\u00a8 True, False \u00e0\u00a4\u0085\u00e0\u00a4\u00a5\u00e0\u00a4\u00b5\u00e0\u00a4\u00be None \u00e0\u00a4\u00b9\u00e0\u00a5\u0081\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00aa\u00e0\u00a4\u00b0\u00e0\u00a5\u008d\u00e0\u00a4\u00a6\u00e0\u00a4\u009b \u00e0\u00a5\u00a4\"",
                "diff --git a/django/conf/locale/pl/LC_MESSAGES/django.mo b/django/conf/locale/pl/LC_MESSAGES/django.mo",
                "index 29b40b59f6..8c560ed13d 100644",
                "Binary files a/django/conf/locale/pl/LC_MESSAGES/django.mo and b/django/conf/locale/pl/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/pl/LC_MESSAGES/django.po b/django/conf/locale/pl/LC_MESSAGES/django.po",
                "index e78cca6fcc..de7e48c1dc 100644",
                "--- a/django/conf/locale/pl/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/pl/LC_MESSAGES/django.po",
                "@@ -33,3 +33,3 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "-\"PO-Revision-Date: 2018-05-18 23:43+0000\\n\"",
                "+\"PO-Revision-Date: 2018-09-17 17:25+0000\\n\"",
                " \"Last-Translator: m_aciek <maciej.olko@gmail.com>\\n\"",
                "@@ -518,3 +518,3 @@ msgstr \"warto\u00c5\u009b\u00c4\u0087 '%(value)s' musi by\u00c4\u0087 True lub False.\"",
                " msgid \"'%(value)s' value must be either True, False, or None.\"",
                "-msgstr \"Warto\u00c5\u009b\u00c4\u0087 \u00e2\u0080\u009e%(value)s\u00e2\u0080\u009d musi wynosi\u00c4\u0087 True, False lub None.\"",
                "+msgstr \"Warto\u00c5\u009b\u00c4\u0087 \u00e2\u0080\u009e%(value)s\u00e2\u0080\u009d musi by\u00c4\u0087 True, False lub None.\"",
                "diff --git a/django/conf/locale/sk/LC_MESSAGES/django.mo b/django/conf/locale/sk/LC_MESSAGES/django.mo",
                "index 2b0d75e5d1..6f5900941a 100644",
                "Binary files a/django/conf/locale/sk/LC_MESSAGES/django.mo and b/django/conf/locale/sk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/sk/LC_MESSAGES/django.po b/django/conf/locale/sk/LC_MESSAGES/django.po",
                "index 0d06758c1a..33b620ef38 100644",
                "--- a/django/conf/locale/sk/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/sk/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # Juraj Bubniak <translations@jbub.eu>, 2012-2013",
                "-# Marian Andre <marian@andre.sk>, 2013,2015,2017",
                "+# Marian Andre <marian@andre.sk>, 2013,2015,2017-2018",
                " # Martin Kos\u00c3\u00adr, 2011",
                "@@ -12,5 +12,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-05 11:02+0000\\n\"",
                "-\"Last-Translator: Martin T\u00c3\u00b3th <ezimir@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-25 06:21+0000\\n\"",
                "+\"Last-Translator: Marian Andre <marian@andre.sk>\\n\"",
                " \"Language-Team: Slovak (http://www.transifex.com/django/django/language/sk/)\\n\"",
                "@@ -20,3 +20,4 @@ msgstr \"\"",
                " \"Language: sk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n == 1 ? 0 : n % 1 == 0 && n \"",
                "+\">= 2 && n <= 4 ? 1 : n % 1 != 0 ? 2: 3);\\n\"",
                "@@ -376,2 +377,5 @@ msgstr[2] \"\"",
                " \"%(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"Uistite sa, \u00c5\u00bee zadan\u00c3\u00a1 hodnota m\u00c3\u00a1 najmenej %(limit_value)d znakov (m\u00c3\u00a1 \"",
                "+\"%(show_value)d).\"",
                "@@ -393,2 +397,8 @@ msgstr[2] \"\"",
                " \"%(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"Uistite sa, \u00c5\u00bee t\u00c3\u00a1to hodnota m\u00c3\u00a1 najviac %(limit_value)d  znakov (m\u00c3\u00a1 \"",
                "+\"%(show_value)d).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Zadajte \u00c4\u008d\u00c3\u00adslo.\"",
                "@@ -400,2 +410,3 @@ msgstr[1] \"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch celkovo viac ako %(max)s \u00c4\u008d\u00c3\u00adslice.\"",
                " msgstr[2] \"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch celkovo viac ako %(max)s \u00c4\u008d\u00c3\u00adslic.\"",
                "+msgstr[3] \"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch celkovo viac ako %(max)s \u00c4\u008d\u00c3\u00adslic.\"",
                "@@ -407,2 +418,3 @@ msgstr[1] \"Uistite sa, \u00c5\u00bee nie s\u00c3\u00ba zadan\u00c3\u00a9 viac ako %(max)s desatinn\u00c3\u00a9 miesta.\"",
                " msgstr[2] \"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch viac ako %(max)s desatinn\u00c3\u00bdch miest.\"",
                "+msgstr[3] \"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch viac ako %(max)s desatinn\u00c3\u00bdch miest.\"",
                "@@ -422,2 +434,5 @@ msgstr[2] \"\"",
                " \"\u00c4\u008diarkou.\"",
                "+msgstr[3] \"\"",
                "+\"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch viac ako %(max)s \u00c4\u008d\u00c3\u00adslic pred desatinnou \"",
                "+\"\u00c4\u008diarkou.\"",
                "@@ -481,2 +496,6 @@ msgstr \"'%(value)s' value mus\u00c3\u00ad by\u00c5\u00a5 True alebo False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' mus\u00c3\u00ad by\u00c5\u00a5 True, False alebo None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -651,5 +670,2 @@ msgstr \"Zadajte cel\u00c3\u00a9 \u00c4\u008d\u00c3\u00adslo.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Zadajte \u00c4\u008d\u00c3\u00adslo.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -666,2 +682,6 @@ msgstr \"Zadajte platn\u00c3\u00ba dobu trvania.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Po\u00c4\u008det dn\u00c3\u00ad mus\u00c3\u00ad by\u00c5\u00a5 medzi {min_days} a {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -685,2 +705,4 @@ msgstr[2] \"\"",
                " \"Uistite sa, \u00c5\u00bee n\u00c3\u00a1zov s\u00c3\u00baboru m\u00c3\u00a1 najviac %(max)d znakov (m\u00c3\u00a1 %(length)d).\"",
                "+msgstr[3] \"\"",
                "+\"Uistite sa, \u00c5\u00bee n\u00c3\u00a1zov s\u00c3\u00baboru m\u00c3\u00a1 najviac %(max)d znakov (m\u00c3\u00a1 %(length)d).\"",
                "@@ -728,2 +750,3 @@ msgstr[1] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo menej formul\u00c3\u00a1rov.\"",
                " msgstr[2] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo menej formul\u00c3\u00a1rov.\"",
                "+msgstr[3] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo menej formul\u00c3\u00a1rov.\"",
                "@@ -735,2 +758,3 @@ msgstr[1] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo viac formul\u00c3\u00a1rov.\"",
                " msgstr[2] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo viac formul\u00c3\u00a1rov.\"",
                "+msgstr[3] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo viac formul\u00c3\u00a1rov.\"",
                "@@ -807,2 +831,3 @@ msgstr[1] \"%(size)d bajty\"",
                " msgstr[2] \"%(size)d bajtov\"",
                "+msgstr[3] \"%(size)d bajtov\"",
                "@@ -1077,2 +1102,3 @@ msgstr[1] \"%d roky\"",
                " msgstr[2] \"%d rokov\"",
                "+msgstr[3] \"%d rokov\"",
                "@@ -1084,2 +1110,3 @@ msgstr[1] \"%d mesiace\"",
                " msgstr[2] \"%d mesiacov\"",
                "+msgstr[3] \"%d mesiacov\"",
                "@@ -1091,2 +1118,3 @@ msgstr[1] \"%d t\u00c3\u00bd\u00c5\u00bedne\"",
                " msgstr[2] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ov\"",
                "+msgstr[3] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ov\"",
                "@@ -1098,2 +1126,3 @@ msgstr[1] \"%d dni\"",
                " msgstr[2] \"%d dn\u00c3\u00ad\"",
                "+msgstr[3] \"%d dn\u00c3\u00ad\"",
                "@@ -1105,2 +1134,3 @@ msgstr[1] \"%d hodiny\"",
                " msgstr[2] \"%d hod\u00c3\u00adn\"",
                "+msgstr[3] \"%d hod\u00c3\u00adn\"",
                "@@ -1112,2 +1142,3 @@ msgstr[1] \"%d min\u00c3\u00baty\"",
                " msgstr[2] \"%d min\u00c3\u00bat\"",
                "+msgstr[3] \"%d min\u00c3\u00bat\"",
                "diff --git a/django/conf/locale/uk/LC_MESSAGES/django.mo b/django/conf/locale/uk/LC_MESSAGES/django.mo",
                "index 24023123c6..3b04145c42 100644",
                "Binary files a/django/conf/locale/uk/LC_MESSAGES/django.mo and b/django/conf/locale/uk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/uk/LC_MESSAGES/django.po b/django/conf/locale/uk/LC_MESSAGES/django.po",
                "index 463fe1392b..9ebc17a25d 100644",
                "--- a/django/conf/locale/uk/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/uk/LC_MESSAGES/django.po",
                "@@ -15,2 +15,3 @@",
                " # Sergiy Kuzmenko <s.kuzmenko@gmail.com>, 2011",
                "+# Taras Korzhak <taras.korzhak96@gmail.com>, 2018",
                " # Zoriana Zaiats, 2016-2017",
                "@@ -20,5 +21,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-24 19:51+0000\\n\"",
                "+\"Last-Translator: Taras Korzhak <taras.korzhak96@gmail.com>\\n\"",
                " \"Language-Team: Ukrainian (http://www.transifex.com/django/django/language/\"",
                "@@ -29,4 +30,6 @@ msgstr \"\"",
                " \"Language: uk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n\"",
                "-\"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != \"",
                "+\"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % \"",
                "+\"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || \"",
                "+\"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\\n\"",
                "@@ -173,2 +176,5 @@ msgstr \"\u00d0\u0093\u00d1\u0080\u00d1\u0083\u00d0\u00b7\u00d0\u00b8\u00d0\u00bd\u00d1\u0081\u00d1\u008c\u00d0\u00ba\u00d0\u00b0\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"\u00d0\u009a\u00d0\u00b0\u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d0\u00b8\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -385,2 +391,5 @@ msgstr[2] \"\"",
                " \"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0086\u00d0\u00b5 \u00d0\u00b7\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d1\u0082\u00d1\u008c \u00d0\u00bd\u00d0\u00b5 \u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0088 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(limit_value)d \u00d1\u0081\u00d0\u00b8\u00d0\u00bc\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2 \"",
                "+\"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(show_value)d).\"",
                "@@ -402,2 +411,8 @@ msgstr[2] \"\"",
                " \"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0086\u00d0\u00b5 \u00d0\u00b7\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d1\u0082\u00d1\u008c \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(limit_value)d \u00d1\u0081\u00d0\u00b8\u00d0\u00bc\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2 \"",
                "+\"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(show_value)d).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "@@ -409,2 +424,3 @@ msgstr[1] \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d0\u00b7\u00d0\u00b0\u00d0\u00b3\u00d0\u00b0\u00d0\u00bb\u00d0\u00be\u00d0\u00bc \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c",
                " msgstr[2] \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d0\u00b7\u00d0\u00b0\u00d0\u00b3\u00d0\u00b0\u00d0\u00bb\u00d0\u00be\u00d0\u00bc \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080.\"",
                "+msgstr[3] \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d0\u00b7\u00d0\u00b0\u00d0\u00b3\u00d0\u00b0\u00d0\u00bb\u00d0\u00be\u00d0\u00bc \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080.\"",
                "@@ -419,2 +435,4 @@ msgstr[2] \"\"",
                " \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080 \u00d0\u00bf\u00d1\u0096\u00d1\u0081\u00d0\u00bb\u00d1\u008f \u00d0\u00b4\u00d0\u00b5\u00d1\u0081\u00d1\u008f\u00d1\u0082\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00ba\u00d0\u00be\u00d0\u00bc\u00d0\u00b8.\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080 \u00d0\u00bf\u00d1\u0096\u00d1\u0081\u00d0\u00bb\u00d1\u008f \u00d0\u00b4\u00d0\u00b5\u00d1\u0081\u00d1\u008f\u00d1\u0082\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00ba\u00d0\u00be\u00d0\u00bc\u00d0\u00b8.\"",
                "@@ -431,2 +449,4 @@ msgstr[2] \"\"",
                " \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080 \u00d0\u00b4\u00d0\u00be \u00d0\u00b4\u00d0\u00b5\u00d1\u0081\u00d1\u008f\u00d1\u0082\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00ba\u00d0\u00be\u00d0\u00bc\u00d0\u00b8.\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080 \u00d0\u00b4\u00d0\u00be \u00d0\u00b4\u00d0\u00b5\u00d1\u0081\u00d1\u008f\u00d1\u0082\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00ba\u00d0\u00be\u00d0\u00bc\u00d0\u00b8.\"",
                "@@ -441,3 +461,3 @@ msgstr \"\"",
                " msgid \"Null characters are not allowed.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u00a1\u00d0\u00b8\u00d0\u00bc\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d0\u00b8 Null \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b4\u00d0\u00be\u00d0\u00b7\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d0\u00b5\u00d0\u00bd\u00d1\u0096.\"",
                "@@ -491,2 +511,6 @@ msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f '%(value)s' \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00b8\u00d0\u00bd\u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 True \u00d0\u00b0\u00d0\u00b1\u00d0\u00be False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f '%(value)s' \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00b8\u00d0\u00bd\u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 True, False, \u00d0\u00b0\u00d0\u00b1\u00d0\u00be None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -664,5 +688,2 @@ msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d1\u0086\u00d1\u0096\u00d0\u00bb\u00d0\u00b5 \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -679,2 +700,6 @@ msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d0\u00ba\u00d0\u00be\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d1\u0082\u00d0\u00bd\u00d1\u0083 \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00b2\u00d0\u00b0\u00d0\u00bb\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008c.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00d0\u009a\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00ba\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008c \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2 \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00b8\u00d0\u00bd\u00d0\u00bd\u00d0\u00b0 \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 {min_days} \u00d0\u00b4\u00d0\u00be {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -701,2 +726,5 @@ msgstr[2] \"\"",
                " \"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(length)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0086\u00d0\u00b5 \u00d1\u0096\u00d0\u00bc'\u00d1\u008f \u00d1\u0084\u00d0\u00b0\u00d0\u00b9\u00d0\u00bb\u00d1\u0083 \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d1\u0082\u00d1\u008c \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 \u00d0\u00b7 %(max)d \u00d1\u0081\u00d0\u00b8\u00d0\u00bc\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2 \"",
                "+\"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(length)d).\"",
                "@@ -744,2 +772,3 @@ msgstr[1] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 %d \u00d0\u00b0\u00d0\u00b1\u00d0\u00be \u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0088\u00d0\u00b5 \u00d1\u0084\u00d0\u00be\u00d1\u0080\u00d0\u00bc",
                " msgstr[2] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 %d \u00d0\u00b0\u00d0\u00b1\u00d0\u00be \u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0088\u00d0\u00b5 \u00d1\u0084\u00d0\u00be\u00d1\u0080\u00d0\u00bc.\"",
                "+msgstr[3] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 %d \u00d0\u00b0\u00d0\u00b1\u00d0\u00be \u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0088\u00d0\u00b5 \u00d1\u0084\u00d0\u00be\u00d1\u0080\u00d0\u00bc.\"",
                "@@ -751,2 +780,3 @@ msgstr[1] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 \u00d1\u008f\u00d0\u00ba \u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d1\u0096\u00d0\u00bc\u00d1\u0083\u00d0\u00bc %d \u00d1\u0084\u00d0\u00be\u00d1\u0080",
                " msgstr[2] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 \u00d1\u008f\u00d0\u00ba \u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d1\u0096\u00d0\u00bc\u00d1\u0083\u00d0\u00bc %d \u00d1\u0084\u00d0\u00be\u00d1\u0080\u00d0\u00bc.\"",
                "+msgstr[3] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 \u00d1\u008f\u00d0\u00ba \u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d1\u0096\u00d0\u00bc\u00d1\u0083\u00d0\u00bc %d \u00d1\u0084\u00d0\u00be\u00d1\u0080\u00d0\u00bc.\"",
                "@@ -824,2 +854,3 @@ msgstr[1] \"%(size)d \u00d0\u00b1\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b8\"",
                " msgstr[2] \"%(size)d \u00d0\u00b1\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(size)d \u00d0\u00b1\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d1\u0096\u00d0\u00b2\"",
                "@@ -1094,2 +1125,3 @@ msgstr[1] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d0\u00b8\"",
                " msgstr[2] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "@@ -1101,2 +1133,3 @@ msgstr[1] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\"",
                " msgstr[2] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "@@ -1108,2 +1141,3 @@ msgstr[1] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\"",
                " msgstr[2] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -1115,2 +1149,3 @@ msgstr[1] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u008f\"",
                " msgstr[2] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -1122,2 +1157,3 @@ msgstr[1] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "@@ -1129,2 +1165,3 @@ msgstr[1] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "@@ -1167,2 +1204,8 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00d0\u00af\u00d0\u00ba\u00d1\u0089\u00d0\u00be \u00d0\u00b2\u00d0\u00b8 \u00d0\u00b2\u00d0\u00b8\u00d0\u00ba\u00d0\u00be\u00d1\u0080\u00d0\u00b8\u00d1\u0081\u00d1\u0082\u00d0\u00be\u00d0\u00b2\u00d1\u0083\u00d1\u0094\u00d1\u0082\u00d0\u00b5 \u00d1\u0082\u00d0\u00b5\u00d0\u00b3 <meta name=\\\"referrer\\\" content=\\\"no-referrer\\\"> \"",
                "+\"\u00d0\u00b0\u00d0\u00b1\u00d0\u00be \u00d0\u00b2\u00d0\u00ba\u00d0\u00bb\u00d1\u008e\u00d1\u0087\u00d0\u00b0\u00d1\u0094\u00d1\u0082\u00d0\u00b5 \u00d0\u00b2 \u00d0\u00b7\u00d0\u00b0\u00d0\u00bf\u00d0\u00b8\u00d1\u0082 \u00d0\u00b7\u00d0\u00b0\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d0\u00ba 'Referrer-Policy: no-referrer', \u00d1\u0082\u00d0\u00be\u00d0\u00b4\u00d1\u0096, \u00d0\u00b1\u00d1\u0083\u00d0\u00b4\u00d1\u008c \"",
                "+\"\u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d0\u00b8\u00d0\u00b4\u00d0\u00b0\u00d0\u00bb\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d1\u0097\u00d1\u0085. CSRF-\u00d0\u00b7\u00d0\u00b0\u00d1\u0085\u00d0\u00b8\u00d1\u0081\u00d1\u0082 \u00d0\u00bf\u00d0\u00be\u00d1\u0082\u00d1\u0080\u00d0\u00b5\u00d0\u00b1\u00d1\u0083\u00d1\u0094 \u00d0\u00b7\u00d0\u00b0\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d0\u00ba 'Referer', \u00d1\u0089\u00d0\u00be\u00d0\u00b1 \u00d0\u00b2\u00d0\u00b8\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \"",
                "+\"\u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b2\u00d1\u0096\u00d1\u0080\u00d0\u00ba\u00d1\u0083. \u00d0\u00af\u00d0\u00ba\u00d1\u0089\u00d0\u00be \u00d0\u00b2\u00d0\u00b8 \u00d0\u00b7\u00d0\u00b0\u00d0\u00bd\u00d0\u00b5\u00d0\u00bf\u00d0\u00be\u00d0\u00ba\u00d0\u00be\u00d1\u0094\u00d0\u00bd\u00d1\u0096 \u00d1\u0081\u00d1\u0082\u00d0\u00be\u00d1\u0081\u00d0\u00be\u00d0\u00b2\u00d0\u00bd\u00d0\u00be \u00d0\u00bf\u00d1\u0080\u00d0\u00b8\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00bd\u00d0\u00be\u00d1\u0081\u00d1\u0082\u00d1\u0096, \u00d0\u00b2\u00d0\u00b8\u00d0\u00ba\u00d0\u00be\u00d1\u0080\u00d0\u00b8\u00d1\u0081\u00d1\u0082\u00d0\u00be\u00d0\u00b2\u00d1\u0083\u00d0\u00b9\u00d1\u0082\u00d0\u00b5 \"",
                "+\"\u00d0\u00b0\u00d0\u00bb\u00d1\u008c\u00d1\u0082\u00d0\u00b5\u00d1\u0080\u00d0\u00bd\u00d0\u00b0\u00d1\u0082\u00d0\u00b8\u00d0\u00b2\u00d0\u00b8, \u00d0\u00bd\u00d0\u00b0\u00d0\u00bf\u00d1\u0080\u00d0\u00b8\u00d0\u00ba\u00d0\u00bb\u00d0\u00b0\u00d0\u00b4, \u00d0\u00b4\u00d0\u00bb\u00d1\u008f \u00d0\u00bf\u00d0\u00be\u00d1\u0081\u00d0\u00b8\u00d0\u00bb\u00d0\u00b0\u00d0\u00bd\u00d1\u008c \u00d0\u00bd\u00d0\u00b0 \u00d1\u0081\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b8 \u00d1\u0082\u00d1\u0080\u00d0\u00b5\u00d1\u0082\u00d1\u0096\u00d1\u0085 \u00d1\u0081\u00d1\u0082\u00d0\u00be\u00d1\u0080\u00d1\u0096\u00d0\u00bd \u00d0\u00b2\u00d0\u00b8\u00d0\u00ba\u00d0\u00be\u00d1\u0080\u00d0\u00b8\u00d1\u0081\u00d1\u0082\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5 \"",
                "+\"\u00d1\u0082\u00d0\u00b5\u00d0\u00b3 <a rel=\\\"noreferrer\\\" ...>.\"",
                "@@ -1246,3 +1289,3 @@ msgstr \"\u00d0\u0092\u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082 \u00d0\u00b4\u00d0\u00b8\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d1\u0082\u00d0\u00be\u00d1\u0080\u00d1\u0096\u00d1\u0097 %(directory)s\"",
                " msgid \"Django: the Web framework for perfectionists with deadlines.\"",
                "-msgstr \"\"",
                "+msgstr \"Django: \u00d0\u00b2\u00d0\u00b5\u00d0\u00b1-\u00d1\u0084\u00d1\u0080\u00d0\u00b5\u00d0\u00b9\u00d0\u00bc\u00d0\u00b2\u00d0\u00be\u00d1\u0080\u00d0\u00ba \u00d0\u00b4\u00d0\u00bb\u00d1\u008f \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d1\u0084\u00d0\u00b5\u00d0\u00ba\u00d1\u0086\u00d1\u0096\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u0096\u00d0\u00b2 \u00d0\u00b7 \u00d1\u0080\u00d0\u00b5\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d1\u0086\u00d1\u008f\u00d0\u00bc\u00d0\u00b8.\"",
                "@@ -1266,2 +1309,6 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00d0\u0092\u00d0\u00b8 \u00d0\u00b1\u00d0\u00b0\u00d1\u0087\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d1\u0086\u00d1\u008e \u00d1\u0081\u00d1\u0082\u00d0\u00be\u00d1\u0080\u00d1\u0096\u00d0\u00bd\u00d0\u00ba\u00d1\u0083 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083 \u00d1\u0089\u00d0\u00be \u00d0\u00b7\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00bd\u00d0\u00b0 <a href=\\\"https://docs.djangoproject.\"",
                "+\"com/en/%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\"",
                "+\"\\\">DEBUG</a> \u00d0\u00b2\u00d1\u0081\u00d1\u0082\u00d0\u00b0\u00d0\u00bd\u00d0\u00be\u00d0\u00b2\u00d0\u00bb\u00d0\u00b5\u00d0\u00bd\u00d0\u00b0 \u00d0\u00bd\u00d0\u00b0 <i>True</i> \u00d1\u0083 \u00d0\u00b2\u00d0\u00b0\u00d1\u0088\u00d0\u00be\u00d0\u00bc\u00d1\u0083 \u00d1\u0084\u00d0\u00b0\u00d0\u00b9\u00d0\u00bb\u00d1\u0096 \u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d1\u0084\u00d1\u0096\u00d0\u00b3\u00d1\u0083\u00d1\u0080\u00d0\u00b0\u00d1\u0086\u00d1\u0096\u00d1\u0097 \u00d1\u0096 \u00d0\u00b2\u00d0\u00b8 \u00d0\u00bd\u00d0\u00b5 \"",
                "+\"\u00d0\u00bd\u00d0\u00b0\u00d0\u00bb\u00d0\u00b0\u00d1\u0088\u00d1\u0082\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d0\u00bb\u00d0\u00b8 \u00d0\u00b6\u00d0\u00be\u00d0\u00b4\u00d0\u00bd\u00d0\u00be\u00d0\u00b3\u00d0\u00be URL.\"",
                "@@ -1271,14 +1318,14 @@ msgstr \"\u00d0\u0094\u00d0\u00be\u00d0\u00ba\u00d1\u0083\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0082\u00d0\u00b0\u00d1\u0086\u00d1\u0096\u00d1\u008f Django\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u00a1\u00d1\u0082\u00d0\u00b0\u00d1\u0082\u00d1\u0082\u00d1\u0096, \u00d0\u00b4\u00d0\u00be\u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00ba\u00d0\u00b8 \u00d1\u0082\u00d0\u00b0 \u00d1\u0096\u00d0\u00bd\u00d1\u0081\u00d1\u0082\u00d1\u0080\u00d1\u0083\u00d0\u00ba\u00d1\u0086\u00d1\u0096\u00d1\u0097\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u009f\u00d0\u00be\u00d1\u0081\u00d1\u0096\u00d0\u00b1\u00d0\u00bd\u00d0\u00b8\u00d0\u00ba: \u00d0\u00bf\u00d1\u0080\u00d0\u00be\u00d0\u00b3\u00d1\u0080\u00d0\u00b0\u00d0\u00bc\u00d0\u00b0 \u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d0\u00be\u00d1\u0081\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u008f\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u009f\u00d0\u00be\u00d1\u0087\u00d0\u00b0\u00d1\u0082\u00d0\u00be\u00d0\u00ba \u00d1\u0080\u00d0\u00be\u00d0\u00b1\u00d0\u00be\u00d1\u0082\u00d0\u00b8 \u00d0\u00b7 Django\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u00a1\u00d0\u00bf\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00bd\u00d0\u00be\u00d1\u0082\u00d0\u00b0 Django\"",
                " msgid \"Connect, get help, or contribute\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u009e\u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bc\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \u00d0\u00b4\u00d0\u00be\u00d0\u00bf\u00d0\u00be\u00d0\u00bc\u00d0\u00be\u00d0\u00b3\u00d1\u0083, \u00d1\u0087\u00d0\u00b8 \u00d0\u00b4\u00d0\u00be\u00d0\u00bf\u00d0\u00be\u00d0\u00bc\u00d0\u00be\u00d0\u00b3\u00d1\u0082\u00d0\u00b8\"",
                "diff --git a/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo b/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo",
                "index 66141980d2..911d910c78 100644",
                "Binary files a/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo and b/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/zh_Hans/LC_MESSAGES/django.po b/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "index f239ee548c..7b5e5bf14d 100644",
                "--- a/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "@@ -17,2 +17,3 @@",
                " # Liping Wang <lynn.config@gmail.com>, 2016",
                "+# Wentao Han <wentao.han@gmail.com>, 2018",
                " # Xiang Yu <bupt.aswmtjdsj@gmail.com>, 2014",
                "@@ -28,4 +29,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "-\"PO-Revision-Date: 2018-06-25 13:50+0000\\n\"",
                "-\"Last-Translator: Le Yang <youngleocn@qq.com>\\n\"",
                "+\"PO-Revision-Date: 2018-09-28 07:47+0000\\n\"",
                "+\"Last-Translator: Wentao Han <wentao.han@gmail.com>\\n\"",
                " \"Language-Team: Chinese (China) (http://www.transifex.com/django/django/\"",
                "@@ -655,3 +656,3 @@ msgstr \"\u00e8\u00af\u00b7\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00e3\u0080\u0082\"",
                " msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e5\u00a4\u00a9\u00e6\u0095\u00b0\u00e5\u00ba\u0094\u00e8\u00af\u00a5\u00e5\u009c\u00a8 {min_days} \u00e5\u0092\u008c {max_days} \u00e4\u00b9\u008b\u00e9\u0097\u00b4\u00e3\u0080\u0082\"",
                "diff --git a/django/contrib/admin/locale/az/LC_MESSAGES/django.mo b/django/contrib/admin/locale/az/LC_MESSAGES/django.mo",
                "index 09a189a595..13228817de 100644",
                "Binary files a/django/contrib/admin/locale/az/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/az/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/az/LC_MESSAGES/django.po b/django/contrib/admin/locale/az/LC_MESSAGES/django.po",
                "index 8465448445..1bedd48525 100644",
                "--- a/django/contrib/admin/locale/az/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/az/LC_MESSAGES/django.po",
                "@@ -3,2 +3,3 @@",
                " # Translators:",
                "+# Emin Mastizada <emin@linux.com>, 2018",
                " # Emin Mastizada <emin@linux.com>, 2016",
                "@@ -10,5 +11,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-19 16:41+0000\\n\"",
                "-\"Last-Translator: Zulfugar Ismayilzadeh <zulfuqar.ismayilzada@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "+\"PO-Revision-Date: 2018-09-09 12:44+0000\\n\"",
                "+\"Last-Translator: Emin Mastizada <emin@linux.com>\\n\"",
                " \"Language-Team: Azerbaijani (http://www.transifex.com/django/django/language/\"",
                "@@ -90,2 +91,11 @@ msgstr \"Y\u00c4\u00b1\u00c4\u009f\u00c4\u00b1\u00c5\u009fd\u00c4\u00b1r\"",
                "+msgid \"Addition\"",
                "+msgstr \"\u00c6\u008flav\u00c9\u0099\"",
                "+",
                "+msgid \"Change\"",
                "+msgstr \"D\u00c9\u0099yi\u00c5\u009f\"",
                "+",
                "+msgid \"Deletion\"",
                "+msgstr \"Silm\u00c9\u0099\"",
                "+",
                " msgid \"action time\"",
                "@@ -169,7 +179,7 @@ msgstr \"\"",
                " #, python-brace-format",
                "-msgid \"\"",
                "-\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "-msgstr \"\"",
                "-\"{name} \\\"{obj}\\\" u\u00c4\u009furla \u00c9\u0099lav\u00c9\u0099 edildi. Bunu t\u00c9\u0099krar a\u00c5\u009fa\u00c4\u009f\u00c4\u00b1dan d\u00c9\u0099yi\u00c5\u009fdir\u00c9\u0099 \"",
                "-\"bil\u00c9\u0099rsiz.\"",
                "+msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "+msgstr \"{name} \\\"{obj}\\\" u\u00c4\u009furla \u00c9\u0099lav\u00c9\u0099 edildi.\"",
                "+",
                "+msgid \"You may edit it again below.\"",
                "+msgstr \"Bunu a\u00c5\u009fa\u00c4\u009f\u00c4\u00b1da t\u00c9\u0099krar redakt\u00c9\u0099 ed\u00c9\u0099 bil\u00c9\u0099rsiz.\"",
                "@@ -183,6 +193,2 @@ msgstr \"\"",
                "-#, python-brace-format",
                "-msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "-msgstr \"{name} \\\"{obj}\\\" u\u00c4\u009furla \u00c9\u0099lav\u00c9\u0099 edildi.\"",
                "-",
                " #, python-brace-format",
                "@@ -193,2 +199,9 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"\"",
                "+\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgstr \"\"",
                "+\"{name} \\\"{obj}\\\" u\u00c4\u009furla \u00c9\u0099lav\u00c9\u0099 edildi. Bunu t\u00c9\u0099krar a\u00c5\u009fa\u00c4\u009f\u00c4\u00b1dan d\u00c9\u0099yi\u00c5\u009fdir\u00c9\u0099 \"",
                "+\"bil\u00c9\u0099rsiz.\"",
                "+",
                " #, python-brace-format",
                "@@ -231,2 +244,6 @@ msgstr \"%s d\u00c9\u0099yi\u00c5\u009f\"",
                "+#, python-format",
                "+msgid \"View %s\"",
                "+msgstr \"%s g\u00c3\u00b6r\"",
                "+",
                " msgid \"Database error\"",
                "@@ -339,5 +356,3 @@ msgstr \"Parolu d\u00c9\u0099yi\u00c5\u009f\"",
                " msgid \"Please correct the error below.\"",
                "-msgstr \"\"",
                "-\"one: A\u00c5\u009fa\u00c4\u009f\u00c4\u00b1dak\u00c4\u00b1 s\u00c9\u0099hvi d\u00c3\u00bcz\u00c9\u0099ltm\u00c9\u0099yi xahi\u00c5\u009f edirik.\\n\"",
                "-\"other: A\u00c5\u009fa\u00c4\u009f\u00c4\u00b1dak\u00c4\u00b1 s\u00c9\u0099hvl\u00c9\u0099ri d\u00c3\u00bcz\u00c9\u0099ltm\u00c9\u0099yi xahi\u00c5\u009f edirik.\"",
                "+msgstr \"L\u00c3\u00bctf\u00c9\u0099n a\u00c5\u009fa\u00c4\u009f\u00c4\u00b1dak\u00c4\u00b1 x\u00c9\u0099tan\u00c4\u00b1 d\u00c3\u00bcz\u00c9\u0099ldin.\"",
                "@@ -452,4 +467,4 @@ msgstr \"\"",
                "-msgid \"Change\"",
                "-msgstr \"D\u00c9\u0099yi\u00c5\u009f\"",
                "+msgid \"View\"",
                "+msgstr \"G\u00c3\u00b6r\"",
                "@@ -472,4 +487,4 @@ msgstr \"\u00c6\u008flav\u00c9\u0099 et\"",
                "-msgid \"You don't have permission to edit anything.\"",
                "-msgstr \"\u00c3\u009czrl\u00c9\u0099r, amma sizin n\u00c9\u0099yis\u00c9\u0099 d\u00c9\u0099yi\u00c5\u009fm\u00c9\u0099y\u00c9\u0099 s\u00c9\u0099lahiyy\u00c9\u0099tiniz \u00c3\u00a7atm\u00c4\u00b1r.\"",
                "+msgid \"You don't have permission to view or edit anything.\"",
                "+msgstr \"He\u00c3\u00a7 n\u00c9\u0099yi g\u00c3\u00b6rm\u00c9\u0099 v\u00c9\u0099 ya redakt\u00c9\u0099 etm\u00c9\u0099 icaz\u00c9\u0099niz yoxdur.\"",
                "@@ -535,2 +550,6 @@ msgstr \"Se\u00c3\u00a7ilmi\u00c5\u009f %(model)s d\u00c9\u0099yi\u00c5\u009fdir\"",
                "+#, python-format",
                "+msgid \"View selected %(model)s\"",
                "+msgstr \"Se\u00c3\u00a7il\u00c9\u0099n %(model)s g\u00c3\u00b6r\"",
                "+",
                " #, python-format",
                "@@ -565,2 +584,8 @@ msgstr \"Yadda saxla v\u00c9\u0099 redakt\u00c9\u0099y\u00c9\u0099 davam et\"",
                "+msgid \"Save and view\"",
                "+msgstr \"Saxla v\u00c9\u0099 g\u00c3\u00b6r\"",
                "+",
                "+msgid \"Close\"",
                "+msgstr \"Qapat\"",
                "+",
                " msgid \"Thanks for spending some quality time with the Web site today.\"",
                "@@ -673,2 +698,6 @@ msgstr \"%s d\u00c9\u0099yi\u00c5\u009fm\u00c9\u0099k \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn se\u00c3\u00a7\"",
                "+#, python-format",
                "+msgid \"Select %s to view\"",
                "+msgstr \"G\u00c3\u00b6rm\u00c9\u0099k \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn %s se\u00c3\u00a7in\"",
                "+",
                " msgid \"Date:\"",
                "diff --git a/django/contrib/admin/locale/ca/LC_MESSAGES/django.mo b/django/contrib/admin/locale/ca/LC_MESSAGES/django.mo",
                "index 94bc3d9b01..27051b485e 100644",
                "Binary files a/django/contrib/admin/locale/ca/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/ca/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/ca/LC_MESSAGES/django.po b/django/contrib/admin/locale/ca/LC_MESSAGES/django.po",
                "index 3905dcb9bb..56bf426199 100644",
                "--- a/django/contrib/admin/locale/ca/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/ca/LC_MESSAGES/django.po",
                "@@ -6,2 +6,3 @@",
                " # duub qnnp, 2015",
                "+# GerardoGa <ggarciamaristany@gmail.com>, 2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "@@ -12,5 +13,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-19 16:40+0000\\n\"",
                "-\"Last-Translator: Antoni Aloy <aaloy@apsl.net>\\n\"",
                "+\"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 07:45+0000\\n\"",
                "+\"Last-Translator: GerardoGa <ggarciamaristany@gmail.com>\\n\"",
                " \"Language-Team: Catalan (http://www.transifex.com/django/django/language/\"",
                "@@ -92,2 +93,11 @@ msgstr \"Eliminar\"",
                "+msgid \"Addition\"",
                "+msgstr \"\"",
                "+",
                "+msgid \"Change\"",
                "+msgstr \"Modificar\"",
                "+",
                "+msgid \"Deletion\"",
                "+msgstr \"\"",
                "+",
                " msgid \"action time\"",
                "@@ -169,7 +179,7 @@ msgstr \"Premi \\\"Control\\\" o \\\"Command\\\" a un Mac per seleccionar-ne m\u00c3\u00a9s d'un.\"",
                " #, python-brace-format",
                "-msgid \"\"",
                "-\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "+msgstr \"El {name} \\\"{obj}\\\" fou afegit amb \u00c3\u00a8xit.\"",
                "+",
                "+msgid \"You may edit it again below.\"",
                " msgstr \"\"",
                "-\"El  {name} \\\"{obj}\\\" s'ha afegit amb \u00c3\u00a8xit. Pots editar-lo altra vegada a \"",
                "-\"sota.\"",
                "@@ -183,6 +193,2 @@ msgstr \"\"",
                "-#, python-brace-format",
                "-msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "-msgstr \"El {name} \\\"{obj}\\\" fou afegit amb \u00c3\u00a8xit.\"",
                "-",
                " #, python-brace-format",
                "@@ -194,2 +200,9 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"\"",
                "+\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgstr \"\"",
                "+\"El  {name} \\\"{obj}\\\" s'ha afegit amb \u00c3\u00a8xit. Pots editar-lo altra vegada a \"",
                "+\"sota.\"",
                "+",
                " #, python-brace-format",
                "@@ -232,2 +245,6 @@ msgstr \"Modificar %s\"",
                "+#, python-format",
                "+msgid \"View %s\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Database error\"",
                "@@ -341,3 +358,3 @@ msgstr \"Canviar contrasenya\"",
                " msgid \"Please correct the error below.\"",
                "-msgstr \"Si us plau, corregiu els errors mostrats a sota.\"",
                "+msgstr \"Si us plau, corregeix l'error de sota\"",
                "@@ -452,4 +469,4 @@ msgstr \"\"",
                "-msgid \"Change\"",
                "-msgstr \"Modificar\"",
                "+msgid \"View\"",
                "+msgstr \"\"",
                "@@ -472,4 +489,4 @@ msgstr \"Afegir\"",
                "-msgid \"You don't have permission to edit anything.\"",
                "-msgstr \"No teniu perm\u00c3\u00ads per editar res.\"",
                "+msgid \"You don't have permission to view or edit anything.\"",
                "+msgstr \"\"",
                "@@ -536,2 +553,6 @@ msgstr \"Canviea el %(model)s seleccionat\"",
                "+#, python-format",
                "+msgid \"View selected %(model)s\"",
                "+msgstr \"\"",
                "+",
                " #, python-format",
                "@@ -566,2 +587,8 @@ msgstr \"Desar i continuar editant\"",
                "+msgid \"Save and view\"",
                "+msgstr \"\"",
                "+",
                "+msgid \"Close\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Thanks for spending some quality time with the Web site today.\"",
                "@@ -678,2 +705,6 @@ msgstr \"Seleccioneu %s per modificar\"",
                "+#, python-format",
                "+msgid \"Select %s to view\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Date:\"",
                "diff --git a/django/contrib/admin/locale/el/LC_MESSAGES/django.mo b/django/contrib/admin/locale/el/LC_MESSAGES/django.mo",
                "index e2cf264e6d..d6045141b9 100644",
                "Binary files a/django/contrib/admin/locale/el/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/el/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/el/LC_MESSAGES/django.po b/django/contrib/admin/locale/el/LC_MESSAGES/django.po",
                "index 9238316f36..fbe5efb580 100644",
                "--- a/django/contrib/admin/locale/el/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/el/LC_MESSAGES/django.po",
                "@@ -6,3 +6,3 @@",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "-# Nick Mavrakis <mavrakis.n@gmail.com>, 2017",
                "+# Nick Mavrakis <mavrakis.n@gmail.com>, 2017-2018",
                " # Nick Mavrakis <mavrakis.n@gmail.com>, 2016",
                "@@ -15,4 +15,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 18:54+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 09:56+0000\\n\"",
                " \"Last-Translator: Nick Mavrakis <mavrakis.n@gmail.com>\\n\"",
                "@@ -95,2 +95,11 @@ msgstr \"\u00ce\u0091\u00cf\u0086\u00ce\u00b1\u00ce\u00af\u00cf\u0081\u00ce\u00b5\u00cf\u0083\u00ce\u00b7\"",
                "+msgid \"Addition\"",
                "+msgstr \"\u00ce\u00a0\u00cf\u0081\u00ce\u00bf\u00cf\u0083\u00ce\u00b8\u00ce\u00ae\u00ce\u00ba\u00ce\u00b7\"",
                "+",
                "+msgid \"Change\"",
                "+msgstr \"\u00ce\u0091\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00b3\u00ce\u00ae\"",
                "+",
                "+msgid \"Deletion\"",
                "+msgstr \"\u00ce\u0094\u00ce\u00b9\u00ce\u00b1\u00ce\u00b3\u00cf\u0081\u00ce\u00b1\u00cf\u0086\u00ce\u00ae\"",
                "+",
                " msgid \"action time\"",
                "@@ -174,7 +183,7 @@ msgstr \"\"",
                " #, python-brace-format",
                "-msgid \"\"",
                "-\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "-msgstr \"\"",
                "-\"\u00ce\u00a4\u00ce\u00bf {name} \\\"{obj}\\\" \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00cf\u0083\u00cf\u0084\u00ce\u00ad\u00ce\u00b8\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5 \u00ce\u00bc\u00ce\u00b5 \u00ce\u00b5\u00cf\u0080\u00ce\u00b9\u00cf\u0084\u00cf\u0085\u00cf\u0087\u00ce\u00af\u00ce\u00b1. \u00ce\u009c\u00cf\u0080\u00ce\u00bf\u00cf\u0081\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00bd\u00ce\u00b1 \u00cf\u0084\u00ce\u00bf \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \"",
                "-\"\u00cf\u0080\u00ce\u00ac\u00ce\u00bb\u00ce\u00b9 \u00cf\u0080\u00ce\u00b1\u00cf\u0081\u00ce\u00b1\u00ce\u00ba\u00ce\u00ac\u00cf\u0084\u00cf\u0089.\"",
                "+msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "+msgstr \"\u00ce\u00a4\u00ce\u00bf {name} \\\"{obj}\\\" \u00ce\u00b1\u00cf\u0080\u00ce\u00bf\u00ce\u00b8\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5\u00cf\u008d\u00cf\u0084\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5 \u00ce\u00bc\u00ce\u00b5 \u00ce\u00b5\u00cf\u0080\u00ce\u00b9\u00cf\u0084\u00cf\u0085\u00cf\u0087\u00ce\u00af\u00ce\u00b1.\"",
                "+",
                "+msgid \"You may edit it again below.\"",
                "+msgstr \"\u00ce\u009c\u00cf\u0080\u00ce\u00bf\u00cf\u0081\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00bd\u00ce\u00b1 \u00cf\u0084\u00ce\u00bf \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00be\u00ce\u00b1\u00ce\u00bd\u00ce\u00ac \u00cf\u0080\u00ce\u00b1\u00cf\u0081\u00ce\u00b1\u00ce\u00ba\u00ce\u00ac\u00cf\u0084\u00cf\u0089.\"",
                "@@ -188,6 +197,2 @@ msgstr \"\"",
                "-#, python-brace-format",
                "-msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "-msgstr \"\u00ce\u00a4\u00ce\u00bf {name} \\\"{obj}\\\" \u00ce\u00b1\u00cf\u0080\u00ce\u00bf\u00ce\u00b8\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5\u00cf\u008d\u00cf\u0084\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5 \u00ce\u00bc\u00ce\u00b5 \u00ce\u00b5\u00cf\u0080\u00ce\u00b9\u00cf\u0084\u00cf\u0085\u00cf\u0087\u00ce\u00af\u00ce\u00b1.\"",
                "-",
                " #, python-brace-format",
                "@@ -199,2 +204,9 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"\"",
                "+\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgstr \"\"",
                "+\"\u00ce\u00a4\u00ce\u00bf {name} \\\"{obj}\\\" \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00cf\u0083\u00cf\u0084\u00ce\u00ad\u00ce\u00b8\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5 \u00ce\u00bc\u00ce\u00b5 \u00ce\u00b5\u00cf\u0080\u00ce\u00b9\u00cf\u0084\u00cf\u0085\u00cf\u0087\u00ce\u00af\u00ce\u00b1. \u00ce\u009c\u00cf\u0080\u00ce\u00bf\u00cf\u0081\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00bd\u00ce\u00b1 \u00cf\u0084\u00ce\u00bf \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \"",
                "+\"\u00cf\u0080\u00ce\u00ac\u00ce\u00bb\u00ce\u00b9 \u00cf\u0080\u00ce\u00b1\u00cf\u0081\u00ce\u00b1\u00ce\u00ba\u00ce\u00ac\u00cf\u0084\u00cf\u0089.\"",
                "+",
                " #, python-brace-format",
                "@@ -238,2 +250,6 @@ msgstr \"\u00ce\u0091\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00b3\u00ce\u00ae \u00cf\u0084\u00ce\u00bf\u00cf\u0085 %s\"",
                "+#, python-format",
                "+msgid \"View %s\"",
                "+msgstr \"\u00ce\u00a0\u00cf\u0081\u00ce\u00bf\u00ce\u00b2\u00ce\u00bf\u00ce\u00bb\u00ce\u00ae %s\"",
                "+",
                " msgid \"Database error\"",
                "@@ -463,4 +479,4 @@ msgstr \"\"",
                "-msgid \"Change\"",
                "-msgstr \"\u00ce\u0091\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00b3\u00ce\u00ae\"",
                "+msgid \"View\"",
                "+msgstr \"\u00ce\u00a0\u00cf\u0081\u00ce\u00bf\u00ce\u00b2\u00ce\u00bf\u00ce\u00bb\u00ce\u00ae\"",
                "@@ -483,4 +499,4 @@ msgstr \"\u00ce\u00a0\u00cf\u0081\u00ce\u00bf\u00cf\u0083\u00ce\u00b8\u00ce\u00ae\u00ce\u00ba\u00ce\u00b7\"",
                "-msgid \"You don't have permission to edit anything.\"",
                "-msgstr \"\u00ce\u0094\u00ce\u00b5\u00ce\u00bd \u00ce\u00ad\u00cf\u0087\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00b4\u00ce\u00b9\u00ce\u00ba\u00ce\u00b1\u00ce\u00af\u00cf\u0089\u00ce\u00bc\u00ce\u00b1 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00cf\u0084\u00ce\u00af\u00cf\u0080\u00ce\u00bf\u00cf\u0084\u00ce\u00b1.\"",
                "+msgid \"You don't have permission to view or edit anything.\"",
                "+msgstr \"\u00ce\u0094\u00ce\u00b5\u00ce\u00bd \u00ce\u00ad\u00cf\u0087\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00b4\u00ce\u00b9\u00ce\u00ba\u00ce\u00b1\u00ce\u00af\u00cf\u0089\u00ce\u00bc\u00ce\u00b1 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b4\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00ae \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00cf\u0084\u00ce\u00af\u00cf\u0080\u00ce\u00bf\u00cf\u0084\u00ce\u00b1.\"",
                "@@ -547,2 +563,6 @@ msgstr \"\u00ce\u0086\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00be\u00ce\u00b5 \u00cf\u0084\u00ce\u00bf \u00ce\u00b5\u00cf\u0080\u00ce\u00b9\u00ce\u00bb\u00ce\u00b5\u00ce\u00b3\u00ce\u00bc\u00ce\u00ad\u00ce\u00bd\u00ce\u00bf %(model)s\"",
                "+#, python-format",
                "+msgid \"View selected %(model)s\"",
                "+msgstr \"\u00ce\u0095\u00cf\u0080\u00ce\u00b9\u00ce\u00bb\u00ce\u00b5\u00ce\u00b3\u00ce\u00bc\u00ce\u00ad\u00ce\u00bd\u00ce\u00bf View %(model)s\"",
                "+",
                " #, python-format",
                "@@ -577,2 +597,8 @@ msgstr \"\u00ce\u0091\u00cf\u0080\u00ce\u00bf\u00ce\u00b8\u00ce\u00ae\u00ce\u00ba\u00ce\u00b5\u00cf\u0085\u00cf\u0083\u00ce\u00b7 \u00ce\u00ba\u00ce\u00b1\u00ce\u00b9 \u00cf\u0083\u00cf\u0085\u00ce\u00bd\u00ce\u00ad\u00cf\u0087\u00ce\u00b5\u00ce\u00b9\u00ce\u00b1 \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00ce\u00af\u00ce\u00b1\u00cf\u0082\"",
                "+msgid \"Save and view\"",
                "+msgstr \"\u00ce\u0091\u00cf\u0080\u00ce\u00bf\u00ce\u00b8\u00ce\u00ae\u00ce\u00ba\u00ce\u00b5\u00cf\u0085\u00cf\u0083\u00ce\u00b7 \u00ce\u00ba\u00ce\u00b1\u00ce\u00b9 \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00ce\u00b2\u00ce\u00bf\u00ce\u00bb\u00ce\u00ae\"",
                "+",
                "+msgid \"Close\"",
                "+msgstr \"\u00ce\u009a\u00ce\u00bb\u00ce\u00b5\u00ce\u00af\u00cf\u0083\u00ce\u00b9\u00ce\u00bc\u00ce\u00bf\"",
                "+",
                " msgid \"Thanks for spending some quality time with the Web site today.\"",
                "@@ -698,2 +724,6 @@ msgstr \"\u00ce\u0095\u00cf\u0080\u00ce\u00b9\u00ce\u00bb\u00ce\u00ad\u00ce\u00be\u00cf\u0084\u00ce\u00b5 %s \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00cf\u0082 \u00ce\u00b1\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00b3\u00ce\u00ae\"",
                "+#, python-format",
                "+msgid \"Select %s to view\"",
                "+msgstr \"\u00ce\u0095\u00cf\u0080\u00ce\u00b9\u00ce\u00bb\u00ce\u00ad\u00ce\u00be\u00cf\u0084\u00ce\u00b5 %s \u00ce\u00b3\u00ce\u00b9\u00ce\u00b1 \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00ce\u00b2\u00ce\u00bf\u00ce\u00bb\u00ce\u00ae\"",
                "+",
                " msgid \"Date:\"",
                "diff --git a/django/contrib/admin/locale/eu/LC_MESSAGES/django.mo b/django/contrib/admin/locale/eu/LC_MESSAGES/django.mo",
                "index d5b272d830..3d4808eeff 100644",
                "Binary files a/django/contrib/admin/locale/eu/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/eu/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/eu/LC_MESSAGES/django.po b/django/contrib/admin/locale/eu/LC_MESSAGES/django.po",
                "index 522ea99ecd..814ffe808d 100644",
                "--- a/django/contrib/admin/locale/eu/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/eu/LC_MESSAGES/django.po",
                "@@ -4,6 +4,6 @@",
                " # Aitzol Naberan <anaberan@codesyntax.com>, 2013,2016",
                "-# Eneko Illarramendi <eneko@illarra.com>, 2017",
                "+# Eneko Illarramendi <eneko@illarra.com>, 2017-2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "-# julen <julenx@gmail.com>, 2012-2013",
                "-# julen <julenx@gmail.com>, 2013",
                "+# julen, 2012-2013",
                "+# julen, 2013",
                " # Urtzi Odriozola <urtzi.odriozola@gmail.com>, 2017",
                "@@ -13,5 +13,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-25 07:52+0000\\n\"",
                "-\"Last-Translator: Urtzi Odriozola <urtzi.odriozola@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "+\"PO-Revision-Date: 2018-08-28 10:32+0000\\n\"",
                "+\"Last-Translator: Eneko Illarramendi <eneko@illarra.com>\\n\"",
                " \"Language-Team: Basque (http://www.transifex.com/django/django/language/eu/)\\n\"",
                "@@ -92,2 +92,11 @@ msgstr \"Kendu\"",
                "+msgid \"Addition\"",
                "+msgstr \"Gehitzea\"",
                "+",
                "+msgid \"Change\"",
                "+msgstr \"Aldatu\"",
                "+",
                "+msgid \"Deletion\"",
                "+msgstr \"Ezabatzea\"",
                "+",
                " msgid \"action time\"",
                "@@ -171,6 +180,7 @@ msgstr \"\"",
                " #, python-brace-format",
                "-msgid \"\"",
                "-\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "-msgstr \"\"",
                "-\"{name} \\\"{obj}\\\" ondo gehitu da. Aldaketa gehiago egin ditzazkezu jarraian.\"",
                "+msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "+msgstr \"{name} \\\"{obj}\\\" ondo gehitu da.\"",
                "+",
                "+msgid \"You may edit it again below.\"",
                "+msgstr \"Aldaketa gehiago egin ditzazkezu jarraian.\"",
                "@@ -183,6 +193,2 @@ msgstr \"\"",
                "-#, python-brace-format",
                "-msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "-msgstr \"{name} \\\"{obj}\\\" ondo gehitu da.\"",
                "-",
                " #, python-brace-format",
                "@@ -193,2 +199,8 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"\"",
                "+\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgstr \"\"",
                "+\"{name} \\\"{obj}\\\" ondo gehitu da. Aldaketa gehiago egin ditzazkezu jarraian.\"",
                "+",
                " #, python-brace-format",
                "@@ -231,2 +243,6 @@ msgstr \"Aldatu %s\"",
                "+#, python-format",
                "+msgid \"View %s\"",
                "+msgstr \"%s ikusi\"",
                "+",
                " msgid \"Database error\"",
                "@@ -311,3 +327,3 @@ msgstr \"\"",
                " msgid \"Run the selected action\"",
                "-msgstr \"Burutu hautatutako ekintza\"",
                "+msgstr \"Burutu aukeratutako ekintza\"",
                "@@ -340,6 +356,6 @@ msgstr \"Aldatu pasahitza\"",
                " msgid \"Please correct the error below.\"",
                "-msgstr \"Zuzendu azpiko erroreak.\"",
                "+msgstr \"Mesedez zuzendu erroreak behean.\"",
                " msgid \"Please correct the errors below.\"",
                "-msgstr \"Mesedez zuzendu azpiko erroreak.\"",
                "+msgstr \"Mesedez zuzendu erroreak behean.\"",
                "@@ -370,3 +386,3 @@ msgstr \"Historia\"",
                " msgid \"View on site\"",
                "-msgstr \"Ikusi gunean\"",
                "+msgstr \"Webgunean ikusi\"",
                "@@ -431,3 +447,3 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"Hautatutako %(objects_name)s ezabatzeak erlazionatutako objektuak ezabatzea \"",
                "+\"Aukeratutako %(objects_name)s ezabatzeak erlazionatutako objektuak ezabatzea \"",
                " \"eskatzen du baina zure kontuak ez dauka baimen nahikorik objektu mota hauek \"",
                "@@ -440,3 +456,3 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"Hautatutako %(objects_name)s ezabatzeak erlazionatutako objektu babestu \"",
                "+\"Aukeratutako %(objects_name)s ezabatzeak erlazionatutako objektu babestu \"",
                " \"hauek ezabatzea eskatzen du:\"",
                "@@ -448,7 +464,7 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"Ziur zaude hautatutako %(objects_name)s ezabatu nahi duzula? Objektu guzti \"",
                "+\"Ziur zaude aukeratutako %(objects_name)s ezabatu nahi duzula? Objektu guzti \"",
                " \"hauek eta erlazionatutako elementu guztiak ezabatuko dira:\"",
                "-msgid \"Change\"",
                "-msgstr \"Aldatu\"",
                "+msgid \"View\"",
                "+msgstr \"Ikusi\"",
                "@@ -471,4 +487,4 @@ msgstr \"Gehitu\"",
                "-msgid \"You don't have permission to edit anything.\"",
                "-msgstr \"Ez daukazu ezer aldatzeko baimenik.\"",
                "+msgid \"You don't have permission to view or edit anything.\"",
                "+msgstr \"Ez duzu ezer ikusi edo ezabatzeko baimenik.\"",
                "@@ -534,2 +550,6 @@ msgstr \"Aldatu aukeratutako %(model)s\"",
                "+#, python-format",
                "+msgid \"View selected %(model)s\"",
                "+msgstr \"Ikusi aukeratutako %(model)s\"",
                "+",
                " #, python-format",
                "@@ -559,6 +579,12 @@ msgstr \"Gorde berri gisa\"",
                " msgid \"Save and add another\"",
                "-msgstr \"Gorde eta gehitu beste bat\"",
                "+msgstr \"Gorde eta beste bat gehitu\"",
                " msgid \"Save and continue editing\"",
                "-msgstr \"Gorde eta jarraitu editatzen\"",
                "+msgstr \"Gorde eta editatzen jarraitu\"",
                "+",
                "+msgid \"Save and view\"",
                "+msgstr \"Gorde eta ikusi\"",
                "+",
                "+msgid \"Close\"",
                "+msgstr \"Itxi\"",
                "@@ -584,3 +610,3 @@ msgstr \"\"",
                " msgid \"Change my password\"",
                "-msgstr \"Aldatu nire pasahitza\"",
                "+msgstr \"Nire pasahitza aldatu\"",
                "@@ -667,3 +693,3 @@ msgstr \"Data guztiak\"",
                " msgid \"Select %s\"",
                "-msgstr \"Hautatu %s\"",
                "+msgstr \"Aukeratu %s\"",
                "@@ -671,3 +697,7 @@ msgstr \"Hautatu %s\"",
                " msgid \"Select %s to change\"",
                "-msgstr \"Hautatu %s aldatzeko\"",
                "+msgstr \"Aukeratu %s aldatzeko\"",
                "+",
                "+#, python-format",
                "+msgid \"Select %s to view\"",
                "+msgstr \"Aukeratu %s ikusteko\"",
                "diff --git a/django/contrib/admin/locale/lt/LC_MESSAGES/django.mo b/django/contrib/admin/locale/lt/LC_MESSAGES/django.mo",
                "index f866f81e5f..6fa9a048bd 100644",
                "Binary files a/django/contrib/admin/locale/lt/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/lt/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/lt/LC_MESSAGES/django.po b/django/contrib/admin/locale/lt/LC_MESSAGES/django.po",
                "index 4752f75393..fcdf18dfef 100644",
                "--- a/django/contrib/admin/locale/lt/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/lt/LC_MESSAGES/django.po",
                "@@ -14,4 +14,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "-\"PO-Revision-Date: 2018-05-28 01:29+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"PO-Revision-Date: 2018-09-14 12:28+0000\\n\"",
                "+\"Last-Translator: Matas Dailyda <matas@dailyda.com>\\n\"",
                " \"Language-Team: Lithuanian (http://www.transifex.com/django/django/language/\"",
                "@@ -246,3 +246,3 @@ msgstr \"Pakeisti %s\"",
                " msgid \"View %s\"",
                "-msgstr \"\"",
                "+msgstr \"Per\u00c5\u00bei\u00c5\u00abr\u00c4\u0097ti %s\"",
                "@@ -708,3 +708,3 @@ msgstr \"Pasirinkite %s kur\u00c4\u00af norite keisti\"",
                " msgid \"Select %s to view\"",
                "-msgstr \"\"",
                "+msgstr \"Pasirinkti %s per\u00c5\u00bei\u00c5\u00abrai\"",
                "diff --git a/django/contrib/admin/locale/uk/LC_MESSAGES/django.mo b/django/contrib/admin/locale/uk/LC_MESSAGES/django.mo",
                "index 621699b5e7..8c2b506e56 100644",
                "Binary files a/django/contrib/admin/locale/uk/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/uk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/uk/LC_MESSAGES/django.po b/django/contrib/admin/locale/uk/LC_MESSAGES/django.po",
                "index e593746ff4..a25ab84250 100644",
                "--- a/django/contrib/admin/locale/uk/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/uk/LC_MESSAGES/django.po",
                "@@ -14,2 +14,3 @@",
                " # Sergiy Kuzmenko <s.kuzmenko@gmail.com>, 2011",
                "+# Taras Korzhak <taras.korzhak96@gmail.com>, 2018",
                " # Zoriana Zaiats, 2016",
                "@@ -19,5 +20,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 18:54+0000\\n\"",
                "-\"Last-Translator: Igor Melnyk\\n\"",
                "+\"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "+\"PO-Revision-Date: 2018-08-24 20:12+0000\\n\"",
                "+\"Last-Translator: Taras Korzhak <taras.korzhak96@gmail.com>\\n\"",
                " \"Language-Team: Ukrainian (http://www.transifex.com/django/django/language/\"",
                "@@ -28,4 +29,6 @@ msgstr \"\"",
                " \"Language: uk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n\"",
                "-\"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != \"",
                "+\"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % \"",
                "+\"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || \"",
                "+\"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\\n\"",
                "@@ -100,2 +103,11 @@ msgstr \"\u00d0\u0092\u00d0\u00b8\u00d0\u00b4\u00d0\u00b0\u00d0\u00bb\u00d0\u00b8\u00d1\u0082\u00d0\u00b8\"",
                "+msgid \"Addition\"",
                "+msgstr \"\u00d0\u0094\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u008f\"",
                "+",
                "+msgid \"Change\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8\"",
                "+",
                "+msgid \"Deletion\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00b8\u00d0\u00b4\u00d0\u00b0\u00d0\u00bb\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f\"",
                "+",
                " msgid \"action time\"",
                "@@ -179,6 +191,7 @@ msgstr \"\"",
                " #, python-brace-format",
                "-msgid \"\"",
                "-\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "-msgstr \"\"",
                "-\"{name} \\\"{obj}\\\" \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d0\u00b4\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be. \u00d0\u009d\u00d0\u00b8\u00d0\u00b6\u00d1\u0087\u00d0\u00b5 \u00d0\u0092\u00d0\u00b8 \u00d0\u00bc\u00d0\u00be\u00d0\u00b6\u00d0\u00b5\u00d1\u0082\u00d0\u00b5 \u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \u00d0\u00b9\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d0\u00b7\u00d0\u00bd\u00d0\u00be\u00d0\u00b2\u00d1\u0083.\"",
                "+msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "+msgstr \"{name} \\\"{obj}\\\" \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d0\u00b4\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be.\"",
                "+",
                "+msgid \"You may edit it again below.\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00b8 \u00d0\u00bc\u00d0\u00be\u00d0\u00b6\u00d0\u00b5\u00d1\u0082\u00d0\u00b5 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \u00d1\u0086\u00d0\u00b5 \u00d0\u00b7\u00d0\u00bd\u00d0\u00be\u00d0\u00b2\u00d1\u0083.\"",
                "@@ -191,6 +204,2 @@ msgstr \"\"",
                "-#, python-brace-format",
                "-msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "-msgstr \"{name} \\\"{obj}\\\" \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d0\u00b4\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be.\"",
                "-",
                " #, python-brace-format",
                "@@ -201,2 +210,8 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"\"",
                "+\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgstr \"\"",
                "+\"{name} \\\"{obj}\\\" \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d0\u00b4\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be. \u00d0\u009d\u00d0\u00b8\u00d0\u00b6\u00d1\u0087\u00d0\u00b5 \u00d0\u0092\u00d0\u00b8 \u00d0\u00bc\u00d0\u00be\u00d0\u00b6\u00d0\u00b5\u00d1\u0082\u00d0\u00b5 \u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \u00d0\u00b9\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d0\u00b7\u00d0\u00bd\u00d0\u00be\u00d0\u00b2\u00d1\u0083.\"",
                "+",
                " #, python-brace-format",
                "@@ -237,2 +252,6 @@ msgstr \"\u00d0\u0097\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 %s\"",
                "+#, python-format",
                "+msgid \"View %s\"",
                "+msgstr \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00bd\u00d1\u0083\u00d1\u0082\u00d0\u00b8 %s\"",
                "+",
                " msgid \"Database error\"",
                "@@ -246,2 +265,3 @@ msgstr[1] \"%(count)s %(name)s \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00b8 \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be \u00d0\u00b7\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b5\u00d0\u00bd\u00d1\u0096.\"",
                " msgstr[2] \"%(count)s %(name)s \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be \u00d0\u00b7\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b5\u00d0\u00bd\u00d0\u00be.\"",
                "+msgstr[3] \"%(count)s %(name)s \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be \u00d0\u00b7\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b5\u00d0\u00bd\u00d0\u00be.\"",
                "@@ -253,2 +273,3 @@ msgstr[1] \"%(total_count)s \u00d0\u00be\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d0\u00bd\u00d1\u0096\"",
                " msgstr[2] \"\u00d0\u00a3\u00d1\u0081\u00d1\u0096 %(total_count)s \u00d0\u00be\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d0\u00bd\u00d0\u00be\"",
                "+msgstr[3] \"\u00d0\u00a3\u00d1\u0081\u00d1\u0096 %(total_count)s \u00d0\u00be\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d0\u00bd\u00d0\u00be\"",
                "@@ -347,3 +368,3 @@ msgstr \"\u00d0\u0097\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d0\u00bf\u00d0\u00b0\u00d1\u0080\u00d0\u00be\u00d0\u00bb\u00d1\u008c\"",
                " msgid \"Please correct the error below.\"",
                "-msgstr \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d0\u00b8\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 \u00d0\u00bf\u00d0\u00be\u00d0\u00bc\u00d0\u00b8\u00d0\u00bb\u00d0\u00ba\u00d1\u0083, \u00d0\u00b2\u00d0\u00ba\u00d0\u00b0\u00d0\u00b7\u00d0\u00b0\u00d0\u00bd\u00d1\u0083 \u00d0\u00bd\u00d0\u00b8\u00d0\u00b6\u00d1\u0087\u00d0\u00b5.\"",
                "+msgstr \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d0\u00b8\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d0\u00bf\u00d0\u00be\u00d0\u00bc\u00d0\u00b8\u00d0\u00bb\u00d0\u00ba\u00d1\u0083 \u00d0\u00bd\u00d0\u00b8\u00d0\u00b6\u00d1\u0087\u00d0\u00b5.\"",
                "@@ -457,4 +478,4 @@ msgstr \"\"",
                "-msgid \"Change\"",
                "-msgstr \"\u00d0\u0097\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8\"",
                "+msgid \"View\"",
                "+msgstr \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00bd\u00d1\u0083\u00d1\u0082\u00d0\u00b8\"",
                "@@ -477,4 +498,4 @@ msgstr \"\u00d0\u0094\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d1\u0082\u00d0\u00b8\"",
                "-msgid \"You don't have permission to edit anything.\"",
                "-msgstr \"\u00d0\u00a3 \u00d0\u00b2\u00d0\u00b0\u00d1\u0081 \u00d0\u00bd\u00d0\u00b5\u00d0\u00bc\u00d0\u00b0\u00d1\u0094 \u00d0\u00b4\u00d0\u00be\u00d0\u00b7\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d1\u0083 \u00d0\u00bd\u00d0\u00b0 \u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d0\u00b1\u00d1\u0083\u00d0\u00b4\u00d1\u008c-\u00d1\u0087\u00d0\u00be\u00d0\u00b3\u00d0\u00be.\"",
                "+msgid \"You don't have permission to view or edit anything.\"",
                "+msgstr \"\u00d0\u00a3 \u00d0\u00b2\u00d0\u00b0\u00d1\u0081 \u00d0\u00bd\u00d0\u00b5\u00d0\u00bc\u00d0\u00b0\u00d1\u0094 \u00d0\u00b4\u00d0\u00be\u00d0\u00b7\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d1\u0083 \u00d0\u00bd\u00d0\u00b0 \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00b4 \u00d1\u0087\u00d0\u00b8 \u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d1\u0087\u00d0\u00be\u00d0\u00b3\u00d0\u00be-\u00d0\u00bd\u00d0\u00b5\u00d0\u00b1\u00d1\u0083\u00d0\u00b4\u00d1\u008c.\"",
                "@@ -541,2 +562,6 @@ msgstr \"\u00d0\u0097\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d0\u00be\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d0\u00bd\u00d1\u0083 %(model)s\"",
                "+#, python-format",
                "+msgid \"View selected %(model)s\"",
                "+msgstr \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00bd\u00d1\u0083\u00d1\u0082\u00d0\u00b8 \u00d0\u00b2\u00d0\u00b8\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d0\u00bd\u00d1\u0096 %(model)s\"",
                "+",
                " #, python-format",
                "@@ -558,2 +583,3 @@ msgstr[1] \"%(counter)s \u00d1\u0080\u00d0\u00b5\u00d0\u00b7\u00d1\u0083\u00d0\u00bb\u00d1\u008c\u00d1\u0082\u00d0\u00b0\u00d1\u0082\u00d0\u00b8\"",
                " msgstr[2] \"%(counter)s \u00d1\u0080\u00d0\u00b5\u00d0\u00b7\u00d1\u0083\u00d0\u00bb\u00d1\u008c\u00d1\u0082\u00d0\u00b0\u00d1\u0082\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(counter)s \u00d1\u0080\u00d0\u00b5\u00d0\u00b7\u00d1\u0083\u00d0\u00bb\u00d1\u008c\u00d1\u0082\u00d0\u00b0\u00d1\u0082\u00d1\u0096\u00d0\u00b2\"",
                "@@ -572,2 +598,8 @@ msgstr \"\u00d0\u0097\u00d0\u00b1\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d1\u0082\u00d0\u00b8 \u00d1\u0096 \u00d0\u00bf\u00d1\u0080\u00d0\u00be\u00d0\u00b4\u00d0\u00be\u00d0\u00b2\u00d0\u00b6\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u008f\"",
                "+msgid \"Save and view\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00b1\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d1\u0082\u00d0\u00b8 \u00d1\u0096 \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00bd\u00d1\u0083\u00d1\u0082\u00d0\u00b8\"",
                "+",
                "+msgid \"Close\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00b0\u00d0\u00ba\u00d1\u0080\u00d0\u00b8\u00d1\u0082\u00d0\u00b8\"",
                "+",
                " msgid \"Thanks for spending some quality time with the Web site today.\"",
                "@@ -683,2 +715,6 @@ msgstr \"\u00d0\u0092\u00d0\u00b8\u00d0\u00b1\u00d0\u00b5\u00d1\u0080\u00d1\u0096\u00d1\u0082\u00d1\u008c %s \u00d1\u0089\u00d0\u00be\u00d0\u00b1 \u00d0\u00b7\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8\"",
                "+#, python-format",
                "+msgid \"Select %s to view\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00b8\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 %s \u00d0\u00b4\u00d0\u00bb\u00d1\u008f \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00b4\u00d1\u0083\"",
                "+",
                " msgid \"Date:\"",
                "diff --git a/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.mo b/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.mo",
                "index 537c896bc6..d43800513a 100644",
                "Binary files a/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.po b/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.po",
                "index 2858020431..7fa3d1a89f 100644",
                "--- a/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.po",
                "@@ -15,3 +15,5 @@",
                " # slene <vslene@gmail.com>, 2011",
                "+# Wentao Han <wentao.han@gmail.com>, 2018",
                " # xuyi wang <xuyi.wg@gmail.com>, 2018",
                "+# yf zhan <daxian12345@gmail.com>, 2018",
                " # Ziang Song <songziang@gmail.com>, 2012",
                "@@ -25,4 +27,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "-\"PO-Revision-Date: 2018-07-16 13:10+0000\\n\"",
                "-\"Last-Translator: xuyi wang <xuyi.wg@gmail.com>\\n\"",
                "+\"PO-Revision-Date: 2018-09-28 07:44+0000\\n\"",
                "+\"Last-Translator: Wentao Han <wentao.han@gmail.com>\\n\"",
                " \"Language-Team: Chinese (China) (http://www.transifex.com/django/django/\"",
                "@@ -103,3 +105,3 @@ msgstr \"\u00e5\u0088\u00a0\u00e9\u0099\u00a4\"",
                " msgid \"Addition\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e6\u00b7\u00bb\u00e5\u008a\u00a0\"",
                "@@ -109,3 +111,3 @@ msgstr \"\u00e4\u00bf\u00ae\u00e6\u0094\u00b9\"",
                " msgid \"Deletion\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e5\u0088\u00a0\u00e9\u0099\u00a4\"",
                "@@ -157,3 +159,3 @@ msgstr \"LogEntry\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\"",
                " msgid \"Added {name} \\\"{object}\\\".\"",
                "-msgstr \"\u00e4\u00bb\u00a5\u00e6\u00b7\u00bb\u00e5\u008a\u00a0{name}\\\"{object}\\\"\u00e3\u0080\u0082\"",
                "+msgstr \"\u00e5\u00b7\u00b2\u00e6\u00b7\u00bb\u00e5\u008a\u00a0{name}\\\"{object}\\\"\u00e3\u0080\u0082\"",
                "@@ -246,3 +248,3 @@ msgstr \"\u00e4\u00bf\u00ae\u00e6\u0094\u00b9 %s\"",
                " msgid \"View %s\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e6\u009f\u00a5\u00e7\u009c\u008b %s\"",
                "@@ -459,3 +461,3 @@ msgstr \"\"",
                " msgid \"View\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e6\u009f\u00a5\u00e7\u009c\u008b\"",
                "@@ -573,6 +575,6 @@ msgstr \"\u00e4\u00bf\u009d\u00e5\u00ad\u0098\u00e5\u00b9\u00b6\u00e7\u00bb\u00a7\u00e7\u00bb\u00ad\u00e7\u00bc\u0096\u00e8\u00be\u0091\"",
                " msgid \"Save and view\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e4\u00bf\u009d\u00e5\u00ad\u0098\u00e5\u00b9\u00b6\u00e6\u009f\u00a5\u00e7\u009c\u008b\"",
                " msgid \"Close\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e5\u0085\u00b3\u00e9\u0097\u00ad\"",
                "diff --git a/django/contrib/auth/locale/da/LC_MESSAGES/django.mo b/django/contrib/auth/locale/da/LC_MESSAGES/django.mo",
                "index 4d78af26fa..cd660b9a87 100644",
                "Binary files a/django/contrib/auth/locale/da/LC_MESSAGES/django.mo and b/django/contrib/auth/locale/da/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/auth/locale/da/LC_MESSAGES/django.po b/django/contrib/auth/locale/da/LC_MESSAGES/django.po",
                "index 52695f72a5..5d39c1e1a4 100644",
                "--- a/django/contrib/auth/locale/da/LC_MESSAGES/django.po",
                "+++ b/django/contrib/auth/locale/da/LC_MESSAGES/django.po",
                "@@ -7,2 +7,3 @@",
                " # Stevenn, 2013",
                "+# tiktuk <tiktuk@gmail.com>, 2018",
                " # valberg <valberg@orn.li>, 2015",
                "@@ -13,4 +14,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2017-09-24 13:46+0200\\n\"",
                "-\"PO-Revision-Date: 2017-09-24 16:13+0000\\n\"",
                "-\"Last-Translator: Erik Wognsen <r4mses@gmail.com>\\n\"",
                "+\"PO-Revision-Date: 2018-08-23 08:30+0000\\n\"",
                "+\"Last-Translator: tiktuk <tiktuk@gmail.com>\\n\"",
                " \"Language-Team: Danish (http://www.transifex.com/django/django/language/da/)\\n\"",
                "@@ -82,4 +83,4 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"Indtast venligst et korrekt %(username)s og adgangskode. Bem\u00c3\u00a6rk at begge \"",
                "-\"felter kan v\u00c3\u00a6re versalf\u00c3\u00b8lsomme.\"",
                "+\"Indtast venligst korrekt %(username)s og adgangskode. Bem\u00c3\u00a6rk at begge felter \"",
                "+\"kan v\u00c3\u00a6re versalf\u00c3\u00b8lsomme.\"",
                "diff --git a/django/contrib/auth/locale/el/LC_MESSAGES/django.mo b/django/contrib/auth/locale/el/LC_MESSAGES/django.mo",
                "index 416e550d83..18a8b2a3d4 100644",
                "Binary files a/django/contrib/auth/locale/el/LC_MESSAGES/django.mo and b/django/contrib/auth/locale/el/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/auth/locale/el/LC_MESSAGES/django.po b/django/contrib/auth/locale/el/LC_MESSAGES/django.po",
                "index 13a4934dcd..44e5c7cb46 100644",
                "--- a/django/contrib/auth/locale/el/LC_MESSAGES/django.po",
                "+++ b/django/contrib/auth/locale/el/LC_MESSAGES/django.po",
                "@@ -9,2 +9,3 @@",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "+# Nick Mavrakis <mavrakis.n@gmail.com>, 2018",
                " # P\u00c3\u00a3no\u00c8\u0099 <panos.laganakos@gmail.com>, 2014",
                "@@ -17,4 +18,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2017-09-24 13:46+0200\\n\"",
                "-\"PO-Revision-Date: 2017-09-24 14:24+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 09:59+0000\\n\"",
                "+\"Last-Translator: Nick Mavrakis <mavrakis.n@gmail.com>\\n\"",
                " \"Language-Team: Greek (http://www.transifex.com/django/django/language/el/)\\n\"",
                "@@ -77,2 +78,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00ce\u009f\u00ce\u00b9 \u00ce\u00b1\u00ce\u00ba\u00ce\u00b1\u00cf\u0084\u00ce\u00ad\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00ce\u00b9 \u00ce\u00ba\u00cf\u0089\u00ce\u00b4\u00ce\u00b9\u00ce\u00ba\u00ce\u00bf\u00ce\u00af \u00ce\u00b4\u00ce\u00b5\u00ce\u00bd \u00ce\u00b1\u00cf\u0080\u00ce\u00bf\u00ce\u00b8\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5\u00cf\u008d\u00ce\u00bf\u00ce\u00bd\u00cf\u0084\u00ce\u00b1\u00ce\u00b9, \u00ce\u00bf\u00cf\u0080\u00cf\u008c\u00cf\u0084\u00ce\u00b5 \u00ce\u00b4\u00ce\u00b5\u00ce\u00bd \u00cf\u0085\u00cf\u0080\u00ce\u00ac\u00cf\u0081\u00cf\u0087\u00ce\u00b5\u00ce\u00b9 \u00cf\u0084\u00cf\u0081\u00cf\u008c\u00cf\u0080\u00ce\u00bf\u00cf\u0082 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b4\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \"",
                "+\"\u00cf\u0084\u00ce\u00bf\u00ce\u00bd \u00ce\u00ba\u00cf\u0089\u00ce\u00b4\u00ce\u00b9\u00ce\u00ba\u00cf\u008c \u00ce\u00b1\u00cf\u0085\u00cf\u0084\u00ce\u00bf\u00cf\u008d \u00cf\u0084\u00ce\u00bf\u00cf\u0085 \u00cf\u0087\u00cf\u0081\u00ce\u00ae\u00cf\u0083\u00cf\u0084\u00ce\u00b7, \u00ce\u00b1\u00ce\u00bb\u00ce\u00bb\u00ce\u00ac \u00ce\u00bc\u00cf\u0080\u00ce\u00bf\u00cf\u0081\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00bd\u00ce\u00b1 \u00cf\u0084\u00ce\u00bf\u00ce\u00bd \u00ce\u00b1\u00ce\u00bb\u00ce\u00bb\u00ce\u00ac\u00ce\u00be\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00cf\u0087\u00cf\u0081\u00ce\u00b7\u00cf\u0083\u00ce\u00b9\u00ce\u00bc\u00ce\u00bf\u00cf\u0080\u00ce\u00bf\u00ce\u00b9\u00cf\u008e\u00ce\u00bd\u00cf\u0084\u00ce\u00b1\u00cf\u0082 \"",
                "+\"<a href=\\\"{}\\\">\u00ce\u00b1\u00cf\u0085\u00cf\u0084\u00ce\u00ae \u00cf\u0084\u00ce\u00b7 \u00cf\u0086\u00cf\u008c\u00cf\u0081\u00ce\u00bc\u00ce\u00b1</a>.\"",
                "diff --git a/django/contrib/humanize/locale/az/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/az/LC_MESSAGES/django.mo",
                "index b79982c8f8..51ca1000d0 100644",
                "Binary files a/django/contrib/humanize/locale/az/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/az/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/az/LC_MESSAGES/django.po b/django/contrib/humanize/locale/az/LC_MESSAGES/django.po",
                "index 0bc967611e..0d451cc9d1 100644",
                "--- a/django/contrib/humanize/locale/az/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/az/LC_MESSAGES/django.po",
                "@@ -5,2 +5,3 @@",
                " # Claude Paroz <claude@2xlibre.net>, 2013",
                "+# Emin Mastizada <emin@linux.com>, 2018",
                " # Emin Mastizada <emin@linux.com>, 2016",
                "@@ -10,4 +11,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-19 16:40+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-09 12:56+0000\\n\"",
                " \"Last-Translator: Emin Mastizada <emin@linux.com>\\n\"",
                "@@ -24,13 +25,56 @@ msgstr \"\u00c4\u00b0nsanla\u00c5\u009fd\u00c4\u00b1r\"",
                "-msgid \"th\"",
                "-msgstr \"-\u00c4\u00b1nc\u00c4\u00b1\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \"-\u00c4\u00b1nc\u00c4\u00b1\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"nd\"",
                "-msgstr \"-\u00c4\u00b1nc\u00c4\u00b1\"",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"rd\"",
                "-msgstr \"-\u00c4\u00b1nc\u00c4\u00b1\"",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}ci\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}ci\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}c\u00c3\u00bc\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}c\u00c3\u00bc\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}ci\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}c\u00c4\u00b1\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}ci\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}ci\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}cu\"",
                "@@ -204,4 +248,5 @@ msgstr \"d\u00c3\u00bcn\u00c9\u0099n\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "@@ -209,2 +254,46 @@ msgstr \"%(delta)s \u00c9\u0099vv\u00c9\u0099l\"",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d il\"",
                "+msgstr[1] \"%d il\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d ay\"",
                "+msgstr[1] \"%d ay\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d h\u00c9\u0099ft\u00c9\u0099\"",
                "+msgstr[1] \"%d h\u00c9\u0099ft\u00c9\u0099\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d g\u00c3\u00bcn\"",
                "+msgstr[1] \"%d g\u00c3\u00bcn\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d saat\"",
                "+msgstr[1] \"%d saat\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d d\u00c9\u0099qiq\u00c9\u0099\"",
                "+msgstr[1] \"%d d\u00c9\u0099qiq\u00c9\u0099\"",
                "+",
                " msgid \"now\"",
                "@@ -236,6 +325,51 @@ msgstr[1] \"%(count)s\u00c2\u00a0saat \u00c9\u0099vv\u00c9\u0099l\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"%(delta)s sonra\"",
                "+msgstr \"%(delta)s bundan sonra\"",
                "+",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d il\"",
                "+msgstr[1] \"%d il\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d ay\"",
                "+msgstr[1] \"%d ay\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d h\u00c9\u0099ft\u00c9\u0099\"",
                "+msgstr[1] \"%d h\u00c9\u0099ft\u00c9\u0099\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d g\u00c3\u00bcn\"",
                "+msgstr[1] \"%d g\u00c3\u00bcn\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d saat\"",
                "+msgstr[1] \"%d saat\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d d\u00c9\u0099qiq\u00c9\u0099\"",
                "+msgstr[1] \"%d d\u00c9\u0099qiq\u00c9\u0099\"",
                "diff --git a/django/contrib/humanize/locale/br/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/br/LC_MESSAGES/django.mo",
                "index db7bc9c522..b52ced69ef 100644",
                "Binary files a/django/contrib/humanize/locale/br/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/br/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/br/LC_MESSAGES/django.po b/django/contrib/humanize/locale/br/LC_MESSAGES/django.po",
                "index a46a99cee0..b2db9b8b75 100644",
                "--- a/django/contrib/humanize/locale/br/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/br/LC_MESSAGES/django.po",
                "@@ -8,5 +8,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-19 16:40+0000\\n\"",
                "-\"Last-Translator: Fulup <fulup.jakez@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-29 08:30+0000\\n\"",
                "+\"Last-Translator: Claude Paroz <claude@2xlibre.net>\\n\"",
                " \"Language-Team: Breton (http://www.transifex.com/django/django/language/br/)\\n\"",
                "@@ -16,3 +16,7 @@ msgstr \"\"",
                " \"Language: br\\n\"",
                "-\"Plural-Forms: nplurals=2; plural=(n > 1);\\n\"",
                "+\"Plural-Forms: nplurals=5; plural=((n%10 == 1) && (n%100 != 11) && (n%100 !\"",
                "+\"=71) && (n%100 !=91) ? 0 :(n%10 == 2) && (n%100 != 12) && (n%100 !=72) && (n\"",
                "+\"%100 !=92) ? 1 :(n%10 ==3 || n%10==4 || n%10==9) && (n%100 < 10 || n% 100 > \"",
                "+\"19) && (n%100 < 70 || n%100 > 79) && (n%100 < 90 || n%100 > 99) ? 2 :(n != 0 \"",
                "+\"&& n % 1000000 == 0) ? 3 : 4);\\n\"",
                "@@ -21,13 +25,56 @@ msgstr \"Denelaat\"",
                "-msgid \"th\"",
                "-msgstr \"<sup>e</sup>\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"st\"",
                "-msgstr \"<sup>a\u00c3\u00b1</sup>\"",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"nd\"",
                "-msgstr \"<sup>l</sup>\"",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"rd\"",
                "-msgstr \"<sup>e</sup>\"",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "@@ -38,2 +85,5 @@ msgstr[0] \"%(value).1f milion\"",
                " msgstr[1] \"%(value).1f milion\"",
                "+msgstr[2] \"%(value).1f milion\"",
                "+msgstr[3] \"%(value).1f milion\"",
                "+msgstr[4] \"%(value).1f milion\"",
                "@@ -44,2 +94,5 @@ msgstr[0] \"%(value)s million\"",
                " msgstr[1] \"%(value)s million\"",
                "+msgstr[2] \"%(value)s million\"",
                "+msgstr[3] \"%(value)s million\"",
                "+msgstr[4] \"%(value)s million\"",
                "@@ -50,2 +103,5 @@ msgstr[0] \"%(value).1f miliard\"",
                " msgstr[1] \"%(value).1f miliard\"",
                "+msgstr[2] \"%(value).1f miliard\"",
                "+msgstr[3] \"%(value).1f miliard\"",
                "+msgstr[4] \"%(value).1f miliard\"",
                "@@ -56,2 +112,5 @@ msgstr[0] \"%(value)s miliard\"",
                " msgstr[1] \"%(value)s miliard\"",
                "+msgstr[2] \"%(value)s miliard\"",
                "+msgstr[3] \"%(value)s miliard\"",
                "+msgstr[4] \"%(value)s miliard\"",
                "@@ -62,2 +121,5 @@ msgstr[0] \"%(value).1f bilion\"",
                " msgstr[1] \"%(value).1f bilion\"",
                "+msgstr[2] \"%(value).1f bilion\"",
                "+msgstr[3] \"%(value).1f bilion\"",
                "+msgstr[4] \"%(value).1f bilion\"",
                "@@ -68,2 +130,5 @@ msgstr[0] \"%(value)s bilion\"",
                " msgstr[1] \"%(value)s bilion\"",
                "+msgstr[2] \"%(value)s bilion\"",
                "+msgstr[3] \"%(value)s bilion\"",
                "+msgstr[4] \"%(value)s bilion\"",
                "@@ -74,2 +139,5 @@ msgstr[0] \"%(value).1f c'hadrilion\"",
                " msgstr[1] \"%(value).1f kadrilion\"",
                "+msgstr[2] \"%(value).1f kadrilion\"",
                "+msgstr[3] \"%(value).1f kadrilion\"",
                "+msgstr[4] \"%(value).1f kadrilion\"",
                "@@ -80,2 +148,5 @@ msgstr[0] \"%(value)s c'hadrilion\"",
                " msgstr[1] \"%(value)s kadrilion\"",
                "+msgstr[2] \"%(value)s kadrilion\"",
                "+msgstr[3] \"%(value)s kadrilion\"",
                "+msgstr[4] \"%(value)s kadrilion\"",
                "@@ -86,2 +157,5 @@ msgstr[0] \"%(value).1f c'hintilion\"",
                " msgstr[1] \"%(value).1f kintilion\"",
                "+msgstr[2] \"%(value).1f kintilion\"",
                "+msgstr[3] \"%(value).1f kintilion\"",
                "+msgstr[4] \"%(value).1f kintilion\"",
                "@@ -92,2 +166,5 @@ msgstr[0] \"%(value)s c'hintilion\"",
                " msgstr[1] \"%(value)s kintilion\"",
                "+msgstr[2] \"%(value)s kintilion\"",
                "+msgstr[3] \"%(value)s kintilion\"",
                "+msgstr[4] \"%(value)s kintilion\"",
                "@@ -98,2 +175,5 @@ msgstr[0] \"%(value).1f sekstilion\"",
                " msgstr[1] \"%(value).1f sekstilion\"",
                "+msgstr[2] \"%(value).1f sekstilion\"",
                "+msgstr[3] \"%(value).1f sekstilion\"",
                "+msgstr[4] \"%(value).1f sekstilion\"",
                "@@ -104,2 +184,5 @@ msgstr[0] \"%(value)s sekstilion\"",
                " msgstr[1] \"%(value)s sekstilion\"",
                "+msgstr[2] \"%(value)s sekstilion\"",
                "+msgstr[3] \"%(value)s sekstilion\"",
                "+msgstr[4] \"%(value)s sekstilion\"",
                "@@ -110,2 +193,5 @@ msgstr[0] \"%(value).1f septilion\"",
                " msgstr[1] \"%(value).1f septilion\"",
                "+msgstr[2] \"%(value).1f septilion\"",
                "+msgstr[3] \"%(value).1f septilion\"",
                "+msgstr[4] \"%(value).1f septilion\"",
                "@@ -116,2 +202,5 @@ msgstr[0] \"%(value)s septilion\"",
                " msgstr[1] \"%(value)s septilion\"",
                "+msgstr[2] \"%(value)s septilion\"",
                "+msgstr[3] \"%(value)s septilion\"",
                "+msgstr[4] \"%(value)s septilion\"",
                "@@ -122,2 +211,5 @@ msgstr[0] \"%(value).1f oktilion\"",
                " msgstr[1] \"%(value).1f oktilion\"",
                "+msgstr[2] \"%(value).1f oktilion\"",
                "+msgstr[3] \"%(value).1f oktilion\"",
                "+msgstr[4] \"%(value).1f oktilion\"",
                "@@ -128,2 +220,5 @@ msgstr[0] \"%(value)s oktilion\"",
                " msgstr[1] \"%(value)s oktilion\"",
                "+msgstr[2] \"%(value)s oktilion\"",
                "+msgstr[3] \"%(value)s oktilion\"",
                "+msgstr[4] \"%(value)s oktilion\"",
                "@@ -134,2 +229,5 @@ msgstr[0] \"%(value).1f nonilion\"",
                " msgstr[1] \"%(value).1f nonilion\"",
                "+msgstr[2] \"%(value).1f nonilion\"",
                "+msgstr[3] \"%(value).1f nonilion\"",
                "+msgstr[4] \"%(value).1f nonilion\"",
                "@@ -140,2 +238,5 @@ msgstr[0] \"%(value)s nonilion\"",
                " msgstr[1] \"%(value)s nonilion\"",
                "+msgstr[2] \"%(value)s nonilion\"",
                "+msgstr[3] \"%(value)s nonilion\"",
                "+msgstr[4] \"%(value)s nonilion\"",
                "@@ -146,2 +247,5 @@ msgstr[0] \"%(value).1f dekilion\"",
                " msgstr[1] \"%(value).1f dekilion\"",
                "+msgstr[2] \"%(value).1f dekilion\"",
                "+msgstr[3] \"%(value).1f dekilion\"",
                "+msgstr[4] \"%(value).1f dekilion\"",
                "@@ -152,2 +256,5 @@ msgstr[0] \"%(value)s dekilion\"",
                " msgstr[1] \"%(value)s dekilion\"",
                "+msgstr[2] \"%(value)s dekilion\"",
                "+msgstr[3] \"%(value)s dekilion\"",
                "+msgstr[4] \"%(value)s dekilion\"",
                "@@ -158,2 +265,5 @@ msgstr[0] \"%(value).1f gogol\"",
                " msgstr[1] \"%(value).1f gogol\"",
                "+msgstr[2] \"%(value).1f gogol\"",
                "+msgstr[3] \"%(value).1f gogol\"",
                "+msgstr[4] \"%(value).1f gogol\"",
                "@@ -164,2 +274,5 @@ msgstr[0] \"%(value)s gogol\"",
                " msgstr[1] \"%(value)s gogol\"",
                "+msgstr[2] \"%(value)s gogol\"",
                "+msgstr[3] \"%(value)s gogol\"",
                "+msgstr[4] \"%(value)s gogol\"",
                "@@ -201,6 +314,69 @@ msgstr \"dec'h\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "-msgstr \"%(delta)s zo\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -214,4 +390,7 @@ msgid \"a second ago\"",
                " msgid_plural \"%(count)s\u00c2\u00a0seconds ago\"",
                "-msgstr[0] \"un eilenn zo\"",
                "+msgstr[0] \"%(count)s\u00c2\u00a0eilenn zo\"",
                " msgstr[1] \"%(count)s\u00c2\u00a0eilenn zo\"",
                "+msgstr[2] \"%(count)s\u00c2\u00a0eilenn zo\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0eilenn zo\"",
                "+msgstr[4] \"%(count)s\u00c2\u00a0eilenn zo\"",
                "@@ -222,4 +401,7 @@ msgid \"a minute ago\"",
                " msgid_plural \"%(count)s\u00c2\u00a0minutes ago\"",
                "-msgstr[0] \"ur munud zo\"",
                "+msgstr[0] \"%(count)s\u00c2\u00a0munud zo\"",
                " msgstr[1] \"%(count)s\u00c2\u00a0munud zo\"",
                "+msgstr[2] \"%(count)s\u00c2\u00a0munud zo\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0munud zo\"",
                "+msgstr[4] \"%(count)s\u00c2\u00a0munud zo\"",
                "@@ -230,9 +412,75 @@ msgid \"an hour ago\"",
                " msgid_plural \"%(count)s\u00c2\u00a0hours ago\"",
                "-msgstr[0] \"un eurvezh zo\"",
                "+msgstr[0] \"%(count)s\u00c2\u00a0eurvezh zo\"",
                " msgstr[1] \"%(count)s\u00c2\u00a0eurvezh zo\"",
                "+msgstr[2] \"%(count)s\u00c2\u00a0eurvezh zo\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0eurvezh zo\"",
                "+msgstr[4] \"%(count)s\u00c2\u00a0eurvezh zo\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"a-benn %(delta)s \"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -243,4 +491,7 @@ msgid \"a second from now\"",
                " msgid_plural \"%(count)s\u00c2\u00a0seconds from now\"",
                "-msgstr[0] \"a-benn un eilenn\"",
                "+msgstr[0] \"a-benn %(count)s\u00c2\u00a0eilenn\"",
                " msgstr[1] \"a-benn %(count)s\u00c2\u00a0eilenn\"",
                "+msgstr[2] \"a-benn %(count)s\u00c2\u00a0eilenn\"",
                "+msgstr[3] \"a-benn %(count)s\u00c2\u00a0eilenn\"",
                "+msgstr[4] \"a-benn %(count)s\u00c2\u00a0eilenn\"",
                "@@ -251,4 +502,7 @@ msgid \"a minute from now\"",
                " msgid_plural \"%(count)s\u00c2\u00a0minutes from now\"",
                "-msgstr[0] \"a-benn ur munud\"",
                "+msgstr[0] \"a-benn %(count)s\u00c2\u00a0munud\"",
                " msgstr[1] \"a-benn %(count)s\u00c2\u00a0munud\"",
                "+msgstr[2] \"a-benn %(count)s\u00c2\u00a0munud\"",
                "+msgstr[3] \"a-benn %(count)s\u00c2\u00a0munud\"",
                "+msgstr[4] \"a-benn %(count)s\u00c2\u00a0munud\"",
                "@@ -259,3 +513,6 @@ msgid \"an hour from now\"",
                " msgid_plural \"%(count)s\u00c2\u00a0hours from now\"",
                "-msgstr[0] \"a-benn un eurvezh\"",
                "+msgstr[0] \"a-benn %(count)s\u00c2\u00a0eurvezh\"",
                " msgstr[1] \"a-benn %(count)s\u00c2\u00a0eurvezh\"",
                "+msgstr[2] \"a-benn %(count)s\u00c2\u00a0eurvezh\"",
                "+msgstr[3] \"a-benn %(count)s\u00c2\u00a0eurvezh\"",
                "+msgstr[4] \"a-benn %(count)s\u00c2\u00a0eurvezh\"",
                "diff --git a/django/contrib/humanize/locale/ca/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/ca/LC_MESSAGES/django.mo",
                "index 5a2ba57460..b811b34072 100644",
                "Binary files a/django/contrib/humanize/locale/ca/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/ca/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/ca/LC_MESSAGES/django.po b/django/contrib/humanize/locale/ca/LC_MESSAGES/django.po",
                "index 96477383db..39d8420e23 100644",
                "--- a/django/contrib/humanize/locale/ca/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/ca/LC_MESSAGES/django.po",
                "@@ -5,2 +5,3 @@",
                " # Carles Barrob\u00c3\u00a9s <carles@barrobes.com>, 2011,2014",
                "+# GerardoGa <ggarciamaristany@gmail.com>, 2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "@@ -10,5 +11,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-19 16:40+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 07:46+0000\\n\"",
                "+\"Last-Translator: GerardoGa <ggarciamaristany@gmail.com>\\n\"",
                " \"Language-Team: Catalan (http://www.transifex.com/django/django/language/\"",
                "@@ -24,13 +25,56 @@ msgstr \"Humanitzar\"",
                "-msgid \"th\"",
                "-msgstr \"\u00c3\u00a8\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"st\"",
                "-msgstr \"r\"",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"nd\"",
                "-msgstr \"n\"",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"rd\"",
                "-msgstr \"r\"",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "@@ -204,6 +248,51 @@ msgstr \"ahir\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "-msgstr \"fa %(delta)s\"",
                "+msgstr \"Fa %(delta)s \"",
                "+",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "@@ -236,6 +325,51 @@ msgstr[1] \"fa %(count)s hores\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"%(delta)s des d'ara\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "diff --git a/django/contrib/humanize/locale/de/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/de/LC_MESSAGES/django.mo",
                "index 6a933d80b8..1cc6ef878f 100644",
                "Binary files a/django/contrib/humanize/locale/de/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/de/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/de/LC_MESSAGES/django.po b/django/contrib/humanize/locale/de/LC_MESSAGES/django.po",
                "index ed6b213d47..e8720a48b1 100644",
                "--- a/django/contrib/humanize/locale/de/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/de/LC_MESSAGES/django.po",
                "@@ -5,4 +5,3 @@",
                " # Claude Paroz <claude@2xlibre.net>, 2013",
                "-# Jannis Leidel <jannis@leidel.info>, 2011,2013-2014",
                "-# Maximilian Merz <django@mxmerz.de>, 2018",
                "+# Jannis Leidel <jannis@leidel.info>, 2011,2013-2014,2018",
                " msgid \"\"",
                "@@ -11,5 +10,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2018-03-13 16:07+0100\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-14 08:29+0000\\n\"",
                "+\"Last-Translator: Florian Apolloner <florian@apolloner.eu>\\n\"",
                " \"Language-Team: German (http://www.transifex.com/django/django/language/de/)\\n\"",
                "@@ -24,13 +23,56 @@ msgstr \"Humanize\"",
                "-msgid \"th\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"nd\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"rd\"",
                "-msgstr \".\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "@@ -204,5 +246,51 @@ msgstr \"gestern\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                " msgid \"%(delta)s ago\"",
                "-msgstr \"vor %(delta)s\"",
                "+msgstr \"%(delta)s her\"",
                "+",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d Jahr\"",
                "+msgstr[1] \"%d Jahre\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d Monat\"",
                "+msgstr[1] \"%d Monate\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d Woche\"",
                "+msgstr[1] \"%d Wochen\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d Tag\"",
                "+msgstr[1] \"%d Tage\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d Stunde\"",
                "+msgstr[1] \"%d Stunden\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d Minute\"",
                "+msgstr[1] \"%d Minuten\"",
                "@@ -235,31 +323,30 @@ msgstr[1] \"vor %(count)s Stunden\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"in %(delta)s\"",
                "+msgstr \"%(delta)s von jetzt an\"",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                " #, python-format",
                " msgctxt \"naturaltime-future\"",
                "-msgid \"%(delta)s from now\"",
                "-msgstr \"in %(delta)s\"",
                "-",
                "-#, python-format",
                "-msgctxt \"naturaltime-past\"",
                "-msgid \"%d day\"",
                "-msgid_plural \"%d days\"",
                "-msgstr[0] \"%d\u00c2\u00a0Tag\"",
                "-msgstr[1] \"%d\u00c2\u00a0Tagen\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d Jahr\"",
                "+msgstr[1] \"%d Jahre\"",
                " #, python-format",
                "-msgctxt \"naturaltime-past\"",
                "+msgctxt \"naturaltime-future\"",
                " msgid \"%d month\"",
                " msgid_plural \"%d months\"",
                "-msgstr[0] \"%d\u00c2\u00a0Monat\"",
                "-msgstr[1] \"%d\u00c2\u00a0Monaten\"",
                "+msgstr[0] \"%d Monat\"",
                "+msgstr[1] \"%d Monate\"",
                " #, python-format",
                "-msgctxt \"naturaltime-past\"",
                "-msgid \"%d year\"",
                "-msgid_plural \"%d years\"",
                "-msgstr[0] \"%d\u00c2\u00a0Jahr\"",
                "-msgstr[1] \"%d\u00c2\u00a0Jahren\"",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d Woche\"",
                "+msgstr[1] \"%d Wochen\"",
                "@@ -269,4 +356,4 @@ msgid \"%d day\"",
                " msgid_plural \"%d days\"",
                "-msgstr[0] \"%d\u00c2\u00a0Tag\"",
                "-msgstr[1] \"%d\u00c2\u00a0Tagen\"",
                "+msgstr[0] \"%d Tag\"",
                "+msgstr[1] \"%d Tage\"",
                "@@ -274,6 +361,6 @@ msgstr[1] \"%d\u00c2\u00a0Tagen\"",
                " msgctxt \"naturaltime-future\"",
                "-msgid \"%d month\"",
                "-msgid_plural \"%d months\"",
                "-msgstr[0] \"%d\u00c2\u00a0Monat\"",
                "-msgstr[1] \"%d\u00c2\u00a0Monaten\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d Stunde\"",
                "+msgstr[1] \"%d Stunden\"",
                "@@ -281,6 +368,6 @@ msgstr[1] \"%d\u00c2\u00a0Monaten\"",
                " msgctxt \"naturaltime-future\"",
                "-msgid \"%d year\"",
                "-msgid_plural \"%d years\"",
                "-msgstr[0] \"%d\u00c2\u00a0Jahr\"",
                "-msgstr[1] \"%d\u00c2\u00a0Jahren\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d Minute\"",
                "+msgstr[1] \"%d Minuten\"",
                "diff --git a/django/contrib/humanize/locale/el/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/el/LC_MESSAGES/django.mo",
                "index 82dc7d7ef5..2e76853911 100644",
                "Binary files a/django/contrib/humanize/locale/el/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/el/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/el/LC_MESSAGES/django.po b/django/contrib/humanize/locale/el/LC_MESSAGES/django.po",
                "index 6b50a4d094..5a8171ae3e 100644",
                "--- a/django/contrib/humanize/locale/el/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/el/LC_MESSAGES/django.po",
                "@@ -6,2 +6,3 @@",
                " # Kostas Papadimitriou <vinilios@gmail.com>, 2012",
                "+# Nick Mavrakis <mavrakis.n@gmail.com>, 2018",
                " # Nikolas Demiridis <nikolas@demiridis.gr>, 2014",
                "@@ -12,5 +13,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 18:54+0000\\n\"",
                "-\"Last-Translator: P\u00c3\u00a3no\u00c8\u0099 <panos.laganakos@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 10:19+0000\\n\"",
                "+\"Last-Translator: Nick Mavrakis <mavrakis.n@gmail.com>\\n\"",
                " \"Language-Team: Greek (http://www.transifex.com/django/django/language/el/)\\n\"",
                "@@ -25,13 +26,56 @@ msgstr \"\u00ce\u0095\u00ce\u00be\u00ce\u00b1\u00ce\u00bd\u00ce\u00b8\u00cf\u0081\u00cf\u008e\u00cf\u0080\u00ce\u00b9\u00cf\u0083\u00ce\u00b7\"",
                "-msgid \"th\"",
                "-msgstr \"\u00ce\u00b7\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \"\u00ce\u00b7\"",
                "-",
                "-msgid \"nd\"",
                "-msgstr \"\u00ce\u00b7\"",
                "-",
                "-msgid \"rd\"",
                "-msgstr \"\u00ce\u00b7\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "@@ -205,4 +249,5 @@ msgstr \"\u00cf\u0087\u00ce\u00b8\u00ce\u00b5\u00cf\u0082\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "@@ -210,2 +255,46 @@ msgstr \"\u00cf\u0080\u00cf\u0081\u00ce\u00b9\u00ce\u00bd \u00ce\u00b1\u00cf\u0080\u00cf\u008c %(delta)s\"",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d \u00cf\u0087\u00cf\u0081\u00cf\u008c\u00ce\u00bd\u00ce\u00bf\u00cf\u0082\"",
                "+msgstr[1] \"%d \u00cf\u0087\u00cf\u0081\u00cf\u008c\u00ce\u00bd\u00ce\u00b9\u00ce\u00b1\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d \u00ce\u00bc\u00ce\u00ae\u00ce\u00bd\u00ce\u00b1\u00cf\u0082\"",
                "+msgstr[1] \"%d \u00ce\u00bc\u00ce\u00ae\u00ce\u00bd\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d \u00ce\u00b5\u00ce\u00b2\u00ce\u00b4\u00ce\u00bf\u00ce\u00bc\u00ce\u00ac\u00ce\u00b4\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00ce\u00b5\u00ce\u00b2\u00ce\u00b4\u00ce\u00bf\u00ce\u00bc\u00ce\u00ac\u00ce\u00b4\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d \u00ce\u00bc\u00ce\u00ad\u00cf\u0081\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00ce\u00bc\u00ce\u00ad\u00cf\u0081\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d \u00cf\u008e\u00cf\u0081\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00cf\u008e\u00cf\u0081\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d \u00ce\u00bb\u00ce\u00b5\u00cf\u0080\u00cf\u0084\u00cf\u008c\"",
                "+msgstr[1] \"%d \u00ce\u00bb\u00ce\u00b5\u00cf\u0080\u00cf\u0084\u00ce\u00ac\"",
                "+",
                " msgid \"now\"",
                "@@ -237,4 +326,5 @@ msgstr[1] \"%(count)s \u00cf\u008e\u00cf\u0081\u00ce\u00b5\u00cf\u0082 \u00cf\u0080\u00cf\u0081\u00ce\u00af\u00ce\u00bd\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "@@ -242,2 +332,46 @@ msgstr \"\u00cf\u0083\u00ce\u00b5 %(delta)s\"",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d \u00cf\u0087\u00cf\u0081\u00cf\u008c\u00ce\u00bd\u00ce\u00bf\u00cf\u0082\"",
                "+msgstr[1] \"%d \u00cf\u0087\u00cf\u0081\u00cf\u008c\u00ce\u00bd\u00ce\u00b9\u00ce\u00b1\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d \u00ce\u00bc\u00ce\u00ae\u00ce\u00bd\u00ce\u00b1\u00cf\u0082\"",
                "+msgstr[1] \"%d \u00ce\u00bc\u00ce\u00ae\u00ce\u00bd\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d \u00ce\u00b5\u00ce\u00b2\u00ce\u00b4\u00ce\u00bf\u00ce\u00bc\u00ce\u00ac\u00ce\u00b4\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00ce\u00b5\u00ce\u00b2\u00ce\u00b4\u00ce\u00bf\u00ce\u00bc\u00ce\u00ac\u00ce\u00b4\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d \u00ce\u00bc\u00ce\u00ad\u00cf\u0081\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00ce\u00bc\u00ce\u00ad\u00cf\u0081\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d \u00cf\u008e\u00cf\u0081\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00cf\u008e\u00cf\u0081\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d \u00ce\u00bb\u00ce\u00b5\u00cf\u0080\u00cf\u0084\u00cf\u008c\"",
                "+msgstr[1] \"%d \u00ce\u00bb\u00ce\u00b5\u00cf\u0080\u00cf\u0084\u00ce\u00ac\"",
                "+",
                " #. Translators: please keep a non-breaking space (U+00A0)",
                "diff --git a/django/contrib/humanize/locale/eu/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/eu/LC_MESSAGES/django.mo",
                "index f0a61b2166..99434dfc13 100644",
                "Binary files a/django/contrib/humanize/locale/eu/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/eu/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/eu/LC_MESSAGES/django.po b/django/contrib/humanize/locale/eu/LC_MESSAGES/django.po",
                "index 281f2e2d92..582a227fca 100644",
                "--- a/django/contrib/humanize/locale/eu/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/eu/LC_MESSAGES/django.po",
                "@@ -5,5 +5,5 @@",
                " # Ander Mart\u00c3\u00adnez <ander.basaundi@gmail.com>, 2014",
                "-# Eneko Illarramendi <eneko@illarra.com>, 2017",
                "+# Eneko Illarramendi <eneko@illarra.com>, 2017-2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "-# julen <julenx@gmail.com>, 2014",
                "+# julen, 2014",
                " msgid \"\"",
                "@@ -12,4 +12,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 18:54+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-23 14:56+0000\\n\"",
                " \"Last-Translator: Eneko Illarramendi <eneko@illarra.com>\\n\"",
                "@@ -25,13 +25,56 @@ msgstr \"Humanizatu\"",
                "-msgid \"th\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"nd\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"rd\"",
                "-msgstr \".\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "@@ -205,4 +248,5 @@ msgstr \"atzo\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "@@ -210,2 +254,46 @@ msgstr \"duela %(delta)s\"",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"urte %d\"",
                "+msgstr[1] \"%d urte\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"hilabete %d\"",
                "+msgstr[1] \"%d hilabete\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"aste %d\"",
                "+msgstr[1] \"%d aste\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"egun %d\"",
                "+msgstr[1] \"%d egun\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"ordu %d\"",
                "+msgstr[1] \"%d ordu\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"minutu %d\"",
                "+msgstr[1] \"%d minutu\"",
                "+",
                " msgid \"now\"",
                "@@ -219,3 +307,3 @@ msgid_plural \"%(count)s\u00c2\u00a0seconds ago\"",
                " msgstr[0] \"duela segundu bat\"",
                "-msgstr[1] \"duela %(count)s\u00c2\u00a0segundu\"",
                "+msgstr[1] \"duela\u00c2\u00a0%(count)s\u00c2\u00a0segundu\"",
                "@@ -227,3 +315,3 @@ msgid_plural \"%(count)s\u00c2\u00a0minutes ago\"",
                " msgstr[0] \"duela minutu bat\"",
                "-msgstr[1] \"duela %(count)s minutu\"",
                "+msgstr[1] \"duela\u00c2\u00a0%(count)s\u00c2\u00a0minutu\"",
                "@@ -235,6 +323,7 @@ msgid_plural \"%(count)s\u00c2\u00a0hours ago\"",
                " msgstr[0] \"duela ordubete\"",
                "-msgstr[1] \"duela %(count)s\u00c2\u00a0ordu\"",
                "+msgstr[1] \"duela\u00c2\u00a0%(count)s\u00c2\u00a0ordu\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "@@ -242,2 +331,46 @@ msgstr \"%(delta)s barru\"",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"urte %d\"",
                "+msgstr[1] \"%d urte\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"hilabete %d\"",
                "+msgstr[1] \"%d hilabete\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"aste %d\"",
                "+msgstr[1] \"%d aste\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"egun %d\"",
                "+msgstr[1] \"%d egun\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"ordu %d\"",
                "+msgstr[1] \"%d ordu\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"minutu %d\"",
                "+msgstr[1] \"%d minutu\"",
                "+",
                " #. Translators: please keep a non-breaking space (U+00A0)",
                "diff --git a/django/contrib/humanize/locale/sk/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/sk/LC_MESSAGES/django.mo",
                "index 677ac1e941..633b9a925d 100644",
                "Binary files a/django/contrib/humanize/locale/sk/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/sk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/sk/LC_MESSAGES/django.po b/django/contrib/humanize/locale/sk/LC_MESSAGES/django.po",
                "index b81353a38b..e8d8d3ab3b 100644",
                "--- a/django/contrib/humanize/locale/sk/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/sk/LC_MESSAGES/django.po",
                "@@ -6,3 +6,3 @@",
                " # Marian Andre <marian@andre.sk>, 2012-2013",
                "-# Martin T\u00c3\u00b3th <ezimir@gmail.com>, 2017",
                "+# Martin T\u00c3\u00b3th <ezimir@gmail.com>, 2017-2018",
                " msgid \"\"",
                "@@ -11,4 +11,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 18:54+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-05 17:04+0000\\n\"",
                " \"Last-Translator: Martin T\u00c3\u00b3th <ezimir@gmail.com>\\n\"",
                "@@ -19,3 +19,4 @@ msgstr \"\"",
                " \"Language: sk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n == 1 ? 0 : n % 1 == 0 && n \"",
                "+\">= 2 && n <= 4 ? 1 : n % 1 != 0 ? 2: 3);\\n\"",
                "@@ -24,13 +25,56 @@ msgstr \"Po\u00c4\u00beud\u00c5\u00a1tenie\"",
                "-msgid \"th\"",
                "-msgstr \"th\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \"st\"",
                "-",
                "-msgid \"nd\"",
                "-msgstr \"nd\"",
                "-",
                "-msgid \"rd\"",
                "-msgstr \"rd\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "@@ -42,2 +86,3 @@ msgstr[1] \"%(value).1f mili\u00c3\u00b3nu\"",
                " msgstr[2] \"%(value).1f mili\u00c3\u00b3nu\"",
                "+msgstr[3] \"%(value).1f mili\u00c3\u00b3nu\"",
                "@@ -49,2 +94,3 @@ msgstr[1] \" %(value)s mili\u00c3\u00b3ny\"",
                " msgstr[2] \" %(value)s mili\u00c3\u00b3nov\"",
                "+msgstr[3] \" %(value)s mili\u00c3\u00b3nov\"",
                "@@ -56,2 +102,3 @@ msgstr[1] \"%(value).1f miliardy\"",
                " msgstr[2] \"%(value).1f mili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value).1f mili\u00c3\u00a1rd\"",
                "@@ -63,2 +110,3 @@ msgstr[1] \" %(value)s miliardy\"",
                " msgstr[2] \" %(value)s mili\u00c3\u00a1rd\"",
                "+msgstr[3] \" %(value)s mili\u00c3\u00a1rd\"",
                "@@ -70,2 +118,3 @@ msgstr[1] \"%(value).1f bili\u00c3\u00b3ny\"",
                " msgstr[2] \"%(value).1f bili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value).1f bili\u00c3\u00b3nov\"",
                "@@ -77,2 +126,3 @@ msgstr[1] \"%(value)s bili\u00c3\u00b3ny\"",
                " msgstr[2] \"%(value)s bili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value)s bili\u00c3\u00b3nov\"",
                "@@ -84,2 +134,3 @@ msgstr[1] \"%(value).1f biliardy\"",
                " msgstr[2] \"%(value).1f bili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value).1f bili\u00c3\u00a1rd\"",
                "@@ -91,2 +142,3 @@ msgstr[1] \"%(value)s biliardy\"",
                " msgstr[2] \"%(value)s bili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value)s bili\u00c3\u00a1rd\"",
                "@@ -98,2 +150,3 @@ msgstr[1] \"%(value).1f trili\u00c3\u00b3nu\"",
                " msgstr[2] \"%(value).1f trili\u00c3\u00b3nu\"",
                "+msgstr[3] \"%(value).1f trili\u00c3\u00b3nu\"",
                "@@ -105,2 +158,3 @@ msgstr[1] \"%(value)s trili\u00c3\u00b3ny\"",
                " msgstr[2] \"%(value)s trili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value)s trili\u00c3\u00b3nov\"",
                "@@ -112,2 +166,3 @@ msgstr[1] \"%(value).1f triliardy\"",
                " msgstr[2] \"%(value).1f trili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value).1f trili\u00c3\u00a1rd\"",
                "@@ -119,2 +174,3 @@ msgstr[1] \"%(value)s triliardy\"",
                " msgstr[2] \"%(value)s trili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value)s trili\u00c3\u00a1rd\"",
                "@@ -126,2 +182,3 @@ msgstr[1] \"%(value).1f kvadrili\u00c3\u00b3nu\"",
                " msgstr[2] \"%(value).1f kvadrili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value).1f kvadrili\u00c3\u00b3nov\"",
                "@@ -133,2 +190,3 @@ msgstr[1] \"%(value)s kvadrili\u00c3\u00b3ny\"",
                " msgstr[2] \"%(value)s kvadrili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value)s kvadrili\u00c3\u00b3nov\"",
                "@@ -140,2 +198,3 @@ msgstr[1] \"%(value).1f kvadriliardy\"",
                " msgstr[2] \"%(value).1f kvadrili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value).1f kvadrili\u00c3\u00a1rd\"",
                "@@ -147,2 +206,3 @@ msgstr[1] \"%(value)s kvadriliardy\"",
                " msgstr[2] \"%(value)s kvadrili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value)s kvadrili\u00c3\u00a1rd\"",
                "@@ -154,2 +214,3 @@ msgstr[1] \"%(value).1f kvintili\u00c3\u00b3nu\"",
                " msgstr[2] \"%(value).1f kvintili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value).1f kvintili\u00c3\u00b3nov\"",
                "@@ -161,2 +222,3 @@ msgstr[1] \"%(value)s kvintili\u00c3\u00b3ny\"",
                " msgstr[2] \"%(value)s kvintili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value)s kvintili\u00c3\u00b3nov\"",
                "@@ -168,2 +230,3 @@ msgstr[1] \"%(value).1f kvintiliardy\"",
                " msgstr[2] \"%(value).1f kvintili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value).1f kvintili\u00c3\u00a1rd\"",
                "@@ -175,2 +238,3 @@ msgstr[1] \"%(value)s kvintiliardy\"",
                " msgstr[2] \"%(value)s kvintili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value)s kvintili\u00c3\u00a1rd\"",
                "@@ -182,2 +246,3 @@ msgstr[1] \"%(value).1f googol\"",
                " msgstr[2] \"%(value).1f googol\"",
                "+msgstr[3] \"%(value).1f googol\"",
                "@@ -189,2 +254,3 @@ msgstr[1] \"%(value)s googol\"",
                " msgstr[2] \"%(value)s googol\"",
                "+msgstr[3] \"%(value)s googol\"",
                "@@ -226,4 +292,5 @@ msgstr \"v\u00c4\u008dera\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "@@ -231,2 +298,58 @@ msgstr \"pred %(delta)s\"",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d rokom\"",
                "+msgstr[1] \"%d rokmi\"",
                "+msgstr[2] \"%d rokmi\"",
                "+msgstr[3] \"%d rokmi\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d mesiacom\"",
                "+msgstr[1] \"%d mesiacmi\"",
                "+msgstr[2] \"%d mesiacmi\"",
                "+msgstr[3] \"%d mesiacmi\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d t\u00c3\u00bd\u00c5\u00bede\u00c5\u0088\"",
                "+msgstr[1] \"%d t\u00c3\u00bd\u00c5\u00bedne\"",
                "+msgstr[2] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ami\"",
                "+msgstr[3] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ami\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d d\u00c5\u0088om\"",
                "+msgstr[1] \"%d d\u00c5\u0088ami\"",
                "+msgstr[2] \"%d d\u00c5\u0088ami\"",
                "+msgstr[3] \"%d d\u00c5\u0088ami\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d hodinou\"",
                "+msgstr[1] \"%d hodinami\"",
                "+msgstr[2] \"%d hodinami\"",
                "+msgstr[3] \"%d hodinami\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d min\u00c3\u00batou\"",
                "+msgstr[1] \"%d min\u00c3\u00batami\"",
                "+msgstr[2] \"%d min\u00c3\u00batami\"",
                "+msgstr[3] \"%d min\u00c3\u00batami\"",
                "+",
                " msgid \"now\"",
                "@@ -242,2 +365,3 @@ msgstr[1] \"pred %(count)s\u00c2\u00a0sekundami\"",
                " msgstr[2] \"pred %(count)s\u00c2\u00a0sekundami\"",
                "+msgstr[3] \"pred %(count)s\u00c2\u00a0sekundami\"",
                "@@ -251,2 +375,3 @@ msgstr[1] \"pred %(count)s\u00c2\u00a0min\u00c3\u00batami\"",
                " msgstr[2] \"pred %(count)s\u00c2\u00a0min\u00c3\u00batami\"",
                "+msgstr[3] \"pred %(count)s\u00c2\u00a0min\u00c3\u00batami\"",
                "@@ -260,7 +385,65 @@ msgstr[1] \"pred %(count)s\u00c2\u00a0hodinami\"",
                " msgstr[2] \"pred %(count)s\u00c2\u00a0hodinami\"",
                "+msgstr[3] \"pred %(count)s\u00c2\u00a0hodinami\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"%(delta)s odteraz\"",
                "+msgstr \"o %(delta)s\"",
                "+",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d rok\"",
                "+msgstr[1] \"%d roky\"",
                "+msgstr[2] \"%d rokov\"",
                "+msgstr[3] \"%d rokov\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d mesiac\"",
                "+msgstr[1] \"%d mesiace\"",
                "+msgstr[2] \"%d mesiacov\"",
                "+msgstr[3] \"%d mesiacov\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d t\u00c3\u00bd\u00c5\u00bede\u00c5\u0088\"",
                "+msgstr[1] \"%d t\u00c3\u00bd\u00c5\u00bedne\"",
                "+msgstr[2] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ov\"",
                "+msgstr[3] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ov\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d de\u00c5\u0088\"",
                "+msgstr[1] \"%d dni\"",
                "+msgstr[2] \"%d dn\u00c3\u00ad\"",
                "+msgstr[3] \"%d dn\u00c3\u00ad\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d hodina\"",
                "+msgstr[1] \"%d hodiny\"",
                "+msgstr[2] \"%d hod\u00c3\u00adn\"",
                "+msgstr[3] \"%d hod\u00c3\u00adn\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d min\u00c3\u00bata\"",
                "+msgstr[1] \"%d min\u00c3\u00baty\"",
                "+msgstr[2] \"%d min\u00c3\u00bat\"",
                "+msgstr[3] \"%d min\u00c3\u00bat\"",
                "@@ -272,4 +455,5 @@ msgid_plural \"%(count)s\u00c2\u00a0seconds from now\"",
                " msgstr[0] \"o sekundu\"",
                "-msgstr[1] \"%(count)s\u00c2\u00a0sek\u00c3\u00band odteraz\"",
                "-msgstr[2] \"%(count)s\u00c2\u00a0sek\u00c3\u00band odteraz\"",
                "+msgstr[1] \"o %(count)s\u00c2\u00a0sek\u00c3\u00band\"",
                "+msgstr[2] \"o %(count)s\u00c2\u00a0sek\u00c3\u00band\"",
                "+msgstr[3] \"o %(count)s\u00c2\u00a0sek\u00c3\u00band\"",
                "@@ -281,4 +465,5 @@ msgid_plural \"%(count)s\u00c2\u00a0minutes from now\"",
                " msgstr[0] \"o min\u00c3\u00batu\"",
                "-msgstr[1] \"%(count)s\u00c2\u00a0min\u00c3\u00bat odteraz\"",
                "-msgstr[2] \"%(count)s\u00c2\u00a0min\u00c3\u00bat odteraz\"",
                "+msgstr[1] \"o %(count)s\u00c2\u00a0min\u00c3\u00bat\"",
                "+msgstr[2] \"o %(count)s\u00c2\u00a0min\u00c3\u00bat\"",
                "+msgstr[3] \"o %(count)s\u00c2\u00a0min\u00c3\u00bat\"",
                "@@ -290,3 +475,4 @@ msgid_plural \"%(count)s\u00c2\u00a0hours from now\"",
                " msgstr[0] \"o hodinu\"",
                "-msgstr[1] \"%(count)s\u00c2\u00a0hod\u00c3\u00adn odteraz\"",
                "-msgstr[2] \"%(count)s\u00c2\u00a0hod\u00c3\u00adn odteraz\"",
                "+msgstr[1] \"o %(count)s\u00c2\u00a0hod\u00c3\u00adn\"",
                "+msgstr[2] \"o %(count)s\u00c2\u00a0hod\u00c3\u00adn\"",
                "+msgstr[3] \"o %(count)s\u00c2\u00a0hod\u00c3\u00adn\"",
                "diff --git a/django/contrib/humanize/locale/uk/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/uk/LC_MESSAGES/django.mo",
                "index 0acb424249..fe9442db4a 100644",
                "Binary files a/django/contrib/humanize/locale/uk/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/uk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/uk/LC_MESSAGES/django.po b/django/contrib/humanize/locale/uk/LC_MESSAGES/django.po",
                "index 72a57496a3..972f8c46a7 100644",
                "--- a/django/contrib/humanize/locale/uk/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/uk/LC_MESSAGES/django.po",
                "@@ -8,2 +8,3 @@",
                " # Alex Bolotov <oleksandr.bolotov@gmail.com>, 2013",
                "+# Taras Korzhak <taras.korzhak96@gmail.com>, 2018",
                " msgid \"\"",
                "@@ -12,5 +13,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 19:21+0000\\n\"",
                "-\"Last-Translator: Mykola Zamkovoi <nickzam@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-24 20:06+0000\\n\"",
                "+\"Last-Translator: Taras Korzhak <taras.korzhak96@gmail.com>\\n\"",
                " \"Language-Team: Ukrainian (http://www.transifex.com/django/django/language/\"",
                "@@ -21,4 +22,6 @@ msgstr \"\"",
                " \"Language: uk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n\"",
                "-\"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != \"",
                "+\"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % \"",
                "+\"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || \"",
                "+\"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\\n\"",
                "@@ -27,13 +30,56 @@ msgstr \"\u00d0\u009e\u00d0\u00bb\u00d1\u008e\u00d0\u00b4\u00d0\u00bd\u00d1\u008e\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00b8\"",
                "-msgid \"th\"",
                "-msgstr \"-\u00d0\u00b8\u00d0\u00b9\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \"-\u00d0\u00b8\u00d0\u00b9\"",
                "-",
                "-msgid \"nd\"",
                "-msgstr \"-\u00d0\u00b8\u00d0\u00b9\"",
                "-",
                "-msgid \"rd\"",
                "-msgstr \"-\u00d1\u0096\u00d0\u00b9\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d1\u0082\u00d1\u008c\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}\u00d1\u0096\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "@@ -45,2 +91,3 @@ msgstr[1] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                " msgstr[2] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -52,2 +99,3 @@ msgstr[1] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -59,2 +107,3 @@ msgstr[1] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d1\u0096\u00d0\u00b2\"",
                "@@ -66,2 +115,3 @@ msgstr[1] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d1\u0096\u00d0\u00b2\"",
                "@@ -73,2 +123,3 @@ msgstr[1] \"%(value).1f \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -80,2 +131,3 @@ msgstr[1] \"%(value)s \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -87,2 +139,3 @@ msgstr[1] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -94,2 +147,3 @@ msgstr[1] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -101,2 +155,3 @@ msgstr[1] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -108,2 +163,3 @@ msgstr[1] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -115,2 +171,3 @@ msgstr[1] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -122,2 +179,3 @@ msgstr[1] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -129,2 +187,3 @@ msgstr[1] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -136,2 +195,3 @@ msgstr[1] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -143,2 +203,3 @@ msgstr[1] \"%(value).1f \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -150,2 +211,3 @@ msgstr[1] \"%(value)s \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -157,2 +219,3 @@ msgstr[1] \"%(value).1f \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -164,2 +227,3 @@ msgstr[1] \"%(value)s \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -171,2 +235,3 @@ msgstr[1] \"%(value).1f \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -178,2 +243,3 @@ msgstr[1] \"%(value)s \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -185,2 +251,3 @@ msgstr[1] \"%(value).1f \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2\"",
                "@@ -192,2 +259,3 @@ msgstr[1] \"%(value)s \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2\"",
                "@@ -229,4 +297,5 @@ msgstr \"\u00d0\u00b2\u00d1\u0087\u00d0\u00be\u00d1\u0080\u00d0\u00b0\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "@@ -234,2 +303,58 @@ msgstr \"%(delta)s \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d \u00d1\u0080\u00d1\u0096\u00d0\u00ba\"",
                "+msgstr[1] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\"",
                "+msgstr[2] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\"",
                "+msgstr[2] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d \u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u008f\"",
                "+msgstr[2] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b0\"",
                "+msgstr[1] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b0\"",
                "+msgstr[1] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "+",
                " msgid \"now\"",
                "@@ -245,2 +370,3 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4\u00d0\u00b8 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "@@ -254,2 +380,3 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "@@ -263,7 +390,65 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"%(delta)s \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0082\u00d0\u00b5\u00d0\u00bf\u00d0\u00b5\u00d1\u0080\"",
                "+msgstr \"\u00d1\u0087\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b7 %(delta)s\"",
                "+",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d \u00d1\u0080\u00d1\u0096\u00d0\u00ba\"",
                "+msgstr[1] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\"",
                "+msgstr[2] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\"",
                "+msgstr[2] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d \u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\"",
                "+msgstr[2] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d1\u0083\"",
                "+msgstr[1] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d1\u0083\"",
                "+msgstr[1] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "@@ -277,2 +462,3 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4\u00d0\u00b8 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "@@ -286,2 +472,3 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "@@ -295 +482,2 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "diff --git a/django/contrib/postgres/locale/az/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/az/LC_MESSAGES/django.mo",
                "new file mode 100644",
                "index 0000000000..3ec4c9bb56",
                "Binary files /dev/null and b/django/contrib/postgres/locale/az/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/az/LC_MESSAGES/django.po b/django/contrib/postgres/locale/az/LC_MESSAGES/django.po",
                "new file mode 100644",
                "index 0000000000..05c9162d7d",
                "--- /dev/null",
                "+++ b/django/contrib/postgres/locale/az/LC_MESSAGES/django.po",
                "@@ -0,0 +1,112 @@",
                "+# This file is distributed under the same license as the Django package.",
                "+#",
                "+# Translators:",
                "+# Emin Mastizada <emin@linux.com>, 2018",
                "+msgid \"\"",
                "+msgstr \"\"",
                "+\"Project-Id-Version: django\\n\"",
                "+\"Report-Msgid-Bugs-To: \\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-09 13:45+0000\\n\"",
                "+\"Last-Translator: Emin Mastizada <emin@linux.com>\\n\"",
                "+\"Language-Team: Azerbaijani (http://www.transifex.com/django/django/language/\"",
                "+\"az/)\\n\"",
                "+\"MIME-Version: 1.0\\n\"",
                "+\"Content-Type: text/plain; charset=UTF-8\\n\"",
                "+\"Content-Transfer-Encoding: 8bit\\n\"",
                "+\"Language: az\\n\"",
                "+\"Plural-Forms: nplurals=2; plural=(n != 1);\\n\"",
                "+",
                "+msgid \"PostgreSQL extensions\"",
                "+msgstr \"PostgreSQL uzant\u00c4\u00b1lar\u00c4\u00b1\"",
                "+",
                "+#, python-format",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                "+msgstr \"Array-d\u00c9\u0099ki %(nth)s element t\u00c9\u0099sdiql\u00c9\u0099n\u00c9\u0099 bilmir:\"",
                "+",
                "+msgid \"Nested arrays must have the same length.\"",
                "+msgstr \"\u00c4\u00b0\u00c3\u00a7-i\u00c3\u00a7\u00c9\u0099 array-l\u00c9\u0099rin uzunlu\u00c4\u009fu eyni olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+",
                "+msgid \"Map of strings to strings/nulls\"",
                "+msgstr \"String-l\u00c9\u0099rin string/null-lara x\u00c9\u0099rit\u00c9\u0099l\u00c9\u0099nm\u00c9\u0099 c\u00c9\u0099dv\u00c9\u0099li\"",
                "+",
                "+#, python-format",
                "+msgid \"The value of \\\"%(key)s\\\" is not a string or null.\"",
                "+msgstr \"\\\"%(key)s\\\" d\u00c9\u0099y\u00c9\u0099ri string v\u00c9\u0099 ya null deyil.\"",
                "+",
                "+msgid \"A JSON object\"",
                "+msgstr \"JSON obyekt\"",
                "+",
                "+msgid \"Value must be valid JSON.\"",
                "+msgstr \"D\u00c9\u0099y\u00c9\u0099r d\u00c3\u00bczg\u00c3\u00bcn JSON olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+",
                "+msgid \"Could not load JSON data.\"",
                "+msgstr \"JSON m\u00c9\u0099lumat y\u00c3\u00bckl\u00c9\u0099n\u00c9\u0099 bilmir.\"",
                "+",
                "+msgid \"Input must be a JSON dictionary.\"",
                "+msgstr \"Giri\u00c5\u009f JSON l\u00c3\u00bc\u00c4\u009f\u00c9\u0099t olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be valid JSON.\"",
                "+msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri d\u00c3\u00bczg\u00c3\u00bcn JSON olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+",
                "+msgid \"Enter two valid values.\"",
                "+msgstr \"\u00c4\u00b0ki d\u00c3\u00bczg\u00c3\u00bcn d\u00c9\u0099y\u00c9\u0099r daxil edin.\"",
                "+",
                "+msgid \"The start of the range must not exceed the end of the range.\"",
                "+msgstr \"Aral\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n ba\u00c5\u009flan\u00c4\u009f\u00c4\u00b1c\u00c4\u00b1 biti\u00c5\u009find\u00c9\u0099n b\u00c3\u00b6y\u00c3\u00bck ola bilm\u00c9\u0099z.\"",
                "+",
                "+msgid \"Enter two whole numbers.\"",
                "+msgstr \"\u00c4\u00b0ki tam r\u00c9\u0099q\u00c9\u0099m daxil edin.\"",
                "+",
                "+msgid \"Enter two numbers.\"",
                "+msgstr \"\u00c4\u00b0ki r\u00c9\u0099q\u00c9\u0099m daxil edin.\"",
                "+",
                "+msgid \"Enter two valid date/times.\"",
                "+msgstr \"\u00c4\u00b0ki d\u00c3\u00bczg\u00c3\u00bcn tarix/vaxt daxil edin.\"",
                "+",
                "+msgid \"Enter two valid dates.\"",
                "+msgstr \"\u00c4\u00b0ki d\u00c3\u00bczg\u00c3\u00bcn tarix daxil edin.\"",
                "+",
                "+#, python-format",
                "+msgid \"\"",
                "+\"List contains %(show_value)d item, it should contain no more than \"",
                "+\"%(limit_value)d.\"",
                "+msgid_plural \"\"",
                "+\"List contains %(show_value)d items, it should contain no more than \"",
                "+\"%(limit_value)d.\"",
                "+msgstr[0] \"\"",
                "+\"Siyah\u00c4\u00b1da %(show_value)d element var, \u00c9\u0099n \u00c3\u00a7ox %(limit_value)d ola bil\u00c9\u0099r.\"",
                "+msgstr[1] \"\"",
                "+\"Siyah\u00c4\u00b1da %(show_value)d element var, \u00c9\u0099n \u00c3\u00a7ox %(limit_value)d ola bil\u00c9\u0099r.\"",
                "+",
                "+#, python-format",
                "+msgid \"\"",
                "+\"List contains %(show_value)d item, it should contain no fewer than \"",
                "+\"%(limit_value)d.\"",
                "+msgid_plural \"\"",
                "+\"List contains %(show_value)d items, it should contain no fewer than \"",
                "+\"%(limit_value)d.\"",
                "+msgstr[0] \"\"",
                "+\"Siyah\u00c4\u00b1da %(show_value)d element var, \u00c9\u0099n az %(limit_value)d ola bil\u00c9\u0099r.\"",
                "+msgstr[1] \"\"",
                "+\"Siyah\u00c4\u00b1da %(show_value)d element var, \u00c9\u0099n az %(limit_value)d ola bil\u00c9\u0099r.\"",
                "+",
                "+#, python-format",
                "+msgid \"Some keys were missing: %(keys)s\"",
                "+msgstr \"B\u00c9\u0099zi a\u00c3\u00a7arlar \u00c9\u0099ksikdir: %(keys)s\"",
                "+",
                "+#, python-format",
                "+msgid \"Some unknown keys were provided: %(keys)s\"",
                "+msgstr \"B\u00c9\u0099zi bilinm\u00c9\u0099y\u00c9\u0099n a\u00c3\u00a7arlar t\u00c9\u0099chiz edilib: %(keys)s\"",
                "+",
                "+#, python-format",
                "+msgid \"\"",
                "+\"Ensure that this range is completely less than or equal to %(limit_value)s.\"",
                "+msgstr \"Bu aral\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n %(limit_value)s v\u00c9\u0099 ya daha az oldu\u00c4\u009funa \u00c9\u0099min olun.\"",
                "+",
                "+#, python-format",
                "+msgid \"\"",
                "+\"Ensure that this range is completely greater than or equal to \"",
                "+\"%(limit_value)s.\"",
                "+msgstr \"Bu aral\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n %(limit_value)s v\u00c9\u0099 ya daha b\u00c3\u00b6y\u00c3\u00bck oldu\u00c4\u009funa \u00c9\u0099min olun.\"",
                "diff --git a/django/contrib/postgres/locale/de/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/de/LC_MESSAGES/django.mo",
                "index 0ffa2d5991..101c22887c 100644",
                "Binary files a/django/contrib/postgres/locale/de/LC_MESSAGES/django.mo and b/django/contrib/postgres/locale/de/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/de/LC_MESSAGES/django.po b/django/contrib/postgres/locale/de/LC_MESSAGES/django.po",
                "index c107566f00..d82cab029d 100644",
                "--- a/django/contrib/postgres/locale/de/LC_MESSAGES/django.po",
                "+++ b/django/contrib/postgres/locale/de/LC_MESSAGES/django.po",
                "@@ -3,5 +3,5 @@",
                " # Translators:",
                "-# Jannis Leidel <jannis@leidel.info>, 2015-2017",
                "+# Jannis Leidel <jannis@leidel.info>, 2015-2018",
                " # Jens Neuhaus <kontakt@jensneuhaus.de>, 2016",
                "-# Markus Holtermann <inyoka@markusholtermann.eu>, 2017",
                "+# Markus Holtermann <info@markusholtermann.eu>, 2017",
                " msgid \"\"",
                "@@ -10,5 +10,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 20:42+0000\\n\"",
                "-\"Last-Translator: Markus Holtermann <inyoka@markusholtermann.eu>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-14 08:25+0000\\n\"",
                "+\"Last-Translator: Florian Apolloner <florian@apolloner.eu>\\n\"",
                " \"Language-Team: German (http://www.transifex.com/django/django/language/de/)\\n\"",
                "@@ -24,4 +24,4 @@ msgstr \"PostgreSQL-Erweiterungen\"",
                " #, python-format",
                "-msgid \"Item %(nth)s in the array did not validate: \"",
                "-msgstr \"Element %(nth)s des Arrays ist ung\u00c3\u00bcltig:\"",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                "+msgstr \"Element %(nth)s im Array konnte nicht validiert werden:\"",
                "diff --git a/django/contrib/postgres/locale/el/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/el/LC_MESSAGES/django.mo",
                "index 1291bd3987..dc9368bf15 100644",
                "Binary files a/django/contrib/postgres/locale/el/LC_MESSAGES/django.mo and b/django/contrib/postgres/locale/el/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/el/LC_MESSAGES/django.po b/django/contrib/postgres/locale/el/LC_MESSAGES/django.po",
                "index 94f00c87b5..0e9c6e1dbe 100644",
                "--- a/django/contrib/postgres/locale/el/LC_MESSAGES/django.po",
                "+++ b/django/contrib/postgres/locale/el/LC_MESSAGES/django.po",
                "@@ -4,3 +4,3 @@",
                " # Giannis Meletakis <meletakis@gmail.com>, 2015",
                "-# Nick Mavrakis <mavrakis.n@gmail.com>, 2017",
                "+# Nick Mavrakis <mavrakis.n@gmail.com>, 2017-2018",
                " # Nick Mavrakis <mavrakis.n@gmail.com>, 2016",
                "@@ -11,4 +11,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 20:42+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 10:12+0000\\n\"",
                " \"Last-Translator: Nick Mavrakis <mavrakis.n@gmail.com>\\n\"",
                "@@ -25,3 +25,3 @@ msgstr \"\u00ce\u0095\u00cf\u0080\u00ce\u00b5\u00ce\u00ba\u00cf\u0084\u00ce\u00ac\u00cf\u0083\u00ce\u00b5\u00ce\u00b9\u00cf\u0082 \u00cf\u0084\u00ce\u00b7\u00cf\u0082 PostgreSQL\"",
                " #, python-format",
                "-msgid \"Item %(nth)s in the array did not validate: \"",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                " msgstr \"To \u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00ce\u00b9\u00cf\u0087\u00ce\u00b5\u00ce\u00af\u00ce\u00bf %(nth)s \u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00ce\u00bd \u00cf\u0080\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00ba\u00ce\u00b1 \u00ce\u00b4\u00ce\u00b5\u00ce\u00bd \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 \u00ce\u00ad\u00ce\u00b3\u00ce\u00ba\u00cf\u0085\u00cf\u0081\u00ce\u00bf:\"",
                "diff --git a/django/contrib/postgres/locale/eu/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/eu/LC_MESSAGES/django.mo",
                "index ac98a65710..2437a00f66 100644",
                "Binary files a/django/contrib/postgres/locale/eu/LC_MESSAGES/django.mo and b/django/contrib/postgres/locale/eu/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/eu/LC_MESSAGES/django.po b/django/contrib/postgres/locale/eu/LC_MESSAGES/django.po",
                "index 834eb9ad1f..b9f6b63edb 100644",
                "--- a/django/contrib/postgres/locale/eu/LC_MESSAGES/django.po",
                "+++ b/django/contrib/postgres/locale/eu/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Eneko Illarramendi <eneko@illarra.com>, 2017",
                "+# Eneko Illarramendi <eneko@illarra.com>, 2017-2018",
                " # Urtzi Odriozola <urtzi.odriozola@gmail.com>, 2017",
                "@@ -9,5 +9,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-25 08:36+0000\\n\"",
                "-\"Last-Translator: Urtzi Odriozola <urtzi.odriozola@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-24 07:33+0000\\n\"",
                "+\"Last-Translator: Eneko Illarramendi <eneko@illarra.com>\\n\"",
                " \"Language-Team: Basque (http://www.transifex.com/django/django/language/eu/)\\n\"",
                "@@ -23,3 +23,3 @@ msgstr \"PostgreSQL hedapenak\"",
                " #, python-format",
                "-msgid \"Item %(nth)s in the array did not validate: \"",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                " msgstr \"Array-ko %(nth)s elementua ez da balekoa:\"",
                "diff --git a/django/contrib/postgres/locale/sk/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/sk/LC_MESSAGES/django.mo",
                "index c503e252c1..c311668a72 100644",
                "Binary files a/django/contrib/postgres/locale/sk/LC_MESSAGES/django.mo and b/django/contrib/postgres/locale/sk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/sk/LC_MESSAGES/django.po b/django/contrib/postgres/locale/sk/LC_MESSAGES/django.po",
                "index 0618aff648..e749e4073e 100644",
                "--- a/django/contrib/postgres/locale/sk/LC_MESSAGES/django.po",
                "+++ b/django/contrib/postgres/locale/sk/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Martin T\u00c3\u00b3th <ezimir@gmail.com>, 2017",
                "+# Martin T\u00c3\u00b3th <ezimir@gmail.com>, 2017-2018",
                " msgid \"\"",
                "@@ -8,4 +8,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 20:42+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-05 17:06+0000\\n\"",
                " \"Last-Translator: Martin T\u00c3\u00b3th <ezimir@gmail.com>\\n\"",
                "@@ -16,3 +16,4 @@ msgstr \"\"",
                " \"Language: sk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n == 1 ? 0 : n % 1 == 0 && n \"",
                "+\">= 2 && n <= 4 ? 1 : n % 1 != 0 ? 2: 3);\\n\"",
                "@@ -22,3 +23,3 @@ msgstr \"PostgreSQL roz\u00c5\u00a1\u00c3\u00adrenia\"",
                " #, python-format",
                "-msgid \"Item %(nth)s in the array did not validate: \"",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                " msgstr \"%(nth)s. polo\u00c5\u00beka po\u00c4\u00bea je neplatn\u00c3\u00a1:\"",
                "@@ -85,2 +86,5 @@ msgstr[2] \"\"",
                " \"%(limit_value)d.\"",
                "+msgstr[3] \"\"",
                "+\"Zoznam obsahuje %(show_value)d polo\u00c5\u00beku, ale nemal by obsahova\u00c5\u00a5 viac ako \"",
                "+\"%(limit_value)d.\"",
                "@@ -102,2 +106,5 @@ msgstr[2] \"\"",
                " \"%(limit_value)d.\"",
                "+msgstr[3] \"\"",
                "+\"Zoznam obsahuje %(show_value)d polo\u00c5\u00beku, ale nemal by obsahova\u00c5\u00a5 menej ako \"",
                "+\"%(limit_value)d.\"",
                "diff --git a/django/contrib/postgres/locale/uk/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/uk/LC_MESSAGES/django.mo",
                "index 585732330a..a80add979e 100644",
                "Binary files a/django/contrib/postgres/locale/uk/LC_MESSAGES/django.mo and b/django/contrib/postgres/locale/uk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/uk/LC_MESSAGES/django.po b/django/contrib/postgres/locale/uk/LC_MESSAGES/django.po",
                "index ecb65bcf87..8f08a3c905 100644",
                "--- a/django/contrib/postgres/locale/uk/LC_MESSAGES/django.po",
                "+++ b/django/contrib/postgres/locale/uk/LC_MESSAGES/django.po",
                "@@ -7,2 +7,3 @@",
                " # Kirill Gagarski <gagarin.gtn@gmail.com>, 2015-2016",
                "+# Taras Korzhak <taras.korzhak96@gmail.com>, 2018",
                " # Zoriana Zaiats, 2017",
                "@@ -12,5 +13,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-21 22:44+0000\\n\"",
                "-\"Last-Translator: Zoriana Zaiats\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-24 20:08+0000\\n\"",
                "+\"Last-Translator: Taras Korzhak <taras.korzhak96@gmail.com>\\n\"",
                " \"Language-Team: Ukrainian (http://www.transifex.com/django/django/language/\"",
                "@@ -21,4 +22,6 @@ msgstr \"\"",
                " \"Language: uk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n\"",
                "-\"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != \"",
                "+\"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % \"",
                "+\"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || \"",
                "+\"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\\n\"",
                "@@ -28,7 +31,7 @@ msgstr \"\u00d0\u00a0\u00d0\u00be\u00d0\u00b7\u00d1\u0088\u00d0\u00b8\u00d1\u0080\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f  PostgreSQL\"",
                " #, python-format",
                "-msgid \"Item %(nth)s in the array did not validate: \"",
                "-msgstr \"\u00d0\u0095\u00d0\u00bb\u00d0\u00b5\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0082 \u00d0\u00bc\u00d0\u00b0\u00d1\u0081\u00d0\u00b8\u00d0\u00b2\u00d1\u0083 \u00e2\u0084\u0096%(nth)s \u00d0\u00bd\u00d0\u00b5 \u00d0\u00bf\u00d1\u0080\u00d0\u00be\u00d0\u00b9\u00d1\u0088\u00d0\u00be\u00d0\u00b2 \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b2\u00d1\u0096\u00d1\u0080\u00d0\u00ba\u00d1\u0083:\"",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                "+msgstr \"\u00d0\u0095\u00d0\u00bb\u00d0\u00b5\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0082 %(nth)s \u00d1\u0083 \u00d0\u00bc\u00d0\u00b0\u00d1\u0081\u00d0\u00b8\u00d0\u00b2\u00d1\u0096 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00ba\u00d0\u00be\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d1\u0082\u00d0\u00bd\u00d0\u00b8\u00d0\u00b9:\"",
                " msgid \"Nested arrays must have the same length.\"",
                "-msgstr \"\u00d0\u0092\u00d0\u00ba\u00d0\u00bb\u00d0\u00b0\u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d0\u00b8 \u00d0\u00bc\u00d0\u00b0\u00d1\u0081\u00d0\u00b8\u00d0\u00b2\u00d0\u00b8 \u00d0\u00bc\u00d1\u0083\u00d1\u0081\u00d1\u008f\u00d1\u0082\u00d1\u008c \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 \u00d0\u00be\u00d0\u00b4\u00d0\u00bd\u00d0\u00b0\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00b4\u00d0\u00be\u00d0\u00b2\u00d0\u00b6\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8.\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00ba\u00d0\u00bb\u00d0\u00b0\u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d0\u00b8 \u00d0\u00bc\u00d0\u00b0\u00d1\u0081\u00d0\u00b8\u00d0\u00b2\u00d0\u00b8 \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00b8\u00d0\u00bd\u00d0\u00bd\u00d1\u0096 \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 \u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b0\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00b4\u00d0\u00be\u00d0\u00b2\u00d0\u00b6\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8.\"",
                "@@ -39,3 +42,3 @@ msgstr \"\u00d0\u0090\u00d1\u0081\u00d0\u00be\u00d1\u0086\u00d1\u0096\u00d0\u00b0\u00d1\u0082\u00d0\u00b8\u00d0\u00b2\u00d0\u00bd\u00d0\u00b8\u00d0\u00b9 \u00d0\u00bc\u00d0\u00b0\u00d1\u0081\u00d0\u00b8\u00d0\u00b2 \u00d1\u0096\u00d0\u00b7 \u00d1\u0080\u00d1\u008f\u00d0\u00b4\u00d0\u00ba\u00d1\u0096\u00d0\u00b2 \u00d1\u0083 \u00d1\u0080\u00d1\u008f\u00d0\u00b4\u00d0\u00ba\u00d0\u00b8/\u00d0\u00be\u00d0\u00b1",
                " msgid \"The value of \\\"%(key)s\\\" is not a string or null.\"",
                "-msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \\\"%(key)s\\\" \u00d0\u00bd\u00d0\u00b5 \u00d1\u0094 \u00d1\u0081\u00d1\u0082\u00d1\u0080\u00d1\u0096\u00d1\u0087\u00d0\u00ba\u00d0\u00be\u00d1\u008e \u00d1\u0087\u00d0\u00b8 null.\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \\\"%(key)s\\\" \u00d0\u00bd\u00d0\u00b5 \u00d1\u0094 \u00d1\u0080\u00d1\u008f\u00d0\u00b4\u00d0\u00ba\u00d0\u00be\u00d0\u00bc \u00d1\u0087\u00d0\u00b8 null.\"",
                "@@ -91,2 +94,5 @@ msgstr[2] \"\"",
                " \"%(limit_value)d.\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u00a1\u00d0\u00bf\u00d0\u00b8\u00d1\u0081\u00d0\u00be\u00d0\u00ba \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d1\u0082\u00d1\u008c %(show_value)d \u00d0\u00b5\u00d0\u00bb\u00d0\u00b5\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0082\u00d1\u0096\u00d0\u00b2, \u00d0\u00ba\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00ba\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008c \u00d1\u008f\u00d0\u00ba\u00d0\u00b8\u00d1\u0085 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00bc\u00d0\u00b0\u00d1\u0094 \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b2\u00d0\u00b8\u00d1\u0089\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \"",
                "+\"%(limit_value)d.\"",
                "@@ -108,2 +114,5 @@ msgstr[2] \"\"",
                " \"%(limit_value)d.\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u00a1\u00d0\u00bf\u00d0\u00b8\u00d1\u0081\u00d0\u00be\u00d0\u00ba \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d1\u0082\u00d1\u008c %(show_value)d \u00d0\u00b5\u00d0\u00bb\u00d0\u00b5\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0082\u00d0\u00b0, \u00d0\u00ba\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00ba\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008c \u00d1\u008f\u00d0\u00ba\u00d0\u00b8\u00d1\u0085 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00bc\u00d0\u00b0\u00d1\u0094 \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0088\u00d0\u00b0 \"",
                "+\"%(limit_value)d.\"",
                "@@ -128,2 +137,2 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0086\u00d0\u00b5\u00d0\u00b9 \u00d0\u00b4\u00d1\u0096\u00d0\u00b0\u00d0\u00bf\u00d0\u00b0\u00d0\u00b7\u00d0\u00be\u00d0\u00bd \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00bd\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008e \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d1\u0087\u00d0\u00b8 \u00d0\u00b4\u00d0\u00be\u00d1\u0080\u00d1\u0096\u00d0\u00b2\u00d0\u00bd\u00d1\u008e\u00d1\u0094 %(limit_value)s.\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0086\u00d0\u00b5\u00d0\u00b9 \u00d0\u00b4\u00d1\u0096\u00d0\u00b0\u00d0\u00bf\u00d0\u00b0\u00d0\u00b7\u00d0\u00be\u00d0\u00bd \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00bd\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008e \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b8\u00d0\u00b9 \u00d1\u0087\u00d0\u00b8 \u00d0\u00b4\u00d0\u00be\u00d1\u0080\u00d1\u0096\u00d0\u00b2\u00d0\u00bd\u00d1\u008e\u00d1\u0094 %(limit_value)s.\""
            ],
            "changed_files": [
                "django/conf/locale/az/LC_MESSAGES/django.mo",
                "django/conf/locale/az/LC_MESSAGES/django.po",
                "django/conf/locale/br/LC_MESSAGES/django.mo",
                "django/conf/locale/br/LC_MESSAGES/django.po",
                "django/conf/locale/de/LC_MESSAGES/django.mo",
                "django/conf/locale/de/LC_MESSAGES/django.po",
                "django/conf/locale/el/LC_MESSAGES/django.mo",
                "django/conf/locale/el/LC_MESSAGES/django.po",
                "django/conf/locale/eu/LC_MESSAGES/django.mo",
                "django/conf/locale/eu/LC_MESSAGES/django.po",
                "django/conf/locale/ne/LC_MESSAGES/django.mo",
                "django/conf/locale/ne/LC_MESSAGES/django.po",
                "django/conf/locale/pl/LC_MESSAGES/django.mo",
                "django/conf/locale/pl/LC_MESSAGES/django.po",
                "django/conf/locale/sk/LC_MESSAGES/django.mo",
                "django/conf/locale/sk/LC_MESSAGES/django.po",
                "django/conf/locale/uk/LC_MESSAGES/django.mo",
                "django/conf/locale/uk/LC_MESSAGES/django.po",
                "django/conf/locale/zh_Hans/LC_MESSAGES/django.mo",
                "django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/az/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/az/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/ca/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/ca/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/el/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/el/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/eu/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/eu/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/lt/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/lt/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/uk/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/uk/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.po",
                "django/contrib/auth/locale/da/LC_MESSAGES/django.mo",
                "django/contrib/auth/locale/da/LC_MESSAGES/django.po",
                "django/contrib/auth/locale/el/LC_MESSAGES/django.mo",
                "django/contrib/auth/locale/el/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/az/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/az/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/br/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/br/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/ca/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/ca/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/de/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/de/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/el/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/el/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/eu/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/eu/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/sk/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/sk/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/uk/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/uk/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/az/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/az/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/de/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/de/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/el/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/el/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/eu/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/eu/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/sk/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/sk/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/uk/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/uk/LC_MESSAGES/django.po"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: admin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "033d842e84b6211aa21a34fce49a98aed1d6c557",
            "repository": "https://github.com/django/django",
            "timestamp": 1538211262,
            "hunks": 399,
            "message": "Updated translations from Transifex Forward port of d5ed08263b58ec972a1e009f23d7b90c30b6b9c1 from master.",
            "diff": [
                "diff --git a/django/conf/locale/az/LC_MESSAGES/django.mo b/django/conf/locale/az/LC_MESSAGES/django.mo",
                "index 5d42c5a0d5..d0489e2227 100644",
                "Binary files a/django/conf/locale/az/LC_MESSAGES/django.mo and b/django/conf/locale/az/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/az/LC_MESSAGES/django.po b/django/conf/locale/az/LC_MESSAGES/django.po",
                "index 0b5f9740d1..60ddc200e5 100644",
                "--- a/django/conf/locale/az/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/az/LC_MESSAGES/django.po",
                "@@ -11,4 +11,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "-\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"PO-Revision-Date: 2018-09-09 12:46+0000\\n\"",
                "+\"Last-Translator: Emin Mastizada <emin@linux.com>\\n\"",
                " \"Language-Team: Azerbaijani (http://www.transifex.com/django/django/language/\"",
                "@@ -473,3 +473,3 @@ msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri True v\u00c9\u0099 ya False olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                " msgid \"'%(value)s' value must be either True, False, or None.\"",
                "-msgstr \"\"",
                "+msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri True, False v\u00c9\u0099 ya None olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "@@ -662,3 +662,3 @@ msgstr \"Ke\u00c3\u00a7\u00c9\u0099rli m\u00c3\u00bcdd\u00c9\u0099t daxil edin.\"",
                " msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "-msgstr \"\"",
                "+msgstr \"G\u00c3\u00bcnl\u00c9\u0099rin say\u00c4\u00b1 {min_days} il\u00c9\u0099 {max_days} aras\u00c4\u00b1nda olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "diff --git a/django/conf/locale/br/LC_MESSAGES/django.mo b/django/conf/locale/br/LC_MESSAGES/django.mo",
                "index 345448b1fd..89e7e40f12 100644",
                "Binary files a/django/conf/locale/br/LC_MESSAGES/django.mo and b/django/conf/locale/br/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/br/LC_MESSAGES/django.po b/django/conf/locale/br/LC_MESSAGES/django.po",
                "index 34e5c01181..9c99f7c429 100644",
                "--- a/django/conf/locale/br/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/br/LC_MESSAGES/django.po",
                "@@ -8,4 +8,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                " \"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "@@ -16,3 +16,7 @@ msgstr \"\"",
                " \"Language: br\\n\"",
                "-\"Plural-Forms: nplurals=2; plural=(n > 1);\\n\"",
                "+\"Plural-Forms: nplurals=5; plural=((n%10 == 1) && (n%100 != 11) && (n%100 !\"",
                "+\"=71) && (n%100 !=91) ? 0 :(n%10 == 2) && (n%100 != 12) && (n%100 !=72) && (n\"",
                "+\"%100 !=92) ? 1 :(n%10 ==3 || n%10==4 || n%10==9) && (n%100 < 10 || n% 100 > \"",
                "+\"19) && (n%100 < 70 || n%100 > 79) && (n%100 < 90 || n%100 > 99) ? 2 :(n != 0 \"",
                "+\"&& n % 1000000 == 0) ? 3 : 4);\\n\"",
                "@@ -159,2 +163,5 @@ msgstr \"Jorjianeg\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -362,2 +369,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -372,2 +382,8 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Merkit un niver.\"",
                "@@ -378,2 +394,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -384,2 +403,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -392,2 +414,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -448,2 +473,6 @@ msgstr \"\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -610,5 +639,2 @@ msgstr \"Merkit un niver anterin.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Merkit un niver.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -625,2 +651,6 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -640,2 +670,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -680,2 +713,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -686,2 +722,5 @@ msgstr[0] \"\"",
                " msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -758,2 +797,5 @@ msgstr[0] \"%(size)d okted\"",
                " msgstr[1] \"%(size)d okted\"",
                "+msgstr[2] \"%(size)d okted\"",
                "+msgstr[3] \"%(size)d okted\"",
                "+msgstr[4] \"%(size)d okted\"",
                "@@ -1027,2 +1069,5 @@ msgstr[0] \"%d bloaz\"",
                " msgstr[1] \"%d bloaz\"",
                "+msgstr[2] \"%d bloaz\"",
                "+msgstr[3] \"%d bloaz\"",
                "+msgstr[4] \"%d bloaz\"",
                "@@ -1033,2 +1078,5 @@ msgstr[0] \"%d miz\"",
                " msgstr[1] \"%d miz\"",
                "+msgstr[2] \"%d miz\"",
                "+msgstr[3] \"%d miz\"",
                "+msgstr[4] \"%d miz\"",
                "@@ -1039,2 +1087,5 @@ msgstr[0] \"%d sizhun\"",
                " msgstr[1] \"%d sizhun\"",
                "+msgstr[2] \"%d sizhun\"",
                "+msgstr[3] \"%d sizhun\"",
                "+msgstr[4] \"%d sizhun\"",
                "@@ -1045,2 +1096,5 @@ msgstr[0] \"%d deiz\"",
                " msgstr[1] \"%d deiz\"",
                "+msgstr[2] \"%d deiz\"",
                "+msgstr[3] \"%d deiz\"",
                "+msgstr[4] \"%d deiz\"",
                "@@ -1051,2 +1105,5 @@ msgstr[0] \"%d eur\"",
                " msgstr[1] \"%d eur\"",
                "+msgstr[2] \"%d eur\"",
                "+msgstr[3] \"%d eur\"",
                "+msgstr[4] \"%d eur\"",
                "@@ -1057,2 +1114,5 @@ msgstr[0] \"%d munud\"",
                " msgstr[1] \"%d munud\"",
                "+msgstr[2] \"%d munud\"",
                "+msgstr[3] \"%d munud\"",
                "+msgstr[4] \"%d munud\"",
                "diff --git a/django/conf/locale/de/LC_MESSAGES/django.mo b/django/conf/locale/de/LC_MESSAGES/django.mo",
                "index e90c930ed2..48165d6756 100644",
                "Binary files a/django/conf/locale/de/LC_MESSAGES/django.mo and b/django/conf/locale/de/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/de/LC_MESSAGES/django.po b/django/conf/locale/de/LC_MESSAGES/django.po",
                "index 273932719c..efc1a522f2 100644",
                "--- a/django/conf/locale/de/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/de/LC_MESSAGES/django.po",
                "@@ -10,3 +10,3 @@",
                " # Jannis Vajen, 2016",
                "-# Markus Holtermann <inyoka@markusholtermann.eu>, 2013,2015",
                "+# Markus Holtermann <info@markusholtermann.eu>, 2013,2015",
                " msgid \"\"",
                "@@ -16,4 +16,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "-\"PO-Revision-Date: 2018-05-18 00:21+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"PO-Revision-Date: 2018-08-14 08:25+0000\\n\"",
                "+\"Last-Translator: Florian Apolloner <florian@apolloner.eu>\\n\"",
                " \"Language-Team: German (http://www.transifex.com/django/django/language/de/)\\n\"",
                "@@ -484,3 +484,3 @@ msgstr \"\u00e2\u0080\u009e%(value)s\u00e2\u0080\u009c Wert muss entweder True oder False sein.\"",
                " msgid \"'%(value)s' value must be either True, False, or None.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e2\u0080\u009e%(value)s\u00e2\u0080\u009c Wert muss True, False oder None sein.\"",
                "@@ -675,3 +675,3 @@ msgstr \"Bitte eine g\u00c3\u00bcltige Zeitspanne eingeben.\"",
                " msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "-msgstr \"\"",
                "+msgstr \"Die Anzahl der Tage muss zwischen {min_days} und {max_days} sein.\"",
                "diff --git a/django/conf/locale/el/LC_MESSAGES/django.mo b/django/conf/locale/el/LC_MESSAGES/django.mo",
                "index a80a720dee..29beef7c18 100644",
                "Binary files a/django/conf/locale/el/LC_MESSAGES/django.mo and b/django/conf/locale/el/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/el/LC_MESSAGES/django.po b/django/conf/locale/el/LC_MESSAGES/django.po",
                "index 4d0cea0465..1669421d5b 100644",
                "--- a/django/conf/locale/el/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/el/LC_MESSAGES/django.po",
                "@@ -7,3 +7,3 @@",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "-# Nick Mavrakis <mavrakis.n@gmail.com>, 2017",
                "+# Nick Mavrakis <mavrakis.n@gmail.com>, 2017-2018",
                " # Nikolas Demiridis <nikolas@demiridis.gr>, 2014",
                "@@ -19,5 +19,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-25 01:42+0000\\n\"",
                "-\"Last-Translator: Dimitris Glezos <glezos@transifex.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 10:11+0000\\n\"",
                "+\"Last-Translator: Nick Mavrakis <mavrakis.n@gmail.com>\\n\"",
                " \"Language-Team: Greek (http://www.transifex.com/django/django/language/el/)\\n\"",
                "@@ -170,2 +170,5 @@ msgstr \"\u00ce\u0093\u00ce\u00b5\u00cf\u0089\u00cf\u0081\u00ce\u00b3\u00ce\u00b9\u00ce\u00b1\u00ce\u00bd\u00ce\u00ac\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"Kabyle\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -394,2 +397,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00ce\u0095\u00ce\u00b9\u00cf\u0083\u00ce\u00ac\u00ce\u00b3\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00ad\u00ce\u00bd\u00ce\u00b1\u00ce\u00bd \u00ce\u00b1\u00cf\u0081\u00ce\u00b9\u00ce\u00b8\u00ce\u00bc\u00cf\u008c.\"",
                "+",
                " #, python-format",
                "@@ -477,2 +483,6 @@ msgstr \"\u00ce\u0097 \u00cf\u0084\u00ce\u00b9\u00ce\u00bc\u00ce\u00ae '%(value)s' \u00cf\u0080\u00cf\u0081\u00ce\u00ad\u00cf\u0080\u00ce\u00b5\u00ce\u00b9 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 \u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 True \u00ce\u00ae Fa",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\u00ce\u0097 \u00cf\u0084\u00ce\u00b9\u00ce\u00bc\u00ce\u00ae '%(value)s' \u00cf\u0080\u00cf\u0081\u00ce\u00ad\u00cf\u0080\u00ce\u00b5\u00ce\u00b9 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 True, False, \u00ce\u00ae None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -654,5 +664,2 @@ msgstr \"\u00ce\u0095\u00ce\u00b9\u00cf\u0083\u00ce\u00ac\u00ce\u00b3\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00ad\u00ce\u00bd\u00ce\u00b1\u00ce\u00bd \u00ce\u00b1\u00ce\u00ba\u00ce\u00ad\u00cf\u0081\u00ce\u00b1\u00ce\u00b9\u00ce\u00bf \u00ce\u00b1\u00cf\u0081\u00ce\u00b9\u00ce\u00b8\u00ce\u00bc\u00cf\u008c.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00ce\u0095\u00ce\u00b9\u00cf\u0083\u00ce\u00ac\u00ce\u00b3\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00ad\u00ce\u00bd\u00ce\u00b1\u00ce\u00bd \u00ce\u00b1\u00cf\u0081\u00ce\u00b9\u00ce\u00b8\u00ce\u00bc\u00cf\u008c.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -669,2 +676,6 @@ msgstr \"\u00ce\u0095\u00ce\u00b9\u00cf\u0083\u00ce\u00ac\u00ce\u00b3\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00bc\u00ce\u00b9\u00ce\u00b1 \u00ce\u00ad\u00ce\u00b3\u00ce\u00ba\u00cf\u0085\u00cf\u0081\u00ce\u00b7 \u00ce\u00b4\u00ce\u00b9\u00ce\u00ac\u00cf\u0081\u00ce\u00ba\u00ce\u00b5\u00ce\u00b9\u00ce\u00b1.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00ce\u009f \u00ce\u00b1\u00cf\u0081\u00ce\u00b9\u00ce\u00b8\u00ce\u00bc\u00cf\u008c\u00cf\u0082 \u00cf\u0084\u00cf\u0089\u00ce\u00bd \u00ce\u00b7\u00ce\u00bc\u00ce\u00b5\u00cf\u0081\u00cf\u008e\u00ce\u00bd \u00cf\u0080\u00cf\u0081\u00ce\u00ad\u00cf\u0080\u00ce\u00b5\u00ce\u00b9 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 \u00ce\u00bc\u00ce\u00b5\u00cf\u0084\u00ce\u00b1\u00ce\u00be\u00cf\u008d {min_days} \u00ce\u00ba\u00ce\u00b1\u00ce\u00b9 {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -769,3 +780,3 @@ msgstr \"\u00ce\u0088\u00cf\u0087\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00be\u00ce\u00b1\u00ce\u00bd\u00ce\u00b1\u00ce\u00b5\u00ce\u00b9\u00cf\u0083\u00ce\u00ac\u00ce\u00b3\u00ce\u00b5\u00ce\u00b9 \u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00af\u00ce\u00b4\u00ce\u00b9\u00ce\u00b1 \u00cf\u0084\u00ce\u00b9\u00ce\u00bc\u00ce\u00b7. \u00ce\u0092\u00ce\u00b5\u00ce\u00b2\u00ce\u00b1\u00ce\u00b9\u00cf\u0089",
                " msgid \"The inline value did not match the parent instance.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00ce\u0097 \u00cf\u0084\u00ce\u00b9\u00ce\u00bc\u00ce\u00ae \u00ce\u00b4\u00ce\u00b5\u00ce\u00bd \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 \u00ce\u00af\u00cf\u0083\u00ce\u00b7 \u00ce\u00bc\u00ce\u00b5 \u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00b1\u00ce\u00bd\u00cf\u0084\u00ce\u00af\u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00ce\u00b9\u00cf\u0087\u00ce\u00b7 \u00cf\u0084\u00ce\u00b9\u00ce\u00bc\u00ce\u00ae \u00cf\u0084\u00ce\u00bf\u00cf\u0085 \u00ce\u00b3\u00ce\u00bf\u00ce\u00bd\u00ce\u00b9\u00ce\u00ba\u00ce\u00bf\u00cf\u008d object.\"",
                "@@ -1150,2 +1161,8 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00ce\u0091\u00ce\u00bd \u00cf\u0087\u00cf\u0081\u00ce\u00b7\u00cf\u0083\u00ce\u00b9\u00ce\u00bc\u00ce\u00bf\u00cf\u0080\u00ce\u00bf\u00ce\u00b9\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00b5\u00cf\u0084\u00ce\u00b9\u00ce\u00ba\u00ce\u00ad\u00cf\u0084\u00ce\u00b1 <meta name=\\\"referrer\\\" content=\\\"no-referrer\"",
                "+\"\\\"> \u00ce\u00ae \u00cf\u0083\u00cf\u0085\u00ce\u00bc\u00cf\u0080\u00ce\u00b5\u00cf\u0081\u00ce\u00b9\u00ce\u00bb\u00ce\u00b1\u00ce\u00bc\u00ce\u00b2\u00ce\u00ac\u00ce\u00bd\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00ba\u00ce\u00b5\u00cf\u0086\u00ce\u00b1\u00ce\u00bb\u00ce\u00af\u00ce\u00b4\u00ce\u00b1 (header) 'Referrer-Policy: no-referrer', \"",
                "+\"\u00cf\u0080\u00ce\u00b1\u00cf\u0081\u00ce\u00b1\u00ce\u00ba\u00ce\u00b1\u00ce\u00bb\u00ce\u00bf\u00cf\u008d\u00ce\u00bc\u00ce\u00b5 \u00ce\u00b1\u00cf\u0086\u00ce\u00b1\u00ce\u00b9\u00cf\u0081\u00ce\u00ad\u00cf\u0083\u00cf\u0084\u00ce\u00b5 \u00cf\u0084\u00ce\u00b1. \u00ce\u0097 \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00cf\u0083\u00cf\u0084\u00ce\u00b1\u00cf\u0083\u00ce\u00af\u00ce\u00b1 CSRF \u00ce\u00b1\u00cf\u0080\u00ce\u00b1\u00ce\u00b9\u00cf\u0084\u00ce\u00b5\u00ce\u00af \u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00ba\u00ce\u00b5\u00cf\u0086\u00ce\u00b1\u00ce\u00bb\u00ce\u00af\u00ce\u00b4\u00ce\u00b1 'Referer' \u00ce\u00bd\u00ce\u00b1 \"",
                "+\"\u00ce\u00ba\u00ce\u00ac\u00ce\u00bd\u00ce\u00b5\u00ce\u00b9 \u00ce\u00b1\u00cf\u0085\u00cf\u0083\u00cf\u0084\u00ce\u00b7\u00cf\u0081\u00cf\u008c \u00ce\u00ad\u00ce\u00bb\u00ce\u00b5\u00ce\u00b3\u00cf\u0087\u00ce\u00bf \u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00ce\u00bd referer. \u00ce\u0091\u00ce\u00bd \u00ce\u00ba\u00cf\u008d\u00cf\u0081\u00ce\u00b9\u00ce\u00bf \u00ce\u00bc\u00ce\u00ad\u00ce\u00bb\u00ce\u00b7\u00ce\u00bc\u00ce\u00b1 \u00cf\u0083\u00ce\u00b1\u00cf\u0082 \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 \u00ce\u00b7 \u00ce\u00b9\u00ce\u00b4\u00ce\u00b9\u00cf\u0089\u00cf\u0084\u00ce\u00b9\u00ce\u00ba\u00cf\u008c\u00cf\u0084\u00ce\u00b7\u00cf\u0084\u00ce\u00b1, \"",
                "+\"\u00cf\u0083\u00ce\u00ba\u00ce\u00b5\u00cf\u0086\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00bd\u00ce\u00b1 \u00cf\u0087\u00cf\u0081\u00ce\u00b7\u00cf\u0083\u00ce\u00b9\u00ce\u00bc\u00ce\u00bf\u00cf\u0080\u00ce\u00bf\u00ce\u00b9\u00ce\u00ae\u00cf\u0083\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00b5\u00ce\u00bd\u00ce\u00b1\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00ba\u00cf\u0084\u00ce\u00b9\u00ce\u00ba\u00ce\u00ad\u00cf\u0082 \u00ce\u00bc\u00ce\u00b5\u00ce\u00b8\u00cf\u008c\u00ce\u00b4\u00ce\u00bf\u00cf\u0085\u00cf\u0082 \u00cf\u008c\u00cf\u0080\u00cf\u0089\u00cf\u0082 <a rel=\\\"noreferrer\"",
                "+\"\\\" ...> \u00ce\u00b3\u00ce\u00b9\u00ce\u00b1 \u00cf\u0083\u00cf\u0085\u00ce\u00bd\u00ce\u00b4\u00ce\u00ad\u00cf\u0083\u00ce\u00bc\u00ce\u00bf\u00cf\u0085\u00cf\u0082 \u00ce\u00b1\u00cf\u0080\u00cf\u008c \u00ce\u00ac\u00ce\u00bb\u00ce\u00bb\u00ce\u00b5\u00cf\u0082 \u00ce\u00b9\u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00cf\u0083\u00ce\u00b5\u00ce\u00bb\u00ce\u00af\u00ce\u00b4\u00ce\u00b5\u00cf\u0082.\"",
                "@@ -1254,2 +1271,6 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00ce\u0092\u00ce\u00bb\u00ce\u00ad\u00cf\u0080\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00b1\u00cf\u0085\u00cf\u0084\u00cf\u008c \u00cf\u0084\u00ce\u00bf \u00ce\u00bc\u00ce\u00ae\u00ce\u00bd\u00cf\u0085\u00ce\u00bc\u00ce\u00b1 \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00b9\u00ce\u00b4\u00ce\u00ae \u00ce\u00ad\u00cf\u0087\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 <a href=\\\"https://docs.djangoproject.com/\"",
                "+\"en/%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\"",
                "+\"\\\">DEBUG=True</a> \u00cf\u0083\u00cf\u0084\u00ce\u00bf \u00ce\u00b1\u00cf\u0081\u00cf\u0087\u00ce\u00b5\u00ce\u00af\u00ce\u00bf settings \u00ce\u00ba\u00ce\u00b1\u00ce\u00b9 \u00ce\u00b4\u00ce\u00b5\u00ce\u00bd \u00ce\u00ad\u00cf\u0087\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00cf\u0081\u00cf\u0085\u00ce\u00b8\u00ce\u00bc\u00ce\u00af\u00cf\u0083\u00ce\u00b5\u00ce\u00b9 \u00ce\u00ba\u00ce\u00b1\u00ce\u00bd\u00ce\u00ad\u00ce\u00bd\u00ce\u00b1 URL \u00cf\u0083\u00cf\u0084\u00ce\u00bf \"",
                "+\"\u00ce\u00b1\u00cf\u0081\u00cf\u0087\u00ce\u00b5\u00ce\u00af\u00ce\u00bf urls.py. \u00ce\u00a3\u00cf\u0084\u00cf\u0081\u00cf\u0089\u00ce\u00b8\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00cf\u0083\u00cf\u0084\u00ce\u00b7\u00ce\u00bd \u00ce\u00b4\u00ce\u00bf\u00cf\u0085\u00ce\u00bb\u00ce\u00b5\u00ce\u00b9\u00ce\u00ac!\"",
                "@@ -1259,3 +1280,3 @@ msgstr \"\u00ce\u0095\u00ce\u00b3\u00cf\u0087\u00ce\u00b5\u00ce\u00b9\u00cf\u0081\u00ce\u00af\u00ce\u00b4\u00ce\u00b9\u00ce\u00bf Django\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"\u00ce\u0098\u00ce\u00ad\u00ce\u00bc\u00ce\u00b1\u00cf\u0084\u00ce\u00b1, \u00ce\u00b1\u00ce\u00bd\u00ce\u00b1\u00cf\u0086\u00ce\u00bf\u00cf\u0081\u00ce\u00ad\u00cf\u0082 &amp; \\\"\u00cf\u0080\u00cf\u0089\u00cf\u0082 \u00ce\u00bd\u00ce\u00b1...\\\"\"",
                "diff --git a/django/conf/locale/eu/LC_MESSAGES/django.mo b/django/conf/locale/eu/LC_MESSAGES/django.mo",
                "index 561a45d94b..9b7d8433b3 100644",
                "Binary files a/django/conf/locale/eu/LC_MESSAGES/django.mo and b/django/conf/locale/eu/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/eu/LC_MESSAGES/django.po b/django/conf/locale/eu/LC_MESSAGES/django.po",
                "index 7372127521..ba3c41dc8a 100644",
                "--- a/django/conf/locale/eu/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/eu/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # Ander Mart\u00c3\u00adnez <ander.basaundi@gmail.com>, 2013-2014",
                "-# Eneko Illarramendi <eneko@illarra.com>, 2017",
                "+# Eneko Illarramendi <eneko@illarra.com>, 2017-2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "@@ -17,4 +17,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2018-01-26 20:48+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-23 14:04+0000\\n\"",
                " \"Last-Translator: Eneko Illarramendi <eneko@illarra.com>\\n\"",
                "@@ -393,2 +393,5 @@ msgstr[1] \"\"",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Idatzi zenbaki bat.\"",
                "+",
                " #, python-format",
                "@@ -471,2 +474,6 @@ msgstr \"'%(value)s' balioak True edo False izan behar du.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' balioak True, False edo None izan behar du.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -559,3 +566,3 @@ msgstr \"IP helbidea\"",
                " msgid \"'%(value)s' value must be either None, True or False.\"",
                "-msgstr \"'%(value)s' balioak True, False edo None izan behar du.\"",
                "+msgstr \"'%(value)s' balioak None, True, edo False izan behar du.\"",
                "@@ -651,5 +658,2 @@ msgstr \"Idatzi zenbaki oso bat.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Idatzi zenbaki bat.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -666,2 +670,6 @@ msgstr \"Idatzi baleko iraupen bat.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Egun kopuruak {min_days} eta {max_days} artean egon behar du.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "diff --git a/django/conf/locale/ne/LC_MESSAGES/django.mo b/django/conf/locale/ne/LC_MESSAGES/django.mo",
                "index fc25d6d4df..2350326460 100644",
                "Binary files a/django/conf/locale/ne/LC_MESSAGES/django.mo and b/django/conf/locale/ne/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/ne/LC_MESSAGES/django.po b/django/conf/locale/ne/LC_MESSAGES/django.po",
                "index f8cd93baaa..6654347457 100644",
                "--- a/django/conf/locale/ne/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/ne/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # Paras Nath Chaudhary <opnchaudhary@gmail.com>, 2012",
                "-# Sagar Chalise <chalisesagar@gmail.com>, 2011-2012,2015",
                "+# Sagar Chalise <chalisesagar@gmail.com>, 2011-2012,2015,2018",
                " # Sagar Chalise <chalisesagar@gmail.com>, 2015",
                "@@ -12,3 +12,3 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "-\"PO-Revision-Date: 2018-07-21 02:37+0000\\n\"",
                "+\"PO-Revision-Date: 2018-09-29 06:13+0000\\n\"",
                " \"Last-Translator: Sagar Chalise <chalisesagar@gmail.com>\\n\"",
                "@@ -465,3 +465,3 @@ msgstr \"%(value)s' \u00e0\u00a4\u0095\u00e0\u00a5\u008b \u00e0\u00a4\u00ae\u00e0\u00a4\u00be\u00e0\u00a4\u00a8 True \u00e0\u00a4\u0085\u00e0\u00a4\u00a5\u00e0\u00a4\u00b5\u00e0\u00a4\u00be False \u00e0\u00a4\u00b9\u00e0\u00a5\u0081\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00aa\u00e0\u00a4\u00b0",
                " msgid \"'%(value)s' value must be either True, False, or None.\"",
                "-msgstr \"\"",
                "+msgstr \"'%(value)s' \u00e0\u00a4\u0095\u00e0\u00a5\u008b \u00e0\u00a4\u00ae\u00e0\u00a4\u00be\u00e0\u00a4\u00a8 True, False \u00e0\u00a4\u0085\u00e0\u00a4\u00a5\u00e0\u00a4\u00b5\u00e0\u00a4\u00be None \u00e0\u00a4\u00b9\u00e0\u00a5\u0081\u00e0\u00a4\u00a8\u00e0\u00a5\u0081\u00e0\u00a4\u00aa\u00e0\u00a4\u00b0\u00e0\u00a5\u008d\u00e0\u00a4\u00a6\u00e0\u00a4\u009b \u00e0\u00a5\u00a4\"",
                "diff --git a/django/conf/locale/pl/LC_MESSAGES/django.mo b/django/conf/locale/pl/LC_MESSAGES/django.mo",
                "index 29b40b59f6..8c560ed13d 100644",
                "Binary files a/django/conf/locale/pl/LC_MESSAGES/django.mo and b/django/conf/locale/pl/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/pl/LC_MESSAGES/django.po b/django/conf/locale/pl/LC_MESSAGES/django.po",
                "index e78cca6fcc..de7e48c1dc 100644",
                "--- a/django/conf/locale/pl/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/pl/LC_MESSAGES/django.po",
                "@@ -33,3 +33,3 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "-\"PO-Revision-Date: 2018-05-18 23:43+0000\\n\"",
                "+\"PO-Revision-Date: 2018-09-17 17:25+0000\\n\"",
                " \"Last-Translator: m_aciek <maciej.olko@gmail.com>\\n\"",
                "@@ -518,3 +518,3 @@ msgstr \"warto\u00c5\u009b\u00c4\u0087 '%(value)s' musi by\u00c4\u0087 True lub False.\"",
                " msgid \"'%(value)s' value must be either True, False, or None.\"",
                "-msgstr \"Warto\u00c5\u009b\u00c4\u0087 \u00e2\u0080\u009e%(value)s\u00e2\u0080\u009d musi wynosi\u00c4\u0087 True, False lub None.\"",
                "+msgstr \"Warto\u00c5\u009b\u00c4\u0087 \u00e2\u0080\u009e%(value)s\u00e2\u0080\u009d musi by\u00c4\u0087 True, False lub None.\"",
                "diff --git a/django/conf/locale/sk/LC_MESSAGES/django.mo b/django/conf/locale/sk/LC_MESSAGES/django.mo",
                "index 2b0d75e5d1..6f5900941a 100644",
                "Binary files a/django/conf/locale/sk/LC_MESSAGES/django.mo and b/django/conf/locale/sk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/sk/LC_MESSAGES/django.po b/django/conf/locale/sk/LC_MESSAGES/django.po",
                "index 0d06758c1a..33b620ef38 100644",
                "--- a/django/conf/locale/sk/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/sk/LC_MESSAGES/django.po",
                "@@ -5,3 +5,3 @@",
                " # Juraj Bubniak <translations@jbub.eu>, 2012-2013",
                "-# Marian Andre <marian@andre.sk>, 2013,2015,2017",
                "+# Marian Andre <marian@andre.sk>, 2013,2015,2017-2018",
                " # Martin Kos\u00c3\u00adr, 2011",
                "@@ -12,5 +12,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-12-01 21:10+0100\\n\"",
                "-\"PO-Revision-Date: 2017-12-05 11:02+0000\\n\"",
                "-\"Last-Translator: Martin T\u00c3\u00b3th <ezimir@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-25 06:21+0000\\n\"",
                "+\"Last-Translator: Marian Andre <marian@andre.sk>\\n\"",
                " \"Language-Team: Slovak (http://www.transifex.com/django/django/language/sk/)\\n\"",
                "@@ -20,3 +20,4 @@ msgstr \"\"",
                " \"Language: sk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n == 1 ? 0 : n % 1 == 0 && n \"",
                "+\">= 2 && n <= 4 ? 1 : n % 1 != 0 ? 2: 3);\\n\"",
                "@@ -376,2 +377,5 @@ msgstr[2] \"\"",
                " \"%(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"Uistite sa, \u00c5\u00bee zadan\u00c3\u00a1 hodnota m\u00c3\u00a1 najmenej %(limit_value)d znakov (m\u00c3\u00a1 \"",
                "+\"%(show_value)d).\"",
                "@@ -393,2 +397,8 @@ msgstr[2] \"\"",
                " \"%(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"Uistite sa, \u00c5\u00bee t\u00c3\u00a1to hodnota m\u00c3\u00a1 najviac %(limit_value)d  znakov (m\u00c3\u00a1 \"",
                "+\"%(show_value)d).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"Zadajte \u00c4\u008d\u00c3\u00adslo.\"",
                "@@ -400,2 +410,3 @@ msgstr[1] \"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch celkovo viac ako %(max)s \u00c4\u008d\u00c3\u00adslice.\"",
                " msgstr[2] \"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch celkovo viac ako %(max)s \u00c4\u008d\u00c3\u00adslic.\"",
                "+msgstr[3] \"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch celkovo viac ako %(max)s \u00c4\u008d\u00c3\u00adslic.\"",
                "@@ -407,2 +418,3 @@ msgstr[1] \"Uistite sa, \u00c5\u00bee nie s\u00c3\u00ba zadan\u00c3\u00a9 viac ako %(max)s desatinn\u00c3\u00a9 miesta.\"",
                " msgstr[2] \"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch viac ako %(max)s desatinn\u00c3\u00bdch miest.\"",
                "+msgstr[3] \"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch viac ako %(max)s desatinn\u00c3\u00bdch miest.\"",
                "@@ -422,2 +434,5 @@ msgstr[2] \"\"",
                " \"\u00c4\u008diarkou.\"",
                "+msgstr[3] \"\"",
                "+\"Uistite sa, \u00c5\u00bee nie je zadan\u00c3\u00bdch viac ako %(max)s \u00c4\u008d\u00c3\u00adslic pred desatinnou \"",
                "+\"\u00c4\u008diarkou.\"",
                "@@ -481,2 +496,6 @@ msgstr \"'%(value)s' value mus\u00c3\u00ad by\u00c5\u00a5 True alebo False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"'%(value)s' mus\u00c3\u00ad by\u00c5\u00a5 True, False alebo None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -651,5 +670,2 @@ msgstr \"Zadajte cel\u00c3\u00a9 \u00c4\u008d\u00c3\u00adslo.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"Zadajte \u00c4\u008d\u00c3\u00adslo.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -666,2 +682,6 @@ msgstr \"Zadajte platn\u00c3\u00ba dobu trvania.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"Po\u00c4\u008det dn\u00c3\u00ad mus\u00c3\u00ad by\u00c5\u00a5 medzi {min_days} a {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -685,2 +705,4 @@ msgstr[2] \"\"",
                " \"Uistite sa, \u00c5\u00bee n\u00c3\u00a1zov s\u00c3\u00baboru m\u00c3\u00a1 najviac %(max)d znakov (m\u00c3\u00a1 %(length)d).\"",
                "+msgstr[3] \"\"",
                "+\"Uistite sa, \u00c5\u00bee n\u00c3\u00a1zov s\u00c3\u00baboru m\u00c3\u00a1 najviac %(max)d znakov (m\u00c3\u00a1 %(length)d).\"",
                "@@ -728,2 +750,3 @@ msgstr[1] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo menej formul\u00c3\u00a1rov.\"",
                " msgstr[2] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo menej formul\u00c3\u00a1rov.\"",
                "+msgstr[3] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo menej formul\u00c3\u00a1rov.\"",
                "@@ -735,2 +758,3 @@ msgstr[1] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo viac formul\u00c3\u00a1rov.\"",
                " msgstr[2] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo viac formul\u00c3\u00a1rov.\"",
                "+msgstr[3] \"Pros\u00c3\u00adm odo\u00c5\u00a1lite %d alebo viac formul\u00c3\u00a1rov.\"",
                "@@ -807,2 +831,3 @@ msgstr[1] \"%(size)d bajty\"",
                " msgstr[2] \"%(size)d bajtov\"",
                "+msgstr[3] \"%(size)d bajtov\"",
                "@@ -1077,2 +1102,3 @@ msgstr[1] \"%d roky\"",
                " msgstr[2] \"%d rokov\"",
                "+msgstr[3] \"%d rokov\"",
                "@@ -1084,2 +1110,3 @@ msgstr[1] \"%d mesiace\"",
                " msgstr[2] \"%d mesiacov\"",
                "+msgstr[3] \"%d mesiacov\"",
                "@@ -1091,2 +1118,3 @@ msgstr[1] \"%d t\u00c3\u00bd\u00c5\u00bedne\"",
                " msgstr[2] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ov\"",
                "+msgstr[3] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ov\"",
                "@@ -1098,2 +1126,3 @@ msgstr[1] \"%d dni\"",
                " msgstr[2] \"%d dn\u00c3\u00ad\"",
                "+msgstr[3] \"%d dn\u00c3\u00ad\"",
                "@@ -1105,2 +1134,3 @@ msgstr[1] \"%d hodiny\"",
                " msgstr[2] \"%d hod\u00c3\u00adn\"",
                "+msgstr[3] \"%d hod\u00c3\u00adn\"",
                "@@ -1112,2 +1142,3 @@ msgstr[1] \"%d min\u00c3\u00baty\"",
                " msgstr[2] \"%d min\u00c3\u00bat\"",
                "+msgstr[3] \"%d min\u00c3\u00bat\"",
                "diff --git a/django/conf/locale/uk/LC_MESSAGES/django.mo b/django/conf/locale/uk/LC_MESSAGES/django.mo",
                "index 24023123c6..3b04145c42 100644",
                "Binary files a/django/conf/locale/uk/LC_MESSAGES/django.mo and b/django/conf/locale/uk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/uk/LC_MESSAGES/django.po b/django/conf/locale/uk/LC_MESSAGES/django.po",
                "index 463fe1392b..9ebc17a25d 100644",
                "--- a/django/conf/locale/uk/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/uk/LC_MESSAGES/django.po",
                "@@ -15,2 +15,3 @@",
                " # Sergiy Kuzmenko <s.kuzmenko@gmail.com>, 2011",
                "+# Taras Korzhak <taras.korzhak96@gmail.com>, 2018",
                " # Zoriana Zaiats, 2016-2017",
                "@@ -20,5 +21,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-11-15 16:15+0100\\n\"",
                "-\"PO-Revision-Date: 2017-11-16 01:13+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-24 19:51+0000\\n\"",
                "+\"Last-Translator: Taras Korzhak <taras.korzhak96@gmail.com>\\n\"",
                " \"Language-Team: Ukrainian (http://www.transifex.com/django/django/language/\"",
                "@@ -29,4 +30,6 @@ msgstr \"\"",
                " \"Language: uk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n\"",
                "-\"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != \"",
                "+\"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % \"",
                "+\"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || \"",
                "+\"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\\n\"",
                "@@ -173,2 +176,5 @@ msgstr \"\u00d0\u0093\u00d1\u0080\u00d1\u0083\u00d0\u00b7\u00d0\u00b8\u00d0\u00bd\u00d1\u0081\u00d1\u008c\u00d0\u00ba\u00d0\u00b0\"",
                "+msgid \"Kabyle\"",
                "+msgstr \"\u00d0\u009a\u00d0\u00b0\u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d0\u00b8\"",
                "+",
                " msgid \"Kazakh\"",
                "@@ -385,2 +391,5 @@ msgstr[2] \"\"",
                " \"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0086\u00d0\u00b5 \u00d0\u00b7\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d1\u0082\u00d1\u008c \u00d0\u00bd\u00d0\u00b5 \u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0088 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(limit_value)d \u00d1\u0081\u00d0\u00b8\u00d0\u00bc\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2 \"",
                "+\"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(show_value)d).\"",
                "@@ -402,2 +411,8 @@ msgstr[2] \"\"",
                " \"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(show_value)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0086\u00d0\u00b5 \u00d0\u00b7\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d1\u0082\u00d1\u008c \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(limit_value)d \u00d1\u0081\u00d0\u00b8\u00d0\u00bc\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2 \"",
                "+\"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(show_value)d).\"",
                "+",
                "+msgid \"Enter a number.\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "@@ -409,2 +424,3 @@ msgstr[1] \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d0\u00b7\u00d0\u00b0\u00d0\u00b3\u00d0\u00b0\u00d0\u00bb\u00d0\u00be\u00d0\u00bc \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c",
                " msgstr[2] \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d0\u00b7\u00d0\u00b0\u00d0\u00b3\u00d0\u00b0\u00d0\u00bb\u00d0\u00be\u00d0\u00bc \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080.\"",
                "+msgstr[3] \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d0\u00b7\u00d0\u00b0\u00d0\u00b3\u00d0\u00b0\u00d0\u00bb\u00d0\u00be\u00d0\u00bc \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080.\"",
                "@@ -419,2 +435,4 @@ msgstr[2] \"\"",
                " \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080 \u00d0\u00bf\u00d1\u0096\u00d1\u0081\u00d0\u00bb\u00d1\u008f \u00d0\u00b4\u00d0\u00b5\u00d1\u0081\u00d1\u008f\u00d1\u0082\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00ba\u00d0\u00be\u00d0\u00bc\u00d0\u00b8.\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080 \u00d0\u00bf\u00d1\u0096\u00d1\u0081\u00d0\u00bb\u00d1\u008f \u00d0\u00b4\u00d0\u00b5\u00d1\u0081\u00d1\u008f\u00d1\u0082\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00ba\u00d0\u00be\u00d0\u00bc\u00d0\u00b8.\"",
                "@@ -431,2 +449,4 @@ msgstr[2] \"\"",
                " \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080 \u00d0\u00b4\u00d0\u00be \u00d0\u00b4\u00d0\u00b5\u00d1\u0081\u00d1\u008f\u00d1\u0082\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00ba\u00d0\u00be\u00d0\u00bc\u00d0\u00b8.\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0082\u00d1\u0083\u00d1\u0082 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 %(max)s \u00d1\u0086\u00d0\u00b8\u00d1\u0084\u00d0\u00b5\u00d1\u0080 \u00d0\u00b4\u00d0\u00be \u00d0\u00b4\u00d0\u00b5\u00d1\u0081\u00d1\u008f\u00d1\u0082\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00ba\u00d0\u00be\u00d0\u00bc\u00d0\u00b8.\"",
                "@@ -441,3 +461,3 @@ msgstr \"\"",
                " msgid \"Null characters are not allowed.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u00a1\u00d0\u00b8\u00d0\u00bc\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d0\u00b8 Null \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b4\u00d0\u00be\u00d0\u00b7\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d0\u00b5\u00d0\u00bd\u00d1\u0096.\"",
                "@@ -491,2 +511,6 @@ msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f '%(value)s' \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00b8\u00d0\u00bd\u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 True \u00d0\u00b0\u00d0\u00b1\u00d0\u00be False.\"",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be either True, False, or None.\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f '%(value)s' \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00b8\u00d0\u00bd\u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 True, False, \u00d0\u00b0\u00d0\u00b1\u00d0\u00be None.\"",
                "+",
                " msgid \"Boolean (Either True or False)\"",
                "@@ -664,5 +688,2 @@ msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d1\u0086\u00d1\u0096\u00d0\u00bb\u00d0\u00b5 \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "-msgid \"Enter a number.\"",
                "-msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d1\u0087\u00d0\u00b8\u00d1\u0081\u00d0\u00bb\u00d0\u00be.\"",
                "-",
                " msgid \"Enter a valid date.\"",
                "@@ -679,2 +700,6 @@ msgstr \"\u00d0\u0092\u00d0\u00b2\u00d0\u00b5\u00d0\u00b4\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d0\u00ba\u00d0\u00be\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d1\u0082\u00d0\u00bd\u00d1\u0083 \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00b2\u00d0\u00b0\u00d0\u00bb\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008c.\"",
                "+#, python-brace-format",
                "+msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "+msgstr \"\u00d0\u009a\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00ba\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008c \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2 \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00b8\u00d0\u00bd\u00d0\u00bd\u00d0\u00b0 \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 {min_days} \u00d0\u00b4\u00d0\u00be {max_days}.\"",
                "+",
                " msgid \"No file was submitted. Check the encoding type on the form.\"",
                "@@ -701,2 +726,5 @@ msgstr[2] \"\"",
                " \"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(length)d).\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0086\u00d0\u00b5 \u00d1\u0096\u00d0\u00bc'\u00d1\u008f \u00d1\u0084\u00d0\u00b0\u00d0\u00b9\u00d0\u00bb\u00d1\u0083 \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d1\u0082\u00d1\u008c \u00d0\u00bd\u00d0\u00b5 \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d0\u00bd\u00d1\u0096\u00d0\u00b6 \u00d0\u00b7 %(max)d \u00d1\u0081\u00d0\u00b8\u00d0\u00bc\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2 \"",
                "+\"(\u00d0\u00b7\u00d0\u00b0\u00d1\u0080\u00d0\u00b0\u00d0\u00b7 %(length)d).\"",
                "@@ -744,2 +772,3 @@ msgstr[1] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 %d \u00d0\u00b0\u00d0\u00b1\u00d0\u00be \u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0088\u00d0\u00b5 \u00d1\u0084\u00d0\u00be\u00d1\u0080\u00d0\u00bc",
                " msgstr[2] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 %d \u00d0\u00b0\u00d0\u00b1\u00d0\u00be \u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0088\u00d0\u00b5 \u00d1\u0084\u00d0\u00be\u00d1\u0080\u00d0\u00bc.\"",
                "+msgstr[3] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 %d \u00d0\u00b0\u00d0\u00b1\u00d0\u00be \u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0088\u00d0\u00b5 \u00d1\u0084\u00d0\u00be\u00d1\u0080\u00d0\u00bc.\"",
                "@@ -751,2 +780,3 @@ msgstr[1] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 \u00d1\u008f\u00d0\u00ba \u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d1\u0096\u00d0\u00bc\u00d1\u0083\u00d0\u00bc %d \u00d1\u0084\u00d0\u00be\u00d1\u0080",
                " msgstr[2] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 \u00d1\u008f\u00d0\u00ba \u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d1\u0096\u00d0\u00bc\u00d1\u0083\u00d0\u00bc %d \u00d1\u0084\u00d0\u00be\u00d1\u0080\u00d0\u00bc.\"",
                "+msgstr[3] \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 \u00d1\u008f\u00d0\u00ba \u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d1\u0096\u00d0\u00bc\u00d1\u0083\u00d0\u00bc %d \u00d1\u0084\u00d0\u00be\u00d1\u0080\u00d0\u00bc.\"",
                "@@ -824,2 +854,3 @@ msgstr[1] \"%(size)d \u00d0\u00b1\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b8\"",
                " msgstr[2] \"%(size)d \u00d0\u00b1\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(size)d \u00d0\u00b1\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d1\u0096\u00d0\u00b2\"",
                "@@ -1094,2 +1125,3 @@ msgstr[1] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d0\u00b8\"",
                " msgstr[2] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "@@ -1101,2 +1133,3 @@ msgstr[1] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\"",
                " msgstr[2] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "@@ -1108,2 +1141,3 @@ msgstr[1] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\"",
                " msgstr[2] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -1115,2 +1149,3 @@ msgstr[1] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u008f\"",
                " msgstr[2] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -1122,2 +1157,3 @@ msgstr[1] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "@@ -1129,2 +1165,3 @@ msgstr[1] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "@@ -1167,2 +1204,8 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00d0\u00af\u00d0\u00ba\u00d1\u0089\u00d0\u00be \u00d0\u00b2\u00d0\u00b8 \u00d0\u00b2\u00d0\u00b8\u00d0\u00ba\u00d0\u00be\u00d1\u0080\u00d0\u00b8\u00d1\u0081\u00d1\u0082\u00d0\u00be\u00d0\u00b2\u00d1\u0083\u00d1\u0094\u00d1\u0082\u00d0\u00b5 \u00d1\u0082\u00d0\u00b5\u00d0\u00b3 <meta name=\\\"referrer\\\" content=\\\"no-referrer\\\"> \"",
                "+\"\u00d0\u00b0\u00d0\u00b1\u00d0\u00be \u00d0\u00b2\u00d0\u00ba\u00d0\u00bb\u00d1\u008e\u00d1\u0087\u00d0\u00b0\u00d1\u0094\u00d1\u0082\u00d0\u00b5 \u00d0\u00b2 \u00d0\u00b7\u00d0\u00b0\u00d0\u00bf\u00d0\u00b8\u00d1\u0082 \u00d0\u00b7\u00d0\u00b0\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d0\u00ba 'Referrer-Policy: no-referrer', \u00d1\u0082\u00d0\u00be\u00d0\u00b4\u00d1\u0096, \u00d0\u00b1\u00d1\u0083\u00d0\u00b4\u00d1\u008c \"",
                "+\"\u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d0\u00b8\u00d0\u00b4\u00d0\u00b0\u00d0\u00bb\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d1\u0097\u00d1\u0085. CSRF-\u00d0\u00b7\u00d0\u00b0\u00d1\u0085\u00d0\u00b8\u00d1\u0081\u00d1\u0082 \u00d0\u00bf\u00d0\u00be\u00d1\u0082\u00d1\u0080\u00d0\u00b5\u00d0\u00b1\u00d1\u0083\u00d1\u0094 \u00d0\u00b7\u00d0\u00b0\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d0\u00ba 'Referer', \u00d1\u0089\u00d0\u00be\u00d0\u00b1 \u00d0\u00b2\u00d0\u00b8\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \"",
                "+\"\u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b2\u00d1\u0096\u00d1\u0080\u00d0\u00ba\u00d1\u0083. \u00d0\u00af\u00d0\u00ba\u00d1\u0089\u00d0\u00be \u00d0\u00b2\u00d0\u00b8 \u00d0\u00b7\u00d0\u00b0\u00d0\u00bd\u00d0\u00b5\u00d0\u00bf\u00d0\u00be\u00d0\u00ba\u00d0\u00be\u00d1\u0094\u00d0\u00bd\u00d1\u0096 \u00d1\u0081\u00d1\u0082\u00d0\u00be\u00d1\u0081\u00d0\u00be\u00d0\u00b2\u00d0\u00bd\u00d0\u00be \u00d0\u00bf\u00d1\u0080\u00d0\u00b8\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00bd\u00d0\u00be\u00d1\u0081\u00d1\u0082\u00d1\u0096, \u00d0\u00b2\u00d0\u00b8\u00d0\u00ba\u00d0\u00be\u00d1\u0080\u00d0\u00b8\u00d1\u0081\u00d1\u0082\u00d0\u00be\u00d0\u00b2\u00d1\u0083\u00d0\u00b9\u00d1\u0082\u00d0\u00b5 \"",
                "+\"\u00d0\u00b0\u00d0\u00bb\u00d1\u008c\u00d1\u0082\u00d0\u00b5\u00d1\u0080\u00d0\u00bd\u00d0\u00b0\u00d1\u0082\u00d0\u00b8\u00d0\u00b2\u00d0\u00b8, \u00d0\u00bd\u00d0\u00b0\u00d0\u00bf\u00d1\u0080\u00d0\u00b8\u00d0\u00ba\u00d0\u00bb\u00d0\u00b0\u00d0\u00b4, \u00d0\u00b4\u00d0\u00bb\u00d1\u008f \u00d0\u00bf\u00d0\u00be\u00d1\u0081\u00d0\u00b8\u00d0\u00bb\u00d0\u00b0\u00d0\u00bd\u00d1\u008c \u00d0\u00bd\u00d0\u00b0 \u00d1\u0081\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b8 \u00d1\u0082\u00d1\u0080\u00d0\u00b5\u00d1\u0082\u00d1\u0096\u00d1\u0085 \u00d1\u0081\u00d1\u0082\u00d0\u00be\u00d1\u0080\u00d1\u0096\u00d0\u00bd \u00d0\u00b2\u00d0\u00b8\u00d0\u00ba\u00d0\u00be\u00d1\u0080\u00d0\u00b8\u00d1\u0081\u00d1\u0082\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5 \"",
                "+\"\u00d1\u0082\u00d0\u00b5\u00d0\u00b3 <a rel=\\\"noreferrer\\\" ...>.\"",
                "@@ -1246,3 +1289,3 @@ msgstr \"\u00d0\u0092\u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082 \u00d0\u00b4\u00d0\u00b8\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d1\u0082\u00d0\u00be\u00d1\u0080\u00d1\u0096\u00d1\u0097 %(directory)s\"",
                " msgid \"Django: the Web framework for perfectionists with deadlines.\"",
                "-msgstr \"\"",
                "+msgstr \"Django: \u00d0\u00b2\u00d0\u00b5\u00d0\u00b1-\u00d1\u0084\u00d1\u0080\u00d0\u00b5\u00d0\u00b9\u00d0\u00bc\u00d0\u00b2\u00d0\u00be\u00d1\u0080\u00d0\u00ba \u00d0\u00b4\u00d0\u00bb\u00d1\u008f \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d1\u0084\u00d0\u00b5\u00d0\u00ba\u00d1\u0086\u00d1\u0096\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u0096\u00d0\u00b2 \u00d0\u00b7 \u00d1\u0080\u00d0\u00b5\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d1\u0086\u00d1\u008f\u00d0\u00bc\u00d0\u00b8.\"",
                "@@ -1266,2 +1309,6 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00d0\u0092\u00d0\u00b8 \u00d0\u00b1\u00d0\u00b0\u00d1\u0087\u00d0\u00b8\u00d1\u0082\u00d0\u00b5 \u00d1\u0086\u00d1\u008e \u00d1\u0081\u00d1\u0082\u00d0\u00be\u00d1\u0080\u00d1\u0096\u00d0\u00bd\u00d0\u00ba\u00d1\u0083 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083 \u00d1\u0089\u00d0\u00be \u00d0\u00b7\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00bd\u00d0\u00b0 <a href=\\\"https://docs.djangoproject.\"",
                "+\"com/en/%(version)s/ref/settings/#debug\\\" target=\\\"_blank\\\" rel=\\\"noopener\"",
                "+\"\\\">DEBUG</a> \u00d0\u00b2\u00d1\u0081\u00d1\u0082\u00d0\u00b0\u00d0\u00bd\u00d0\u00be\u00d0\u00b2\u00d0\u00bb\u00d0\u00b5\u00d0\u00bd\u00d0\u00b0 \u00d0\u00bd\u00d0\u00b0 <i>True</i> \u00d1\u0083 \u00d0\u00b2\u00d0\u00b0\u00d1\u0088\u00d0\u00be\u00d0\u00bc\u00d1\u0083 \u00d1\u0084\u00d0\u00b0\u00d0\u00b9\u00d0\u00bb\u00d1\u0096 \u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d1\u0084\u00d1\u0096\u00d0\u00b3\u00d1\u0083\u00d1\u0080\u00d0\u00b0\u00d1\u0086\u00d1\u0096\u00d1\u0097 \u00d1\u0096 \u00d0\u00b2\u00d0\u00b8 \u00d0\u00bd\u00d0\u00b5 \"",
                "+\"\u00d0\u00bd\u00d0\u00b0\u00d0\u00bb\u00d0\u00b0\u00d1\u0088\u00d1\u0082\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d0\u00bb\u00d0\u00b8 \u00d0\u00b6\u00d0\u00be\u00d0\u00b4\u00d0\u00bd\u00d0\u00be\u00d0\u00b3\u00d0\u00be URL.\"",
                "@@ -1271,14 +1318,14 @@ msgstr \"\u00d0\u0094\u00d0\u00be\u00d0\u00ba\u00d1\u0083\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0082\u00d0\u00b0\u00d1\u0086\u00d1\u0096\u00d1\u008f Django\"",
                " msgid \"Topics, references, &amp; how-to's\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u00a1\u00d1\u0082\u00d0\u00b0\u00d1\u0082\u00d1\u0082\u00d1\u0096, \u00d0\u00b4\u00d0\u00be\u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d0\u00ba\u00d0\u00b8 \u00d1\u0082\u00d0\u00b0 \u00d1\u0096\u00d0\u00bd\u00d1\u0081\u00d1\u0082\u00d1\u0080\u00d1\u0083\u00d0\u00ba\u00d1\u0086\u00d1\u0096\u00d1\u0097\"",
                " msgid \"Tutorial: A Polling App\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u009f\u00d0\u00be\u00d1\u0081\u00d1\u0096\u00d0\u00b1\u00d0\u00bd\u00d0\u00b8\u00d0\u00ba: \u00d0\u00bf\u00d1\u0080\u00d0\u00be\u00d0\u00b3\u00d1\u0080\u00d0\u00b0\u00d0\u00bc\u00d0\u00b0 \u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d0\u00be\u00d1\u0081\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u008f\"",
                " msgid \"Get started with Django\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u009f\u00d0\u00be\u00d1\u0087\u00d0\u00b0\u00d1\u0082\u00d0\u00be\u00d0\u00ba \u00d1\u0080\u00d0\u00be\u00d0\u00b1\u00d0\u00be\u00d1\u0082\u00d0\u00b8 \u00d0\u00b7 Django\"",
                " msgid \"Django Community\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u00a1\u00d0\u00bf\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00bd\u00d0\u00be\u00d1\u0082\u00d0\u00b0 Django\"",
                " msgid \"Connect, get help, or contribute\"",
                "-msgstr \"\"",
                "+msgstr \"\u00d0\u009e\u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bc\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \u00d0\u00b4\u00d0\u00be\u00d0\u00bf\u00d0\u00be\u00d0\u00bc\u00d0\u00be\u00d0\u00b3\u00d1\u0083, \u00d1\u0087\u00d0\u00b8 \u00d0\u00b4\u00d0\u00be\u00d0\u00bf\u00d0\u00be\u00d0\u00bc\u00d0\u00be\u00d0\u00b3\u00d1\u0082\u00d0\u00b8\"",
                "diff --git a/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo b/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo",
                "index 66141980d2..911d910c78 100644",
                "Binary files a/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo and b/django/conf/locale/zh_Hans/LC_MESSAGES/django.mo differ",
                "diff --git a/django/conf/locale/zh_Hans/LC_MESSAGES/django.po b/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "index f239ee548c..7b5e5bf14d 100644",
                "--- a/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "+++ b/django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "@@ -17,2 +17,3 @@",
                " # Liping Wang <lynn.config@gmail.com>, 2016",
                "+# Wentao Han <wentao.han@gmail.com>, 2018",
                " # Xiang Yu <bupt.aswmtjdsj@gmail.com>, 2014",
                "@@ -28,4 +29,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "-\"PO-Revision-Date: 2018-06-25 13:50+0000\\n\"",
                "-\"Last-Translator: Le Yang <youngleocn@qq.com>\\n\"",
                "+\"PO-Revision-Date: 2018-09-28 07:47+0000\\n\"",
                "+\"Last-Translator: Wentao Han <wentao.han@gmail.com>\\n\"",
                " \"Language-Team: Chinese (China) (http://www.transifex.com/django/django/\"",
                "@@ -655,3 +656,3 @@ msgstr \"\u00e8\u00af\u00b7\u00e8\u00be\u0093\u00e5\u0085\u00a5\u00e6\u009c\u0089\u00e6\u0095\u0088\u00e7\u009a\u0084\u00e6\u0097\u00b6\u00e9\u0095\u00bf\u00e3\u0080\u0082\"",
                " msgid \"The number of days must be between {min_days} and {max_days}.\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e5\u00a4\u00a9\u00e6\u0095\u00b0\u00e5\u00ba\u0094\u00e8\u00af\u00a5\u00e5\u009c\u00a8 {min_days} \u00e5\u0092\u008c {max_days} \u00e4\u00b9\u008b\u00e9\u0097\u00b4\u00e3\u0080\u0082\"",
                "diff --git a/django/contrib/admin/locale/az/LC_MESSAGES/django.mo b/django/contrib/admin/locale/az/LC_MESSAGES/django.mo",
                "index 09a189a595..13228817de 100644",
                "Binary files a/django/contrib/admin/locale/az/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/az/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/az/LC_MESSAGES/django.po b/django/contrib/admin/locale/az/LC_MESSAGES/django.po",
                "index 8465448445..1bedd48525 100644",
                "--- a/django/contrib/admin/locale/az/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/az/LC_MESSAGES/django.po",
                "@@ -3,2 +3,3 @@",
                " # Translators:",
                "+# Emin Mastizada <emin@linux.com>, 2018",
                " # Emin Mastizada <emin@linux.com>, 2016",
                "@@ -10,5 +11,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-19 16:41+0000\\n\"",
                "-\"Last-Translator: Zulfugar Ismayilzadeh <zulfuqar.ismayilzada@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "+\"PO-Revision-Date: 2018-09-09 12:44+0000\\n\"",
                "+\"Last-Translator: Emin Mastizada <emin@linux.com>\\n\"",
                " \"Language-Team: Azerbaijani (http://www.transifex.com/django/django/language/\"",
                "@@ -90,2 +91,11 @@ msgstr \"Y\u00c4\u00b1\u00c4\u009f\u00c4\u00b1\u00c5\u009fd\u00c4\u00b1r\"",
                "+msgid \"Addition\"",
                "+msgstr \"\u00c6\u008flav\u00c9\u0099\"",
                "+",
                "+msgid \"Change\"",
                "+msgstr \"D\u00c9\u0099yi\u00c5\u009f\"",
                "+",
                "+msgid \"Deletion\"",
                "+msgstr \"Silm\u00c9\u0099\"",
                "+",
                " msgid \"action time\"",
                "@@ -169,7 +179,7 @@ msgstr \"\"",
                " #, python-brace-format",
                "-msgid \"\"",
                "-\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "-msgstr \"\"",
                "-\"{name} \\\"{obj}\\\" u\u00c4\u009furla \u00c9\u0099lav\u00c9\u0099 edildi. Bunu t\u00c9\u0099krar a\u00c5\u009fa\u00c4\u009f\u00c4\u00b1dan d\u00c9\u0099yi\u00c5\u009fdir\u00c9\u0099 \"",
                "-\"bil\u00c9\u0099rsiz.\"",
                "+msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "+msgstr \"{name} \\\"{obj}\\\" u\u00c4\u009furla \u00c9\u0099lav\u00c9\u0099 edildi.\"",
                "+",
                "+msgid \"You may edit it again below.\"",
                "+msgstr \"Bunu a\u00c5\u009fa\u00c4\u009f\u00c4\u00b1da t\u00c9\u0099krar redakt\u00c9\u0099 ed\u00c9\u0099 bil\u00c9\u0099rsiz.\"",
                "@@ -183,6 +193,2 @@ msgstr \"\"",
                "-#, python-brace-format",
                "-msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "-msgstr \"{name} \\\"{obj}\\\" u\u00c4\u009furla \u00c9\u0099lav\u00c9\u0099 edildi.\"",
                "-",
                " #, python-brace-format",
                "@@ -193,2 +199,9 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"\"",
                "+\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgstr \"\"",
                "+\"{name} \\\"{obj}\\\" u\u00c4\u009furla \u00c9\u0099lav\u00c9\u0099 edildi. Bunu t\u00c9\u0099krar a\u00c5\u009fa\u00c4\u009f\u00c4\u00b1dan d\u00c9\u0099yi\u00c5\u009fdir\u00c9\u0099 \"",
                "+\"bil\u00c9\u0099rsiz.\"",
                "+",
                " #, python-brace-format",
                "@@ -231,2 +244,6 @@ msgstr \"%s d\u00c9\u0099yi\u00c5\u009f\"",
                "+#, python-format",
                "+msgid \"View %s\"",
                "+msgstr \"%s g\u00c3\u00b6r\"",
                "+",
                " msgid \"Database error\"",
                "@@ -339,5 +356,3 @@ msgstr \"Parolu d\u00c9\u0099yi\u00c5\u009f\"",
                " msgid \"Please correct the error below.\"",
                "-msgstr \"\"",
                "-\"one: A\u00c5\u009fa\u00c4\u009f\u00c4\u00b1dak\u00c4\u00b1 s\u00c9\u0099hvi d\u00c3\u00bcz\u00c9\u0099ltm\u00c9\u0099yi xahi\u00c5\u009f edirik.\\n\"",
                "-\"other: A\u00c5\u009fa\u00c4\u009f\u00c4\u00b1dak\u00c4\u00b1 s\u00c9\u0099hvl\u00c9\u0099ri d\u00c3\u00bcz\u00c9\u0099ltm\u00c9\u0099yi xahi\u00c5\u009f edirik.\"",
                "+msgstr \"L\u00c3\u00bctf\u00c9\u0099n a\u00c5\u009fa\u00c4\u009f\u00c4\u00b1dak\u00c4\u00b1 x\u00c9\u0099tan\u00c4\u00b1 d\u00c3\u00bcz\u00c9\u0099ldin.\"",
                "@@ -452,4 +467,4 @@ msgstr \"\"",
                "-msgid \"Change\"",
                "-msgstr \"D\u00c9\u0099yi\u00c5\u009f\"",
                "+msgid \"View\"",
                "+msgstr \"G\u00c3\u00b6r\"",
                "@@ -472,4 +487,4 @@ msgstr \"\u00c6\u008flav\u00c9\u0099 et\"",
                "-msgid \"You don't have permission to edit anything.\"",
                "-msgstr \"\u00c3\u009czrl\u00c9\u0099r, amma sizin n\u00c9\u0099yis\u00c9\u0099 d\u00c9\u0099yi\u00c5\u009fm\u00c9\u0099y\u00c9\u0099 s\u00c9\u0099lahiyy\u00c9\u0099tiniz \u00c3\u00a7atm\u00c4\u00b1r.\"",
                "+msgid \"You don't have permission to view or edit anything.\"",
                "+msgstr \"He\u00c3\u00a7 n\u00c9\u0099yi g\u00c3\u00b6rm\u00c9\u0099 v\u00c9\u0099 ya redakt\u00c9\u0099 etm\u00c9\u0099 icaz\u00c9\u0099niz yoxdur.\"",
                "@@ -535,2 +550,6 @@ msgstr \"Se\u00c3\u00a7ilmi\u00c5\u009f %(model)s d\u00c9\u0099yi\u00c5\u009fdir\"",
                "+#, python-format",
                "+msgid \"View selected %(model)s\"",
                "+msgstr \"Se\u00c3\u00a7il\u00c9\u0099n %(model)s g\u00c3\u00b6r\"",
                "+",
                " #, python-format",
                "@@ -565,2 +584,8 @@ msgstr \"Yadda saxla v\u00c9\u0099 redakt\u00c9\u0099y\u00c9\u0099 davam et\"",
                "+msgid \"Save and view\"",
                "+msgstr \"Saxla v\u00c9\u0099 g\u00c3\u00b6r\"",
                "+",
                "+msgid \"Close\"",
                "+msgstr \"Qapat\"",
                "+",
                " msgid \"Thanks for spending some quality time with the Web site today.\"",
                "@@ -673,2 +698,6 @@ msgstr \"%s d\u00c9\u0099yi\u00c5\u009fm\u00c9\u0099k \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn se\u00c3\u00a7\"",
                "+#, python-format",
                "+msgid \"Select %s to view\"",
                "+msgstr \"G\u00c3\u00b6rm\u00c9\u0099k \u00c3\u00bc\u00c3\u00a7\u00c3\u00bcn %s se\u00c3\u00a7in\"",
                "+",
                " msgid \"Date:\"",
                "diff --git a/django/contrib/admin/locale/ca/LC_MESSAGES/django.mo b/django/contrib/admin/locale/ca/LC_MESSAGES/django.mo",
                "index 94bc3d9b01..27051b485e 100644",
                "Binary files a/django/contrib/admin/locale/ca/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/ca/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/ca/LC_MESSAGES/django.po b/django/contrib/admin/locale/ca/LC_MESSAGES/django.po",
                "index 3905dcb9bb..56bf426199 100644",
                "--- a/django/contrib/admin/locale/ca/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/ca/LC_MESSAGES/django.po",
                "@@ -6,2 +6,3 @@",
                " # duub qnnp, 2015",
                "+# GerardoGa <ggarciamaristany@gmail.com>, 2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "@@ -12,5 +13,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-19 16:40+0000\\n\"",
                "-\"Last-Translator: Antoni Aloy <aaloy@apsl.net>\\n\"",
                "+\"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 07:45+0000\\n\"",
                "+\"Last-Translator: GerardoGa <ggarciamaristany@gmail.com>\\n\"",
                " \"Language-Team: Catalan (http://www.transifex.com/django/django/language/\"",
                "@@ -92,2 +93,11 @@ msgstr \"Eliminar\"",
                "+msgid \"Addition\"",
                "+msgstr \"\"",
                "+",
                "+msgid \"Change\"",
                "+msgstr \"Modificar\"",
                "+",
                "+msgid \"Deletion\"",
                "+msgstr \"\"",
                "+",
                " msgid \"action time\"",
                "@@ -169,7 +179,7 @@ msgstr \"Premi \\\"Control\\\" o \\\"Command\\\" a un Mac per seleccionar-ne m\u00c3\u00a9s d'un.\"",
                " #, python-brace-format",
                "-msgid \"\"",
                "-\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "+msgstr \"El {name} \\\"{obj}\\\" fou afegit amb \u00c3\u00a8xit.\"",
                "+",
                "+msgid \"You may edit it again below.\"",
                " msgstr \"\"",
                "-\"El  {name} \\\"{obj}\\\" s'ha afegit amb \u00c3\u00a8xit. Pots editar-lo altra vegada a \"",
                "-\"sota.\"",
                "@@ -183,6 +193,2 @@ msgstr \"\"",
                "-#, python-brace-format",
                "-msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "-msgstr \"El {name} \\\"{obj}\\\" fou afegit amb \u00c3\u00a8xit.\"",
                "-",
                " #, python-brace-format",
                "@@ -194,2 +200,9 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"\"",
                "+\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgstr \"\"",
                "+\"El  {name} \\\"{obj}\\\" s'ha afegit amb \u00c3\u00a8xit. Pots editar-lo altra vegada a \"",
                "+\"sota.\"",
                "+",
                " #, python-brace-format",
                "@@ -232,2 +245,6 @@ msgstr \"Modificar %s\"",
                "+#, python-format",
                "+msgid \"View %s\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Database error\"",
                "@@ -341,3 +358,3 @@ msgstr \"Canviar contrasenya\"",
                " msgid \"Please correct the error below.\"",
                "-msgstr \"Si us plau, corregiu els errors mostrats a sota.\"",
                "+msgstr \"Si us plau, corregeix l'error de sota\"",
                "@@ -452,4 +469,4 @@ msgstr \"\"",
                "-msgid \"Change\"",
                "-msgstr \"Modificar\"",
                "+msgid \"View\"",
                "+msgstr \"\"",
                "@@ -472,4 +489,4 @@ msgstr \"Afegir\"",
                "-msgid \"You don't have permission to edit anything.\"",
                "-msgstr \"No teniu perm\u00c3\u00ads per editar res.\"",
                "+msgid \"You don't have permission to view or edit anything.\"",
                "+msgstr \"\"",
                "@@ -536,2 +553,6 @@ msgstr \"Canviea el %(model)s seleccionat\"",
                "+#, python-format",
                "+msgid \"View selected %(model)s\"",
                "+msgstr \"\"",
                "+",
                " #, python-format",
                "@@ -566,2 +587,8 @@ msgstr \"Desar i continuar editant\"",
                "+msgid \"Save and view\"",
                "+msgstr \"\"",
                "+",
                "+msgid \"Close\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Thanks for spending some quality time with the Web site today.\"",
                "@@ -678,2 +705,6 @@ msgstr \"Seleccioneu %s per modificar\"",
                "+#, python-format",
                "+msgid \"Select %s to view\"",
                "+msgstr \"\"",
                "+",
                " msgid \"Date:\"",
                "diff --git a/django/contrib/admin/locale/el/LC_MESSAGES/django.mo b/django/contrib/admin/locale/el/LC_MESSAGES/django.mo",
                "index e2cf264e6d..d6045141b9 100644",
                "Binary files a/django/contrib/admin/locale/el/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/el/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/el/LC_MESSAGES/django.po b/django/contrib/admin/locale/el/LC_MESSAGES/django.po",
                "index 9238316f36..fbe5efb580 100644",
                "--- a/django/contrib/admin/locale/el/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/el/LC_MESSAGES/django.po",
                "@@ -6,3 +6,3 @@",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "-# Nick Mavrakis <mavrakis.n@gmail.com>, 2017",
                "+# Nick Mavrakis <mavrakis.n@gmail.com>, 2017-2018",
                " # Nick Mavrakis <mavrakis.n@gmail.com>, 2016",
                "@@ -15,4 +15,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 18:54+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 09:56+0000\\n\"",
                " \"Last-Translator: Nick Mavrakis <mavrakis.n@gmail.com>\\n\"",
                "@@ -95,2 +95,11 @@ msgstr \"\u00ce\u0091\u00cf\u0086\u00ce\u00b1\u00ce\u00af\u00cf\u0081\u00ce\u00b5\u00cf\u0083\u00ce\u00b7\"",
                "+msgid \"Addition\"",
                "+msgstr \"\u00ce\u00a0\u00cf\u0081\u00ce\u00bf\u00cf\u0083\u00ce\u00b8\u00ce\u00ae\u00ce\u00ba\u00ce\u00b7\"",
                "+",
                "+msgid \"Change\"",
                "+msgstr \"\u00ce\u0091\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00b3\u00ce\u00ae\"",
                "+",
                "+msgid \"Deletion\"",
                "+msgstr \"\u00ce\u0094\u00ce\u00b9\u00ce\u00b1\u00ce\u00b3\u00cf\u0081\u00ce\u00b1\u00cf\u0086\u00ce\u00ae\"",
                "+",
                " msgid \"action time\"",
                "@@ -174,7 +183,7 @@ msgstr \"\"",
                " #, python-brace-format",
                "-msgid \"\"",
                "-\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "-msgstr \"\"",
                "-\"\u00ce\u00a4\u00ce\u00bf {name} \\\"{obj}\\\" \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00cf\u0083\u00cf\u0084\u00ce\u00ad\u00ce\u00b8\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5 \u00ce\u00bc\u00ce\u00b5 \u00ce\u00b5\u00cf\u0080\u00ce\u00b9\u00cf\u0084\u00cf\u0085\u00cf\u0087\u00ce\u00af\u00ce\u00b1. \u00ce\u009c\u00cf\u0080\u00ce\u00bf\u00cf\u0081\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00bd\u00ce\u00b1 \u00cf\u0084\u00ce\u00bf \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \"",
                "-\"\u00cf\u0080\u00ce\u00ac\u00ce\u00bb\u00ce\u00b9 \u00cf\u0080\u00ce\u00b1\u00cf\u0081\u00ce\u00b1\u00ce\u00ba\u00ce\u00ac\u00cf\u0084\u00cf\u0089.\"",
                "+msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "+msgstr \"\u00ce\u00a4\u00ce\u00bf {name} \\\"{obj}\\\" \u00ce\u00b1\u00cf\u0080\u00ce\u00bf\u00ce\u00b8\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5\u00cf\u008d\u00cf\u0084\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5 \u00ce\u00bc\u00ce\u00b5 \u00ce\u00b5\u00cf\u0080\u00ce\u00b9\u00cf\u0084\u00cf\u0085\u00cf\u0087\u00ce\u00af\u00ce\u00b1.\"",
                "+",
                "+msgid \"You may edit it again below.\"",
                "+msgstr \"\u00ce\u009c\u00cf\u0080\u00ce\u00bf\u00cf\u0081\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00bd\u00ce\u00b1 \u00cf\u0084\u00ce\u00bf \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00be\u00ce\u00b1\u00ce\u00bd\u00ce\u00ac \u00cf\u0080\u00ce\u00b1\u00cf\u0081\u00ce\u00b1\u00ce\u00ba\u00ce\u00ac\u00cf\u0084\u00cf\u0089.\"",
                "@@ -188,6 +197,2 @@ msgstr \"\"",
                "-#, python-brace-format",
                "-msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "-msgstr \"\u00ce\u00a4\u00ce\u00bf {name} \\\"{obj}\\\" \u00ce\u00b1\u00cf\u0080\u00ce\u00bf\u00ce\u00b8\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5\u00cf\u008d\u00cf\u0084\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5 \u00ce\u00bc\u00ce\u00b5 \u00ce\u00b5\u00cf\u0080\u00ce\u00b9\u00cf\u0084\u00cf\u0085\u00cf\u0087\u00ce\u00af\u00ce\u00b1.\"",
                "-",
                " #, python-brace-format",
                "@@ -199,2 +204,9 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"\"",
                "+\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgstr \"\"",
                "+\"\u00ce\u00a4\u00ce\u00bf {name} \\\"{obj}\\\" \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00cf\u0083\u00cf\u0084\u00ce\u00ad\u00ce\u00b8\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5 \u00ce\u00bc\u00ce\u00b5 \u00ce\u00b5\u00cf\u0080\u00ce\u00b9\u00cf\u0084\u00cf\u0085\u00cf\u0087\u00ce\u00af\u00ce\u00b1. \u00ce\u009c\u00cf\u0080\u00ce\u00bf\u00cf\u0081\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00bd\u00ce\u00b1 \u00cf\u0084\u00ce\u00bf \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \"",
                "+\"\u00cf\u0080\u00ce\u00ac\u00ce\u00bb\u00ce\u00b9 \u00cf\u0080\u00ce\u00b1\u00cf\u0081\u00ce\u00b1\u00ce\u00ba\u00ce\u00ac\u00cf\u0084\u00cf\u0089.\"",
                "+",
                " #, python-brace-format",
                "@@ -238,2 +250,6 @@ msgstr \"\u00ce\u0091\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00b3\u00ce\u00ae \u00cf\u0084\u00ce\u00bf\u00cf\u0085 %s\"",
                "+#, python-format",
                "+msgid \"View %s\"",
                "+msgstr \"\u00ce\u00a0\u00cf\u0081\u00ce\u00bf\u00ce\u00b2\u00ce\u00bf\u00ce\u00bb\u00ce\u00ae %s\"",
                "+",
                " msgid \"Database error\"",
                "@@ -463,4 +479,4 @@ msgstr \"\"",
                "-msgid \"Change\"",
                "-msgstr \"\u00ce\u0091\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00b3\u00ce\u00ae\"",
                "+msgid \"View\"",
                "+msgstr \"\u00ce\u00a0\u00cf\u0081\u00ce\u00bf\u00ce\u00b2\u00ce\u00bf\u00ce\u00bb\u00ce\u00ae\"",
                "@@ -483,4 +499,4 @@ msgstr \"\u00ce\u00a0\u00cf\u0081\u00ce\u00bf\u00cf\u0083\u00ce\u00b8\u00ce\u00ae\u00ce\u00ba\u00ce\u00b7\"",
                "-msgid \"You don't have permission to edit anything.\"",
                "-msgstr \"\u00ce\u0094\u00ce\u00b5\u00ce\u00bd \u00ce\u00ad\u00cf\u0087\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00b4\u00ce\u00b9\u00ce\u00ba\u00ce\u00b1\u00ce\u00af\u00cf\u0089\u00ce\u00bc\u00ce\u00b1 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00cf\u0084\u00ce\u00af\u00cf\u0080\u00ce\u00bf\u00cf\u0084\u00ce\u00b1.\"",
                "+msgid \"You don't have permission to view or edit anything.\"",
                "+msgstr \"\u00ce\u0094\u00ce\u00b5\u00ce\u00bd \u00ce\u00ad\u00cf\u0087\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00ce\u00b4\u00ce\u00b9\u00ce\u00ba\u00ce\u00b1\u00ce\u00af\u00cf\u0089\u00ce\u00bc\u00ce\u00b1 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b4\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00ae \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00cf\u0084\u00ce\u00af\u00cf\u0080\u00ce\u00bf\u00cf\u0084\u00ce\u00b1.\"",
                "@@ -547,2 +563,6 @@ msgstr \"\u00ce\u0086\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00be\u00ce\u00b5 \u00cf\u0084\u00ce\u00bf \u00ce\u00b5\u00cf\u0080\u00ce\u00b9\u00ce\u00bb\u00ce\u00b5\u00ce\u00b3\u00ce\u00bc\u00ce\u00ad\u00ce\u00bd\u00ce\u00bf %(model)s\"",
                "+#, python-format",
                "+msgid \"View selected %(model)s\"",
                "+msgstr \"\u00ce\u0095\u00cf\u0080\u00ce\u00b9\u00ce\u00bb\u00ce\u00b5\u00ce\u00b3\u00ce\u00bc\u00ce\u00ad\u00ce\u00bd\u00ce\u00bf View %(model)s\"",
                "+",
                " #, python-format",
                "@@ -577,2 +597,8 @@ msgstr \"\u00ce\u0091\u00cf\u0080\u00ce\u00bf\u00ce\u00b8\u00ce\u00ae\u00ce\u00ba\u00ce\u00b5\u00cf\u0085\u00cf\u0083\u00ce\u00b7 \u00ce\u00ba\u00ce\u00b1\u00ce\u00b9 \u00cf\u0083\u00cf\u0085\u00ce\u00bd\u00ce\u00ad\u00cf\u0087\u00ce\u00b5\u00ce\u00b9\u00ce\u00b1 \u00ce\u00b5\u00cf\u0080\u00ce\u00b5\u00ce\u00be\u00ce\u00b5\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00ce\u00af\u00ce\u00b1\u00cf\u0082\"",
                "+msgid \"Save and view\"",
                "+msgstr \"\u00ce\u0091\u00cf\u0080\u00ce\u00bf\u00ce\u00b8\u00ce\u00ae\u00ce\u00ba\u00ce\u00b5\u00cf\u0085\u00cf\u0083\u00ce\u00b7 \u00ce\u00ba\u00ce\u00b1\u00ce\u00b9 \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00ce\u00b2\u00ce\u00bf\u00ce\u00bb\u00ce\u00ae\"",
                "+",
                "+msgid \"Close\"",
                "+msgstr \"\u00ce\u009a\u00ce\u00bb\u00ce\u00b5\u00ce\u00af\u00cf\u0083\u00ce\u00b9\u00ce\u00bc\u00ce\u00bf\"",
                "+",
                " msgid \"Thanks for spending some quality time with the Web site today.\"",
                "@@ -698,2 +724,6 @@ msgstr \"\u00ce\u0095\u00cf\u0080\u00ce\u00b9\u00ce\u00bb\u00ce\u00ad\u00ce\u00be\u00cf\u0084\u00ce\u00b5 %s \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00cf\u0082 \u00ce\u00b1\u00ce\u00bb\u00ce\u00bb\u00ce\u00b1\u00ce\u00b3\u00ce\u00ae\"",
                "+#, python-format",
                "+msgid \"Select %s to view\"",
                "+msgstr \"\u00ce\u0095\u00cf\u0080\u00ce\u00b9\u00ce\u00bb\u00ce\u00ad\u00ce\u00be\u00cf\u0084\u00ce\u00b5 %s \u00ce\u00b3\u00ce\u00b9\u00ce\u00b1 \u00cf\u0080\u00cf\u0081\u00ce\u00bf\u00ce\u00b2\u00ce\u00bf\u00ce\u00bb\u00ce\u00ae\"",
                "+",
                " msgid \"Date:\"",
                "diff --git a/django/contrib/admin/locale/eu/LC_MESSAGES/django.mo b/django/contrib/admin/locale/eu/LC_MESSAGES/django.mo",
                "index d5b272d830..3d4808eeff 100644",
                "Binary files a/django/contrib/admin/locale/eu/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/eu/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/eu/LC_MESSAGES/django.po b/django/contrib/admin/locale/eu/LC_MESSAGES/django.po",
                "index 522ea99ecd..814ffe808d 100644",
                "--- a/django/contrib/admin/locale/eu/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/eu/LC_MESSAGES/django.po",
                "@@ -4,6 +4,6 @@",
                " # Aitzol Naberan <anaberan@codesyntax.com>, 2013,2016",
                "-# Eneko Illarramendi <eneko@illarra.com>, 2017",
                "+# Eneko Illarramendi <eneko@illarra.com>, 2017-2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "-# julen <julenx@gmail.com>, 2012-2013",
                "-# julen <julenx@gmail.com>, 2013",
                "+# julen, 2012-2013",
                "+# julen, 2013",
                " # Urtzi Odriozola <urtzi.odriozola@gmail.com>, 2017",
                "@@ -13,5 +13,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-25 07:52+0000\\n\"",
                "-\"Last-Translator: Urtzi Odriozola <urtzi.odriozola@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "+\"PO-Revision-Date: 2018-08-28 10:32+0000\\n\"",
                "+\"Last-Translator: Eneko Illarramendi <eneko@illarra.com>\\n\"",
                " \"Language-Team: Basque (http://www.transifex.com/django/django/language/eu/)\\n\"",
                "@@ -92,2 +92,11 @@ msgstr \"Kendu\"",
                "+msgid \"Addition\"",
                "+msgstr \"Gehitzea\"",
                "+",
                "+msgid \"Change\"",
                "+msgstr \"Aldatu\"",
                "+",
                "+msgid \"Deletion\"",
                "+msgstr \"Ezabatzea\"",
                "+",
                " msgid \"action time\"",
                "@@ -171,6 +180,7 @@ msgstr \"\"",
                " #, python-brace-format",
                "-msgid \"\"",
                "-\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "-msgstr \"\"",
                "-\"{name} \\\"{obj}\\\" ondo gehitu da. Aldaketa gehiago egin ditzazkezu jarraian.\"",
                "+msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "+msgstr \"{name} \\\"{obj}\\\" ondo gehitu da.\"",
                "+",
                "+msgid \"You may edit it again below.\"",
                "+msgstr \"Aldaketa gehiago egin ditzazkezu jarraian.\"",
                "@@ -183,6 +193,2 @@ msgstr \"\"",
                "-#, python-brace-format",
                "-msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "-msgstr \"{name} \\\"{obj}\\\" ondo gehitu da.\"",
                "-",
                " #, python-brace-format",
                "@@ -193,2 +199,8 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"\"",
                "+\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgstr \"\"",
                "+\"{name} \\\"{obj}\\\" ondo gehitu da. Aldaketa gehiago egin ditzazkezu jarraian.\"",
                "+",
                " #, python-brace-format",
                "@@ -231,2 +243,6 @@ msgstr \"Aldatu %s\"",
                "+#, python-format",
                "+msgid \"View %s\"",
                "+msgstr \"%s ikusi\"",
                "+",
                " msgid \"Database error\"",
                "@@ -311,3 +327,3 @@ msgstr \"\"",
                " msgid \"Run the selected action\"",
                "-msgstr \"Burutu hautatutako ekintza\"",
                "+msgstr \"Burutu aukeratutako ekintza\"",
                "@@ -340,6 +356,6 @@ msgstr \"Aldatu pasahitza\"",
                " msgid \"Please correct the error below.\"",
                "-msgstr \"Zuzendu azpiko erroreak.\"",
                "+msgstr \"Mesedez zuzendu erroreak behean.\"",
                " msgid \"Please correct the errors below.\"",
                "-msgstr \"Mesedez zuzendu azpiko erroreak.\"",
                "+msgstr \"Mesedez zuzendu erroreak behean.\"",
                "@@ -370,3 +386,3 @@ msgstr \"Historia\"",
                " msgid \"View on site\"",
                "-msgstr \"Ikusi gunean\"",
                "+msgstr \"Webgunean ikusi\"",
                "@@ -431,3 +447,3 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"Hautatutako %(objects_name)s ezabatzeak erlazionatutako objektuak ezabatzea \"",
                "+\"Aukeratutako %(objects_name)s ezabatzeak erlazionatutako objektuak ezabatzea \"",
                " \"eskatzen du baina zure kontuak ez dauka baimen nahikorik objektu mota hauek \"",
                "@@ -440,3 +456,3 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"Hautatutako %(objects_name)s ezabatzeak erlazionatutako objektu babestu \"",
                "+\"Aukeratutako %(objects_name)s ezabatzeak erlazionatutako objektu babestu \"",
                " \"hauek ezabatzea eskatzen du:\"",
                "@@ -448,7 +464,7 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"Ziur zaude hautatutako %(objects_name)s ezabatu nahi duzula? Objektu guzti \"",
                "+\"Ziur zaude aukeratutako %(objects_name)s ezabatu nahi duzula? Objektu guzti \"",
                " \"hauek eta erlazionatutako elementu guztiak ezabatuko dira:\"",
                "-msgid \"Change\"",
                "-msgstr \"Aldatu\"",
                "+msgid \"View\"",
                "+msgstr \"Ikusi\"",
                "@@ -471,4 +487,4 @@ msgstr \"Gehitu\"",
                "-msgid \"You don't have permission to edit anything.\"",
                "-msgstr \"Ez daukazu ezer aldatzeko baimenik.\"",
                "+msgid \"You don't have permission to view or edit anything.\"",
                "+msgstr \"Ez duzu ezer ikusi edo ezabatzeko baimenik.\"",
                "@@ -534,2 +550,6 @@ msgstr \"Aldatu aukeratutako %(model)s\"",
                "+#, python-format",
                "+msgid \"View selected %(model)s\"",
                "+msgstr \"Ikusi aukeratutako %(model)s\"",
                "+",
                " #, python-format",
                "@@ -559,6 +579,12 @@ msgstr \"Gorde berri gisa\"",
                " msgid \"Save and add another\"",
                "-msgstr \"Gorde eta gehitu beste bat\"",
                "+msgstr \"Gorde eta beste bat gehitu\"",
                " msgid \"Save and continue editing\"",
                "-msgstr \"Gorde eta jarraitu editatzen\"",
                "+msgstr \"Gorde eta editatzen jarraitu\"",
                "+",
                "+msgid \"Save and view\"",
                "+msgstr \"Gorde eta ikusi\"",
                "+",
                "+msgid \"Close\"",
                "+msgstr \"Itxi\"",
                "@@ -584,3 +610,3 @@ msgstr \"\"",
                " msgid \"Change my password\"",
                "-msgstr \"Aldatu nire pasahitza\"",
                "+msgstr \"Nire pasahitza aldatu\"",
                "@@ -667,3 +693,3 @@ msgstr \"Data guztiak\"",
                " msgid \"Select %s\"",
                "-msgstr \"Hautatu %s\"",
                "+msgstr \"Aukeratu %s\"",
                "@@ -671,3 +697,7 @@ msgstr \"Hautatu %s\"",
                " msgid \"Select %s to change\"",
                "-msgstr \"Hautatu %s aldatzeko\"",
                "+msgstr \"Aukeratu %s aldatzeko\"",
                "+",
                "+#, python-format",
                "+msgid \"Select %s to view\"",
                "+msgstr \"Aukeratu %s ikusteko\"",
                "diff --git a/django/contrib/admin/locale/lt/LC_MESSAGES/django.mo b/django/contrib/admin/locale/lt/LC_MESSAGES/django.mo",
                "index f866f81e5f..6fa9a048bd 100644",
                "Binary files a/django/contrib/admin/locale/lt/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/lt/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/lt/LC_MESSAGES/django.po b/django/contrib/admin/locale/lt/LC_MESSAGES/django.po",
                "index 4752f75393..fcdf18dfef 100644",
                "--- a/django/contrib/admin/locale/lt/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/lt/LC_MESSAGES/django.po",
                "@@ -14,4 +14,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "-\"PO-Revision-Date: 2018-05-28 01:29+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"PO-Revision-Date: 2018-09-14 12:28+0000\\n\"",
                "+\"Last-Translator: Matas Dailyda <matas@dailyda.com>\\n\"",
                " \"Language-Team: Lithuanian (http://www.transifex.com/django/django/language/\"",
                "@@ -246,3 +246,3 @@ msgstr \"Pakeisti %s\"",
                " msgid \"View %s\"",
                "-msgstr \"\"",
                "+msgstr \"Per\u00c5\u00bei\u00c5\u00abr\u00c4\u0097ti %s\"",
                "@@ -708,3 +708,3 @@ msgstr \"Pasirinkite %s kur\u00c4\u00af norite keisti\"",
                " msgid \"Select %s to view\"",
                "-msgstr \"\"",
                "+msgstr \"Pasirinkti %s per\u00c5\u00bei\u00c5\u00abrai\"",
                "diff --git a/django/contrib/admin/locale/uk/LC_MESSAGES/django.mo b/django/contrib/admin/locale/uk/LC_MESSAGES/django.mo",
                "index 621699b5e7..8c2b506e56 100644",
                "Binary files a/django/contrib/admin/locale/uk/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/uk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/uk/LC_MESSAGES/django.po b/django/contrib/admin/locale/uk/LC_MESSAGES/django.po",
                "index e593746ff4..a25ab84250 100644",
                "--- a/django/contrib/admin/locale/uk/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/uk/LC_MESSAGES/django.po",
                "@@ -14,2 +14,3 @@",
                " # Sergiy Kuzmenko <s.kuzmenko@gmail.com>, 2011",
                "+# Taras Korzhak <taras.korzhak96@gmail.com>, 2018",
                " # Zoriana Zaiats, 2016",
                "@@ -19,5 +20,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 18:54+0000\\n\"",
                "-\"Last-Translator: Igor Melnyk\\n\"",
                "+\"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "+\"PO-Revision-Date: 2018-08-24 20:12+0000\\n\"",
                "+\"Last-Translator: Taras Korzhak <taras.korzhak96@gmail.com>\\n\"",
                " \"Language-Team: Ukrainian (http://www.transifex.com/django/django/language/\"",
                "@@ -28,4 +29,6 @@ msgstr \"\"",
                " \"Language: uk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n\"",
                "-\"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != \"",
                "+\"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % \"",
                "+\"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || \"",
                "+\"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\\n\"",
                "@@ -100,2 +103,11 @@ msgstr \"\u00d0\u0092\u00d0\u00b8\u00d0\u00b4\u00d0\u00b0\u00d0\u00bb\u00d0\u00b8\u00d1\u0082\u00d0\u00b8\"",
                "+msgid \"Addition\"",
                "+msgstr \"\u00d0\u0094\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u008f\"",
                "+",
                "+msgid \"Change\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8\"",
                "+",
                "+msgid \"Deletion\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00b8\u00d0\u00b4\u00d0\u00b0\u00d0\u00bb\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f\"",
                "+",
                " msgid \"action time\"",
                "@@ -179,6 +191,7 @@ msgstr \"\"",
                " #, python-brace-format",
                "-msgid \"\"",
                "-\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "-msgstr \"\"",
                "-\"{name} \\\"{obj}\\\" \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d0\u00b4\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be. \u00d0\u009d\u00d0\u00b8\u00d0\u00b6\u00d1\u0087\u00d0\u00b5 \u00d0\u0092\u00d0\u00b8 \u00d0\u00bc\u00d0\u00be\u00d0\u00b6\u00d0\u00b5\u00d1\u0082\u00d0\u00b5 \u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \u00d0\u00b9\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d0\u00b7\u00d0\u00bd\u00d0\u00be\u00d0\u00b2\u00d1\u0083.\"",
                "+msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "+msgstr \"{name} \\\"{obj}\\\" \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d0\u00b4\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be.\"",
                "+",
                "+msgid \"You may edit it again below.\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00b8 \u00d0\u00bc\u00d0\u00be\u00d0\u00b6\u00d0\u00b5\u00d1\u0082\u00d0\u00b5 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4\u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \u00d1\u0086\u00d0\u00b5 \u00d0\u00b7\u00d0\u00bd\u00d0\u00be\u00d0\u00b2\u00d1\u0083.\"",
                "@@ -191,6 +204,2 @@ msgstr \"\"",
                "-#, python-brace-format",
                "-msgid \"The {name} \\\"{obj}\\\" was added successfully.\"",
                "-msgstr \"{name} \\\"{obj}\\\" \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d0\u00b4\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be.\"",
                "-",
                " #, python-brace-format",
                "@@ -201,2 +210,8 @@ msgstr \"\"",
                "+#, python-brace-format",
                "+msgid \"\"",
                "+\"The {name} \\\"{obj}\\\" was added successfully. You may edit it again below.\"",
                "+msgstr \"\"",
                "+\"{name} \\\"{obj}\\\" \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d0\u00b4\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d0\u00bd\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be. \u00d0\u009d\u00d0\u00b8\u00d0\u00b6\u00d1\u0087\u00d0\u00b5 \u00d0\u0092\u00d0\u00b8 \u00d0\u00bc\u00d0\u00be\u00d0\u00b6\u00d0\u00b5\u00d1\u0082\u00d0\u00b5 \u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \u00d0\u00b9\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d0\u00b7\u00d0\u00bd\u00d0\u00be\u00d0\u00b2\u00d1\u0083.\"",
                "+",
                " #, python-brace-format",
                "@@ -237,2 +252,6 @@ msgstr \"\u00d0\u0097\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 %s\"",
                "+#, python-format",
                "+msgid \"View %s\"",
                "+msgstr \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00bd\u00d1\u0083\u00d1\u0082\u00d0\u00b8 %s\"",
                "+",
                " msgid \"Database error\"",
                "@@ -246,2 +265,3 @@ msgstr[1] \"%(count)s %(name)s \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00b8 \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be \u00d0\u00b7\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b5\u00d0\u00bd\u00d1\u0096.\"",
                " msgstr[2] \"%(count)s %(name)s \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be \u00d0\u00b7\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b5\u00d0\u00bd\u00d0\u00be.\"",
                "+msgstr[3] \"%(count)s %(name)s \u00d0\u00b1\u00d1\u0083\u00d0\u00bb\u00d0\u00be \u00d1\u0083\u00d1\u0081\u00d0\u00bf\u00d1\u0096\u00d1\u0088\u00d0\u00bd\u00d0\u00be \u00d0\u00b7\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b5\u00d0\u00bd\u00d0\u00be.\"",
                "@@ -253,2 +273,3 @@ msgstr[1] \"%(total_count)s \u00d0\u00be\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d0\u00bd\u00d1\u0096\"",
                " msgstr[2] \"\u00d0\u00a3\u00d1\u0081\u00d1\u0096 %(total_count)s \u00d0\u00be\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d0\u00bd\u00d0\u00be\"",
                "+msgstr[3] \"\u00d0\u00a3\u00d1\u0081\u00d1\u0096 %(total_count)s \u00d0\u00be\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d0\u00bd\u00d0\u00be\"",
                "@@ -347,3 +368,3 @@ msgstr \"\u00d0\u0097\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d0\u00bf\u00d0\u00b0\u00d1\u0080\u00d0\u00be\u00d0\u00bb\u00d1\u008c\"",
                " msgid \"Please correct the error below.\"",
                "-msgstr \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d0\u00b8\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0082\u00d0\u00b5 \u00d0\u00bf\u00d0\u00be\u00d0\u00bc\u00d0\u00b8\u00d0\u00bb\u00d0\u00ba\u00d1\u0083, \u00d0\u00b2\u00d0\u00ba\u00d0\u00b0\u00d0\u00b7\u00d0\u00b0\u00d0\u00bd\u00d1\u0083 \u00d0\u00bd\u00d0\u00b8\u00d0\u00b6\u00d1\u0087\u00d0\u00b5.\"",
                "+msgstr \"\u00d0\u0091\u00d1\u0083\u00d0\u00b4\u00d1\u008c \u00d0\u00bb\u00d0\u00b0\u00d1\u0081\u00d0\u00ba\u00d0\u00b0, \u00d0\u00b2\u00d0\u00b8\u00d0\u00bf\u00d1\u0080\u00d0\u00b0\u00d0\u00b2\u00d1\u0096\u00d1\u0082\u00d1\u008c \u00d0\u00bf\u00d0\u00be\u00d0\u00bc\u00d0\u00b8\u00d0\u00bb\u00d0\u00ba\u00d1\u0083 \u00d0\u00bd\u00d0\u00b8\u00d0\u00b6\u00d1\u0087\u00d0\u00b5.\"",
                "@@ -457,4 +478,4 @@ msgstr \"\"",
                "-msgid \"Change\"",
                "-msgstr \"\u00d0\u0097\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8\"",
                "+msgid \"View\"",
                "+msgstr \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00bd\u00d1\u0083\u00d1\u0082\u00d0\u00b8\"",
                "@@ -477,4 +498,4 @@ msgstr \"\u00d0\u0094\u00d0\u00be\u00d0\u00b4\u00d0\u00b0\u00d1\u0082\u00d0\u00b8\"",
                "-msgid \"You don't have permission to edit anything.\"",
                "-msgstr \"\u00d0\u00a3 \u00d0\u00b2\u00d0\u00b0\u00d1\u0081 \u00d0\u00bd\u00d0\u00b5\u00d0\u00bc\u00d0\u00b0\u00d1\u0094 \u00d0\u00b4\u00d0\u00be\u00d0\u00b7\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d1\u0083 \u00d0\u00bd\u00d0\u00b0 \u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d0\u00b1\u00d1\u0083\u00d0\u00b4\u00d1\u008c-\u00d1\u0087\u00d0\u00be\u00d0\u00b3\u00d0\u00be.\"",
                "+msgid \"You don't have permission to view or edit anything.\"",
                "+msgstr \"\u00d0\u00a3 \u00d0\u00b2\u00d0\u00b0\u00d1\u0081 \u00d0\u00bd\u00d0\u00b5\u00d0\u00bc\u00d0\u00b0\u00d1\u0094 \u00d0\u00b4\u00d0\u00be\u00d0\u00b7\u00d0\u00b2\u00d0\u00be\u00d0\u00bb\u00d1\u0083 \u00d0\u00bd\u00d0\u00b0 \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00b4 \u00d1\u0087\u00d0\u00b8 \u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d1\u0087\u00d0\u00be\u00d0\u00b3\u00d0\u00be-\u00d0\u00bd\u00d0\u00b5\u00d0\u00b1\u00d1\u0083\u00d0\u00b4\u00d1\u008c.\"",
                "@@ -541,2 +562,6 @@ msgstr \"\u00d0\u0097\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d0\u00be\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d0\u00bd\u00d1\u0083 %(model)s\"",
                "+#, python-format",
                "+msgid \"View selected %(model)s\"",
                "+msgstr \"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00bd\u00d1\u0083\u00d1\u0082\u00d0\u00b8 \u00d0\u00b2\u00d0\u00b8\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d0\u00bd\u00d1\u0096 %(model)s\"",
                "+",
                " #, python-format",
                "@@ -558,2 +583,3 @@ msgstr[1] \"%(counter)s \u00d1\u0080\u00d0\u00b5\u00d0\u00b7\u00d1\u0083\u00d0\u00bb\u00d1\u008c\u00d1\u0082\u00d0\u00b0\u00d1\u0082\u00d0\u00b8\"",
                " msgstr[2] \"%(counter)s \u00d1\u0080\u00d0\u00b5\u00d0\u00b7\u00d1\u0083\u00d0\u00bb\u00d1\u008c\u00d1\u0082\u00d0\u00b0\u00d1\u0082\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(counter)s \u00d1\u0080\u00d0\u00b5\u00d0\u00b7\u00d1\u0083\u00d0\u00bb\u00d1\u008c\u00d1\u0082\u00d0\u00b0\u00d1\u0082\u00d1\u0096\u00d0\u00b2\"",
                "@@ -572,2 +598,8 @@ msgstr \"\u00d0\u0097\u00d0\u00b1\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d1\u0082\u00d0\u00b8 \u00d1\u0096 \u00d0\u00bf\u00d1\u0080\u00d0\u00be\u00d0\u00b4\u00d0\u00be\u00d0\u00b2\u00d0\u00b6\u00d0\u00b8\u00d1\u0082\u00d0\u00b8 \u00d1\u0080\u00d0\u00b5\u00d0\u00b4\u00d0\u00b0\u00d0\u00b3\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d0\u00bd\u00d0\u00bd\u00d1\u008f\"",
                "+msgid \"Save and view\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00b1\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d1\u0082\u00d0\u00b8 \u00d1\u0096 \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00bd\u00d1\u0083\u00d1\u0082\u00d0\u00b8\"",
                "+",
                "+msgid \"Close\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00b0\u00d0\u00ba\u00d1\u0080\u00d0\u00b8\u00d1\u0082\u00d0\u00b8\"",
                "+",
                " msgid \"Thanks for spending some quality time with the Web site today.\"",
                "@@ -683,2 +715,6 @@ msgstr \"\u00d0\u0092\u00d0\u00b8\u00d0\u00b1\u00d0\u00b5\u00d1\u0080\u00d1\u0096\u00d1\u0082\u00d1\u008c %s \u00d1\u0089\u00d0\u00be\u00d0\u00b1 \u00d0\u00b7\u00d0\u00bc\u00d1\u0096\u00d0\u00bd\u00d0\u00b8\u00d1\u0082\u00d0\u00b8\"",
                "+#, python-format",
                "+msgid \"Select %s to view\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00b8\u00d0\u00b1\u00d1\u0080\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 %s \u00d0\u00b4\u00d0\u00bb\u00d1\u008f \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b3\u00d0\u00bb\u00d1\u008f\u00d0\u00b4\u00d1\u0083\"",
                "+",
                " msgid \"Date:\"",
                "diff --git a/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.mo b/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.mo",
                "index 537c896bc6..d43800513a 100644",
                "Binary files a/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.mo and b/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.po b/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.po",
                "index 2858020431..7fa3d1a89f 100644",
                "--- a/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.po",
                "+++ b/django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.po",
                "@@ -15,3 +15,5 @@",
                " # slene <vslene@gmail.com>, 2011",
                "+# Wentao Han <wentao.han@gmail.com>, 2018",
                " # xuyi wang <xuyi.wg@gmail.com>, 2018",
                "+# yf zhan <daxian12345@gmail.com>, 2018",
                " # Ziang Song <songziang@gmail.com>, 2012",
                "@@ -25,4 +27,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2018-05-21 14:16-0300\\n\"",
                "-\"PO-Revision-Date: 2018-07-16 13:10+0000\\n\"",
                "-\"Last-Translator: xuyi wang <xuyi.wg@gmail.com>\\n\"",
                "+\"PO-Revision-Date: 2018-09-28 07:44+0000\\n\"",
                "+\"Last-Translator: Wentao Han <wentao.han@gmail.com>\\n\"",
                " \"Language-Team: Chinese (China) (http://www.transifex.com/django/django/\"",
                "@@ -103,3 +105,3 @@ msgstr \"\u00e5\u0088\u00a0\u00e9\u0099\u00a4\"",
                " msgid \"Addition\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e6\u00b7\u00bb\u00e5\u008a\u00a0\"",
                "@@ -109,3 +111,3 @@ msgstr \"\u00e4\u00bf\u00ae\u00e6\u0094\u00b9\"",
                " msgid \"Deletion\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e5\u0088\u00a0\u00e9\u0099\u00a4\"",
                "@@ -157,3 +159,3 @@ msgstr \"LogEntry\u00e5\u00af\u00b9\u00e8\u00b1\u00a1\"",
                " msgid \"Added {name} \\\"{object}\\\".\"",
                "-msgstr \"\u00e4\u00bb\u00a5\u00e6\u00b7\u00bb\u00e5\u008a\u00a0{name}\\\"{object}\\\"\u00e3\u0080\u0082\"",
                "+msgstr \"\u00e5\u00b7\u00b2\u00e6\u00b7\u00bb\u00e5\u008a\u00a0{name}\\\"{object}\\\"\u00e3\u0080\u0082\"",
                "@@ -246,3 +248,3 @@ msgstr \"\u00e4\u00bf\u00ae\u00e6\u0094\u00b9 %s\"",
                " msgid \"View %s\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e6\u009f\u00a5\u00e7\u009c\u008b %s\"",
                "@@ -459,3 +461,3 @@ msgstr \"\"",
                " msgid \"View\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e6\u009f\u00a5\u00e7\u009c\u008b\"",
                "@@ -573,6 +575,6 @@ msgstr \"\u00e4\u00bf\u009d\u00e5\u00ad\u0098\u00e5\u00b9\u00b6\u00e7\u00bb\u00a7\u00e7\u00bb\u00ad\u00e7\u00bc\u0096\u00e8\u00be\u0091\"",
                " msgid \"Save and view\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e4\u00bf\u009d\u00e5\u00ad\u0098\u00e5\u00b9\u00b6\u00e6\u009f\u00a5\u00e7\u009c\u008b\"",
                " msgid \"Close\"",
                "-msgstr \"\"",
                "+msgstr \"\u00e5\u0085\u00b3\u00e9\u0097\u00ad\"",
                "diff --git a/django/contrib/auth/locale/da/LC_MESSAGES/django.mo b/django/contrib/auth/locale/da/LC_MESSAGES/django.mo",
                "index 4d78af26fa..cd660b9a87 100644",
                "Binary files a/django/contrib/auth/locale/da/LC_MESSAGES/django.mo and b/django/contrib/auth/locale/da/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/auth/locale/da/LC_MESSAGES/django.po b/django/contrib/auth/locale/da/LC_MESSAGES/django.po",
                "index 52695f72a5..5d39c1e1a4 100644",
                "--- a/django/contrib/auth/locale/da/LC_MESSAGES/django.po",
                "+++ b/django/contrib/auth/locale/da/LC_MESSAGES/django.po",
                "@@ -7,2 +7,3 @@",
                " # Stevenn, 2013",
                "+# tiktuk <tiktuk@gmail.com>, 2018",
                " # valberg <valberg@orn.li>, 2015",
                "@@ -13,4 +14,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2017-09-24 13:46+0200\\n\"",
                "-\"PO-Revision-Date: 2017-09-24 16:13+0000\\n\"",
                "-\"Last-Translator: Erik Wognsen <r4mses@gmail.com>\\n\"",
                "+\"PO-Revision-Date: 2018-08-23 08:30+0000\\n\"",
                "+\"Last-Translator: tiktuk <tiktuk@gmail.com>\\n\"",
                " \"Language-Team: Danish (http://www.transifex.com/django/django/language/da/)\\n\"",
                "@@ -82,4 +83,4 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"Indtast venligst et korrekt %(username)s og adgangskode. Bem\u00c3\u00a6rk at begge \"",
                "-\"felter kan v\u00c3\u00a6re versalf\u00c3\u00b8lsomme.\"",
                "+\"Indtast venligst korrekt %(username)s og adgangskode. Bem\u00c3\u00a6rk at begge felter \"",
                "+\"kan v\u00c3\u00a6re versalf\u00c3\u00b8lsomme.\"",
                "diff --git a/django/contrib/auth/locale/el/LC_MESSAGES/django.mo b/django/contrib/auth/locale/el/LC_MESSAGES/django.mo",
                "index 416e550d83..18a8b2a3d4 100644",
                "Binary files a/django/contrib/auth/locale/el/LC_MESSAGES/django.mo and b/django/contrib/auth/locale/el/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/auth/locale/el/LC_MESSAGES/django.po b/django/contrib/auth/locale/el/LC_MESSAGES/django.po",
                "index 13a4934dcd..44e5c7cb46 100644",
                "--- a/django/contrib/auth/locale/el/LC_MESSAGES/django.po",
                "+++ b/django/contrib/auth/locale/el/LC_MESSAGES/django.po",
                "@@ -9,2 +9,3 @@",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "+# Nick Mavrakis <mavrakis.n@gmail.com>, 2018",
                " # P\u00c3\u00a3no\u00c8\u0099 <panos.laganakos@gmail.com>, 2014",
                "@@ -17,4 +18,4 @@ msgstr \"\"",
                " \"POT-Creation-Date: 2017-09-24 13:46+0200\\n\"",
                "-\"PO-Revision-Date: 2017-09-24 14:24+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 09:59+0000\\n\"",
                "+\"Last-Translator: Nick Mavrakis <mavrakis.n@gmail.com>\\n\"",
                " \"Language-Team: Greek (http://www.transifex.com/django/django/language/el/)\\n\"",
                "@@ -77,2 +78,5 @@ msgid \"\"",
                " msgstr \"\"",
                "+\"\u00ce\u009f\u00ce\u00b9 \u00ce\u00b1\u00ce\u00ba\u00ce\u00b1\u00cf\u0084\u00ce\u00ad\u00cf\u0081\u00ce\u00b3\u00ce\u00b1\u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00ce\u00b9 \u00ce\u00ba\u00cf\u0089\u00ce\u00b4\u00ce\u00b9\u00ce\u00ba\u00ce\u00bf\u00ce\u00af \u00ce\u00b4\u00ce\u00b5\u00ce\u00bd \u00ce\u00b1\u00cf\u0080\u00ce\u00bf\u00ce\u00b8\u00ce\u00b7\u00ce\u00ba\u00ce\u00b5\u00cf\u008d\u00ce\u00bf\u00ce\u00bd\u00cf\u0084\u00ce\u00b1\u00ce\u00b9, \u00ce\u00bf\u00cf\u0080\u00cf\u008c\u00cf\u0084\u00ce\u00b5 \u00ce\u00b4\u00ce\u00b5\u00ce\u00bd \u00cf\u0085\u00cf\u0080\u00ce\u00ac\u00cf\u0081\u00cf\u0087\u00ce\u00b5\u00ce\u00b9 \u00cf\u0084\u00cf\u0081\u00cf\u008c\u00cf\u0080\u00ce\u00bf\u00cf\u0082 \u00ce\u00bd\u00ce\u00b1 \u00ce\u00b4\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \"",
                "+\"\u00cf\u0084\u00ce\u00bf\u00ce\u00bd \u00ce\u00ba\u00cf\u0089\u00ce\u00b4\u00ce\u00b9\u00ce\u00ba\u00cf\u008c \u00ce\u00b1\u00cf\u0085\u00cf\u0084\u00ce\u00bf\u00cf\u008d \u00cf\u0084\u00ce\u00bf\u00cf\u0085 \u00cf\u0087\u00cf\u0081\u00ce\u00ae\u00cf\u0083\u00cf\u0084\u00ce\u00b7, \u00ce\u00b1\u00ce\u00bb\u00ce\u00bb\u00ce\u00ac \u00ce\u00bc\u00cf\u0080\u00ce\u00bf\u00cf\u0081\u00ce\u00b5\u00ce\u00af\u00cf\u0084\u00ce\u00b5 \u00ce\u00bd\u00ce\u00b1 \u00cf\u0084\u00ce\u00bf\u00ce\u00bd \u00ce\u00b1\u00ce\u00bb\u00ce\u00bb\u00ce\u00ac\u00ce\u00be\u00ce\u00b5\u00cf\u0084\u00ce\u00b5 \u00cf\u0087\u00cf\u0081\u00ce\u00b7\u00cf\u0083\u00ce\u00b9\u00ce\u00bc\u00ce\u00bf\u00cf\u0080\u00ce\u00bf\u00ce\u00b9\u00cf\u008e\u00ce\u00bd\u00cf\u0084\u00ce\u00b1\u00cf\u0082 \"",
                "+\"<a href=\\\"{}\\\">\u00ce\u00b1\u00cf\u0085\u00cf\u0084\u00ce\u00ae \u00cf\u0084\u00ce\u00b7 \u00cf\u0086\u00cf\u008c\u00cf\u0081\u00ce\u00bc\u00ce\u00b1</a>.\"",
                "diff --git a/django/contrib/humanize/locale/az/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/az/LC_MESSAGES/django.mo",
                "index b79982c8f8..51ca1000d0 100644",
                "Binary files a/django/contrib/humanize/locale/az/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/az/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/az/LC_MESSAGES/django.po b/django/contrib/humanize/locale/az/LC_MESSAGES/django.po",
                "index 0bc967611e..0d451cc9d1 100644",
                "--- a/django/contrib/humanize/locale/az/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/az/LC_MESSAGES/django.po",
                "@@ -5,2 +5,3 @@",
                " # Claude Paroz <claude@2xlibre.net>, 2013",
                "+# Emin Mastizada <emin@linux.com>, 2018",
                " # Emin Mastizada <emin@linux.com>, 2016",
                "@@ -10,4 +11,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-19 16:40+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-09 12:56+0000\\n\"",
                " \"Last-Translator: Emin Mastizada <emin@linux.com>\\n\"",
                "@@ -24,13 +25,56 @@ msgstr \"\u00c4\u00b0nsanla\u00c5\u009fd\u00c4\u00b1r\"",
                "-msgid \"th\"",
                "-msgstr \"-\u00c4\u00b1nc\u00c4\u00b1\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \"-\u00c4\u00b1nc\u00c4\u00b1\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"nd\"",
                "-msgstr \"-\u00c4\u00b1nc\u00c4\u00b1\"",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"rd\"",
                "-msgstr \"-\u00c4\u00b1nc\u00c4\u00b1\"",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}ci\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}ci\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}c\u00c3\u00bc\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}c\u00c3\u00bc\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}ci\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}c\u00c4\u00b1\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}ci\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}ci\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}cu\"",
                "@@ -204,4 +248,5 @@ msgstr \"d\u00c3\u00bcn\u00c9\u0099n\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "@@ -209,2 +254,46 @@ msgstr \"%(delta)s \u00c9\u0099vv\u00c9\u0099l\"",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d il\"",
                "+msgstr[1] \"%d il\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d ay\"",
                "+msgstr[1] \"%d ay\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d h\u00c9\u0099ft\u00c9\u0099\"",
                "+msgstr[1] \"%d h\u00c9\u0099ft\u00c9\u0099\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d g\u00c3\u00bcn\"",
                "+msgstr[1] \"%d g\u00c3\u00bcn\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d saat\"",
                "+msgstr[1] \"%d saat\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d d\u00c9\u0099qiq\u00c9\u0099\"",
                "+msgstr[1] \"%d d\u00c9\u0099qiq\u00c9\u0099\"",
                "+",
                " msgid \"now\"",
                "@@ -236,6 +325,51 @@ msgstr[1] \"%(count)s\u00c2\u00a0saat \u00c9\u0099vv\u00c9\u0099l\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"%(delta)s sonra\"",
                "+msgstr \"%(delta)s bundan sonra\"",
                "+",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d il\"",
                "+msgstr[1] \"%d il\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d ay\"",
                "+msgstr[1] \"%d ay\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d h\u00c9\u0099ft\u00c9\u0099\"",
                "+msgstr[1] \"%d h\u00c9\u0099ft\u00c9\u0099\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d g\u00c3\u00bcn\"",
                "+msgstr[1] \"%d g\u00c3\u00bcn\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d saat\"",
                "+msgstr[1] \"%d saat\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d d\u00c9\u0099qiq\u00c9\u0099\"",
                "+msgstr[1] \"%d d\u00c9\u0099qiq\u00c9\u0099\"",
                "diff --git a/django/contrib/humanize/locale/br/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/br/LC_MESSAGES/django.mo",
                "index db7bc9c522..b52ced69ef 100644",
                "Binary files a/django/contrib/humanize/locale/br/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/br/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/br/LC_MESSAGES/django.po b/django/contrib/humanize/locale/br/LC_MESSAGES/django.po",
                "index a46a99cee0..b2db9b8b75 100644",
                "--- a/django/contrib/humanize/locale/br/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/br/LC_MESSAGES/django.po",
                "@@ -8,5 +8,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-19 16:40+0000\\n\"",
                "-\"Last-Translator: Fulup <fulup.jakez@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-29 08:30+0000\\n\"",
                "+\"Last-Translator: Claude Paroz <claude@2xlibre.net>\\n\"",
                " \"Language-Team: Breton (http://www.transifex.com/django/django/language/br/)\\n\"",
                "@@ -16,3 +16,7 @@ msgstr \"\"",
                " \"Language: br\\n\"",
                "-\"Plural-Forms: nplurals=2; plural=(n > 1);\\n\"",
                "+\"Plural-Forms: nplurals=5; plural=((n%10 == 1) && (n%100 != 11) && (n%100 !\"",
                "+\"=71) && (n%100 !=91) ? 0 :(n%10 == 2) && (n%100 != 12) && (n%100 !=72) && (n\"",
                "+\"%100 !=92) ? 1 :(n%10 ==3 || n%10==4 || n%10==9) && (n%100 < 10 || n% 100 > \"",
                "+\"19) && (n%100 < 70 || n%100 > 79) && (n%100 < 90 || n%100 > 99) ? 2 :(n != 0 \"",
                "+\"&& n % 1000000 == 0) ? 3 : 4);\\n\"",
                "@@ -21,13 +25,56 @@ msgstr \"Denelaat\"",
                "-msgid \"th\"",
                "-msgstr \"<sup>e</sup>\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"st\"",
                "-msgstr \"<sup>a\u00c3\u00b1</sup>\"",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"nd\"",
                "-msgstr \"<sup>l</sup>\"",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"rd\"",
                "-msgstr \"<sup>e</sup>\"",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "@@ -38,2 +85,5 @@ msgstr[0] \"%(value).1f milion\"",
                " msgstr[1] \"%(value).1f milion\"",
                "+msgstr[2] \"%(value).1f milion\"",
                "+msgstr[3] \"%(value).1f milion\"",
                "+msgstr[4] \"%(value).1f milion\"",
                "@@ -44,2 +94,5 @@ msgstr[0] \"%(value)s million\"",
                " msgstr[1] \"%(value)s million\"",
                "+msgstr[2] \"%(value)s million\"",
                "+msgstr[3] \"%(value)s million\"",
                "+msgstr[4] \"%(value)s million\"",
                "@@ -50,2 +103,5 @@ msgstr[0] \"%(value).1f miliard\"",
                " msgstr[1] \"%(value).1f miliard\"",
                "+msgstr[2] \"%(value).1f miliard\"",
                "+msgstr[3] \"%(value).1f miliard\"",
                "+msgstr[4] \"%(value).1f miliard\"",
                "@@ -56,2 +112,5 @@ msgstr[0] \"%(value)s miliard\"",
                " msgstr[1] \"%(value)s miliard\"",
                "+msgstr[2] \"%(value)s miliard\"",
                "+msgstr[3] \"%(value)s miliard\"",
                "+msgstr[4] \"%(value)s miliard\"",
                "@@ -62,2 +121,5 @@ msgstr[0] \"%(value).1f bilion\"",
                " msgstr[1] \"%(value).1f bilion\"",
                "+msgstr[2] \"%(value).1f bilion\"",
                "+msgstr[3] \"%(value).1f bilion\"",
                "+msgstr[4] \"%(value).1f bilion\"",
                "@@ -68,2 +130,5 @@ msgstr[0] \"%(value)s bilion\"",
                " msgstr[1] \"%(value)s bilion\"",
                "+msgstr[2] \"%(value)s bilion\"",
                "+msgstr[3] \"%(value)s bilion\"",
                "+msgstr[4] \"%(value)s bilion\"",
                "@@ -74,2 +139,5 @@ msgstr[0] \"%(value).1f c'hadrilion\"",
                " msgstr[1] \"%(value).1f kadrilion\"",
                "+msgstr[2] \"%(value).1f kadrilion\"",
                "+msgstr[3] \"%(value).1f kadrilion\"",
                "+msgstr[4] \"%(value).1f kadrilion\"",
                "@@ -80,2 +148,5 @@ msgstr[0] \"%(value)s c'hadrilion\"",
                " msgstr[1] \"%(value)s kadrilion\"",
                "+msgstr[2] \"%(value)s kadrilion\"",
                "+msgstr[3] \"%(value)s kadrilion\"",
                "+msgstr[4] \"%(value)s kadrilion\"",
                "@@ -86,2 +157,5 @@ msgstr[0] \"%(value).1f c'hintilion\"",
                " msgstr[1] \"%(value).1f kintilion\"",
                "+msgstr[2] \"%(value).1f kintilion\"",
                "+msgstr[3] \"%(value).1f kintilion\"",
                "+msgstr[4] \"%(value).1f kintilion\"",
                "@@ -92,2 +166,5 @@ msgstr[0] \"%(value)s c'hintilion\"",
                " msgstr[1] \"%(value)s kintilion\"",
                "+msgstr[2] \"%(value)s kintilion\"",
                "+msgstr[3] \"%(value)s kintilion\"",
                "+msgstr[4] \"%(value)s kintilion\"",
                "@@ -98,2 +175,5 @@ msgstr[0] \"%(value).1f sekstilion\"",
                " msgstr[1] \"%(value).1f sekstilion\"",
                "+msgstr[2] \"%(value).1f sekstilion\"",
                "+msgstr[3] \"%(value).1f sekstilion\"",
                "+msgstr[4] \"%(value).1f sekstilion\"",
                "@@ -104,2 +184,5 @@ msgstr[0] \"%(value)s sekstilion\"",
                " msgstr[1] \"%(value)s sekstilion\"",
                "+msgstr[2] \"%(value)s sekstilion\"",
                "+msgstr[3] \"%(value)s sekstilion\"",
                "+msgstr[4] \"%(value)s sekstilion\"",
                "@@ -110,2 +193,5 @@ msgstr[0] \"%(value).1f septilion\"",
                " msgstr[1] \"%(value).1f septilion\"",
                "+msgstr[2] \"%(value).1f septilion\"",
                "+msgstr[3] \"%(value).1f septilion\"",
                "+msgstr[4] \"%(value).1f septilion\"",
                "@@ -116,2 +202,5 @@ msgstr[0] \"%(value)s septilion\"",
                " msgstr[1] \"%(value)s septilion\"",
                "+msgstr[2] \"%(value)s septilion\"",
                "+msgstr[3] \"%(value)s septilion\"",
                "+msgstr[4] \"%(value)s septilion\"",
                "@@ -122,2 +211,5 @@ msgstr[0] \"%(value).1f oktilion\"",
                " msgstr[1] \"%(value).1f oktilion\"",
                "+msgstr[2] \"%(value).1f oktilion\"",
                "+msgstr[3] \"%(value).1f oktilion\"",
                "+msgstr[4] \"%(value).1f oktilion\"",
                "@@ -128,2 +220,5 @@ msgstr[0] \"%(value)s oktilion\"",
                " msgstr[1] \"%(value)s oktilion\"",
                "+msgstr[2] \"%(value)s oktilion\"",
                "+msgstr[3] \"%(value)s oktilion\"",
                "+msgstr[4] \"%(value)s oktilion\"",
                "@@ -134,2 +229,5 @@ msgstr[0] \"%(value).1f nonilion\"",
                " msgstr[1] \"%(value).1f nonilion\"",
                "+msgstr[2] \"%(value).1f nonilion\"",
                "+msgstr[3] \"%(value).1f nonilion\"",
                "+msgstr[4] \"%(value).1f nonilion\"",
                "@@ -140,2 +238,5 @@ msgstr[0] \"%(value)s nonilion\"",
                " msgstr[1] \"%(value)s nonilion\"",
                "+msgstr[2] \"%(value)s nonilion\"",
                "+msgstr[3] \"%(value)s nonilion\"",
                "+msgstr[4] \"%(value)s nonilion\"",
                "@@ -146,2 +247,5 @@ msgstr[0] \"%(value).1f dekilion\"",
                " msgstr[1] \"%(value).1f dekilion\"",
                "+msgstr[2] \"%(value).1f dekilion\"",
                "+msgstr[3] \"%(value).1f dekilion\"",
                "+msgstr[4] \"%(value).1f dekilion\"",
                "@@ -152,2 +256,5 @@ msgstr[0] \"%(value)s dekilion\"",
                " msgstr[1] \"%(value)s dekilion\"",
                "+msgstr[2] \"%(value)s dekilion\"",
                "+msgstr[3] \"%(value)s dekilion\"",
                "+msgstr[4] \"%(value)s dekilion\"",
                "@@ -158,2 +265,5 @@ msgstr[0] \"%(value).1f gogol\"",
                " msgstr[1] \"%(value).1f gogol\"",
                "+msgstr[2] \"%(value).1f gogol\"",
                "+msgstr[3] \"%(value).1f gogol\"",
                "+msgstr[4] \"%(value).1f gogol\"",
                "@@ -164,2 +274,5 @@ msgstr[0] \"%(value)s gogol\"",
                " msgstr[1] \"%(value)s gogol\"",
                "+msgstr[2] \"%(value)s gogol\"",
                "+msgstr[3] \"%(value)s gogol\"",
                "+msgstr[4] \"%(value)s gogol\"",
                "@@ -201,6 +314,69 @@ msgstr \"dec'h\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "-msgstr \"%(delta)s zo\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -214,4 +390,7 @@ msgid \"a second ago\"",
                " msgid_plural \"%(count)s\u00c2\u00a0seconds ago\"",
                "-msgstr[0] \"un eilenn zo\"",
                "+msgstr[0] \"%(count)s\u00c2\u00a0eilenn zo\"",
                " msgstr[1] \"%(count)s\u00c2\u00a0eilenn zo\"",
                "+msgstr[2] \"%(count)s\u00c2\u00a0eilenn zo\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0eilenn zo\"",
                "+msgstr[4] \"%(count)s\u00c2\u00a0eilenn zo\"",
                "@@ -222,4 +401,7 @@ msgid \"a minute ago\"",
                " msgid_plural \"%(count)s\u00c2\u00a0minutes ago\"",
                "-msgstr[0] \"ur munud zo\"",
                "+msgstr[0] \"%(count)s\u00c2\u00a0munud zo\"",
                " msgstr[1] \"%(count)s\u00c2\u00a0munud zo\"",
                "+msgstr[2] \"%(count)s\u00c2\u00a0munud zo\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0munud zo\"",
                "+msgstr[4] \"%(count)s\u00c2\u00a0munud zo\"",
                "@@ -230,9 +412,75 @@ msgid \"an hour ago\"",
                " msgid_plural \"%(count)s\u00c2\u00a0hours ago\"",
                "-msgstr[0] \"un eurvezh zo\"",
                "+msgstr[0] \"%(count)s\u00c2\u00a0eurvezh zo\"",
                " msgstr[1] \"%(count)s\u00c2\u00a0eurvezh zo\"",
                "+msgstr[2] \"%(count)s\u00c2\u00a0eurvezh zo\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0eurvezh zo\"",
                "+msgstr[4] \"%(count)s\u00c2\u00a0eurvezh zo\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"a-benn %(delta)s \"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+msgstr[2] \"\"",
                "+msgstr[3] \"\"",
                "+msgstr[4] \"\"",
                "@@ -243,4 +491,7 @@ msgid \"a second from now\"",
                " msgid_plural \"%(count)s\u00c2\u00a0seconds from now\"",
                "-msgstr[0] \"a-benn un eilenn\"",
                "+msgstr[0] \"a-benn %(count)s\u00c2\u00a0eilenn\"",
                " msgstr[1] \"a-benn %(count)s\u00c2\u00a0eilenn\"",
                "+msgstr[2] \"a-benn %(count)s\u00c2\u00a0eilenn\"",
                "+msgstr[3] \"a-benn %(count)s\u00c2\u00a0eilenn\"",
                "+msgstr[4] \"a-benn %(count)s\u00c2\u00a0eilenn\"",
                "@@ -251,4 +502,7 @@ msgid \"a minute from now\"",
                " msgid_plural \"%(count)s\u00c2\u00a0minutes from now\"",
                "-msgstr[0] \"a-benn ur munud\"",
                "+msgstr[0] \"a-benn %(count)s\u00c2\u00a0munud\"",
                " msgstr[1] \"a-benn %(count)s\u00c2\u00a0munud\"",
                "+msgstr[2] \"a-benn %(count)s\u00c2\u00a0munud\"",
                "+msgstr[3] \"a-benn %(count)s\u00c2\u00a0munud\"",
                "+msgstr[4] \"a-benn %(count)s\u00c2\u00a0munud\"",
                "@@ -259,3 +513,6 @@ msgid \"an hour from now\"",
                " msgid_plural \"%(count)s\u00c2\u00a0hours from now\"",
                "-msgstr[0] \"a-benn un eurvezh\"",
                "+msgstr[0] \"a-benn %(count)s\u00c2\u00a0eurvezh\"",
                " msgstr[1] \"a-benn %(count)s\u00c2\u00a0eurvezh\"",
                "+msgstr[2] \"a-benn %(count)s\u00c2\u00a0eurvezh\"",
                "+msgstr[3] \"a-benn %(count)s\u00c2\u00a0eurvezh\"",
                "+msgstr[4] \"a-benn %(count)s\u00c2\u00a0eurvezh\"",
                "diff --git a/django/contrib/humanize/locale/ca/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/ca/LC_MESSAGES/django.mo",
                "index 5a2ba57460..b811b34072 100644",
                "Binary files a/django/contrib/humanize/locale/ca/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/ca/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/ca/LC_MESSAGES/django.po b/django/contrib/humanize/locale/ca/LC_MESSAGES/django.po",
                "index 96477383db..39d8420e23 100644",
                "--- a/django/contrib/humanize/locale/ca/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/ca/LC_MESSAGES/django.po",
                "@@ -5,2 +5,3 @@",
                " # Carles Barrob\u00c3\u00a9s <carles@barrobes.com>, 2011,2014",
                "+# GerardoGa <ggarciamaristany@gmail.com>, 2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "@@ -10,5 +11,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-19 16:40+0000\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 07:46+0000\\n\"",
                "+\"Last-Translator: GerardoGa <ggarciamaristany@gmail.com>\\n\"",
                " \"Language-Team: Catalan (http://www.transifex.com/django/django/language/\"",
                "@@ -24,13 +25,56 @@ msgstr \"Humanitzar\"",
                "-msgid \"th\"",
                "-msgstr \"\u00c3\u00a8\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"st\"",
                "-msgstr \"r\"",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"nd\"",
                "-msgstr \"n\"",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "-msgid \"rd\"",
                "-msgstr \"r\"",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"\"",
                "@@ -204,6 +248,51 @@ msgstr \"ahir\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "-msgstr \"fa %(delta)s\"",
                "+msgstr \"Fa %(delta)s \"",
                "+",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "@@ -236,6 +325,51 @@ msgstr[1] \"fa %(count)s hores\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"%(delta)s des d'ara\"",
                "+msgstr \"\"",
                "+",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"\"",
                "+msgstr[1] \"\"",
                "diff --git a/django/contrib/humanize/locale/de/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/de/LC_MESSAGES/django.mo",
                "index 6a933d80b8..1cc6ef878f 100644",
                "Binary files a/django/contrib/humanize/locale/de/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/de/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/de/LC_MESSAGES/django.po b/django/contrib/humanize/locale/de/LC_MESSAGES/django.po",
                "index ed6b213d47..e8720a48b1 100644",
                "--- a/django/contrib/humanize/locale/de/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/de/LC_MESSAGES/django.po",
                "@@ -5,4 +5,3 @@",
                " # Claude Paroz <claude@2xlibre.net>, 2013",
                "-# Jannis Leidel <jannis@leidel.info>, 2011,2013-2014",
                "-# Maximilian Merz <django@mxmerz.de>, 2018",
                "+# Jannis Leidel <jannis@leidel.info>, 2011,2013-2014,2018",
                " msgid \"\"",
                "@@ -11,5 +10,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2018-03-13 16:07+0100\\n\"",
                "-\"Last-Translator: Jannis Leidel <jannis@leidel.info>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-14 08:29+0000\\n\"",
                "+\"Last-Translator: Florian Apolloner <florian@apolloner.eu>\\n\"",
                " \"Language-Team: German (http://www.transifex.com/django/django/language/de/)\\n\"",
                "@@ -24,13 +23,56 @@ msgstr \"Humanize\"",
                "-msgid \"th\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"nd\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"rd\"",
                "-msgstr \".\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "@@ -204,5 +246,51 @@ msgstr \"gestern\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                " msgid \"%(delta)s ago\"",
                "-msgstr \"vor %(delta)s\"",
                "+msgstr \"%(delta)s her\"",
                "+",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d Jahr\"",
                "+msgstr[1] \"%d Jahre\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d Monat\"",
                "+msgstr[1] \"%d Monate\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d Woche\"",
                "+msgstr[1] \"%d Wochen\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d Tag\"",
                "+msgstr[1] \"%d Tage\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d Stunde\"",
                "+msgstr[1] \"%d Stunden\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d Minute\"",
                "+msgstr[1] \"%d Minuten\"",
                "@@ -235,31 +323,30 @@ msgstr[1] \"vor %(count)s Stunden\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"in %(delta)s\"",
                "+msgstr \"%(delta)s von jetzt an\"",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                " #, python-format",
                " msgctxt \"naturaltime-future\"",
                "-msgid \"%(delta)s from now\"",
                "-msgstr \"in %(delta)s\"",
                "-",
                "-#, python-format",
                "-msgctxt \"naturaltime-past\"",
                "-msgid \"%d day\"",
                "-msgid_plural \"%d days\"",
                "-msgstr[0] \"%d\u00c2\u00a0Tag\"",
                "-msgstr[1] \"%d\u00c2\u00a0Tagen\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d Jahr\"",
                "+msgstr[1] \"%d Jahre\"",
                " #, python-format",
                "-msgctxt \"naturaltime-past\"",
                "+msgctxt \"naturaltime-future\"",
                " msgid \"%d month\"",
                " msgid_plural \"%d months\"",
                "-msgstr[0] \"%d\u00c2\u00a0Monat\"",
                "-msgstr[1] \"%d\u00c2\u00a0Monaten\"",
                "+msgstr[0] \"%d Monat\"",
                "+msgstr[1] \"%d Monate\"",
                " #, python-format",
                "-msgctxt \"naturaltime-past\"",
                "-msgid \"%d year\"",
                "-msgid_plural \"%d years\"",
                "-msgstr[0] \"%d\u00c2\u00a0Jahr\"",
                "-msgstr[1] \"%d\u00c2\u00a0Jahren\"",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d Woche\"",
                "+msgstr[1] \"%d Wochen\"",
                "@@ -269,4 +356,4 @@ msgid \"%d day\"",
                " msgid_plural \"%d days\"",
                "-msgstr[0] \"%d\u00c2\u00a0Tag\"",
                "-msgstr[1] \"%d\u00c2\u00a0Tagen\"",
                "+msgstr[0] \"%d Tag\"",
                "+msgstr[1] \"%d Tage\"",
                "@@ -274,6 +361,6 @@ msgstr[1] \"%d\u00c2\u00a0Tagen\"",
                " msgctxt \"naturaltime-future\"",
                "-msgid \"%d month\"",
                "-msgid_plural \"%d months\"",
                "-msgstr[0] \"%d\u00c2\u00a0Monat\"",
                "-msgstr[1] \"%d\u00c2\u00a0Monaten\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d Stunde\"",
                "+msgstr[1] \"%d Stunden\"",
                "@@ -281,6 +368,6 @@ msgstr[1] \"%d\u00c2\u00a0Monaten\"",
                " msgctxt \"naturaltime-future\"",
                "-msgid \"%d year\"",
                "-msgid_plural \"%d years\"",
                "-msgstr[0] \"%d\u00c2\u00a0Jahr\"",
                "-msgstr[1] \"%d\u00c2\u00a0Jahren\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d Minute\"",
                "+msgstr[1] \"%d Minuten\"",
                "diff --git a/django/contrib/humanize/locale/el/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/el/LC_MESSAGES/django.mo",
                "index 82dc7d7ef5..2e76853911 100644",
                "Binary files a/django/contrib/humanize/locale/el/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/el/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/el/LC_MESSAGES/django.po b/django/contrib/humanize/locale/el/LC_MESSAGES/django.po",
                "index 6b50a4d094..5a8171ae3e 100644",
                "--- a/django/contrib/humanize/locale/el/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/el/LC_MESSAGES/django.po",
                "@@ -6,2 +6,3 @@",
                " # Kostas Papadimitriou <vinilios@gmail.com>, 2012",
                "+# Nick Mavrakis <mavrakis.n@gmail.com>, 2018",
                " # Nikolas Demiridis <nikolas@demiridis.gr>, 2014",
                "@@ -12,5 +13,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 18:54+0000\\n\"",
                "-\"Last-Translator: P\u00c3\u00a3no\u00c8\u0099 <panos.laganakos@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 10:19+0000\\n\"",
                "+\"Last-Translator: Nick Mavrakis <mavrakis.n@gmail.com>\\n\"",
                " \"Language-Team: Greek (http://www.transifex.com/django/django/language/el/)\\n\"",
                "@@ -25,13 +26,56 @@ msgstr \"\u00ce\u0095\u00ce\u00be\u00ce\u00b1\u00ce\u00bd\u00ce\u00b8\u00cf\u0081\u00cf\u008e\u00cf\u0080\u00ce\u00b9\u00cf\u0083\u00ce\u00b7\"",
                "-msgid \"th\"",
                "-msgstr \"\u00ce\u00b7\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \"\u00ce\u00b7\"",
                "-",
                "-msgid \"nd\"",
                "-msgstr \"\u00ce\u00b7\"",
                "-",
                "-msgid \"rd\"",
                "-msgstr \"\u00ce\u00b7\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00ce\u00bf\"",
                "@@ -205,4 +249,5 @@ msgstr \"\u00cf\u0087\u00ce\u00b8\u00ce\u00b5\u00cf\u0082\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "@@ -210,2 +255,46 @@ msgstr \"\u00cf\u0080\u00cf\u0081\u00ce\u00b9\u00ce\u00bd \u00ce\u00b1\u00cf\u0080\u00cf\u008c %(delta)s\"",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d \u00cf\u0087\u00cf\u0081\u00cf\u008c\u00ce\u00bd\u00ce\u00bf\u00cf\u0082\"",
                "+msgstr[1] \"%d \u00cf\u0087\u00cf\u0081\u00cf\u008c\u00ce\u00bd\u00ce\u00b9\u00ce\u00b1\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d \u00ce\u00bc\u00ce\u00ae\u00ce\u00bd\u00ce\u00b1\u00cf\u0082\"",
                "+msgstr[1] \"%d \u00ce\u00bc\u00ce\u00ae\u00ce\u00bd\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d \u00ce\u00b5\u00ce\u00b2\u00ce\u00b4\u00ce\u00bf\u00ce\u00bc\u00ce\u00ac\u00ce\u00b4\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00ce\u00b5\u00ce\u00b2\u00ce\u00b4\u00ce\u00bf\u00ce\u00bc\u00ce\u00ac\u00ce\u00b4\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d \u00ce\u00bc\u00ce\u00ad\u00cf\u0081\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00ce\u00bc\u00ce\u00ad\u00cf\u0081\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d \u00cf\u008e\u00cf\u0081\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00cf\u008e\u00cf\u0081\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d \u00ce\u00bb\u00ce\u00b5\u00cf\u0080\u00cf\u0084\u00cf\u008c\"",
                "+msgstr[1] \"%d \u00ce\u00bb\u00ce\u00b5\u00cf\u0080\u00cf\u0084\u00ce\u00ac\"",
                "+",
                " msgid \"now\"",
                "@@ -237,4 +326,5 @@ msgstr[1] \"%(count)s \u00cf\u008e\u00cf\u0081\u00ce\u00b5\u00cf\u0082 \u00cf\u0080\u00cf\u0081\u00ce\u00af\u00ce\u00bd\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "@@ -242,2 +332,46 @@ msgstr \"\u00cf\u0083\u00ce\u00b5 %(delta)s\"",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d \u00cf\u0087\u00cf\u0081\u00cf\u008c\u00ce\u00bd\u00ce\u00bf\u00cf\u0082\"",
                "+msgstr[1] \"%d \u00cf\u0087\u00cf\u0081\u00cf\u008c\u00ce\u00bd\u00ce\u00b9\u00ce\u00b1\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d \u00ce\u00bc\u00ce\u00ae\u00ce\u00bd\u00ce\u00b1\u00cf\u0082\"",
                "+msgstr[1] \"%d \u00ce\u00bc\u00ce\u00ae\u00ce\u00bd\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d \u00ce\u00b5\u00ce\u00b2\u00ce\u00b4\u00ce\u00bf\u00ce\u00bc\u00ce\u00ac\u00ce\u00b4\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00ce\u00b5\u00ce\u00b2\u00ce\u00b4\u00ce\u00bf\u00ce\u00bc\u00ce\u00ac\u00ce\u00b4\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d \u00ce\u00bc\u00ce\u00ad\u00cf\u0081\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00ce\u00bc\u00ce\u00ad\u00cf\u0081\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d \u00cf\u008e\u00cf\u0081\u00ce\u00b1\"",
                "+msgstr[1] \"%d \u00cf\u008e\u00cf\u0081\u00ce\u00b5\u00cf\u0082\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d \u00ce\u00bb\u00ce\u00b5\u00cf\u0080\u00cf\u0084\u00cf\u008c\"",
                "+msgstr[1] \"%d \u00ce\u00bb\u00ce\u00b5\u00cf\u0080\u00cf\u0084\u00ce\u00ac\"",
                "+",
                " #. Translators: please keep a non-breaking space (U+00A0)",
                "diff --git a/django/contrib/humanize/locale/eu/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/eu/LC_MESSAGES/django.mo",
                "index f0a61b2166..99434dfc13 100644",
                "Binary files a/django/contrib/humanize/locale/eu/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/eu/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/eu/LC_MESSAGES/django.po b/django/contrib/humanize/locale/eu/LC_MESSAGES/django.po",
                "index 281f2e2d92..582a227fca 100644",
                "--- a/django/contrib/humanize/locale/eu/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/eu/LC_MESSAGES/django.po",
                "@@ -5,5 +5,5 @@",
                " # Ander Mart\u00c3\u00adnez <ander.basaundi@gmail.com>, 2014",
                "-# Eneko Illarramendi <eneko@illarra.com>, 2017",
                "+# Eneko Illarramendi <eneko@illarra.com>, 2017-2018",
                " # Jannis Leidel <jannis@leidel.info>, 2011",
                "-# julen <julenx@gmail.com>, 2014",
                "+# julen, 2014",
                " msgid \"\"",
                "@@ -12,4 +12,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 18:54+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-23 14:56+0000\\n\"",
                " \"Last-Translator: Eneko Illarramendi <eneko@illarra.com>\\n\"",
                "@@ -25,13 +25,56 @@ msgstr \"Humanizatu\"",
                "-msgid \"th\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"nd\"",
                "-msgstr \".\"",
                "-",
                "-msgid \"rd\"",
                "-msgstr \".\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "@@ -205,4 +248,5 @@ msgstr \"atzo\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "@@ -210,2 +254,46 @@ msgstr \"duela %(delta)s\"",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"urte %d\"",
                "+msgstr[1] \"%d urte\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"hilabete %d\"",
                "+msgstr[1] \"%d hilabete\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"aste %d\"",
                "+msgstr[1] \"%d aste\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"egun %d\"",
                "+msgstr[1] \"%d egun\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"ordu %d\"",
                "+msgstr[1] \"%d ordu\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"minutu %d\"",
                "+msgstr[1] \"%d minutu\"",
                "+",
                " msgid \"now\"",
                "@@ -219,3 +307,3 @@ msgid_plural \"%(count)s\u00c2\u00a0seconds ago\"",
                " msgstr[0] \"duela segundu bat\"",
                "-msgstr[1] \"duela %(count)s\u00c2\u00a0segundu\"",
                "+msgstr[1] \"duela\u00c2\u00a0%(count)s\u00c2\u00a0segundu\"",
                "@@ -227,3 +315,3 @@ msgid_plural \"%(count)s\u00c2\u00a0minutes ago\"",
                " msgstr[0] \"duela minutu bat\"",
                "-msgstr[1] \"duela %(count)s minutu\"",
                "+msgstr[1] \"duela\u00c2\u00a0%(count)s\u00c2\u00a0minutu\"",
                "@@ -235,6 +323,7 @@ msgid_plural \"%(count)s\u00c2\u00a0hours ago\"",
                " msgstr[0] \"duela ordubete\"",
                "-msgstr[1] \"duela %(count)s\u00c2\u00a0ordu\"",
                "+msgstr[1] \"duela\u00c2\u00a0%(count)s\u00c2\u00a0ordu\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "@@ -242,2 +331,46 @@ msgstr \"%(delta)s barru\"",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"urte %d\"",
                "+msgstr[1] \"%d urte\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"hilabete %d\"",
                "+msgstr[1] \"%d hilabete\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"aste %d\"",
                "+msgstr[1] \"%d aste\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"egun %d\"",
                "+msgstr[1] \"%d egun\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"ordu %d\"",
                "+msgstr[1] \"%d ordu\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"minutu %d\"",
                "+msgstr[1] \"%d minutu\"",
                "+",
                " #. Translators: please keep a non-breaking space (U+00A0)",
                "diff --git a/django/contrib/humanize/locale/sk/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/sk/LC_MESSAGES/django.mo",
                "index 677ac1e941..633b9a925d 100644",
                "Binary files a/django/contrib/humanize/locale/sk/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/sk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/sk/LC_MESSAGES/django.po b/django/contrib/humanize/locale/sk/LC_MESSAGES/django.po",
                "index b81353a38b..e8d8d3ab3b 100644",
                "--- a/django/contrib/humanize/locale/sk/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/sk/LC_MESSAGES/django.po",
                "@@ -6,3 +6,3 @@",
                " # Marian Andre <marian@andre.sk>, 2012-2013",
                "-# Martin T\u00c3\u00b3th <ezimir@gmail.com>, 2017",
                "+# Martin T\u00c3\u00b3th <ezimir@gmail.com>, 2017-2018",
                " msgid \"\"",
                "@@ -11,4 +11,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 18:54+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-05 17:04+0000\\n\"",
                " \"Last-Translator: Martin T\u00c3\u00b3th <ezimir@gmail.com>\\n\"",
                "@@ -19,3 +19,4 @@ msgstr \"\"",
                " \"Language: sk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n == 1 ? 0 : n % 1 == 0 && n \"",
                "+\">= 2 && n <= 4 ? 1 : n % 1 != 0 ? 2: 3);\\n\"",
                "@@ -24,13 +25,56 @@ msgstr \"Po\u00c4\u00beud\u00c5\u00a1tenie\"",
                "-msgid \"th\"",
                "-msgstr \"th\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \"st\"",
                "-",
                "-msgid \"nd\"",
                "-msgstr \"nd\"",
                "-",
                "-msgid \"rd\"",
                "-msgstr \"rd\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}.\"",
                "@@ -42,2 +86,3 @@ msgstr[1] \"%(value).1f mili\u00c3\u00b3nu\"",
                " msgstr[2] \"%(value).1f mili\u00c3\u00b3nu\"",
                "+msgstr[3] \"%(value).1f mili\u00c3\u00b3nu\"",
                "@@ -49,2 +94,3 @@ msgstr[1] \" %(value)s mili\u00c3\u00b3ny\"",
                " msgstr[2] \" %(value)s mili\u00c3\u00b3nov\"",
                "+msgstr[3] \" %(value)s mili\u00c3\u00b3nov\"",
                "@@ -56,2 +102,3 @@ msgstr[1] \"%(value).1f miliardy\"",
                " msgstr[2] \"%(value).1f mili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value).1f mili\u00c3\u00a1rd\"",
                "@@ -63,2 +110,3 @@ msgstr[1] \" %(value)s miliardy\"",
                " msgstr[2] \" %(value)s mili\u00c3\u00a1rd\"",
                "+msgstr[3] \" %(value)s mili\u00c3\u00a1rd\"",
                "@@ -70,2 +118,3 @@ msgstr[1] \"%(value).1f bili\u00c3\u00b3ny\"",
                " msgstr[2] \"%(value).1f bili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value).1f bili\u00c3\u00b3nov\"",
                "@@ -77,2 +126,3 @@ msgstr[1] \"%(value)s bili\u00c3\u00b3ny\"",
                " msgstr[2] \"%(value)s bili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value)s bili\u00c3\u00b3nov\"",
                "@@ -84,2 +134,3 @@ msgstr[1] \"%(value).1f biliardy\"",
                " msgstr[2] \"%(value).1f bili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value).1f bili\u00c3\u00a1rd\"",
                "@@ -91,2 +142,3 @@ msgstr[1] \"%(value)s biliardy\"",
                " msgstr[2] \"%(value)s bili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value)s bili\u00c3\u00a1rd\"",
                "@@ -98,2 +150,3 @@ msgstr[1] \"%(value).1f trili\u00c3\u00b3nu\"",
                " msgstr[2] \"%(value).1f trili\u00c3\u00b3nu\"",
                "+msgstr[3] \"%(value).1f trili\u00c3\u00b3nu\"",
                "@@ -105,2 +158,3 @@ msgstr[1] \"%(value)s trili\u00c3\u00b3ny\"",
                " msgstr[2] \"%(value)s trili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value)s trili\u00c3\u00b3nov\"",
                "@@ -112,2 +166,3 @@ msgstr[1] \"%(value).1f triliardy\"",
                " msgstr[2] \"%(value).1f trili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value).1f trili\u00c3\u00a1rd\"",
                "@@ -119,2 +174,3 @@ msgstr[1] \"%(value)s triliardy\"",
                " msgstr[2] \"%(value)s trili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value)s trili\u00c3\u00a1rd\"",
                "@@ -126,2 +182,3 @@ msgstr[1] \"%(value).1f kvadrili\u00c3\u00b3nu\"",
                " msgstr[2] \"%(value).1f kvadrili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value).1f kvadrili\u00c3\u00b3nov\"",
                "@@ -133,2 +190,3 @@ msgstr[1] \"%(value)s kvadrili\u00c3\u00b3ny\"",
                " msgstr[2] \"%(value)s kvadrili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value)s kvadrili\u00c3\u00b3nov\"",
                "@@ -140,2 +198,3 @@ msgstr[1] \"%(value).1f kvadriliardy\"",
                " msgstr[2] \"%(value).1f kvadrili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value).1f kvadrili\u00c3\u00a1rd\"",
                "@@ -147,2 +206,3 @@ msgstr[1] \"%(value)s kvadriliardy\"",
                " msgstr[2] \"%(value)s kvadrili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value)s kvadrili\u00c3\u00a1rd\"",
                "@@ -154,2 +214,3 @@ msgstr[1] \"%(value).1f kvintili\u00c3\u00b3nu\"",
                " msgstr[2] \"%(value).1f kvintili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value).1f kvintili\u00c3\u00b3nov\"",
                "@@ -161,2 +222,3 @@ msgstr[1] \"%(value)s kvintili\u00c3\u00b3ny\"",
                " msgstr[2] \"%(value)s kvintili\u00c3\u00b3nov\"",
                "+msgstr[3] \"%(value)s kvintili\u00c3\u00b3nov\"",
                "@@ -168,2 +230,3 @@ msgstr[1] \"%(value).1f kvintiliardy\"",
                " msgstr[2] \"%(value).1f kvintili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value).1f kvintili\u00c3\u00a1rd\"",
                "@@ -175,2 +238,3 @@ msgstr[1] \"%(value)s kvintiliardy\"",
                " msgstr[2] \"%(value)s kvintili\u00c3\u00a1rd\"",
                "+msgstr[3] \"%(value)s kvintili\u00c3\u00a1rd\"",
                "@@ -182,2 +246,3 @@ msgstr[1] \"%(value).1f googol\"",
                " msgstr[2] \"%(value).1f googol\"",
                "+msgstr[3] \"%(value).1f googol\"",
                "@@ -189,2 +254,3 @@ msgstr[1] \"%(value)s googol\"",
                " msgstr[2] \"%(value)s googol\"",
                "+msgstr[3] \"%(value)s googol\"",
                "@@ -226,4 +292,5 @@ msgstr \"v\u00c4\u008dera\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "@@ -231,2 +298,58 @@ msgstr \"pred %(delta)s\"",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d rokom\"",
                "+msgstr[1] \"%d rokmi\"",
                "+msgstr[2] \"%d rokmi\"",
                "+msgstr[3] \"%d rokmi\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d mesiacom\"",
                "+msgstr[1] \"%d mesiacmi\"",
                "+msgstr[2] \"%d mesiacmi\"",
                "+msgstr[3] \"%d mesiacmi\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d t\u00c3\u00bd\u00c5\u00bede\u00c5\u0088\"",
                "+msgstr[1] \"%d t\u00c3\u00bd\u00c5\u00bedne\"",
                "+msgstr[2] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ami\"",
                "+msgstr[3] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ami\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d d\u00c5\u0088om\"",
                "+msgstr[1] \"%d d\u00c5\u0088ami\"",
                "+msgstr[2] \"%d d\u00c5\u0088ami\"",
                "+msgstr[3] \"%d d\u00c5\u0088ami\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d hodinou\"",
                "+msgstr[1] \"%d hodinami\"",
                "+msgstr[2] \"%d hodinami\"",
                "+msgstr[3] \"%d hodinami\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d min\u00c3\u00batou\"",
                "+msgstr[1] \"%d min\u00c3\u00batami\"",
                "+msgstr[2] \"%d min\u00c3\u00batami\"",
                "+msgstr[3] \"%d min\u00c3\u00batami\"",
                "+",
                " msgid \"now\"",
                "@@ -242,2 +365,3 @@ msgstr[1] \"pred %(count)s\u00c2\u00a0sekundami\"",
                " msgstr[2] \"pred %(count)s\u00c2\u00a0sekundami\"",
                "+msgstr[3] \"pred %(count)s\u00c2\u00a0sekundami\"",
                "@@ -251,2 +375,3 @@ msgstr[1] \"pred %(count)s\u00c2\u00a0min\u00c3\u00batami\"",
                " msgstr[2] \"pred %(count)s\u00c2\u00a0min\u00c3\u00batami\"",
                "+msgstr[3] \"pred %(count)s\u00c2\u00a0min\u00c3\u00batami\"",
                "@@ -260,7 +385,65 @@ msgstr[1] \"pred %(count)s\u00c2\u00a0hodinami\"",
                " msgstr[2] \"pred %(count)s\u00c2\u00a0hodinami\"",
                "+msgstr[3] \"pred %(count)s\u00c2\u00a0hodinami\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"%(delta)s odteraz\"",
                "+msgstr \"o %(delta)s\"",
                "+",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d rok\"",
                "+msgstr[1] \"%d roky\"",
                "+msgstr[2] \"%d rokov\"",
                "+msgstr[3] \"%d rokov\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d mesiac\"",
                "+msgstr[1] \"%d mesiace\"",
                "+msgstr[2] \"%d mesiacov\"",
                "+msgstr[3] \"%d mesiacov\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d t\u00c3\u00bd\u00c5\u00bede\u00c5\u0088\"",
                "+msgstr[1] \"%d t\u00c3\u00bd\u00c5\u00bedne\"",
                "+msgstr[2] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ov\"",
                "+msgstr[3] \"%d t\u00c3\u00bd\u00c5\u00bed\u00c5\u0088ov\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d de\u00c5\u0088\"",
                "+msgstr[1] \"%d dni\"",
                "+msgstr[2] \"%d dn\u00c3\u00ad\"",
                "+msgstr[3] \"%d dn\u00c3\u00ad\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d hodina\"",
                "+msgstr[1] \"%d hodiny\"",
                "+msgstr[2] \"%d hod\u00c3\u00adn\"",
                "+msgstr[3] \"%d hod\u00c3\u00adn\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d min\u00c3\u00bata\"",
                "+msgstr[1] \"%d min\u00c3\u00baty\"",
                "+msgstr[2] \"%d min\u00c3\u00bat\"",
                "+msgstr[3] \"%d min\u00c3\u00bat\"",
                "@@ -272,4 +455,5 @@ msgid_plural \"%(count)s\u00c2\u00a0seconds from now\"",
                " msgstr[0] \"o sekundu\"",
                "-msgstr[1] \"%(count)s\u00c2\u00a0sek\u00c3\u00band odteraz\"",
                "-msgstr[2] \"%(count)s\u00c2\u00a0sek\u00c3\u00band odteraz\"",
                "+msgstr[1] \"o %(count)s\u00c2\u00a0sek\u00c3\u00band\"",
                "+msgstr[2] \"o %(count)s\u00c2\u00a0sek\u00c3\u00band\"",
                "+msgstr[3] \"o %(count)s\u00c2\u00a0sek\u00c3\u00band\"",
                "@@ -281,4 +465,5 @@ msgid_plural \"%(count)s\u00c2\u00a0minutes from now\"",
                " msgstr[0] \"o min\u00c3\u00batu\"",
                "-msgstr[1] \"%(count)s\u00c2\u00a0min\u00c3\u00bat odteraz\"",
                "-msgstr[2] \"%(count)s\u00c2\u00a0min\u00c3\u00bat odteraz\"",
                "+msgstr[1] \"o %(count)s\u00c2\u00a0min\u00c3\u00bat\"",
                "+msgstr[2] \"o %(count)s\u00c2\u00a0min\u00c3\u00bat\"",
                "+msgstr[3] \"o %(count)s\u00c2\u00a0min\u00c3\u00bat\"",
                "@@ -290,3 +475,4 @@ msgid_plural \"%(count)s\u00c2\u00a0hours from now\"",
                " msgstr[0] \"o hodinu\"",
                "-msgstr[1] \"%(count)s\u00c2\u00a0hod\u00c3\u00adn odteraz\"",
                "-msgstr[2] \"%(count)s\u00c2\u00a0hod\u00c3\u00adn odteraz\"",
                "+msgstr[1] \"o %(count)s\u00c2\u00a0hod\u00c3\u00adn\"",
                "+msgstr[2] \"o %(count)s\u00c2\u00a0hod\u00c3\u00adn\"",
                "+msgstr[3] \"o %(count)s\u00c2\u00a0hod\u00c3\u00adn\"",
                "diff --git a/django/contrib/humanize/locale/uk/LC_MESSAGES/django.mo b/django/contrib/humanize/locale/uk/LC_MESSAGES/django.mo",
                "index 0acb424249..fe9442db4a 100644",
                "Binary files a/django/contrib/humanize/locale/uk/LC_MESSAGES/django.mo and b/django/contrib/humanize/locale/uk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/humanize/locale/uk/LC_MESSAGES/django.po b/django/contrib/humanize/locale/uk/LC_MESSAGES/django.po",
                "index 72a57496a3..972f8c46a7 100644",
                "--- a/django/contrib/humanize/locale/uk/LC_MESSAGES/django.po",
                "+++ b/django/contrib/humanize/locale/uk/LC_MESSAGES/django.po",
                "@@ -8,2 +8,3 @@",
                " # Alex Bolotov <oleksandr.bolotov@gmail.com>, 2013",
                "+# Taras Korzhak <taras.korzhak96@gmail.com>, 2018",
                " msgid \"\"",
                "@@ -12,5 +13,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2015-01-17 11:07+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 19:21+0000\\n\"",
                "-\"Last-Translator: Mykola Zamkovoi <nickzam@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-24 20:06+0000\\n\"",
                "+\"Last-Translator: Taras Korzhak <taras.korzhak96@gmail.com>\\n\"",
                " \"Language-Team: Ukrainian (http://www.transifex.com/django/django/language/\"",
                "@@ -21,4 +22,6 @@ msgstr \"\"",
                " \"Language: uk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n\"",
                "-\"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != \"",
                "+\"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % \"",
                "+\"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || \"",
                "+\"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\\n\"",
                "@@ -27,13 +30,56 @@ msgstr \"\u00d0\u009e\u00d0\u00bb\u00d1\u008e\u00d0\u00b4\u00d0\u00bd\u00d1\u008e\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00b8\"",
                "-msgid \"th\"",
                "-msgstr \"-\u00d0\u00b8\u00d0\u00b9\"",
                "-",
                "-msgid \"st\"",
                "-msgstr \"-\u00d0\u00b8\u00d0\u00b9\"",
                "-",
                "-msgid \"nd\"",
                "-msgstr \"-\u00d0\u00b8\u00d0\u00b9\"",
                "-",
                "-msgid \"rd\"",
                "-msgstr \"-\u00d1\u0096\u00d0\u00b9\"",
                "+#. Translators: Ordinal format for 11 (11th), 12 (12th), and 13 (13th).",
                "+msgctxt \"ordinal 11, 12, 13\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 0, e.g. 80th.",
                "+msgctxt \"ordinal 0\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d1\u0082\u00d1\u008c\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 1, e.g. 81st, except 11.",
                "+msgctxt \"ordinal 1\"",
                "+msgid \"{}st\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 2, e.g. 82nd, except 12.",
                "+msgctxt \"ordinal 2\"",
                "+msgid \"{}nd\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 3, e.g. 83th, except 13.",
                "+msgctxt \"ordinal 3\"",
                "+msgid \"{}rd\"",
                "+msgstr \"{}\u00d1\u0096\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 4, e.g. 84th.",
                "+msgctxt \"ordinal 4\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 5, e.g. 85th.",
                "+msgctxt \"ordinal 5\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 6, e.g. 86th.",
                "+msgctxt \"ordinal 6\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 7, e.g. 87th.",
                "+msgctxt \"ordinal 7\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 8, e.g. 88th.",
                "+msgctxt \"ordinal 8\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "+",
                "+#. Translators: Ordinal format when value ends with 9, e.g. 89th.",
                "+msgctxt \"ordinal 9\"",
                "+msgid \"{}th\"",
                "+msgstr \"{}\u00d0\u00b8\u00d0\u00b9\"",
                "@@ -45,2 +91,3 @@ msgstr[1] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                " msgstr[2] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -52,2 +99,3 @@ msgstr[1] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -59,2 +107,3 @@ msgstr[1] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d1\u0096\u00d0\u00b2\"",
                "@@ -66,2 +115,3 @@ msgstr[1] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00bc\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u008f\u00d1\u0080\u00d0\u00b4\u00d1\u0096\u00d0\u00b2\"",
                "@@ -73,2 +123,3 @@ msgstr[1] \"%(value).1f \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -80,2 +131,3 @@ msgstr[1] \"%(value)s \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d1\u0082\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -87,2 +139,3 @@ msgstr[1] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -94,2 +147,3 @@ msgstr[1] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d0\u00b0\u00d0\u00b4\u00d1\u0080\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -101,2 +155,3 @@ msgstr[1] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -108,2 +163,3 @@ msgstr[1] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00ba\u00d0\u00b2\u00d1\u0096\u00d0\u00bd\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -115,2 +171,3 @@ msgstr[1] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -122,2 +179,3 @@ msgstr[1] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -129,2 +187,3 @@ msgstr[1] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -136,2 +195,3 @@ msgstr[1] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d1\u0081\u00d0\u00b5\u00d0\u00bf\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -143,2 +203,3 @@ msgstr[1] \"%(value).1f \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -150,2 +211,3 @@ msgstr[1] \"%(value)s \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00be\u00d0\u00ba\u00d1\u0082\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -157,2 +219,3 @@ msgstr[1] \"%(value).1f \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -164,2 +227,3 @@ msgstr[1] \"%(value)s \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00bd\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -171,2 +235,3 @@ msgstr[1] \"%(value).1f \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -178,2 +243,3 @@ msgstr[1] \"%(value)s \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00b4\u00d0\u00b5\u00d1\u0086\u00d0\u00b8\u00d0\u00bb\u00d1\u008c\u00d0\u00b9\u00d0\u00be\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "@@ -185,2 +251,3 @@ msgstr[1] \"%(value).1f \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d0\u00b8\"",
                " msgstr[2] \"%(value).1f \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value).1f \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2\"",
                "@@ -192,2 +259,3 @@ msgstr[1] \"%(value)s \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d0\u00b8\"",
                " msgstr[2] \"%(value)s \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%(value)s \u00d0\u00b3\u00d1\u0083\u00d0\u00b3\u00d0\u00be\u00d0\u00bb\u00d1\u0096\u00d0\u00b2\"",
                "@@ -229,4 +297,5 @@ msgstr \"\u00d0\u00b2\u00d1\u0087\u00d0\u00be\u00d1\u0080\u00d0\u00b0\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s ago\"",
                "@@ -234,2 +303,58 @@ msgstr \"%(delta)s \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "+#. Translators: 'naturaltime-past' strings will be included in",
                "+#. '%(delta)s ago'",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d \u00d1\u0080\u00d1\u0096\u00d0\u00ba\"",
                "+msgstr[1] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\"",
                "+msgstr[2] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\"",
                "+msgstr[2] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d \u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u008f\"",
                "+msgstr[2] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b0\"",
                "+msgstr[1] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-past\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b0\"",
                "+msgstr[1] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "+",
                " msgid \"now\"",
                "@@ -245,2 +370,3 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4\u00d0\u00b8 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "@@ -254,2 +380,3 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "@@ -263,7 +390,65 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8 \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd \u00d1\u0082\u00d0\u00be\u00d0\u00bc\u00d1\u0083\"",
                "+#. Translators: delta will contain a string like '2 months' or '1 month, 2",
                "+#. weeks'",
                " #, python-format",
                "-msgctxt \"naturaltime\"",
                " msgid \"%(delta)s from now\"",
                "-msgstr \"%(delta)s \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0082\u00d0\u00b5\u00d0\u00bf\u00d0\u00b5\u00d1\u0080\"",
                "+msgstr \"\u00d1\u0087\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b7 %(delta)s\"",
                "+",
                "+#. Translators: 'naturaltime-future' strings will be included in",
                "+#. '%(delta)s from now'",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d year\"",
                "+msgid_plural \"%d years\"",
                "+msgstr[0] \"%d \u00d1\u0080\u00d1\u0096\u00d0\u00ba\"",
                "+msgstr[1] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0080\u00d0\u00be\u00d0\u00ba\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d month\"",
                "+msgid_plural \"%d months\"",
                "+msgstr[0] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\"",
                "+msgstr[2] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u008f\u00d1\u0086\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d week\"",
                "+msgid_plural \"%d weeks\"",
                "+msgstr[0] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\"",
                "+msgstr[2] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d1\u0082\u00d0\u00b8\u00d0\u00b6\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d day\"",
                "+msgid_plural \"%d days\"",
                "+msgstr[0] \"%d \u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d1\u008c\"",
                "+msgstr[1] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\"",
                "+msgstr[2] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+msgstr[3] \"%d \u00d0\u00b4\u00d0\u00bd\u00d1\u0096\u00d0\u00b2\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d hour\"",
                "+msgid_plural \"%d hours\"",
                "+msgstr[0] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d1\u0083\"",
                "+msgstr[1] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\"",
                "+",
                "+#, python-format",
                "+msgctxt \"naturaltime-future\"",
                "+msgid \"%d minute\"",
                "+msgid_plural \"%d minutes\"",
                "+msgstr[0] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d1\u0083\"",
                "+msgstr[1] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8\"",
                "+msgstr[2] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "+msgstr[3] \"%d \u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\"",
                "@@ -277,2 +462,3 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4\u00d0\u00b8 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d1\u0081\u00d0\u00b5\u00d0\u00ba\u00d1\u0083\u00d0\u00bd\u00d0\u00b4 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "@@ -286,2 +472,3 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d1\u0085\u00d0\u00b2\u00d0\u00b8\u00d0\u00bb\u00d0\u00b8\u00d0\u00bd \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "@@ -295 +482,2 @@ msgstr[1] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8 \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                " msgstr[2] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "+msgstr[3] \"%(count)s\u00c2\u00a0\u00d0\u00b3\u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \u00d1\u0086\u00d1\u008c\u00d0\u00be\u00d0\u00b3\u00d0\u00be \u00d1\u0087\u00d0\u00b0\u00d1\u0081\u00d1\u0083\"",
                "diff --git a/django/contrib/postgres/locale/az/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/az/LC_MESSAGES/django.mo",
                "new file mode 100644",
                "index 0000000000..3ec4c9bb56",
                "Binary files /dev/null and b/django/contrib/postgres/locale/az/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/az/LC_MESSAGES/django.po b/django/contrib/postgres/locale/az/LC_MESSAGES/django.po",
                "new file mode 100644",
                "index 0000000000..05c9162d7d",
                "--- /dev/null",
                "+++ b/django/contrib/postgres/locale/az/LC_MESSAGES/django.po",
                "@@ -0,0 +1,112 @@",
                "+# This file is distributed under the same license as the Django package.",
                "+#",
                "+# Translators:",
                "+# Emin Mastizada <emin@linux.com>, 2018",
                "+msgid \"\"",
                "+msgstr \"\"",
                "+\"Project-Id-Version: django\\n\"",
                "+\"Report-Msgid-Bugs-To: \\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-09 13:45+0000\\n\"",
                "+\"Last-Translator: Emin Mastizada <emin@linux.com>\\n\"",
                "+\"Language-Team: Azerbaijani (http://www.transifex.com/django/django/language/\"",
                "+\"az/)\\n\"",
                "+\"MIME-Version: 1.0\\n\"",
                "+\"Content-Type: text/plain; charset=UTF-8\\n\"",
                "+\"Content-Transfer-Encoding: 8bit\\n\"",
                "+\"Language: az\\n\"",
                "+\"Plural-Forms: nplurals=2; plural=(n != 1);\\n\"",
                "+",
                "+msgid \"PostgreSQL extensions\"",
                "+msgstr \"PostgreSQL uzant\u00c4\u00b1lar\u00c4\u00b1\"",
                "+",
                "+#, python-format",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                "+msgstr \"Array-d\u00c9\u0099ki %(nth)s element t\u00c9\u0099sdiql\u00c9\u0099n\u00c9\u0099 bilmir:\"",
                "+",
                "+msgid \"Nested arrays must have the same length.\"",
                "+msgstr \"\u00c4\u00b0\u00c3\u00a7-i\u00c3\u00a7\u00c9\u0099 array-l\u00c9\u0099rin uzunlu\u00c4\u009fu eyni olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+",
                "+msgid \"Map of strings to strings/nulls\"",
                "+msgstr \"String-l\u00c9\u0099rin string/null-lara x\u00c9\u0099rit\u00c9\u0099l\u00c9\u0099nm\u00c9\u0099 c\u00c9\u0099dv\u00c9\u0099li\"",
                "+",
                "+#, python-format",
                "+msgid \"The value of \\\"%(key)s\\\" is not a string or null.\"",
                "+msgstr \"\\\"%(key)s\\\" d\u00c9\u0099y\u00c9\u0099ri string v\u00c9\u0099 ya null deyil.\"",
                "+",
                "+msgid \"A JSON object\"",
                "+msgstr \"JSON obyekt\"",
                "+",
                "+msgid \"Value must be valid JSON.\"",
                "+msgstr \"D\u00c9\u0099y\u00c9\u0099r d\u00c3\u00bczg\u00c3\u00bcn JSON olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+",
                "+msgid \"Could not load JSON data.\"",
                "+msgstr \"JSON m\u00c9\u0099lumat y\u00c3\u00bckl\u00c9\u0099n\u00c9\u0099 bilmir.\"",
                "+",
                "+msgid \"Input must be a JSON dictionary.\"",
                "+msgstr \"Giri\u00c5\u009f JSON l\u00c3\u00bc\u00c4\u009f\u00c9\u0099t olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+",
                "+#, python-format",
                "+msgid \"'%(value)s' value must be valid JSON.\"",
                "+msgstr \"'%(value)s' d\u00c9\u0099y\u00c9\u0099ri d\u00c3\u00bczg\u00c3\u00bcn JSON olmal\u00c4\u00b1d\u00c4\u00b1r.\"",
                "+",
                "+msgid \"Enter two valid values.\"",
                "+msgstr \"\u00c4\u00b0ki d\u00c3\u00bczg\u00c3\u00bcn d\u00c9\u0099y\u00c9\u0099r daxil edin.\"",
                "+",
                "+msgid \"The start of the range must not exceed the end of the range.\"",
                "+msgstr \"Aral\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n ba\u00c5\u009flan\u00c4\u009f\u00c4\u00b1c\u00c4\u00b1 biti\u00c5\u009find\u00c9\u0099n b\u00c3\u00b6y\u00c3\u00bck ola bilm\u00c9\u0099z.\"",
                "+",
                "+msgid \"Enter two whole numbers.\"",
                "+msgstr \"\u00c4\u00b0ki tam r\u00c9\u0099q\u00c9\u0099m daxil edin.\"",
                "+",
                "+msgid \"Enter two numbers.\"",
                "+msgstr \"\u00c4\u00b0ki r\u00c9\u0099q\u00c9\u0099m daxil edin.\"",
                "+",
                "+msgid \"Enter two valid date/times.\"",
                "+msgstr \"\u00c4\u00b0ki d\u00c3\u00bczg\u00c3\u00bcn tarix/vaxt daxil edin.\"",
                "+",
                "+msgid \"Enter two valid dates.\"",
                "+msgstr \"\u00c4\u00b0ki d\u00c3\u00bczg\u00c3\u00bcn tarix daxil edin.\"",
                "+",
                "+#, python-format",
                "+msgid \"\"",
                "+\"List contains %(show_value)d item, it should contain no more than \"",
                "+\"%(limit_value)d.\"",
                "+msgid_plural \"\"",
                "+\"List contains %(show_value)d items, it should contain no more than \"",
                "+\"%(limit_value)d.\"",
                "+msgstr[0] \"\"",
                "+\"Siyah\u00c4\u00b1da %(show_value)d element var, \u00c9\u0099n \u00c3\u00a7ox %(limit_value)d ola bil\u00c9\u0099r.\"",
                "+msgstr[1] \"\"",
                "+\"Siyah\u00c4\u00b1da %(show_value)d element var, \u00c9\u0099n \u00c3\u00a7ox %(limit_value)d ola bil\u00c9\u0099r.\"",
                "+",
                "+#, python-format",
                "+msgid \"\"",
                "+\"List contains %(show_value)d item, it should contain no fewer than \"",
                "+\"%(limit_value)d.\"",
                "+msgid_plural \"\"",
                "+\"List contains %(show_value)d items, it should contain no fewer than \"",
                "+\"%(limit_value)d.\"",
                "+msgstr[0] \"\"",
                "+\"Siyah\u00c4\u00b1da %(show_value)d element var, \u00c9\u0099n az %(limit_value)d ola bil\u00c9\u0099r.\"",
                "+msgstr[1] \"\"",
                "+\"Siyah\u00c4\u00b1da %(show_value)d element var, \u00c9\u0099n az %(limit_value)d ola bil\u00c9\u0099r.\"",
                "+",
                "+#, python-format",
                "+msgid \"Some keys were missing: %(keys)s\"",
                "+msgstr \"B\u00c9\u0099zi a\u00c3\u00a7arlar \u00c9\u0099ksikdir: %(keys)s\"",
                "+",
                "+#, python-format",
                "+msgid \"Some unknown keys were provided: %(keys)s\"",
                "+msgstr \"B\u00c9\u0099zi bilinm\u00c9\u0099y\u00c9\u0099n a\u00c3\u00a7arlar t\u00c9\u0099chiz edilib: %(keys)s\"",
                "+",
                "+#, python-format",
                "+msgid \"\"",
                "+\"Ensure that this range is completely less than or equal to %(limit_value)s.\"",
                "+msgstr \"Bu aral\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n %(limit_value)s v\u00c9\u0099 ya daha az oldu\u00c4\u009funa \u00c9\u0099min olun.\"",
                "+",
                "+#, python-format",
                "+msgid \"\"",
                "+\"Ensure that this range is completely greater than or equal to \"",
                "+\"%(limit_value)s.\"",
                "+msgstr \"Bu aral\u00c4\u00b1\u00c4\u009f\u00c4\u00b1n %(limit_value)s v\u00c9\u0099 ya daha b\u00c3\u00b6y\u00c3\u00bck oldu\u00c4\u009funa \u00c9\u0099min olun.\"",
                "diff --git a/django/contrib/postgres/locale/de/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/de/LC_MESSAGES/django.mo",
                "index 0ffa2d5991..101c22887c 100644",
                "Binary files a/django/contrib/postgres/locale/de/LC_MESSAGES/django.mo and b/django/contrib/postgres/locale/de/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/de/LC_MESSAGES/django.po b/django/contrib/postgres/locale/de/LC_MESSAGES/django.po",
                "index c107566f00..d82cab029d 100644",
                "--- a/django/contrib/postgres/locale/de/LC_MESSAGES/django.po",
                "+++ b/django/contrib/postgres/locale/de/LC_MESSAGES/django.po",
                "@@ -3,5 +3,5 @@",
                " # Translators:",
                "-# Jannis Leidel <jannis@leidel.info>, 2015-2017",
                "+# Jannis Leidel <jannis@leidel.info>, 2015-2018",
                " # Jens Neuhaus <kontakt@jensneuhaus.de>, 2016",
                "-# Markus Holtermann <inyoka@markusholtermann.eu>, 2017",
                "+# Markus Holtermann <info@markusholtermann.eu>, 2017",
                " msgid \"\"",
                "@@ -10,5 +10,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 20:42+0000\\n\"",
                "-\"Last-Translator: Markus Holtermann <inyoka@markusholtermann.eu>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-14 08:25+0000\\n\"",
                "+\"Last-Translator: Florian Apolloner <florian@apolloner.eu>\\n\"",
                " \"Language-Team: German (http://www.transifex.com/django/django/language/de/)\\n\"",
                "@@ -24,4 +24,4 @@ msgstr \"PostgreSQL-Erweiterungen\"",
                " #, python-format",
                "-msgid \"Item %(nth)s in the array did not validate: \"",
                "-msgstr \"Element %(nth)s des Arrays ist ung\u00c3\u00bcltig:\"",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                "+msgstr \"Element %(nth)s im Array konnte nicht validiert werden:\"",
                "diff --git a/django/contrib/postgres/locale/el/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/el/LC_MESSAGES/django.mo",
                "index 1291bd3987..dc9368bf15 100644",
                "Binary files a/django/contrib/postgres/locale/el/LC_MESSAGES/django.mo and b/django/contrib/postgres/locale/el/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/el/LC_MESSAGES/django.po b/django/contrib/postgres/locale/el/LC_MESSAGES/django.po",
                "index 94f00c87b5..0e9c6e1dbe 100644",
                "--- a/django/contrib/postgres/locale/el/LC_MESSAGES/django.po",
                "+++ b/django/contrib/postgres/locale/el/LC_MESSAGES/django.po",
                "@@ -4,3 +4,3 @@",
                " # Giannis Meletakis <meletakis@gmail.com>, 2015",
                "-# Nick Mavrakis <mavrakis.n@gmail.com>, 2017",
                "+# Nick Mavrakis <mavrakis.n@gmail.com>, 2017-2018",
                " # Nick Mavrakis <mavrakis.n@gmail.com>, 2016",
                "@@ -11,4 +11,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 20:42+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-22 10:12+0000\\n\"",
                " \"Last-Translator: Nick Mavrakis <mavrakis.n@gmail.com>\\n\"",
                "@@ -25,3 +25,3 @@ msgstr \"\u00ce\u0095\u00cf\u0080\u00ce\u00b5\u00ce\u00ba\u00cf\u0084\u00ce\u00ac\u00cf\u0083\u00ce\u00b5\u00ce\u00b9\u00cf\u0082 \u00cf\u0084\u00ce\u00b7\u00cf\u0082 PostgreSQL\"",
                " #, python-format",
                "-msgid \"Item %(nth)s in the array did not validate: \"",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                " msgstr \"To \u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00ce\u00b9\u00cf\u0087\u00ce\u00b5\u00ce\u00af\u00ce\u00bf %(nth)s \u00cf\u0083\u00cf\u0084\u00ce\u00bf\u00ce\u00bd \u00cf\u0080\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00ba\u00ce\u00b1 \u00ce\u00b4\u00ce\u00b5\u00ce\u00bd \u00ce\u00b5\u00ce\u00af\u00ce\u00bd\u00ce\u00b1\u00ce\u00b9 \u00ce\u00ad\u00ce\u00b3\u00ce\u00ba\u00cf\u0085\u00cf\u0081\u00ce\u00bf:\"",
                "diff --git a/django/contrib/postgres/locale/eu/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/eu/LC_MESSAGES/django.mo",
                "index ac98a65710..2437a00f66 100644",
                "Binary files a/django/contrib/postgres/locale/eu/LC_MESSAGES/django.mo and b/django/contrib/postgres/locale/eu/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/eu/LC_MESSAGES/django.po b/django/contrib/postgres/locale/eu/LC_MESSAGES/django.po",
                "index 834eb9ad1f..b9f6b63edb 100644",
                "--- a/django/contrib/postgres/locale/eu/LC_MESSAGES/django.po",
                "+++ b/django/contrib/postgres/locale/eu/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Eneko Illarramendi <eneko@illarra.com>, 2017",
                "+# Eneko Illarramendi <eneko@illarra.com>, 2017-2018",
                " # Urtzi Odriozola <urtzi.odriozola@gmail.com>, 2017",
                "@@ -9,5 +9,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-25 08:36+0000\\n\"",
                "-\"Last-Translator: Urtzi Odriozola <urtzi.odriozola@gmail.com>\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-24 07:33+0000\\n\"",
                "+\"Last-Translator: Eneko Illarramendi <eneko@illarra.com>\\n\"",
                " \"Language-Team: Basque (http://www.transifex.com/django/django/language/eu/)\\n\"",
                "@@ -23,3 +23,3 @@ msgstr \"PostgreSQL hedapenak\"",
                " #, python-format",
                "-msgid \"Item %(nth)s in the array did not validate: \"",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                " msgstr \"Array-ko %(nth)s elementua ez da balekoa:\"",
                "diff --git a/django/contrib/postgres/locale/sk/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/sk/LC_MESSAGES/django.mo",
                "index c503e252c1..c311668a72 100644",
                "Binary files a/django/contrib/postgres/locale/sk/LC_MESSAGES/django.mo and b/django/contrib/postgres/locale/sk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/sk/LC_MESSAGES/django.po b/django/contrib/postgres/locale/sk/LC_MESSAGES/django.po",
                "index 0618aff648..e749e4073e 100644",
                "--- a/django/contrib/postgres/locale/sk/LC_MESSAGES/django.po",
                "+++ b/django/contrib/postgres/locale/sk/LC_MESSAGES/django.po",
                "@@ -3,3 +3,3 @@",
                " # Translators:",
                "-# Martin T\u00c3\u00b3th <ezimir@gmail.com>, 2017",
                "+# Martin T\u00c3\u00b3th <ezimir@gmail.com>, 2017-2018",
                " msgid \"\"",
                "@@ -8,4 +8,4 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-23 20:42+0000\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-09-05 17:06+0000\\n\"",
                " \"Last-Translator: Martin T\u00c3\u00b3th <ezimir@gmail.com>\\n\"",
                "@@ -16,3 +16,4 @@ msgstr \"\"",
                " \"Language: sk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n==1) ? 0 : (n>=2 && n<=4) ? 1 : 2;\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n == 1 ? 0 : n % 1 == 0 && n \"",
                "+\">= 2 && n <= 4 ? 1 : n % 1 != 0 ? 2: 3);\\n\"",
                "@@ -22,3 +23,3 @@ msgstr \"PostgreSQL roz\u00c5\u00a1\u00c3\u00adrenia\"",
                " #, python-format",
                "-msgid \"Item %(nth)s in the array did not validate: \"",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                " msgstr \"%(nth)s. polo\u00c5\u00beka po\u00c4\u00bea je neplatn\u00c3\u00a1:\"",
                "@@ -85,2 +86,5 @@ msgstr[2] \"\"",
                " \"%(limit_value)d.\"",
                "+msgstr[3] \"\"",
                "+\"Zoznam obsahuje %(show_value)d polo\u00c5\u00beku, ale nemal by obsahova\u00c5\u00a5 viac ako \"",
                "+\"%(limit_value)d.\"",
                "@@ -102,2 +106,5 @@ msgstr[2] \"\"",
                " \"%(limit_value)d.\"",
                "+msgstr[3] \"\"",
                "+\"Zoznam obsahuje %(show_value)d polo\u00c5\u00beku, ale nemal by obsahova\u00c5\u00a5 menej ako \"",
                "+\"%(limit_value)d.\"",
                "diff --git a/django/contrib/postgres/locale/uk/LC_MESSAGES/django.mo b/django/contrib/postgres/locale/uk/LC_MESSAGES/django.mo",
                "index 585732330a..a80add979e 100644",
                "Binary files a/django/contrib/postgres/locale/uk/LC_MESSAGES/django.mo and b/django/contrib/postgres/locale/uk/LC_MESSAGES/django.mo differ",
                "diff --git a/django/contrib/postgres/locale/uk/LC_MESSAGES/django.po b/django/contrib/postgres/locale/uk/LC_MESSAGES/django.po",
                "index ecb65bcf87..8f08a3c905 100644",
                "--- a/django/contrib/postgres/locale/uk/LC_MESSAGES/django.po",
                "+++ b/django/contrib/postgres/locale/uk/LC_MESSAGES/django.po",
                "@@ -7,2 +7,3 @@",
                " # Kirill Gagarski <gagarin.gtn@gmail.com>, 2015-2016",
                "+# Taras Korzhak <taras.korzhak96@gmail.com>, 2018",
                " # Zoriana Zaiats, 2017",
                "@@ -12,5 +13,5 @@ msgstr \"\"",
                " \"Report-Msgid-Bugs-To: \\n\"",
                "-\"POT-Creation-Date: 2017-01-19 16:49+0100\\n\"",
                "-\"PO-Revision-Date: 2017-09-21 22:44+0000\\n\"",
                "-\"Last-Translator: Zoriana Zaiats\\n\"",
                "+\"POT-Creation-Date: 2018-05-17 11:49+0200\\n\"",
                "+\"PO-Revision-Date: 2018-08-24 20:08+0000\\n\"",
                "+\"Last-Translator: Taras Korzhak <taras.korzhak96@gmail.com>\\n\"",
                " \"Language-Team: Ukrainian (http://www.transifex.com/django/django/language/\"",
                "@@ -21,4 +22,6 @@ msgstr \"\"",
                " \"Language: uk\\n\"",
                "-\"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n\"",
                "-\"%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\\n\"",
                "+\"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != \"",
                "+\"11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % \"",
                "+\"100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || \"",
                "+\"(n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\\n\"",
                "@@ -28,7 +31,7 @@ msgstr \"\u00d0\u00a0\u00d0\u00be\u00d0\u00b7\u00d1\u0088\u00d0\u00b8\u00d1\u0080\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f  PostgreSQL\"",
                " #, python-format",
                "-msgid \"Item %(nth)s in the array did not validate: \"",
                "-msgstr \"\u00d0\u0095\u00d0\u00bb\u00d0\u00b5\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0082 \u00d0\u00bc\u00d0\u00b0\u00d1\u0081\u00d0\u00b8\u00d0\u00b2\u00d1\u0083 \u00e2\u0084\u0096%(nth)s \u00d0\u00bd\u00d0\u00b5 \u00d0\u00bf\u00d1\u0080\u00d0\u00be\u00d0\u00b9\u00d1\u0088\u00d0\u00be\u00d0\u00b2 \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b2\u00d1\u0096\u00d1\u0080\u00d0\u00ba\u00d1\u0083:\"",
                "+msgid \"Item %(nth)s in the array did not validate:\"",
                "+msgstr \"\u00d0\u0095\u00d0\u00bb\u00d0\u00b5\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0082 %(nth)s \u00d1\u0083 \u00d0\u00bc\u00d0\u00b0\u00d1\u0081\u00d0\u00b8\u00d0\u00b2\u00d1\u0096 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00ba\u00d0\u00be\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d1\u0082\u00d0\u00bd\u00d0\u00b8\u00d0\u00b9:\"",
                " msgid \"Nested arrays must have the same length.\"",
                "-msgstr \"\u00d0\u0092\u00d0\u00ba\u00d0\u00bb\u00d0\u00b0\u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d0\u00b8 \u00d0\u00bc\u00d0\u00b0\u00d1\u0081\u00d0\u00b8\u00d0\u00b2\u00d0\u00b8 \u00d0\u00bc\u00d1\u0083\u00d1\u0081\u00d1\u008f\u00d1\u0082\u00d1\u008c \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 \u00d0\u00be\u00d0\u00b4\u00d0\u00bd\u00d0\u00b0\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00b4\u00d0\u00be\u00d0\u00b2\u00d0\u00b6\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8.\"",
                "+msgstr \"\u00d0\u0092\u00d0\u00ba\u00d0\u00bb\u00d0\u00b0\u00d0\u00b4\u00d0\u00b5\u00d0\u00bd\u00d0\u00b8 \u00d0\u00bc\u00d0\u00b0\u00d1\u0081\u00d0\u00b8\u00d0\u00b2\u00d0\u00b8 \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00b8\u00d0\u00bd\u00d0\u00bd\u00d1\u0096 \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 \u00d0\u00be\u00d0\u00b4\u00d0\u00b8\u00d0\u00bd\u00d0\u00b0\u00d0\u00ba\u00d0\u00be\u00d0\u00b2\u00d0\u00be\u00d1\u0097 \u00d0\u00b4\u00d0\u00be\u00d0\u00b2\u00d0\u00b6\u00d0\u00b8\u00d0\u00bd\u00d0\u00b8.\"",
                "@@ -39,3 +42,3 @@ msgstr \"\u00d0\u0090\u00d1\u0081\u00d0\u00be\u00d1\u0086\u00d1\u0096\u00d0\u00b0\u00d1\u0082\u00d0\u00b8\u00d0\u00b2\u00d0\u00bd\u00d0\u00b8\u00d0\u00b9 \u00d0\u00bc\u00d0\u00b0\u00d1\u0081\u00d0\u00b8\u00d0\u00b2 \u00d1\u0096\u00d0\u00b7 \u00d1\u0080\u00d1\u008f\u00d0\u00b4\u00d0\u00ba\u00d1\u0096\u00d0\u00b2 \u00d1\u0083 \u00d1\u0080\u00d1\u008f\u00d0\u00b4\u00d0\u00ba\u00d0\u00b8/\u00d0\u00be\u00d0\u00b1",
                " msgid \"The value of \\\"%(key)s\\\" is not a string or null.\"",
                "-msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \\\"%(key)s\\\" \u00d0\u00bd\u00d0\u00b5 \u00d1\u0094 \u00d1\u0081\u00d1\u0082\u00d1\u0080\u00d1\u0096\u00d1\u0087\u00d0\u00ba\u00d0\u00be\u00d1\u008e \u00d1\u0087\u00d0\u00b8 null.\"",
                "+msgstr \"\u00d0\u0097\u00d0\u00bd\u00d0\u00b0\u00d1\u0087\u00d0\u00b5\u00d0\u00bd\u00d0\u00bd\u00d1\u008f \u00d0\u00b2\u00d1\u0096\u00d0\u00b4 \\\"%(key)s\\\" \u00d0\u00bd\u00d0\u00b5 \u00d1\u0094 \u00d1\u0080\u00d1\u008f\u00d0\u00b4\u00d0\u00ba\u00d0\u00be\u00d0\u00bc \u00d1\u0087\u00d0\u00b8 null.\"",
                "@@ -91,2 +94,5 @@ msgstr[2] \"\"",
                " \"%(limit_value)d.\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u00a1\u00d0\u00bf\u00d0\u00b8\u00d1\u0081\u00d0\u00be\u00d0\u00ba \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d1\u0082\u00d1\u008c %(show_value)d \u00d0\u00b5\u00d0\u00bb\u00d0\u00b5\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0082\u00d1\u0096\u00d0\u00b2, \u00d0\u00ba\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00ba\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008c \u00d1\u008f\u00d0\u00ba\u00d0\u00b8\u00d1\u0085 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00bc\u00d0\u00b0\u00d1\u0094 \u00d0\u00bf\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00b2\u00d0\u00b8\u00d1\u0089\u00d1\u0083\u00d0\u00b2\u00d0\u00b0\u00d1\u0082\u00d0\u00b8 \"",
                "+\"%(limit_value)d.\"",
                "@@ -108,2 +114,5 @@ msgstr[2] \"\"",
                " \"%(limit_value)d.\"",
                "+msgstr[3] \"\"",
                "+\"\u00d0\u00a1\u00d0\u00bf\u00d0\u00b8\u00d1\u0081\u00d0\u00be\u00d0\u00ba \u00d0\u00bc\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d0\u00b8\u00d1\u0082\u00d1\u008c %(show_value)d \u00d0\u00b5\u00d0\u00bb\u00d0\u00b5\u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0082\u00d0\u00b0, \u00d0\u00ba\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d0\u00ba\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008c \u00d1\u008f\u00d0\u00ba\u00d0\u00b8\u00d1\u0085 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00bc\u00d0\u00b0\u00d1\u0094 \u00d0\u00b1\u00d1\u0083\u00d1\u0082\u00d0\u00b8 \u00d0\u00bd\u00d0\u00b5 \u00d0\u00bc\u00d0\u00b5\u00d0\u00bd\u00d1\u0088\u00d0\u00b0 \"",
                "+\"%(limit_value)d.\"",
                "@@ -128,2 +137,2 @@ msgid \"\"",
                " msgstr \"\"",
                "-\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0086\u00d0\u00b5\u00d0\u00b9 \u00d0\u00b4\u00d1\u0096\u00d0\u00b0\u00d0\u00bf\u00d0\u00b0\u00d0\u00b7\u00d0\u00be\u00d0\u00bd \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00bd\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008e \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b5 \u00d1\u0087\u00d0\u00b8 \u00d0\u00b4\u00d0\u00be\u00d1\u0080\u00d1\u0096\u00d0\u00b2\u00d0\u00bd\u00d1\u008e\u00d1\u0094 %(limit_value)s.\"",
                "+\"\u00d0\u009f\u00d0\u00b5\u00d1\u0080\u00d0\u00b5\u00d0\u00ba\u00d0\u00be\u00d0\u00bd\u00d0\u00b0\u00d0\u00b9\u00d1\u0082\u00d0\u00b5\u00d1\u0081\u00d1\u008f, \u00d1\u0089\u00d0\u00be \u00d1\u0086\u00d0\u00b5\u00d0\u00b9 \u00d0\u00b4\u00d1\u0096\u00d0\u00b0\u00d0\u00bf\u00d0\u00b0\u00d0\u00b7\u00d0\u00be\u00d0\u00bd \u00d0\u00bf\u00d0\u00be\u00d0\u00b2\u00d0\u00bd\u00d1\u0096\u00d1\u0081\u00d1\u0082\u00d1\u008e \u00d0\u00b1\u00d1\u0096\u00d0\u00bb\u00d1\u008c\u00d1\u0088\u00d0\u00b8\u00d0\u00b9 \u00d1\u0087\u00d0\u00b8 \u00d0\u00b4\u00d0\u00be\u00d1\u0080\u00d1\u0096\u00d0\u00b2\u00d0\u00bd\u00d1\u008e\u00d1\u0094 %(limit_value)s.\""
            ],
            "changed_files": [
                "django/conf/locale/az/LC_MESSAGES/django.mo",
                "django/conf/locale/az/LC_MESSAGES/django.po",
                "django/conf/locale/br/LC_MESSAGES/django.mo",
                "django/conf/locale/br/LC_MESSAGES/django.po",
                "django/conf/locale/de/LC_MESSAGES/django.mo",
                "django/conf/locale/de/LC_MESSAGES/django.po",
                "django/conf/locale/el/LC_MESSAGES/django.mo",
                "django/conf/locale/el/LC_MESSAGES/django.po",
                "django/conf/locale/eu/LC_MESSAGES/django.mo",
                "django/conf/locale/eu/LC_MESSAGES/django.po",
                "django/conf/locale/ne/LC_MESSAGES/django.mo",
                "django/conf/locale/ne/LC_MESSAGES/django.po",
                "django/conf/locale/pl/LC_MESSAGES/django.mo",
                "django/conf/locale/pl/LC_MESSAGES/django.po",
                "django/conf/locale/sk/LC_MESSAGES/django.mo",
                "django/conf/locale/sk/LC_MESSAGES/django.po",
                "django/conf/locale/uk/LC_MESSAGES/django.mo",
                "django/conf/locale/uk/LC_MESSAGES/django.po",
                "django/conf/locale/zh_Hans/LC_MESSAGES/django.mo",
                "django/conf/locale/zh_Hans/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/az/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/az/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/ca/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/ca/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/el/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/el/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/eu/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/eu/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/lt/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/lt/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/uk/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/uk/LC_MESSAGES/django.po",
                "django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.mo",
                "django/contrib/admin/locale/zh_Hans/LC_MESSAGES/django.po",
                "django/contrib/auth/locale/da/LC_MESSAGES/django.mo",
                "django/contrib/auth/locale/da/LC_MESSAGES/django.po",
                "django/contrib/auth/locale/el/LC_MESSAGES/django.mo",
                "django/contrib/auth/locale/el/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/az/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/az/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/br/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/br/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/ca/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/ca/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/de/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/de/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/el/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/el/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/eu/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/eu/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/sk/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/sk/LC_MESSAGES/django.po",
                "django/contrib/humanize/locale/uk/LC_MESSAGES/django.mo",
                "django/contrib/humanize/locale/uk/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/az/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/az/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/de/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/de/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/el/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/el/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/eu/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/eu/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/sk/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/sk/LC_MESSAGES/django.po",
                "django/contrib/postgres/locale/uk/LC_MESSAGES/django.mo",
                "django/contrib/postgres/locale/uk/LC_MESSAGES/django.po"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: admin",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "4ab071f43cbf9b1dd73b7f76996290a4d9de313f",
            "repository": "https://github.com/django/django",
            "timestamp": 1538745988,
            "hunks": 3,
            "message": "Refs #27795 -- Removed force_bytes() usage in contrib/staticfiles/storage.py.",
            "diff": [
                "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py",
                "index 371e9f2755..088963102e 100644",
                "--- a/django/contrib/staticfiles/storage.py",
                "+++ b/django/contrib/staticfiles/storage.py",
                "@@ -16,3 +16,2 @@ from django.core.files.base import ContentFile",
                " from django.core.files.storage import FileSystemStorage, get_storage_class",
                "-from django.utils.encoding import force_bytes",
                " from django.utils.functional import LazyObject",
                "@@ -298,3 +297,3 @@ class HashedFilesMixin:",
                "                     # then save the processed result",
                "-                    content_file = ContentFile(force_bytes(content))",
                "+                    content_file = ContentFile(content.encode())",
                "                     # Save intermediate file for reference",
                "@@ -468,3 +467,3 @@ class CachedFilesMixin(HashedFilesMixin):",
                "     def hash_key(self, name):",
                "-        key = hashlib.md5(force_bytes(self.clean_name(name))).hexdigest()",
                "+        key = hashlib.md5(self.clean_name(name).encode()).hexdigest()",
                "         return 'staticfiles:%s' % key"
            ],
            "changed_files": [
                "django/contrib/staticfiles/storage.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27795": ""
            },
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "8d8735035637805201eb8242dfa86ee0cfe9776a"
                ]
            ],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4c5a8c6f50577daa8b8aaef28a8f32ab34185e80",
            "repository": "https://github.com/django/django",
            "timestamp": 1536895997,
            "hunks": 2,
            "message": "[2.1.x] Fixed #29755 -- Made migrations detect changes to Meta.default_related_name. Backport of a4495f4b989dc919d80fcf9f38e31e247faa94fb from master",
            "diff": [
                "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py",
                "index 857981bcb8..97b987540e 100644",
                "--- a/django/db/migrations/operations/models.py",
                "+++ b/django/db/migrations/operations/models.py",
                "@@ -654,2 +654,3 @@ class AlterModelOptions(ModelOptionOperation):",
                "         \"default_manager_name\",",
                "+        \"default_related_name\",",
                "         \"get_latest_by\",",
                "diff --git a/tests/migrations/test_autodetector.py b/tests/migrations/test_autodetector.py",
                "index fd1bc383b9..4440bae19e 100644",
                "--- a/tests/migrations/test_autodetector.py",
                "+++ b/tests/migrations/test_autodetector.py",
                "@@ -2074,2 +2074,21 @@ class AutodetectorTests(TestCase):",
                "+    def test_default_related_name_option(self):",
                "+        model_state = ModelState('app', 'model', [",
                "+            ('id', models.AutoField(primary_key=True)),",
                "+        ], options={'default_related_name': 'related_name'})",
                "+        changes = self.get_changes([], [model_state])",
                "+        self.assertNumberMigrations(changes, 'app', 1)",
                "+        self.assertOperationTypes(changes, 'app', 0, ['CreateModel'])",
                "+        self.assertOperationAttributes(",
                "+            changes, 'app', 0, 0, name='model',",
                "+            options={'default_related_name': 'related_name'},",
                "+        )",
                "+        altered_model_state = ModelState('app', 'Model', [",
                "+            ('id', models.AutoField(primary_key=True)),",
                "+        ])",
                "+        changes = self.get_changes([model_state], [altered_model_state])",
                "+        self.assertNumberMigrations(changes, 'app', 1)",
                "+        self.assertOperationTypes(changes, 'app', 0, ['AlterModelOptions'])",
                "+        self.assertOperationAttributes(changes, 'app', 0, 0, name='model', options={})",
                "+",
                "     @override_settings(AUTH_USER_MODEL=\"thirdapp.CustomUser\")"
            ],
            "changed_files": [
                "django/db/migrations/operations/models.py",
                "tests/migrations/test_autodetector.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29755": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29755",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e90af8bad44341cf8ebd469dac57b61a95667c1d",
            "repository": "https://github.com/django/django",
            "timestamp": 1539091567,
            "hunks": 9,
            "message": "Capitalized \"Python\" in docs and comments.",
            "diff": [
                "diff --git a/django/contrib/gis/utils/ogrinspect.py b/django/contrib/gis/utils/ogrinspect.py",
                "index 9a091602fc..f04974f80d 100644",
                "--- a/django/contrib/gis/utils/ogrinspect.py",
                "+++ b/django/contrib/gis/utils/ogrinspect.py",
                "@@ -62,3 +62,3 @@ def ogrinspect(*args, **kwargs):",
                "-    or put this in a python script and use to redirect the output to a new",
                "+    or put this in a Python script and use to redirect the output to a new",
                "     model like:",
                "diff --git a/django/core/files/storage.py b/django/core/files/storage.py",
                "index 9929e20981..e117d2bcd4 100644",
                "--- a/django/core/files/storage.py",
                "+++ b/django/core/files/storage.py",
                "@@ -37,3 +37,3 @@ class Storage:",
                "         Save new content to the file specified by name. The content should be",
                "-        a proper File object or any python file-like object, ready to be read",
                "+        a proper File object or any Python file-like object, ready to be read",
                "         from the beginning.",
                "diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py",
                "index dd0f37d135..54e1cefb00 100644",
                "--- a/django/db/migrations/loader.py",
                "+++ b/django/db/migrations/loader.py",
                "@@ -26,3 +26,3 @@ class MigrationLoader:",
                "     On initialization, this class will scan those directories, and open and",
                "-    read the python files, looking for a class called Migration, which should",
                "+    read the Python files, looking for a class called Migration, which should",
                "     inherit from django.db.migrations.Migration. See",
                "diff --git a/django/db/migrations/questioner.py b/django/db/migrations/questioner.py",
                "index 08e7719dc1..47a3052c80 100644",
                "--- a/django/db/migrations/questioner.py",
                "+++ b/django/db/migrations/questioner.py",
                "@@ -31,3 +31,3 @@ class MigrationQuestioner:",
                "         # without any Python files in it, apart from __init__.py.",
                "-        # Apps from the new app template will have these; the python",
                "+        # Apps from the new app template will have these; the Python",
                "         # file check will ensure we skip South ones.",
                "diff --git a/django/dispatch/dispatcher.py b/django/dispatch/dispatcher.py",
                "index cefc00aad7..910024371b 100644",
                "--- a/django/dispatch/dispatcher.py",
                "+++ b/django/dispatch/dispatcher.py",
                "@@ -184,3 +184,3 @@ class Signal:",
                "             sender",
                "-                The sender of the signal. Can be any python object (normally one",
                "+                The sender of the signal. Can be any Python object (normally one",
                "                 registered with a connect if you actually want something to",
                "diff --git a/scripts/manage_translations.py b/scripts/manage_translations.py",
                "index de38a470b1..49f9f903db 100644",
                "--- a/scripts/manage_translations.py",
                "+++ b/scripts/manage_translations.py",
                "@@ -2,3 +2,3 @@",
                " #",
                "-# This python file contains utility scripts to manage Django translations.",
                "+# This Python file contains utility scripts to manage Django translations.",
                " # It has to be run inside the django git root directory.",
                "diff --git a/tests/file_storage/tests.py b/tests/file_storage/tests.py",
                "index 7957323299..f3011749f8 100644",
                "--- a/tests/file_storage/tests.py",
                "+++ b/tests/file_storage/tests.py",
                "@@ -823,3 +823,3 @@ class FileFieldStorageTests(TestCase):",
                "-        # Load it as python file object",
                "+        # Load it as Python file object",
                "         with open(temp_storage.path('tests/example.txt')) as file_obj:",
                "diff --git a/tests/i18n/test_percents.py b/tests/i18n/test_percents.py",
                "index 5ab146a4c2..e17d041020 100644",
                "--- a/tests/i18n/test_percents.py",
                "+++ b/tests/i18n/test_percents.py",
                "@@ -35,3 +35,3 @@ class ExtractingStringsWithPercentSigns(POFileAssertionMixin, FrenchTestCase):",
                "     These tests should all have an analogous translation tests below, ensuring",
                "-    the python formatting does not persist through to a rendered template.",
                "+    the Python formatting does not persist through to a rendered template.",
                "     \"\"\"",
                "diff --git a/tests/inspectdb/tests.py b/tests/inspectdb/tests.py",
                "index 849773ef9e..90a8c5f5e2 100644",
                "--- a/tests/inspectdb/tests.py",
                "+++ b/tests/inspectdb/tests.py",
                "@@ -140,3 +140,3 @@ class InspectDBTestCase(TestCase):",
                "         output = out.getvalue()",
                "-        error_message = \"inspectdb generated an attribute name which is a python keyword\"",
                "+        error_message = \"inspectdb generated an attribute name which is a Python keyword\"",
                "         # Recursive foreign keys should be set to 'self'"
            ],
            "changed_files": [
                "django/contrib/gis/utils/ogrinspect.py",
                "django/core/files/storage.py",
                "django/db/migrations/loader.py",
                "django/db/migrations/questioner.py",
                "django/dispatch/dispatcher.py",
                "scripts/manage_translations.py",
                "tests/file_storage/tests.py",
                "tests/i18n/test_percents.py",
                "tests/inspectdb/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "ec0803b1be161afe4db41d152fe6ed11eb6ff69c"
                ]
            ],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c49ea6f5911296dcb40190c905e38b43cdc7c7a3",
            "repository": "https://github.com/django/django",
            "timestamp": 1536598834,
            "hunks": 7,
            "message": "Refs #20910 -- Replaced snippet directive with code-block.",
            "diff": [
                "diff --git a/docs/_ext/djangodocs.py b/docs/_ext/djangodocs.py",
                "index 95f5218d70..30d3741b89 100644",
                "--- a/docs/_ext/djangodocs.py",
                "+++ b/docs/_ext/djangodocs.py",
                "@@ -8,3 +8,3 @@ import re",
                " from docutils import nodes",
                "-from docutils.parsers.rst import Directive, directives",
                "+from docutils.parsers.rst import Directive",
                " from docutils.statemachine import ViewList",
                "@@ -15,3 +15,2 @@ from sphinx.domains.std import Cmdoption",
                " from sphinx.util.console import bold",
                "-from sphinx.util.nodes import set_source_info",
                " from sphinx.writers.html import HTMLTranslator",
                "@@ -55,13 +54,2 @@ def setup(app):",
                "     app.add_builder(DjangoStandaloneHTMLBuilder)",
                "-",
                "-    # register the snippet directive",
                "-    app.add_directive('snippet', SnippetWithFilename)",
                "-    # register a node for snippet directive so that the xml parser",
                "-    # knows how to handle the enter/exit parsing event",
                "-    app.add_node(snippet_with_filename,",
                "-                 html=(visit_snippet, depart_snippet_literal),",
                "-                 latex=(visit_snippet_latex, depart_snippet_latex),",
                "-                 man=(visit_snippet_literal, depart_snippet_literal),",
                "-                 text=(visit_snippet_literal, depart_snippet_literal),",
                "-                 texinfo=(visit_snippet_literal, depart_snippet_literal))",
                "     app.set_translator('djangohtml', DjangoHTMLTranslator)",
                "@@ -81,129 +69,2 @@ def setup(app):",
                "-class snippet_with_filename(nodes.literal_block):",
                "-    \"\"\"",
                "-    Subclass the literal_block to override the visit/depart event handlers",
                "-    \"\"\"",
                "-    pass",
                "-",
                "-",
                "-def visit_snippet_literal(self, node):",
                "-    \"\"\"",
                "-    default literal block handler",
                "-    \"\"\"",
                "-    self.visit_literal_block(node)",
                "-",
                "-",
                "-def depart_snippet_literal(self, node):",
                "-    \"\"\"",
                "-    default literal block handler",
                "-    \"\"\"",
                "-    self.depart_literal_block(node)",
                "-",
                "-",
                "-def visit_snippet(self, node):",
                "-    \"\"\"",
                "-    HTML document generator visit handler",
                "-    \"\"\"",
                "-    lang = self.highlightlang",
                "-    linenos = node.rawsource.count('\\n') >= self.highlightlinenothreshold - 1",
                "-    fname = node['filename']",
                "-    highlight_args = node.get('highlight_args', {})",
                "-    if 'language' in node:",
                "-        # code-block directives",
                "-        lang = node['language']",
                "-        highlight_args['force'] = True",
                "-    if 'linenos' in node:",
                "-        linenos = node['linenos']",
                "-",
                "-    def warner(msg):",
                "-        self.builder.warn(msg, (self.builder.current_docname, node.line))",
                "-",
                "-    highlighted = self.highlighter.highlight_block(node.rawsource, lang,",
                "-                                                   warn=warner,",
                "-                                                   linenos=linenos,",
                "-                                                   **highlight_args)",
                "-    starttag = self.starttag(node, 'div', suffix='',",
                "-                             CLASS='highlight-%s snippet' % lang)",
                "-    self.body.append(starttag)",
                "-    self.body.append('<div class=\"snippet-filename\">%s</div>\\n''' % (fname,))",
                "-    self.body.append(highlighted)",
                "-    self.body.append('</div>\\n')",
                "-    raise nodes.SkipNode",
                "-",
                "-",
                "-def visit_snippet_latex(self, node):",
                "-    \"\"\"",
                "-    Latex document generator visit handler",
                "-    \"\"\"",
                "-    code = node.rawsource.rstrip('\\n')",
                "-",
                "-    lang = self.hlsettingstack[-1][0]",
                "-    linenos = code.count('\\n') >= self.hlsettingstack[-1][1] - 1",
                "-    fname = node['filename']",
                "-    highlight_args = node.get('highlight_args', {})",
                "-    if 'language' in node:",
                "-        # code-block directives",
                "-        lang = node['language']",
                "-        highlight_args['force'] = True",
                "-    if 'linenos' in node:",
                "-        linenos = node['linenos']",
                "-",
                "-    def warner(msg):",
                "-        self.builder.warn(msg, (self.curfilestack[-1], node.line))",
                "-",
                "-    hlcode = self.highlighter.highlight_block(code, lang, warn=warner,",
                "-                                              linenos=linenos,",
                "-                                              **highlight_args)",
                "-",
                "-    self.body.append(",
                "-        '\\n{\\\\colorbox[rgb]{0.9,0.9,0.9}'",
                "-        '{\\\\makebox[\\\\textwidth][l]'",
                "-        '{\\\\small\\\\texttt{%s}}}}\\n' % (",
                "-            # Some filenames have '_', which is special in latex.",
                "-            fname.replace('_', r'\\_'),",
                "-        )",
                "-    )",
                "-",
                "-    if self.table:",
                "-        hlcode = hlcode.replace('\\\\begin{Verbatim}',",
                "-                                '\\\\begin{OriginalVerbatim}')",
                "-        self.table.has_problematic = True",
                "-        self.table.has_verbatim = True",
                "-",
                "-    hlcode = hlcode.rstrip()[:-14]  # strip \\end{Verbatim}",
                "-    hlcode = hlcode.rstrip() + '\\n'",
                "-    self.body.append('\\n' + hlcode + '\\\\end{%sVerbatim}\\n' %",
                "-                     (self.table and 'Original' or ''))",
                "-",
                "-    # Prevent rawsource from appearing in output a second time.",
                "-    raise nodes.SkipNode",
                "-",
                "-",
                "-def depart_snippet_latex(self, node):",
                "-    \"\"\"",
                "-    Latex document generator depart handler.",
                "-    \"\"\"",
                "-    pass",
                "-",
                "-",
                "-class SnippetWithFilename(Directive):",
                "-    \"\"\"",
                "-    The 'snippet' directive that allows to add the filename (optional)",
                "-    of a code snippet in the document. This is modeled after CodeBlock.",
                "-    \"\"\"",
                "-    has_content = True",
                "-    optional_arguments = 1",
                "-    option_spec = {'filename': directives.unchanged_required}",
                "-",
                "-    def run(self):",
                "-        code = '\\n'.join(self.content)",
                "-",
                "-        literal = snippet_with_filename(code, code)",
                "-        if self.arguments:",
                "-            literal['language'] = self.arguments[0]",
                "-        literal['filename'] = self.options['filename']",
                "-        set_source_info(self, literal)",
                "-        return [literal]",
                "-",
                "-",
                " class VersionDirective(Directive):",
                "diff --git a/docs/_theme/djangodocs-epub/static/epub.css b/docs/_theme/djangodocs-epub/static/epub.css",
                "index b74af5e9bf..7db68b53fb 100644",
                "--- a/docs/_theme/djangodocs-epub/static/epub.css",
                "+++ b/docs/_theme/djangodocs-epub/static/epub.css",
                "@@ -31,3 +31,3 @@ pre {",
                " /* Header for some code blocks. */",
                "-.snippet-filename {",
                "+.code-block-caption {",
                "     background-color: #393939;",
                "@@ -38,4 +38,3 @@ pre {",
                " }",
                "-.snippet-filename + .highlight > pre,",
                "-.snippet-filename + pre {",
                "+.literal-block-wrapper pre {",
                "     margin-top: 0;",
                "diff --git a/docs/_theme/djangodocs/static/djangodocs.css b/docs/_theme/djangodocs/static/djangodocs.css",
                "index 143bcdb6c9..1a397f44c0 100644",
                "--- a/docs/_theme/djangodocs/static/djangodocs.css",
                "+++ b/docs/_theme/djangodocs/static/djangodocs.css",
                "@@ -103,5 +103,4 @@ dt .literal, table .literal { background:none; }",
                " #bd a.reference tt.literal { border-bottom: 1px #234f32 dotted; }",
                "-div.snippet-filename { color: white; background-color: #234F32; margin: 0; padding: 2px 5px; width: 100%; font-family: monospace; font-size: small; line-height: 1.3em; }",
                "-div.snippet-filename + div.highlight > pre { margin-top: 0; }",
                "-div.snippet-filename + pre { margin-top: 0; }",
                "+div.code-block-caption { color: white; background-color: #234F32; margin: 0; padding: 2px 5px; width: 100%; font-family: monospace; font-size: small; line-height: 1.3em; }",
                "+div.literal-block-wrapper pre { margin-top: 0; }"
            ],
            "changed_files": [
                "docs/_ext/djangodocs.py",
                "docs/_theme/djangodocs-epub/static/epub.css",
                "docs/_theme/djangodocs/static/djangodocs.css"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "20910": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 20910",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bf01994a5ccc07cbe4b011b53b644eba04da052e",
            "repository": "https://github.com/django/django",
            "timestamp": 1538205747,
            "hunks": 6,
            "message": "Fixed #29804 -- Added 'did you mean' suggestions for unsupported lookup error.",
            "diff": [
                "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py",
                "index beb57f8ecd..7c46c7a237 100644",
                "--- a/django/db/models/sql/query.py",
                "+++ b/django/db/models/sql/query.py",
                "@@ -8,2 +8,3 @@ all about the internals of models in order to get the information it needs.",
                " \"\"\"",
                "+import difflib",
                " import functools",
                "@@ -1142,6 +1143,12 @@ class Query:",
                "         else:",
                "+            output_field = lhs.output_field.__class__",
                "+            suggested_lookups = difflib.get_close_matches(name, output_field.get_lookups())",
                "+            if suggested_lookups:",
                "+                suggestion = ', perhaps you meant %s?' % ' or '.join(suggested_lookups)",
                "+            else:",
                "+                suggestion = '.'",
                "             raise FieldError(",
                "                 \"Unsupported lookup '%s' for %s or join on the field not \"",
                "-                \"permitted.\" %",
                "-                (name, lhs.output_field.__class__.__name__))",
                "+                \"permitted%s\" % (name, output_field.__name__, suggestion)",
                "+            )",
                "diff --git a/tests/lookup/tests.py b/tests/lookup/tests.py",
                "index 45360963b2..d759bbadff 100644",
                "--- a/tests/lookup/tests.py",
                "+++ b/tests/lookup/tests.py",
                "@@ -571,2 +571,3 @@ class LookupTests(TestCase):",
                "+    def test_unsupported_lookups(self):",
                "         with self.assertRaisesMessage(",
                "@@ -574,3 +575,3 @@ class LookupTests(TestCase):",
                "             \"Unsupported lookup 'starts' for CharField or join on the field \"",
                "-            \"not permitted.\"",
                "+            \"not permitted, perhaps you meant startswith or istartswith?\"",
                "         ):",
                "@@ -578,2 +579,16 @@ class LookupTests(TestCase):",
                "+        with self.assertRaisesMessage(",
                "+            FieldError,",
                "+            \"Unsupported lookup 'is_null' for DateTimeField or join on the field \"",
                "+            \"not permitted, perhaps you meant isnull?\"",
                "+        ):",
                "+            Article.objects.filter(pub_date__is_null=True)",
                "+",
                "+        with self.assertRaisesMessage(",
                "+            FieldError,",
                "+            \"Unsupported lookup 'gobbledygook' for DateTimeField or join on the field \"",
                "+            \"not permitted.\"",
                "+        ):",
                "+            Article.objects.filter(pub_date__gobbledygook='blahblah')",
                "+",
                "     def test_relation_nested_lookup_error(self):"
            ],
            "changed_files": [
                "django/db/models/sql/query.py",
                "tests/lookup/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29804": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29804",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "ddcb9e806275114c91bbed90bc917374ba08a9ae",
            "repository": "https://github.com/django/django",
            "timestamp": 1538226371,
            "hunks": 5,
            "message": "Refs #21408 -- Updated naturaltime translation test. Upcoming German translations will not differ for past and future naturaltime translations. Using Czech language instead.",
            "diff": [
                "diff --git a/tests/humanize_tests/tests.py b/tests/humanize_tests/tests.py",
                "index 2414a55ed7..25cd07bac7 100644",
                "--- a/tests/humanize_tests/tests.py",
                "+++ b/tests/humanize_tests/tests.py",
                "@@ -292,5 +292,9 @@ class HumanizeTests(SimpleTestCase):",
                "-    def test_dative_inflection_for_timedelta(self):",
                "-        \"\"\"Translation may differ depending on the string it is inserted in.\"\"\"",
                "+    def test_inflection_for_timedelta(self):",
                "+        \"\"\"",
                "+        Translation of '%d day'/'%d month'/\u00e2\u0080\u00a6 may differ depending on the context",
                "+        of the string it is inserted in.",
                "+        \"\"\"",
                "         test_list = [",
                "+            # \"%(delta)s ago\" translations",
                "             now - datetime.timedelta(days=1),",
                "@@ -301,10 +305,23 @@ class HumanizeTests(SimpleTestCase):",
                "             now - datetime.timedelta(days=865),",
                "+            # \"%(delta)s from now\" translations",
                "+            now + datetime.timedelta(days=1),",
                "+            now + datetime.timedelta(days=2),",
                "+            now + datetime.timedelta(days=30),",
                "+            now + datetime.timedelta(days=60),",
                "+            now + datetime.timedelta(days=500),",
                "+            now + datetime.timedelta(days=865),",
                "         ]",
                "         result_list = [",
                "-            'vor 1\\xa0Tag',",
                "-            'vor 2\\xa0Tagen',",
                "-            'vor 1\\xa0Monat',",
                "-            'vor 2\\xa0Monaten',",
                "-            'vor 1\\xa0Jahr, 4\\xa0Monaten',",
                "-            'vor 2\\xa0Jahren, 4\\xa0Monaten',",
                "+            'p\u00c5\u0099ed 1\\xa0dnem',",
                "+            'p\u00c5\u0099ed 2\\xa0dny',",
                "+            'p\u00c5\u0099ed 1\\xa0m\u00c4\u009bs\u00c3\u00adcem',",
                "+            'p\u00c5\u0099ed 2\\xa0m\u00c4\u009bs\u00c3\u00adci',",
                "+            'p\u00c5\u0099ed 1\\xa0rokem, 4\\xa0m\u00c4\u009bs\u00c3\u00adci',",
                "+            'p\u00c5\u0099ed 2\\xa0lety, 4\\xa0m\u00c4\u009bs\u00c3\u00adci',",
                "+            'za 1\\xa0den',",
                "+            'za 2\\xa0dny',",
                "+            'za 1\\xa0m\u00c4\u009bs\u00c3\u00adc',",
                "+            'za 2\\xa0m\u00c4\u009bs\u00c3\u00adce',",
                "+            'za 1\\xa0rok, 4\\xa0m\u00c4\u009bs\u00c3\u00adce',",
                "+            'za 2\\xa0roky, 4\\xa0m\u00c4\u009bs\u00c3\u00adce',",
                "         ]",
                "@@ -313,3 +330,4 @@ class HumanizeTests(SimpleTestCase):",
                "         try:",
                "-            with translation.override('de'), self.settings(USE_L10N=True):",
                "+            # Choose a language with different naturaltime-past/naturaltime-future translations",
                "+            with translation.override('cs'), self.settings(USE_L10N=True):",
                "                 self.humanize_tester(test_list, result_list, 'naturaltime')"
            ],
            "changed_files": [
                "tests/humanize_tests/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "21408": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 21408",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a0d63b02c34e6d18d7219cce4d828f71432265e9",
            "repository": "https://github.com/django/django",
            "timestamp": 1537379461,
            "hunks": 2,
            "message": "Fixed #29772 -- Made LazyObject proxy __lt__() and __gt__().",
            "diff": [
                "diff --git a/django/utils/functional.py b/django/utils/functional.py",
                "index 146a2e8dc2..1481bf4a5e 100644",
                "--- a/django/utils/functional.py",
                "+++ b/django/utils/functional.py",
                "@@ -306,2 +306,4 @@ class LazyObject:",
                "     __eq__ = new_method_proxy(operator.eq)",
                "+    __lt__ = new_method_proxy(operator.lt)",
                "+    __gt__ = new_method_proxy(operator.gt)",
                "     __ne__ = new_method_proxy(operator.ne)",
                "diff --git a/tests/utils_tests/test_lazyobject.py b/tests/utils_tests/test_lazyobject.py",
                "index 2bba558843..e5bccc6362 100644",
                "--- a/tests/utils_tests/test_lazyobject.py",
                "+++ b/tests/utils_tests/test_lazyobject.py",
                "@@ -68,2 +68,12 @@ class LazyObjectTestCase(TestCase):",
                "+    def test_lt(self):",
                "+        obj1 = self.lazy_wrap(1)",
                "+        obj2 = self.lazy_wrap(2)",
                "+        self.assertLess(obj1, obj2)",
                "+",
                "+    def test_gt(self):",
                "+        obj1 = self.lazy_wrap(1)",
                "+        obj2 = self.lazy_wrap(2)",
                "+        self.assertGreater(obj2, obj1)",
                "+",
                "     def test_bytes(self):"
            ],
            "changed_files": [
                "django/utils/functional.py",
                "tests/utils_tests/test_lazyobject.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29772": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29772",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "22e8ab02863819093832de9f771bf40a62a6bd4a",
            "repository": "https://github.com/django/django",
            "timestamp": 1535812355,
            "hunks": 4,
            "message": "Fixed #29728 -- Prevented session resaving if CSRF cookie is unchanged.",
            "diff": [
                "diff --git a/django/middleware/csrf.py b/django/middleware/csrf.py",
                "index 98830f7774..c9c27666ae 100644",
                "--- a/django/middleware/csrf.py",
                "+++ b/django/middleware/csrf.py",
                "@@ -183,3 +183,4 @@ class CsrfViewMiddleware(MiddlewareMixin):",
                "         if settings.CSRF_USE_SESSIONS:",
                "-            request.session[CSRF_SESSION_KEY] = request.META['CSRF_COOKIE']",
                "+            if request.session.get(CSRF_SESSION_KEY) != request.META['CSRF_COOKIE']:",
                "+                request.session[CSRF_SESSION_KEY] = request.META['CSRF_COOKIE']",
                "         else:",
                "diff --git a/tests/csrf_tests/tests.py b/tests/csrf_tests/tests.py",
                "index 9bebb7ed8f..2c40e44ae1 100644",
                "--- a/tests/csrf_tests/tests.py",
                "+++ b/tests/csrf_tests/tests.py",
                "@@ -3,2 +3,3 @@ import re",
                " from django.conf import settings",
                "+from django.contrib.sessions.backends.cache import SessionStore",
                " from django.core.exceptions import ImproperlyConfigured",
                "@@ -26,4 +27,3 @@ class TestingHttpRequest(HttpRequest):",
                "         super().__init__()",
                "-        # A real session backend isn't needed.",
                "-        self.session = {}",
                "+        self.session = SessionStore()",
                "@@ -695,2 +695,15 @@ class CsrfViewMiddlewareUseSessionsTests(CsrfViewMiddlewareTestMixin, SimpleTest",
                "+    def test_session_modify(self):",
                "+        \"\"\"The session isn't saved if the CSRF cookie is unchanged.\"\"\"",
                "+        req = self._get_GET_no_csrf_cookie_request()",
                "+        self.mw.process_view(req, ensure_csrf_cookie_view, (), {})",
                "+        resp = ensure_csrf_cookie_view(req)",
                "+        self.mw.process_response(req, resp)",
                "+        self.assertIsNotNone(req.session.get(CSRF_SESSION_KEY))",
                "+        req.session.modified = False",
                "+        self.mw.process_view(req, ensure_csrf_cookie_view, (), {})",
                "+        resp = ensure_csrf_cookie_view(req)",
                "+        self.mw.process_response(req, resp)",
                "+        self.assertFalse(req.session.modified)",
                "+",
                "     def test_ensures_csrf_cookie_with_middleware(self):"
            ],
            "changed_files": [
                "django/middleware/csrf.py",
                "tests/csrf_tests/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29728": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29728",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2ba588e7736e28626e34fd1b691fd4d5ae6a2cae",
            "repository": "https://github.com/django/django",
            "timestamp": 1539024421,
            "hunks": 2,
            "message": "Refs #27795 -- Removed force_text() usage in db/models/sql/query.py.",
            "diff": [
                "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py",
                "index 7c46c7a237..d924638b64 100644",
                "--- a/django/db/models/sql/query.py",
                "+++ b/django/db/models/sql/query.py",
                "@@ -37,3 +37,2 @@ from django.db.models.sql.where import (",
                " )",
                "-from django.utils.encoding import force_text",
                " from django.utils.functional import cached_property",
                "@@ -1874,3 +1873,3 @@ class Query:",
                "             for name, entry in select.items():",
                "-                entry = force_text(entry)",
                "+                entry = str(entry)",
                "                 entry_params = []"
            ],
            "changed_files": [
                "django/db/models/sql/query.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27795": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "18098d261fe98e0a3b7acbb47152031ff905f6a1",
            "repository": "https://github.com/django/django",
            "timestamp": 1537990524,
            "hunks": 4,
            "message": "Fixed #29673 -- Reset the URLconf at the end of each request. Co-authored-by: Ross Thorne <rmwthorne@googlemail.com>",
            "diff": [
                "diff --git a/django/core/handlers/base.py b/django/core/handlers/base.py",
                "index edc166fab5..8eddad0e62 100644",
                "--- a/django/core/handlers/base.py",
                "+++ b/django/core/handlers/base.py",
                "@@ -5,2 +5,3 @@ from django.conf import settings",
                " from django.core.exceptions import ImproperlyConfigured, MiddlewareNotUsed",
                "+from django.core.signals import request_finished",
                " from django.db import connections, transaction",
                "@@ -169 +170,9 @@ class BaseHandler:",
                "         raise",
                "+",
                "+",
                "+def reset_urlconf(sender, **kwargs):",
                "+    \"\"\"Reset the URLconf after each request is finished.\"\"\"",
                "+    set_urlconf(None)",
                "+",
                "+",
                "+request_finished.connect(reset_urlconf)",
                "diff --git a/tests/urlpatterns_reverse/tests.py b/tests/urlpatterns_reverse/tests.py",
                "index 037182f756..65024aeb0f 100644",
                "--- a/tests/urlpatterns_reverse/tests.py",
                "+++ b/tests/urlpatterns_reverse/tests.py",
                "@@ -20,3 +20,3 @@ from django.urls import (",
                "     NoReverseMatch, Resolver404, ResolverMatch, URLPattern, URLResolver,",
                "-    get_callable, get_resolver, resolve, reverse, reverse_lazy,",
                "+    get_callable, get_resolver, get_urlconf, resolve, reverse, reverse_lazy,",
                " )",
                "@@ -1036,2 +1036,9 @@ class RequestURLconfTests(SimpleTestCase):",
                "+    def test_urlconf_is_reset_after_request(self):",
                "+        \"\"\"The URLconf is reset after each request.\"\"\"",
                "+        self.assertIsNone(get_urlconf())",
                "+        with override_settings(MIDDLEWARE=['%s.ChangeURLconfMiddleware' % middleware.__name__]):",
                "+            self.client.get(reverse('inner'))",
                "+        self.assertIsNone(get_urlconf())",
                "+"
            ],
            "changed_files": [
                "django/core/handlers/base.py",
                "tests/urlpatterns_reverse/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29673": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29673",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a4495f4b989dc919d80fcf9f38e31e247faa94fb",
            "repository": "https://github.com/django/django",
            "timestamp": 1536895997,
            "hunks": 2,
            "message": "Fixed #29755 -- Made migrations detect changes to Meta.default_related_name.",
            "diff": [
                "diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py",
                "index 18feb9b9a1..7ca54e7f75 100644",
                "--- a/django/db/migrations/operations/models.py",
                "+++ b/django/db/migrations/operations/models.py",
                "@@ -640,2 +640,3 @@ class AlterModelOptions(ModelOptionOperation):",
                "         \"default_manager_name\",",
                "+        \"default_related_name\",",
                "         \"get_latest_by\",",
                "diff --git a/tests/migrations/test_autodetector.py b/tests/migrations/test_autodetector.py",
                "index b3232c0f59..615695e159 100644",
                "--- a/tests/migrations/test_autodetector.py",
                "+++ b/tests/migrations/test_autodetector.py",
                "@@ -2106,2 +2106,21 @@ class AutodetectorTests(TestCase):",
                "+    def test_default_related_name_option(self):",
                "+        model_state = ModelState('app', 'model', [",
                "+            ('id', models.AutoField(primary_key=True)),",
                "+        ], options={'default_related_name': 'related_name'})",
                "+        changes = self.get_changes([], [model_state])",
                "+        self.assertNumberMigrations(changes, 'app', 1)",
                "+        self.assertOperationTypes(changes, 'app', 0, ['CreateModel'])",
                "+        self.assertOperationAttributes(",
                "+            changes, 'app', 0, 0, name='model',",
                "+            options={'default_related_name': 'related_name'},",
                "+        )",
                "+        altered_model_state = ModelState('app', 'Model', [",
                "+            ('id', models.AutoField(primary_key=True)),",
                "+        ])",
                "+        changes = self.get_changes([model_state], [altered_model_state])",
                "+        self.assertNumberMigrations(changes, 'app', 1)",
                "+        self.assertOperationTypes(changes, 'app', 0, ['AlterModelOptions'])",
                "+        self.assertOperationAttributes(changes, 'app', 0, 0, name='model', options={})",
                "+",
                "     @override_settings(AUTH_USER_MODEL=\"thirdapp.CustomUser\")"
            ],
            "changed_files": [
                "django/db/migrations/operations/models.py",
                "tests/migrations/test_autodetector.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29755": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29755",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "45ef3df7d07489ee0b76479cc799faa92e443a69",
            "repository": "https://github.com/django/django",
            "timestamp": 1536712575,
            "hunks": 3,
            "message": "Fixed #29719 -- Added introspection of foreign tables for PostgreSQL. Thanks infinite-l00p for the initial patch.",
            "diff": [
                "diff --git a/django/db/backends/postgresql/introspection.py b/django/db/backends/postgresql/introspection.py",
                "index afd035df77..c20d7b659e 100644",
                "--- a/django/db/backends/postgresql/introspection.py",
                "+++ b/django/db/backends/postgresql/introspection.py",
                "@@ -46,3 +46,3 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "             LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace",
                "-            WHERE c.relkind IN ('r', 'v')",
                "+            WHERE c.relkind IN ('f', 'r', 'v')",
                "                 AND n.nspname NOT IN ('pg_catalog', 'pg_toast')",
                "@@ -50,3 +50,3 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "         \"\"\")",
                "-        mapping = {'r': 't', 'v': 'v'}",
                "+        mapping = {'f': 't', 'r': 't', 'v': 'v'}",
                "         return [",
                "diff --git a/tests/inspectdb/tests.py b/tests/inspectdb/tests.py",
                "index e994b2cb74..83c49eb7e3 100644",
                "--- a/tests/inspectdb/tests.py",
                "+++ b/tests/inspectdb/tests.py",
                "@@ -311 +311,30 @@ class InspectDBTransactionalTests(TransactionTestCase):",
                "                 cursor.execute('DROP VIEW inspectdb_people_view')",
                "+",
                "+    @skipUnless(connection.vendor == 'postgresql', 'PostgreSQL specific SQL')",
                "+    def test_foreign_data_wrapper(self):",
                "+        with connection.cursor() as cursor:",
                "+            cursor.execute('CREATE EXTENSION IF NOT EXISTS file_fdw')",
                "+            cursor.execute('CREATE SERVER inspectdb_server FOREIGN DATA WRAPPER file_fdw')",
                "+            cursor.execute('''\\",
                "+                CREATE FOREIGN TABLE inspectdb_iris_foreign_table (",
                "+                    petal_length real,",
                "+                    petal_width real,",
                "+                    sepal_length real,",
                "+                    sepal_width real",
                "+                ) SERVER inspectdb_server OPTIONS (",
                "+                    filename '/dev/null'",
                "+                )",
                "+            ''')",
                "+        out = StringIO()",
                "+        foreign_table_model = 'class InspectdbIrisForeignTable(models.Model):'",
                "+        foreign_table_managed = 'managed = False'",
                "+        try:",
                "+            call_command('inspectdb', stdout=out)",
                "+            output = out.getvalue()",
                "+            self.assertIn(foreign_table_model, output)",
                "+            self.assertIn(foreign_table_managed, output)",
                "+        finally:",
                "+            with connection.cursor() as cursor:",
                "+                cursor.execute('DROP FOREIGN TABLE IF EXISTS inspectdb_iris_foreign_table')",
                "+                cursor.execute('DROP SERVER IF EXISTS inspectdb_server')",
                "+                cursor.execute('DROP EXTENSION IF EXISTS file_fdw')"
            ],
            "changed_files": [
                "django/db/backends/postgresql/introspection.py",
                "tests/inspectdb/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29719": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29719",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "cdb8ee741d0bc72713baf6612e4218d44cfd3958",
            "repository": "https://github.com/django/django",
            "timestamp": 1537905620,
            "hunks": 3,
            "message": "[2.1.x] Fixed #29778 -- Fixed quoting of unique index names. Regression in 3b429c96736b8328c40e5d77282b0d30de563c3c. Backport of d1d5c97bc2821bf8c0f4b2d9c7ab16200845b494 from master.",
            "diff": [
                "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py",
                "index a722e497c3..82d6fafc75 100644",
                "--- a/django/db/backends/base/schema.py",
                "+++ b/django/db/backends/base/schema.py",
                "@@ -1002,2 +1002,4 @@ class BaseDatabaseSchemaEditor:",
                "     def _create_unique_sql(self, model, columns):",
                "+        def create_unique_name(*args, **kwargs):",
                "+            return self.quote_name(self._create_index_name(*args, **kwargs))",
                "         table = model._meta.db_table",
                "@@ -1006,3 +1008,3 @@ class BaseDatabaseSchemaEditor:",
                "             table=Table(table, self.quote_name),",
                "-            name=IndexName(table, columns, '_uniq', self._create_index_name),",
                "+            name=IndexName(table, columns, '_uniq', create_unique_name),",
                "             columns=Columns(table, columns, self.quote_name),",
                "diff --git a/tests/schema/tests.py b/tests/schema/tests.py",
                "index f18b68d04d..245d4b0918 100644",
                "--- a/tests/schema/tests.py",
                "+++ b/tests/schema/tests.py",
                "@@ -1560,2 +1560,14 @@ class SchemaTests(TransactionTestCase):",
                "+    def test_unique_name_quoting(self):",
                "+        old_table_name = TagUniqueRename._meta.db_table",
                "+        try:",
                "+            with connection.schema_editor() as editor:",
                "+                editor.create_model(TagUniqueRename)",
                "+                editor.alter_db_table(TagUniqueRename, old_table_name, 'unique-table')",
                "+                TagUniqueRename._meta.db_table = 'unique-table'",
                "+                # This fails if the unique index name isn't quoted.",
                "+                editor.alter_unique_together(TagUniqueRename, [], (('title', 'slug2'),))",
                "+        finally:",
                "+            TagUniqueRename._meta.db_table = old_table_name",
                "+",
                "     @isolate_apps('schema')"
            ],
            "changed_files": [
                "django/db/backends/base/schema.py",
                "tests/schema/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29778": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29778",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c5e450ac950316068455e76d4a63b78110d7cde5",
            "repository": "https://github.com/django/django",
            "timestamp": 1537200210,
            "hunks": 2,
            "message": "Fixed #29761 -- Confirmed support for PROJ 5.x.",
            "diff": [
                "diff --git a/tests/gis_tests/gdal_tests/test_raster.py b/tests/gis_tests/gdal_tests/test_raster.py",
                "index 3a700cdf9e..040cd84e3a 100644",
                "--- a/tests/gis_tests/gdal_tests/test_raster.py",
                "+++ b/tests/gis_tests/gdal_tests/test_raster.py",
                "@@ -516,6 +516,6 @@ class GDALRasterTests(SimpleTestCase):",
                "         self.assertEqual(target.bands[0].datatype(), source.bands[0].datatype())",
                "-        self.assertAlmostEqual(target.origin[0], 9124842.791079799)",
                "-        self.assertAlmostEqual(target.origin[1], 1589911.6476407414)",
                "-        self.assertAlmostEqual(target.scale[0], 223824.82664250192)",
                "-        self.assertAlmostEqual(target.scale[1], -223824.82664250192)",
                "+        self.assertAlmostEqual(target.origin[0], 9124842.791079799, 3)",
                "+        self.assertAlmostEqual(target.origin[1], 1589911.6476407414, 3)",
                "+        self.assertAlmostEqual(target.scale[0], 223824.82664250192, 3)",
                "+        self.assertAlmostEqual(target.scale[1], -223824.82664250192, 3)",
                "         self.assertEqual(target.skew, [0, 0])",
                "diff --git a/tests/gis_tests/geos_tests/test_geos.py b/tests/gis_tests/geos_tests/test_geos.py",
                "index 1924ccb356..62589eee9d 100644",
                "--- a/tests/gis_tests/geos_tests/test_geos.py",
                "+++ b/tests/gis_tests/geos_tests/test_geos.py",
                "@@ -1120,3 +1120,3 @@ class GEOSTest(SimpleTestCase, TestDataMixin):",
                "         p3d.transform(2774)",
                "-        self.assertEqual(p3d.z, 100)",
                "+        self.assertAlmostEqual(p3d.z, 100, 3)"
            ],
            "changed_files": [
                "tests/gis_tests/gdal_tests/test_raster.py",
                "tests/gis_tests/geos_tests/test_geos.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29761": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29761",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bb81c22d90e5eb168544670ead1a13aa9695fed5",
            "repository": "https://github.com/django/django",
            "timestamp": 1537889256,
            "hunks": 6,
            "message": "Refs #27795 -- Removed force_bytes() usage in utils/_os.py.",
            "diff": [
                "diff --git a/django/utils/_os.py b/django/utils/_os.py",
                "index f6a96b221b..81ab8e6e76 100644",
                "--- a/django/utils/_os.py",
                "+++ b/django/utils/_os.py",
                "@@ -5,3 +5,2 @@ from os.path import abspath, dirname, join, normcase, sep",
                " from django.core.exceptions import SuspiciousFileOperation",
                "-from django.utils.encoding import force_text",
                "@@ -32,4 +31,2 @@ def safe_join(base, *paths):",
                "     \"\"\"",
                "-    base = force_text(base)",
                "-    paths = [force_text(p) for p in paths]",
                "     final_path = abspath(join(base, *paths))",
                "diff --git a/tests/template_tests/test_loaders.py b/tests/template_tests/test_loaders.py",
                "index 5c81164bb5..ea69472264 100644",
                "--- a/tests/template_tests/test_loaders.py",
                "+++ b/tests/template_tests/test_loaders.py",
                "@@ -158,20 +158,13 @@ class FileSystemLoaderTests(SimpleTestCase):",
                "         with self.source_checker(['/dir1', '/dir2']) as check_sources:",
                "-            # UTF-8 bytestrings are permitted.",
                "-            check_sources(b'\\xc3\\x85ngstr\\xc3\\xb6m', ['/dir1/\u00c3\u0085ngstr\u00c3\u00b6m', '/dir2/\u00c3\u0085ngstr\u00c3\u00b6m'])",
                "-            # Strings are permitted.",
                "             check_sources('\u00c3\u0085ngstr\u00c3\u00b6m', ['/dir1/\u00c3\u0085ngstr\u00c3\u00b6m', '/dir2/\u00c3\u0085ngstr\u00c3\u00b6m'])",
                "-    def test_utf8_bytestring(self):",
                "-        \"\"\"",
                "-        Invalid UTF-8 encoding in bytestrings should raise a useful error",
                "-        \"\"\"",
                "-        engine = self.engine",
                "-        loader = engine.template_loaders[0]",
                "-        with self.assertRaises(UnicodeDecodeError):",
                "-            list(loader.get_template_sources(b'\\xc3\\xc3'))",
                "+    def test_bytestring(self):",
                "+        loader = self.engine.template_loaders[0]",
                "+        msg = \"Can't mix strings and bytes in path components\"",
                "+        with self.assertRaisesMessage(TypeError, msg):",
                "+            list(loader.get_template_sources(b'\\xc3\\x85ngstr\\xc3\\xb6m'))",
                "     def test_unicode_dir_name(self):",
                "-        with self.source_checker([b'/Stra\\xc3\\x9fe']) as check_sources:",
                "+        with self.source_checker(['/Stra\u00c3\u009fe']) as check_sources:",
                "             check_sources('\u00c3\u0085ngstr\u00c3\u00b6m', ['/Stra\u00c3\u009fe/\u00c3\u0085ngstr\u00c3\u00b6m'])",
                "-            check_sources(b'\\xc3\\x85ngstr\\xc3\\xb6m', ['/Stra\u00c3\u009fe/\u00c3\u0085ngstr\u00c3\u00b6m'])"
            ],
            "changed_files": [
                "django/utils/_os.py",
                "tests/template_tests/test_loaders.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27795": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bd5ce0599bf0dc156b943ca0d03307c7e451923c",
            "repository": "https://github.com/django/django",
            "timestamp": 1536264620,
            "hunks": 3,
            "message": "[2.1.x] Fixed #29727 -- Made nonexistent joins in F() raise FieldError. Regression in 2162f0983de0dfe2178531638ce7ea56f54dd4e7. Backport of f315d0423a09dfe20dd4d4f6a0eb11fc8e45a665 from master",
            "diff": [
                "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py",
                "index f11db05b9f..cf469cd686 100644",
                "--- a/django/db/models/sql/query.py",
                "+++ b/django/db/models/sql/query.py",
                "@@ -1570,3 +1570,3 @@ class Query:",
                "             join_info = self.setup_joins(field_list, self.get_meta(), self.get_initial_alias(), can_reuse=reuse)",
                "-            targets, _, join_list = self.trim_joins(join_info.targets, join_info.joins, join_info.path)",
                "+            targets, final_alias, join_list = self.trim_joins(join_info.targets, join_info.joins, join_info.path)",
                "             if len(targets) > 1:",
                "@@ -1574,2 +1574,5 @@ class Query:",
                "                                  \"isn't supported\")",
                "+            # Verify that the last lookup in name is a field or a transform:",
                "+            # transform_function() raises FieldError if not.",
                "+            join_info.transform_function(targets[0], final_alias)",
                "             if reuse is not None:",
                "diff --git a/tests/expressions/tests.py b/tests/expressions/tests.py",
                "index 973176e223..9a646088b1 100644",
                "--- a/tests/expressions/tests.py",
                "+++ b/tests/expressions/tests.py",
                "@@ -597,2 +597,6 @@ class BasicExpressionsTests(TestCase):",
                "+    def test_incorrect_joined_field_in_F_expression(self):",
                "+        with self.assertRaisesMessage(FieldError, \"Cannot resolve keyword 'nope' into field.\"):",
                "+            list(Company.objects.filter(ceo__pk=F('point_of_contact__nope')))",
                "+"
            ],
            "changed_files": [
                "django/db/models/sql/query.py",
                "tests/expressions/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29727": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29727",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1853e2dbf2e290ec04e3389d523bbe4bad94a42e",
            "repository": "https://github.com/django/django",
            "timestamp": 1536598834,
            "hunks": 7,
            "message": "[2.1.x] Refs #20910 -- Replaced snippet directive with code-block. Backport of c49ea6f5911296dcb40190c905e38b43cdc7c7a3 from master",
            "diff": [
                "diff --git a/docs/_ext/djangodocs.py b/docs/_ext/djangodocs.py",
                "index 95f5218d70..30d3741b89 100644",
                "--- a/docs/_ext/djangodocs.py",
                "+++ b/docs/_ext/djangodocs.py",
                "@@ -8,3 +8,3 @@ import re",
                " from docutils import nodes",
                "-from docutils.parsers.rst import Directive, directives",
                "+from docutils.parsers.rst import Directive",
                " from docutils.statemachine import ViewList",
                "@@ -15,3 +15,2 @@ from sphinx.domains.std import Cmdoption",
                " from sphinx.util.console import bold",
                "-from sphinx.util.nodes import set_source_info",
                " from sphinx.writers.html import HTMLTranslator",
                "@@ -55,13 +54,2 @@ def setup(app):",
                "     app.add_builder(DjangoStandaloneHTMLBuilder)",
                "-",
                "-    # register the snippet directive",
                "-    app.add_directive('snippet', SnippetWithFilename)",
                "-    # register a node for snippet directive so that the xml parser",
                "-    # knows how to handle the enter/exit parsing event",
                "-    app.add_node(snippet_with_filename,",
                "-                 html=(visit_snippet, depart_snippet_literal),",
                "-                 latex=(visit_snippet_latex, depart_snippet_latex),",
                "-                 man=(visit_snippet_literal, depart_snippet_literal),",
                "-                 text=(visit_snippet_literal, depart_snippet_literal),",
                "-                 texinfo=(visit_snippet_literal, depart_snippet_literal))",
                "     app.set_translator('djangohtml', DjangoHTMLTranslator)",
                "@@ -81,129 +69,2 @@ def setup(app):",
                "-class snippet_with_filename(nodes.literal_block):",
                "-    \"\"\"",
                "-    Subclass the literal_block to override the visit/depart event handlers",
                "-    \"\"\"",
                "-    pass",
                "-",
                "-",
                "-def visit_snippet_literal(self, node):",
                "-    \"\"\"",
                "-    default literal block handler",
                "-    \"\"\"",
                "-    self.visit_literal_block(node)",
                "-",
                "-",
                "-def depart_snippet_literal(self, node):",
                "-    \"\"\"",
                "-    default literal block handler",
                "-    \"\"\"",
                "-    self.depart_literal_block(node)",
                "-",
                "-",
                "-def visit_snippet(self, node):",
                "-    \"\"\"",
                "-    HTML document generator visit handler",
                "-    \"\"\"",
                "-    lang = self.highlightlang",
                "-    linenos = node.rawsource.count('\\n') >= self.highlightlinenothreshold - 1",
                "-    fname = node['filename']",
                "-    highlight_args = node.get('highlight_args', {})",
                "-    if 'language' in node:",
                "-        # code-block directives",
                "-        lang = node['language']",
                "-        highlight_args['force'] = True",
                "-    if 'linenos' in node:",
                "-        linenos = node['linenos']",
                "-",
                "-    def warner(msg):",
                "-        self.builder.warn(msg, (self.builder.current_docname, node.line))",
                "-",
                "-    highlighted = self.highlighter.highlight_block(node.rawsource, lang,",
                "-                                                   warn=warner,",
                "-                                                   linenos=linenos,",
                "-                                                   **highlight_args)",
                "-    starttag = self.starttag(node, 'div', suffix='',",
                "-                             CLASS='highlight-%s snippet' % lang)",
                "-    self.body.append(starttag)",
                "-    self.body.append('<div class=\"snippet-filename\">%s</div>\\n''' % (fname,))",
                "-    self.body.append(highlighted)",
                "-    self.body.append('</div>\\n')",
                "-    raise nodes.SkipNode",
                "-",
                "-",
                "-def visit_snippet_latex(self, node):",
                "-    \"\"\"",
                "-    Latex document generator visit handler",
                "-    \"\"\"",
                "-    code = node.rawsource.rstrip('\\n')",
                "-",
                "-    lang = self.hlsettingstack[-1][0]",
                "-    linenos = code.count('\\n') >= self.hlsettingstack[-1][1] - 1",
                "-    fname = node['filename']",
                "-    highlight_args = node.get('highlight_args', {})",
                "-    if 'language' in node:",
                "-        # code-block directives",
                "-        lang = node['language']",
                "-        highlight_args['force'] = True",
                "-    if 'linenos' in node:",
                "-        linenos = node['linenos']",
                "-",
                "-    def warner(msg):",
                "-        self.builder.warn(msg, (self.curfilestack[-1], node.line))",
                "-",
                "-    hlcode = self.highlighter.highlight_block(code, lang, warn=warner,",
                "-                                              linenos=linenos,",
                "-                                              **highlight_args)",
                "-",
                "-    self.body.append(",
                "-        '\\n{\\\\colorbox[rgb]{0.9,0.9,0.9}'",
                "-        '{\\\\makebox[\\\\textwidth][l]'",
                "-        '{\\\\small\\\\texttt{%s}}}}\\n' % (",
                "-            # Some filenames have '_', which is special in latex.",
                "-            fname.replace('_', r'\\_'),",
                "-        )",
                "-    )",
                "-",
                "-    if self.table:",
                "-        hlcode = hlcode.replace('\\\\begin{Verbatim}',",
                "-                                '\\\\begin{OriginalVerbatim}')",
                "-        self.table.has_problematic = True",
                "-        self.table.has_verbatim = True",
                "-",
                "-    hlcode = hlcode.rstrip()[:-14]  # strip \\end{Verbatim}",
                "-    hlcode = hlcode.rstrip() + '\\n'",
                "-    self.body.append('\\n' + hlcode + '\\\\end{%sVerbatim}\\n' %",
                "-                     (self.table and 'Original' or ''))",
                "-",
                "-    # Prevent rawsource from appearing in output a second time.",
                "-    raise nodes.SkipNode",
                "-",
                "-",
                "-def depart_snippet_latex(self, node):",
                "-    \"\"\"",
                "-    Latex document generator depart handler.",
                "-    \"\"\"",
                "-    pass",
                "-",
                "-",
                "-class SnippetWithFilename(Directive):",
                "-    \"\"\"",
                "-    The 'snippet' directive that allows to add the filename (optional)",
                "-    of a code snippet in the document. This is modeled after CodeBlock.",
                "-    \"\"\"",
                "-    has_content = True",
                "-    optional_arguments = 1",
                "-    option_spec = {'filename': directives.unchanged_required}",
                "-",
                "-    def run(self):",
                "-        code = '\\n'.join(self.content)",
                "-",
                "-        literal = snippet_with_filename(code, code)",
                "-        if self.arguments:",
                "-            literal['language'] = self.arguments[0]",
                "-        literal['filename'] = self.options['filename']",
                "-        set_source_info(self, literal)",
                "-        return [literal]",
                "-",
                "-",
                " class VersionDirective(Directive):",
                "diff --git a/docs/_theme/djangodocs-epub/static/epub.css b/docs/_theme/djangodocs-epub/static/epub.css",
                "index b74af5e9bf..7db68b53fb 100644",
                "--- a/docs/_theme/djangodocs-epub/static/epub.css",
                "+++ b/docs/_theme/djangodocs-epub/static/epub.css",
                "@@ -31,3 +31,3 @@ pre {",
                " /* Header for some code blocks. */",
                "-.snippet-filename {",
                "+.code-block-caption {",
                "     background-color: #393939;",
                "@@ -38,4 +38,3 @@ pre {",
                " }",
                "-.snippet-filename + .highlight > pre,",
                "-.snippet-filename + pre {",
                "+.literal-block-wrapper pre {",
                "     margin-top: 0;",
                "diff --git a/docs/_theme/djangodocs/static/djangodocs.css b/docs/_theme/djangodocs/static/djangodocs.css",
                "index 143bcdb6c9..1a397f44c0 100644",
                "--- a/docs/_theme/djangodocs/static/djangodocs.css",
                "+++ b/docs/_theme/djangodocs/static/djangodocs.css",
                "@@ -103,5 +103,4 @@ dt .literal, table .literal { background:none; }",
                " #bd a.reference tt.literal { border-bottom: 1px #234f32 dotted; }",
                "-div.snippet-filename { color: white; background-color: #234F32; margin: 0; padding: 2px 5px; width: 100%; font-family: monospace; font-size: small; line-height: 1.3em; }",
                "-div.snippet-filename + div.highlight > pre { margin-top: 0; }",
                "-div.snippet-filename + pre { margin-top: 0; }",
                "+div.code-block-caption { color: white; background-color: #234F32; margin: 0; padding: 2px 5px; width: 100%; font-family: monospace; font-size: small; line-height: 1.3em; }",
                "+div.literal-block-wrapper pre { margin-top: 0; }"
            ],
            "changed_files": [
                "docs/_ext/djangodocs.py",
                "docs/_theme/djangodocs-epub/static/epub.css",
                "docs/_theme/djangodocs/static/djangodocs.css"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "20910": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 20910",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "da92ec79621fc0bba671d8afa52b7f6884962fe5",
            "repository": "https://github.com/django/django",
            "timestamp": 1537094734,
            "hunks": 1,
            "message": "Fixed #29759 -- Fixed crash on Oracle when fetching a returned insert id with cx_Oracle 7.",
            "diff": [
                "diff --git a/django/db/backends/oracle/operations.py b/django/db/backends/oracle/operations.py",
                "index 02c7cdcc63..9cfee5897d 100644",
                "--- a/django/db/backends/oracle/operations.py",
                "+++ b/django/db/backends/oracle/operations.py",
                "@@ -228,3 +228,5 @@ END;",
                "         try:",
                "-            return int(cursor._insert_id_var.getvalue())",
                "+            value = cursor._insert_id_var.getvalue()",
                "+            # cx_Oracle < 7 returns value, >= 7 returns list with single value.",
                "+            return int(value[0] if isinstance(value, list) else value)",
                "         except (IndexError, TypeError):"
            ],
            "changed_files": [
                "django/db/backends/oracle/operations.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29759": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29759",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "24dc7d89402d533474193fda9b1b999d00e9fb4f",
            "repository": "https://github.com/django/django",
            "timestamp": 1533521547,
            "hunks": 6,
            "message": "Refs #29641 -- Extracted reusable CheckConstraint logic into a base class.",
            "diff": [
                "diff --git a/django/db/models/constraints.py b/django/db/models/constraints.py",
                "index dbbc139e48..2bad8db221 100644",
                "--- a/django/db/models/constraints.py",
                "+++ b/django/db/models/constraints.py",
                "@@ -5,5 +5,4 @@ __all__ = ['CheckConstraint']",
                "-class CheckConstraint:",
                "-    def __init__(self, *, check, name):",
                "-        self.check = check",
                "+class BaseConstraint:",
                "+    def __init__(self, name):",
                "         self.name = name",
                "@@ -11,12 +10,3 @@ class CheckConstraint:",
                "     def constraint_sql(self, model, schema_editor):",
                "-        query = Query(model)",
                "-        where = query.build_where(self.check)",
                "-        connection = schema_editor.connection",
                "-        compiler = connection.ops.compiler('SQLCompiler')(query, connection, 'default')",
                "-        sql, params = where.as_sql(compiler, connection)",
                "-        params = tuple(schema_editor.quote_value(p) for p in params)",
                "-        return schema_editor.sql_check % {",
                "-            'name': schema_editor.quote_name(self.name),",
                "-            'check': sql % params,",
                "-        }",
                "+        raise NotImplementedError('This method must be implemented by a subclass.')",
                "@@ -36,2 +26,29 @@ class CheckConstraint:",
                "+    def deconstruct(self):",
                "+        path = '%s.%s' % (self.__class__.__module__, self.__class__.__name__)",
                "+        path = path.replace('django.db.models.constraints', 'django.db.models')",
                "+        return (path, (), {'name': self.name})",
                "+",
                "+    def clone(self):",
                "+        _, args, kwargs = self.deconstruct()",
                "+        return self.__class__(*args, **kwargs)",
                "+",
                "+",
                "+class CheckConstraint(BaseConstraint):",
                "+    def __init__(self, *, check, name):",
                "+        self.check = check",
                "+        super().__init__(name)",
                "+",
                "+    def constraint_sql(self, model, schema_editor):",
                "+        query = Query(model)",
                "+        where = query.build_where(self.check)",
                "+        connection = schema_editor.connection",
                "+        compiler = connection.ops.compiler('SQLCompiler')(query, connection, 'default')",
                "+        sql, params = where.as_sql(compiler, connection)",
                "+        params = tuple(schema_editor.quote_value(p) for p in params)",
                "+        return schema_editor.sql_check % {",
                "+            'name': schema_editor.quote_name(self.name),",
                "+            'check': sql % params,",
                "+        }",
                "+",
                "     def __repr__(self):",
                "@@ -47,8 +64,4 @@ class CheckConstraint:",
                "     def deconstruct(self):",
                "-        path = '%s.%s' % (self.__class__.__module__, self.__class__.__name__)",
                "-        path = path.replace('django.db.models.constraints', 'django.db.models')",
                "-        return (path, (), {'check': self.check, 'name': self.name})",
                "-",
                "-    def clone(self):",
                "-        _, args, kwargs = self.deconstruct()",
                "-        return self.__class__(*args, **kwargs)",
                "+        path, args, kwargs = super().deconstruct()",
                "+        kwargs['check'] = self.check",
                "+        return path, args, kwargs",
                "diff --git a/tests/constraints/tests.py b/tests/constraints/tests.py",
                "index 6bff8ce042..28a5c4ba34 100644",
                "--- a/tests/constraints/tests.py",
                "+++ b/tests/constraints/tests.py",
                "@@ -1,3 +1,4 @@",
                " from django.db import IntegrityError, models",
                "-from django.test import TestCase, skipUnlessDBFeature",
                "+from django.db.models.constraints import BaseConstraint",
                "+from django.test import SimpleTestCase, TestCase, skipUnlessDBFeature",
                "@@ -6,2 +7,10 @@ from .models import Product",
                "+class BaseConstraintTests(SimpleTestCase):",
                "+    def test_constraint_sql(self):",
                "+        c = BaseConstraint('name')",
                "+        msg = 'This method must be implemented by a subclass.'",
                "+        with self.assertRaisesMessage(NotImplementedError, msg):",
                "+            c.constraint_sql(None, None)",
                "+",
                "+",
                " class CheckConstraintTests(TestCase):"
            ],
            "changed_files": [
                "django/db/models/constraints.py",
                "tests/constraints/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29641": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29641",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9a0e0d966a1a317b1b422b5e92949e6d1f33fc2f",
            "repository": "https://github.com/django/django",
            "timestamp": 1537888485,
            "hunks": 1,
            "message": "Refs #11964 -- Renamed a database check constraint test.",
            "diff": [
                "diff --git a/tests/constraints/tests.py b/tests/constraints/tests.py",
                "index 19573dffa1..908f0aaf38 100644",
                "--- a/tests/constraints/tests.py",
                "+++ b/tests/constraints/tests.py",
                "@@ -26,3 +26,3 @@ class CheckConstraintTests(TestCase):",
                "     @skipUnlessDBFeature('supports_table_check_constraints')",
                "-    def test_model_constraint(self):",
                "+    def test_database_constraint(self):",
                "         Product.objects.create(name='Valid', price=10, discounted_price=5)"
            ],
            "changed_files": [
                "tests/constraints/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "11964": "Modernized enumeration helpers on Python 3.11+. #17186"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 11964",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "32fbccab406b680bc0a0a8d39a9b95c3a08bbc5a",
            "repository": "https://github.com/django/django",
            "timestamp": 1536684671,
            "hunks": 3,
            "message": "Fixed #29749 -- Made the migrations loader ignore files starting with a tilde or underscore. Regression in 29150d5da880ac1db15e47052330790cf1b802d2.",
            "diff": [
                "diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py",
                "index 79de511860..dd0f37d135 100644",
                "--- a/django/db/migrations/loader.py",
                "+++ b/django/db/migrations/loader.py",
                "@@ -99,3 +99,6 @@ class MigrationLoader:",
                "             self.migrated_apps.add(app_config.label)",
                "-            migration_names = {name for _, name, is_pkg in pkgutil.iter_modules(module.__path__) if not is_pkg}",
                "+            migration_names = {",
                "+                name for _, name, is_pkg in pkgutil.iter_modules(module.__path__)",
                "+                if not is_pkg and name[0] not in '_~'",
                "+            }",
                "             # Load migrations",
                "diff --git a/tests/migrations/test_loader.py b/tests/migrations/test_loader.py",
                "index 71d3c9ca36..a7666c5c2d 100644",
                "--- a/tests/migrations/test_loader.py",
                "+++ b/tests/migrations/test_loader.py",
                "@@ -502,2 +502,10 @@ class LoaderTests(TestCase):",
                "+    @override_settings(MIGRATION_MODULES={'migrations': 'migrations.test_migrations_private'})",
                "+    def test_ignore_files(self):",
                "+        \"\"\"Files prefixed with underscore, tilde, or dot aren't loaded.\"\"\"",
                "+        loader = MigrationLoader(connection)",
                "+        loader.load_disk()",
                "+        migrations = [name for app, name in loader.disk_migrations if app == 'migrations']",
                "+        self.assertEqual(migrations, ['0001_initial'])",
                "+",
                "diff --git a/tests/migrations/test_migrations_private/.util.py b/tests/migrations/test_migrations_private/.util.py",
                "new file mode 100644",
                "index 0000000000..e69de29bb2",
                "diff --git a/tests/migrations/test_migrations_private/0001_initial.py b/tests/migrations/test_migrations_private/0001_initial.py",
                "new file mode 100644",
                "index 0000000000..bd613aa95e",
                "--- /dev/null",
                "+++ b/tests/migrations/test_migrations_private/0001_initial.py",
                "@@ -0,0 +1,5 @@",
                "+from django.db import migrations",
                "+",
                "+",
                "+class Migration(migrations.Migration):",
                "+    pass",
                "diff --git a/tests/migrations/test_migrations_private/__init__.py b/tests/migrations/test_migrations_private/__init__.py",
                "new file mode 100644",
                "index 0000000000..e69de29bb2",
                "diff --git a/tests/migrations/test_migrations_private/_util.py b/tests/migrations/test_migrations_private/_util.py",
                "new file mode 100644",
                "index 0000000000..e69de29bb2",
                "diff --git a/tests/migrations/test_migrations_private/~util.py b/tests/migrations/test_migrations_private/~util.py",
                "new file mode 100644",
                "index 0000000000..e69de29bb2"
            ],
            "changed_files": [
                "django/db/migrations/loader.py",
                "tests/migrations/test_loader.py",
                "tests/migrations/test_migrations_private/.util.py",
                "tests/migrations/test_migrations_private/0001_initial.py",
                "tests/migrations/test_migrations_private/__init__.py",
                "tests/migrations/test_migrations_private/_util.py",
                "tests/migrations/test_migrations_private/~util.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29749": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29749",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "430966c2fc23eeca038b0268c995a894c4b8b154",
            "repository": "https://github.com/django/django",
            "timestamp": 1537094734,
            "hunks": 1,
            "message": "[2.1.x] Fixed #29759 -- Fixed crash on Oracle when fetching a returned insert id with cx_Oracle 7. Backport of da92ec79621fc0bba671d8afa52b7f6884962fe5 from master",
            "diff": [
                "diff --git a/django/db/backends/oracle/operations.py b/django/db/backends/oracle/operations.py",
                "index 923b5d118d..1211b5398f 100644",
                "--- a/django/db/backends/oracle/operations.py",
                "+++ b/django/db/backends/oracle/operations.py",
                "@@ -224,3 +224,5 @@ END;",
                "         try:",
                "-            return int(cursor._insert_id_var.getvalue())",
                "+            value = cursor._insert_id_var.getvalue()",
                "+            # cx_Oracle < 7 returns value, >= 7 returns list with single value.",
                "+            return int(value[0] if isinstance(value, list) else value)",
                "         except (IndexError, TypeError):"
            ],
            "changed_files": [
                "django/db/backends/oracle/operations.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29759": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29759",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "5bbcf83fce5e5fb1d7369f2bfb81b7e06a4b1a85",
            "repository": "https://github.com/django/django",
            "timestamp": 1536684671,
            "hunks": 3,
            "message": "[2.1.x] Fixed #29749 -- Made the migrations loader ignore files starting with a tilde or underscore. Regression in 29150d5da880ac1db15e47052330790cf1b802d2. Backport of 32fbccab406b680bc0a0a8d39a9b95c3a08bbc5a from master",
            "diff": [
                "diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py",
                "index 4147cc3f09..518212b6d0 100644",
                "--- a/django/db/migrations/loader.py",
                "+++ b/django/db/migrations/loader.py",
                "@@ -99,3 +99,6 @@ class MigrationLoader:",
                "             self.migrated_apps.add(app_config.label)",
                "-            migration_names = {name for _, name, is_pkg in pkgutil.iter_modules(module.__path__) if not is_pkg}",
                "+            migration_names = {",
                "+                name for _, name, is_pkg in pkgutil.iter_modules(module.__path__)",
                "+                if not is_pkg and name[0] not in '_~'",
                "+            }",
                "             # Load migrations",
                "diff --git a/tests/migrations/test_loader.py b/tests/migrations/test_loader.py",
                "index 71d3c9ca36..a7666c5c2d 100644",
                "--- a/tests/migrations/test_loader.py",
                "+++ b/tests/migrations/test_loader.py",
                "@@ -502,2 +502,10 @@ class LoaderTests(TestCase):",
                "+    @override_settings(MIGRATION_MODULES={'migrations': 'migrations.test_migrations_private'})",
                "+    def test_ignore_files(self):",
                "+        \"\"\"Files prefixed with underscore, tilde, or dot aren't loaded.\"\"\"",
                "+        loader = MigrationLoader(connection)",
                "+        loader.load_disk()",
                "+        migrations = [name for app, name in loader.disk_migrations if app == 'migrations']",
                "+        self.assertEqual(migrations, ['0001_initial'])",
                "+",
                "diff --git a/tests/migrations/test_migrations_private/.util.py b/tests/migrations/test_migrations_private/.util.py",
                "new file mode 100644",
                "index 0000000000..e69de29bb2",
                "diff --git a/tests/migrations/test_migrations_private/0001_initial.py b/tests/migrations/test_migrations_private/0001_initial.py",
                "new file mode 100644",
                "index 0000000000..bd613aa95e",
                "--- /dev/null",
                "+++ b/tests/migrations/test_migrations_private/0001_initial.py",
                "@@ -0,0 +1,5 @@",
                "+from django.db import migrations",
                "+",
                "+",
                "+class Migration(migrations.Migration):",
                "+    pass",
                "diff --git a/tests/migrations/test_migrations_private/__init__.py b/tests/migrations/test_migrations_private/__init__.py",
                "new file mode 100644",
                "index 0000000000..e69de29bb2",
                "diff --git a/tests/migrations/test_migrations_private/_util.py b/tests/migrations/test_migrations_private/_util.py",
                "new file mode 100644",
                "index 0000000000..e69de29bb2",
                "diff --git a/tests/migrations/test_migrations_private/~util.py b/tests/migrations/test_migrations_private/~util.py",
                "new file mode 100644",
                "index 0000000000..e69de29bb2"
            ],
            "changed_files": [
                "django/db/migrations/loader.py",
                "tests/migrations/test_loader.py",
                "tests/migrations/test_migrations_private/.util.py",
                "tests/migrations/test_migrations_private/0001_initial.py",
                "tests/migrations/test_migrations_private/__init__.py",
                "tests/migrations/test_migrations_private/_util.py",
                "tests/migrations/test_migrations_private/~util.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29749": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29749",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "05c578bc1f6ab09ade17a29f79d7244b7acfb58f",
            "repository": "https://github.com/django/django",
            "timestamp": 1538092177,
            "hunks": 2,
            "message": "Fixed #29796 -- Added system check for STATICFILES_DIRS prefix ending with a slash.",
            "diff": [
                "diff --git a/django/contrib/staticfiles/finders.py b/django/contrib/staticfiles/finders.py",
                "index afce4ca637..8d8f1cb983 100644",
                "--- a/django/contrib/staticfiles/finders.py",
                "+++ b/django/contrib/staticfiles/finders.py",
                "@@ -80,3 +80,9 @@ class FileSystemFinder(BaseFinder):",
                "             if isinstance(root, (list, tuple)):",
                "-                _, root = root",
                "+                prefix, root = root",
                "+                if prefix.endswith('/'):",
                "+                    errors.append(Error(",
                "+                        'The prefix %r in the STATICFILES_DIRS setting must '",
                "+                        'not end with a slash.' % prefix,",
                "+                        id='staticfiles.E003',",
                "+                    ))",
                "             if settings.STATIC_ROOT and os.path.abspath(settings.STATIC_ROOT) == os.path.abspath(root):",
                "diff --git a/tests/staticfiles_tests/test_checks.py b/tests/staticfiles_tests/test_checks.py",
                "index 0fe432b5c7..d5dc90b781 100644",
                "--- a/tests/staticfiles_tests/test_checks.py",
                "+++ b/tests/staticfiles_tests/test_checks.py",
                "@@ -77 +77,11 @@ class FindersCheckTests(SimpleTestCase):",
                "         ])",
                "+",
                "+    @override_settings(STATICFILES_DIRS=[('prefix/', '/fake/path')])",
                "+    def test_prefix_contains_trailing_slash(self):",
                "+        self.assertEqual(check_finders(None), [",
                "+            Error(",
                "+                \"The prefix 'prefix/' in the STATICFILES_DIRS setting must \"",
                "+                \"not end with a slash.\",",
                "+                id='staticfiles.E003',",
                "+            )",
                "+        ])"
            ],
            "changed_files": [
                "django/contrib/staticfiles/finders.py",
                "tests/staticfiles_tests/test_checks.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29796": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29796",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "495abe00951ceb9787d7f36590f71aa14c973d3d",
            "repository": "https://github.com/django/django",
            "timestamp": 1537385260,
            "hunks": 10,
            "message": "Refs #29198 -- Fixed migrate --plan crash if RunSQL uses a list or tuple. Also fixed test failures if sqlparse isn't installed.",
            "diff": [
                "diff --git a/django/core/management/commands/migrate.py b/django/core/management/commands/migrate.py",
                "index 68aa52bb4a..f28816fcee 100644",
                "--- a/django/core/management/commands/migrate.py",
                "+++ b/django/core/management/commands/migrate.py",
                "@@ -346,3 +346,3 @@ class Command(BaseCommand):",
                "         else:",
                "-            action = action.replace('\\n', '')",
                "+            action = str(action).replace('\\n', '')",
                "             is_error = False",
                "diff --git a/tests/migrations/test_commands.py b/tests/migrations/test_commands.py",
                "index aee89ed912..268e180697 100644",
                "--- a/tests/migrations/test_commands.py",
                "+++ b/tests/migrations/test_commands.py",
                "@@ -22,2 +22,7 @@ from .test_base import MigrationTestBase",
                "+try:",
                "+    import sqlparse",
                "+except ImportError:",
                "+    sqlparse = None",
                "+",
                "@@ -313,6 +318,6 @@ class MigrateTests(MigrationTestBase):",
                "             '    Create model Book\\n'",
                "-            '    Raw SQL operation -> SELECT * FROM migrations_book\\n'",
                "+            \"    Raw SQL operation -> ['SELECT * FROM migrations_book']\\n\"",
                "             'migrations.0003_third\\n'",
                "             '    Create model Author\\n'",
                "-            '    Raw SQL operation -> SELECT * FROM migrations_author\\n',",
                "+            \"    Raw SQL operation -> ['SELECT * FROM migrations_author']\\n\",",
                "             out.getvalue()",
                "@@ -336,6 +341,6 @@ class MigrateTests(MigrationTestBase):",
                "             '    Undo Create model Author\\n'",
                "-            '    Raw SQL operation -> SELECT * FROM migrations_book\\n'",
                "+            \"    Raw SQL operation -> ['SELECT * FROM migrations_book']\\n\"",
                "             'migrations.0002_second\\n'",
                "             '    Undo Create model Book\\n'",
                "-            '    Raw SQL operation -> SELECT * FROM migrations_salamander\\n',",
                "+            \"    Raw SQL operation -> ['SELECT * FROM migrations_salamand\u00e2\u0080\u00a6\\n\",",
                "             out.getvalue()",
                "@@ -351,16 +356,19 @@ class MigrateTests(MigrationTestBase):",
                "         )",
                "-        # Migrate to the fourth migration.",
                "-        call_command('migrate', 'migrations', '0004', verbosity=0)",
                "-        out = io.StringIO()",
                "         # Show the plan when an operation is irreversible.",
                "-        call_command('migrate', 'migrations', '0003', plan=True, stdout=out, no_color=True)",
                "-        self.assertEqual(",
                "-            'Planned operations:\\n'",
                "-            'migrations.0004_fourth\\n'",
                "-            '    Raw SQL operation -> IRREVERSIBLE\\n',",
                "-            out.getvalue()",
                "-        )",
                "-        # Cleanup by unmigrating everything: fake the irreversible, then",
                "-        # migrate all to zero.",
                "-        call_command('migrate', 'migrations', '0003', fake=True, verbosity=0)",
                "+        # Migration 0004's RunSQL uses a SQL string instead of a list, so",
                "+        # sqlparse may be required for splitting.",
                "+        if sqlparse or not connection.features.requires_sqlparse_for_splitting:",
                "+            # Migrate to the fourth migration.",
                "+            call_command('migrate', 'migrations', '0004', verbosity=0)",
                "+            out = io.StringIO()",
                "+            call_command('migrate', 'migrations', '0003', plan=True, stdout=out, no_color=True)",
                "+            self.assertEqual(",
                "+                'Planned operations:\\n'",
                "+                'migrations.0004_fourth\\n'",
                "+                '    Raw SQL operation -> IRREVERSIBLE\\n',",
                "+                out.getvalue()",
                "+            )",
                "+            # Cleanup by unmigrating everything: fake the irreversible, then",
                "+            # migrate all to zero.",
                "+            call_command('migrate', 'migrations', '0003', fake=True, verbosity=0)",
                "         call_command('migrate', 'migrations', 'zero', verbosity=0)",
                "diff --git a/tests/migrations/test_migrations_plan/0002_second.py b/tests/migrations/test_migrations_plan/0002_second.py",
                "index e8aeec880b..2fc9ea6933 100644",
                "--- a/tests/migrations/test_migrations_plan/0002_second.py",
                "+++ b/tests/migrations/test_migrations_plan/0002_second.py",
                "@@ -17,3 +17,3 @@ class Migration(migrations.Migration):",
                "         ),",
                "-        migrations.RunSQL('SELECT * FROM migrations_book', 'SELECT * FROM migrations_salamander')",
                "+        migrations.RunSQL(['SELECT * FROM migrations_book'], ['SELECT * FROM migrations_salamander'])",
                "diff --git a/tests/migrations/test_migrations_plan/0003_third.py b/tests/migrations/test_migrations_plan/0003_third.py",
                "index d045a91448..6d17e217ec 100644",
                "--- a/tests/migrations/test_migrations_plan/0003_third.py",
                "+++ b/tests/migrations/test_migrations_plan/0003_third.py",
                "@@ -17,3 +17,3 @@ class Migration(migrations.Migration):",
                "         ),",
                "-        migrations.RunSQL('SELECT * FROM migrations_author', 'SELECT * FROM migrations_book')",
                "+        migrations.RunSQL(['SELECT * FROM migrations_author'], ['SELECT * FROM migrations_book'])",
                "     ]"
            ],
            "changed_files": [
                "django/core/management/commands/migrate.py",
                "tests/migrations/test_commands.py",
                "tests/migrations/test_migrations_plan/0002_second.py",
                "tests/migrations/test_migrations_plan/0003_third.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29198": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29198",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "40c8ffad7249fd37ca1629f06d3ab6b129d84b21",
            "repository": "https://github.com/django/django",
            "timestamp": 1537287558,
            "hunks": 2,
            "message": "Fixed #29768 -- Improved error message when an AppConfig has a typo in INSTALLED_APPS.",
            "diff": [
                "diff --git a/django/apps/config.py b/django/apps/config.py",
                "index aeb47923d8..f5c971fc9c 100644",
                "--- a/django/apps/config.py",
                "+++ b/django/apps/config.py",
                "@@ -120,4 +120,17 @@ class AppConfig:",
                "             if module is None:",
                "-                # If importing as an app module failed, that error probably",
                "-                # contains the most informative traceback. Trigger it again.",
                "+                # If importing as an app module failed, check if the module",
                "+                # contains any valid AppConfigs and show them as choices.",
                "+                # Otherwise, that error probably contains the most informative",
                "+                # traceback, so trigger it again.",
                "+                candidates = sorted(",
                "+                    repr(name) for name, candidate in mod.__dict__.items()",
                "+                    if isinstance(candidate, type) and",
                "+                    issubclass(candidate, AppConfig) and",
                "+                    candidate is not AppConfig",
                "+                )",
                "+                if candidates:",
                "+                    raise ImproperlyConfigured(",
                "+                        \"'%s' does not contain a class '%s'. Choices are: %s.\"",
                "+                        % (mod_path, cls_name, ', '.join(candidates))",
                "+                    )",
                "                 import_module(entry)",
                "diff --git a/tests/apps/tests.py b/tests/apps/tests.py",
                "index 2fec1d8b4c..cd22a4d45c 100644",
                "--- a/tests/apps/tests.py",
                "+++ b/tests/apps/tests.py",
                "@@ -83,6 +83,14 @@ class AppsTests(SimpleTestCase):",
                "     def test_no_such_app_config(self):",
                "-        \"\"\"",
                "-        Tests when INSTALLED_APPS contains an entry that doesn't exist.",
                "-        \"\"\"",
                "-        with self.assertRaises(ImportError):",
                "+        msg = \"No module named 'apps.NoSuchConfig'\"",
                "+        with self.assertRaisesMessage(ImportError, msg):",
                "+            with self.settings(INSTALLED_APPS=['apps.NoSuchConfig']):",
                "+                pass",
                "+",
                "+    def test_no_such_app_config_with_choices(self):",
                "+        msg = (",
                "+            \"'apps.apps' does not contain a class 'NoSuchConfig'. Choices are: \"",
                "+            \"'BadConfig', 'MyAdmin', 'MyAuth', 'NoSuchApp', 'PlainAppsConfig', \"",
                "+            \"'RelabeledAppsConfig'.\"",
                "+        )",
                "+        with self.assertRaisesMessage(ImproperlyConfigured, msg):",
                "             with self.settings(INSTALLED_APPS=['apps.apps.NoSuchConfig']):"
            ],
            "changed_files": [
                "django/apps/config.py",
                "tests/apps/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29768": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29768",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a4d8e412e0295ac7d40bb87ee6e5f44649f97816",
            "repository": "https://github.com/django/django",
            "timestamp": 1536684418,
            "hunks": 1,
            "message": "Refs #29560 -- Fixed typo in django/core/management/base.py.",
            "diff": [
                "diff --git a/django/core/management/base.py b/django/core/management/base.py",
                "index 354e778a70..db131ed757 100644",
                "--- a/django/core/management/base.py",
                "+++ b/django/core/management/base.py",
                "@@ -97,3 +97,3 @@ class DjangoHelpFormatter(HelpFormatter):",
                "         '--version', '--verbosity', '--traceback', '--settings', '--pythonpath',",
                "-        '--no-color', '--force_color',",
                "+        '--no-color', '--force-color',",
                "     }"
            ],
            "changed_files": [
                "django/core/management/base.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29560": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29560",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f315d0423a09dfe20dd4d4f6a0eb11fc8e45a665",
            "repository": "https://github.com/django/django",
            "timestamp": 1536264620,
            "hunks": 3,
            "message": "Fixed #29727 -- Made nonexistent joins in F() raise FieldError. Regression in 2162f0983de0dfe2178531638ce7ea56f54dd4e7.",
            "diff": [
                "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py",
                "index 74eec72291..81f6f196d3 100644",
                "--- a/django/db/models/sql/query.py",
                "+++ b/django/db/models/sql/query.py",
                "@@ -1596,3 +1596,3 @@ class Query:",
                "             join_info = self.setup_joins(field_list, self.get_meta(), self.get_initial_alias(), can_reuse=reuse)",
                "-            targets, _, join_list = self.trim_joins(join_info.targets, join_info.joins, join_info.path)",
                "+            targets, final_alias, join_list = self.trim_joins(join_info.targets, join_info.joins, join_info.path)",
                "             if len(targets) > 1:",
                "@@ -1600,2 +1600,5 @@ class Query:",
                "                                  \"isn't supported\")",
                "+            # Verify that the last lookup in name is a field or a transform:",
                "+            # transform_function() raises FieldError if not.",
                "+            join_info.transform_function(targets[0], final_alias)",
                "             if reuse is not None:",
                "diff --git a/tests/expressions/tests.py b/tests/expressions/tests.py",
                "index 973176e223..9a646088b1 100644",
                "--- a/tests/expressions/tests.py",
                "+++ b/tests/expressions/tests.py",
                "@@ -597,2 +597,6 @@ class BasicExpressionsTests(TestCase):",
                "+    def test_incorrect_joined_field_in_F_expression(self):",
                "+        with self.assertRaisesMessage(FieldError, \"Cannot resolve keyword 'nope' into field.\"):",
                "+            list(Company.objects.filter(ceo__pk=F('point_of_contact__nope')))",
                "+"
            ],
            "changed_files": [
                "django/db/models/sql/query.py",
                "tests/expressions/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29727": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29727",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9142bebff2657f2129a2028137f81d09db989968",
            "repository": "https://github.com/django/django",
            "timestamp": 1533521710,
            "hunks": 21,
            "message": "Refs #11964 -- Changed CheckConstraint() signature to use keyword-only arguments. Also renamed the `constraint` argument to `check` to better represent which part of the constraint the provided `Q` object represents.",
            "diff": [
                "diff --git a/django/db/models/constraints.py b/django/db/models/constraints.py",
                "index fe99f8310d..dbbc139e48 100644",
                "--- a/django/db/models/constraints.py",
                "+++ b/django/db/models/constraints.py",
                "@@ -6,4 +6,4 @@ __all__ = ['CheckConstraint']",
                " class CheckConstraint:",
                "-    def __init__(self, constraint, name):",
                "-        self.constraint = constraint",
                "+    def __init__(self, *, check, name):",
                "+        self.check = check",
                "         self.name = name",
                "@@ -12,3 +12,3 @@ class CheckConstraint:",
                "         query = Query(model)",
                "-        where = query.build_where(self.constraint)",
                "+        where = query.build_where(self.check)",
                "         connection = schema_editor.connection",
                "@@ -37,3 +37,3 @@ class CheckConstraint:",
                "     def __repr__(self):",
                "-        return \"<%s: constraint='%s' name='%s'>\" % (self.__class__.__name__, self.constraint, self.name)",
                "+        return \"<%s: check='%s' name=%r>\" % (self.__class__.__name__, self.check, self.name)",
                "@@ -43,3 +43,3 @@ class CheckConstraint:",
                "             self.name == other.name and",
                "-            self.constraint == other.constraint",
                "+            self.check == other.check",
                "         )",
                "@@ -49,3 +49,3 @@ class CheckConstraint:",
                "         path = path.replace('django.db.models.constraints', 'django.db.models')",
                "-        return (path, (), {'constraint': self.constraint, 'name': self.name})",
                "+        return (path, (), {'check': self.check, 'name': self.name})",
                "diff --git a/tests/constraints/models.py b/tests/constraints/models.py",
                "index de49fa2765..08fbe9e1df 100644",
                "--- a/tests/constraints/models.py",
                "+++ b/tests/constraints/models.py",
                "@@ -11,5 +11,5 @@ class Product(models.Model):",
                "             models.CheckConstraint(",
                "-                models.Q(price__gt=models.F('discounted_price')),",
                "-                'price_gt_discounted_price'",
                "-            )",
                "+                check=models.Q(price__gt=models.F('discounted_price')),",
                "+                name='price_gt_discounted_price',",
                "+            ),",
                "         ]",
                "diff --git a/tests/constraints/tests.py b/tests/constraints/tests.py",
                "index 908f0aaf38..6bff8ce042 100644",
                "--- a/tests/constraints/tests.py",
                "+++ b/tests/constraints/tests.py",
                "@@ -8,8 +8,8 @@ class CheckConstraintTests(TestCase):",
                "     def test_repr(self):",
                "-        constraint = models.Q(price__gt=models.F('discounted_price'))",
                "+        check = models.Q(price__gt=models.F('discounted_price'))",
                "         name = 'price_gt_discounted_price'",
                "-        check = models.CheckConstraint(constraint, name)",
                "+        constraint = models.CheckConstraint(check=check, name=name)",
                "         self.assertEqual(",
                "-            repr(check),",
                "-            \"<CheckConstraint: constraint='{}' name='{}'>\".format(constraint, name),",
                "+            repr(constraint),",
                "+            \"<CheckConstraint: check='{}' name='{}'>\".format(check, name),",
                "         )",
                "@@ -17,9 +17,9 @@ class CheckConstraintTests(TestCase):",
                "     def test_deconstruction(self):",
                "-        constraint = models.Q(price__gt=models.F('discounted_price'))",
                "+        check = models.Q(price__gt=models.F('discounted_price'))",
                "         name = 'price_gt_discounted_price'",
                "-        check = models.CheckConstraint(constraint, name)",
                "-        path, args, kwargs = check.deconstruct()",
                "+        constraint = models.CheckConstraint(check=check, name=name)",
                "+        path, args, kwargs = constraint.deconstruct()",
                "         self.assertEqual(path, 'django.db.models.CheckConstraint')",
                "         self.assertEqual(args, ())",
                "-        self.assertEqual(kwargs, {'constraint': constraint, 'name': name})",
                "+        self.assertEqual(kwargs, {'check': check, 'name': name})",
                "diff --git a/tests/invalid_models_tests/test_models.py b/tests/invalid_models_tests/test_models.py",
                "index 709d73d6c8..6ab13f18db 100644",
                "--- a/tests/invalid_models_tests/test_models.py",
                "+++ b/tests/invalid_models_tests/test_models.py",
                "@@ -1005,3 +1005,3 @@ class ConstraintsTests(SimpleTestCase):",
                "             class Meta:",
                "-                constraints = [models.CheckConstraint(models.Q(age__gte=18), 'is_adult')]",
                "+                constraints = [models.CheckConstraint(check=models.Q(age__gte=18), name='is_adult')]",
                "diff --git a/tests/migrations/test_autodetector.py b/tests/migrations/test_autodetector.py",
                "index 615695e159..66470526a7 100644",
                "--- a/tests/migrations/test_autodetector.py",
                "+++ b/tests/migrations/test_autodetector.py",
                "@@ -67,3 +67,3 @@ class AutodetectorTests(TestCase):",
                "     ],",
                "-        {'constraints': [models.CheckConstraint(models.Q(name__contains='Bob'), 'name_contains_bob')]},",
                "+        {'constraints': [models.CheckConstraint(check=models.Q(name__contains='Bob'), name='name_contains_bob')]},",
                "     )",
                "@@ -1401,5 +1401,5 @@ class AutodetectorTests(TestCase):",
                "             ('name', models.CharField(max_length=200)),",
                "-        ], {'constraints': [models.CheckConstraint(models.Q(name__contains='Bob'), 'name_contains_bob')]})",
                "+        ], {'constraints': [models.CheckConstraint(check=models.Q(name__contains='Bob'), name='name_contains_bob')]})",
                "         changes = self.get_changes([], [author])",
                "-        added_constraint = models.CheckConstraint(models.Q(name__contains='Bob'), 'name_contains_bob')",
                "+        added_constraint = models.CheckConstraint(check=models.Q(name__contains='Bob'), name='name_contains_bob')",
                "         # Right number of migrations?",
                "@@ -1419,3 +1419,3 @@ class AutodetectorTests(TestCase):",
                "         self.assertOperationTypes(changes, 'testapp', 0, ['AddConstraint'])",
                "-        added_constraint = models.CheckConstraint(models.Q(name__contains='Bob'), 'name_contains_bob')",
                "+        added_constraint = models.CheckConstraint(check=models.Q(name__contains='Bob'), name='name_contains_bob')",
                "         self.assertOperationAttributes(changes, 'testapp', 0, 0, model_name='author', constraint=added_constraint)",
                "diff --git a/tests/migrations/test_operations.py b/tests/migrations/test_operations.py",
                "index 9da67fad7f..bdc17df3f2 100644",
                "--- a/tests/migrations/test_operations.py",
                "+++ b/tests/migrations/test_operations.py",
                "@@ -112,3 +112,3 @@ class OperationTestBase(MigrationTestBase):",
                "                 \"Pony\",",
                "-                models.CheckConstraint(models.Q(pink__gt=2), name=\"pony_test_constraint\")",
                "+                models.CheckConstraint(check=models.Q(pink__gt=2), name=\"pony_test_constraint\")",
                "             ))",
                "@@ -473,3 +473,3 @@ class OperationTests(OperationTestBase):",
                "         where = models.Q(pink__gt=2)",
                "-        check_constraint = models.CheckConstraint(where, name='test_constraint_pony_pink_gt_2')",
                "+        check_constraint = models.CheckConstraint(check=where, name='test_constraint_pony_pink_gt_2')",
                "         operation = migrations.CreateModel(",
                "@@ -1784,3 +1784,3 @@ class OperationTests(OperationTestBase):",
                "         where = models.Q(pink__gt=2)",
                "-        check_constraint = models.CheckConstraint(where, name='test_constraint_pony_pink_gt_2')",
                "+        check_constraint = models.CheckConstraint(check=where, name='test_constraint_pony_pink_gt_2')",
                "         operation = migrations.AddConstraint('Pony', check_constraint)",
                "diff --git a/tests/migrations/test_state.py b/tests/migrations/test_state.py",
                "index 6a7a087ac5..259a42f7fd 100644",
                "--- a/tests/migrations/test_state.py",
                "+++ b/tests/migrations/test_state.py",
                "@@ -1145,3 +1145,3 @@ class ModelStateTests(SimpleTestCase):",
                "             class Meta:",
                "-                constraints = [models.CheckConstraint(models.Q(size__gt=1), 'size_gt_1')]",
                "+                constraints = [models.CheckConstraint(check=models.Q(size__gt=1), name='size_gt_1')]"
            ],
            "changed_files": [
                "django/db/models/constraints.py",
                "tests/constraints/models.py",
                "tests/constraints/tests.py",
                "tests/invalid_models_tests/test_models.py",
                "tests/migrations/test_autodetector.py",
                "tests/migrations/test_operations.py",
                "tests/migrations/test_state.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "11964": "Modernized enumeration helpers on Python 3.11+. #17186"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 11964",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "db926a0048bbfabafc5711034d08e2a221564f3e",
            "repository": "https://github.com/django/django",
            "timestamp": 1521580462,
            "hunks": 36,
            "message": "Fixed #29243 -- Improved efficiency of migration graph algorithm.",
            "diff": [
                "diff --git a/django/db/migrations/graph.py b/django/db/migrations/graph.py",
                "index 1f0bafb00e..0096392c5d 100644",
                "--- a/django/db/migrations/graph.py",
                "+++ b/django/db/migrations/graph.py",
                "@@ -1,2 +1 @@",
                "-import warnings",
                " from functools import total_ordering",
                "@@ -4,3 +3,2 @@ from functools import total_ordering",
                " from django.db.migrations.state import ProjectState",
                "-from django.utils.datastructures import OrderedSet",
                "@@ -8,9 +6,2 @@ from .exceptions import CircularDependencyError, NodeNotFoundError",
                "-RECURSION_DEPTH_WARNING = (",
                "-    \"Maximum recursion depth exceeded while generating migration graph, \"",
                "-    \"falling back to iterative approach. If you're experiencing performance issues, \"",
                "-    \"consider squashing migrations as described at \"",
                "-    \"https://docs.djangoproject.com/en/dev/topics/migrations/#squashing-migrations.\"",
                "-)",
                "-",
                "@@ -51,30 +42,11 @@ class Node:",
                "-    # Use manual caching, @cached_property effectively doubles the",
                "-    # recursion depth for each recursion.",
                "-    def ancestors(self):",
                "-        # Use self.key instead of self to speed up the frequent hashing",
                "-        # when constructing an OrderedSet.",
                "-        if '_ancestors' not in self.__dict__:",
                "-            ancestors = []",
                "-            for parent in sorted(self.parents, reverse=True):",
                "-                ancestors += parent.ancestors()",
                "-            ancestors.append(self.key)",
                "-            self.__dict__['_ancestors'] = list(OrderedSet(ancestors))",
                "-        return self.__dict__['_ancestors']",
                "-",
                "-    # Use manual caching, @cached_property effectively doubles the",
                "-    # recursion depth for each recursion.",
                "-    def descendants(self):",
                "-        # Use self.key instead of self to speed up the frequent hashing",
                "-        # when constructing an OrderedSet.",
                "-        if '_descendants' not in self.__dict__:",
                "-            descendants = []",
                "-            for child in sorted(self.children, reverse=True):",
                "-                descendants += child.descendants()",
                "-            descendants.append(self.key)",
                "-            self.__dict__['_descendants'] = list(OrderedSet(descendants))",
                "-        return self.__dict__['_descendants']",
                "-",
                " class DummyNode(Node):",
                "+    \"\"\"",
                "+    A node that doesn't correspond to a migration file on disk.",
                "+    (A squashed migration that was removed, for example.)",
                "+",
                "+    After the migration graph is processed, all dummy nodes should be removed.",
                "+    If there are any left, a nonexistent dependency error is raised.",
                "+    \"\"\"",
                "     def __init__(self, key, origin, error_message):",
                "@@ -84,12 +56,2 @@ class DummyNode(Node):",
                "-    def promote(self):",
                "-        \"\"\"",
                "-        Transition dummy to a normal node and clean off excess attribs.",
                "-        Creating a Node object from scratch would be too much of a",
                "-        hassle as many dependendies would need to be remapped.",
                "-        \"\"\"",
                "-        del self.origin",
                "-        del self.error_message",
                "-        self.__class__ = Node",
                "-",
                "     def raise_error(self):",
                "@@ -124,15 +86,8 @@ class MigrationGraph:",
                "         self.nodes = {}",
                "-        self.cached = False",
                "     def add_node(self, key, migration):",
                "-        # If the key already exists, then it must be a dummy node.",
                "-        dummy_node = self.node_map.get(key)",
                "-        if dummy_node:",
                "-            # Promote DummyNode to Node.",
                "-            dummy_node.promote()",
                "-        else:",
                "-            node = Node(key)",
                "-            self.node_map[key] = node",
                "+        assert key not in self.node_map",
                "+        node = Node(key)",
                "+        self.node_map[key] = node",
                "         self.nodes[key] = migration",
                "-        self.clear_cache()",
                "@@ -165,3 +120,2 @@ class MigrationGraph:",
                "             self.validate_consistency()",
                "-        self.clear_cache()",
                "@@ -201,3 +155,2 @@ class MigrationGraph:",
                "                         parent.add_child(replacement_node)",
                "-        self.clear_cache()",
                "@@ -238,3 +191,2 @@ class MigrationGraph:",
                "             # assume the replaced nodes already have the correct ancestry.",
                "-        self.clear_cache()",
                "@@ -244,9 +196,2 @@ class MigrationGraph:",
                "-    def clear_cache(self):",
                "-        if self.cached:",
                "-            for node in self.nodes:",
                "-                self.node_map[node].__dict__.pop('_ancestors', None)",
                "-                self.node_map[node].__dict__.pop('_descendants', None)",
                "-            self.cached = False",
                "-",
                "     def forwards_plan(self, target):",
                "@@ -259,12 +204,3 @@ class MigrationGraph:",
                "             raise NodeNotFoundError(\"Node %r not a valid node\" % (target,), target)",
                "-        # Use parent.key instead of parent to speed up the frequent hashing in ensure_not_cyclic",
                "-        self.ensure_not_cyclic(target, lambda x: (parent.key for parent in self.node_map[x].parents))",
                "-        self.cached = True",
                "-        node = self.node_map[target]",
                "-        try:",
                "-            return node.ancestors()",
                "-        except RuntimeError:",
                "-            # fallback to iterative dfs",
                "-            warnings.warn(RECURSION_DEPTH_WARNING, RuntimeWarning)",
                "-            return self.iterative_dfs(node)",
                "+        return self.iterative_dfs(self.node_map[target])",
                "@@ -278,12 +214,3 @@ class MigrationGraph:",
                "             raise NodeNotFoundError(\"Node %r not a valid node\" % (target,), target)",
                "-        # Use child.key instead of child to speed up the frequent hashing in ensure_not_cyclic",
                "-        self.ensure_not_cyclic(target, lambda x: (child.key for child in self.node_map[x].children))",
                "-        self.cached = True",
                "-        node = self.node_map[target]",
                "-        try:",
                "-            return node.descendants()",
                "-        except RuntimeError:",
                "-            # fallback to iterative dfs",
                "-            warnings.warn(RECURSION_DEPTH_WARNING, RuntimeWarning)",
                "-            return self.iterative_dfs(node, forwards=False)",
                "+        return self.iterative_dfs(self.node_map[target], forwards=False)",
                "@@ -292,8 +219,15 @@ class MigrationGraph:",
                "         visited = []",
                "-        stack = [start]",
                "+        visited_set = set()",
                "+        stack = [(start, False)]",
                "         while stack:",
                "-            node = stack.pop()",
                "-            visited.append(node)",
                "-            stack += sorted(node.parents if forwards else node.children)",
                "-        return list(OrderedSet(reversed(visited)))",
                "+            node, processed = stack.pop()",
                "+            if node in visited_set:",
                "+                pass",
                "+            elif processed:",
                "+                visited_set.add(node)",
                "+                visited.append(node.key)",
                "+            else:",
                "+                stack.append((node, True))",
                "+                stack += [(n, False) for n in sorted(node.parents if forwards else node.children)]",
                "+        return visited",
                "@@ -324,3 +258,3 @@ class MigrationGraph:",
                "-    def ensure_not_cyclic(self, start, get_children):",
                "+    def ensure_not_cyclic(self):",
                "         # Algo from GvR:",
                "@@ -333,3 +267,6 @@ class MigrationGraph:",
                "                 top = stack[-1]",
                "-                for node in get_children(top):",
                "+                for child in self.node_map[top].children:",
                "+                    # Use child.key instead of child to speed up the frequent",
                "+                    # hashing.",
                "+                    node = child.key",
                "                     if node in stack:",
                "diff --git a/django/db/migrations/loader.py b/django/db/migrations/loader.py",
                "index 4147cc3f09..79de511860 100644",
                "--- a/django/db/migrations/loader.py",
                "+++ b/django/db/migrations/loader.py",
                "@@ -215,4 +215,2 @@ class MigrationLoader:",
                "             self.graph.add_node(key, migration)",
                "-            # Internal (aka same-app) dependencies.",
                "-            self.add_internal_dependencies(key, migration)",
                "             # Replacing migrations.",
                "@@ -220,2 +218,5 @@ class MigrationLoader:",
                "                 self.replacements[key] = migration",
                "+        for key, migration in self.disk_migrations.items():",
                "+            # Internal (same app) dependencies.",
                "+            self.add_internal_dependencies(key, migration)",
                "         # Add external dependencies now that the internal ones have been resolved.",
                "@@ -270,2 +271,3 @@ class MigrationLoader:",
                "             raise exc",
                "+        self.graph.ensure_not_cyclic()",
                "diff --git a/tests/migrations/test_graph.py b/tests/migrations/test_graph.py",
                "index 884aaa70f7..10a5696f57 100644",
                "--- a/tests/migrations/test_graph.py",
                "+++ b/tests/migrations/test_graph.py",
                "@@ -3,5 +3,3 @@ from django.db.migrations.exceptions import (",
                " )",
                "-from django.db.migrations.graph import (",
                "-    RECURSION_DEPTH_WARNING, DummyNode, MigrationGraph, Node,",
                "-)",
                "+from django.db.migrations.graph import DummyNode, MigrationGraph, Node",
                " from django.test import SimpleTestCase",
                "@@ -147,3 +145,3 @@ class GraphTests(SimpleTestCase):",
                "         with self.assertRaises(CircularDependencyError):",
                "-            graph.forwards_plan((\"app_a\", \"0003\"))",
                "+            graph.ensure_not_cyclic()",
                "@@ -159,5 +157,5 @@ class GraphTests(SimpleTestCase):",
                "         with self.assertRaises(CircularDependencyError):",
                "-            graph.forwards_plan(('C', '0001'))",
                "+            graph.ensure_not_cyclic()",
                "-    def test_graph_recursive(self):",
                "+    def test_iterative_dfs(self):",
                "         graph = MigrationGraph()",
                "@@ -180,24 +178,25 @@ class GraphTests(SimpleTestCase):",
                "-    def test_graph_iterative(self):",
                "+    def test_iterative_dfs_complexity(self):",
                "+        \"\"\"",
                "+        In a graph with merge migrations, iterative_dfs() traverses each node",
                "+        only once even if there are multiple paths leading to it.",
                "+        \"\"\"",
                "+        n = 50",
                "         graph = MigrationGraph()",
                "-        root = (\"app_a\", \"1\")",
                "-        graph.add_node(root, None)",
                "-        expected = [root]",
                "-        for i in range(2, 1000):",
                "-            parent = (\"app_a\", str(i - 1))",
                "-            child = (\"app_a\", str(i))",
                "-            graph.add_node(child, None)",
                "-            graph.add_dependency(str(i), child, parent)",
                "-            expected.append(child)",
                "-        leaf = expected[-1]",
                "-",
                "-        with self.assertWarnsMessage(RuntimeWarning, RECURSION_DEPTH_WARNING):",
                "-            forwards_plan = graph.forwards_plan(leaf)",
                "-",
                "-        self.assertEqual(expected, forwards_plan)",
                "-",
                "-        with self.assertWarnsMessage(RuntimeWarning, RECURSION_DEPTH_WARNING):",
                "-            backwards_plan = graph.backwards_plan(root)",
                "-",
                "-        self.assertEqual(expected[::-1], backwards_plan)",
                "+        for i in range(1, n + 1):",
                "+            graph.add_node(('app_a', str(i)), None)",
                "+            graph.add_node(('app_b', str(i)), None)",
                "+            graph.add_node(('app_c', str(i)), None)",
                "+        for i in range(1, n):",
                "+            graph.add_dependency(None, ('app_b', str(i)), ('app_a', str(i)))",
                "+            graph.add_dependency(None, ('app_c', str(i)), ('app_a', str(i)))",
                "+            graph.add_dependency(None, ('app_a', str(i + 1)), ('app_b', str(i)))",
                "+            graph.add_dependency(None, ('app_a', str(i + 1)), ('app_c', str(i)))",
                "+        plan = graph.forwards_plan(('app_a', str(n)))",
                "+        expected = [",
                "+            (app, str(i))",
                "+            for i in range(1, n)",
                "+            for app in ['app_a', 'app_c', 'app_b']",
                "+        ] + [('app_a', str(n))]",
                "+        self.assertEqual(plan, expected)",
                "@@ -243,10 +242,5 @@ class GraphTests(SimpleTestCase):",
                "-    def test_validate_consistency(self):",
                "-        \"\"\"",
                "-        Tests for missing nodes, using `validate_consistency()` to raise the error.",
                "-        \"\"\"",
                "-        # Build graph",
                "+    def test_validate_consistency_missing_parent(self):",
                "         graph = MigrationGraph()",
                "         graph.add_node((\"app_a\", \"0001\"), None)",
                "-        # Add dependency with missing parent node (skipping validation).",
                "         graph.add_dependency(\"app_a.0001\", (\"app_a\", \"0001\"), (\"app_b\", \"0002\"), skip_validation=True)",
                "@@ -255,18 +249,28 @@ class GraphTests(SimpleTestCase):",
                "             graph.validate_consistency()",
                "-        # Add missing parent node and ensure `validate_consistency()` no longer raises error.",
                "+",
                "+    def test_validate_consistency_missing_child(self):",
                "+        graph = MigrationGraph()",
                "         graph.add_node((\"app_b\", \"0002\"), None)",
                "-        graph.validate_consistency()",
                "-        # Add dependency with missing child node (skipping validation).",
                "-        graph.add_dependency(\"app_a.0002\", (\"app_a\", \"0002\"), (\"app_a\", \"0001\"), skip_validation=True)",
                "-        msg = \"Migration app_a.0002 dependencies reference nonexistent child node ('app_a', '0002')\"",
                "+        graph.add_dependency(\"app_b.0002\", (\"app_a\", \"0001\"), (\"app_b\", \"0002\"), skip_validation=True)",
                "+        msg = \"Migration app_b.0002 dependencies reference nonexistent child node ('app_a', '0001')\"",
                "         with self.assertRaisesMessage(NodeNotFoundError, msg):",
                "             graph.validate_consistency()",
                "-        # Add missing child node and ensure `validate_consistency()` no longer raises error.",
                "-        graph.add_node((\"app_a\", \"0002\"), None)",
                "+",
                "+    def test_validate_consistency_no_error(self):",
                "+        graph = MigrationGraph()",
                "+        graph.add_node((\"app_a\", \"0001\"), None)",
                "+        graph.add_node((\"app_b\", \"0002\"), None)",
                "+        graph.add_dependency(\"app_a.0001\", (\"app_a\", \"0001\"), (\"app_b\", \"0002\"), skip_validation=True)",
                "         graph.validate_consistency()",
                "-        # Rawly add dummy node.",
                "-        msg = \"app_a.0001 (req'd by app_a.0002) is missing!\"",
                "+",
                "+    def test_validate_consistency_dummy(self):",
                "+        \"\"\"",
                "+        validate_consistency() raises an error if there's an isolated dummy",
                "+        node.",
                "+        \"\"\"",
                "+        msg = \"app_a.0001 (req'd by app_b.0002) is missing!\"",
                "+        graph = MigrationGraph()",
                "         graph.add_dummy_node(",
                "             key=(\"app_a\", \"0001\"),",
                "-            origin=\"app_a.0002\",",
                "+            origin=\"app_b.0002\",",
                "             error_message=msg",
                "@@ -384,3 +388,3 @@ class GraphTests(SimpleTestCase):",
                "         with self.assertRaises(CircularDependencyError):",
                "-            graph.forwards_plan((\"app_c\", \"0001_squashed_0002\"))",
                "+            graph.ensure_not_cyclic()",
                "@@ -415,12 +419 @@ class NodeTests(SimpleTestCase):",
                "         self.assertEqual(repr(node), \"<DummyNode: ('app_a', '0001')>\")",
                "-",
                "-    def test_dummynode_promote(self):",
                "-        dummy = DummyNode(",
                "-            key=('app_a', '0001'),",
                "-            origin='app_a.0002',",
                "-            error_message=\"app_a.0001 (req'd by app_a.0002) is missing!\",",
                "-        )",
                "-        dummy.promote()",
                "-        self.assertIsInstance(dummy, Node)",
                "-        self.assertFalse(hasattr(dummy, 'origin'))",
                "-        self.assertFalse(hasattr(dummy, 'error_message'))"
            ],
            "changed_files": [
                "django/db/migrations/graph.py",
                "django/db/migrations/loader.py",
                "tests/migrations/test_graph.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29243": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29243",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bdae19cf6395d6bfee80864d9e87c4aec241eceb",
            "repository": "https://github.com/django/django",
            "timestamp": 1538539452,
            "hunks": 4,
            "message": "Refs #27795 -- Removed force_bytes() usage in sessions. SessionBase.decode() is the inverse operation to SessionBase.encode(). As SessionBase.encode() always returns a string, SessionBase.decode() should always be passed a string argument. Fixed the file backend, which was the only backend still passing a bytestring.",
            "diff": [
                "diff --git a/django/contrib/sessions/backends/base.py b/django/contrib/sessions/backends/base.py",
                "index 3049d39ac7..5c50f87e34 100644",
                "--- a/django/contrib/sessions/backends/base.py",
                "+++ b/django/contrib/sessions/backends/base.py",
                "@@ -12,3 +12,2 @@ from django.utils.crypto import (",
                " )",
                "-from django.utils.encoding import force_bytes",
                " from django.utils.module_loading import import_string",
                "@@ -100,3 +99,3 @@ class SessionBase:",
                "     def decode(self, session_data):",
                "-        encoded_data = base64.b64decode(force_bytes(session_data))",
                "+        encoded_data = base64.b64decode(session_data.encode('ascii'))",
                "         try:",
                "diff --git a/django/contrib/sessions/backends/file.py b/django/contrib/sessions/backends/file.py",
                "index fe34dea56e..25887fcf20 100644",
                "--- a/django/contrib/sessions/backends/file.py",
                "+++ b/django/contrib/sessions/backends/file.py",
                "@@ -77,3 +77,3 @@ class SessionStore(SessionBase):",
                "         try:",
                "-            with open(self._key_to_file(), \"rb\") as session_file:",
                "+            with open(self._key_to_file(), \"r\", encoding=\"ascii\") as session_file:",
                "                 file_data = session_file.read()",
                "diff --git a/tests/sessions_tests/tests.py b/tests/sessions_tests/tests.py",
                "index dbbde133c1..c213628dbb 100644",
                "--- a/tests/sessions_tests/tests.py",
                "+++ b/tests/sessions_tests/tests.py",
                "@@ -313,3 +313,3 @@ class SessionTestsMixin:",
                "     def test_decode_failure_logged_to_security(self):",
                "-        bad_encode = base64.b64encode(b'flaskdj:alkdjf')",
                "+        bad_encode = base64.b64encode(b'flaskdj:alkdjf').decode('ascii')",
                "         with self.assertLogs('django.security.SuspiciousSession', 'WARNING') as cm:"
            ],
            "changed_files": [
                "django/contrib/sessions/backends/base.py",
                "django/contrib/sessions/backends/file.py",
                "tests/sessions_tests/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "27795": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 27795",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1b1f64ee5a78cc217fead52cbae23114502cf564",
            "repository": "https://github.com/django/django",
            "timestamp": 1536856188,
            "hunks": 29,
            "message": "Refs #14357 -- Deprecated Meta.ordering affecting GROUP BY queries. Thanks Ramiro Morales for contributing to the patch.",
            "diff": [
                "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py",
                "index f08082c88a..aa9ffc7b0e 100644",
                "--- a/django/db/models/sql/compiler.py",
                "+++ b/django/db/models/sql/compiler.py",
                "@@ -16,3 +16,5 @@ from django.db.transaction import TransactionManagementError",
                " from django.db.utils import DatabaseError, NotSupportedError",
                "-from django.utils.deprecation import RemovedInDjango30Warning",
                "+from django.utils.deprecation import (",
                "+    RemovedInDjango30Warning, RemovedInDjango31Warning,",
                "+)",
                " from django.utils.inspect import func_supports_parameter",
                "@@ -36,2 +38,3 @@ class SQLCompiler:",
                "         self.ordering_parts = re.compile(r'(.*)\\s(ASC|DESC)(.*)')",
                "+        self._meta_ordering = None",
                "@@ -268,4 +271,9 @@ class SQLCompiler:",
                "             ordering = self.query.order_by",
                "+        elif self.query.order_by:",
                "+            ordering = self.query.order_by",
                "+        elif self.query.get_meta().ordering:",
                "+            ordering = self.query.get_meta().ordering",
                "+            self._meta_ordering = ordering",
                "         else:",
                "-            ordering = (self.query.order_by or self.query.get_meta().ordering or [])",
                "+            ordering = []",
                "         if self.query.standard_ordering:",
                "@@ -538,3 +546,14 @@ class SQLCompiler:",
                "                     result.append('GROUP BY %s' % ', '.join(grouping))",
                "-",
                "+                    if self._meta_ordering:",
                "+                        # When the deprecation ends, replace with:",
                "+                        # order_by = None",
                "+                        warnings.warn(",
                "+                            \"%s QuerySet won't use Meta.ordering in Django 3.1. \"",
                "+                            \"Add .order_by('%s') to retain the current query.\" % (",
                "+                                self.query.model.__name__,",
                "+                                \"', '\".join(self._meta_ordering)",
                "+                            ),",
                "+                            RemovedInDjango31Warning,",
                "+                            stacklevel=4,",
                "+                        )",
                "                 if having:",
                "diff --git a/tests/aggregation_regress/tests.py b/tests/aggregation_regress/tests.py",
                "index 7f03d66bab..893b22ae69 100644",
                "--- a/tests/aggregation_regress/tests.py",
                "+++ b/tests/aggregation_regress/tests.py",
                "@@ -13,4 +13,7 @@ from django.db.models import (",
                " )",
                "-from django.test import TestCase, skipUnlessAnyDBFeature, skipUnlessDBFeature",
                "+from django.test import (",
                "+    TestCase, ignore_warnings, skipUnlessAnyDBFeature, skipUnlessDBFeature,",
                "+)",
                " from django.test.utils import Approximate",
                "+from django.utils.deprecation import RemovedInDjango31Warning",
                "@@ -108,2 +111,3 @@ class AggregationTests(TestCase):",
                "+    @ignore_warnings(category=RemovedInDjango31Warning)",
                "     def test_annotation_with_value(self):",
                "@@ -215,2 +219,3 @@ class AggregationTests(TestCase):",
                "+    @ignore_warnings(category=RemovedInDjango31Warning)",
                "     def test_annotation(self):",
                "@@ -308,3 +313,4 @@ class AggregationTests(TestCase):",
                "         # in a filter",
                "-        qs = Book.objects.annotate(n_authors=Count('authors')).values('name').filter(n_authors__gt=2)",
                "+        with ignore_warnings(category=RemovedInDjango31Warning):",
                "+            qs = Book.objects.annotate(n_authors=Count('authors')).values('name').filter(n_authors__gt=2)",
                "         self.assertSequenceEqual(",
                "@@ -452,2 +458,3 @@ class AggregationTests(TestCase):",
                "+    @ignore_warnings(category=RemovedInDjango31Warning)",
                "     def test_more(self):",
                "@@ -681,3 +688,3 @@ class AggregationTests(TestCase):",
                "         # Regression for #10127 - Empty select_related() works with annotate",
                "-        qs = Book.objects.filter(rating__lt=4.5).select_related().annotate(Avg('authors__age'))",
                "+        qs = Book.objects.filter(rating__lt=4.5).select_related().annotate(Avg('authors__age')).order_by('name')",
                "         self.assertQuerysetEqual(",
                "@@ -805,2 +812,3 @@ class AggregationTests(TestCase):",
                "+    @ignore_warnings(category=RemovedInDjango31Warning)",
                "     def test_pickle(self):",
                "@@ -935,3 +943,5 @@ class AggregationTests(TestCase):",
                "-        qs = HardbackBook.objects.annotate(n_authors=Count('book_ptr__authors')).values('name', 'n_authors')",
                "+        qs = HardbackBook.objects.annotate(",
                "+            n_authors=Count('book_ptr__authors'),",
                "+        ).values('name', 'n_authors').order_by('name')",
                "         self.assertSequenceEqual(",
                "@@ -947,3 +957,3 @@ class AggregationTests(TestCase):",
                "-        qs = HardbackBook.objects.annotate(n_authors=Count('authors')).values('name', 'n_authors')",
                "+        qs = HardbackBook.objects.annotate(n_authors=Count('authors')).values('name', 'n_authors').order_by('name')",
                "         self.assertSequenceEqual(",
                "@@ -1007,3 +1017,3 @@ class AggregationTests(TestCase):",
                "             n_authors=Count(\"authors\")",
                "-        ).values_list(\"pk\", flat=True)",
                "+        ).values_list(\"pk\", flat=True).order_by('name')",
                "         self.assertEqual(list(qs), list(Book.objects.values_list(\"pk\", flat=True)))",
                "@@ -1017,3 +1027,3 @@ class AggregationTests(TestCase):",
                "             pages__gt=F(\"n_authors\")",
                "-        ).values_list(\"name\", flat=True)",
                "+        ).values_list(\"name\", flat=True).order_by('name')",
                "         # Results should be the same, all Books have more pages than authors",
                "@@ -1037,3 +1047,3 @@ class AggregationTests(TestCase):",
                "             Q(n_authors=2) | Q(name=\"Python Web Development with Django\")",
                "-        )",
                "+        ).order_by('name')",
                "         self.assertQuerysetEqual(",
                "@@ -1054,3 +1064,3 @@ class AggregationTests(TestCase):",
                "             )",
                "-        )",
                "+        ).order_by('name')",
                "         self.assertQuerysetEqual(",
                "@@ -1202,2 +1212,3 @@ class AggregationTests(TestCase):",
                "+    @ignore_warnings(category=RemovedInDjango31Warning)",
                "     def test_annotate_joins(self):",
                "@@ -1438,2 +1449,3 @@ class AggregationTests(TestCase):",
                "+    @ignore_warnings(category=RemovedInDjango31Warning)",
                "     def test_fobj_group_by(self):",
                "@@ -1515,2 +1527,3 @@ class JoinPromotionTests(TestCase):",
                "+    @ignore_warnings(category=RemovedInDjango31Warning)",
                "     def test_non_nullable_fk_not_promoted(self):",
                "diff --git a/tests/ordering/tests.py b/tests/ordering/tests.py",
                "index 8c07a27428..16e5cc9b2d 100644",
                "--- a/tests/ordering/tests.py",
                "+++ b/tests/ordering/tests.py",
                "@@ -3,5 +3,6 @@ from operator import attrgetter",
                "-from django.db.models import DateTimeField, F, Max, OuterRef, Subquery",
                "+from django.db.models import Count, DateTimeField, F, Max, OuterRef, Subquery",
                " from django.db.models.functions import Upper",
                " from django.test import TestCase",
                "+from django.utils.deprecation import RemovedInDjango31Warning",
                "@@ -405 +406,9 @@ class OrderingTests(TestCase):",
                "         )",
                "+",
                "+    def test_deprecated_values_annotate(self):",
                "+        msg = (",
                "+            \"Article QuerySet won't use Meta.ordering in Django 3.1. Add \"",
                "+            \".order_by('-pub_date', 'headline') to retain the current query.\"",
                "+        )",
                "+        with self.assertRaisesMessage(RemovedInDjango31Warning, msg):",
                "+            list(Article.objects.values('author').annotate(Count('headline')))",
                "diff --git a/tests/queries/test_explain.py b/tests/queries/test_explain.py",
                "index ad4ca988ee..9428bd88e9 100644",
                "--- a/tests/queries/test_explain.py",
                "+++ b/tests/queries/test_explain.py",
                "@@ -4,4 +4,7 @@ from django.db import NotSupportedError, connection, transaction",
                " from django.db.models import Count",
                "-from django.test import TestCase, skipIfDBFeature, skipUnlessDBFeature",
                "+from django.test import (",
                "+    TestCase, ignore_warnings, skipIfDBFeature, skipUnlessDBFeature,",
                "+)",
                " from django.test.utils import CaptureQueriesContext",
                "+from django.utils.deprecation import RemovedInDjango31Warning",
                "@@ -13,2 +16,3 @@ class ExplainTests(TestCase):",
                "+    @ignore_warnings(category=RemovedInDjango31Warning)",
                "     def test_basic(self):",
                "diff --git a/tests/queries/tests.py b/tests/queries/tests.py",
                "index 384bda4c77..65917f84fb 100644",
                "--- a/tests/queries/tests.py",
                "+++ b/tests/queries/tests.py",
                "@@ -1158,3 +1158,3 @@ class Queries1Tests(TestCase):",
                "         qs = Author.objects.annotate(Count('item'))",
                "-        qs = qs.filter(~Q(extra__value=0))",
                "+        qs = qs.filter(~Q(extra__value=0)).order_by('name')"
            ],
            "changed_files": [
                "django/db/models/sql/compiler.py",
                "tests/aggregation_regress/tests.py",
                "tests/ordering/tests.py",
                "tests/queries/test_explain.py",
                "tests/queries/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "14357": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 14357",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "d1d5c97bc2821bf8c0f4b2d9c7ab16200845b494",
            "repository": "https://github.com/django/django",
            "timestamp": 1537905620,
            "hunks": 3,
            "message": "Fixed #29778 -- Fixed quoting of unique index names. Regression in 3b429c96736b8328c40e5d77282b0d30de563c3c.",
            "diff": [
                "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py",
                "index 663e03dafe..c9dff6b61f 100644",
                "--- a/django/db/backends/base/schema.py",
                "+++ b/django/db/backends/base/schema.py",
                "@@ -1015,2 +1015,4 @@ class BaseDatabaseSchemaEditor:",
                "     def _create_unique_sql(self, model, columns):",
                "+        def create_unique_name(*args, **kwargs):",
                "+            return self.quote_name(self._create_index_name(*args, **kwargs))",
                "         table = model._meta.db_table",
                "@@ -1019,3 +1021,3 @@ class BaseDatabaseSchemaEditor:",
                "             table=Table(table, self.quote_name),",
                "-            name=IndexName(table, columns, '_uniq', self._create_index_name),",
                "+            name=IndexName(table, columns, '_uniq', create_unique_name),",
                "             columns=Columns(table, columns, self.quote_name),",
                "diff --git a/tests/schema/tests.py b/tests/schema/tests.py",
                "index f18b68d04d..245d4b0918 100644",
                "--- a/tests/schema/tests.py",
                "+++ b/tests/schema/tests.py",
                "@@ -1560,2 +1560,14 @@ class SchemaTests(TransactionTestCase):",
                "+    def test_unique_name_quoting(self):",
                "+        old_table_name = TagUniqueRename._meta.db_table",
                "+        try:",
                "+            with connection.schema_editor() as editor:",
                "+                editor.create_model(TagUniqueRename)",
                "+                editor.alter_db_table(TagUniqueRename, old_table_name, 'unique-table')",
                "+                TagUniqueRename._meta.db_table = 'unique-table'",
                "+                # This fails if the unique index name isn't quoted.",
                "+                editor.alter_unique_together(TagUniqueRename, [], (('title', 'slug2'),))",
                "+        finally:",
                "+            TagUniqueRename._meta.db_table = old_table_name",
                "+",
                "     @isolate_apps('schema')"
            ],
            "changed_files": [
                "django/db/backends/base/schema.py",
                "tests/schema/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29778": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29778",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a43cfc23d44abf6a3fe08e04117d67f7ab5d57bf",
            "repository": "https://github.com/django/django",
            "timestamp": 1536492944,
            "hunks": 4,
            "message": "Fixed #29746 -- Fixed misleading FlatpageForm URL help text if APPEND_SLASH is disabled.",
            "diff": [
                "diff --git a/django/contrib/flatpages/forms.py b/django/contrib/flatpages/forms.py",
                "index d807def77d..4d4b5c80e4 100644",
                "--- a/django/contrib/flatpages/forms.py",
                "+++ b/django/contrib/flatpages/forms.py",
                "@@ -24,2 +24,15 @@ class FlatpageForm(forms.ModelForm):",
                "+    def __init__(self, *args, **kwargs):",
                "+        super().__init__(*args, **kwargs)",
                "+        if not self._trailing_slash_required():",
                "+            self.fields['url'].help_text = _(",
                "+                \"Example: '/about/contact'. Make sure to have a leading slash.\"",
                "+            )",
                "+",
                "+    def _trailing_slash_required(self):",
                "+        return (",
                "+            settings.APPEND_SLASH and",
                "+            'django.middleware.common.CommonMiddleware' in settings.MIDDLEWARE",
                "+        )",
                "+",
                "     def clean_url(self):",
                "@@ -31,5 +44,3 @@ class FlatpageForm(forms.ModelForm):",
                "             )",
                "-        if (settings.APPEND_SLASH and",
                "-                'django.middleware.common.CommonMiddleware' in settings.MIDDLEWARE and",
                "-                not url.endswith('/')):",
                "+        if self._trailing_slash_required() and not url.endswith('/'):",
                "             raise forms.ValidationError(",
                "diff --git a/tests/flatpages_tests/test_forms.py b/tests/flatpages_tests/test_forms.py",
                "index 2a4bb0679a..ce9bf449ce 100644",
                "--- a/tests/flatpages_tests/test_forms.py",
                "+++ b/tests/flatpages_tests/test_forms.py",
                "@@ -51,2 +51,7 @@ class FlatpageAdminFormTests(TestCase):",
                "         with translation.override('en'):",
                "+            self.assertEqual(",
                "+                form.fields['url'].help_text,",
                "+                \"Example: '/about/contact/'. Make sure to have leading and \"",
                "+                \"trailing slashes.\"",
                "+            )",
                "             self.assertFalse(form.is_valid())",
                "@@ -58,2 +63,7 @@ class FlatpageAdminFormTests(TestCase):",
                "         self.assertTrue(form.is_valid())",
                "+        with translation.override('en'):",
                "+            self.assertEqual(",
                "+                form.fields['url'].help_text,",
                "+                \"Example: '/about/contact'. Make sure to have a leading slash.\"",
                "+            )"
            ],
            "changed_files": [
                "django/contrib/flatpages/forms.py",
                "tests/flatpages_tests/test_forms.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29746": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29746",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "bc7e288ca9554ac1a0a19941302dea19df1acd21",
            "repository": "https://github.com/django/django",
            "timestamp": 1538522120,
            "hunks": 8,
            "message": "Fixed #29745 -- Based Expression equality on detailed initialization signature. The old implementation considered objects initialized with an equivalent signature different if some arguments were provided positionally instead of as keyword arguments. Refs #11964, #26167.",
            "diff": [
                "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py",
                "index 2532431821..2bf6316c2e 100644",
                "--- a/django/db/models/expressions.py",
                "+++ b/django/db/models/expressions.py",
                "@@ -2,2 +2,3 @@ import copy",
                " import datetime",
                "+import inspect",
                " from decimal import Decimal",
                "@@ -139,2 +140,12 @@ class Combinable:",
                "+def make_hashable(value):",
                "+    if isinstance(value, list):",
                "+        return tuple(map(make_hashable, value))",
                "+    if isinstance(value, dict):",
                "+        return tuple([",
                "+            (key, make_hashable(nested_value)) for key, nested_value in value.items()",
                "+        ])",
                "+    return value",
                "+",
                "+",
                " @deconstructible",
                "@@ -362,24 +373,23 @@ class BaseExpression:",
                "+    @cached_property",
                "+    def identity(self):",
                "+        constructor_signature = inspect.signature(self.__init__)",
                "+        args, kwargs = self._constructor_args",
                "+        signature = constructor_signature.bind_partial(*args, **kwargs)",
                "+        signature.apply_defaults()",
                "+        arguments = signature.arguments.items()",
                "+        identity = [self.__class__]",
                "+        for arg, value in arguments:",
                "+            if isinstance(value, fields.Field):",
                "+                value = type(value)",
                "+            else:",
                "+                value = make_hashable(value)",
                "+            identity.append((arg, value))",
                "+        return tuple(identity)",
                "+",
                "     def __eq__(self, other):",
                "-        if self.__class__ != other.__class__:",
                "-            return False",
                "-        path, args, kwargs = self.deconstruct()",
                "-        other_path, other_args, other_kwargs = other.deconstruct()",
                "-        if (path, args) == (other_path, other_args):",
                "-            kwargs = kwargs.copy()",
                "-            other_kwargs = other_kwargs.copy()",
                "-            output_field = type(kwargs.pop('output_field', None))",
                "-            other_output_field = type(other_kwargs.pop('output_field', None))",
                "-            if output_field == other_output_field:",
                "-                return kwargs == other_kwargs",
                "-        return False",
                "+        return isinstance(other, BaseExpression) and other.identity == self.identity",
                "     def __hash__(self):",
                "-        path, args, kwargs = self.deconstruct()",
                "-        kwargs = kwargs.copy()",
                "-        output_field = type(kwargs.pop('output_field', None))",
                "-        return hash((path, output_field) + args + tuple([",
                "-            (key, tuple(value)) if isinstance(value, list) else (key, value)",
                "-            for key, value in kwargs.items()",
                "-        ]))",
                "+        return hash(self.identity)",
                "@@ -697,5 +707,2 @@ class RawSQL(Expression):",
                "-    def __hash__(self):",
                "-        return hash((self.sql, self.output_field) + tuple(self.params))",
                "-",
                "diff --git a/tests/expressions/tests.py b/tests/expressions/tests.py",
                "index c631151448..d3f86fcd92 100644",
                "--- a/tests/expressions/tests.py",
                "+++ b/tests/expressions/tests.py",
                "@@ -13,4 +13,5 @@ from django.db.models.aggregates import (",
                " from django.db.models.expressions import (",
                "-    Case, Col, Combinable, Exists, ExpressionList, ExpressionWrapper, F, Func,",
                "-    OrderBy, OuterRef, Random, RawSQL, Ref, Subquery, Value, When,",
                "+    Case, Col, Combinable, Exists, Expression, ExpressionList,",
                "+    ExpressionWrapper, F, Func, OrderBy, OuterRef, Random, RawSQL, Ref,",
                "+    Subquery, Value, When,",
                " )",
                "@@ -824,2 +825,27 @@ class ExpressionsTests(TestCase):",
                "+class SimpleExpressionTests(SimpleTestCase):",
                "+",
                "+    def test_equal(self):",
                "+        self.assertEqual(Expression(), Expression())",
                "+        self.assertEqual(",
                "+            Expression(models.IntegerField()),",
                "+            Expression(output_field=models.IntegerField())",
                "+        )",
                "+        self.assertNotEqual(",
                "+            Expression(models.IntegerField()),",
                "+            Expression(models.CharField())",
                "+        )",
                "+",
                "+    def test_hash(self):",
                "+        self.assertEqual(hash(Expression()), hash(Expression()))",
                "+        self.assertEqual(",
                "+            hash(Expression(models.IntegerField())),",
                "+            hash(Expression(output_field=models.IntegerField()))",
                "+        )",
                "+        self.assertNotEqual(",
                "+            hash(Expression(models.IntegerField())),",
                "+            hash(Expression(models.CharField())),",
                "+        )",
                "+",
                "+",
                " class ExpressionsNumericTests(TestCase):"
            ],
            "changed_files": [
                "django/db/models/expressions.py",
                "tests/expressions/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29745": "",
                "11964": "Modernized enumeration helpers on Python 3.11+. #17186",
                "26167": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29745, 11964, 26167",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "570402ffd7efd529eb597d86525b80a6fbfca0e7",
            "repository": "https://github.com/django/django",
            "timestamp": 1536234565,
            "hunks": 6,
            "message": "Refs #29713 -- Improved error message from translation system check.",
            "diff": [
                "diff --git a/django/core/checks/translation.py b/django/core/checks/translation.py",
                "index 5c183aad2d..cf69a5c084 100644",
                "--- a/django/core/checks/translation.py",
                "+++ b/django/core/checks/translation.py",
                "@@ -1,3 +1 @@",
                "-import re",
                "-",
                " from django.conf import settings",
                "@@ -7,2 +5,7 @@ from . import Error, Tags, register",
                "+E001 = Error(",
                "+    'You have provided an invalid value for the LANGUAGE_CODE setting.',",
                "+    id='translation.E001',",
                "+)",
                "+",
                "@@ -11,15 +14,6 @@ def check_setting_language_code(app_configs, **kwargs):",
                "     \"\"\"",
                "-    Errors if language code is in the wrong format. Language codes specification outlined by",
                "-    https://en.wikipedia.org/wiki/IETF_language_tag#Syntax_of_language_tags",
                "+    Errors if language code setting is invalid.",
                "     \"\"\"",
                "-    match_result = re.match(language_code_re, settings.LANGUAGE_CODE)",
                "-    errors = []",
                "-    if not match_result:",
                "-        errors.append(Error(",
                "-            \"LANGUAGE_CODE in settings.py is {}. It should be in the form ll or ll-cc where ll is the language and cc \"",
                "-            \"is the country. Examples include: it, de-at, es, pt-br. The full set of language codes specifications is \"",
                "-            \"outlined by https://en.wikipedia.org/wiki/IETF_language_tag#Syntax_of_language_tags\".format(",
                "-                settings.LANGUAGE_CODE),",
                "-            id=\"translation.E001\",",
                "-        ))",
                "-    return errors",
                "+    if not language_code_re.match(settings.LANGUAGE_CODE):",
                "+        return [E001]",
                "+    return []",
                "diff --git a/tests/check_framework/test_translation.py b/tests/check_framework/test_translation.py",
                "index 9ff698c29f..8b8757c54e 100644",
                "--- a/tests/check_framework/test_translation.py",
                "+++ b/tests/check_framework/test_translation.py",
                "@@ -1,2 +1,2 @@",
                "-from django.core.checks.translation import check_setting_language_code",
                "+from django.core.checks.translation import E001, check_setting_language_code",
                " from django.test import SimpleTestCase, override_settings",
                "@@ -6,34 +6,36 @@ class TranslationCheckTests(SimpleTestCase):",
                "-    @override_settings(LANGUAGE_CODE=\"eu\")",
                "-    def test_valid_language_code_format_ll_only(self):",
                "-        result = check_setting_language_code(None)",
                "-        self.assertEqual(len(result), 0)",
                "+    def test_valid_language_code(self):",
                "+        tags = (",
                "+            'en',              # language",
                "+            'mas',             # language",
                "+            'sgn-ase',         # language+extlang",
                "+            'fr-CA',           # language+region",
                "+            'es-419',          # language+region",
                "+            'zh-Hans',         # language+script",
                "+            'ca-ES-valencia',  # language+region+variant",
                "+            # FIXME: The following should be invalid:",
                "+            'sr@latin',        # language+script",
                "+        )",
                "+        for tag in tags:",
                "+            with self.subTest(tag), override_settings(LANGUAGE_CODE=tag):",
                "+                self.assertEqual(check_setting_language_code(None), [])",
                "-    @override_settings(LANGUAGE_CODE=\"e\u00c3\u00bc\")",
                "-    def test_invalid_language_code_format_ll_only(self):",
                "-        result = check_setting_language_code(None)",
                "-        self.assertEqual(len(result), 1)",
                "-        error = result[0]",
                "-        self.assertEqual(error.id, 'translation.E001')",
                "-        self.assertEqual(error.msg, (",
                "-            \"LANGUAGE_CODE in settings.py is e\u00c3\u00bc. It should be in the form ll or ll-cc where ll is the language and cc \"",
                "-            \"is the country. Examples include: it, de-at, es, pt-br. The full set of language codes specifications is \"",
                "-            \"outlined by https://en.wikipedia.org/wiki/IETF_language_tag#Syntax_of_language_tags\"",
                "-        ))",
                "-",
                "-    @override_settings(LANGUAGE_CODE=\"en-US\")",
                "-    def test_valid_language_code_format_ll_cc(self):",
                "-        result = check_setting_language_code(None)",
                "-        self.assertEqual(len(result), 0)",
                "-",
                "-    @override_settings(LANGUAGE_CODE=\"en_US\")",
                "-    def test_invalid_language_code_format_ll_cc(self):",
                "-        result = check_setting_language_code(None)",
                "-        self.assertEqual(len(result), 1)",
                "-        error = result[0]",
                "-        self.assertEqual(error.id, 'translation.E001')",
                "-        self.assertEqual(error.msg, (",
                "-            \"LANGUAGE_CODE in settings.py is en_US. It should be in the form ll or ll-cc where ll is the language and \"",
                "-            \"cc is the country. Examples include: it, de-at, es, pt-br. The full set of language codes specifications \"",
                "-            \"is outlined by https://en.wikipedia.org/wiki/IETF_language_tag#Syntax_of_language_tags\"",
                "-        ))",
                "+    def test_invalid_language_code(self):",
                "+        tags = (",
                "+            'e\u00c3\u00bc',              # non-latin characters.",
                "+            'en_US',           # locale format.",
                "+            'en--us',          # empty subtag.",
                "+            '-en',             # leading separator.",
                "+            'en-',             # trailing separator.",
                "+            'en-US.UTF-8',     # language tag w/ locale encoding.",
                "+            'en_US.UTF-8',     # locale format - languate w/ region and encoding.",
                "+            'ca_ES@valencia',  # locale format - language w/ region and variant.",
                "+            # FIXME: The following should be invalid:",
                "+            # 'sr@latin',      # locale instead of language tag.",
                "+        )",
                "+        for tag in tags:",
                "+            with self.subTest(tag), override_settings(LANGUAGE_CODE=tag):",
                "+                result = check_setting_language_code(None)",
                "+                self.assertEqual(result, [E001])",
                "+                self.assertEqual(result[0].id, 'translation.E001')",
                "+                self.assertEqual(result[0].msg, 'You have provided an invalid value for the LANGUAGE_CODE setting.')"
            ],
            "changed_files": [
                "django/core/checks/translation.py",
                "tests/check_framework/test_translation.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29713": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29713",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "34d6bceec46c5d4234c156ed682573d2e5de474a",
            "repository": "https://github.com/django/django",
            "timestamp": 1530391760,
            "hunks": 56,
            "message": "Fixed #29500 -- Fixed SQLite function crashes on null values. Co-authored-by: Srinivas Reddy Thatiparthy <thatiparthysreenivas@gmail.com> Co-authored-by: Nick Pope <nick.pope@flightdataservices.com>",
            "diff": [
                "diff --git a/django/db/backends/oracle/operations.py b/django/db/backends/oracle/operations.py",
                "index 7018123cfa..02c7cdcc63 100644",
                "--- a/django/db/backends/oracle/operations.py",
                "+++ b/django/db/backends/oracle/operations.py",
                "@@ -571,3 +571,3 @@ END;",
                "             rhs_sql, rhs_params = rhs",
                "-            return \"NUMTODSINTERVAL(%s - %s, 'DAY')\" % (lhs_sql, rhs_sql), lhs_params + rhs_params",
                "+            return \"NUMTODSINTERVAL(TO_NUMBER(%s - %s), 'DAY')\" % (lhs_sql, rhs_sql), lhs_params + rhs_params",
                "         return super().subtract_temporals(internal_type, lhs, rhs)",
                "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py",
                "index a6542db1eb..c1667b5c9b 100644",
                "--- a/django/db/backends/sqlite3/base.py",
                "+++ b/django/db/backends/sqlite3/base.py",
                "@@ -5,2 +5,3 @@ import datetime",
                " import decimal",
                "+import functools",
                " import math",
                "@@ -36,2 +37,15 @@ def decoder(conv_func):",
                "+def none_guard(func):",
                "+    \"\"\"",
                "+    Decorator that returns None if any of the arguments to the decorated",
                "+    function are None. Many SQL functions return NULL if any of their arguments",
                "+    are NULL. This decorator simplifies the implementation of this for the",
                "+    custom functions registered below.",
                "+    \"\"\"",
                "+    @functools.wraps(func)",
                "+    def wrapper(*args, **kwargs):",
                "+        return None if None in args else func(*args, **kwargs)",
                "+    return wrapper",
                "+",
                "+",
                " Database.register_converter(\"bool\", b'1'.__eq__)",
                "@@ -173,26 +187,26 @@ class DatabaseWrapper(BaseDatabaseWrapper):",
                "         conn.create_function(\"django_timestamp_diff\", 2, _sqlite_timestamp_diff)",
                "-        conn.create_function(\"regexp\", 2, _sqlite_regexp)",
                "         conn.create_function(\"django_format_dtdelta\", 3, _sqlite_format_dtdelta)",
                "+        conn.create_function('regexp', 2, _sqlite_regexp)",
                "+        conn.create_function('ACOS', 1, none_guard(math.acos))",
                "+        conn.create_function('ASIN', 1, none_guard(math.asin))",
                "+        conn.create_function('ATAN', 1, none_guard(math.atan))",
                "+        conn.create_function('ATAN2', 2, none_guard(math.atan2))",
                "+        conn.create_function('CEILING', 1, none_guard(math.ceil))",
                "+        conn.create_function('COS', 1, none_guard(math.cos))",
                "+        conn.create_function('COT', 1, none_guard(lambda x: 1 / math.tan(x)))",
                "+        conn.create_function('DEGREES', 1, none_guard(math.degrees))",
                "+        conn.create_function('EXP', 1, none_guard(math.exp))",
                "+        conn.create_function('FLOOR', 1, none_guard(math.floor))",
                "+        conn.create_function('LN', 1, none_guard(math.log))",
                "+        conn.create_function('LOG', 2, none_guard(lambda x, y: math.log(y, x)))",
                "         conn.create_function('LPAD', 3, _sqlite_lpad)",
                "-        conn.create_function('REPEAT', 2, operator.mul)",
                "-        conn.create_function('RPAD', 3, _sqlite_rpad)",
                "-        conn.create_function('ACOS', 1, math.acos)",
                "-        conn.create_function('ASIN', 1, math.asin)",
                "-        conn.create_function('ATAN', 1, math.atan)",
                "-        conn.create_function('ATAN2', 2, math.atan2)",
                "-        conn.create_function('CEILING', 1, math.ceil)",
                "-        conn.create_function('COS', 1, math.cos)",
                "-        conn.create_function('COT', 1, lambda x: 1 / math.tan(x))",
                "-        conn.create_function('DEGREES', 1, math.degrees)",
                "-        conn.create_function('EXP', 1, math.exp)",
                "-        conn.create_function('FLOOR', 1, math.floor)",
                "-        conn.create_function('LN', 1, math.log)",
                "-        conn.create_function('LOG', 2, lambda x, y: math.log(y, x))",
                "-        conn.create_function('MOD', 2, math.fmod)",
                "+        conn.create_function('MOD', 2, none_guard(math.fmod))",
                "         conn.create_function('PI', 0, lambda: math.pi)",
                "-        conn.create_function('POWER', 2, operator.pow)",
                "-        conn.create_function('RADIANS', 1, math.radians)",
                "-        conn.create_function('SIN', 1, math.sin)",
                "-        conn.create_function('SQRT', 1, math.sqrt)",
                "-        conn.create_function('TAN', 1, math.tan)",
                "+        conn.create_function('POWER', 2, none_guard(operator.pow))",
                "+        conn.create_function('RADIANS', 1, none_guard(math.radians))",
                "+        conn.create_function('REPEAT', 2, none_guard(operator.mul))",
                "+        conn.create_function('RPAD', 3, _sqlite_rpad)",
                "+        conn.create_function('SIN', 1, none_guard(math.sin))",
                "+        conn.create_function('SQRT', 1, none_guard(math.sqrt))",
                "+        conn.create_function('TAN', 1, none_guard(math.tan))",
                "         conn.execute('PRAGMA foreign_keys = ON')",
                "@@ -358,2 +372,4 @@ def _sqlite_date_trunc(lookup_type, dt):",
                " def _sqlite_time_trunc(lookup_type, dt):",
                "+    if dt is None:",
                "+        return None",
                "     try:",
                "@@ -434,2 +450,3 @@ def _sqlite_time_extract(lookup_type, dt):",
                "+@none_guard",
                " def _sqlite_format_dtdelta(conn, lhs, rhs):",
                "@@ -454,2 +471,3 @@ def _sqlite_format_dtdelta(conn, lhs, rhs):",
                "+@none_guard",
                " def _sqlite_time_diff(lhs, rhs):",
                "@@ -469,2 +487,3 @@ def _sqlite_time_diff(lhs, rhs):",
                "+@none_guard",
                " def _sqlite_timestamp_diff(lhs, rhs):",
                "@@ -475,6 +494,8 @@ def _sqlite_timestamp_diff(lhs, rhs):",
                "+@none_guard",
                " def _sqlite_regexp(re_pattern, re_string):",
                "-    return bool(re.search(re_pattern, str(re_string))) if re_string is not None else False",
                "+    return bool(re.search(re_pattern, str(re_string)))",
                "+@none_guard",
                " def _sqlite_lpad(text, length, fill_text):",
                "@@ -485,2 +506,3 @@ def _sqlite_lpad(text, length, fill_text):",
                "+@none_guard",
                " def _sqlite_rpad(text, length, fill_text):",
                "diff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py",
                "index 0a68f075aa..51be8408e4 100644",
                "--- a/django/db/models/functions/datetime.py",
                "+++ b/django/db/models/functions/datetime.py",
                "@@ -220,12 +220,16 @@ class TruncBase(TimezoneMixin, Transform):",
                "         if isinstance(self.output_field, DateTimeField):",
                "-            if settings.USE_TZ:",
                "-                if value is None:",
                "-                    raise ValueError(",
                "-                        \"Database returned an invalid datetime value. \"",
                "-                        \"Are time zone definitions for your database installed?\"",
                "-                    )",
                "+            if not settings.USE_TZ:",
                "+                pass",
                "+            elif value is not None:",
                "                 value = value.replace(tzinfo=None)",
                "                 value = timezone.make_aware(value, self.tzinfo)",
                "+            elif not connection.features.has_zoneinfo_database:",
                "+                raise ValueError(",
                "+                    'Database returned an invalid datetime value. Are time '",
                "+                    'zone definitions for your database installed?'",
                "+                )",
                "         elif isinstance(value, datetime):",
                "-            if isinstance(self.output_field, DateField):",
                "+            if value is None:",
                "+                pass",
                "+            elif isinstance(self.output_field, DateField):",
                "                 value = value.date()",
                "diff --git a/django/db/models/functions/text.py b/django/db/models/functions/text.py",
                "index 8cf10bb76d..3c3eade646 100644",
                "--- a/django/db/models/functions/text.py",
                "+++ b/django/db/models/functions/text.py",
                "@@ -141,3 +141,3 @@ class LPad(BytesToCharFieldConversionMixin, Func):",
                "     def __init__(self, expression, length, fill_text=Value(' '), **extra):",
                "-        if not hasattr(length, 'resolve_expression') and length < 0:",
                "+        if not hasattr(length, 'resolve_expression') and length is not None and length < 0:",
                "             raise ValueError(\"'length' must be greater or equal to 0.\")",
                "@@ -167,3 +167,3 @@ class Repeat(BytesToCharFieldConversionMixin, Func):",
                "     def __init__(self, expression, number, **extra):",
                "-        if not hasattr(number, 'resolve_expression') and number < 0:",
                "+        if not hasattr(number, 'resolve_expression') and number is not None and number < 0:",
                "             raise ValueError(\"'number' must be greater or equal to 0.\")",
                "@@ -173,3 +173,4 @@ class Repeat(BytesToCharFieldConversionMixin, Func):",
                "         expression, number = self.source_expressions",
                "-        rpad = RPad(expression, Length(expression) * number, expression)",
                "+        length = None if number is None else Length(expression) * number",
                "+        rpad = RPad(expression, length, expression)",
                "         return rpad.as_sql(compiler, connection, **extra_context)",
                "diff --git a/tests/backends/sqlite/tests.py b/tests/backends/sqlite/tests.py",
                "index c82ed1667d..86723a72d2 100644",
                "--- a/tests/backends/sqlite/tests.py",
                "+++ b/tests/backends/sqlite/tests.py",
                "@@ -61,2 +61,18 @@ class Tests(TestCase):",
                "+    def test_regexp_function(self):",
                "+        tests = (",
                "+            ('test', r'[0-9]+', False),",
                "+            ('test', r'[a-z]+', True),",
                "+            ('test', None, None),",
                "+            (None, r'[a-z]+', None),",
                "+            (None, None, None),",
                "+        )",
                "+        for string, pattern, expected in tests:",
                "+            with self.subTest((string, pattern)):",
                "+                with connection.cursor() as cursor:",
                "+                    cursor.execute('SELECT %s REGEXP %s', [string, pattern])",
                "+                    value = cursor.fetchone()[0]",
                "+                value = bool(value) if value in {0, 1} else value",
                "+                self.assertIs(value, expected)",
                "+",
                "diff --git a/tests/db_functions/datetime/test_extract_trunc.py b/tests/db_functions/datetime/test_extract_trunc.py",
                "index 99d33b252c..065a06f4be 100644",
                "--- a/tests/db_functions/datetime/test_extract_trunc.py",
                "+++ b/tests/db_functions/datetime/test_extract_trunc.py",
                "@@ -68,7 +68,10 @@ class DateFunctionTests(TestCase):",
                "         return DTModel.objects.create(",
                "-            name=start_datetime.isoformat(),",
                "-            start_datetime=start_datetime, end_datetime=end_datetime,",
                "-            start_date=start_datetime.date(), end_date=end_datetime.date(),",
                "-            start_time=start_datetime.time(), end_time=end_datetime.time(),",
                "-            duration=(end_datetime - start_datetime),",
                "+            name=start_datetime.isoformat() if start_datetime else 'None',",
                "+            start_datetime=start_datetime,",
                "+            end_datetime=end_datetime,",
                "+            start_date=start_datetime.date() if start_datetime else None,",
                "+            end_date=end_datetime.date() if end_datetime else None,",
                "+            start_time=start_datetime.time() if start_datetime else None,",
                "+            end_time=end_datetime.time() if end_datetime else None,",
                "+            duration=(end_datetime - start_datetime) if start_datetime and end_datetime else None,",
                "         )",
                "@@ -217,2 +220,8 @@ class DateFunctionTests(TestCase):",
                "+    def test_extract_none(self):",
                "+        self.create_model(None, None)",
                "+        for t in (Extract('start_datetime', 'year'), Extract('start_date', 'year'), Extract('start_time', 'hour')):",
                "+            with self.subTest(t):",
                "+                self.assertIsNone(DTModel.objects.annotate(extracted=t).first().extracted)",
                "+",
                "     @skipUnlessDBFeature('has_native_duration_field')",
                "@@ -610,2 +619,8 @@ class DateFunctionTests(TestCase):",
                "+    def test_trunc_none(self):",
                "+        self.create_model(None, None)",
                "+        for t in (Trunc('start_datetime', 'year'), Trunc('start_date', 'year'), Trunc('start_time', 'hour')):",
                "+            with self.subTest(t):",
                "+                self.assertIsNone(DTModel.objects.annotate(truncated=t).first().truncated)",
                "+",
                "     def test_trunc_year_func(self):",
                "@@ -763,2 +778,6 @@ class DateFunctionTests(TestCase):",
                "+    def test_trunc_date_none(self):",
                "+        self.create_model(None, None)",
                "+        self.assertIsNone(DTModel.objects.annotate(truncated=TruncDate('start_datetime')).first().truncated)",
                "+",
                "     def test_trunc_time_func(self):",
                "@@ -787,2 +806,6 @@ class DateFunctionTests(TestCase):",
                "+    def test_trunc_time_none(self):",
                "+        self.create_model(None, None)",
                "+        self.assertIsNone(DTModel.objects.annotate(truncated=TruncTime('start_datetime')).first().truncated)",
                "+",
                "     def test_trunc_day_func(self):",
                "diff --git a/tests/db_functions/math/test_abs.py b/tests/db_functions/math/test_abs.py",
                "index 484cd2e306..b87f6844bc 100644",
                "--- a/tests/db_functions/math/test_abs.py",
                "+++ b/tests/db_functions/math/test_abs.py",
                "@@ -12,2 +12,7 @@ class AbsTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_abs=Abs('normal')).first()",
                "+        self.assertIsNone(obj.null_abs)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_acos.py b/tests/db_functions/math/test_acos.py",
                "index a9ba079e4f..04fdf2cf40 100644",
                "--- a/tests/db_functions/math/test_acos.py",
                "+++ b/tests/db_functions/math/test_acos.py",
                "@@ -13,2 +13,7 @@ class ACosTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_acos=ACos('normal')).first()",
                "+        self.assertIsNone(obj.null_acos)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_asin.py b/tests/db_functions/math/test_asin.py",
                "index dc135a6786..a9074e4305 100644",
                "--- a/tests/db_functions/math/test_asin.py",
                "+++ b/tests/db_functions/math/test_asin.py",
                "@@ -13,2 +13,7 @@ class ASinTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_asin=ASin('normal')).first()",
                "+        self.assertIsNone(obj.null_asin)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_atan.py b/tests/db_functions/math/test_atan.py",
                "index 36c07ae306..fbeeded48c 100644",
                "--- a/tests/db_functions/math/test_atan.py",
                "+++ b/tests/db_functions/math/test_atan.py",
                "@@ -13,2 +13,7 @@ class ATanTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_atan=ATan('normal')).first()",
                "+        self.assertIsNone(obj.null_atan)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_atan2.py b/tests/db_functions/math/test_atan2.py",
                "index 195892dfdd..ca12e64479 100644",
                "--- a/tests/db_functions/math/test_atan2.py",
                "+++ b/tests/db_functions/math/test_atan2.py",
                "@@ -11,2 +11,11 @@ class ATan2Tests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create(big=100)",
                "+        obj = IntegerModel.objects.annotate(",
                "+            null_atan2_sn=ATan2('small', 'normal'),",
                "+            null_atan2_nb=ATan2('normal', 'big'),",
                "+        ).first()",
                "+        self.assertIsNone(obj.null_atan2_sn)",
                "+        self.assertIsNone(obj.null_atan2_nb)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_ceil.py b/tests/db_functions/math/test_ceil.py",
                "index a62c33a19f..af4ee44e31 100644",
                "--- a/tests/db_functions/math/test_ceil.py",
                "+++ b/tests/db_functions/math/test_ceil.py",
                "@@ -13,2 +13,7 @@ class CeilTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_ceil=Ceil('normal')).first()",
                "+        self.assertIsNone(obj.null_ceil)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_cos.py b/tests/db_functions/math/test_cos.py",
                "index 15975e247d..99cf96620e 100644",
                "--- a/tests/db_functions/math/test_cos.py",
                "+++ b/tests/db_functions/math/test_cos.py",
                "@@ -13,2 +13,7 @@ class CosTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_cos=Cos('normal')).first()",
                "+        self.assertIsNone(obj.null_cos)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_cot.py b/tests/db_functions/math/test_cot.py",
                "index 0407f3b45d..5af0403221 100644",
                "--- a/tests/db_functions/math/test_cot.py",
                "+++ b/tests/db_functions/math/test_cot.py",
                "@@ -13,2 +13,7 @@ class CotTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_cot=Cot('normal')).first()",
                "+        self.assertIsNone(obj.null_cot)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_degrees.py b/tests/db_functions/math/test_degrees.py",
                "index e5a551992f..a474d276a5 100644",
                "--- a/tests/db_functions/math/test_degrees.py",
                "+++ b/tests/db_functions/math/test_degrees.py",
                "@@ -13,2 +13,7 @@ class DegreesTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_degrees=Degrees('normal')).first()",
                "+        self.assertIsNone(obj.null_degrees)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_exp.py b/tests/db_functions/math/test_exp.py",
                "index 0981d4fce3..fac2f6c08d 100644",
                "--- a/tests/db_functions/math/test_exp.py",
                "+++ b/tests/db_functions/math/test_exp.py",
                "@@ -13,2 +13,7 @@ class ExpTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_exp=Exp('normal')).first()",
                "+        self.assertIsNone(obj.null_exp)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_floor.py b/tests/db_functions/math/test_floor.py",
                "index ee567cfea6..0c193ef1af 100644",
                "--- a/tests/db_functions/math/test_floor.py",
                "+++ b/tests/db_functions/math/test_floor.py",
                "@@ -13,2 +13,7 @@ class FloorTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_floor=Floor('normal')).first()",
                "+        self.assertIsNone(obj.null_floor)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_ln.py b/tests/db_functions/math/test_ln.py",
                "index 96d4599bb3..3c690d56cc 100644",
                "--- a/tests/db_functions/math/test_ln.py",
                "+++ b/tests/db_functions/math/test_ln.py",
                "@@ -13,2 +13,7 @@ class LnTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_ln=Ln('normal')).first()",
                "+        self.assertIsNone(obj.null_ln)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_log.py b/tests/db_functions/math/test_log.py",
                "index 02cbe084d3..469bb7cd3a 100644",
                "--- a/tests/db_functions/math/test_log.py",
                "+++ b/tests/db_functions/math/test_log.py",
                "@@ -11,2 +11,11 @@ class LogTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create(big=100)",
                "+        obj = IntegerModel.objects.annotate(",
                "+            null_log_small=Log('small', 'normal'),",
                "+            null_log_normal=Log('normal', 'big'),",
                "+        ).first()",
                "+        self.assertIsNone(obj.null_log_small)",
                "+        self.assertIsNone(obj.null_log_normal)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_mod.py b/tests/db_functions/math/test_mod.py",
                "index 0e90175ddc..dc363432b7 100644",
                "--- a/tests/db_functions/math/test_mod.py",
                "+++ b/tests/db_functions/math/test_mod.py",
                "@@ -11,2 +11,11 @@ class ModTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create(big=100)",
                "+        obj = IntegerModel.objects.annotate(",
                "+            null_mod_small=Mod('small', 'normal'),",
                "+            null_mod_normal=Mod('normal', 'big'),",
                "+        ).first()",
                "+        self.assertIsNone(obj.null_mod_small)",
                "+        self.assertIsNone(obj.null_mod_normal)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_power.py b/tests/db_functions/math/test_power.py",
                "index 01ca2b34d9..a2d6156e3d 100644",
                "--- a/tests/db_functions/math/test_power.py",
                "+++ b/tests/db_functions/math/test_power.py",
                "@@ -10,2 +10,11 @@ class PowerTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create(big=100)",
                "+        obj = IntegerModel.objects.annotate(",
                "+            null_power_small=Power('small', 'normal'),",
                "+            null_power_normal=Power('normal', 'big'),",
                "+        ).first()",
                "+        self.assertIsNone(obj.null_power_small)",
                "+        self.assertIsNone(obj.null_power_normal)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_radians.py b/tests/db_functions/math/test_radians.py",
                "index 873659e7ad..3c257bb278 100644",
                "--- a/tests/db_functions/math/test_radians.py",
                "+++ b/tests/db_functions/math/test_radians.py",
                "@@ -13,2 +13,7 @@ class RadiansTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_radians=Radians('normal')).first()",
                "+        self.assertIsNone(obj.null_radians)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_round.py b/tests/db_functions/math/test_round.py",
                "index d242f2de0f..4c2634c3c2 100644",
                "--- a/tests/db_functions/math/test_round.py",
                "+++ b/tests/db_functions/math/test_round.py",
                "@@ -12,2 +12,7 @@ class RoundTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_round=Round('normal')).first()",
                "+        self.assertIsNone(obj.null_round)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_sin.py b/tests/db_functions/math/test_sin.py",
                "index 0f7e0c7c0b..f2e2edd4da 100644",
                "--- a/tests/db_functions/math/test_sin.py",
                "+++ b/tests/db_functions/math/test_sin.py",
                "@@ -13,2 +13,7 @@ class SinTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_sin=Sin('normal')).first()",
                "+        self.assertIsNone(obj.null_sin)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_sqrt.py b/tests/db_functions/math/test_sqrt.py",
                "index 81f13361e1..0e6238a141 100644",
                "--- a/tests/db_functions/math/test_sqrt.py",
                "+++ b/tests/db_functions/math/test_sqrt.py",
                "@@ -13,2 +13,7 @@ class SqrtTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_sqrt=Sqrt('normal')).first()",
                "+        self.assertIsNone(obj.null_sqrt)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/math/test_tan.py b/tests/db_functions/math/test_tan.py",
                "index 82dcec94fc..6db760725b 100644",
                "--- a/tests/db_functions/math/test_tan.py",
                "+++ b/tests/db_functions/math/test_tan.py",
                "@@ -13,2 +13,7 @@ class TanTests(TestCase):",
                "+    def test_null(self):",
                "+        IntegerModel.objects.create()",
                "+        obj = IntegerModel.objects.annotate(null_tan=Tan('normal')).first()",
                "+        self.assertIsNone(obj.null_tan)",
                "+",
                "     def test_decimal(self):",
                "diff --git a/tests/db_functions/text/test_pad.py b/tests/db_functions/text/test_pad.py",
                "index 2cec280b4d..88309e5641 100644",
                "--- a/tests/db_functions/text/test_pad.py",
                "+++ b/tests/db_functions/text/test_pad.py",
                "@@ -1 +1,2 @@",
                "+from django.db import connection",
                " from django.db.models import CharField, Value",
                "@@ -10,2 +11,3 @@ class PadTests(TestCase):",
                "         Author.objects.create(name='John', alias='j')",
                "+        none_value = '' if connection.features.interprets_empty_strings_as_nulls else None",
                "         tests = (",
                "@@ -23,2 +25,6 @@ class PadTests(TestCase):",
                "             (RPad('name', 0), ''),",
                "+            (LPad('name', None), none_value),",
                "+            (RPad('name', None), none_value),",
                "+            (LPad('goes_by', 1), none_value),",
                "+            (RPad('goes_by', 1), none_value),",
                "         )",
                "diff --git a/tests/db_functions/text/test_repeat.py b/tests/db_functions/text/test_repeat.py",
                "index f45544d97e..d302e6da28 100644",
                "--- a/tests/db_functions/text/test_repeat.py",
                "+++ b/tests/db_functions/text/test_repeat.py",
                "@@ -1 +1,2 @@",
                "+from django.db import connection",
                " from django.db.models import CharField, Value",
                "@@ -10,2 +11,3 @@ class RepeatTests(TestCase):",
                "         Author.objects.create(name='John', alias='xyz')",
                "+        none_value = '' if connection.features.interprets_empty_strings_as_nulls else None",
                "         tests = (",
                "@@ -15,2 +17,4 @@ class RepeatTests(TestCase):",
                "             (Repeat(Value('x'), 3, output_field=CharField()), 'xxx'),",
                "+            (Repeat('name', None), none_value),",
                "+            (Repeat('goes_by', 1), none_value),",
                "         )",
                "diff --git a/tests/expressions/tests.py b/tests/expressions/tests.py",
                "index 9a646088b1..f12a9388da 100644",
                "--- a/tests/expressions/tests.py",
                "+++ b/tests/expressions/tests.py",
                "@@ -1251,2 +1251,8 @@ class FTimeDeltaTests(TestCase):",
                "+        queryset = Experiment.objects.annotate(shifted=ExpressionWrapper(",
                "+            F('start') + Value(None, output_field=models.DurationField()),",
                "+            output_field=models.DateTimeField(),",
                "+        ))",
                "+        self.assertIsNone(queryset.first().shifted)",
                "+",
                "     @skipUnlessDBFeature('supports_temporal_subtraction')",
                "@@ -1268,2 +1274,14 @@ class FTimeDeltaTests(TestCase):",
                "+        queryset = Experiment.objects.annotate(difference=ExpressionWrapper(",
                "+            F('completed') - Value(None, output_field=models.DateField()),",
                "+            output_field=models.DurationField(),",
                "+        ))",
                "+        self.assertIsNone(queryset.first().difference)",
                "+",
                "+        queryset = Experiment.objects.annotate(shifted=ExpressionWrapper(",
                "+            F('completed') - Value(None, output_field=models.DurationField()),",
                "+            output_field=models.DateField(),",
                "+        ))",
                "+        self.assertIsNone(queryset.first().shifted)",
                "+",
                "     @skipUnlessDBFeature('supports_temporal_subtraction')",
                "@@ -1282,2 +1300,14 @@ class FTimeDeltaTests(TestCase):",
                "+        queryset = Time.objects.annotate(difference=ExpressionWrapper(",
                "+            F('time') - Value(None, output_field=models.TimeField()),",
                "+            output_field=models.DurationField(),",
                "+        ))",
                "+        self.assertIsNone(queryset.first().difference)",
                "+",
                "+        queryset = Time.objects.annotate(shifted=ExpressionWrapper(",
                "+            F('time') - Value(None, output_field=models.DurationField()),",
                "+            output_field=models.TimeField(),",
                "+        ))",
                "+        self.assertIsNone(queryset.first().shifted)",
                "+",
                "     @skipUnlessDBFeature('supports_temporal_subtraction')",
                "@@ -1294,2 +1324,14 @@ class FTimeDeltaTests(TestCase):",
                "+        queryset = Experiment.objects.annotate(difference=ExpressionWrapper(",
                "+            F('start') - Value(None, output_field=models.DateTimeField()),",
                "+            output_field=models.DurationField(),",
                "+        ))",
                "+        self.assertIsNone(queryset.first().difference)",
                "+",
                "+        queryset = Experiment.objects.annotate(shifted=ExpressionWrapper(",
                "+            F('start') - Value(None, output_field=models.DurationField()),",
                "+            output_field=models.DateTimeField(),",
                "+        ))",
                "+        self.assertIsNone(queryset.first().shifted)",
                "+",
                "     @skipUnlessDBFeature('supports_temporal_subtraction')"
            ],
            "changed_files": [
                "django/db/backends/oracle/operations.py",
                "django/db/backends/sqlite3/base.py",
                "django/db/models/functions/datetime.py",
                "django/db/models/functions/text.py",
                "tests/backends/sqlite/tests.py",
                "tests/db_functions/datetime/test_extract_trunc.py",
                "tests/db_functions/math/test_abs.py",
                "tests/db_functions/math/test_acos.py",
                "tests/db_functions/math/test_asin.py",
                "tests/db_functions/math/test_atan.py",
                "tests/db_functions/math/test_atan2.py",
                "tests/db_functions/math/test_ceil.py",
                "tests/db_functions/math/test_cos.py",
                "tests/db_functions/math/test_cot.py",
                "tests/db_functions/math/test_degrees.py",
                "tests/db_functions/math/test_exp.py",
                "tests/db_functions/math/test_floor.py",
                "tests/db_functions/math/test_ln.py",
                "tests/db_functions/math/test_log.py",
                "tests/db_functions/math/test_mod.py",
                "tests/db_functions/math/test_power.py",
                "tests/db_functions/math/test_radians.py",
                "tests/db_functions/math/test_round.py",
                "tests/db_functions/math/test_sin.py",
                "tests/db_functions/math/test_sqrt.py",
                "tests/db_functions/math/test_tan.py",
                "tests/db_functions/text/test_pad.py",
                "tests/db_functions/text/test_repeat.py",
                "tests/expressions/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29500": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29500",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7b444bf5f7cd2584da0356b25622f5a6b4559273",
            "repository": "https://github.com/django/django",
            "timestamp": 1538226371,
            "hunks": 5,
            "message": "[2.1.x] Refs #21408 -- Updated naturaltime translation test. Upcoming German translations will not differ for past and future naturaltime translations. Using Czech language instead. Backport of ddcb9e806275114c91bbed90bc917374ba08a9ae from master",
            "diff": [
                "diff --git a/tests/humanize_tests/tests.py b/tests/humanize_tests/tests.py",
                "index 2414a55ed7..25cd07bac7 100644",
                "--- a/tests/humanize_tests/tests.py",
                "+++ b/tests/humanize_tests/tests.py",
                "@@ -292,5 +292,9 @@ class HumanizeTests(SimpleTestCase):",
                "-    def test_dative_inflection_for_timedelta(self):",
                "-        \"\"\"Translation may differ depending on the string it is inserted in.\"\"\"",
                "+    def test_inflection_for_timedelta(self):",
                "+        \"\"\"",
                "+        Translation of '%d day'/'%d month'/\u00e2\u0080\u00a6 may differ depending on the context",
                "+        of the string it is inserted in.",
                "+        \"\"\"",
                "         test_list = [",
                "+            # \"%(delta)s ago\" translations",
                "             now - datetime.timedelta(days=1),",
                "@@ -301,10 +305,23 @@ class HumanizeTests(SimpleTestCase):",
                "             now - datetime.timedelta(days=865),",
                "+            # \"%(delta)s from now\" translations",
                "+            now + datetime.timedelta(days=1),",
                "+            now + datetime.timedelta(days=2),",
                "+            now + datetime.timedelta(days=30),",
                "+            now + datetime.timedelta(days=60),",
                "+            now + datetime.timedelta(days=500),",
                "+            now + datetime.timedelta(days=865),",
                "         ]",
                "         result_list = [",
                "-            'vor 1\\xa0Tag',",
                "-            'vor 2\\xa0Tagen',",
                "-            'vor 1\\xa0Monat',",
                "-            'vor 2\\xa0Monaten',",
                "-            'vor 1\\xa0Jahr, 4\\xa0Monaten',",
                "-            'vor 2\\xa0Jahren, 4\\xa0Monaten',",
                "+            'p\u00c5\u0099ed 1\\xa0dnem',",
                "+            'p\u00c5\u0099ed 2\\xa0dny',",
                "+            'p\u00c5\u0099ed 1\\xa0m\u00c4\u009bs\u00c3\u00adcem',",
                "+            'p\u00c5\u0099ed 2\\xa0m\u00c4\u009bs\u00c3\u00adci',",
                "+            'p\u00c5\u0099ed 1\\xa0rokem, 4\\xa0m\u00c4\u009bs\u00c3\u00adci',",
                "+            'p\u00c5\u0099ed 2\\xa0lety, 4\\xa0m\u00c4\u009bs\u00c3\u00adci',",
                "+            'za 1\\xa0den',",
                "+            'za 2\\xa0dny',",
                "+            'za 1\\xa0m\u00c4\u009bs\u00c3\u00adc',",
                "+            'za 2\\xa0m\u00c4\u009bs\u00c3\u00adce',",
                "+            'za 1\\xa0rok, 4\\xa0m\u00c4\u009bs\u00c3\u00adce',",
                "+            'za 2\\xa0roky, 4\\xa0m\u00c4\u009bs\u00c3\u00adce',",
                "         ]",
                "@@ -313,3 +330,4 @@ class HumanizeTests(SimpleTestCase):",
                "         try:",
                "-            with translation.override('de'), self.settings(USE_L10N=True):",
                "+            # Choose a language with different naturaltime-past/naturaltime-future translations",
                "+            with translation.override('cs'), self.settings(USE_L10N=True):",
                "                 self.humanize_tester(test_list, result_list, 'naturaltime')"
            ],
            "changed_files": [
                "tests/humanize_tests/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "21408": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 21408",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f0759305d03be544f0fc147811c1c461b5978624",
            "repository": "https://github.com/django/django",
            "timestamp": 1538482958,
            "hunks": 3,
            "message": "[2.1.x] Fixed #29813 -- Fixed DatabaseOperation test when run in isolation on MySQL. Backport of 7598cd4748dc402b0209e5eedb6d2a83c3da1620 from master.",
            "diff": [
                "diff --git a/tests/backends/base/test_operations.py b/tests/backends/base/test_operations.py",
                "index 510436f0d4..7ca0535135 100644",
                "--- a/tests/backends/base/test_operations.py",
                "+++ b/tests/backends/base/test_operations.py",
                "@@ -5,3 +5,5 @@ from django.db.backends.base.operations import BaseDatabaseOperations",
                " from django.db.models import DurationField",
                "-from django.test import SimpleTestCase, override_settings, skipIfDBFeature",
                "+from django.test import (",
                "+    SimpleTestCase, TestCase, override_settings, skipIfDBFeature,",
                "+)",
                " from django.utils import timezone",
                "@@ -9,3 +11,3 @@ from django.utils import timezone",
                "-class DatabaseOperationTests(SimpleTestCase):",
                "+class SimpleDatabaseOperationTests(SimpleTestCase):",
                "     may_requre_msg = 'subclasses of BaseDatabaseOperations may require a %s() method'",
                "@@ -134,2 +136,6 @@ class DatabaseOperationTests(SimpleTestCase):",
                "+",
                "+class DatabaseOperationTests(TestCase):",
                "+    # Checking the 'supports_over_clause' feature requires a query for the",
                "+    # MySQL backend to perform a version check.",
                "     @skipIfDBFeature('supports_over_clause')"
            ],
            "changed_files": [
                "tests/backends/base/test_operations.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29813": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29813",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "7598cd4748dc402b0209e5eedb6d2a83c3da1620",
            "repository": "https://github.com/django/django",
            "timestamp": 1538482958,
            "hunks": 3,
            "message": "Fixed #29813 -- Fixed DatabaseOperation test when run in isolation on MySQL.",
            "diff": [
                "diff --git a/tests/backends/base/test_operations.py b/tests/backends/base/test_operations.py",
                "index 510436f0d4..7ca0535135 100644",
                "--- a/tests/backends/base/test_operations.py",
                "+++ b/tests/backends/base/test_operations.py",
                "@@ -5,3 +5,5 @@ from django.db.backends.base.operations import BaseDatabaseOperations",
                " from django.db.models import DurationField",
                "-from django.test import SimpleTestCase, override_settings, skipIfDBFeature",
                "+from django.test import (",
                "+    SimpleTestCase, TestCase, override_settings, skipIfDBFeature,",
                "+)",
                " from django.utils import timezone",
                "@@ -9,3 +11,3 @@ from django.utils import timezone",
                "-class DatabaseOperationTests(SimpleTestCase):",
                "+class SimpleDatabaseOperationTests(SimpleTestCase):",
                "     may_requre_msg = 'subclasses of BaseDatabaseOperations may require a %s() method'",
                "@@ -134,2 +136,6 @@ class DatabaseOperationTests(SimpleTestCase):",
                "+",
                "+class DatabaseOperationTests(TestCase):",
                "+    # Checking the 'supports_over_clause' feature requires a query for the",
                "+    # MySQL backend to perform a version check.",
                "     @skipIfDBFeature('supports_over_clause')"
            ],
            "changed_files": [
                "tests/backends/base/test_operations.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29813": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29813",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9cbdb44014c8027f1b4571bac701a247b0ce02a3",
            "repository": "https://github.com/django/django",
            "timestamp": 1537301684,
            "hunks": 11,
            "message": "Fixed #23646 -- Added QuerySet.bulk_update() to efficiently update many models.",
            "diff": [
                "diff --git a/django/db/backends/base/features.py b/django/db/backends/base/features.py",
                "index d3cb181e4c..64d58e20f2 100644",
                "--- a/django/db/backends/base/features.py",
                "+++ b/django/db/backends/base/features.py",
                "@@ -267,2 +267,6 @@ class BaseDatabaseFeatures:",
                "+    # Does this backend require casting the results of CASE expressions used",
                "+    # in UPDATE statements to ensure the expression has the correct type?",
                "+    requires_casted_case_in_updates = False",
                "+",
                "     def __init__(self, connection):",
                "diff --git a/django/db/backends/postgresql/features.py b/django/db/backends/postgresql/features.py",
                "index 5d6ebc9d15..eddca77239 100644",
                "--- a/django/db/backends/postgresql/features.py",
                "+++ b/django/db/backends/postgresql/features.py",
                "@@ -50,2 +50,3 @@ class DatabaseFeatures(BaseDatabaseFeatures):",
                "     $$ LANGUAGE plpgsql;\"\"\"",
                "+    requires_casted_case_in_updates = True",
                "     supports_over_clause = True",
                "diff --git a/django/db/models/query.py b/django/db/models/query.py",
                "index 00e505d08e..db1dc998fa 100644",
                "--- a/django/db/models/query.py",
                "+++ b/django/db/models/query.py",
                "@@ -20,5 +20,5 @@ from django.db.models.constants import LOOKUP_SEP",
                " from django.db.models.deletion import Collector",
                "-from django.db.models.expressions import F",
                "+from django.db.models.expressions import Case, Expression, F, Value, When",
                " from django.db.models.fields import AutoField",
                "-from django.db.models.functions import Trunc",
                "+from django.db.models.functions import Cast, Trunc",
                " from django.db.models.query_utils import FilteredRelation, InvalidQuery, Q",
                "@@ -475,2 +475,46 @@ class QuerySet:",
                "+    def bulk_update(self, objs, fields, batch_size=None):",
                "+        \"\"\"",
                "+        Update the given fields in each of the given objects in the database.",
                "+        \"\"\"",
                "+        if batch_size is not None and batch_size < 0:",
                "+            raise ValueError('Batch size must be a positive integer.')",
                "+        if not fields:",
                "+            raise ValueError('Field names must be given to bulk_update().')",
                "+        objs = tuple(objs)",
                "+        if not all(obj.pk for obj in objs):",
                "+            raise ValueError('All bulk_update() objects must have a primary key set.')",
                "+        fields = [self.model._meta.get_field(name) for name in fields]",
                "+        if any(not f.concrete or f.many_to_many for f in fields):",
                "+            raise ValueError('bulk_update() can only be used with concrete fields.')",
                "+        if any(f.primary_key for f in fields):",
                "+            raise ValueError('bulk_update() cannot be used with primary key fields.')",
                "+        if not objs:",
                "+            return",
                "+        # PK is used twice in the resulting update query, once in the filter",
                "+        # and once in the WHEN. Each field will also have one CAST.",
                "+        max_batch_size = connections[self.db].ops.bulk_batch_size(['pk', 'pk'] + fields, objs)",
                "+        batch_size = min(batch_size, max_batch_size) if batch_size else max_batch_size",
                "+        requires_casting = connections[self.db].features.requires_casted_case_in_updates",
                "+        batches = (objs[i:i + batch_size] for i in range(0, len(objs), batch_size))",
                "+        updates = []",
                "+        for batch_objs in batches:",
                "+            update_kwargs = {}",
                "+            for field in fields:",
                "+                when_statements = []",
                "+                for obj in batch_objs:",
                "+                    attr = getattr(obj, field.attname)",
                "+                    if not isinstance(attr, Expression):",
                "+                        attr = Value(attr, output_field=field)",
                "+                    when_statements.append(When(pk=obj.pk, then=attr))",
                "+                case_statement = Case(*when_statements, output_field=field)",
                "+                if requires_casting:",
                "+                    case_statement = Cast(case_statement, output_field=field)",
                "+                update_kwargs[field.attname] = case_statement",
                "+            updates.append(([obj.pk for obj in batch_objs], update_kwargs))",
                "+        with transaction.atomic(using=self.db, savepoint=False):",
                "+            for pks, update_kwargs in updates:",
                "+                self.filter(pk__in=pks).update(**update_kwargs)",
                "+    bulk_update.alters_data = True",
                "+",
                "     def get_or_create(self, defaults=None, **kwargs):",
                "diff --git a/tests/basic/tests.py b/tests/basic/tests.py",
                "index 2ec6ace638..d12322b705 100644",
                "--- a/tests/basic/tests.py",
                "+++ b/tests/basic/tests.py",
                "@@ -534,2 +534,3 @@ class ManagerTest(SimpleTestCase):",
                "         'bulk_create',",
                "+        'bulk_update',",
                "         'filter',",
                "diff --git a/tests/postgres_tests/migrations/0002_create_test_models.py b/tests/postgres_tests/migrations/0002_create_test_models.py",
                "index 9f4417b58d..0e7ba938ca 100644",
                "--- a/tests/postgres_tests/migrations/0002_create_test_models.py",
                "+++ b/tests/postgres_tests/migrations/0002_create_test_models.py",
                "@@ -58,5 +58,5 @@ class Migration(migrations.Migration):",
                "                 ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),",
                "-                ('ips', ArrayField(models.GenericIPAddressField(), size=None)),",
                "-                ('uuids', ArrayField(models.UUIDField(), size=None)),",
                "-                ('decimals', ArrayField(models.DecimalField(max_digits=5, decimal_places=2), size=None)),",
                "+                ('ips', ArrayField(models.GenericIPAddressField(), size=None, default=list)),",
                "+                ('uuids', ArrayField(models.UUIDField(), size=None, default=list)),",
                "+                ('decimals', ArrayField(models.DecimalField(max_digits=5, decimal_places=2), size=None, default=list)),",
                "                 ('tags', ArrayField(TagField(), blank=True, null=True, size=None)),",
                "diff --git a/tests/postgres_tests/models.py b/tests/postgres_tests/models.py",
                "index cd1646a3e6..841f246c6a 100644",
                "--- a/tests/postgres_tests/models.py",
                "+++ b/tests/postgres_tests/models.py",
                "@@ -65,5 +65,5 @@ class NestedIntegerArrayModel(PostgreSQLModel):",
                " class OtherTypesArrayModel(PostgreSQLModel):",
                "-    ips = ArrayField(models.GenericIPAddressField())",
                "-    uuids = ArrayField(models.UUIDField())",
                "-    decimals = ArrayField(models.DecimalField(max_digits=5, decimal_places=2))",
                "+    ips = ArrayField(models.GenericIPAddressField(), default=list)",
                "+    uuids = ArrayField(models.UUIDField(), default=list)",
                "+    decimals = ArrayField(models.DecimalField(max_digits=5, decimal_places=2), default=list)",
                "     tags = ArrayField(TagField(), blank=True, null=True)",
                "diff --git a/tests/postgres_tests/test_bulk_update.py b/tests/postgres_tests/test_bulk_update.py",
                "new file mode 100644",
                "index 0000000000..6dd7036a9b",
                "--- /dev/null",
                "+++ b/tests/postgres_tests/test_bulk_update.py",
                "@@ -0,0 +1,34 @@",
                "+from datetime import date",
                "+",
                "+from . import PostgreSQLTestCase",
                "+from .models import (",
                "+    HStoreModel, IntegerArrayModel, JSONModel, NestedIntegerArrayModel,",
                "+    NullableIntegerArrayModel, OtherTypesArrayModel, RangesModel,",
                "+)",
                "+",
                "+try:",
                "+    from psycopg2.extras import NumericRange, DateRange",
                "+except ImportError:",
                "+    pass  # psycopg2 isn't installed.",
                "+",
                "+",
                "+class BulkSaveTests(PostgreSQLTestCase):",
                "+    def test_bulk_update(self):",
                "+        test_data = [",
                "+            (IntegerArrayModel, 'field', [], [1, 2, 3]),",
                "+            (NullableIntegerArrayModel, 'field', [1, 2, 3], None),",
                "+            (JSONModel, 'field', {'a': 'b'}, {'c': 'd'}),",
                "+            (NestedIntegerArrayModel, 'field', [], [[1, 2, 3]]),",
                "+            (HStoreModel, 'field', {}, {1: 2}),",
                "+            (RangesModel, 'ints', None, NumericRange(lower=1, upper=10)),",
                "+            (RangesModel, 'dates', None, DateRange(lower=date.today(), upper=date.today())),",
                "+            (OtherTypesArrayModel, 'ips', [], ['1.2.3.4']),",
                "+            (OtherTypesArrayModel, 'json', [], [{'a': 'b'}])",
                "+        ]",
                "+        for Model, field, initial, new in test_data:",
                "+            with self.subTest(model=Model, field=field):",
                "+                instances = Model.objects.bulk_create(Model(**{field: initial}) for _ in range(20))",
                "+                for instance in instances:",
                "+                    setattr(instance, field, new)",
                "+                Model.objects.bulk_update(instances, [field])",
                "+                self.assertSequenceEqual(Model.objects.filter(**{field: new}), instances)",
                "diff --git a/tests/queries/models.py b/tests/queries/models.py",
                "index 587d2e683e..ead8439118 100644",
                "--- a/tests/queries/models.py",
                "+++ b/tests/queries/models.py",
                "@@ -720 +720,6 @@ class RelatedIndividual(models.Model):",
                "         db_table = 'RelatedIndividual'",
                "+",
                "+",
                "+class CustomDbColumn(models.Model):",
                "+    custom_column = models.IntegerField(db_column='custom_name', null=True)",
                "+    ip_address = models.GenericIPAddressField(null=True)",
                "diff --git a/tests/queries/test_bulk_update.py b/tests/queries/test_bulk_update.py",
                "new file mode 100644",
                "index 0000000000..ab2bda289c",
                "--- /dev/null",
                "+++ b/tests/queries/test_bulk_update.py",
                "@@ -0,0 +1,223 @@",
                "+import datetime",
                "+",
                "+from django.core.exceptions import FieldDoesNotExist",
                "+from django.db.models import F",
                "+from django.db.models.functions import Lower",
                "+from django.test import TestCase",
                "+",
                "+from .models import (",
                "+    Article, CustomDbColumn, CustomPk, Detail, Individual, Member, Note,",
                "+    Number, Paragraph, SpecialCategory, Tag, Valid,",
                "+)",
                "+",
                "+",
                "+class BulkUpdateNoteTests(TestCase):",
                "+    def setUp(self):",
                "+        self.notes = [",
                "+            Note.objects.create(note=str(i), misc=str(i))",
                "+            for i in range(10)",
                "+        ]",
                "+",
                "+    def create_tags(self):",
                "+        self.tags = [",
                "+            Tag.objects.create(name=str(i))",
                "+            for i in range(10)",
                "+        ]",
                "+",
                "+    def test_simple(self):",
                "+        for note in self.notes:",
                "+            note.note = 'test-%s' % note.id",
                "+        with self.assertNumQueries(1):",
                "+            Note.objects.bulk_update(self.notes, ['note'])",
                "+        self.assertCountEqual(",
                "+            Note.objects.values_list('note', flat=True),",
                "+            [cat.note for cat in self.notes]",
                "+        )",
                "+",
                "+    def test_multiple_fields(self):",
                "+        for note in self.notes:",
                "+            note.note = 'test-%s' % note.id",
                "+            note.misc = 'misc-%s' % note.id",
                "+        with self.assertNumQueries(1):",
                "+            Note.objects.bulk_update(self.notes, ['note', 'misc'])",
                "+        self.assertCountEqual(",
                "+            Note.objects.values_list('note', flat=True),",
                "+            [cat.note for cat in self.notes]",
                "+        )",
                "+        self.assertCountEqual(",
                "+            Note.objects.values_list('misc', flat=True),",
                "+            [cat.misc for cat in self.notes]",
                "+        )",
                "+",
                "+    def test_batch_size(self):",
                "+        with self.assertNumQueries(len(self.notes)):",
                "+            Note.objects.bulk_update(self.notes, fields=['note'], batch_size=1)",
                "+",
                "+    def test_unsaved_models(self):",
                "+        objs = self.notes + [Note(note='test', misc='test')]",
                "+        msg = 'All bulk_update() objects must have a primary key set.'",
                "+        with self.assertRaisesMessage(ValueError, msg):",
                "+            Note.objects.bulk_update(objs, fields=['note'])",
                "+",
                "+    def test_foreign_keys_do_not_lookup(self):",
                "+        self.create_tags()",
                "+        for note, tag in zip(self.notes, self.tags):",
                "+            note.tag = tag",
                "+        with self.assertNumQueries(1):",
                "+            Note.objects.bulk_update(self.notes, ['tag'])",
                "+        self.assertSequenceEqual(Note.objects.filter(tag__isnull=False), self.notes)",
                "+",
                "+    def test_set_field_to_null(self):",
                "+        self.create_tags()",
                "+        Note.objects.update(tag=self.tags[0])",
                "+        for note in self.notes:",
                "+            note.tag = None",
                "+        Note.objects.bulk_update(self.notes, ['tag'])",
                "+        self.assertCountEqual(Note.objects.filter(tag__isnull=True), self.notes)",
                "+",
                "+    def test_set_mixed_fields_to_null(self):",
                "+        self.create_tags()",
                "+        midpoint = len(self.notes) // 2",
                "+        top, bottom = self.notes[:midpoint], self.notes[midpoint:]",
                "+        for note in top:",
                "+            note.tag = None",
                "+        for note in bottom:",
                "+            note.tag = self.tags[0]",
                "+        Note.objects.bulk_update(self.notes, ['tag'])",
                "+        self.assertCountEqual(Note.objects.filter(tag__isnull=True), top)",
                "+        self.assertCountEqual(Note.objects.filter(tag__isnull=False), bottom)",
                "+",
                "+    def test_functions(self):",
                "+        Note.objects.update(note='TEST')",
                "+        for note in self.notes:",
                "+            note.note = Lower('note')",
                "+        Note.objects.bulk_update(self.notes, ['note'])",
                "+        self.assertEqual(set(Note.objects.values_list('note', flat=True)), {'test'})",
                "+",
                "+    # Tests that use self.notes go here, otherwise put them in another class.",
                "+",
                "+",
                "+class BulkUpdateTests(TestCase):",
                "+    def test_no_fields(self):",
                "+        msg = 'Field names must be given to bulk_update().'",
                "+        with self.assertRaisesMessage(ValueError, msg):",
                "+            Note.objects.bulk_update([], fields=[])",
                "+",
                "+    def test_invalid_batch_size(self):",
                "+        msg = 'Batch size must be a positive integer.'",
                "+        with self.assertRaisesMessage(ValueError, msg):",
                "+            Note.objects.bulk_update([], fields=['note'], batch_size=-1)",
                "+",
                "+    def test_nonexistent_field(self):",
                "+        with self.assertRaisesMessage(FieldDoesNotExist, \"Note has no field named 'nonexistent'\"):",
                "+            Note.objects.bulk_update([], ['nonexistent'])",
                "+",
                "+    pk_fields_error = 'bulk_update() cannot be used with primary key fields.'",
                "+",
                "+    def test_update_primary_key(self):",
                "+        with self.assertRaisesMessage(ValueError, self.pk_fields_error):",
                "+            Note.objects.bulk_update([], ['id'])",
                "+",
                "+    def test_update_custom_primary_key(self):",
                "+        with self.assertRaisesMessage(ValueError, self.pk_fields_error):",
                "+            CustomPk.objects.bulk_update([], ['name'])",
                "+",
                "+    def test_empty_objects(self):",
                "+        with self.assertNumQueries(0):",
                "+            Note.objects.bulk_update([], ['note'])",
                "+",
                "+    def test_large_batch(self):",
                "+        Note.objects.bulk_create([",
                "+            Note(note=str(i), misc=str(i))",
                "+            for i in range(0, 2000)",
                "+        ])",
                "+        notes = list(Note.objects.all())",
                "+        Note.objects.bulk_update(notes, ['note'])",
                "+",
                "+    def test_only_concrete_fields_allowed(self):",
                "+        obj = Valid.objects.create(valid='test')",
                "+        detail = Detail.objects.create(data='test')",
                "+        paragraph = Paragraph.objects.create(text='test')",
                "+        Member.objects.create(name='test', details=detail)",
                "+        msg = 'bulk_update() can only be used with concrete fields.'",
                "+        with self.assertRaisesMessage(ValueError, msg):",
                "+            Detail.objects.bulk_update([detail], fields=['member'])",
                "+        with self.assertRaisesMessage(ValueError, msg):",
                "+            Paragraph.objects.bulk_update([paragraph], fields=['page'])",
                "+        with self.assertRaisesMessage(ValueError, msg):",
                "+            Valid.objects.bulk_update([obj], fields=['parent'])",
                "+",
                "+    def test_custom_db_columns(self):",
                "+        model = CustomDbColumn.objects.create(custom_column=1)",
                "+        model.custom_column = 2",
                "+        CustomDbColumn.objects.bulk_update([model], fields=['custom_column'])",
                "+        model.refresh_from_db()",
                "+        self.assertEqual(model.custom_column, 2)",
                "+",
                "+    def test_custom_pk(self):",
                "+        custom_pks = [",
                "+            CustomPk.objects.create(name='pk-%s' % i, extra='')",
                "+            for i in range(10)",
                "+        ]",
                "+        for model in custom_pks:",
                "+            model.extra = 'extra-%s' % model.pk",
                "+        CustomPk.objects.bulk_update(custom_pks, ['extra'])",
                "+        self.assertCountEqual(",
                "+            CustomPk.objects.values_list('extra', flat=True),",
                "+            [cat.extra for cat in custom_pks]",
                "+        )",
                "+",
                "+    def test_inherited_fields(self):",
                "+        special_categories = [",
                "+            SpecialCategory.objects.create(name=str(i), special_name=str(i))",
                "+            for i in range(10)",
                "+        ]",
                "+        for category in special_categories:",
                "+            category.name = 'test-%s' % category.id",
                "+            category.special_name = 'special-test-%s' % category.special_name",
                "+        SpecialCategory.objects.bulk_update(special_categories, ['name', 'special_name'])",
                "+        self.assertCountEqual(",
                "+            SpecialCategory.objects.values_list('name', flat=True),",
                "+            [cat.name for cat in special_categories]",
                "+        )",
                "+        self.assertCountEqual(",
                "+            SpecialCategory.objects.values_list('special_name', flat=True),",
                "+            [cat.special_name for cat in special_categories]",
                "+        )",
                "+",
                "+    def test_field_references(self):",
                "+        numbers = [Number.objects.create(num=0) for _ in range(10)]",
                "+        for number in numbers:",
                "+            number.num = F('num') + 1",
                "+        Number.objects.bulk_update(numbers, ['num'])",
                "+        self.assertCountEqual(Number.objects.filter(num=1), numbers)",
                "+",
                "+    def test_booleanfield(self):",
                "+        individuals = [Individual.objects.create(alive=False) for _ in range(10)]",
                "+        for individual in individuals:",
                "+            individual.alive = True",
                "+        Individual.objects.bulk_update(individuals, ['alive'])",
                "+        self.assertCountEqual(Individual.objects.filter(alive=True), individuals)",
                "+",
                "+    def test_ipaddressfield(self):",
                "+        for ip in ('2001::1', '1.2.3.4'):",
                "+            with self.subTest(ip=ip):",
                "+                models = [",
                "+                    CustomDbColumn.objects.create(ip_address='0.0.0.0')",
                "+                    for _ in range(10)",
                "+                ]",
                "+                for model in models:",
                "+                    model.ip_address = ip",
                "+                CustomDbColumn.objects.bulk_update(models, ['ip_address'])",
                "+                self.assertCountEqual(CustomDbColumn.objects.filter(ip_address=ip), models)",
                "+",
                "+    def test_datetime_field(self):",
                "+        articles = [",
                "+            Article.objects.create(name=str(i), created=datetime.datetime.today())",
                "+            for i in range(10)",
                "+        ]",
                "+        point_in_time = datetime.datetime(1991, 10, 31)",
                "+        for article in articles:",
                "+            article.created = point_in_time",
                "+        Article.objects.bulk_update(articles, ['created'])",
                "+        self.assertCountEqual(Article.objects.filter(created=point_in_time), articles)"
            ],
            "changed_files": [
                "django/db/backends/base/features.py",
                "django/db/backends/postgresql/features.py",
                "django/db/models/query.py",
                "tests/basic/tests.py",
                "tests/postgres_tests/migrations/0002_create_test_models.py",
                "tests/postgres_tests/models.py",
                "tests/postgres_tests/test_bulk_update.py",
                "tests/queries/models.py",
                "tests/queries/test_bulk_update.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "23646": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 23646",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6de7f9ec60fbdc59797bc21803f16260bd203f04",
            "repository": "https://github.com/django/django",
            "timestamp": 1538522243,
            "hunks": 42,
            "message": "Fixed #29598 -- Deprecated FloatRangeField in favor of DecimalRangeField.",
            "diff": [
                "diff --git a/django/contrib/postgres/apps.py b/django/contrib/postgres/apps.py",
                "index 1ab5074f19..f1ec09806a 100644",
                "--- a/django/contrib/postgres/apps.py",
                "+++ b/django/contrib/postgres/apps.py",
                "@@ -21,3 +21,3 @@ class PostgresConfig(AppConfig):",
                "                     3904: 'django.contrib.postgres.fields.IntegerRangeField',",
                "-                    3906: 'django.contrib.postgres.fields.FloatRangeField',",
                "+                    3906: 'django.contrib.postgres.fields.DecimalRangeField',",
                "                     3910: 'django.contrib.postgres.fields.DateTimeRangeField',",
                "diff --git a/django/contrib/postgres/fields/ranges.py b/django/contrib/postgres/fields/ranges.py",
                "index 0bb914d383..74ba4eb230 100644",
                "--- a/django/contrib/postgres/fields/ranges.py",
                "+++ b/django/contrib/postgres/fields/ranges.py",
                "@@ -12,3 +12,4 @@ __all__ = [",
                "     'RangeField', 'IntegerRangeField', 'BigIntegerRangeField',",
                "-    'FloatRangeField', 'DateTimeRangeField', 'DateRangeField',",
                "+    'DecimalRangeField', 'DateTimeRangeField', 'DateRangeField',",
                "+    'FloatRangeField',",
                " ]",
                "@@ -102,3 +103,19 @@ class BigIntegerRangeField(RangeField):",
                "+class DecimalRangeField(RangeField):",
                "+    base_field = models.DecimalField",
                "+    range_type = NumericRange",
                "+    form_field = forms.DecimalRangeField",
                "+",
                "+    def db_type(self, connection):",
                "+        return 'numrange'",
                "+",
                "+",
                " class FloatRangeField(RangeField):",
                "+    system_check_deprecated_details = {",
                "+        'msg': (",
                "+            'FloatRangeField is deprecated and will be removed in Django 3.1.'",
                "+        ),",
                "+        'hint': 'Use DecimalRangeField instead.',",
                "+        'id': 'fields.W902',",
                "+    }",
                "     base_field = models.FloatField",
                "diff --git a/django/contrib/postgres/forms/ranges.py b/django/contrib/postgres/forms/ranges.py",
                "index 5f2b2434a3..c36bec8479 100644",
                "--- a/django/contrib/postgres/forms/ranges.py",
                "+++ b/django/contrib/postgres/forms/ranges.py",
                "@@ -1 +1,3 @@",
                "+import warnings",
                "+",
                " from psycopg2.extras import DateRange, DateTimeTZRange, NumericRange",
                "@@ -5,2 +7,3 @@ from django.core import exceptions",
                " from django.forms.widgets import MultiWidget",
                "+from django.utils.deprecation import RemovedInDjango31Warning",
                " from django.utils.translation import gettext_lazy as _",
                "@@ -8,4 +11,4 @@ from django.utils.translation import gettext_lazy as _",
                " __all__ = [",
                "-    'BaseRangeField', 'IntegerRangeField', 'FloatRangeField',",
                "-    'DateTimeRangeField', 'DateRangeField', 'RangeWidget',",
                "+    'BaseRangeField', 'IntegerRangeField', 'DecimalRangeField',",
                "+    'DateTimeRangeField', 'DateRangeField', 'FloatRangeField', 'RangeWidget',",
                " ]",
                "@@ -68,5 +71,5 @@ class IntegerRangeField(BaseRangeField):",
                "-class FloatRangeField(BaseRangeField):",
                "+class DecimalRangeField(BaseRangeField):",
                "     default_error_messages = {'invalid': _('Enter two numbers.')}",
                "-    base_field = forms.FloatField",
                "+    base_field = forms.DecimalField",
                "     range_type = NumericRange",
                "@@ -74,2 +77,13 @@ class FloatRangeField(BaseRangeField):",
                "+class FloatRangeField(DecimalRangeField):",
                "+    base_field = forms.FloatField",
                "+",
                "+    def __init__(self, **kwargs):",
                "+        warnings.warn(",
                "+            'FloatRangeField is deprecated in favor of DecimalRangeField.',",
                "+            RemovedInDjango31Warning, stacklevel=2,",
                "+        )",
                "+        super().__init__(**kwargs)",
                "+",
                "+",
                " class DateTimeRangeField(BaseRangeField):",
                "diff --git a/tests/postgres_tests/fields.py b/tests/postgres_tests/fields.py",
                "index bcc6998a3c..2275eb2ab2 100644",
                "--- a/tests/postgres_tests/fields.py",
                "+++ b/tests/postgres_tests/fields.py",
                "@@ -9,3 +9,3 @@ try:",
                "         ArrayField, BigIntegerRangeField, CICharField, CIEmailField,",
                "-        CITextField, DateRangeField, DateTimeRangeField, FloatRangeField,",
                "+        CITextField, DateRangeField, DateTimeRangeField, DecimalRangeField,",
                "         HStoreField, IntegerRangeField, JSONField,",
                "@@ -37,3 +37,3 @@ except ImportError:",
                "     DateTimeRangeField = models.Field",
                "-    FloatRangeField = models.Field",
                "+    DecimalRangeField = models.Field",
                "     HStoreField = models.Field",
                "diff --git a/tests/postgres_tests/migrations/0002_create_test_models.py b/tests/postgres_tests/migrations/0002_create_test_models.py",
                "index 0e7ba938ca..5db8a71385 100644",
                "--- a/tests/postgres_tests/migrations/0002_create_test_models.py",
                "+++ b/tests/postgres_tests/migrations/0002_create_test_models.py",
                "@@ -5,3 +5,3 @@ from ..fields import (",
                "     ArrayField, BigIntegerRangeField, CICharField, CIEmailField, CITextField,",
                "-    DateRangeField, DateTimeRangeField, FloatRangeField, HStoreField,",
                "+    DateRangeField, DateTimeRangeField, DecimalRangeField, HStoreField,",
                "     IntegerRangeField, JSONField, SearchVectorField,",
                "@@ -211,3 +211,3 @@ class Migration(migrations.Migration):",
                "                 ('bigints', BigIntegerRangeField(null=True, blank=True)),",
                "-                ('floats', FloatRangeField(null=True, blank=True)),",
                "+                ('decimals', DecimalRangeField(null=True, blank=True)),",
                "                 ('timestamps', DateTimeRangeField(null=True, blank=True)),",
                "diff --git a/tests/postgres_tests/models.py b/tests/postgres_tests/models.py",
                "index 841f246c6a..cbe477e402 100644",
                "--- a/tests/postgres_tests/models.py",
                "+++ b/tests/postgres_tests/models.py",
                "@@ -5,3 +5,3 @@ from .fields import (",
                "     ArrayField, BigIntegerRangeField, CICharField, CIEmailField, CITextField,",
                "-    DateRangeField, DateTimeRangeField, FloatRangeField, HStoreField,",
                "+    DateRangeField, DateTimeRangeField, DecimalRangeField, HStoreField,",
                "     IntegerRangeField, JSONField, SearchVectorField,",
                "@@ -131,3 +131,3 @@ class RangesModel(PostgreSQLModel):",
                "     bigints = BigIntegerRangeField(blank=True, null=True)",
                "-    floats = FloatRangeField(blank=True, null=True)",
                "+    decimals = DecimalRangeField(blank=True, null=True)",
                "     timestamps = DateTimeRangeField(blank=True, null=True)",
                "diff --git a/tests/postgres_tests/test_introspection.py b/tests/postgres_tests/test_introspection.py",
                "index 2ab2c96cea..8ae5b80da1 100644",
                "--- a/tests/postgres_tests/test_introspection.py",
                "+++ b/tests/postgres_tests/test_introspection.py",
                "@@ -33,3 +33,3 @@ class InspectDBTests(PostgreSQLTestCase):",
                "                 'bigints = django.contrib.postgres.fields.BigIntegerRangeField(blank=True, null=True)',",
                "-                'floats = django.contrib.postgres.fields.FloatRangeField(blank=True, null=True)',",
                "+                'decimals = django.contrib.postgres.fields.DecimalRangeField(blank=True, null=True)',",
                "                 'timestamps = django.contrib.postgres.fields.DateTimeRangeField(blank=True, null=True)',",
                "diff --git a/tests/postgres_tests/test_ranges.py b/tests/postgres_tests/test_ranges.py",
                "index 6aa6c889dd..c05ac19699 100644",
                "--- a/tests/postgres_tests/test_ranges.py",
                "+++ b/tests/postgres_tests/test_ranges.py",
                "@@ -2,2 +2,3 @@ import datetime",
                " import json",
                "+from decimal import Decimal",
                "@@ -6,4 +7,5 @@ from django.core import exceptions, serializers",
                " from django.db.models import DateField, DateTimeField, F, Func, Value",
                "-from django.test import override_settings",
                "+from django.test import ignore_warnings, override_settings",
                " from django.utils import timezone",
                "+from django.utils.deprecation import RemovedInDjango31Warning",
                "@@ -29,3 +31,3 @@ class TestSaveLoad(PostgreSQLTestCase):",
                "             bigints=NumericRange(10, 20),",
                "-            floats=NumericRange(20, 30),",
                "+            decimals=NumericRange(20, 30),",
                "             timestamps=DateTimeTZRange(now - datetime.timedelta(hours=1), now),",
                "@@ -37,3 +39,3 @@ class TestSaveLoad(PostgreSQLTestCase):",
                "         self.assertEqual(instance.bigints, loaded.bigints)",
                "-        self.assertEqual(instance.floats, loaded.floats)",
                "+        self.assertEqual(instance.decimals, loaded.decimals)",
                "         self.assertEqual(instance.timestamps, loaded.timestamps)",
                "@@ -56,7 +58,7 @@ class TestSaveLoad(PostgreSQLTestCase):",
                "         r = NumericRange(0, 10, '[]')",
                "-        instance = RangesModel(floats=r)",
                "+        instance = RangesModel(decimals=r)",
                "         instance.save()",
                "         loaded = RangesModel.objects.get()",
                "-        self.assertEqual(r, loaded.floats)",
                "-        self.assertIn(10, loaded.floats)",
                "+        self.assertEqual(r, loaded.decimals)",
                "+        self.assertIn(10, loaded.decimals)",
                "@@ -64,6 +66,6 @@ class TestSaveLoad(PostgreSQLTestCase):",
                "         r = NumericRange(None, None, '()')",
                "-        instance = RangesModel(floats=r)",
                "+        instance = RangesModel(decimals=r)",
                "         instance.save()",
                "         loaded = RangesModel.objects.get()",
                "-        self.assertEqual(r, loaded.floats)",
                "+        self.assertEqual(r, loaded.decimals)",
                "@@ -333,3 +335,3 @@ class TestQueryingWithRanges(PostgreSQLTestCase):",
                "     def test_f_ranges(self):",
                "-        parent = RangesModel.objects.create(floats=NumericRange(0, 10))",
                "+        parent = RangesModel.objects.create(decimals=NumericRange(0, 10))",
                "         objs = [",
                "@@ -339,3 +341,3 @@ class TestQueryingWithRanges(PostgreSQLTestCase):",
                "         self.assertSequenceEqual(",
                "-            RangeLookupsModel.objects.filter(float__contained_by=F('parent__floats')),",
                "+            RangeLookupsModel.objects.filter(float__contained_by=F('parent__decimals')),",
                "             [objs[0]]",
                "@@ -358,3 +360,3 @@ class TestSerialization(PostgreSQLTestCase):",
                "         '[{\"fields\": {\"ints\": \"{\\\\\"upper\\\\\": \\\\\"10\\\\\", \\\\\"lower\\\\\": \\\\\"0\\\\\", '",
                "-        '\\\\\"bounds\\\\\": \\\\\"[)\\\\\"}\", \"floats\": \"{\\\\\"empty\\\\\": true}\", '",
                "+        '\\\\\"bounds\\\\\": \\\\\"[)\\\\\"}\", \"decimals\": \"{\\\\\"empty\\\\\": true}\", '",
                "         '\"bigints\": null, \"timestamps\": \"{\\\\\"upper\\\\\": \\\\\"2014-02-02T12:12:12+00:00\\\\\", '",
                "@@ -372,3 +374,3 @@ class TestSerialization(PostgreSQLTestCase):",
                "         instance = RangesModel(",
                "-            ints=NumericRange(0, 10), floats=NumericRange(empty=True),",
                "+            ints=NumericRange(0, 10), decimals=NumericRange(empty=True),",
                "             timestamps=DateTimeTZRange(self.lower_dt, self.upper_dt),",
                "@@ -388,3 +390,3 @@ class TestSerialization(PostgreSQLTestCase):",
                "         self.assertEqual(instance.ints, NumericRange(0, 10))",
                "-        self.assertEqual(instance.floats, NumericRange(empty=True))",
                "+        self.assertEqual(instance.decimals, NumericRange(empty=True))",
                "         self.assertIsNone(instance.bigints)",
                "@@ -437,2 +439,3 @@ class TestFormField(PostgreSQLTestCase):",
                "+    @ignore_warnings(category=RemovedInDjango31Warning)",
                "     def test_valid_floats(self):",
                "@@ -442,2 +445,12 @@ class TestFormField(PostgreSQLTestCase):",
                "+    def test_valid_decimal(self):",
                "+        field = pg_forms.DecimalRangeField()",
                "+        value = field.clean(['1.12345', '2.001'])",
                "+        self.assertEqual(value, NumericRange(Decimal('1.12345'), Decimal('2.001')))",
                "+",
                "+    def test_float_range_field_deprecation(self):",
                "+        msg = 'FloatRangeField is deprecated in favor of DecimalRangeField.'",
                "+        with self.assertRaisesMessage(RemovedInDjango31Warning, msg):",
                "+            pg_forms.FloatRangeField()",
                "+",
                "     def test_valid_timestamps(self):",
                "@@ -546,4 +559,4 @@ class TestFormField(PostgreSQLTestCase):",
                "-    def test_float_lower_bound_higher(self):",
                "-        field = pg_forms.FloatRangeField()",
                "+    def test_decimal_lower_bound_higher(self):",
                "+        field = pg_forms.DecimalRangeField()",
                "         with self.assertRaises(exceptions.ValidationError) as cm:",
                "@@ -553,9 +566,9 @@ class TestFormField(PostgreSQLTestCase):",
                "-    def test_float_open(self):",
                "-        field = pg_forms.FloatRangeField()",
                "+    def test_decimal_open(self):",
                "+        field = pg_forms.DecimalRangeField()",
                "         value = field.clean(['', '3.1415926'])",
                "-        self.assertEqual(value, NumericRange(None, 3.1415926))",
                "+        self.assertEqual(value, NumericRange(None, Decimal('3.1415926')))",
                "-    def test_float_incorrect_data_type(self):",
                "-        field = pg_forms.FloatRangeField()",
                "+    def test_decimal_incorrect_data_type(self):",
                "+        field = pg_forms.DecimalRangeField()",
                "         with self.assertRaises(exceptions.ValidationError) as cm:",
                "@@ -565,4 +578,4 @@ class TestFormField(PostgreSQLTestCase):",
                "-    def test_float_invalid_lower(self):",
                "-        field = pg_forms.FloatRangeField()",
                "+    def test_decimal_invalid_lower(self):",
                "+        field = pg_forms.DecimalRangeField()",
                "         with self.assertRaises(exceptions.ValidationError) as cm:",
                "@@ -571,4 +584,4 @@ class TestFormField(PostgreSQLTestCase):",
                "-    def test_float_invalid_upper(self):",
                "-        field = pg_forms.FloatRangeField()",
                "+    def test_decimal_invalid_upper(self):",
                "+        field = pg_forms.DecimalRangeField()",
                "         with self.assertRaises(exceptions.ValidationError) as cm:",
                "@@ -577,4 +590,4 @@ class TestFormField(PostgreSQLTestCase):",
                "-    def test_float_required(self):",
                "-        field = pg_forms.FloatRangeField(required=True)",
                "+    def test_decimal_required(self):",
                "+        field = pg_forms.DecimalRangeField(required=True)",
                "         with self.assertRaises(exceptions.ValidationError) as cm:",
                "@@ -583,3 +596,3 @@ class TestFormField(PostgreSQLTestCase):",
                "         value = field.clean(['1.61803399', ''])",
                "-        self.assertEqual(value, NumericRange(1.61803399, None))",
                "+        self.assertEqual(value, NumericRange(Decimal('1.61803399'), None))",
                "@@ -682,5 +695,5 @@ class TestFormField(PostgreSQLTestCase):",
                "     def test_model_field_formfield_float(self):",
                "-        model_field = pg_fields.FloatRangeField()",
                "+        model_field = pg_fields.DecimalRangeField()",
                "         form_field = model_field.formfield()",
                "-        self.assertIsInstance(form_field, pg_forms.FloatRangeField)",
                "+        self.assertIsInstance(form_field, pg_forms.DecimalRangeField)"
            ],
            "changed_files": [
                "django/contrib/postgres/apps.py",
                "django/contrib/postgres/fields/ranges.py",
                "django/contrib/postgres/forms/ranges.py",
                "tests/postgres_tests/fields.py",
                "tests/postgres_tests/migrations/0002_create_test_models.py",
                "tests/postgres_tests/models.py",
                "tests/postgres_tests/test_introspection.py",
                "tests/postgres_tests/test_ranges.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "29598": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 29598",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "553c24018e8a6746158c19b517b508eb03b0f7f9",
            "repository": "https://github.com/django/django",
            "timestamp": 1537889443,
            "hunks": 3,
            "message": "Removed unneeded list() calls in list.extend() argument.",
            "diff": [
                "diff --git a/django/apps/registry.py b/django/apps/registry.py",
                "index e01352b1de..d7ac81af82 100644",
                "--- a/django/apps/registry.py",
                "+++ b/django/apps/registry.py",
                "@@ -178,3 +178,3 @@ class Apps:",
                "         for app_config in self.app_configs.values():",
                "-            result.extend(list(app_config.get_models(include_auto_created, include_swapped)))",
                "+            result.extend(app_config.get_models(include_auto_created, include_swapped))",
                "         return result",
                "diff --git a/django/contrib/gis/geos/mutable_list.py b/django/contrib/gis/geos/mutable_list.py",
                "index 2d62e7bfa4..3e67906623 100644",
                "--- a/django/contrib/gis/geos/mutable_list.py",
                "+++ b/django/contrib/gis/geos/mutable_list.py",
                "@@ -119,3 +119,3 @@ class ListMixin:",
                "         'add another list-like object to self'",
                "-        self.extend(list(other))",
                "+        self.extend(other)",
                "         return self",
                "diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py",
                "index aaf9775407..595e19e5e6 100644",
                "--- a/django/core/management/commands/loaddata.py",
                "+++ b/django/core/management/commands/loaddata.py",
                "@@ -300,3 +300,3 @@ class Command(BaseCommand):",
                "                 dirs.append(app_dir)",
                "-        dirs.extend(list(fixture_dirs))",
                "+        dirs.extend(fixture_dirs)",
                "         dirs.append('')"
            ],
            "changed_files": [
                "django/apps/registry.py",
                "django/contrib/gis/geos/mutable_list.py",
                "django/core/management/commands/loaddata.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "0bf7b25f8f667d3710de91e91ae812efde05187c",
            "repository": "https://github.com/django/django",
            "timestamp": 1538491303,
            "hunks": 9,
            "message": "Added django.db.backends.utils.names_digest() to remove redundant code.",
            "diff": [
                "diff --git a/django/db/backends/base/schema.py b/django/db/backends/base/schema.py",
                "index c9dff6b61f..4766c84005 100644",
                "--- a/django/db/backends/base/schema.py",
                "+++ b/django/db/backends/base/schema.py",
                "@@ -1,2 +1 @@",
                "-import hashlib",
                " import logging",
                "@@ -7,3 +6,3 @@ from django.db.backends.ddl_references import (",
                " )",
                "-from django.db.backends.utils import split_identifier",
                "+from django.db.backends.utils import names_digest, split_identifier",
                " from django.db.models import Index",
                "@@ -137,13 +136,2 @@ class BaseDatabaseSchemaEditor:",
                "-    @classmethod",
                "-    def _digest(cls, *args):",
                "-        \"\"\"",
                "-        Generate a 32-bit digest of a set of arguments that can be used to",
                "-        shorten identifying names.",
                "-        \"\"\"",
                "-        h = hashlib.md5()",
                "-        for arg in args:",
                "-            h.update(arg.encode())",
                "-        return h.hexdigest()[:8]",
                "-",
                "     # Field <-> database mapping functions",
                "@@ -887,3 +875,3 @@ class BaseDatabaseSchemaEditor:",
                "         _, table_name = split_identifier(table_name)",
                "-        hash_suffix_part = '%s%s' % (self._digest(table_name, *column_names), suffix)",
                "+        hash_suffix_part = '%s%s' % (names_digest(table_name, *column_names, length=8), suffix)",
                "         max_length = self.connection.ops.max_name_length() or 200",
                "diff --git a/django/db/backends/utils.py b/django/db/backends/utils.py",
                "index a762175025..2062af91f1 100644",
                "--- a/django/db/backends/utils.py",
                "+++ b/django/db/backends/utils.py",
                "@@ -215,3 +215,3 @@ def truncate_name(identifier, length=None, hash_len=4):",
                "-    digest = hashlib.md5(name.encode()).hexdigest()[:hash_len]",
                "+    digest = names_digest(name, length=hash_len)",
                "     return '%s%s%s' % ('%s\".\"' % namespace if namespace else '', name[:length - hash_len], digest)",
                "@@ -219,2 +219,13 @@ def truncate_name(identifier, length=None, hash_len=4):",
                "+def names_digest(*args, length):",
                "+    \"\"\"",
                "+    Generate a 32-bit digest of a set of arguments that can be used to shorten",
                "+    identifying names.",
                "+    \"\"\"",
                "+    h = hashlib.md5()",
                "+    for arg in args:",
                "+        h.update(arg.encode())",
                "+    return h.hexdigest()[:length]",
                "+",
                "+",
                " def format_number(value, max_digits, decimal_places):",
                "diff --git a/django/db/models/indexes.py b/django/db/models/indexes.py",
                "index c378b13a5c..5e325c918f 100644",
                "--- a/django/db/models/indexes.py",
                "+++ b/django/db/models/indexes.py",
                "@@ -1,5 +1,2 @@",
                "-import hashlib",
                "-",
                "-from django.db.backends.utils import split_identifier",
                "-from django.utils.encoding import force_bytes",
                "+from django.db.backends.utils import names_digest, split_identifier",
                "@@ -83,13 +80,2 @@ class Index:",
                "-    @staticmethod",
                "-    def _hash_generator(*args):",
                "-        \"\"\"",
                "-        Generate a 32-bit digest of a set of arguments that can be used to",
                "-        shorten identifying names.",
                "-        \"\"\"",
                "-        h = hashlib.md5()",
                "-        for arg in args:",
                "-            h.update(force_bytes(arg))",
                "-        return h.hexdigest()[:6]",
                "-",
                "     def set_name_with_model(self, model):",
                "@@ -114,3 +100,3 @@ class Index:",
                "             column_names[0][:7],",
                "-            '%s_%s' % (self._hash_generator(*hash_data), self.suffix),",
                "+            '%s_%s' % (names_digest(*hash_data, length=6), self.suffix),",
                "         )"
            ],
            "changed_files": [
                "django/db/backends/base/schema.py",
                "django/db/backends/utils.py",
                "django/db/models/indexes.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a0ef6a0e22038a36c3646ea96f61fdc6d7ab7e5c",
            "repository": "https://github.com/django/django",
            "timestamp": 1536671739,
            "hunks": 2,
            "message": "Fixed env.note_versionchange() deprecation warning in Sphinx 1.8.",
            "diff": [
                "diff --git a/docs/_ext/djangodocs.py b/docs/_ext/djangodocs.py",
                "index c4ee09b5cd..b91ccaa37c 100644",
                "--- a/docs/_ext/djangodocs.py",
                "+++ b/docs/_ext/djangodocs.py",
                "@@ -14,2 +14,3 @@ from sphinx.directives import CodeBlock",
                " from sphinx.domains.std import Cmdoption",
                "+from sphinx.errors import ExtensionError",
                " from sphinx.util import logging",
                "@@ -98,3 +99,7 @@ class VersionDirective(Directive):",
                "             self.state.nested_parse(self.content, self.content_offset, node)",
                "-        env.note_versionchange(node['type'], node['version'], node, self.lineno)",
                "+        try:",
                "+            env.get_domain('changeset').note_changeset(node)",
                "+        except ExtensionError:",
                "+            # Sphinx < 1.8: Domain 'changeset' is not registered",
                "+            env.note_versionchange(node['type'], node['version'], node, self.lineno)",
                "         return ret"
            ],
            "changed_files": [
                "docs/_ext/djangodocs.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b3b47bf5156d400595363fa0029e51ce3f974ff0",
            "repository": "https://github.com/django/django",
            "timestamp": 1538399776,
            "hunks": 2,
            "message": "Added tests for using bytearray with BinaryField and corrected docs.",
            "diff": [
                "diff --git a/tests/model_fields/test_binaryfield.py b/tests/model_fields/test_binaryfield.py",
                "index 9865f131d3..d9caf41112 100644",
                "--- a/tests/model_fields/test_binaryfield.py",
                "+++ b/tests/model_fields/test_binaryfield.py",
                "@@ -11,3 +11,3 @@ class BinaryFieldTests(TestCase):",
                "     def test_set_and_retrieve(self):",
                "-        data_set = (self.binary_data, memoryview(self.binary_data))",
                "+        data_set = (self.binary_data, bytearray(self.binary_data), memoryview(self.binary_data))",
                "         for bdata in data_set:",
                "@@ -42,2 +42,7 @@ class BinaryFieldTests(TestCase):",
                "+    def test_filter_bytearray(self):",
                "+        dm = DataModel.objects.create(data=self.binary_data)",
                "+        DataModel.objects.create(data=b'\\xef\\xbb\\xbf')",
                "+        self.assertSequenceEqual(DataModel.objects.filter(data=bytearray(self.binary_data)), [dm])",
                "+",
                "     def test_filter_memoryview(self):"
            ],
            "changed_files": [
                "tests/model_fields/test_binaryfield.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c37b84434937925149fd4626beedc2de62dc446e",
            "repository": "https://github.com/django/django",
            "timestamp": 1538490201,
            "hunks": 1,
            "message": "Fixed ResourceWarning in MySQL's _clone_test_db().",
            "diff": [
                "diff --git a/django/db/backends/mysql/creation.py b/django/db/backends/mysql/creation.py",
                "index f342d85f05..dbe05526da 100644",
                "--- a/django/db/backends/mysql/creation.py",
                "+++ b/django/db/backends/mysql/creation.py",
                "@@ -68,5 +68,5 @@ class DatabaseCreation(BaseDatabaseCreation):",
                "-        dump_proc = subprocess.Popen(dump_cmd, stdout=subprocess.PIPE)",
                "-        load_proc = subprocess.Popen(load_cmd, stdin=dump_proc.stdout, stdout=subprocess.PIPE)",
                "-        dump_proc.stdout.close()    # allow dump_proc to receive a SIGPIPE if load_proc exits.",
                "-        load_proc.communicate()",
                "+        with subprocess.Popen(dump_cmd, stdout=subprocess.PIPE) as dump_proc:",
                "+            with subprocess.Popen(load_cmd, stdin=dump_proc.stdout, stdout=subprocess.DEVNULL):",
                "+                # Allow dump_proc to receive a SIGPIPE if the load process exits.",
                "+                dump_proc.stdout.close()"
            ],
            "changed_files": [
                "django/db/backends/mysql/creation.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7ed4713a90dcaefcda55af1b44a2c399e28e3ee7",
            "repository": "https://github.com/django/django",
            "timestamp": 1537285864,
            "hunks": 1,
            "message": "Removed obsolete html_use_smartypants Sphinx option.",
            "diff": [
                "diff --git a/docs/conf.py b/docs/conf.py",
                "index a276b17ac8..c720273531 100644",
                "--- a/docs/conf.py",
                "+++ b/docs/conf.py",
                "@@ -54,4 +54,2 @@ if 'spelling' in sys.argv:",
                "     extensions.append(\"sphinxcontrib.spelling\")",
                "-    # Workaround for https://bitbucket.org/dhellmann/sphinxcontrib-spelling/issues/13",
                "-    html_use_smartypants = False"
            ],
            "changed_files": [
                "docs/conf.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "6da866c04777ba671ea18f8c6f4e9190c6b8f6f9",
            "repository": "https://github.com/django/django",
            "timestamp": 1538386827,
            "hunks": 1,
            "message": "[2.1.x] Post-release version bump.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index 1892fa9bb4..d70c882b70 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -2,3 +2,3 @@ from django.utils.version import get_version",
                "-VERSION = (2, 1, 2, 'final', 0)",
                "+VERSION = (2, 1, 3, 'alpha', 0)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1d9725504c2a17f55f253e3ff4cff838ee1fe708",
            "repository": "https://github.com/django/django",
            "timestamp": 1537350082,
            "hunks": 1,
            "message": "[2.1.x] Updated contributing tutorial's virtual environment instructions. Backport of c99d379f534817edccbe8b23a235e11781508590 from master",
            "diff": [
                "diff --git a/docs/_ext/djangodocs.py b/docs/_ext/djangodocs.py",
                "index b91ccaa37c..19d142b9db 100644",
                "--- a/docs/_ext/djangodocs.py",
                "+++ b/docs/_ext/djangodocs.py",
                "@@ -322,2 +322,4 @@ class ConsoleDirective(CodeBlock):",
                "                 return args_to_win(line[4:])",
                "+            if line.startswith('$ python3'):",
                "+                return 'py ' + args_to_win(line[9:])",
                "             if line.startswith('$ python'):"
            ],
            "changed_files": [
                "docs/_ext/djangodocs.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "af7a758dcbbcb228ef526551ffd92fea8ae70f21",
            "repository": "https://github.com/django/django",
            "timestamp": 1535574701,
            "hunks": 4,
            "message": "Made some date parsing in SQLite functions more DRY.",
            "diff": [
                "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py",
                "index d124fcd47b..6316e2f9da 100644",
                "--- a/django/db/backends/sqlite3/base.py",
                "+++ b/django/db/backends/sqlite3/base.py",
                "@@ -327,3 +327,3 @@ class SQLiteCursorWrapper(Database.Cursor):",
                "-def _sqlite_date_extract(lookup_type, dt):",
                "+def _sqlite_datetime_parse(dt, tzname=None):",
                "     if dt is None:",
                "@@ -332,3 +332,12 @@ def _sqlite_date_extract(lookup_type, dt):",
                "         dt = backend_utils.typecast_timestamp(dt)",
                "-    except (ValueError, TypeError):",
                "+    except (TypeError, ValueError):",
                "+        return None",
                "+    if tzname is not None:",
                "+        dt = timezone.localtime(dt, pytz.timezone(tzname))",
                "+    return dt",
                "+",
                "+",
                "+def _sqlite_date_extract(lookup_type, dt):",
                "+    dt = _sqlite_datetime_parse(dt)",
                "+    if dt is None:",
                "         return None",
                "@@ -347,5 +356,4 @@ def _sqlite_date_extract(lookup_type, dt):",
                " def _sqlite_date_trunc(lookup_type, dt):",
                "-    try:",
                "-        dt = backend_utils.typecast_timestamp(dt)",
                "-    except (ValueError, TypeError):",
                "+    dt = _sqlite_datetime_parse(dt)",
                "+    if dt is None:",
                "         return None",
                "@@ -378,14 +386,2 @@ def _sqlite_time_trunc(lookup_type, dt):",
                "-def _sqlite_datetime_parse(dt, tzname):",
                "-    if dt is None:",
                "-        return None",
                "-    try:",
                "-        dt = backend_utils.typecast_timestamp(dt)",
                "-    except (ValueError, TypeError):",
                "-        return None",
                "-    if tzname is not None:",
                "-        dt = timezone.localtime(dt, pytz.timezone(tzname))",
                "-    return dt",
                "-",
                "-",
                " def _sqlite_datetime_cast_date(dt, tzname):"
            ],
            "changed_files": [
                "django/db/backends/sqlite3/base.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1f8a5d4face94d9c0cdb292a8ccfae7158b71ebc",
            "repository": "https://github.com/django/django",
            "timestamp": 1537944687,
            "hunks": 2,
            "message": "[2.1.x] Made DatabaseWrapper.oracle_version() return a full version tuple. Backport of 90d93a1b425c0e6e3d88afa9fff78790300e1e38 from master",
            "diff": [
                "diff --git a/django/db/backends/oracle/base.py b/django/db/backends/oracle/base.py",
                "index 2d953af2e4..1c25c9e8e5 100644",
                "--- a/django/db/backends/oracle/base.py",
                "+++ b/django/db/backends/oracle/base.py",
                "@@ -302,13 +302,6 @@ class DatabaseWrapper(BaseDatabaseWrapper):",
                "-    @cached_property",
                "-    def oracle_full_version(self):",
                "-        with self.temporary_connection():",
                "-            return self.connection.version",
                "-",
                "     @cached_property",
                "     def oracle_version(self):",
                "-        try:",
                "-            return int(self.oracle_full_version.split('.')[0])",
                "-        except ValueError:",
                "-            return None",
                "+        with self.temporary_connection():",
                "+            return tuple(int(x) for x in self.connection.version.split('.'))"
            ],
            "changed_files": [
                "django/db/backends/oracle/base.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "277017aea4cf72a1797102e6d129165181d04e17",
            "repository": "https://github.com/django/django",
            "timestamp": 1538656083,
            "hunks": 3,
            "message": "Simplified utils.text.StreamingBuffer.",
            "diff": [
                "diff --git a/django/utils/text.py b/django/utils/text.py",
                "index 8e0014fd0a..44007beb0f 100644",
                "--- a/django/utils/text.py",
                "+++ b/django/utils/text.py",
                "@@ -282,22 +282,9 @@ def compress_string(s):",
                "-class StreamingBuffer:",
                "-    def __init__(self):",
                "-        self.vals = []",
                "-",
                "-    def write(self, val):",
                "-        self.vals.append(val)",
                "-",
                "+class StreamingBuffer(BytesIO):",
                "     def read(self):",
                "-        if not self.vals:",
                "-            return b''",
                "-        ret = b''.join(self.vals)",
                "-        self.vals = []",
                "+        ret = self.getvalue()",
                "+        self.seek(0)",
                "+        self.truncate()",
                "         return ret",
                "-    def flush(self):",
                "-        return",
                "-",
                "-    def close(self):",
                "-        return",
                "-"
            ],
            "changed_files": [
                "django/utils/text.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "38e2fdadfd9952e751deed662edf4c496d238f28",
            "repository": "https://github.com/django/django",
            "timestamp": 1538381908,
            "hunks": 1,
            "message": "[2.1.x] Bumped version for 2.1.2 release.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index 56436e701b..1892fa9bb4 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -2,3 +2,3 @@ from django.utils.version import get_version",
                "-VERSION = (2, 1, 2, 'alpha', 0)",
                "+VERSION = (2, 1, 2, 'final', 0)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a6e7ebf4ee91bbdcfd8cb5b90564ff6ccbac4cc0",
            "repository": "https://github.com/django/django",
            "timestamp": 1537987092,
            "hunks": 1,
            "message": "[2.1.x] Added test of filtering on BinaryField and corrected docs. Backport of fb2964a4106b1282c4179b6fbbd0374f5be1ccac from master.",
            "diff": [
                "diff --git a/tests/model_fields/test_binaryfield.py b/tests/model_fields/test_binaryfield.py",
                "index ee40ed48fb..9865f131d3 100644",
                "--- a/tests/model_fields/test_binaryfield.py",
                "+++ b/tests/model_fields/test_binaryfield.py",
                "@@ -36 +36,11 @@ class BinaryFieldTests(TestCase):",
                "         self.assertIs(field.editable, False)",
                "+",
                "+    def test_filter(self):",
                "+        dm = DataModel.objects.create(data=self.binary_data)",
                "+        DataModel.objects.create(data=b'\\xef\\xbb\\xbf')",
                "+        self.assertSequenceEqual(DataModel.objects.filter(data=self.binary_data), [dm])",
                "+",
                "+    def test_filter_memoryview(self):",
                "+        dm = DataModel.objects.create(data=self.binary_data)",
                "+        DataModel.objects.create(data=b'\\xef\\xbb\\xbf')",
                "+        self.assertSequenceEqual(DataModel.objects.filter(data=memoryview(self.binary_data)), [dm])"
            ],
            "changed_files": [
                "tests/model_fields/test_binaryfield.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "fb2964a4106b1282c4179b6fbbd0374f5be1ccac",
            "repository": "https://github.com/django/django",
            "timestamp": 1537987092,
            "hunks": 1,
            "message": "Added test of filtering on BinaryField and corrected docs.",
            "diff": [
                "diff --git a/tests/model_fields/test_binaryfield.py b/tests/model_fields/test_binaryfield.py",
                "index ee40ed48fb..9865f131d3 100644",
                "--- a/tests/model_fields/test_binaryfield.py",
                "+++ b/tests/model_fields/test_binaryfield.py",
                "@@ -36 +36,11 @@ class BinaryFieldTests(TestCase):",
                "         self.assertIs(field.editable, False)",
                "+",
                "+    def test_filter(self):",
                "+        dm = DataModel.objects.create(data=self.binary_data)",
                "+        DataModel.objects.create(data=b'\\xef\\xbb\\xbf')",
                "+        self.assertSequenceEqual(DataModel.objects.filter(data=self.binary_data), [dm])",
                "+",
                "+    def test_filter_memoryview(self):",
                "+        dm = DataModel.objects.create(data=self.binary_data)",
                "+        DataModel.objects.create(data=b'\\xef\\xbb\\xbf')",
                "+        self.assertSequenceEqual(DataModel.objects.filter(data=memoryview(self.binary_data)), [dm])"
            ],
            "changed_files": [
                "tests/model_fields/test_binaryfield.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4441778c263c075675950c8488882ee4ddac4c12",
            "repository": "https://github.com/django/django",
            "timestamp": 1537196077,
            "hunks": 2,
            "message": "Simplified ListMixin.sort().",
            "diff": [
                "diff --git a/django/contrib/gis/geos/mutable_list.py b/django/contrib/gis/geos/mutable_list.py",
                "index 90fcc6d587..2d62e7bfa4 100644",
                "--- a/django/contrib/gis/geos/mutable_list.py",
                "+++ b/django/contrib/gis/geos/mutable_list.py",
                "@@ -212,15 +212,5 @@ class ListMixin:",
                "-    def sort(self, cmp=None, key=None, reverse=False):",
                "+    def sort(self, key=None, reverse=False):",
                "         \"Standard list sort method\"",
                "-        if key:",
                "-            temp = [(key(v), v) for v in self]",
                "-            temp.sort(key=lambda x: x[0], reverse=reverse)",
                "-            self[:] = [v[1] for v in temp]",
                "-        else:",
                "-            temp = list(self)",
                "-            if cmp is not None:",
                "-                temp.sort(cmp=cmp, reverse=reverse)",
                "-            else:",
                "-                temp.sort(reverse=reverse)",
                "-            self[:] = temp",
                "+        self[:] = sorted(self, key=key, reverse=reverse)"
            ],
            "changed_files": [
                "django/contrib/gis/geos/mutable_list.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "aa16ec54747eaa9da7534e67a1de320b9a517c1c",
            "repository": "https://github.com/django/django",
            "timestamp": 1536182530,
            "hunks": 2,
            "message": "Moved test for nonexistent field in F() to BasicExpressionsTest.",
            "diff": [
                "diff --git a/tests/expressions/tests.py b/tests/expressions/tests.py",
                "index d1e622a2d4..973176e223 100644",
                "--- a/tests/expressions/tests.py",
                "+++ b/tests/expressions/tests.py",
                "@@ -593,2 +593,6 @@ class BasicExpressionsTests(TestCase):",
                "+    def test_incorrect_field_in_F_expression(self):",
                "+        with self.assertRaisesMessage(FieldError, \"Cannot resolve keyword 'nope' into field.\"):",
                "+            list(Employee.objects.filter(firstname=F('nope')))",
                "+",
                "@@ -924,6 +928,2 @@ class ExpressionsNumericTests(TestCase):",
                "-    def test_incorrect_field_expression(self):",
                "-        with self.assertRaisesMessage(FieldError, \"Cannot resolve keyword 'nope' into field.\"):",
                "-            list(Employee.objects.filter(firstname=F('nope')))",
                "-"
            ],
            "changed_files": [
                "tests/expressions/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "91841c77cd665a480a236f0b81e1d1827f800759",
            "repository": "https://github.com/django/django",
            "timestamp": 1537990215,
            "hunks": 5,
            "message": "Fixed loaddata error message when uncompressed fixture has a dot in its name.",
            "diff": [
                "diff --git a/django/core/management/commands/loaddata.py b/django/core/management/commands/loaddata.py",
                "index 595e19e5e6..40d75b58e4 100644",
                "--- a/django/core/management/commands/loaddata.py",
                "+++ b/django/core/management/commands/loaddata.py",
                "@@ -329,3 +329,3 @@ class Command(BaseCommand):",
                "                     \"Problem installing fixture '%s': %s is not a known \"",
                "-                    \"serialization format.\" % (''.join(parts[:-1]), parts[-1]))",
                "+                    \"serialization format.\" % ('.'.join(parts[:-1]), parts[-1]))",
                "         else:",
                "diff --git a/tests/fixtures_regress/fixtures/bad_fix.ture1.unkn b/tests/fixtures_regress/fixtures/bad_fix.ture1.unkn",
                "new file mode 100644",
                "index 0000000000..a8b0a0c56c",
                "--- /dev/null",
                "+++ b/tests/fixtures_regress/fixtures/bad_fix.ture1.unkn",
                "@@ -0,0 +1 @@",
                "+This data shouldn't load, as it's of an unknown file format.",
                "\\ No newline at end of file",
                "diff --git a/tests/fixtures_regress/tests.py b/tests/fixtures_regress/tests.py",
                "index 83b007bf59..1cac151367 100644",
                "--- a/tests/fixtures_regress/tests.py",
                "+++ b/tests/fixtures_regress/tests.py",
                "@@ -184,3 +184,3 @@ class TestFixtures(TestCase):",
                "         \"\"\"",
                "-        msg = \"Problem installing fixture 'bad_fixture1': unkn is not a known serialization format.\"",
                "+        msg = \"Problem installing fixture 'bad_fix.ture1': unkn is not a known serialization format.\"",
                "         with self.assertRaisesMessage(management.CommandError, msg):",
                "@@ -188,3 +188,3 @@ class TestFixtures(TestCase):",
                "                 'loaddata',",
                "-                'bad_fixture1.unkn',",
                "+                'bad_fix.ture1.unkn',",
                "                 verbosity=0,",
                "@@ -200,3 +200,3 @@ class TestFixtures(TestCase):",
                "                 'loaddata',",
                "-                'bad_fixture1.unkn',",
                "+                'bad_fix.ture1.unkn',",
                "                 verbosity=0,"
            ],
            "changed_files": [
                "django/core/management/commands/loaddata.py",
                "tests/fixtures_regress/fixtures/bad_fix.ture1.unkn",
                "tests/fixtures_regress/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c99d379f534817edccbe8b23a235e11781508590",
            "repository": "https://github.com/django/django",
            "timestamp": 1537350082,
            "hunks": 1,
            "message": "Updated contributing tutorial's virtual environment instructions.",
            "diff": [
                "diff --git a/docs/_ext/djangodocs.py b/docs/_ext/djangodocs.py",
                "index b91ccaa37c..19d142b9db 100644",
                "--- a/docs/_ext/djangodocs.py",
                "+++ b/docs/_ext/djangodocs.py",
                "@@ -322,2 +322,4 @@ class ConsoleDirective(CodeBlock):",
                "                 return args_to_win(line[4:])",
                "+            if line.startswith('$ python3'):",
                "+                return 'py ' + args_to_win(line[9:])",
                "             if line.startswith('$ python'):"
            ],
            "changed_files": [
                "docs/_ext/djangodocs.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "76dfa834e7ceeca97cd8e3cfa86651a955aa3f0c",
            "repository": "https://github.com/django/django",
            "timestamp": 1535576078,
            "hunks": 3,
            "message": "Combined two identical SQLite functions.",
            "diff": [
                "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py",
                "index 6316e2f9da..a6542db1eb 100644",
                "--- a/django/db/backends/sqlite3/base.py",
                "+++ b/django/db/backends/sqlite3/base.py",
                "@@ -163,3 +163,3 @@ class DatabaseWrapper(BaseDatabaseWrapper):",
                "         conn = Database.connect(**conn_params)",
                "-        conn.create_function(\"django_date_extract\", 2, _sqlite_date_extract)",
                "+        conn.create_function(\"django_date_extract\", 2, _sqlite_datetime_extract)",
                "         conn.create_function(\"django_date_trunc\", 2, _sqlite_date_trunc)",
                "@@ -339,18 +339,2 @@ def _sqlite_datetime_parse(dt, tzname=None):",
                "-def _sqlite_date_extract(lookup_type, dt):",
                "-    dt = _sqlite_datetime_parse(dt)",
                "-    if dt is None:",
                "-        return None",
                "-    if lookup_type == 'week_day':",
                "-        return (dt.isoweekday() % 7) + 1",
                "-    elif lookup_type == 'week':",
                "-        return dt.isocalendar()[1]",
                "-    elif lookup_type == 'quarter':",
                "-        return math.ceil(dt.month / 3)",
                "-    elif lookup_type == 'iso_year':",
                "-        return dt.isocalendar()[0]",
                "-    else:",
                "-        return getattr(dt, lookup_type)",
                "-",
                "-",
                " def _sqlite_date_trunc(lookup_type, dt):",
                "@@ -400,3 +384,3 @@ def _sqlite_datetime_cast_time(dt, tzname):",
                "-def _sqlite_datetime_extract(lookup_type, dt, tzname):",
                "+def _sqlite_datetime_extract(lookup_type, dt, tzname=None):",
                "     dt = _sqlite_datetime_parse(dt, tzname)"
            ],
            "changed_files": [
                "django/db/backends/sqlite3/base.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e7a0a5c8b21f5ad1a0066bd0dfab84466b474e15",
            "repository": "https://github.com/django/django",
            "timestamp": 1536869541,
            "hunks": 35,
            "message": "Simplified expressions.tests.",
            "diff": [
                "diff --git a/tests/expressions/tests.py b/tests/expressions/tests.py",
                "index f12a9388da..c74ff8f30d 100644",
                "--- a/tests/expressions/tests.py",
                "+++ b/tests/expressions/tests.py",
                "@@ -67,7 +67,4 @@ class BasicExpressionsTests(TestCase):",
                "         self.assertQuerysetEqual(",
                "-            companies, [",
                "-                '<Company: Example Inc.>',",
                "-                '<Company: Foobar Ltd.>',",
                "-                '<Company: Test GmbH>',",
                "-            ],",
                "+            companies,",
                "+            ['<Company: Example Inc.>', '<Company: Foobar Ltd.>', '<Company: Test GmbH>'],",
                "         )",
                "@@ -152,5 +149,3 @@ class BasicExpressionsTests(TestCase):",
                "         # Law of order of operations is followed",
                "-        self. company_query.update(",
                "-            num_chairs=F('num_employees') + 2 * F('num_employees')",
                "-        )",
                "+        self.company_query.update(num_chairs=F('num_employees') + 2 * F('num_employees'))",
                "         self.assertSequenceEqual(",
                "@@ -177,5 +172,3 @@ class BasicExpressionsTests(TestCase):",
                "         # Law of order of operations can be overridden by parentheses",
                "-        self.company_query.update(",
                "-            num_chairs=((F('num_employees') + 2) * F('num_employees'))",
                "-        )",
                "+        self.company_query.update(num_chairs=(F('num_employees') + 2) * F('num_employees'))",
                "         self.assertSequenceEqual(",
                "@@ -202,12 +195,6 @@ class BasicExpressionsTests(TestCase):",
                "         # ForeignKey can become updated with the value of another ForeignKey.",
                "-        self.assertEqual(",
                "-            Company.objects.update(point_of_contact=F('ceo')),",
                "-            3",
                "-        )",
                "+        self.assertEqual(Company.objects.update(point_of_contact=F('ceo')), 3)",
                "         self.assertQuerysetEqual(",
                "-            Company.objects.all(), [",
                "-                \"Joe Smith\",",
                "-                \"Frank Meyer\",",
                "-                \"Max Mustermann\",",
                "-            ],",
                "+            Company.objects.all(),",
                "+            ['Joe Smith', 'Frank Meyer', 'Max Mustermann'],",
                "             lambda c: str(c.point_of_contact),",
                "@@ -221,6 +208,4 @@ class BasicExpressionsTests(TestCase):",
                "         self.assertQuerysetEqual(",
                "-            Number.objects.all(), [",
                "-                None,",
                "-                None,",
                "-            ],",
                "+            Number.objects.all(),",
                "+            [None, None],",
                "             lambda n: n.float,",
                "@@ -232,3 +217,3 @@ class BasicExpressionsTests(TestCase):",
                "         Company.objects.update(point_of_contact=F('ceo'))",
                "-        c = Company.objects.all()[0]",
                "+        c = Company.objects.first()",
                "         c.point_of_contact = Employee.objects.create(firstname=\"Guido\", lastname=\"van Rossum\")",
                "@@ -237,6 +222,4 @@ class BasicExpressionsTests(TestCase):",
                "         self.assertQuerysetEqual(",
                "-            Company.objects.filter(ceo__firstname=F(\"point_of_contact__firstname\")), [",
                "-                \"Foobar Ltd.\",",
                "-                \"Test GmbH\",",
                "-            ],",
                "+            Company.objects.filter(ceo__firstname=F('point_of_contact__firstname')),",
                "+            ['Foobar Ltd.', 'Test GmbH'],",
                "             lambda c: c.name,",
                "@@ -264,8 +247,6 @@ class BasicExpressionsTests(TestCase):",
                "         # F expressions can be used to update attributes on single objects",
                "-        test_gmbh = Company.objects.get(name=\"Test GmbH\")",
                "-        self.assertEqual(test_gmbh.num_employees, 32)",
                "-        test_gmbh.num_employees = F(\"num_employees\") + 4",
                "-        test_gmbh.save()",
                "-        test_gmbh = Company.objects.get(pk=test_gmbh.pk)",
                "-        self.assertEqual(test_gmbh.num_employees, 36)",
                "+        self.gmbh.num_employees = F('num_employees') + 4",
                "+        self.gmbh.save()",
                "+        self.gmbh.refresh_from_db()",
                "+        self.assertEqual(self.gmbh.num_employees, 36)",
                "@@ -273,6 +254,3 @@ class BasicExpressionsTests(TestCase):",
                "         # We should be able to use Funcs when inserting new data",
                "-        test_co = Company(",
                "-            name=Lower(Value(\"UPPER\")), num_employees=32, num_chairs=1,",
                "-            ceo=Employee.objects.create(firstname=\"Just\", lastname=\"Doit\", salary=30),",
                "-        )",
                "+        test_co = Company(name=Lower(Value('UPPER')), num_employees=32, num_chairs=1, ceo=self.max)",
                "         test_co.save()",
                "@@ -282,6 +260,3 @@ class BasicExpressionsTests(TestCase):",
                "     def test_new_object_create(self):",
                "-        test_co = Company.objects.create(",
                "-            name=Lower(Value(\"UPPER\")), num_employees=32, num_chairs=1,",
                "-            ceo=Employee.objects.create(firstname=\"Just\", lastname=\"Doit\", salary=30),",
                "-        )",
                "+        test_co = Company.objects.create(name=Lower(Value('UPPER')), num_employees=32, num_chairs=1, ceo=self.max)",
                "         test_co.refresh_from_db()",
                "@@ -300,6 +275,4 @@ class BasicExpressionsTests(TestCase):",
                "         # keys, or attributes which involve joins.",
                "-        test_gmbh = Company.objects.get(name=\"Test GmbH\")",
                "-",
                "         def test():",
                "-            test_gmbh.point_of_contact = F(\"ceo\")",
                "+            self.gmbh.point_of_contact = F('ceo')",
                "         msg = 'F(ceo)\": \"Company.point_of_contact\" must be a \"Employee\" instance.'",
                "@@ -308,8 +281,8 @@ class BasicExpressionsTests(TestCase):",
                "-        test_gmbh.point_of_contact = test_gmbh.ceo",
                "-        test_gmbh.save()",
                "-        test_gmbh.name = F(\"ceo__last_name\")",
                "+        self.gmbh.point_of_contact = self.gmbh.ceo",
                "+        self.gmbh.save()",
                "+        self.gmbh.name = F('ceo__last_name')",
                "         msg = 'Joined field references are not permitted in this query'",
                "         with self.assertRaisesMessage(FieldError, msg):",
                "-            test_gmbh.save()",
                "+            self.gmbh.save()",
                "@@ -318,7 +291,3 @@ class BasicExpressionsTests(TestCase):",
                "         # not yet exist in the database",
                "-        test_gmbh = Company.objects.get(name=\"Test GmbH\")",
                "-        acme = Company(",
                "-            name=\"The Acme Widget Co.\", num_employees=12, num_chairs=5,",
                "-            ceo=test_gmbh.ceo",
                "-        )",
                "+        acme = Company(name='The Acme Widget Co.', num_employees=12, num_chairs=5, ceo=self.max)",
                "         acme.num_employees = F(\"num_employees\") + 16",
                "@@ -365,4 +334,3 @@ class BasicExpressionsTests(TestCase):",
                "         # reuse that join.",
                "-        qs = Employee.objects.filter(",
                "-            company_ceo_set__num_chairs=F('company_ceo_set__num_employees'))",
                "+        qs = Employee.objects.filter(company_ceo_set__num_chairs=F('company_ceo_set__num_employees'))",
                "         self.assertEqual(str(qs.query).count('JOIN'), 1)",
                "@@ -428,3 +396,3 @@ class BasicExpressionsTests(TestCase):",
                "             point_of_contact=Employee.objects.get(firstname='Joe', lastname='Smith'),",
                "-            ceo=Employee.objects.get(firstname='Max', lastname='Mustermann'),",
                "+            ceo=self.max,",
                "         )",
                "@@ -812,3 +780,2 @@ class ExpressionsTests(TestCase):",
                "         )",
                "-",
                "         self.assertQuerysetEqual(",
                "@@ -818,3 +785,2 @@ class ExpressionsTests(TestCase):",
                "         )",
                "-",
                "         self.assertQuerysetEqual(",
                "@@ -847,3 +813,2 @@ class ExpressionsTests(TestCase):",
                "         )",
                "-",
                "         self.assertQuerysetEqual(",
                "@@ -853,3 +818,2 @@ class ExpressionsTests(TestCase):",
                "         )",
                "-",
                "         self.assertQuerysetEqual(",
                "@@ -876,7 +840,3 @@ class ExpressionsNumericTests(TestCase):",
                "             Number.objects.all(),",
                "-            [",
                "-                '<Number: -1, -1.000>',",
                "-                '<Number: 42, 42.000>',",
                "-                '<Number: 1337, 1337.000>'",
                "-            ],",
                "+            ['<Number: -1, -1.000>', '<Number: 42, 42.000>', '<Number: 1337, 1337.000>'],",
                "             ordered=False",
                "@@ -888,14 +848,6 @@ class ExpressionsNumericTests(TestCase):",
                "         \"\"\"",
                "-        self.assertEqual(",
                "-            Number.objects.filter(integer__gt=0)",
                "-                  .update(integer=F('integer') + 1),",
                "-            2)",
                "-",
                "+        self.assertEqual(Number.objects.filter(integer__gt=0).update(integer=F('integer') + 1), 2)",
                "         self.assertQuerysetEqual(",
                "             Number.objects.all(),",
                "-            [",
                "-                '<Number: -1, -1.000>',",
                "-                '<Number: 43, 42.000>',",
                "-                '<Number: 1338, 1337.000>'",
                "-            ],",
                "+            ['<Number: -1, -1.000>', '<Number: 43, 42.000>', '<Number: 1338, 1337.000>'],",
                "             ordered=False",
                "@@ -908,12 +860,6 @@ class ExpressionsNumericTests(TestCase):",
                "         \"\"\"",
                "-        self.assertEqual(",
                "-            Number.objects.filter(integer__gt=0)",
                "-                  .update(integer=F('integer') + 1),",
                "-            2)",
                "+        self.assertEqual(Number.objects.filter(integer__gt=0).update(integer=F('integer') + 1), 2)",
                "         self.assertQuerysetEqual(",
                "             Number.objects.exclude(float=F('integer')),",
                "-            [",
                "-                '<Number: 43, 42.000>',",
                "-                '<Number: 1338, 1337.000>'",
                "-            ],",
                "+            ['<Number: 43, 42.000>', '<Number: 1338, 1337.000>'],",
                "             ordered=False",
                "@@ -1157,4 +1103,3 @@ class FTimeDeltaTests(TestCase):",
                "     def test_delta_add(self):",
                "-        for i in range(len(self.deltas)):",
                "-            delta = self.deltas[i]",
                "+        for i, delta in enumerate(self.deltas):",
                "             test_set = [e.name for e in Experiment.objects.filter(end__lt=F('start') + delta)]",
                "@@ -1169,4 +1114,3 @@ class FTimeDeltaTests(TestCase):",
                "     def test_delta_subtract(self):",
                "-        for i in range(len(self.deltas)):",
                "-            delta = self.deltas[i]",
                "+        for i, delta in enumerate(self.deltas):",
                "             test_set = [e.name for e in Experiment.objects.filter(start__gt=F('end') - delta)]",
                "@@ -1178,4 +1122,3 @@ class FTimeDeltaTests(TestCase):",
                "     def test_exclude(self):",
                "-        for i in range(len(self.deltas)):",
                "-            delta = self.deltas[i]",
                "+        for i, delta in enumerate(self.deltas):",
                "             test_set = [e.name for e in Experiment.objects.exclude(end__lt=F('start') + delta)]",
                "@@ -1187,4 +1130,3 @@ class FTimeDeltaTests(TestCase):",
                "     def test_date_comparison(self):",
                "-        for i in range(len(self.days_long)):",
                "-            days = self.days_long[i]",
                "+        for i, days in enumerate(self.days_long):",
                "             test_set = [e.name for e in Experiment.objects.filter(completed__lt=F('assigned') + days)]",
                "@@ -1197,4 +1139,3 @@ class FTimeDeltaTests(TestCase):",
                "     def test_mixed_comparisons1(self):",
                "-        for i in range(len(self.delays)):",
                "-            delay = self.delays[i]",
                "+        for i, delay in enumerate(self.delays):",
                "             test_set = [e.name for e in Experiment.objects.filter(assigned__gt=F('start') - delay)]",
                "@@ -1206,5 +1147,4 @@ class FTimeDeltaTests(TestCase):",
                "     def test_mixed_comparisons2(self):",
                "-        delays = [datetime.timedelta(delay.days) for delay in self.delays]",
                "-        for i in range(len(delays)):",
                "-            delay = delays[i]",
                "+        for i, delay in enumerate(self.delays):",
                "+            delay = datetime.timedelta(delay.days)",
                "             test_set = [e.name for e in Experiment.objects.filter(start__lt=F('assigned') + delay)]",
                "@@ -1218,4 +1158,3 @@ class FTimeDeltaTests(TestCase):",
                "     def test_delta_update(self):",
                "-        for i in range(len(self.deltas)):",
                "-            delta = self.deltas[i]",
                "+        for delta in self.deltas:",
                "             exps = Experiment.objects.all()",
                "@@ -1418,6 +1357,4 @@ class ValueTests(TestCase):",
                "         value = Value('name')",
                "-        same_value = Value('name')",
                "-        other_value = Value('username')",
                "-        self.assertEqual(value, same_value)",
                "-        self.assertNotEqual(value, other_value)",
                "+        self.assertEqual(value, Value('name'))",
                "+        self.assertNotEqual(value, Value('username'))"
            ],
            "changed_files": [
                "tests/expressions/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3957f767bb215bbd4ca48aabdf068fdd214aa79c",
            "repository": "https://github.com/django/django",
            "timestamp": 1539095922,
            "hunks": 3,
            "message": "Simplified handling of DurationField values on MySQL/MariaDB.",
            "diff": [
                "diff --git a/django/db/backends/mysql/operations.py b/django/db/backends/mysql/operations.py",
                "index 973a5548ff..07b5e85ba0 100644",
                "--- a/django/db/backends/mysql/operations.py",
                "+++ b/django/db/backends/mysql/operations.py",
                "@@ -1,2 +1 @@",
                "-import decimal",
                " import uuid",
                "@@ -264,8 +263,2 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "-    def convert_durationfield_value(self, value, expression, connection):",
                "-        # DurationFields can return a Decimal in MariaDB.",
                "-        if isinstance(value, decimal.Decimal):",
                "-            value = float(value)",
                "-        return super().convert_durationfield_value(value, expression, connection)",
                "-",
                "     def subtract_temporals(self, internal_type, lhs, rhs):",
                "@@ -277,3 +270,3 @@ class DatabaseOperations(BaseDatabaseOperations):",
                "                 # a decimal. MySQL returns an integer without microseconds.",
                "-                return '((TIME_TO_SEC(%(lhs)s) - TIME_TO_SEC(%(rhs)s)) * 1000000)' % {",
                "+                return 'CAST((TIME_TO_SEC(%(lhs)s) - TIME_TO_SEC(%(rhs)s)) * 1000000 AS SIGNED)' % {",
                "                     'lhs': lhs_sql, 'rhs': rhs_sql"
            ],
            "changed_files": [
                "django/db/backends/mysql/operations.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "39fd80470cf0651827719e3c63c8d1d745ecce15",
            "repository": "https://github.com/django/django",
            "timestamp": 1538441042,
            "hunks": 1,
            "message": "[2.1.x] Fixed crash building translated docs since Sphinx 1.8. Backport of 7206601040304c762f5014048fda6fa68ec1ee84 from master.",
            "diff": [
                "diff --git a/docs/_ext/djangodocs.py b/docs/_ext/djangodocs.py",
                "index 19d142b9db..6f8c112539 100644",
                "--- a/docs/_ext/djangodocs.py",
                "+++ b/docs/_ext/djangodocs.py",
                "@@ -212,2 +212,4 @@ class ConsoleNode(nodes.literal_block):",
                "     \"\"\"",
                "+    tagname = 'ConsoleNode'",
                "+",
                "     def __init__(self, litblk_obj):"
            ],
            "changed_files": [
                "docs/_ext/djangodocs.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ed60ce55c2dd8a3940fa5ae9f1622f101c8421ad",
            "repository": "https://github.com/django/django",
            "timestamp": 1536182530,
            "hunks": 2,
            "message": "[2.1.x] Moved test for nonexistent field in F() to BasicExpressionsTest. Backport of aa16ec54747eaa9da7534e67a1de320b9a517c1c from master",
            "diff": [
                "diff --git a/tests/expressions/tests.py b/tests/expressions/tests.py",
                "index d1e622a2d4..973176e223 100644",
                "--- a/tests/expressions/tests.py",
                "+++ b/tests/expressions/tests.py",
                "@@ -593,2 +593,6 @@ class BasicExpressionsTests(TestCase):",
                "+    def test_incorrect_field_in_F_expression(self):",
                "+        with self.assertRaisesMessage(FieldError, \"Cannot resolve keyword 'nope' into field.\"):",
                "+            list(Employee.objects.filter(firstname=F('nope')))",
                "+",
                "@@ -924,6 +928,2 @@ class ExpressionsNumericTests(TestCase):",
                "-    def test_incorrect_field_expression(self):",
                "-        with self.assertRaisesMessage(FieldError, \"Cannot resolve keyword 'nope' into field.\"):",
                "-            list(Employee.objects.filter(firstname=F('nope')))",
                "-"
            ],
            "changed_files": [
                "tests/expressions/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "abd0bafb49d11c1d18ad641bab7c123d2fa2f052",
            "repository": "https://github.com/django/django",
            "timestamp": 1538386716,
            "hunks": 1,
            "message": "[1.11.x] Post-release version bump.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index d558b15d0c..2b7a0052d8 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -4,3 +4,3 @@ from django.utils.version import get_version",
                "-VERSION = (1, 11, 16, 'final', 0)",
                "+VERSION = (1, 11, 17, 'alpha', 0)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.11.17",
                "1.11.18",
                "1.11.19",
                "1.11.20",
                "1.11.21",
                "1.11.22",
                "1.11.23",
                "1.11.24",
                "1.11.25",
                "1.11.26",
                "1.11.27",
                "1.11.28",
                "1.11.29"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5a23a285de1c36ef6e7d4ac546c12d0011fa55ec",
            "repository": "https://github.com/django/django",
            "timestamp": 1538662146,
            "hunks": 5,
            "message": "Used skip(If|Unless)DBFeature in transactions tests.",
            "diff": [
                "diff --git a/tests/transactions/tests.py b/tests/transactions/tests.py",
                "index 7d4d4b777a..637a20e7e0 100644",
                "--- a/tests/transactions/tests.py",
                "+++ b/tests/transactions/tests.py",
                "@@ -16,3 +16,3 @@ from .models import Reporter",
                "-@skipUnless(connection.features.uses_savepoints, \"'atomic' requires transactions and savepoints.\")",
                "+@skipUnlessDBFeature('uses_savepoints')",
                " class AtomicTests(TransactionTestCase):",
                "@@ -230,6 +230,3 @@ class AtomicInsideTransactionTests(AtomicTests):",
                "-@skipIf(",
                "-    connection.features.autocommits_when_autocommit_is_off,",
                "-    \"This test requires a non-autocommit mode that doesn't autocommit.\"",
                "-)",
                "+@skipIfDBFeature('autocommits_when_autocommit_is_off')",
                " class AtomicWithoutAutocommitTests(AtomicTests):",
                "@@ -247,3 +244,3 @@ class AtomicWithoutAutocommitTests(AtomicTests):",
                "-@skipUnless(connection.features.uses_savepoints, \"'atomic' requires transactions and savepoints.\")",
                "+@skipUnlessDBFeature('uses_savepoints')",
                " class AtomicMergeTests(TransactionTestCase):",
                "@@ -297,3 +294,3 @@ class AtomicMergeTests(TransactionTestCase):",
                "-@skipUnless(connection.features.uses_savepoints, \"'atomic' requires transactions and savepoints.\")",
                "+@skipUnlessDBFeature('uses_savepoints')",
                " class AtomicErrorsTests(TransactionTestCase):",
                "@@ -439,6 +436,3 @@ class AtomicMiscTests(TransactionTestCase):",
                "-@skipIf(",
                "-    connection.features.autocommits_when_autocommit_is_off,",
                "-    \"This test requires a non-autocommit mode that doesn't autocommit.\"",
                "-)",
                "+@skipIfDBFeature('autocommits_when_autocommit_is_off')",
                " class NonAutocommitTests(TransactionTestCase):"
            ],
            "changed_files": [
                "tests/transactions/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "81999b5c5f2f38029fcf2e05d93c73aeabd2ad58",
            "repository": "https://github.com/django/django",
            "timestamp": 1538386766,
            "hunks": 1,
            "message": "[2.0.x] Post-release version bump.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index 8d4632361c..66362b3702 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -2,3 +2,3 @@ from django.utils.version import get_version",
                "-VERSION = (2, 0, 9, 'final', 0)",
                "+VERSION = (2, 0, 10, 'alpha', 0)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.10",
                "2.0.11",
                "2.0.12",
                "2.0.13"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3d0344dc402e11c57b65ecf57481e681f790db2e",
            "repository": "https://github.com/django/django",
            "timestamp": 1538379531,
            "hunks": 1,
            "message": "[1.11.x] Bumped version for 1.11.16 release.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index d346e1cc7d..d558b15d0c 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -4,3 +4,3 @@ from django.utils.version import get_version",
                "-VERSION = (1, 11, 16, 'alpha', 0)",
                "+VERSION = (1, 11, 16, 'final', 0)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "1.11.16",
                "1.11.17",
                "1.11.18",
                "1.11.19",
                "1.11.20",
                "1.11.21",
                "1.11.22",
                "1.11.23",
                "1.11.24",
                "1.11.25",
                "1.11.26",
                "1.11.27",
                "1.11.28",
                "1.11.29"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "cc4bb110d31f18d2931fd79d792d3ac09cce19e5",
            "repository": "https://github.com/django/django",
            "timestamp": 1536610101,
            "hunks": 4,
            "message": "Removed usage of deprecated sphinx APIs.",
            "diff": [
                "diff --git a/docs/_ext/djangodocs.py b/docs/_ext/djangodocs.py",
                "index 30d3741b89..c4ee09b5cd 100644",
                "--- a/docs/_ext/djangodocs.py",
                "+++ b/docs/_ext/djangodocs.py",
                "@@ -14,2 +14,3 @@ from sphinx.directives import CodeBlock",
                " from sphinx.domains.std import Cmdoption",
                "+from sphinx.util import logging",
                " from sphinx.util.console import bold",
                "@@ -17,2 +18,3 @@ from sphinx.writers.html import HTMLTranslator",
                "+logger = logging.getLogger(__name__)",
                " # RE for option descriptions without a '--' prefix",
                "@@ -43,3 +45,3 @@ def setup(app):",
                "     )",
                "-    app.add_description_unit(",
                "+    app.add_object_type(",
                "         directivename=\"django-admin\",",
                "@@ -181,3 +183,3 @@ class DjangoStandaloneHTMLBuilder(StandaloneHTMLBuilder):",
                "         super().finish()",
                "-        self.info(bold(\"writing templatebuiltins.js...\"))",
                "+        logger.info(bold(\"writing templatebuiltins.js...\"))",
                "         xrefs = self.env.domaindata[\"std\"][\"objects\"]"
            ],
            "changed_files": [
                "docs/_ext/djangodocs.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7b159df94235036a41ee93952ff83bbc95c1da3c",
            "repository": "https://github.com/django/django",
            "timestamp": 1537300700,
            "hunks": 3,
            "message": "Fixed expressions tests when run in reverse. Regression in e7a0a5c8b21f5ad1a0066bd0dfab84466b474e15.",
            "diff": [
                "diff --git a/tests/expressions/tests.py b/tests/expressions/tests.py",
                "index c74ff8f30d..c631151448 100644",
                "--- a/tests/expressions/tests.py",
                "+++ b/tests/expressions/tests.py",
                "@@ -275,14 +275,13 @@ class BasicExpressionsTests(TestCase):",
                "         # keys, or attributes which involve joins.",
                "-        def test():",
                "-            self.gmbh.point_of_contact = F('ceo')",
                "+        test_gmbh = Company.objects.get(pk=self.gmbh.pk)",
                "         msg = 'F(ceo)\": \"Company.point_of_contact\" must be a \"Employee\" instance.'",
                "         with self.assertRaisesMessage(ValueError, msg):",
                "-            test()",
                "+            test_gmbh.point_of_contact = F('ceo')",
                "-        self.gmbh.point_of_contact = self.gmbh.ceo",
                "-        self.gmbh.save()",
                "-        self.gmbh.name = F('ceo__last_name')",
                "+        test_gmbh.point_of_contact = self.gmbh.ceo",
                "+        test_gmbh.save()",
                "+        test_gmbh.name = F('ceo__last_name')",
                "         msg = 'Joined field references are not permitted in this query'",
                "         with self.assertRaisesMessage(FieldError, msg):",
                "-            self.gmbh.save()",
                "+            test_gmbh.save()"
            ],
            "changed_files": [
                "tests/expressions/tests.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b5d7604cb0c130af1d7378496a69dc481d72a197",
            "repository": "https://github.com/django/django",
            "timestamp": 1539131528,
            "hunks": 1,
            "message": "Completed FixedOffset test coverage.",
            "diff": [
                "diff --git a/tests/utils_tests/test_timezone.py b/tests/utils_tests/test_timezone.py",
                "index 11c754f1e7..c6e5ece6c4 100644",
                "--- a/tests/utils_tests/test_timezone.py",
                "+++ b/tests/utils_tests/test_timezone.py",
                "@@ -214 +214,12 @@ class TimezoneTests(SimpleTestCase):",
                "         self.assertEqual(cm.filename, __file__)",
                "+",
                "+    @ignore_warnings(category=RemovedInDjango31Warning)",
                "+    def test_fixedoffset_utcoffset(self):",
                "+        delta = datetime.timedelta(minutes=1)",
                "+        self.assertEqual(timezone.FixedOffset(1).utcoffset(None), delta)",
                "+",
                "+    @ignore_warnings(category=RemovedInDjango31Warning)",
                "+    def test_fixedoffset_dst(self):",
                "+        ZERO = datetime.timedelta(minutes=0)",
                "+        delta = datetime.timedelta(hours=0)",
                "+        self.assertEqual(timezone.FixedOffset().dst(delta), ZERO)"
            ],
            "changed_files": [
                "tests/utils_tests/test_timezone.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4fc8fb7ddaad495d45d53df58b2d13115857b3c7",
            "repository": "https://github.com/django/django",
            "timestamp": 1538143000,
            "hunks": 1,
            "message": "Tested showmigrations with apps without migrations.",
            "diff": [
                "diff --git a/tests/migrations/test_commands.py b/tests/migrations/test_commands.py",
                "index 268e180697..33b85578af 100644",
                "--- a/tests/migrations/test_commands.py",
                "+++ b/tests/migrations/test_commands.py",
                "@@ -375,2 +375,13 @@ class MigrateTests(MigrationTestBase):",
                "+    @override_settings(MIGRATION_MODULES={'migrations': 'migrations.test_migrations_empty'})",
                "+    def test_showmigrations_no_migrations(self):",
                "+        out = io.StringIO()",
                "+        call_command('showmigrations', stdout=out, no_color=True)",
                "+        self.assertEqual('migrations\\n (no migrations)\\n', out.getvalue().lower())",
                "+",
                "+    @override_settings(INSTALLED_APPS=['migrations.migrations_test_apps.unmigrated_app'])",
                "+    def test_showmigrations_unmigrated_app(self):",
                "+        with self.assertRaisesMessage(CommandError, 'No migrations present for: unmigrated_app'):",
                "+            call_command('showmigrations', 'unmigrated_app')",
                "+",
                "     @override_settings(MIGRATION_MODULES={\"migrations\": \"migrations.test_migrations_empty\"})"
            ],
            "changed_files": [
                "tests/migrations/test_commands.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "90d93a1b425c0e6e3d88afa9fff78790300e1e38",
            "repository": "https://github.com/django/django",
            "timestamp": 1537944687,
            "hunks": 2,
            "message": "Made DatabaseWrapper.oracle_version() return a full version tuple.",
            "diff": [
                "diff --git a/django/db/backends/oracle/base.py b/django/db/backends/oracle/base.py",
                "index 0c64d995b4..2df77d7630 100644",
                "--- a/django/db/backends/oracle/base.py",
                "+++ b/django/db/backends/oracle/base.py",
                "@@ -302,13 +302,6 @@ class DatabaseWrapper(BaseDatabaseWrapper):",
                "-    @cached_property",
                "-    def oracle_full_version(self):",
                "-        with self.temporary_connection():",
                "-            return self.connection.version",
                "-",
                "     @cached_property",
                "     def oracle_version(self):",
                "-        try:",
                "-            return int(self.oracle_full_version.split('.')[0])",
                "-        except ValueError:",
                "-            return None",
                "+        with self.temporary_connection():",
                "+            return tuple(int(x) for x in self.connection.version.split('.'))"
            ],
            "changed_files": [
                "django/db/backends/oracle/base.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c8baf4bb9d5bb9f486ac2aa767150fcd85493521",
            "repository": "https://github.com/django/django",
            "timestamp": 1538380709,
            "hunks": 1,
            "message": "[2.0.x] Bumped version for 2.0.9 release.",
            "diff": [
                "diff --git a/django/__init__.py b/django/__init__.py",
                "index 25f477adc3..8d4632361c 100644",
                "--- a/django/__init__.py",
                "+++ b/django/__init__.py",
                "@@ -2,3 +2,3 @@ from django.utils.version import get_version",
                "-VERSION = (2, 0, 9, 'alpha', 0)",
                "+VERSION = (2, 0, 9, 'final', 0)"
            ],
            "changed_files": [
                "django/__init__.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.10",
                "2.0.11",
                "2.0.12",
                "2.0.13",
                "2.0.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7206601040304c762f5014048fda6fa68ec1ee84",
            "repository": "https://github.com/django/django",
            "timestamp": 1538441042,
            "hunks": 1,
            "message": "Fixed crash building translated docs since Sphinx 1.8.",
            "diff": [
                "diff --git a/docs/_ext/djangodocs.py b/docs/_ext/djangodocs.py",
                "index 19d142b9db..6f8c112539 100644",
                "--- a/docs/_ext/djangodocs.py",
                "+++ b/docs/_ext/djangodocs.py",
                "@@ -212,2 +212,4 @@ class ConsoleNode(nodes.literal_block):",
                "     \"\"\"",
                "+    tagname = 'ConsoleNode'",
                "+",
                "     def __init__(self, litblk_obj):"
            ],
            "changed_files": [
                "docs/_ext/djangodocs.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "31c03486871f654e576326481a13c78206b11251",
            "repository": "https://github.com/django/django",
            "timestamp": 1539091416,
            "hunks": 2,
            "message": "Fixed postgres_tests.test_signals.OIDTests when run in isolation.",
            "diff": [
                "diff --git a/tests/postgres_tests/test_signals.py b/tests/postgres_tests/test_signals.py",
                "index 87d0f8bfa8..3c6502b5e7 100644",
                "--- a/tests/postgres_tests/test_signals.py",
                "+++ b/tests/postgres_tests/test_signals.py",
                "@@ -20,2 +20,3 @@ class OIDTests(PostgreSQLTestCase):",
                "     def test_hstore_cache(self):",
                "+        get_hstore_oids(connection.alias)",
                "         with self.assertNumQueries(0):",
                "@@ -24,2 +25,3 @@ class OIDTests(PostgreSQLTestCase):",
                "     def test_citext_cache(self):",
                "+        get_citext_oids(connection.alias)",
                "         with self.assertNumQueries(0):"
            ],
            "changed_files": [
                "tests/postgres_tests/test_signals.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5cd053600e722467a4ddcd3cb7a75d21af4a9ad0",
            "repository": "https://github.com/django/django",
            "timestamp": 1536671739,
            "hunks": 2,
            "message": "[2.1.x] Fixed env.note_versionchange() deprecation warning in Sphinx 1.8. Backport of a0ef6a0e22038a36c3646ea96f61fdc6d7ab7e5c from master",
            "diff": [
                "diff --git a/docs/_ext/djangodocs.py b/docs/_ext/djangodocs.py",
                "index c4ee09b5cd..b91ccaa37c 100644",
                "--- a/docs/_ext/djangodocs.py",
                "+++ b/docs/_ext/djangodocs.py",
                "@@ -14,2 +14,3 @@ from sphinx.directives import CodeBlock",
                " from sphinx.domains.std import Cmdoption",
                "+from sphinx.errors import ExtensionError",
                " from sphinx.util import logging",
                "@@ -98,3 +99,7 @@ class VersionDirective(Directive):",
                "             self.state.nested_parse(self.content, self.content_offset, node)",
                "-        env.note_versionchange(node['type'], node['version'], node, self.lineno)",
                "+        try:",
                "+            env.get_domain('changeset').note_changeset(node)",
                "+        except ExtensionError:",
                "+            # Sphinx < 1.8: Domain 'changeset' is not registered",
                "+            env.note_versionchange(node['type'], node['version'], node, self.lineno)",
                "         return ret"
            ],
            "changed_files": [
                "docs/_ext/djangodocs.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "f87f9c5f63f779edc74f286ccf88d13db96c44de",
            "repository": "https://github.com/django/django",
            "timestamp": 1536711496,
            "hunks": 7,
            "message": "Simplified introspection methods for PostgreSQL.",
            "diff": [
                "diff --git a/django/db/backends/postgresql/introspection.py b/django/db/backends/postgresql/introspection.py",
                "index 584a2e86b6..afd035df77 100644",
                "--- a/django/db/backends/postgresql/introspection.py",
                "+++ b/django/db/backends/postgresql/introspection.py",
                "@@ -48,6 +48,9 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "                 AND n.nspname NOT IN ('pg_catalog', 'pg_toast')",
                "-                AND pg_catalog.pg_table_is_visible(c.oid)\"\"\")",
                "-        return [TableInfo(row[0], {'r': 't', 'v': 'v'}.get(row[1]))",
                "-                for row in cursor.fetchall()",
                "-                if row[0] not in self.ignored_tables]",
                "+                AND pg_catalog.pg_table_is_visible(c.oid)",
                "+        \"\"\")",
                "+        mapping = {'r': 't', 'v': 'v'}",
                "+        return [",
                "+            TableInfo(row[0], mapping[row[1]])",
                "+            for row in cursor.fetchall() if row[0] not in self.ignored_tables",
                "+        ]",
                "@@ -72,3 +75,2 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "     def get_sequences(self, cursor, table_name, table_fields=()):",
                "-        sequences = []",
                "         cursor.execute(\"\"\"",
                "@@ -77,3 +79,3 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "                 JOIN pg_namespace sn ON sn.oid = s.relnamespace",
                "-                JOIN pg_depend d ON d.refobjid = s.oid AND d.refclassid='pg_class'::regclass",
                "+                JOIN pg_depend d ON d.refobjid = s.oid AND d.refclassid = 'pg_class'::regclass",
                "                 JOIN pg_attrdef ad ON ad.oid = d.objid AND d.classid = 'pg_attrdef'::regclass",
                "@@ -87,5 +89,6 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "         \"\"\", [table_name])",
                "-        for row in cursor.fetchall():",
                "-            sequences.append({'name': row[0], 'table': table_name, 'column': row[1]})",
                "-        return sequences",
                "+        return [",
                "+            {'name': row[0], 'table': table_name, 'column': row[1]}",
                "+            for row in cursor.fetchall()",
                "+        ]",
                "@@ -103,11 +106,7 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "             LEFT JOIN pg_attribute a2 ON c2.oid = a2.attrelid AND a2.attnum = con.confkey[1]",
                "-            WHERE c1.relname = %s",
                "-                AND con.contype = 'f'\"\"\", [table_name])",
                "-        relations = {}",
                "-        for row in cursor.fetchall():",
                "-            relations[row[1]] = (row[2], row[0])",
                "-        return relations",
                "+            WHERE c1.relname = %s AND con.contype = 'f'",
                "+        \"\"\", [table_name])",
                "+        return {row[1]: (row[2], row[0]) for row in cursor.fetchall()}",
                "     def get_key_columns(self, cursor, table_name):",
                "-        key_columns = []",
                "         cursor.execute(\"\"\"",
                "@@ -123,5 +122,5 @@ class DatabaseIntrospection(BaseDatabaseIntrospection):",
                "                     AND ccu.constraint_name = tc.constraint_name",
                "-            WHERE kcu.table_name = %s AND tc.constraint_type = 'FOREIGN KEY'\"\"\", [table_name])",
                "-        key_columns.extend(cursor.fetchall())",
                "-        return key_columns",
                "+            WHERE kcu.table_name = %s AND tc.constraint_type = 'FOREIGN KEY'",
                "+        \"\"\", [table_name])",
                "+        return cursor.fetchall()"
            ],
            "changed_files": [
                "django/db/backends/postgresql/introspection.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1e87c9fe71703fab23039aa63fafe4f6aac98bbc",
            "repository": "https://github.com/django/django",
            "timestamp": 1539025562,
            "hunks": 2,
            "message": "Replaced kwargs.pop() with keyword-only arguments.",
            "diff": [
                "diff --git a/django/core/management/base.py b/django/core/management/base.py",
                "index db131ed757..1f2d59b096 100644",
                "--- a/django/core/management/base.py",
                "+++ b/django/core/management/base.py",
                "@@ -44,5 +44,5 @@ class CommandParser(ArgumentParser):",
                "     \"\"\"",
                "-    def __init__(self, **kwargs):",
                "-        self.missing_args_message = kwargs.pop('missing_args_message', None)",
                "-        self.called_from_command_line = kwargs.pop('called_from_command_line', None)",
                "+    def __init__(self, *, missing_args_message=None, called_from_command_line=None, **kwargs):",
                "+        self.missing_args_message = missing_args_message",
                "+        self.called_from_command_line = called_from_command_line",
                "         super().__init__(**kwargs)",
                "diff --git a/django/db/models/query_utils.py b/django/db/models/query_utils.py",
                "index ce311639da..f6bc0bd030 100644",
                "--- a/django/db/models/query_utils.py",
                "+++ b/django/db/models/query_utils.py",
                "@@ -57,6 +57,4 @@ class Q(tree.Node):",
                "-    def __init__(self, *args, **kwargs):",
                "-        connector = kwargs.pop('_connector', None)",
                "-        negated = kwargs.pop('_negated', False)",
                "-        super().__init__(children=[*args, *sorted(kwargs.items())], connector=connector, negated=negated)",
                "+    def __init__(self, *args, _connector=None, _negated=False, **kwargs):",
                "+        super().__init__(children=[*args, *sorted(kwargs.items())], connector=_connector, negated=_negated)"
            ],
            "changed_files": [
                "django/core/management/base.py",
                "django/db/models/query_utils.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.2",
                "2.2.1",
                "2.2.10",
                "2.2.11",
                "2.2.12",
                "2.2.13",
                "2.2.14",
                "2.2.15",
                "2.2.16",
                "2.2.17",
                "2.2.18",
                "2.2.19",
                "2.2.2",
                "2.2.20",
                "2.2.21",
                "2.2.22",
                "2.2.23",
                "2.2.24",
                "2.2.25",
                "2.2.26",
                "2.2.27",
                "2.2.28",
                "2.2.3",
                "2.2.4",
                "2.2.5",
                "2.2.6",
                "2.2.7",
                "2.2.8",
                "2.2.9",
                "2.2a1",
                "2.2b1",
                "2.2rc1",
                "3.0",
                "3.0.1",
                "3.0.10",
                "3.0.11",
                "3.0.12",
                "3.0.13",
                "3.0.14",
                "3.0.2",
                "3.0.3",
                "3.0.4",
                "3.0.5",
                "3.0.6",
                "3.0.7",
                "3.0.8",
                "3.0.9",
                "3.0a1",
                "3.0b1",
                "3.0rc1",
                "3.1",
                "3.1.1",
                "3.1.10",
                "3.1.11",
                "3.1.12",
                "3.1.13",
                "3.1.14",
                "3.1.2",
                "3.1.3",
                "3.1.4",
                "3.1.5",
                "3.1.6",
                "3.1.7",
                "3.1.8",
                "3.1.9",
                "3.1a1",
                "3.1b1",
                "3.1rc1",
                "3.2",
                "3.2.1",
                "3.2.10",
                "3.2.11",
                "3.2.12",
                "3.2.13",
                "3.2.14",
                "3.2.15",
                "3.2.16",
                "3.2.17",
                "3.2.18",
                "3.2.19",
                "3.2.2",
                "3.2.20",
                "3.2.21",
                "3.2.22",
                "3.2.23",
                "3.2.24",
                "3.2.25",
                "3.2.3",
                "3.2.4",
                "3.2.5",
                "3.2.6",
                "3.2.7",
                "3.2.8",
                "3.2.9",
                "3.2a1",
                "3.2b1",
                "3.2rc1",
                "4.0",
                "4.0.1",
                "4.0.10",
                "4.0.2",
                "4.0.3",
                "4.0.4",
                "4.0.5",
                "4.0.6",
                "4.0.7",
                "4.0.8",
                "4.0.9",
                "4.0a1",
                "4.0b1",
                "4.0rc1",
                "4.1",
                "4.1.1",
                "4.1.10",
                "4.1.11",
                "4.1.12",
                "4.1.13",
                "4.1.2",
                "4.1.3",
                "4.1.4",
                "4.1.5",
                "4.1.6",
                "4.1.7",
                "4.1.8",
                "4.1.9",
                "4.1a1",
                "4.1b1",
                "4.1rc1",
                "4.2",
                "4.2.1",
                "4.2.10",
                "4.2.11",
                "4.2.12",
                "4.2.13",
                "4.2.14",
                "4.2.2",
                "4.2.3",
                "4.2.4",
                "4.2.5",
                "4.2.6",
                "4.2.7",
                "4.2.8",
                "4.2.9",
                "4.2a1",
                "4.2b1",
                "4.2rc1",
                "5.0",
                "5.0.1",
                "5.0.2",
                "5.0.3",
                "5.0.4",
                "5.0.5",
                "5.0.6",
                "5.0.7",
                "5.0a1",
                "5.0b1",
                "5.0rc1",
                "5.1a1",
                "5.1b1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "780190f6d95cfb498e6a3969ffc04b14d2c8750f",
            "repository": "https://github.com/django/django",
            "timestamp": 1536610101,
            "hunks": 4,
            "message": "[2.1.x] Removed usage of deprecated sphinx APIs. Backport of cc4bb110d31f18d2931fd79d792d3ac09cce19e5 from master",
            "diff": [
                "diff --git a/docs/_ext/djangodocs.py b/docs/_ext/djangodocs.py",
                "index 30d3741b89..c4ee09b5cd 100644",
                "--- a/docs/_ext/djangodocs.py",
                "+++ b/docs/_ext/djangodocs.py",
                "@@ -14,2 +14,3 @@ from sphinx.directives import CodeBlock",
                " from sphinx.domains.std import Cmdoption",
                "+from sphinx.util import logging",
                " from sphinx.util.console import bold",
                "@@ -17,2 +18,3 @@ from sphinx.writers.html import HTMLTranslator",
                "+logger = logging.getLogger(__name__)",
                " # RE for option descriptions without a '--' prefix",
                "@@ -43,3 +45,3 @@ def setup(app):",
                "     )",
                "-    app.add_description_unit(",
                "+    app.add_object_type(",
                "         directivename=\"django-admin\",",
                "@@ -181,3 +183,3 @@ class DjangoStandaloneHTMLBuilder(StandaloneHTMLBuilder):",
                "         super().finish()",
                "-        self.info(bold(\"writing templatebuiltins.js...\"))",
                "+        logger.info(bold(\"writing templatebuiltins.js...\"))",
                "         xrefs = self.env.domaindata[\"std\"][\"objects\"]"
            ],
            "changed_files": [
                "docs/_ext/djangodocs.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.2",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "fd3ad043a13ba2dcff89b954f2a3cde6514b08ad",
            "repository": "https://github.com/django/django",
            "timestamp": 1533049201,
            "hunks": 20,
            "message": "[2.0.x] Added words to docs/spelling_wordlist for Ubuntu 18.04. Backport of 8edb27b6c6d5d9e4f3ad95a91254588616854d16 from master",
            "diff": [
                "diff --git a/docs/spelling_wordlist b/docs/spelling_wordlist",
                "index 553a800626..7efaf43313 100644",
                "--- a/docs/spelling_wordlist",
                "+++ b/docs/spelling_wordlist",
                "@@ -71,2 +71,3 @@ Bokm\u00c3\u00a5l",
                " bolded",
                "+Bonham",
                " bookmarklet",
                "@@ -109,2 +110,3 @@ codebase",
                " codec",
                "+codenamed",
                " coercible",
                "@@ -121,2 +123,3 @@ contenttypes",
                " contrib",
                "+covariance",
                " coveredby",
                "@@ -159,2 +162,4 @@ deduplicates",
                " deepcopy",
                "+deferrable",
                "+deprecations",
                " deserialization",
                "@@ -164,2 +169,3 @@ deserializer",
                " deserializing",
                "+deterministically",
                " Deutsch",
                "@@ -305,2 +311,3 @@ inbox",
                " incrementing",
                "+indexable",
                " indices",
                "@@ -334,2 +341,3 @@ iterable",
                " iterables",
                "+iteratively",
                " itunes",
                "@@ -362,2 +370,3 @@ linestring",
                " linework",
                "+linter",
                " Livni",
                "@@ -377,2 +386,3 @@ loopback",
                " lorem",
                "+lossy",
                " lowercased",
                "@@ -426,2 +436,3 @@ multithreaded",
                " multithreading",
                "+multivalued",
                " Mumbai",
                "@@ -448,2 +459,3 @@ noding",
                " nonspatial",
                "+nows",
                " nullable",
                "@@ -468,2 +480,5 @@ outfile",
                " paginator",
                "+parallelization",
                "+parallelized",
                "+parameterization",
                " parameterized",
                "@@ -471,2 +486,3 @@ params",
                " parens",
                "+parsers",
                " Pawe\u00c5\u0082",
                "@@ -521,2 +537,3 @@ prepopulates",
                " preprocess",
                "+preprocessed",
                " preprocesses",
                "@@ -546,2 +563,3 @@ quoteless",
                " Radziej",
                "+rasters",
                " rc",
                "@@ -684,2 +702,3 @@ submodules",
                " subpath",
                "+subprocesses",
                " subqueries",
                "@@ -746,2 +765,4 @@ triagers",
                " triaging",
                "+trigram",
                "+trigrams",
                " truncatechars",
                "@@ -757,2 +778,3 @@ umask",
                " Unaccent",
                "+unannotated",
                " unapplied",
                "@@ -784,2 +806,3 @@ unlocalize",
                " unlocalized",
                "+unmaintained",
                " unmanaged",
                "@@ -803,2 +826,3 @@ untrusted",
                " unvalidated",
                "+uppercased",
                " uptime"
            ],
            "changed_files": [
                "docs/spelling_wordlist"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.0.10",
                "2.0.11",
                "2.0.12",
                "2.0.13",
                "2.0.9"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d95d7d68969d1dc805829f4ffa5e7050e0ab06c3",
            "repository": "https://github.com/django/django",
            "timestamp": 1538399776,
            "hunks": 2,
            "message": "[2.1.x] Added tests for using bytearray with BinaryField and corrected docs. Backport of b3b47bf5156d400595363fa0029e51ce3f974ff0 from master.",
            "diff": [
                "diff --git a/tests/model_fields/test_binaryfield.py b/tests/model_fields/test_binaryfield.py",
                "index 9865f131d3..d9caf41112 100644",
                "--- a/tests/model_fields/test_binaryfield.py",
                "+++ b/tests/model_fields/test_binaryfield.py",
                "@@ -11,3 +11,3 @@ class BinaryFieldTests(TestCase):",
                "     def test_set_and_retrieve(self):",
                "-        data_set = (self.binary_data, memoryview(self.binary_data))",
                "+        data_set = (self.binary_data, bytearray(self.binary_data), memoryview(self.binary_data))",
                "         for bdata in data_set:",
                "@@ -42,2 +42,7 @@ class BinaryFieldTests(TestCase):",
                "+    def test_filter_bytearray(self):",
                "+        dm = DataModel.objects.create(data=self.binary_data)",
                "+        DataModel.objects.create(data=b'\\xef\\xbb\\xbf')",
                "+        self.assertSequenceEqual(DataModel.objects.filter(data=bytearray(self.binary_data)), [dm])",
                "+",
                "     def test_filter_memoryview(self):"
            ],
            "changed_files": [
                "tests/model_fields/test_binaryfield.py"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "2.1.10",
                "2.1.11",
                "2.1.12",
                "2.1.13",
                "2.1.14",
                "2.1.15",
                "2.1.3",
                "2.1.4",
                "2.1.5",
                "2.1.6",
                "2.1.7",
                "2.1.8",
                "2.1.9"
            ],
            "matched_rules": []
        }
    ]
}
