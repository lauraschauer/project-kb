{
    "advisory_record": {
        "cve_id": "CVE-2018-3740",
        "description": "A specially crafted HTML fragment can cause Sanitize gem for Ruby to allow non-whitelisted attributes to be used on a whitelisted HTML element.",
        "reserved_timestamp": 1514419200,
        "published_timestamp": 1522436400,
        "updated_timestamp": 1545994621,
        "repository_url": null,
        "references": {
            "": 208,
            "https://github.com/rgrove/sanitize/issues/176": 11,
            "commit::01629a162e448a83d901456d0ba8b65f3b03d46e": 7,
            "https://github.com/advisories/GHSA-7f42-p84j-f58p": 6,
            "https://docs.github.com/search-github/github-code-search/understanding-github-code-search-syntax": 4,
            "https://www.debian.org/security/2018/dsa-4358": 2,
            "https://about.gitlab.com/2018/06/25/security-release-gitlab-11-dot-0-dot-1-released/": 2,
            "https://github.com/rgrove/sanitize/compare/v2.1.0...v2.1.1": 2,
            "http://seclists.org/oss-sec/2018/q1/254": 2,
            "https://github.com/features/actions": 2,
            "https://github.com/features/packages": 2,
            "https://github.com/features/security": 2,
            "https://github.com/features/codespaces": 2,
            "https://github.com/features/copilot": 2,
            "https://github.com/features/code-review": 2,
            "https://github.com/features/issues": 2,
            "https://github.com/features/discussions": 2,
            "https://github.com/features": 2,
            "https://docs.github.com": 2,
            "https://skills.github.com": 2,
            "https://github.blog": 2,
            "https://github.com/enterprise": 2,
            "https://github.com/team": 2,
            "https://github.com/enterprise/startups": 2,
            "https://github.com/solutions/industries/healthcare": 2,
            "https://github.com/solutions/industries/financial-services": 2,
            "https://github.com/solutions/industries/manufacturing": 2,
            "https://github.com/solutions/ci-cd": 2,
            "https://github.com/solutions/devops": 2,
            "https://github.com/solutions/devsecops": 2,
            "https://resources.github.com/learn/pathways": 2,
            "https://resources.github.com": 2,
            "https://github.com/customer-stories": 2,
            "https://partner.github.com": 2,
            "https://github.com/readme": 2,
            "https://github.com/topics": 2,
            "https://github.com/trending": 2,
            "https://github.com/collections": 2,
            "https://github.com/enterprise/advanced-security": 2,
            "https://github.com/pricing": 2,
            "https://github.com/rgrove": 2,
            "https://github.com/rgrove/sanitize/issues/176#issuecomment-425751036": 2,
            "https://github.com": 2,
            "https://docs.github.com/site-policy/github-terms/github-terms-of-service": 2,
            "https://docs.github.com/site-policy/privacy-policies/github-privacy-statement": 2,
            "https://github.com/security": 2,
            "https://www.githubstatus.com/": 2,
            "https://docs.github.com/": 2,
            "https://support.github.com?tags=dotcom-footer": 2,
            "https://docs.github.com/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-comparing-branches-in-pull-requests#three-dot-and-two-dot-git-diff-comparisons": 2,
            "https://docs.github.com/terms": 1,
            "https://docs.github.com/privacy": 1,
            "https://bugzilla.gnome.org/show_bug.cgi?id=769760": 1,
            "https://github.com/flavorjones": 1,
            "https://github.com/gollum/gollum-lib/issues/295": 1,
            "https://github.com/dometto": 1,
            "https://rubygems.org/gems/sanitize/versions/2.1.1": 1,
            "https://github.com/rgrove/sanitize/compare/rgrove:76ee6e4...rgrove:8dc3dca": 1
        },
        "affected_products": [
            "HTML",
            "sanitize (ruby gem)",
            "Sanitize",
            "Ruby"
        ],
        "versions": {
            "status": "affected",
            "version": "< 4.6.3"
        },
        "files": [
            "non-whitelisted",
            "HTML"
        ],
        "keywords": [
            "attribute",
            "html",
            "ruby",
            "allow",
            "sanitize",
            "fragment",
            "craft",
            "element",
            "cause"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "01629a162e448a83d901456d0ba8b65f3b03d46e",
            "repository": "https://github.com/rgrove/sanitize",
            "timestamp": 1521512279,
            "hunks": 8,
            "message": "fix: Prevent code injection due to improper escaping in libxml2 >= 2.9.2 When Sanitize <= 4.6.2 is used in combination with libxml2 >= 2.9.2, a specially crafted HTML fragment can cause libxml2 to generate improperly escaped output, allowing non-whitelisted attributes to be used on whitelisted elements. Sanitize now performs additional escaping on affected attributes to prevent this. Many thanks to the Shopify Application Security Team for responsibly reporting this issue. Fixes #176",
            "diff": [
                "diff --git a/lib/sanitize/transformers/clean_element.rb b/lib/sanitize/transformers/clean_element.rb",
                "index 3431be4..fbbe9c8 100644",
                "--- a/lib/sanitize/transformers/clean_element.rb",
                "+++ b/lib/sanitize/transformers/clean_element.rb",
                "@@ -20,2 +20,27 @@ class Sanitize; module Transformers; class CleanElement",
                "+  # Attributes that need additional escaping on `<a>` elements due to unsafe",
                "+  # libxml2 behavior.",
                "+  UNSAFE_LIBXML_ATTRS_A = Set.new(%w[",
                "+    name",
                "+  ])",
                "+",
                "+  # Attributes that need additional escaping on all elements due to unsafe",
                "+  # libxml2 behavior.",
                "+  UNSAFE_LIBXML_ATTRS_GLOBAL = Set.new(%w[",
                "+    action",
                "+    href",
                "+    src",
                "+  ])",
                "+",
                "+  # Mapping of original characters to escape sequences for characters that",
                "+  # should be escaped in attributes affected by unsafe libxml2 behavior.",
                "+  UNSAFE_LIBXML_ESCAPE_CHARS = {",
                "+    ' ' => '%20',",
                "+    '\"' => '%22'",
                "+  }",
                "+",
                "+  # Regex that matches any single character that needs to be escaped in",
                "+  # attributes affected by unsafe libxml2 behavior.",
                "+  UNSAFE_LIBXML_ESCAPE_REGEX = /[ \"]/",
                "+",
                "   def initialize(config)",
                "@@ -94,27 +119,57 @@ class Sanitize; module Transformers; class CleanElement",
                "-        if attr_whitelist.include?(attr_name)",
                "-          # The attribute is whitelisted.",
                "+        unless attr_whitelist.include?(attr_name)",
                "+          # The attribute isn't whitelisted.",
                "+",
                "+          if allow_data_attributes && attr_name.start_with?('data-')",
                "+            # Arbitrary data attributes are allowed. If this is a data",
                "+            # attribute, continue.",
                "+            next if attr_name =~ REGEX_DATA_ATTR",
                "+          end",
                "+",
                "+          # Either the attribute isn't a data attribute or arbitrary data",
                "+          # attributes aren't allowed. Remove the attribute.",
                "+          attr.unlink",
                "+          next",
                "+        end",
                "+",
                "+        # The attribute is whitelisted.",
                "-          # Remove any attributes that use unacceptable protocols.",
                "-          if @protocols.include?(name) && @protocols[name].include?(attr_name)",
                "-            attr_protocols = @protocols[name][attr_name]",
                "+        # Remove any attributes that use unacceptable protocols.",
                "+        if @protocols.include?(name) && @protocols[name].include?(attr_name)",
                "+          attr_protocols = @protocols[name][attr_name]",
                "-            if attr.value =~ REGEX_PROTOCOL",
                "-              attr.unlink unless attr_protocols.include?($1.downcase)",
                "-            else",
                "-              attr.unlink unless attr_protocols.include?(:relative)",
                "+          if attr.value =~ REGEX_PROTOCOL",
                "+            unless attr_protocols.include?($1.downcase)",
                "+              attr.unlink",
                "+              next",
                "             end",
                "-          end",
                "-        else",
                "-          # The attribute isn't whitelisted.",
                "-          if allow_data_attributes && attr_name.start_with?('data-')",
                "-            # Arbitrary data attributes are allowed. Verify that the attribute",
                "-            # is a valid data attribute.",
                "-            attr.unlink unless attr_name =~ REGEX_DATA_ATTR",
                "           else",
                "-            # Either the attribute isn't a data attribute, or arbitrary data",
                "-            # attributes aren't allowed. Remove the attribute.",
                "-            attr.unlink",
                "+            unless attr_protocols.include?(:relative)",
                "+              attr.unlink",
                "+              next",
                "+            end",
                "           end",
                "+",
                "+          # Leading and trailing whitespace around URLs is ignored at parse",
                "+          # time. Stripping it here prevents it from being escaped by the",
                "+          # libxml2 workaround below.",
                "+          attr.value = attr.value.strip",
                "+        end",
                "+",
                "+        # libxml2 >= 2.9.2 doesn't escape comments within some attributes, in an",
                "+        # attempt to preserve server-side includes. This can result in XSS since",
                "+        # an unescaped double quote can allow an attacker to inject a",
                "+        # non-whitelisted attribute.",
                "+        #",
                "+        # Sanitize works around this by implementing its own escaping for",
                "+        # affected attributes, some of which can exist on any element and some",
                "+        # of which can only exist on `<a>` elements.",
                "+        #",
                "+        # The relevant libxml2 code is here:",
                "+        # <https://github.com/GNOME/libxml2/commit/960f0e275616cadc29671a218d7fb9b69eb35588>",
                "+        if UNSAFE_LIBXML_ATTRS_GLOBAL.include?(attr_name) ||",
                "+            (name == 'a' && UNSAFE_LIBXML_ATTRS_A.include?(attr_name))",
                "+",
                "+          attr.value = attr.value.gsub(UNSAFE_LIBXML_ESCAPE_REGEX, UNSAFE_LIBXML_ESCAPE_CHARS)",
                "         end",
                "diff --git a/test/test_clean_element.rb b/test/test_clean_element.rb",
                "index 562464c..53d2454 100644",
                "--- a/test/test_clean_element.rb",
                "+++ b/test/test_clean_element.rb",
                "@@ -236,3 +236,3 @@ describe 'Sanitize::Transformers::CleanElement' do",
                "       @s.fragment('foo <a href>foo</a> bar')",
                "-        .must_equal 'foo <a href=\"\" rel=\"nofollow\">foo</a> bar'",
                "+        .must_equal 'foo <a href rel=\"nofollow\">foo</a> bar'",
                "     end",
                "@@ -302,2 +302,12 @@ describe 'Sanitize::Transformers::CleanElement' do",
                "+    it \"should not allow relative URLs when relative URLs aren't whitelisted\" do",
                "+      input = '<a href=\"/foo/bar\">Link</a>'",
                "+",
                "+      Sanitize.fragment(input,",
                "+        :elements   => ['a'],",
                "+        :attributes => {'a' => ['href']},",
                "+        :protocols  => {'a' => {'href' => ['http']}}",
                "+      ).must_equal '<a>Link</a>'",
                "+    end",
                "+",
                "     it 'should allow relative URLs containing colons when the colon is not in the first path segment' do",
                "diff --git a/test/test_malicious_html.rb b/test/test_malicious_html.rb",
                "index a91f7c1..5f994c6 100644",
                "--- a/test/test_malicious_html.rb",
                "+++ b/test/test_malicious_html.rb",
                "@@ -127,2 +127,66 @@ describe 'Malicious HTML' do",
                "   end",
                "+",
                "+  # libxml2 >= 2.9.2 doesn't escape comments within some attributes, in an",
                "+  # attempt to preserve server-side includes. This can result in XSS since an",
                "+  # unescaped double quote can allow an attacker to inject a non-whitelisted",
                "+  # attribute. Sanitize works around this by implementing its own escaping for",
                "+  # affected attributes.",
                "+  #",
                "+  # The relevant libxml2 code is here:",
                "+  # <https://github.com/GNOME/libxml2/commit/960f0e275616cadc29671a218d7fb9b69eb35588>",
                "+  describe 'unsafe libxml2 server-side includes in attributes' do",
                "+    tag_configs = [",
                "+      {",
                "+        tag_name: 'a',",
                "+        escaped_attrs: %w[ action href src name ],",
                "+        unescaped_attrs: []",
                "+      },",
                "+",
                "+      {",
                "+        tag_name: 'div',",
                "+        escaped_attrs: %w[ action href src ],",
                "+        unescaped_attrs: %w[ name ]",
                "+      }",
                "+    ]",
                "+",
                "+    before do",
                "+      @s = Sanitize.new({",
                "+        elements: %w[ a div ],",
                "+",
                "+        attributes: {",
                "+          all: %w[ action href src name ]",
                "+        }",
                "+      })",
                "+    end",
                "+",
                "+    tag_configs.each do |tag_config|",
                "+      tag_name = tag_config[:tag_name]",
                "+",
                "+      tag_config[:escaped_attrs].each do |attr_name|",
                "+        input = %[<#{tag_name} #{attr_name}='examp<!--\" onmouseover=alert(1)>-->le.com'>foo</#{tag_name}>]",
                "+",
                "+        it 'should escape unsafe characters in attributes' do",
                "+          @s.fragment(input).must_equal(%[<#{tag_name} #{attr_name}=\"examp<!--%22%20onmouseover=alert(1)>-->le.com\">foo</#{tag_name}>])",
                "+        end",
                "+",
                "+        it 'should round-trip to the same output' do",
                "+          output = @s.fragment(input)",
                "+          @s.fragment(output).must_equal(output)",
                "+        end",
                "+      end",
                "+",
                "+      tag_config[:unescaped_attrs].each do |attr_name|",
                "+        input = %[<#{tag_name} #{attr_name}='examp<!--\" onmouseover=alert(1)>-->le.com'>foo</#{tag_name}>]",
                "+",
                "+        it 'should not escape characters unnecessarily' do",
                "+          @s.fragment(input).must_equal(input)",
                "+        end",
                "+",
                "+        it 'should round-trip to the same output' do",
                "+          output = @s.fragment(input)",
                "+          @s.fragment(output).must_equal(output)",
                "+        end",
                "+      end",
                "+    end",
                "+  end",
                " end"
            ],
            "changed_files": [
                "lib/sanitize/transformers/clean_element.rb",
                "test/test_clean_element.rb",
                "test/test_malicious_html.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "176": "Bump sanitize from 4.6.0 to 4.6.3 afomera/athensmc#160 Bump sanitize from 4.6.0 to 4.6.4 afomera/athensmc#162 sanitize lib needs update (CVE-2018-3740) gollum/gollum-lib#295 Bump sanitize gem alphagov/govspeak#127 Upgrade insecure gems PRX/cms.prx.org#420 Upgrade rails, nokogiri, loofah, sanitize PRX/feeder.prx.org#285 Upgrade rails, loofah, sanitize, nokogiri PRX/crier.prx.org#58 CVE-2018-8048 - Loofah XSS Vulnerability flavorjones/loofah#144 Upgrade Sanitize to 4.6.4 to fix CVE-2018-3740 gollum/gollum-lib#296 Update dependencies dmarcotte/github-markdown-preview#47 update ruby-sanitize (fixes CVE-2018-3740) gjtorikian/html-pipeline#297 Investigate libxml2 patches in USN-5548-1 sparklemotion/nokogiri#2619"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.6.3",
                "v4.6.4",
                "v4.6.5",
                "v4.6.6",
                "v5.0.0",
                "v5.1.0",
                "v5.2.0",
                "v5.2.1",
                "v5.2.2",
                "v5.2.3",
                "v6.0.0",
                "v6.0.1",
                "v6.0.2",
                "v6.1.0",
                "v6.1.1"
            ],
            "matched_rules": [
                {
                    "id": "XREF_GH",
                    "message": "The commit and the advisory (including referenced pages) mention the same github issue: 176",
                    "relevance": 32
                },
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 7 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: non-whitelisted, HTML",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: non-whitelisted, HTML",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: test/test_malicious_html.rb",
                    "relevance": 8
                },
                {
                    "id": "SEC_KEYWORDS_IN_LINKED_GH",
                    "message": "The github issue 176 contains some security-related terms: vulnerability, sanitize, insecure, xss",
                    "relevance": 4
                },
                {
                    "id": "SEC_KEYWORDS_IN_MESSAGE",
                    "message": "The commit message contains some security-related keywords: sanitize, security, injection",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: attribute, html, allow, fragment, craft, element, cause",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: element, html",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 176",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "caa558a25886638427d3005030260af8518612ea",
            "repository": "https://github.com/rgrove/sanitize",
            "timestamp": 1521483497,
            "hunks": 5,
            "message": "Optimize memory usage",
            "diff": [
                "diff --git a/lib/sanitize.rb b/lib/sanitize.rb",
                "index 4dc1174..935fcaa 100644",
                "--- a/lib/sanitize.rb",
                "+++ b/lib/sanitize.rb",
                "@@ -200,3 +200,3 @@ class Sanitize",
                "         node.xpath('/html/head/meta[@http-equiv]').none? do |meta|",
                "-          meta['http-equiv'].downcase == 'content-type'",
                "+          meta['http-equiv'].casecmp('content-type').zero?",
                "         end",
                "@@ -219,2 +219,4 @@ class Sanitize",
                "   def transform_node!(node, node_whitelist)",
                "+    node_name = node.name.downcase",
                "+",
                "     @transformers.each do |transformer|",
                "@@ -224,3 +226,3 @@ class Sanitize",
                "         :node           => node,",
                "-        :node_name      => node.name.downcase,",
                "+        :node_name      => node_name,",
                "         :node_whitelist => node_whitelist",
                "diff --git a/lib/sanitize/transformers/clean_element.rb b/lib/sanitize/transformers/clean_element.rb",
                "index f883d52..3431be4 100644",
                "--- a/lib/sanitize/transformers/clean_element.rb",
                "+++ b/lib/sanitize/transformers/clean_element.rb",
                "@@ -101,3 +101,3 @@ class Sanitize; module Transformers; class CleanElement",
                "-            if attr.value.to_s.downcase =~ REGEX_PROTOCOL",
                "+            if attr.value =~ REGEX_PROTOCOL",
                "               attr.unlink unless attr_protocols.include?($1.downcase)",
                "diff --git a/test/test_clean_element.rb b/test/test_clean_element.rb",
                "index 6355d78..562464c 100644",
                "--- a/test/test_clean_element.rb",
                "+++ b/test/test_clean_element.rb",
                "@@ -404,4 +404,21 @@ describe 'Sanitize::Transformers::CleanElement' do",
                "     end",
                "-  end",
                "+    it 'handles protocols correctly regardless of case' do",
                "+      input = '<a href=\"hTTpS://foo.com/\">Text</a>'",
                "+",
                "+      Sanitize.fragment(input, {",
                "+        :elements   => ['a'],",
                "+        :attributes => {'a' => ['href']},",
                "+        :protocols  => {'a' => {'href' => ['https']}}",
                "+      }).must_equal input",
                "+",
                "+      input = '<a href=\"mailto:someone@example.com?Subject=Hello\">Text</a>'",
                "+",
                "+      Sanitize.fragment(input, {",
                "+        :elements   => ['a'],",
                "+        :attributes => {'a' => ['href']},",
                "+        :protocols  => {'a' => {'href' => ['https']}}",
                "+      }).must_equal \"<a>Text</a>\"",
                "+    end",
                "+  end",
                " end"
            ],
            "changed_files": [
                "lib/sanitize.rb",
                "lib/sanitize/transformers/clean_element.rb",
                "test/test_clean_element.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.6.2",
                "v4.6.3",
                "v4.6.4",
                "v4.6.5",
                "v4.6.6",
                "v5.0.0",
                "v5.1.0",
                "v5.2.0",
                "v5.2.1",
                "v5.2.2",
                "v5.2.3",
                "v6.0.0",
                "v6.0.1",
                "v6.0.2",
                "v6.1.0",
                "v6.1.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: element",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "823a3f6037bb0e694bf7800cf36074a82ff7fb07",
            "repository": "https://github.com/rgrove/sanitize",
            "timestamp": 1521152057,
            "hunks": 6,
            "message": "support ruby 2.4+ frozen string literals",
            "diff": [
                "diff --git a/.travis.yml b/.travis.yml",
                "index a54afff..f6d3670 100644",
                "--- a/.travis.yml",
                "+++ b/.travis.yml",
                "@@ -7,6 +7,13 @@ before_install:",
                "-rvm:",
                "-  - 1.9.3",
                "-  - 2.0.0",
                "-  - 2.3.1",
                "-  - ruby-head",
                "+matrix:",
                "+  include:",
                "+    - os: linux",
                "+      rvm: 1.9.3",
                "+    - os: linux",
                "+      rvm: 2.0.0",
                "+    - os: linux",
                "+      rvm: 2.3.0",
                "+    - os: linux",
                "+      rvm: ruby-head",
                "+      env:",
                "+        - TEST_RUBYOPT_FROZEN_STRING_LITERAL=1",
                "diff --git a/Rakefile b/Rakefile",
                "index fd0ea81..d350268 100644",
                "--- a/Rakefile",
                "+++ b/Rakefile",
                "@@ -10,2 +10,7 @@ Rake::TestTask.new",
                "+if ENV['TEST_RUBYOPT_FROZEN_STRING_LITERAL'] # see .travis.yml",
                "+  ENV['RUBYOPT'] = \"--enable-frozen-string-literal --debug=frozen-string-literal\"",
                "+  puts \"enabling frozen string literals\"",
                "+end",
                "+",
                " task :default => [:test]",
                "diff --git a/lib/sanitize/css.rb b/lib/sanitize/css.rb",
                "index 30db58c..51c3824 100644",
                "--- a/lib/sanitize/css.rb",
                "+++ b/lib/sanitize/css.rb",
                "@@ -257,3 +257,3 @@ class Sanitize; class CSS",
                "     nodes          = prop[:children].dup",
                "-    combined_value = ''",
                "+    combined_value = String.new",
                "diff --git a/test/test_sanitize_css.rb b/test/test_sanitize_css.rb",
                "index 03db975..6627526 100644",
                "--- a/test/test_sanitize_css.rb",
                "+++ b/test/test_sanitize_css.rb",
                "@@ -183,3 +183,3 @@ describe 'Sanitize::CSS' do",
                "       it 'should sanitize a Crass CSS parse tree' do",
                "-        tree = Crass.parse(\"@import url(foo.css);\\n\" <<",
                "+        tree = Crass.parse(String.new(\"@import url(foo.css);\\n\") <<",
                "           \".foo { background: #fff; font: 16pt 'Comic Sans MS'; }\\n\" <<",
                "@@ -189,3 +189,3 @@ describe 'Sanitize::CSS' do",
                "-        Crass::Parser.stringify(tree).must_equal \"\\n\" <<",
                "+        Crass::Parser.stringify(tree).must_equal String.new(\"\\n\") <<",
                "             \".foo { background: #fff;  }\\n\" <<",
                "diff --git a/test/test_unicode.rb b/test/test_unicode.rb",
                "index 4a98231..0e3cd84 100644",
                "--- a/test/test_unicode.rb",
                "+++ b/test/test_unicode.rb",
                "@@ -86,3 +86,3 @@ describe 'Unicode' do",
                "     it 'should strip language tag code point characters' do",
                "-      str = 'a'",
                "+      str = String.new 'a'",
                "       (0xE0000..0xE007F).each {|n| str << [n].pack('U') }"
            ],
            "changed_files": [
                ".travis.yml",
                "Rakefile",
                "lib/sanitize/css.rb",
                "test/test_sanitize_css.rb",
                "test/test_unicode.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.6.1",
                "v4.6.2",
                "v4.6.3",
                "v4.6.4",
                "v4.6.5",
                "v4.6.6",
                "v5.0.0",
                "v5.1.0",
                "v5.2.0",
                "v5.2.1",
                "v5.2.2",
                "v5.2.3",
                "v6.0.0",
                "v6.0.1",
                "v6.0.2",
                "v6.1.0",
                "v6.1.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: ruby",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "71d84a880d4d9668968a6de5fb8d73d9589410e5",
            "repository": "https://github.com/rgrove/sanitize",
            "timestamp": 1521549236,
            "hunks": 3,
            "message": "Remove optimization to get back the previous behaviour of transformers Before [1] transformers could modify the DOM, and transformers or filtering that ran after would use the modified DOM. The change in [1] meant that the node name was cached between the running of all transformers so even if one transformer modified it subsequent transformers would be given the previous node name. The added test case fails without the code change because the 'strong' tag is stripped out after the transformer is run since it thinks it is still a 'b'. [1] - https://github.com/rgrove/sanitize/commit/caa558a25886638427d3005030260af8518612ea",
            "diff": [
                "diff --git a/lib/sanitize.rb b/lib/sanitize.rb",
                "index 935fcaa..a256b3c 100644",
                "--- a/lib/sanitize.rb",
                "+++ b/lib/sanitize.rb",
                "@@ -219,4 +219,2 @@ class Sanitize",
                "   def transform_node!(node, node_whitelist)",
                "-    node_name = node.name.downcase",
                "-",
                "     @transformers.each do |transformer|",
                "@@ -226,3 +224,3 @@ class Sanitize",
                "         :node           => node,",
                "-        :node_name      => node_name,",
                "+        :node_name      => node.name.downcase,",
                "         :node_whitelist => node_whitelist",
                "diff --git a/test/test_transformers.rb b/test/test_transformers.rb",
                "index a0779c6..cb751db 100644",
                "--- a/test/test_transformers.rb",
                "+++ b/test/test_transformers.rb",
                "@@ -205,2 +205,20 @@ describe 'Transformers' do",
                "   end",
                "+",
                "+  describe 'DOM modification transformer' do",
                "+    b_to_strong_tag_transformer = lambda do |env|",
                "+      node      = env[:node]",
                "+      node_name = env[:node_name]",
                "+",
                "+      if node_name == 'b'",
                "+        node.name = 'strong'",
                "+      end",
                "+    end",
                "+",
                "+    it 'should allow the <b> tag to be changed to a <strong> tag' do",
                "+      input = '<b>text</b>'",
                "+",
                "+      Sanitize.fragment(input, :elements => ['strong'], :transformers => b_to_strong_tag_transformer)",
                "+        .must_equal '<strong>text</strong>'",
                "+    end",
                "+  end",
                " end"
            ],
            "changed_files": [
                "lib/sanitize.rb",
                "test/test_transformers.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.6.4",
                "v4.6.5",
                "v4.6.6",
                "v5.0.0",
                "v5.1.0",
                "v5.2.0",
                "v5.2.1",
                "v5.2.2",
                "v5.2.3",
                "v6.0.0",
                "v6.0.1",
                "v6.0.2",
                "v6.1.0",
                "v6.1.1"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: cause",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "5ab3d0d09dce4dc9f3120fccb0691185dea59282",
            "repository": "https://github.com/rgrove/sanitize",
            "timestamp": 1521153968,
            "hunks": 0,
            "message": "Merge branch 'flavorjones-flavorjones-frozen-string-support'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.6.1",
                "v4.6.2",
                "v4.6.3",
                "v4.6.4",
                "v4.6.5",
                "v4.6.6",
                "v5.0.0",
                "v5.1.0",
                "v5.2.0",
                "v5.2.1",
                "v5.2.2",
                "v5.2.3",
                "v6.0.0",
                "v6.0.1",
                "v6.0.2",
                "v6.1.0",
                "v6.1.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "184709be85e06a613311f01e00930010b2cbc6bf",
            "repository": "https://github.com/rgrove/sanitize",
            "timestamp": 1521154216,
            "hunks": 1,
            "message": "chore: Release 4.6.1",
            "diff": [
                "diff --git a/lib/sanitize/version.rb b/lib/sanitize/version.rb",
                "index 849b38a..4b912ef 100644",
                "--- a/lib/sanitize/version.rb",
                "+++ b/lib/sanitize/version.rb",
                "@@ -3,3 +3,3 @@",
                " class Sanitize",
                "-  VERSION = '4.6.0'",
                "+  VERSION = '4.6.1'",
                " end"
            ],
            "changed_files": [
                "lib/sanitize/version.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.6.1",
                "v4.6.2",
                "v4.6.3",
                "v4.6.4",
                "v4.6.5",
                "v4.6.6",
                "v5.0.0",
                "v5.1.0",
                "v5.2.0",
                "v5.2.1",
                "v5.2.2",
                "v5.2.3",
                "v6.0.0",
                "v6.0.1",
                "v6.0.2",
                "v6.1.0",
                "v6.1.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5f66eb1c66ba69bc83c503ff0a7ab57e7e940e66",
            "repository": "https://github.com/rgrove/sanitize",
            "timestamp": 1521512314,
            "hunks": 1,
            "message": "chore: Release 4.6.3",
            "diff": [
                "diff --git a/lib/sanitize/version.rb b/lib/sanitize/version.rb",
                "index 70eaffc..6d59835 100644",
                "--- a/lib/sanitize/version.rb",
                "+++ b/lib/sanitize/version.rb",
                "@@ -3,3 +3,3 @@",
                " class Sanitize",
                "-  VERSION = '4.6.2'",
                "+  VERSION = '4.6.3'",
                " end"
            ],
            "changed_files": [
                "lib/sanitize/version.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.6.3",
                "v4.6.4",
                "v4.6.5",
                "v4.6.6",
                "v5.0.0",
                "v5.1.0",
                "v5.2.0",
                "v5.2.1",
                "v5.2.2",
                "v5.2.3",
                "v6.0.0",
                "v6.0.1",
                "v6.0.2",
                "v6.1.0",
                "v6.1.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "acc7e6440139379a0c6b4b76b662ed90acd4b923",
            "repository": "https://github.com/rgrove/sanitize",
            "timestamp": 1521563857,
            "hunks": 1,
            "message": "chore: Release 4.6.4",
            "diff": [
                "diff --git a/lib/sanitize/version.rb b/lib/sanitize/version.rb",
                "index 6d59835..5deb4b4 100644",
                "--- a/lib/sanitize/version.rb",
                "+++ b/lib/sanitize/version.rb",
                "@@ -3,3 +3,3 @@",
                " class Sanitize",
                "-  VERSION = '4.6.3'",
                "+  VERSION = '4.6.4'",
                " end"
            ],
            "changed_files": [
                "lib/sanitize/version.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.6.4",
                "v4.6.5",
                "v4.6.6",
                "v5.0.0",
                "v5.1.0",
                "v5.2.0",
                "v5.2.1",
                "v5.2.2",
                "v5.2.3",
                "v6.0.0",
                "v6.0.1",
                "v6.0.2",
                "v6.1.0",
                "v6.1.1"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "0eee92eb939d0c709fdf4e337c0643cba0fb894c",
            "repository": "https://github.com/rgrove/sanitize",
            "timestamp": 1521485908,
            "hunks": 1,
            "message": "chore: Release 4.6.2",
            "diff": [
                "diff --git a/lib/sanitize/version.rb b/lib/sanitize/version.rb",
                "index 4b912ef..70eaffc 100644",
                "--- a/lib/sanitize/version.rb",
                "+++ b/lib/sanitize/version.rb",
                "@@ -3,3 +3,3 @@",
                " class Sanitize",
                "-  VERSION = '4.6.1'",
                "+  VERSION = '4.6.2'",
                " end"
            ],
            "changed_files": [
                "lib/sanitize/version.rb"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.6.2",
                "v4.6.3",
                "v4.6.4",
                "v4.6.5",
                "v4.6.6",
                "v5.0.0",
                "v5.1.0",
                "v5.2.0",
                "v5.2.1",
                "v5.2.2",
                "v5.2.3",
                "v6.0.0",
                "v6.0.1",
                "v6.0.2",
                "v6.1.0",
                "v6.1.1"
            ],
            "matched_rules": []
        }
    ]
}
