{
    "advisory_record": {
        "cve_id": "CVE-2018-1270",
        "description": "Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.",
        "reserved_timestamp": 1512518400,
        "published_timestamp": 1522886400,
        "updated_timestamp": 1634726282,
        "repository_url": null,
        "references": {
            "": 65,
            "https://access.redhat.com/support/": 10,
            "https://access.redhat.com/downloads/": 8,
            "https://pivotal.io/security/cve-2018-1270": 6,
            "https://access.redhat.com/errata/": 6,
            "https://access.redhat.com/labs/": 6,
            "https://access.redhat.com/errata/RHSA-2018:2939": 4,
            "https://access.redhat.com/management/": 4,
            "https://access.redhat.com/": 4,
            "https://access.redhat.com/products/red-hat-enterprise-linux/": 4,
            "https://access.redhat.com/products/red-hat-openshift-container-platform": 4,
            "https://access.redhat.com/products/red-hat-ansible-automation-platform/": 4,
            "https://access.redhat.com/products/": 4,
            "https://access.redhat.com/documentation": 4,
            "https://access.redhat.com/product-life-cycles/": 4,
            "https://access.redhat.com/security": 4,
            "https://access.redhat.com/security/security-updates/#/security-advisories": 4,
            "https://access.redhat.com/security/security-updates/#/cve": 4,
            "https://access.redhat.com/support/contact/": 4,
            "https://status.redhat.com": 4,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1565307": 3,
            "https://www.exploit-db.com/exploits/44796/": 2,
            "http://www.securityfocus.com/bid/103696": 2,
            "https://lists.apache.org/thread.html/4ed49b103f64a0cecb38064f26cbf1389afc12124653da2d35166dbe%40%3Cissues.activemq.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/ab825fcade0b49becfa30235b3d54f4a51bb74ea96b6c9adb5d1378c%40%3Cissues.activemq.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/dcf8599b80e43a6b60482607adb76c64672772dc2d9209ae2170f369%40%3Cissues.activemq.apache.org%3E": 2,
            "https://lists.apache.org/thread.html/6d3d34adcf3dfc48e36342aa1f18ce3c20bb8e4c458a97508d5bfed1%40%3Cissues.activemq.apache.org%3E": 2,
            "http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html": 2,
            "http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html": 2,
            "https://www.oracle.com/security-alerts/cpujul2020.html": 2,
            "https://www.oracle.com/technetwork/security-advisory/cpujan2019-5072801.html": 2,
            "https://www.oracle.com/technetwork/security-advisory/cpujul2019-5072835.html": 2,
            "https://lists.apache.org/thread.html/rf1bbc0ea4a9f014cf94df9a12a6477d24a27f52741dbc87f2fd52ff2%40%3Cissues.geode.apache.org%3E": 2,
            "https://lists.debian.org/debian-lts-announce/2021/04/msg00022.html": 2,
            "https://www.oracle.com/security-alerts/cpuoct2021.html": 2,
            "commit::b6327acec825aefadead62bd7825425b048b214c": 2,
            "commit::e0de9126ed8cf25cf141d3e66420da94e350708a": 2,
            "https://access.redhat.com/security/cve/CVE-2018-1275": 2,
            "https://access.redhat.com/downloads/content/package-browser": 2,
            "https://catalog.redhat.com/software/containers/explore/": 2,
            "https://access.redhat.com/articles/1202803": 2,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Solution": 2,
            "https://access.redhat.com/search/?q=*&p=1&rows=10&documentKind=Article": 2,
            "https://access.redhat.com/documentation/en/red_hat_enterprise_linux": 2,
            "https://access.redhat.com/documentation/en/openshift_container_platform": 2,
            "https://access.redhat.com/documentation/en/red_hat_ansible_automation_platform": 2,
            "https://access.redhat.com/documentation/": 2,
            "https://access.redhat.com/security/": 2,
            "https://access.redhat.com/security/vulnerabilities": 2,
            "https://access.redhat.com/security/data": 2,
            "https://access.redhat.com/security/security-updates/#/security-labs": 2,
            "https://access.redhat.com/security/updates/backporting/": 2,
            "https://access.redhat.com/support/cases/": 2,
            "https://access.redhat.com/support/cases/#/troubleshoot": 2,
            "https://access.redhat.com/community": 2,
            "https://access.redhat.com/community/": 2,
            "https://access.redhat.com/discussions/": 2,
            "https://access.redhat.com/announcements/": 2,
            "https://access.redhat.com/accelerators/": 2,
            "https://access.redhat.com/jbossnetwork/restricted/listSoftware.html": 2,
            "https://cloud.redhat.com/insights": 2,
            "https://access.redhat.com/changeLanguage?language=en": 2,
            "https://access.redhat.com/changeLanguage?language=fr": 2,
            "https://access.redhat.com/changeLanguage?language=ko": 2,
            "https://access.redhat.com/changeLanguage?language=ja": 2,
            "https://access.redhat.com/changeLanguage?language=zh_CN": 2,
            "https://access.redhat.com/products/red-hat-satellite/": 2,
            "https://access.redhat.com/products/red-hat-subscription-management/": 2,
            "https://access.redhat.com/products/red-hat-insights/": 2,
            "https://access.redhat.com/products/red-hat-openstack-platform/": 2,
            "https://access.redhat.com/products/red-hat-openshift-container-platform/": 2,
            "https://access.redhat.com/products/red-hat-openshift-ai/": 2,
            "https://access.redhat.com/products/openshift-dedicated-red-hat/": 2,
            "https://access.redhat.com/products/red-hat-advanced-cluster-security-for-kubernetes/": 2,
            "https://access.redhat.com/products/red-hat-advanced-cluster-management-for-kubernetes/": 2,
            "https://access.redhat.com/products/red-hat-quay/": 2,
            "https://access.redhat.com/products/red-hat-openshift-dev-spaces": 2,
            "https://access.redhat.com/products/red-hat-openshift-service-aws": 2,
            "https://access.redhat.com/products/red-hat-storage/": 2,
            "https://access.redhat.com/products/red-hat-hyperconverged-infrastructure/": 2,
            "https://access.redhat.com/products/red-hat-ceph-storage/": 2,
            "https://access.redhat.com/products/red-hat-openshift-data-foundation": 2,
            "https://access.redhat.com/products/red-hat-runtimes/": 2,
            "https://access.redhat.com/products/red-hat-jboss-enterprise-application-platform/": 2,
            "https://access.redhat.com/products/red-hat-data-grid/": 2,
            "https://access.redhat.com/products/red-hat-jboss-web-server/": 2,
            "https://access.redhat.com/products/red-hat-build-of-keycloak/": 2,
            "https://access.redhat.com/products/spring-boot/": 2,
            "https://access.redhat.com/products/nodejs/": 2,
            "https://access.redhat.com/products/quarkus/": 2,
            "https://access.redhat.com/products/red-hat-application-foundations/": 2,
            "https://access.redhat.com/products/red-hat-fuse/": 2,
            "https://access.redhat.com/products/red-hat-amq/": 2,
            "https://access.redhat.com/products/red-hat-3scale/": 2,
            "https://redhat.com/en": 2,
            "https://twitter.com/RedHat": 2,
            "https://access.redhat.com/management": 2,
            "https://access.redhat.com/support": 2,
            "https://access.redhat.com/support/customer-service": 2,
            "https://access.redhat.com/articles/33844": 2,
            "https://access.redhat.com/help/login_assistance": 2,
            "https://www.redhat.com/en/trust": 2,
            "https://www.redhat.com/en/about/browser-support": 2,
            "https://www.redhat.com/en/about/digital-accessibility": 2,
            "https://access.redhat.com/recognition/": 2,
            "https://access.redhat.com/help/colophon/": 2,
            "https://www.redhat.com/": 2,
            "http://developers.redhat.com/": 2,
            "https://connect.redhat.com/": 2,
            "https://cloud.redhat.com/": 2,
            "https://access.redhat.com/subscription-value": 2,
            "https://www.redhat.com/about/": 2,
            "http://jobs.redhat.com": 2,
            "https://redhat.com/en/about/company": 2,
            "https://redhat.com/en/jobs": 2,
            "https://redhat.com/en/events": 2,
            "https://redhat.com/en/about/office-locations": 2,
            "https://redhat.com/en/contact": 2,
            "https://redhat.com/en/blog": 2,
            "https://redhat.com/en/about/our-culture/diversity-equity-inclusion": 2,
            "https://coolstuff.redhat.com/": 2,
            "https://www.redhat.com/en/summit": 2,
            "https://redhat.com/en/about/privacy-policy": 2,
            "https://redhat.com/en/about/terms-use": 2,
            "https://redhat.com/en/about/all-policies-guidelines": 2,
            "https://redhat.com/en/about/digital-accessibility": 2,
            "https://wiki.debian.org/LTS": 2,
            "https://access.redhat.com/articles/3060411": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1494283": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1548282": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1548289": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1549276": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1564405": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1571050": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1584376": 1,
            "https://bugzilla.redhat.com/show_bug.cgi?id=1607591": 1,
            "https://www.redhat.com/security/data/cve/CVE-2017-12617.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1260.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1270.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1271.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1275.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1304.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1305.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-1336.html": 1,
            "https://www.redhat.com/security/data/cve/CVE-2018-7489.html": 1,
            "https://access.redhat.com/security/updates/classification/#critical": 1,
            "https://access.redhat.com/security/team/contact/": 1,
            "https://www.debian.org/lts/security/": 1,
            "https://security-tracker.debian.org/tracker/libspring-java": 1
        },
        "affected_products": [
            "STOMP",
            "WebSocket",
            "Framework",
            "Spring Framework",
            "Spring"
        ],
        "versions": {
            "status": "affected",
            "version": "Versions prior to 5.0.5 and 4.3.15"
        },
        "files": [
            "STOMP",
            "WebSocket",
            "spring-messaging",
            "in-memory"
        ],
        "keywords": [
            "lead",
            "module",
            "code",
            "endpoint",
            "attacker",
            "stomp",
            "execution",
            "message",
            "broker",
            "framework",
            "memory",
            "expose",
            "version",
            "application",
            "websocket",
            "spring",
            "craft",
            "attack",
            "allow",
            "user"
        ],
        "files_extension": [],
        "has_fixing_commit": true
    },
    "commits": [
        {
            "commit_id": "b6327acec825aefadead62bd7825425b048b214c",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429599161,
            "hunks": 24,
            "message": "Add SpEL based selector to DefaultSubscriptionRegistry Issue: SPR-12884",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "index 613b2c6456..d067fc9ec1 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "@@ -18,2 +18,4 @@ package org.springframework.messaging.simp.broker;",
                "+import static org.springframework.messaging.support.MessageHeaderAccessor.getAccessor;",
                "+",
                " import java.util.Collection;",
                "@@ -26,4 +28,16 @@ import java.util.concurrent.ConcurrentHashMap;",
                " import java.util.concurrent.ConcurrentMap;",
                "-",
                "+import java.util.concurrent.CopyOnWriteArraySet;",
                "+",
                "+import org.springframework.expression.AccessException;",
                "+import org.springframework.expression.EvaluationContext;",
                "+import org.springframework.expression.Expression;",
                "+import org.springframework.expression.ExpressionParser;",
                "+import org.springframework.expression.PropertyAccessor;",
                "+import org.springframework.expression.TypedValue;",
                "+import org.springframework.expression.spel.SpelEvaluationException;",
                "+import org.springframework.expression.spel.standard.SpelExpressionParser;",
                "+import org.springframework.expression.spel.support.StandardEvaluationContext;",
                " import org.springframework.messaging.Message;",
                "+import org.springframework.messaging.MessageHeaders;",
                "+import org.springframework.messaging.simp.SimpMessageHeaderAccessor;",
                " import org.springframework.util.AntPathMatcher;",
                "@@ -36,3 +50,9 @@ import org.springframework.util.PathMatcher;",
                " /**",
                "- * A default, simple in-memory implementation of {@link SubscriptionRegistry}.",
                "+ * Implementation of {@link SubscriptionRegistry} that stores subscriptions",
                "+ * in memory and uses a {@link org.springframework.util.PathMatcher PathMatcher}",
                "+ * for matching destinations.",
                "+ *",
                "+ * <p>As of 4.2 this class supports a {@link #setSelectorHeaderName selector}",
                "+ * header on subscription messages with Spring EL expressions evaluated against",
                "+ * the headers to filter out messages in addition to destination matching.",
                "  *",
                "@@ -53,2 +73,6 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                "+\tprivate String selectorHeaderName = \"selector\";",
                "+",
                "+\tprivate ExpressionParser expressionParser = new SpelExpressionParser();",
                "+",
                " \tprivate final DestinationCache destinationCache = new DestinationCache();",
                "@@ -87,6 +111,48 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                "+\t/**",
                "+\t * Configure the name of a selector header that a subscription message can",
                "+\t * have in order to filter messages based on their headers. The value of the",
                "+\t * header can use Spring EL expressions against message headers.",
                "+\t * <p>For example the following expression expects a header called \"foo\" to",
                "+\t * have the value \"bar\":",
                "+\t * <pre>",
                "+\t * headers.foo == 'bar'",
                "+\t * </pre>",
                "+\t * <p>By default this is set to \"selector\".",
                "+\t * @since 4.2",
                "+\t */",
                "+\tpublic void setSelectorHeaderName(String selectorHeaderName) {",
                "+\t\tAssert.notNull(selectorHeaderName);",
                "+\t\tthis.selectorHeaderName = selectorHeaderName;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Return the name for the selector header.",
                "+\t */",
                "+\tpublic String getSelectorHeaderName() {",
                "+\t\treturn this.selectorHeaderName;",
                "+\t}",
                "+",
                " \t@Override",
                "-\tprotected void addSubscriptionInternal(String sessionId, String subsId, String destination, Message<?> message) {",
                "-\t\tthis.subscriptionRegistry.addSubscription(sessionId, subsId, destination);",
                "+\tprotected void addSubscriptionInternal(String sessionId, String subsId, String destination,",
                "+\t\t\tMessage<?> message) {",
                "+",
                "+\t\tExpression expression = null;",
                "+\t\tMessageHeaders headers = message.getHeaders();",
                "+\t\tString selector = SimpMessageHeaderAccessor.getFirstNativeHeader(getSelectorHeaderName(), headers);",
                "+\t\tif (selector != null) {",
                "+\t\t\ttry {",
                "+\t\t\t\texpression = this.expressionParser.parseExpression(selector);",
                "+\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\tlogger.trace(\"Subscription selector: [\" + selector + \"]\");",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\tlogger.debug(\"Failed to parse selector: \" + selector, ex);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\tthis.subscriptionRegistry.addSubscription(sessionId, subsId, destination, expression);",
                " \t\tthis.destinationCache.updateAfterNewSubscription(destination, sessionId, subsId);",
                "@@ -114,6 +180,8 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t@Override",
                "-\tprotected MultiValueMap<String, String> findSubscriptionsInternal(String destination, Message<?> message) {",
                "+\tprotected MultiValueMap<String, String> findSubscriptionsInternal(String destination,",
                "+\t\t\tMessage<?> message) {",
                "+",
                " \t\tMultiValueMap<String, String> result = this.destinationCache.getSubscriptions(destination);",
                " \t\tif (result != null) {",
                "-\t\t\treturn result;",
                "+\t\t\treturn filterSubscriptions(result, message);",
                " \t\t}",
                "@@ -123,4 +191,4 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t\tif (this.pathMatcher.match(destinationPattern, destination)) {",
                "-\t\t\t\t\tfor (String subscriptionId : info.getSubscriptions(destinationPattern)) {",
                "-\t\t\t\t\t\tresult.add(info.sessionId, subscriptionId);",
                "+\t\t\t\t\tfor (Subscription subscription : info.getSubscriptions(destinationPattern)) {",
                "+\t\t\t\t\t\tresult.add(info.sessionId, subscription.getId());",
                " \t\t\t\t\t}",
                "@@ -132,2 +200,40 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t}",
                "+\t\treturn filterSubscriptions(result, message);",
                "+\t}",
                "+",
                "+\tprivate MultiValueMap<String, String> filterSubscriptions(MultiValueMap<String, String> allMatches,",
                "+\t\t\tMessage<?> message) {",
                "+",
                "+\t\tEvaluationContext context = null;",
                "+\t\tMultiValueMap<String, String> result = new LinkedMultiValueMap<String, String>(allMatches.size());",
                "+\t\tfor (String sessionId : allMatches.keySet()) {",
                "+\t\t\tfor (String subId : allMatches.get(sessionId)) {",
                "+\t\t\t\tSessionSubscriptionInfo info = this.subscriptionRegistry.getSubscriptions(sessionId);",
                "+\t\t\t\tSubscription sub = info.getSubscription(subId);",
                "+\t\t\t\tExpression expression = sub.getSelectorExpression();",
                "+\t\t\t\tif (expression == null) {",
                "+\t\t\t\t\tresult.add(sessionId, subId);",
                "+\t\t\t\t\tcontinue;",
                "+\t\t\t\t}",
                "+\t\t\t\tif (context == null) {",
                "+\t\t\t\t\tcontext = new StandardEvaluationContext(message);",
                "+\t\t\t\t\tcontext.getPropertyAccessors().add(new SimpMessageHeaderPropertyAccessor());",
                "+\t\t\t\t}",
                "+\t\t\t\ttry {",
                "+\t\t\t\t\tif (expression.getValue(context, boolean.class)) {",
                "+\t\t\t\t\t\tresult.add(sessionId, subId);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t\tcatch (SpelEvaluationException ex) {",
                "+\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\t\tlogger.debug(\"Failed to evaluate selector: \" + ex.getMessage());",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\t\tlogger.debug(\"Failed to evaluate selector.\", ex);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                " \t\treturn result;",
                "@@ -259,3 +365,5 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                "-\t\tpublic SessionSubscriptionInfo addSubscription(String sessionId, String subscriptionId, String destination) {",
                "+\t\tpublic SessionSubscriptionInfo addSubscription(String sessionId, String subscriptionId,",
                "+\t\t\t\tString destination, Expression selectorExpression) {",
                "+",
                " \t\t\tSessionSubscriptionInfo info = this.sessions.get(sessionId);",
                "@@ -268,3 +376,3 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t}",
                "-\t\t\tinfo.addSubscription(destination, subscriptionId);",
                "+\t\t\tinfo.addSubscription(destination, subscriptionId, selectorExpression);",
                " \t\t\treturn info;",
                "@@ -289,4 +397,5 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                "-\t\t// destination -> subscriptionIds",
                "-\t\tprivate final Map<String, Set<String>> subscriptions = new ConcurrentHashMap<String, Set<String>>(4);",
                "+\t\t// destination -> subscriptions",
                "+\t\tprivate final Map<String, Set<Subscription>> destinationLookup =",
                "+\t\t\t\tnew ConcurrentHashMap<String, Set<Subscription>>(4);",
                "@@ -305,17 +414,28 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\tpublic Set<String> getDestinations() {",
                "-\t\t\treturn this.subscriptions.keySet();",
                "+\t\t\treturn this.destinationLookup.keySet();",
                " \t\t}",
                "-\t\tpublic Set<String> getSubscriptions(String destination) {",
                "-\t\t\treturn this.subscriptions.get(destination);",
                "+\t\tpublic Set<Subscription> getSubscriptions(String destination) {",
                "+\t\t\treturn this.destinationLookup.get(destination);",
                "+\t\t}",
                "+",
                "+\t\tpublic Subscription getSubscription(String subscriptionId) {",
                "+\t\t\tfor (String destination : this.destinationLookup.keySet()) {",
                "+\t\t\t\tfor (Subscription sub : this.destinationLookup.get(destination)) {",
                "+\t\t\t\t\tif (sub.getId().equalsIgnoreCase(subscriptionId)) {",
                "+\t\t\t\t\t\treturn sub;",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\treturn null;",
                " \t\t}",
                "-\t\tpublic void addSubscription(String destination, String subscriptionId) {",
                "-\t\t\tSet<String> subs = this.subscriptions.get(destination);",
                "+\t\tpublic void addSubscription(String destination, String subscriptionId, Expression selectorExpression) {",
                "+\t\t\tSet<Subscription> subs = this.destinationLookup.get(destination);",
                " \t\t\tif (subs == null) {",
                " \t\t\t\tsynchronized (this.monitor) {",
                "-\t\t\t\t\tsubs = this.subscriptions.get(destination);",
                "+\t\t\t\t\tsubs = this.destinationLookup.get(destination);",
                " \t\t\t\t\tif (subs == null) {",
                "-\t\t\t\t\t\tsubs = new HashSet<String>(4);",
                "-\t\t\t\t\t\tthis.subscriptions.put(destination, subs);",
                "+\t\t\t\t\t\tsubs = new CopyOnWriteArraySet<Subscription>();",
                "+\t\t\t\t\t\tthis.destinationLookup.put(destination, subs);",
                " \t\t\t\t\t}",
                "@@ -323,3 +443,3 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t}",
                "-\t\t\tsubs.add(subscriptionId);",
                "+\t\t\tsubs.add(new Subscription(subscriptionId, selectorExpression));",
                " \t\t}",
                "@@ -327,11 +447,13 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\tpublic String removeSubscription(String subscriptionId) {",
                "-\t\t\tfor (String destination : this.subscriptions.keySet()) {",
                "-\t\t\t\tSet<String> subscriptionIds = this.subscriptions.get(destination);",
                "-\t\t\t\tif (subscriptionIds.remove(subscriptionId)) {",
                "-\t\t\t\t\tsynchronized (this.monitor) {",
                "-\t\t\t\t\t\tif (subscriptionIds.isEmpty()) {",
                "-\t\t\t\t\t\t\tthis.subscriptions.remove(destination);",
                "+\t\t\tfor (String destination : this.destinationLookup.keySet()) {",
                "+\t\t\t\tSet<Subscription> subscriptions = this.destinationLookup.get(destination);",
                "+\t\t\t\tfor (Subscription sub : subscriptions) {",
                "+\t\t\t\t\tif (sub.getId().equals(subscriptionId) && subscriptions.remove(sub)) {",
                "+\t\t\t\t\t\tsynchronized (this.monitor) {",
                "+\t\t\t\t\t\t\tif (subscriptions.isEmpty()) {",
                "+\t\t\t\t\t\t\t\tthis.destinationLookup.remove(destination);",
                "+\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t}",
                "+\t\t\t\t\t\treturn destination;",
                " \t\t\t\t\t}",
                "-\t\t\t\t\treturn destination;",
                " \t\t\t\t}",
                "@@ -343,3 +465,69 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\tpublic String toString() {",
                "-\t\t\treturn \"[sessionId=\" + this.sessionId + \", subscriptions=\" + this.subscriptions + \"]\";",
                "+\t\t\treturn \"[sessionId=\" + this.sessionId + \", subscriptions=\" + this.destinationLookup + \"]\";",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tprivate static class Subscription {",
                "+",
                "+\t\tprivate final String id;",
                "+",
                "+\t\tprivate final Expression selectorExpression;",
                "+",
                "+",
                "+\t\tpublic Subscription(String id, Expression selector) {",
                "+\t\t\tthis.id = id;",
                "+\t\t\tthis.selectorExpression = selector;",
                "+\t\t}",
                "+",
                "+",
                "+\t\tpublic String getId() {",
                "+\t\t\treturn this.id;",
                "+\t\t}",
                "+",
                "+\t\tpublic Expression getSelectorExpression() {",
                "+\t\t\treturn this.selectorExpression;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic String toString() {",
                "+\t\t\treturn \"Subscription id='\" + this.id;",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tprivate static class SimpMessageHeaderPropertyAccessor implements PropertyAccessor {",
                "+",
                "+\t\t@Override",
                "+\t\tpublic Class<?>[] getSpecificTargetClasses() {",
                "+\t\t\treturn new Class<?>[] {MessageHeaders.class};",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic boolean canRead(EvaluationContext context, Object target, String name) {",
                "+\t\t\treturn true;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic TypedValue read(EvaluationContext context, Object target, String name) throws AccessException {",
                "+\t\t\tMessageHeaders headers = (MessageHeaders) target;",
                "+\t\t\tSimpMessageHeaderAccessor accessor = getAccessor(headers, SimpMessageHeaderAccessor.class);",
                "+\t\t\tObject value;",
                "+\t\t\tif (\"destination\".equalsIgnoreCase(name)) {",
                "+\t\t\t\tvalue = accessor.getDestination();",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\tvalue = accessor.getFirstNativeHeader(name);",
                "+\t\t\t\tif (value == null) {",
                "+\t\t\t\t\tvalue = headers.get(name);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\treturn new TypedValue(value);",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic boolean canWrite(EvaluationContext context, Object target, String name) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic void write(EvaluationContext context, Object target, String name, Object value) {",
                " \t\t}"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: in-memory",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: broker",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "e0de9126ed8cf25cf141d3e66420da94e350708a",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521689398,
            "hunks": 12,
            "message": "Re-use EvaluationContext in DefaultSubscriptionRegistry Rather than create a new EvaluationContext instance per evaluation, we now create a statically shared instance, without the root object in it, and re-use it for all evalutations.",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "index 97f97c586a..ae9c6b7414 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -28,3 +28,2 @@ import java.util.concurrent.CopyOnWriteArraySet;",
                "-import org.springframework.expression.AccessException;",
                " import org.springframework.expression.EvaluationContext;",
                "@@ -36,3 +35,3 @@ import org.springframework.expression.spel.SpelEvaluationException;",
                " import org.springframework.expression.spel.standard.SpelExpressionParser;",
                "-import org.springframework.expression.spel.support.StandardEvaluationContext;",
                "+import org.springframework.expression.spel.support.SimpleEvaluationContext;",
                " import org.springframework.lang.Nullable;",
                "@@ -67,2 +66,7 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                "+\t/** Static evaluation context to re-use */",
                "+\tprivate static SimpleEvaluationContext evaluationContext = SimpleEvaluationContext.builder()",
                "+\t\t\t.propertyAccessor(new SimpMessageHeaderPropertyAccessor()).build();",
                "+",
                "+",
                "@@ -194,3 +198,2 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t}",
                "-\t\tEvaluationContext context = null;",
                " \t\tMultiValueMap<String, String> result = new LinkedMultiValueMap<>(allMatches.size());",
                "@@ -211,8 +214,4 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t\t}",
                "-\t\t\t\tif (context == null) {",
                "-\t\t\t\t\tcontext = new StandardEvaluationContext(message);",
                "-\t\t\t\t\tcontext.getPropertyAccessors().add(new SimpMessageHeaderPropertyAccessor());",
                "-\t\t\t\t}",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tif (Boolean.TRUE.equals(expression.getValue(context, Boolean.class))) {",
                "+\t\t\t\t\tif (Boolean.TRUE.equals(expression.getValue(evaluationContext, message, Boolean.class))) {",
                " \t\t\t\t\t\tresult.add(sessionId, subId);",
                "@@ -535,3 +534,3 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\tpublic Class<?>[] getSpecificTargetClasses() {",
                "-\t\t\treturn new Class<?>[] {MessageHeaders.class};",
                "+\t\t\treturn new Class<?>[] {Message.class, MessageHeaders.class};",
                " \t\t}",
                "@@ -544,17 +543,25 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t@Override",
                "-\t\tpublic TypedValue read(EvaluationContext context, @Nullable Object target, String name) throws AccessException {",
                "-\t\t\tAssert.state(target instanceof MessageHeaders, \"No MessageHeaders\");",
                "-\t\t\tMessageHeaders headers = (MessageHeaders) target;",
                "-\t\t\tSimpMessageHeaderAccessor accessor =",
                "-\t\t\t\t\tMessageHeaderAccessor.getAccessor(headers, SimpMessageHeaderAccessor.class);",
                "-\t\t\tAssert.state(accessor != null, \"No SimpMessageHeaderAccessor\");",
                "+\t\tpublic TypedValue read(EvaluationContext context, @Nullable Object target, String name) {",
                " \t\t\tObject value;",
                "-\t\t\tif (\"destination\".equalsIgnoreCase(name)) {",
                "-\t\t\t\tvalue = accessor.getDestination();",
                "+\t\t\tif (target instanceof Message) {",
                "+\t\t\t\tvalue = name.equals(\"headers\") ? ((Message) target).getHeaders() : null;",
                " \t\t\t}",
                "-\t\t\telse {",
                "-\t\t\t\tvalue = accessor.getFirstNativeHeader(name);",
                "-\t\t\t\tif (value == null) {",
                "-\t\t\t\t\tvalue = headers.get(name);",
                "+\t\t\telse if (target instanceof MessageHeaders) {",
                "+\t\t\t\tMessageHeaders headers = (MessageHeaders) target;",
                "+\t\t\t\tSimpMessageHeaderAccessor accessor =",
                "+\t\t\t\t\t\tMessageHeaderAccessor.getAccessor(headers, SimpMessageHeaderAccessor.class);",
                "+\t\t\t\tAssert.state(accessor != null, \"No SimpMessageHeaderAccessor\");",
                "+\t\t\t\tif (\"destination\".equalsIgnoreCase(name)) {",
                "+\t\t\t\t\tvalue = accessor.getDestination();",
                " \t\t\t\t}",
                "+\t\t\t\telse {",
                "+\t\t\t\t\tvalue = accessor.getFirstNativeHeader(name);",
                "+\t\t\t\t\tif (value == null) {",
                "+\t\t\t\t\t\tvalue = headers.get(name);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t\tthrow new IllegalStateException(\"Expected Message or MessageHeaders.\");",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_IN_REFERENCE",
                    "message": "This commit is mentioned 2 times in the references.",
                    "relevance": 64
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: broker",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ddb2bdf8c60c58a37e73fde060786e3d087b99aa",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521817662,
            "hunks": 4,
            "message": "Improve docs on @Controller methods in STOMP section Issue: SPR-16631",
            "diff": [
                "diff --git a/src/asciidoc/web-websocket.adoc b/src/asciidoc/web-websocket.adoc",
                "index 53db293fbc..370407547e 100644",
                "--- a/src/asciidoc/web-websocket.adoc",
                "+++ b/src/asciidoc/web-websocket.adoc",
                "@@ -1374,17 +1374,24 @@ kinds of arguments and return values supported.",
                " [[websocket-stomp-handle-annotations]]",
                "-=== Handler methods",
                "+=== Annotated Controllers",
                "-The `@MessageMapping` annotation is supported on methods of `@Controller` classes.",
                "-It can be used for mapping methods to message destinations and can also be combined",
                "-with the type-level `@MessageMapping` for expressing shared mappings across all",
                "-annotated methods within a controller.",
                "+Applications can use annotated `@Controller` classes to handle messages from clients.",
                "+Such classes can declare `@MessageMapping`, `@SubscribeMapping`, and `@ExceptionHandler`",
                "+methods as described next.",
                "-By default destination mappings are treated as Ant-style, slash-separated, path",
                "-patterns, e.g. \"/foo*\", \"/foo/**\". etc. They can also contain template variables,",
                "-e.g. \"/foo/{id}\" that can then be referenced via `@DestinationVariable`-annotated",
                "-method arguments.",
                "-[NOTE]",
                "+[[websocket-stomp-message-mapping]]",
                "+==== `@MessageMapping`",
                "+",
                "+The `@MessageMapping` annotation can be used on methods to route messages based on their",
                "+destination. It is supported at the method level as well as at the type level. At type",
                "+level `@MessageMapping` is used to express shared mappings across all methods in a",
                "+controller.",
                "+",
                "+By default destination mappings are expected to be Ant-style, path patterns, e.g. \"/foo*\",",
                "+\"/foo/**\". The patterns include support for template variables, e.g. \"/foo/{id}\", that can",
                "+be referenced with `@DestinationVariable` method arguments.",
                "+",
                "+[TIP]",
                " ====",
                "-Applications can also use dot-separated destinations (vs slash).",
                "+Applications can choose to switch to a dot-separated destination convention.",
                " See <<websocket-stomp-destination-separator>>.",
                "@@ -1392,60 +1399,117 @@ See <<websocket-stomp-destination-separator>>.",
                "-The following method arguments are supported for `@MessageMapping` methods:",
                "-",
                "-* `Message` method argument to get access to the complete message being processed.",
                "-* `@Payload`-annotated argument for access to the payload of a message, converted with",
                "-a `org.springframework.messaging.converter.MessageConverter`.",
                "-The presence of the annotation is not required since it is assumed by default.",
                "-Payload method arguments annotated with validation annotations (like `@Validated`) will",
                "-be subject to JSR-303 validation.",
                "-* `@Header`-annotated arguments for access to a specific header value along with",
                "-type conversion using an `org.springframework.core.convert.converter.Converter`",
                "-if necessary.",
                "-* `@Headers`-annotated method argument that must also be assignable to `java.util.Map`",
                "-for access to all headers in the message.",
                "-* `MessageHeaders` method argument for getting access to a map of all headers.",
                "-* `MessageHeaderAccessor`, `SimpMessageHeaderAccessor`, or `StompHeaderAccessor`",
                "-for access to headers via typed accessor methods.",
                "-* `@DestinationVariable`-annotated arguments for access to template",
                "-variables extracted from the message destination. Values will be converted to",
                "-the declared method argument type as necessary.",
                "-* `java.security.Principal` method arguments reflecting the user logged in at",
                "-the time of the WebSocket HTTP handshake.",
                "-",
                "-A return value from an `@MessageMapping` method will be converted with a",
                "-`org.springframework.messaging.converter.MessageConverter` and used as the body",
                "-of a new message that is then sent, by default, to the `\"brokerChannel\"` with",
                "-the same destination as the client message but using the prefix `\"/topic\"` by",
                "-default. An `@SendTo` message level annotation can be used to specify any",
                "-other destination instead. It can also be set a class-level to share a common",
                "+`@MessageMapping` methods can have flexible signatures with the following arguments:",
                "+",
                "+[cols=\"1,2\", options=\"header\"]",
                "+|===",
                "+| Method argument | Description",
                "+",
                "+| `Message`",
                "+| For access to the complete message.",
                "+",
                "+| `MessageHeaders`",
                "+| For access to the headers within the `Message`.",
                "+",
                "+| `MessageHeaderAccessor`, `SimpMessageHeaderAccessor`, `StompHeaderAccessor`",
                "+| For access to the headers via typed accessor methods.",
                "+",
                "+| `@Payload`",
                "+| For access to the payload of the message, converted (e.g. from JSON) via a configured",
                "+`MessageConverter`.",
                "+",
                "+The presence of this annotation is not required since it is assumed by default if no",
                "+other argument is matched.",
                "+",
                "+Payload arguments may be annotated with `@javax.validation.Valid` or Spring's `@Validated`",
                "+in order to be automatically validated.",
                "+",
                "+| `@Header`",
                "+| For access to a specific header value along with type conversion using an",
                "+`org.springframework.core.convert.converter.Converter` if necessary.",
                "+",
                "+| `@Headers`",
                "+| For access to all headers in the message. This argument must be assignable to",
                "+`java.util.Map`.",
                "+",
                "+| `@DestinationVariable`",
                "+| For access to template variables extracted from the message destination.",
                "+Values will be converted to the declared method argument type as necessary.",
                "+",
                "+| `java.security.Principal`",
                "+| Reflects the user logged in at the time of the WebSocket HTTP handshake.",
                "+",
                "+|===",
                "+",
                "+When an `@MessageMapping` method returns a value, by default the value is serialized to",
                "+a payload through a configured `MessageConverter`, and then sent as a `Message` to the",
                "+`\"brokerChannel\"` from where it is broadcast to subscribers. The destination of the",
                "+outbound message is the same as that of the inbound message but prefixed with `\"/topic\"`.",
                "+",
                "+You can use the `@SendTo` method annotation to customize the destination to send",
                "+the payload to. `@SendTo` can also be used at the class level to share a default target",
                "+destination to send messages to. `@SendToUser` is an variant for sending messages only to",
                "+the user associated with a message. See <<websocket-stomp-user-destination>> for details.",
                "+",
                "+The return value from an `@MessageMapping` method may be wrapped with `ListenableFuture`,",
                "+`CompletableFuture`, or `CompletionStage` in order to produce the payload asynchronously.",
                "+",
                "+As an alternative to returning a payload from an `@MessageMapping` method you can also",
                "+send messages using the `SimpMessagingTemplate`, which is also how return values are",
                "+handled under the covers. See <<websocket-stomp-handle-send>>.",
                "+",
                "+",
                "+[[websocket-stomp-subscribe-mapping]]",
                "+==== `@SubscribeMapping`",
                "+",
                "+The `@SubscribeMapping` annotation is used in combination with `@MessageMapping` in order",
                "+to narrow the mapping to subscription messages. In such scenarios, the `@MessageMapping`",
                "+annotation specifies the destination while `@SubscribeMapping` indicates interest in",
                "+subscription messages only.",
                "+",
                "+An `@SubscribeMapping` method is generally no different from any `@MessageMapping`",
                "+method with respect to mapping and input arguments. For example you can combine it with a",
                "+type-level `@MessageMapping` to express a shared destination prefix, and you can use the",
                "+same <<websocket-stomp-message-mapping,method arguments>> as on any @MessageMapping` method.",
                "+",
                "+The key difference with `@SubscribeMapping` is that the return value of the method is",
                "+serialized as a payload and sent, not to the \"brokerChannel\" but to the",
                "+\"clientOutboundChannel\", effectively replying directly to the client rather than",
                "+broadcasting through the broker. This is useful for implementing one-off, request-reply",
                "+message exchanges, and never holding on to the subscription. A common scenario for this",
                "+pattern is application initialization when data must be loaded and presented.",
                "+",
                "+A `@SubscribeMapping` method can also be annotated with `@SendTo` in which case the",
                "+return value is sent to the `\"brokerChannel\"` with the explicitly specified target",
                " destination.",
                "-A response message may also be provided asynchronously via a `ListenableFuture`",
                "-or `CompletableFuture`/`CompletionStage` return type signature, analogous to",
                "-deferred results in an MVC handler method.",
                "-A `@SubscribeMapping` annotation can be used to map subscription requests to",
                "-`@Controller` methods. It is supported on the method level, but can also be",
                "-combined with a type level `@MessageMapping` annotation that expresses shared",
                "-mappings across all message handling methods within the same controller.",
                "+[[websocket-stomp-exception-handler]]",
                "+==== `@MessageExceptionHandler`",
                "-By default the return value from an `@SubscribeMapping` method is sent as a",
                "-message directly back to the connected client and does not pass through the",
                "-broker. This is useful for implementing request-reply message interactions; for",
                "-example, to fetch application data when the application UI is being initialized.",
                "-Or alternatively an `@SubscribeMapping` method can be annotated with `@SendTo`",
                "-in which case the resulting message is sent to the `\"brokerChannel\"` using",
                "-the specified target destination.",
                "+An application can use `@MessageExceptionHandler` methods to handle exceptions from",
                "+`@MessageMapping` methods. Exceptions of interest can be declared in the annotation",
                "+itself, or through a method argument if you want to get access to the exception instance:",
                "-[NOTE]",
                "-====",
                "-In some cases a controller may need to be decorated with an AOP proxy at runtime.",
                "-One example is if you choose to have `@Transactional` annotations directly on the",
                "-controller. When this is the case, for controllers specifically, we recommend",
                "-using class-based proxying. This is typically the default choice with controllers.",
                "-However if a controller must implement an interface that is not a Spring Context",
                "-callback (e.g. `InitializingBean`, `*Aware`, etc), you may need to explicitly",
                "-configure class-based proxying. For example with `<tx:annotation-driven />`,",
                "-change to `<tx:annotation-driven proxy-target-class=\"true\" />`.",
                "-====",
                "+[source,java,indent=0]",
                "+[subs=\"verbatim,quotes\"]",
                "+----",
                "+\t@Controller",
                "+\tpublic class MyController {",
                "+",
                "+\t\t// ...",
                "+",
                "+\t\t@MessageExceptionHandler",
                "+\t\tpublic ApplicationError handleException(MyException exception) {",
                "+\t\t\t// ...",
                "+\t\t\treturn appError;",
                "+\t\t}",
                "+\t}",
                "+----",
                "+",
                "+`@MessageExceptionHandler` methods support flexible method signatures and support the same",
                "+method argument types and return values as <<websocket-stomp-message-mapping>> methods.",
                "+",
                "+Typically `@MessageExceptionHandler` methods apply within the `@Controller` class (or",
                "+class hierarchy) they are declared in. If you want such methods to apply more globally,",
                "+across controllers, you can declare them in a class marked with `@ControllerAdvice`.",
                "+This is comparable to <<web.adoc#mvc-ann-controller-advice,similar support>> in Spring MVC."
            ],
            "changed_files": [
                "src/asciidoc/web-websocket.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "RELEVANT_WORDS_IN_MESSAGE",
                    "message": "The commit message contains some relevant words: STOMP",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: WebSocket",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/asciidoc/web-websocket.adoc",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: stomp",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: websocket",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "a3df66931fcfc8d84f85da8121d9e74f3044d5a1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1428979190,
            "hunks": 8,
            "message": "Add path-helper attribute for websocket namespace Issue: SPR-11771",
            "diff": [
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java",
                "index 950de748e0..0cb4348b94 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java",
                "@@ -114,9 +114,17 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                "+\t\tRootBeanDefinition handlerMappingDef = new RootBeanDefinition(SimpleUrlHandlerMapping.class);",
                "+",
                " \t\tString orderAttribute = element.getAttribute(\"order\");",
                " \t\tint order = orderAttribute.isEmpty() ? DEFAULT_MAPPING_ORDER : Integer.valueOf(orderAttribute);",
                "+\t\thandlerMappingDef.getPropertyValues().add(\"order\", order);",
                "+",
                "+\t\tString pathHelper = element.getAttribute(\"path-helper\");",
                "+\t\tif (StringUtils.hasText(pathHelper)) {",
                "+\t\t\thandlerMappingDef.getPropertyValues().add(\"urlPathHelper\", new RuntimeBeanReference(pathHelper));",
                "+\t\t}",
                "+",
                " \t\tManagedMap<String, Object> urlMap = new ManagedMap<String, Object>();",
                " \t\turlMap.setSource(source);",
                "-\t\tRootBeanDefinition handlerMappingDef = new RootBeanDefinition(SimpleUrlHandlerMapping.class);",
                "-\t\thandlerMappingDef.getPropertyValues().add(\"order\", order);",
                " \t\thandlerMappingDef.getPropertyValues().add(\"urlMap\", urlMap);",
                "+",
                " \t\tregisterBeanDef(handlerMappingDef, context, source);",
                "@@ -174,3 +182,3 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                " \tprivate RuntimeBeanReference getMessageChannel(String name, Element element, ParserContext context, Object source) {",
                "-\t\tRootBeanDefinition executor = null;",
                "+\t\tRootBeanDefinition executor;",
                " \t\tif (element == null) {",
                "@@ -528,3 +536,2 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                "-",
                " \tprivate static class DecoratingFactoryBean implements FactoryBean<WebSocketHandler> {",
                "@@ -536,2 +543,3 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                "+\t\t@SuppressWarnings(\"unused\")",
                " \t\tprivate DecoratingFactoryBean(WebSocketHandler handler, List<WebSocketHandlerDecoratorFactory> factories) {",
                "diff --git a/spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd b/spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd",
                "index 8c1945a968..8ec7535b3c 100644",
                "--- a/spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd",
                "+++ b/spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd",
                "@@ -893,2 +893,9 @@",
                " \t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"path-helper\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe bean name of the UrlPathHelper to use for the HandlerMapping used to map handshake requests.",
                "+\t\t\t\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                " \t\t</xsd:complexType>"
            ],
            "changed_files": [
                "spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java",
                "spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: WebSocket",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd, spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: websocket",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: broker, message, websocket",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "c384945a17ce6c0ffc3294ea87bc0b354d5c4555",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429042040,
            "hunks": 79,
            "message": "Polish \"user\" destination support package Issue: SPR-11620",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java",
                "index affd3fd475..64363a1fe3 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -34,17 +34,14 @@ import org.springframework.util.StringUtils;",
                " /**",
                "- * A default implementation of {@link UserDestinationResolver} that relies",
                "- * on the {@link org.springframework.messaging.simp.user.UserSessionRegistry}",
                "- * provided to the constructor to find the sessionIds associated with a user",
                "- * and then uses the sessionId to make the target destination unique.",
                "+ * A default implementation of {@code UserDestinationResolver} that relies",
                "+ * on a {@link org.springframework.messaging.simp.user.UserSessionRegistry} to",
                "+ * find active sessions for a user.",
                "  *",
                "- * <p>When a user attempts to subscribe to \"/user/queue/position-updates\", the",
                "- * \"/user\" prefix is removed and a unique suffix added, resulting in something",
                "- * like \"/queue/position-updates-useri9oqdfzo\" where the suffix is based on the",
                "- * user's session and ensures it does not collide with any other users attempting",
                "- * to subscribe to \"/user/queue/position-updates\".",
                "+ * <p>When a user attempts to subscribe, e.g. to \"/user/queue/position-updates\",",
                "+ * the \"/user\" prefix is removed and a unique suffix added based on the session",
                "+ * id, e.g. \"/queue/position-updates-useri9oqdfzo\" to ensure different users can",
                "+ * subscribe to the same logical destination without colliding.",
                "  *",
                "- * <p>When a message is sent to a user with a destination such as",
                "- * \"/user/{username}/queue/position-updates\", the \"/user/{username}\" prefix is",
                "- * removed and the suffix added, resulting in something like",
                "- * \"/queue/position-updates-useri9oqdfzo\".",
                "+ * <p>When sending to a user, e.g. \"/user/{username}/queue/position-updates\", the",
                "+ * \"/user/{username}\" prefix is removed and a suffix based on active session id's",
                "+ * is added, e.g. \"/queue/position-updates-useri9oqdfzo\".",
                "  *",
                "@@ -59,5 +56,5 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                "-\tprivate final UserSessionRegistry userSessionRegistry;",
                "+\tprivate final UserSessionRegistry sessionRegistry;",
                "-\tprivate String destinationPrefix = \"/user/\";",
                "+\tprivate String prefix = \"/user/\";",
                "@@ -67,7 +64,7 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                " \t * the provided registry.",
                "-\t * @param userSessionRegistry the registry, never {@code null}",
                "+\t * @param sessionRegistry the registry, never {@code null}",
                " \t */",
                "-\tpublic DefaultUserDestinationResolver(UserSessionRegistry userSessionRegistry) {",
                "-\t\tAssert.notNull(userSessionRegistry, \"'userSessionRegistry' must not be null\");",
                "-\t\tthis.userSessionRegistry = userSessionRegistry;",
                "+\tpublic DefaultUserDestinationResolver(UserSessionRegistry sessionRegistry) {",
                "+\t\tAssert.notNull(sessionRegistry, \"'sessionRegistry' must not be null\");",
                "+\t\tthis.sessionRegistry = sessionRegistry;",
                " \t}",
                "@@ -75,2 +72,9 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                "+\t/**",
                "+\t * Return the configured {@link UserSessionRegistry}.",
                "+\t */",
                "+\tpublic UserSessionRegistry getUserSessionRegistry() {",
                "+\t\treturn this.sessionRegistry;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -78,3 +82,3 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                " \t * start with the given prefix are not be resolved.",
                "-\t * <p>The default value is \"/user/\".",
                "+\t * <p>The default prefix is \"/user/\".",
                " \t * @param prefix the prefix to use",
                "@@ -83,3 +87,3 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                " \t\tAssert.hasText(prefix, \"prefix must not be empty\");",
                "-\t\tthis.destinationPrefix = prefix.endsWith(\"/\") ? prefix : prefix + \"/\";",
                "+\t\tthis.prefix = prefix.endsWith(\"/\") ? prefix : prefix + \"/\";",
                " \t}",
                "@@ -87,8 +91,6 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                " \t/**",
                "-\t * Return the prefix used to identify user destinations. Any destinations that do not",
                "-\t * start with the given prefix are not be resolved.",
                "-\t * <p>By default \"/user/queue/\".",
                "+\t * Return the configured prefix for user destinations.",
                " \t */",
                " \tpublic String getDestinationPrefix() {",
                "-\t\treturn this.destinationPrefix;",
                "+\t\treturn this.prefix;",
                " \t}",
                "@@ -96,43 +98,31 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                "-\t/**",
                "-\t * Return the configured {@link UserSessionRegistry}.",
                "-\t */",
                "-\tpublic UserSessionRegistry getUserSessionRegistry() {",
                "-\t\treturn this.userSessionRegistry;",
                "-\t}",
                "-",
                " \t@Override",
                " \tpublic UserDestinationResult resolveDestination(Message<?> message) {",
                "-\t\tString destination = SimpMessageHeaderAccessor.getDestination(message.getHeaders());",
                "-\t\tDestinationInfo info = parseUserDestination(message);",
                "-\t\tif (info == null) {",
                "+\t\tString sourceDestination = SimpMessageHeaderAccessor.getDestination(message.getHeaders());",
                "+\t\tParseResult parseResult = parse(message);",
                "+\t\tif (parseResult == null) {",
                " \t\t\treturn null;",
                " \t\t}",
                "-\t\tSet<String> resolved = new HashSet<String>();",
                "-\t\tfor (String sessionId : info.getSessionIds()) {",
                "-\t\t\tString targetDestination = getTargetDestination(",
                "-\t\t\t\t\tdestination, info.getDestinationWithoutPrefix(), sessionId, info.getUser());",
                "+\t\tString user = parseResult.getUser();",
                "+\t\tSet<String> targetSet = new HashSet<String>();",
                "+\t\tfor (String sessionId : parseResult.getSessionIds()) {",
                "+\t\t\tString actualDestination = parseResult.getActualDestination();",
                "+\t\t\tString targetDestination = getTargetDestination(sourceDestination, actualDestination, sessionId, user);",
                " \t\t\tif (targetDestination != null) {",
                "-\t\t\t\tresolved.add(targetDestination);",
                "+\t\t\t\ttargetSet.add(targetDestination);",
                " \t\t\t}",
                " \t\t}",
                "-\t\treturn new UserDestinationResult(destination, resolved, info.getSubscribeDestination(), info.getUser());",
                "+\t\tString subscribeDestination = parseResult.getSubscribeDestination();",
                "+\t\treturn new UserDestinationResult(sourceDestination, targetSet, subscribeDestination, user);",
                " \t}",
                "-\tprivate DestinationInfo parseUserDestination(Message<?> message) {",
                "+\tprivate ParseResult parse(Message<?> message) {",
                " \t\tMessageHeaders headers = message.getHeaders();",
                "-\t\tSimpMessageType messageType = SimpMessageHeaderAccessor.getMessageType(headers);",
                " \t\tString destination = SimpMessageHeaderAccessor.getDestination(headers);",
                "-\t\tPrincipal principal = SimpMessageHeaderAccessor.getUser(headers);",
                "-\t\tString sessionId = SimpMessageHeaderAccessor.getSessionId(headers);",
                "-",
                "-\t\tString destinationWithoutPrefix;",
                "-\t\tString subscribeDestination;",
                "-\t\tString user;",
                "-\t\tSet<String> sessionIds;",
                "-",
                "-\t\tif (destination == null || !checkDestination(destination, this.destinationPrefix)) {",
                "+\t\tif (destination == null || !checkDestination(destination, this.prefix)) {",
                " \t\t\treturn null;",
                " \t\t}",
                "-",
                "+\t\tSimpMessageType messageType = SimpMessageHeaderAccessor.getMessageType(headers);",
                "+\t\tPrincipal principal = SimpMessageHeaderAccessor.getUser(headers);",
                "+\t\tString sessionId = SimpMessageHeaderAccessor.getSessionId(headers);",
                " \t\tif (SimpMessageType.SUBSCRIBE.equals(messageType) || SimpMessageType.UNSUBSCRIBE.equals(messageType)) {",
                "@@ -142,15 +132,16 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                " \t\t\t}",
                "-\t\t\tdestinationWithoutPrefix = destination.substring(this.destinationPrefix.length()-1);",
                "-\t\t\tsubscribeDestination = destination;",
                "-\t\t\tuser = (principal != null ? principal.getName() : null);",
                "-\t\t\tsessionIds = Collections.singleton(sessionId);",
                "+\t\t\tint prefixEnd = this.prefix.length() - 1;",
                "+\t\t\tString actualDestination = destination.substring(prefixEnd);",
                "+\t\t\tString user = (principal != null ? principal.getName() : null);",
                "+\t\t\treturn new ParseResult(actualDestination, destination, Collections.singleton(sessionId), user);",
                " \t\t}",
                " \t\telse if (SimpMessageType.MESSAGE.equals(messageType)) {",
                "-\t\t\tint startIndex = this.destinationPrefix.length();",
                "-\t\t\tint endIndex = destination.indexOf('/', startIndex);",
                "-\t\t\tAssert.isTrue(endIndex > 0, \"Expected destination pattern \\\"/user/{userId}/**\\\"\");",
                "-\t\t\tdestinationWithoutPrefix = destination.substring(endIndex);",
                "-\t\t\tsubscribeDestination = this.destinationPrefix.substring(0, startIndex-1) + destinationWithoutPrefix;",
                "-\t\t\tuser = destination.substring(startIndex, endIndex);",
                "+\t\t\tint prefixEnd = this.prefix.length();",
                "+\t\t\tint userEnd = destination.indexOf('/', prefixEnd);",
                "+\t\t\tAssert.isTrue(userEnd > 0, \"Expected destination pattern \\\"/user/{userId}/**\\\"\");",
                "+\t\t\tString actualDestination = destination.substring(userEnd);",
                "+\t\t\tString subscribeDestination = this.prefix.substring(0, prefixEnd - 1) + actualDestination;",
                "+\t\t\tString user = destination.substring(prefixEnd, userEnd);",
                " \t\t\tuser = StringUtils.replace(user, \"%2F\", \"/\");",
                "+\t\t\tSet<String> sessionIds;",
                " \t\t\tif (user.equals(sessionId)) {",
                "@@ -159,3 +150,3 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                " \t\t\t}",
                "-\t\t\telse if (this.userSessionRegistry.getSessionIds(user).contains(sessionId)) {",
                "+\t\t\telse if (this.sessionRegistry.getSessionIds(user).contains(sessionId)) {",
                " \t\t\t\tsessionIds = Collections.singleton(sessionId);",
                "@@ -163,4 +154,5 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                " \t\t\telse {",
                "-\t\t\t\tsessionIds = this.userSessionRegistry.getSessionIds(user);",
                "+\t\t\t\tsessionIds = this.sessionRegistry.getSessionIds(user);",
                " \t\t\t}",
                "+\t\t\treturn new ParseResult(actualDestination, subscribeDestination, sessionIds, user);",
                " \t\t}",
                "@@ -169,3 +161,2 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                " \t\t}",
                "-\t\treturn new DestinationInfo(destinationWithoutPrefix, subscribeDestination, user, sessionIds);",
                " \t}",
                "@@ -177,15 +168,14 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                " \t/**",
                "-\t * This methods determines the translated destination to use based on the source",
                "-\t * destination, the source destination with the user prefix removed, a session",
                "-\t * id, and the user for the session (if known).",
                "-\t * @param sourceDestination the source destination of the input message",
                "-\t * @param sourceDestinationWithoutPrefix the source destination without the user prefix",
                "-\t * @param sessionId the id of the session for the target message",
                "-\t * @param user the user associated with the session, or {@code null}",
                "+\t * This method determines how to translate the source \"user\" destination to an",
                "+\t * actual target destination for the given active user session.",
                "+\t * @param sourceDestination the source destination from the input message.",
                "+\t * @param actualDestination a subset of the destination without any user prefix.",
                "+\t * @param sessionId the id of an active user session, never {@code null}.",
                "+\t * @param user the target user, possibly {@code null}, e.g if not authenticated.",
                " \t * @return a target destination, or {@code null} if none",
                " \t */",
                "-\tprotected String getTargetDestination(String sourceDestination,",
                "-\t\t\tString sourceDestinationWithoutPrefix, String sessionId, String user) {",
                "+\tprotected String getTargetDestination(String sourceDestination, String actualDestination,",
                "+\t\t\tString sessionId, String user) {",
                "-\t\treturn sourceDestinationWithoutPrefix + \"-user\" + sessionId;",
                "+\t\treturn actualDestination + \"-user\" + sessionId;",
                " \t}",
                "@@ -194,3 +184,3 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                " \tpublic String toString() {",
                "-\t\treturn \"DefaultUserDestinationResolver[prefix=\" + this.destinationPrefix + \"]\";",
                "+\t\treturn \"DefaultUserDestinationResolver[prefix=\" + this.prefix + \"]\";",
                " \t}",
                "@@ -198,5 +188,8 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                "-\tprivate static class DestinationInfo {",
                "+\t/**",
                "+\t * A temporary placeholder for a parsed source \"user\" destination.",
                "+\t */",
                "+\tprivate static class ParseResult {",
                "-\t\tprivate final String destinationWithoutPrefix;",
                "+\t\tprivate final String actualDestination;",
                "@@ -204,17 +197,17 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                "-\t\tprivate final String user;",
                "-",
                " \t\tprivate final Set<String> sessionIds;",
                "-\t\tpublic DestinationInfo(String destinationWithoutPrefix, String subscribeDestination, String user,",
                "-\t\t\t\tSet<String> sessionIds) {",
                "+\t\tprivate final String user;",
                "-\t\t\tthis.user = user;",
                "-\t\t\tthis.destinationWithoutPrefix = destinationWithoutPrefix;",
                "-\t\t\tthis.subscribeDestination = subscribeDestination;",
                "+",
                "+\t\tpublic ParseResult(String actualDest, String subscribeDest, Set<String> sessionIds, String user) {",
                "+\t\t\tthis.actualDestination = actualDest;",
                "+\t\t\tthis.subscribeDestination = subscribeDest;",
                " \t\t\tthis.sessionIds = sessionIds;",
                "+\t\t\tthis.user = user;",
                " \t\t}",
                "-\t\tpublic String getDestinationWithoutPrefix() {",
                "-\t\t\treturn this.destinationWithoutPrefix;",
                "+",
                "+\t\tpublic String getActualDestination() {",
                "+\t\t\treturn this.actualDestination;",
                " \t\t}",
                "@@ -225,6 +218,2 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                "-\t\tpublic String getUser() {",
                "-\t\t\treturn this.user;",
                "-\t\t}",
                "-",
                " \t\tpublic Set<String> getSessionIds() {",
                "@@ -233,6 +222,4 @@ public class DefaultUserDestinationResolver implements UserDestinationResolver {",
                "-\t\t@Override",
                "-\t\tpublic String toString() {",
                "-\t\t\treturn \"DestinationInfo[destination=\" + this.destinationWithoutPrefix + \", subscribeDestination=\" +",
                "-\t\t\t\t\tthis.subscribeDestination + \", user=\" + this.user + \", sessionIds=\" + this.sessionIds + \"]\";",
                "+\t\tpublic String getUser() {",
                "+\t\t\treturn this.user;",
                " \t\t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserSessionRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserSessionRegistry.java",
                "index f14136ce01..313cbeceff 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserSessionRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserSessionRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -43,3 +43,3 @@ public class DefaultUserSessionRegistry implements UserSessionRegistry {",
                " \t\tSet<String> set = this.userSessionIds.get(user);",
                "-\t\treturn (set != null) ? set : Collections.<String>emptySet();",
                "+\t\treturn (set != null ? set : Collections.<String>emptySet());",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DestinationUserNameProvider.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DestinationUserNameProvider.java",
                "index 8c0ac7d191..2ce6d8c808 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DestinationUserNameProvider.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/DestinationUserNameProvider.java",
                "@@ -1 +1,16 @@",
                "+/*",
                "+ * Copyright 2002-2015 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                " package org.springframework.messaging.simp.user;",
                "@@ -3,6 +18,5 @@ package org.springframework.messaging.simp.user;",
                " /**",
                "- * An interface to be implemented in addition to {@link java.security.Principal}",
                "- * when {@link java.security.Principal#getName()} is not globally unique enough",
                "- * for use in user destinations. For more on user destination see",
                "- * {@link org.springframework.messaging.simp.user.UserDestinationResolver}.",
                "+ * A {@link java.security.Principal} can also implement this contract when",
                "+ * {@link java.security.Principal#getName() getName()} isn't globally unique",
                "+ * and therefore not suited for use with \"user\" destinations.",
                "  *",
                "@@ -10,2 +24,3 @@ package org.springframework.messaging.simp.user;",
                "  * @since 4.0.1",
                "+ * @see org.springframework.messaging.simp.user.UserDestinationResolver",
                "  */",
                "@@ -13,5 +28,4 @@ public interface DestinationUserNameProvider {",
                "-",
                " \t/**",
                "-\t * Return the (globally unique) user name to use with user destinations.",
                "+\t * Return a globally unique user name for use with \"user\" destinations.",
                " \t */",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "index 56b810bdf6..2223af3dba 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -37,7 +37,7 @@ import org.springframework.util.Assert;",
                " /**",
                "- * Provides support for messages sent to \"user\" destinations, translating the",
                "- * destination to one or more user-specific destination(s) and then sending message(s)",
                "- * with the updated target destination using the provided messaging template.",
                "- * <p>",
                "- * See {@link UserDestinationResolver} for more details and examples.",
                "+ * {@code MessageHandler} with support for \"user\" destinations.",
                "+ *",
                "+ * <p>Listens for messages with \"user\" destinations, translates their destination",
                "+ * to actual target destinations unique to the active session(s) of a user, and",
                "+ * then sends the resolved messages to the broker channel to be delivered.",
                "  *",
                "@@ -55,5 +55,5 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                "-\tprivate final MessageSendingOperations<String> brokerMessagingTemplate;",
                "+\tprivate final MessageSendingOperations<String> messagingTemplate;",
                "-\tprivate final UserDestinationResolver userDestinationResolver;",
                "+\tprivate final UserDestinationResolver destinationResolver;",
                "@@ -67,19 +67,20 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \t/**",
                "-\t * Create an instance of the handler with the given messaging template and a",
                "-\t * user destination resolver.",
                "-\t * @param clientInChannel the channel for receiving messages from clients (e.g. WebSocket clients)",
                "-\t * @param brokerChannel the channel for sending messages with translated user destinations",
                "-\t * @param userDestinationResolver the resolver to use to find queue suffixes for a user",
                "+\t * Create an instance with the given client and broker channels subscribing",
                "+\t * to handle messages from each and then sending any resolved messages to the",
                "+\t * broker channel.",
                "+\t * @param clientInboundChannel messages received from clients.",
                "+\t * @param brokerChannel messages sent to the broker.",
                "+\t * @param resolver the resolver for \"user\" destinations.",
                " \t */",
                "-\tpublic UserDestinationMessageHandler(SubscribableChannel clientInChannel,",
                "-\t\t\tSubscribableChannel brokerChannel, UserDestinationResolver userDestinationResolver) {",
                "+\tpublic UserDestinationMessageHandler(SubscribableChannel clientInboundChannel,",
                "+\t\t\tSubscribableChannel brokerChannel, UserDestinationResolver resolver) {",
                "-\t\tAssert.notNull(clientInChannel, \"'clientInChannel' must not be null\");",
                "+\t\tAssert.notNull(clientInboundChannel, \"'clientInChannel' must not be null\");",
                " \t\tAssert.notNull(brokerChannel, \"'brokerChannel' must not be null\");",
                "-\t\tAssert.notNull(userDestinationResolver, \"DestinationResolver must not be null\");",
                "+\t\tAssert.notNull(resolver, \"resolver must not be null\");",
                "-\t\tthis.clientInboundChannel = clientInChannel;",
                "+\t\tthis.clientInboundChannel = clientInboundChannel;",
                " \t\tthis.brokerChannel = brokerChannel;",
                "-\t\tthis.brokerMessagingTemplate = new SimpMessagingTemplate(brokerChannel);",
                "-\t\tthis.userDestinationResolver = userDestinationResolver;",
                "+\t\tthis.messagingTemplate = new SimpMessagingTemplate(brokerChannel);",
                "+\t\tthis.destinationResolver = resolver;",
                " \t}",
                "@@ -88,7 +89,6 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \t/**",
                "-\t * Return the configured messaging template for sending messages with",
                "-\t * translated destinations.",
                "+\t * Return the configured {@link UserDestinationResolver}.",
                " \t */",
                "-\tpublic MessageSendingOperations<String> getBrokerMessagingTemplate() {",
                "-\t\treturn this.brokerMessagingTemplate;",
                "+\tpublic UserDestinationResolver getUserDestinationResolver() {",
                "+\t\treturn this.destinationResolver;",
                " \t}",
                "@@ -96,6 +96,7 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \t/**",
                "-\t * Return the configured {@link UserDestinationResolver}.",
                "+\t * Return the messaging template used to send resolved messages to the",
                "+\t * broker channel.",
                " \t */",
                "-\tpublic UserDestinationResolver getUserDestinationResolver() {",
                "-\t\treturn this.userDestinationResolver;",
                "+\tpublic MessageSendingOperations<String> getBrokerMessagingTemplate() {",
                "+\t\treturn this.messagingTemplate;",
                " \t}",
                "@@ -103,7 +104,5 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \t/**",
                "-\t * Configure a {@link MessageHeaderInitializer} to pass on to",
                "-\t * {@link org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandler}s",
                "-\t * that send messages from controller return values.",
                "-\t *",
                "-\t * <p>By default this property is not set.",
                "+\t * Configure a custom {@link MessageHeaderInitializer} to initialize the",
                "+\t * headers of resolved target messages.",
                "+\t * <p>By default this is not set.",
                " \t */",
                "@@ -114,3 +113,3 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \t/**",
                "-\t * @return the configured header initializer.",
                "+\t * Return the configured header initializer.",
                " \t */",
                "@@ -167,3 +166,3 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \tpublic void handleMessage(Message<?> message) throws MessagingException {",
                "-\t\tUserDestinationResult result = this.userDestinationResolver.resolveDestination(message);",
                "+\t\tUserDestinationResult result = this.destinationResolver.resolveDestination(message);",
                " \t\tif (result == null) {",
                "@@ -179,7 +178,7 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \t\tif (SimpMessageType.MESSAGE.equals(SimpMessageHeaderAccessor.getMessageType(message.getHeaders()))) {",
                "-\t\t\tSimpMessageHeaderAccessor headerAccessor = SimpMessageHeaderAccessor.wrap(message);",
                "-\t\t\tinitHeaders(headerAccessor);",
                "+\t\t\tSimpMessageHeaderAccessor accessor = SimpMessageHeaderAccessor.wrap(message);",
                "+\t\t\tinitHeaders(accessor);",
                " \t\t\tString header = SimpMessageHeaderAccessor.ORIGINAL_DESTINATION;",
                "-\t\t\theaderAccessor.setNativeHeader(header, result.getSubscribeDestination());",
                "-\t\t\tmessage = MessageBuilder.createMessage(message.getPayload(), headerAccessor.getMessageHeaders());",
                "+\t\t\taccessor.setNativeHeader(header, result.getSubscribeDestination());",
                "+\t\t\tmessage = MessageBuilder.createMessage(message.getPayload(), accessor.getMessageHeaders());",
                " \t\t}",
                "@@ -189,3 +188,3 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \t\tfor (String destination : destinations) {",
                "-\t\t\tthis.brokerMessagingTemplate.send(destination, message);",
                "+\t\t\tthis.messagingTemplate.send(destination, message);",
                " \t\t}",
                "@@ -201,3 +200,3 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \tpublic String toString() {",
                "-\t\treturn \"UserDestinationMessageHandler[\" + this.userDestinationResolver + \"]\";",
                "+\t\treturn \"UserDestinationMessageHandler[\" + this.destinationResolver + \"]\";",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResolver.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResolver.java",
                "index ede147bfa3..2354c05f31 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResolver.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -21,13 +21,10 @@ import org.springframework.messaging.Message;",
                " /**",
                "- * A strategy for resolving a \"user\" destination and translating it to one or more",
                "- * actual destinations unique to the user's active session(s).",
                "- * <p>",
                "- * For messages sent to a user, the destination must contain the name of the target",
                "- * user, The name, extracted from the destination, is used to look up the active",
                "- * user session(s), and then translate the destination accordingly.",
                "- * <p>",
                "- * For SUBSCRIBE and UNSUBSCRIBE messages, the user is the user associated with",
                "- * the message. In other words the destination does not contain the user name.",
                "- * <p>",
                "- * See the documentation on implementations for specific examples.",
                "+ * A strategy for resolving a \"user\" destination by translating it to one or more",
                "+ * actual destinations one per active user session. When sending a message to a",
                "+ * user destination, the destination must contain the user name so it may be",
                "+ * extracted and used to look up the user sessions. When subscribing to a user",
                "+ * destination, the destination does not have to contain the user's own name.",
                "+ * We simply use the current session.",
                "+ *",
                "+ * <p>See implementation classes and the documentation for example destinations.",
                "  *",
                "@@ -42,14 +39,7 @@ public interface UserDestinationResolver {",
                " \t/**",
                "-\t * Resolve the destination of the message to a set of actual target destinations.",
                "-\t * <p>",
                "-\t * If the message is SUBSCRIBE/UNSUBSCRIBE, the returned set will contain a",
                "-\t * single translated target destination.",
                "-\t * <p>",
                "-\t * If the message represents data being sent to a user, the returned set may",
                "-\t * contain multiple target destinations, one for each active user session.",
                "-\t *",
                "-\t * @param message the message with a user destination to be resolved",
                "-\t *",
                "-\t * @return the result of the resolution, or {@code null} if the resolution",
                "-\t * \tfails (e.g. not a user destination, or no user info available, etc)",
                "+\t * Resolve the given message with a user destination to one or more messages",
                "+\t * with actual destinations, one for each active user session.",
                "+\t * @param message the message to try to resolve",
                "+\t * @return 0 or more target messages (one for each active session), or",
                "+\t * {@code null} if the source message does not contain a user destination.",
                " \t */",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResult.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResult.java",
                "index 16c7dd16fc..4d7765a945 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResult.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResult.java",
                "@@ -23,5 +23,4 @@ import org.springframework.util.Assert;",
                " /**",
                "- * A simple container for the result of parsing and translating a \"user\" destination",
                "- * in some source message into a set of actual target destinations by calling",
                "- * {@link org.springframework.messaging.simp.user.UserDestinationResolver}.",
                "+ * Contains the result from parsing a \"user\" destination from a source message",
                "+ * and translating it to target destinations (one per active user session).",
                "  *",
                "@@ -29,2 +28,3 @@ import org.springframework.util.Assert;",
                "  * @since 4.0.2",
                "+ * @see org.springframework.messaging.simp.user.UserDestinationResolver",
                "  */",
                "@@ -56,5 +56,6 @@ public class UserDestinationResult {",
                " \t/**",
                "-\t * The \"user\" destination as found in the headers of the source message.",
                "-\t *",
                "-\t * @return a destination, never {@code null}",
                "+\t * The \"user\" destination from the source message. This may look like",
                "+\t * \"/user/queue/position-updates\" when subscribing or",
                "+\t * \"/user/{username}/queue/position-updates\" when sending a message.",
                "+\t * @return the \"user\" destination, never {@code null}.",
                " \t */",
                "@@ -65,6 +66,6 @@ public class UserDestinationResult {",
                " \t/**",
                "-\t * The result of parsing the source destination and translating it into a set",
                "-\t * of actual target destinations to use.",
                "-\t *",
                "-\t * @return a set of destination values, possibly an empty set",
                "+\t * The target destinations that the source destination was translated to,",
                "+\t * one per active user session, e.g. \"/queue/position-updates-useri9oqdfzo\".",
                "+\t * @return the target destinations, never {@code null} but possibly an empty",
                "+\t * set if there are no active sessions for the user.",
                " \t */",
                "@@ -75,7 +76,5 @@ public class UserDestinationResult {",
                " \t/**",
                "-\t * The canonical form of the user destination as would be required to subscribe.",
                "-\t * This may be useful to ensure that messages received by clients contain the",
                "-\t * original destination they used to subscribe.",
                "-\t *",
                "-\t * @return a destination, never {@code null}",
                "+\t * The user destination in the form expected when a client subscribes, e.g.",
                "+\t * \"/user/queue/position-updates\".",
                "+\t * @return the subscribe form of the \"user\" destination, never {@code null}.",
                " \t */",
                "@@ -86,5 +85,7 @@ public class UserDestinationResult {",
                " \t/**",
                "-\t * The user associated with the user destination.",
                "-\t *",
                "-\t * @return the user name, never {@code null}",
                "+\t * The user for this user destination.",
                "+\t * @return the user name or {@code null} if we have a session id only such as",
                "+\t * when the user is not authenticated; in such cases it is possible to use",
                "+\t * sessionId in place of a user name thus removing the need for a user-to-session",
                "+\t * lookup via {@link org.springframework.messaging.simp.user.UserSessionRegistry}.",
                " \t */",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserSessionRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserSessionRegistry.java",
                "index f23da3e530..05b780b816 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserSessionRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserSessionRegistry.java",
                "@@ -1 +1,17 @@",
                "+/*",
                "+ * Copyright 2002-2015 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                " package org.springframework.messaging.simp.user;",
                "@@ -5,6 +21,4 @@ import java.util.Set;",
                " /**",
                "- * A registry for looking up active session id's by user.",
                "- *",
                "- * <p>Used in support of resolving unique session-specific user destinations.",
                "- * See {@link DefaultUserDestinationResolver} for more details.",
                "+ * A registry for looking up active user sessions. For use when resolving user",
                "+ * destinations.",
                "  *",
                "@@ -16,8 +30,6 @@ public interface UserSessionRegistry {",
                "-",
                "-",
                " \t/**",
                "-\t * Return the active session id's for the given user.",
                "+\t * Return the active session id's for the user.",
                " \t * @param user the user",
                "-\t * @return a set with 0 or more session id's",
                "+\t * @return a set with 0 or more session id's, never {@code null}.",
                " \t */",
                "@@ -26,3 +38,3 @@ public interface UserSessionRegistry {",
                " \t/**",
                "-\t * Register an active session id for the given user.",
                "+\t * Register an active session id for a user.",
                " \t * @param user the user",
                "@@ -33,3 +45,3 @@ public interface UserSessionRegistry {",
                " \t/**",
                "-\t * Unregister the session id for a user.",
                "+\t * Unregister an active session id for a user.",
                " \t * @param user the user"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserSessionRegistry.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/DestinationUserNameProvider.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResolver.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResult.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserSessionRegistry.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: WebSocket",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/simp/user/DestinationUserNameProvider.java, spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserDestinationResolver.java, spring-messaging/src/main/java/org/springframework/messaging/simp/user/DefaultUserSessionRegistry.java, spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResult.java, spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java, spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserSessionRegistry.java, spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationResolver.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: user",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: user, message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d512cca3fde8759490abdc7222f54cb096a8097a",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521560514,
            "hunks": 20,
            "message": "Reactor2TcpClient constructor with address supplier Issue: SPR-12452",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java",
                "index b6fbfef02e..dbc1051074 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,2 +21,4 @@ import org.springframework.messaging.SubscribableChannel;",
                " import org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler;",
                "+import org.springframework.messaging.tcp.TcpOperations;",
                "+import org.springframework.messaging.tcp.reactor.Reactor2TcpClient;",
                " import org.springframework.util.Assert;",
                "@@ -49,2 +51,4 @@ public class StompBrokerRelayRegistration extends AbstractBrokerRegistration {",
                "+\tprivate TcpOperations<byte[]> tcpClient;",
                "+",
                " \tprivate boolean autoStartup = true;",
                "@@ -162,2 +166,14 @@ public class StompBrokerRelayRegistration extends AbstractBrokerRegistration {",
                "+\t/**",
                "+\t * Configure a TCP client for managing TCP connections to the STOMP broker.",
                "+\t * By default {@link Reactor2TcpClient} is used.",
                "+\t * <p><strong>Note:</strong> when this property is used, any",
                "+\t * {@link #setRelayHost(String) host} or {@link #setRelayPort(int) port}",
                "+\t * specified are effectively ignored.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tpublic void setTcpClient(TcpOperations<byte[]> tcpClient) {",
                "+\t\tthis.tcpClient = tcpClient;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -233,2 +249,5 @@ public class StompBrokerRelayRegistration extends AbstractBrokerRegistration {",
                " \t\t}",
                "+\t\tif (this.tcpClient != null) {",
                "+\t\t\thandler.setTcpClient(this.tcpClient);",
                "+\t\t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "index 84e8a05520..6f0bff4487 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "@@ -336,2 +336,5 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                " \t * By default {@link Reactor2TcpClient} is used.",
                "+\t * <p><strong>Note:</strong> when this property is used, any",
                "+\t * {@link #setRelayHost(String) host} or {@link #setRelayPort(int) port}",
                "+\t * specified are effectively ignored.",
                " \t */",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "index 0b8106aa6f..c44e3f80ac 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -37,2 +37,3 @@ import reactor.fn.Consumer;",
                " import reactor.fn.Function;",
                "+import reactor.fn.Supplier;",
                " import reactor.fn.tuple.Tuple;",
                "@@ -67,6 +68,6 @@ import org.springframework.util.concurrent.ListenableFuture;",
                "  * An implementation of {@link org.springframework.messaging.tcp.TcpOperations}",
                "- * based on the TCP client support of the Reactor project.",
                "+ * based on the TCP client support of project Reactor.",
                "  *",
                "- * <p>This implementation wraps N (Reactor) clients for N {@link #connect} calls,",
                "- * i.e. a separate (Reactor) client instance for each connection.",
                "+ * <p>This implementation wraps N Reactor {@code TcpClient} instances created",
                "+ * for N {@link #connect} calls, i.e. once instance per connection.",
                "  *",
                "@@ -102,4 +103,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t * threads will be shared amongst the active clients.",
                "-\t * <p>Also see the constructor accepting a ready Reactor",
                "-\t * {@link TcpClientSpec} {@link Function} factory.",
                "+\t *",
                " \t * @param host the host to connect to",
                "@@ -109,2 +109,18 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \tpublic Reactor2TcpClient(final String host, final int port, final Codec<Buffer, Message<P>, Message<P>> codec) {",
                "+\t\tthis(new FixedAddressSupplier(host, port), codec);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * A variant of {@link #Reactor2TcpClient(String, int, Codec)} that takes a",
                "+\t * supplier of any number of addresses instead of just one host and port.",
                "+\t * This can be used to {@link #connect(TcpConnectionHandler, ReconnectStrategy)",
                "+\t * reconnect} to a different address after the current host becomes unavailable.",
                "+\t *",
                "+\t * @param addressSupplier supplier of addresses to use for connecting",
                "+\t * @param codec the codec to use for encoding and decoding the TCP stream",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tpublic Reactor2TcpClient(final Supplier<InetSocketAddress> addressSupplier,",
                "+\t\t\tfinal Codec<Buffer, Message<P>, Message<P>> codec) {",
                "+",
                " \t\t// Reactor 2.0.5 requires NioEventLoopGroup vs 2.0.6+ requires EventLoopGroup",
                "@@ -120,3 +136,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t\t\t\t\t.codec(codec)",
                "-\t\t\t\t\t\t.connect(host, port)",
                "+\t\t\t\t\t\t.connect(addressSupplier)",
                " \t\t\t\t\t\t.options(createClientSocketOptions());",
                "@@ -135,6 +151,9 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t * the generated client configuration.",
                "+\t *",
                " \t * <p><strong>NOTE:</strong> if the client is configured with a thread-creating",
                "-\t * dispatcher, you are responsible for cleaning them, e.g. using",
                "+\t * dispatcher, you are responsible for cleaning them, e.g. via",
                " \t * {@link reactor.core.Dispatcher#shutdown}.",
                "-\t * @param tcpClientSpecFactory the TcpClientSpec {@link Function} to use for each client creation",
                "+\t *",
                "+\t * @param tcpClientSpecFactory the TcpClientSpec {@link Function} to use for",
                "+\t * each client creation",
                " \t */",
                "@@ -297,2 +316,17 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "+\tprivate static class FixedAddressSupplier implements Supplier<InetSocketAddress> {",
                "+",
                "+\t\tprivate final InetSocketAddress address;",
                "+",
                "+\t\tFixedAddressSupplier(String host, int port) {",
                "+\t\t\tthis.address = new InetSocketAddress(host, port);",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic InetSocketAddress get() {",
                "+\t\t\treturn this.address;",
                "+\t\t}",
                "+\t}",
                "+",
                "+",
                " \tprivate static class SynchronousDispatcherConfigReader implements ConfigurationReader {",
                "diff --git a/src/asciidoc/web-websocket.adoc b/src/asciidoc/web-websocket.adoc",
                "index a13c0d64f1..53db293fbc 100644",
                "--- a/src/asciidoc/web-websocket.adoc",
                "+++ b/src/asciidoc/web-websocket.adoc",
                "@@ -1617,4 +1617,4 @@ The STOMP broker relay always sets the `login` and `passcode` headers on every `",
                " frame that it forwards to the broker on behalf of clients. Therefore WebSocket clients",
                "-need not set those headers; they will be ignored. As the following section explains,",
                "-instead WebSocket clients should rely on HTTP authentication to protect the WebSocket",
                "+need not set those headers; they will be ignored. As the <<websocket-stomp-authentication>>",
                "+explains, instead WebSocket clients should rely on HTTP authentication to protect the WebSocket",
                " endpoint and establish the client identity.",
                "@@ -1628,5 +1628,3 @@ until it succeeds.",
                "-[NOTE]",
                "-====",
                "-A Spring bean can implement `ApplicationListener<BrokerAvailabilityEvent>` in order",
                "+Any Spring bean can implement `ApplicationListener<BrokerAvailabilityEvent>` in order",
                " to receive notifications when the \"system\" connection to the broker is lost and",
                "@@ -1634,3 +1632,39 @@ re-established. For example a Stock Quote service broadcasting stock quotes can",
                " stop trying to send messages when there is no active \"system\" connection.",
                "-====",
                "+",
                "+By default, the STOMP broker relay always connects, and reconnects as needed if",
                "+connectivity is lost, to the same host and port. If you wish to supply multiple addresses,",
                "+on each attempt to connect, you can configure a supplier of addresses, instead of a",
                "+fixed host and port. For example:",
                "+",
                "+[source,java,indent=0]",
                "+[subs=\"verbatim,quotes\"]",
                "+----",
                "+@Configuration",
                "+@EnableWebSocketMessageBroker",
                "+public class WebSocketConfig extends AbstractWebSocketMessageBrokerConfigurer {",
                "+",
                "+\t// ...",
                "+",
                "+\t@Override",
                "+\tpublic void configureMessageBroker(MessageBrokerRegistry registry) {",
                "+\t\tregistry.enableStompBrokerRelay(\"/queue/\", \"/topic/\").setTcpClient(createTcpClient());",
                "+\t\tregistry.setApplicationDestinationPrefixes(\"/app\");",
                "+\t}",
                "+",
                "+\tprivate Reactor2TcpClient<byte[]> createTcpClient() {",
                "+",
                "+\t\tSupplier<InetSocketAddress> addressSupplier = new Supplier<InetSocketAddress>() {",
                "+\t\t\t@Override",
                "+\t\t\tpublic InetSocketAddress get() {",
                "+\t\t\t\t// Select address to connect to ...",
                "+\t\t\t}",
                "+\t\t};",
                "+",
                "+\t\tStompDecoder decoder = new StompDecoder();",
                "+\t\tReactor2StompCodec codec = new Reactor2StompCodec(new StompEncoder(), decoder);",
                "+\t\treturn new Reactor2TcpClient<>(addressSupplier, codec);",
                "+\t}",
                "+",
                "+}",
                "+----"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "src/asciidoc/web-websocket.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "88a17a4b10a110eee9c30585999a275ccffa3c17"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: STOMP, WebSocket",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/simp/config/StompBrokerRelayRegistration.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java, spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, src/asciidoc/web-websocket.adoc",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: broker, websocket, stomp, message",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b8c92ce9319a5baa71dd4dba1065be19e64cbb37",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521123475,
            "hunks": 56,
            "message": "Consistent volatile access to running flag in Lifecycle implementations Issue: SPR-16596 Issue: SPR-16488 (cherry picked from commit d4a8f76)",
            "diff": [
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java",
                "index 0de5f39a8d..c701c3ae43 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -78,3 +78,3 @@ public abstract class AbstractJmsListeningContainer extends JmsDestinationAccess",
                "-\tprivate boolean running = false;",
                "+\tprivate volatile boolean running = false;",
                "@@ -346,5 +346,3 @@ public abstract class AbstractJmsListeningContainer extends JmsDestinationAccess",
                " \tpublic final boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn (this.running && runningAllowed());",
                "-\t\t}",
                "+\t\treturn (this.running && runningAllowed());",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java",
                "index 814ab49527..1c67f32f9d 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -113,6 +113,6 @@ public class SimpAnnotationMethodMessageHandler extends AbstractMethodMessageHan",
                "-\tprivate final Object lifecycleMonitor = new Object();",
                "-",
                " \tprivate volatile boolean running = false;",
                "+\tprivate final Object lifecycleMonitor = new Object();",
                "+",
                "@@ -300,5 +300,3 @@ public class SimpAnnotationMethodMessageHandler extends AbstractMethodMessageHan",
                " \tpublic final boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java",
                "index af7690661d..eb17ff80e1 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -155,5 +155,3 @@ public abstract class AbstractBrokerMessageHandler",
                " \t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\tif (logger.isInfoEnabled()) {",
                "-\t\t\t\tlogger.info(\"Starting...\");",
                "-\t\t\t}",
                "+\t\t\tlogger.info(\"Starting...\");",
                " \t\t\tthis.clientInboundChannel.subscribe(this);",
                "@@ -175,5 +173,3 @@ public abstract class AbstractBrokerMessageHandler",
                " \t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\tif (logger.isInfoEnabled()) {",
                "-\t\t\t\tlogger.info(\"Stopping...\");",
                "-\t\t\t}",
                "+\t\t\tlogger.info(\"Stopping...\");",
                " \t\t\tstopInternal();",
                "@@ -208,5 +204,3 @@ public abstract class AbstractBrokerMessageHandler",
                " \tpublic final boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "index 77a3528983..c6383aff04 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -66,6 +66,6 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                "-\tprivate final Object lifecycleMonitor = new Object();",
                "-",
                " \tprivate volatile boolean running = false;",
                "+\tprivate final Object lifecycleMonitor = new Object();",
                "+",
                "@@ -182,5 +182,3 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \tpublic final boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-tx/src/main/java/org/springframework/jca/endpoint/GenericMessageEndpointManager.java b/spring-tx/src/main/java/org/springframework/jca/endpoint/GenericMessageEndpointManager.java",
                "index 61253e025c..f88326a43a 100644",
                "--- a/spring-tx/src/main/java/org/springframework/jca/endpoint/GenericMessageEndpointManager.java",
                "+++ b/spring-tx/src/main/java/org/springframework/jca/endpoint/GenericMessageEndpointManager.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -158,3 +158,3 @@ public class GenericMessageEndpointManager implements SmartLifecycle, Initializi",
                "-\tprivate boolean running = false;",
                "+\tprivate volatile boolean running = false;",
                "@@ -320,5 +320,3 @@ public class GenericMessageEndpointManager implements SmartLifecycle, Initializi",
                " \tpublic boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java b/spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java",
                "index 7146a59395..f5638ea833 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -40,3 +40,2 @@ public abstract class ConnectionManagerSupport implements SmartLifecycle {",
                "-",
                " \tprivate final URI uri;",
                "@@ -45,6 +44,6 @@ public abstract class ConnectionManagerSupport implements SmartLifecycle {",
                "-\tprivate boolean running = false;",
                "-",
                " \tprivate int phase = Integer.MAX_VALUE;",
                "+\tprivate volatile boolean running = false;",
                "+",
                " \tprivate final Object lifecycleMonitor = new Object();",
                "@@ -163,5 +162,3 @@ public abstract class ConnectionManagerSupport implements SmartLifecycle {",
                " \tpublic boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java b/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "index d0cd29afa5..813c9ca15c 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -62,4 +62,2 @@ public class JettyWebSocketClient extends AbstractWebSocketClient implements Lif",
                "-\tprivate final Object lifecycleMonitor = new Object();",
                "-",
                " \tprivate AsyncListenableTaskExecutor taskExecutor = new SimpleAsyncTaskExecutor();",
                "@@ -101,8 +99,2 @@ public class JettyWebSocketClient extends AbstractWebSocketClient implements Lif",
                "-\t@Override",
                "-\tpublic boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.client.isStarted();",
                "-\t\t}",
                "-\t}",
                "@@ -110,14 +102,7 @@ public class JettyWebSocketClient extends AbstractWebSocketClient implements Lif",
                " \tpublic void start() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\tif (!isRunning()) {",
                "-\t\t\t\ttry {",
                "-\t\t\t\t\tif (logger.isInfoEnabled()) {",
                "-\t\t\t\t\t\tlogger.info(\"Starting Jetty WebSocketClient\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\tthis.client.start();",
                "-\t\t\t\t}",
                "-\t\t\t\tcatch (Exception ex) {",
                "-\t\t\t\t\tthrow new IllegalStateException(\"Failed to start Jetty client\", ex);",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "+\t\ttry {",
                "+\t\t\tthis.client.start();",
                "+\t\t}",
                "+\t\tcatch (Exception ex) {",
                "+\t\t\tthrow new IllegalStateException(\"Failed to start Jetty WebSocketClient\", ex);",
                " \t\t}",
                "@@ -127,14 +112,7 @@ public class JettyWebSocketClient extends AbstractWebSocketClient implements Lif",
                " \tpublic void stop() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\tif (isRunning()) {",
                "-\t\t\t\ttry {",
                "-\t\t\t\t\tif (logger.isInfoEnabled()) {",
                "-\t\t\t\t\t\tlogger.info(\"Stopping Jetty WebSocketClient\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\tthis.client.stop();",
                "-\t\t\t\t}",
                "-\t\t\t\tcatch (Exception ex) {",
                "-\t\t\t\t\tlogger.error(\"Error stopping Jetty WebSocketClient\", ex);",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "+\t\ttry {",
                "+\t\t\tthis.client.stop();",
                "+\t\t}",
                "+\t\tcatch (Exception ex) {",
                "+\t\t\tlogger.error(\"Failed to stop Jetty WebSocketClient\", ex);",
                " \t\t}",
                "@@ -142,2 +120,8 @@ public class JettyWebSocketClient extends AbstractWebSocketClient implements Lif",
                "+\t@Override",
                "+\tpublic boolean isRunning() {",
                "+\t\treturn this.client.isStarted();",
                "+\t}",
                "+",
                "+",
                " \t@Override",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java",
                "index 15e47e2002..fce06bdb9b 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java",
                "@@ -104,6 +104,6 @@ public class SubProtocolWebSocketHandler",
                "-\tprivate final Object lifecycleMonitor = new Object();",
                "-",
                " \tprivate volatile boolean running = false;",
                "+\tprivate final Object lifecycleMonitor = new Object();",
                "+",
                "@@ -281,5 +281,3 @@ public class SubProtocolWebSocketHandler",
                " \tpublic final boolean isRunning() {",
                "-\t\tsynchronized (this.lifecycleMonitor) {",
                "-\t\t\treturn this.running;",
                "-\t\t}",
                "+\t\treturn this.running;",
                " \t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java",
                "index 3623508253..baa6aedb21 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -74,3 +74,2 @@ public class WebSocketStompClient extends StompClientSupport implements SmartLif",
                "-",
                " \tprivate final WebSocketClient webSocketClient;",
                "@@ -81,6 +80,6 @@ public class WebSocketStompClient extends StompClientSupport implements SmartLif",
                "-\tprivate boolean running = false;",
                "-",
                " \tprivate int phase = Integer.MAX_VALUE;",
                "+\tprivate volatile boolean running = false;",
                "+",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java",
                "index e4b23ff71c..24e3b84f85 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java",
                "@@ -188,6 +188,2 @@ public abstract class AbstractHandshakeHandler implements HandshakeHandler, Life",
                "-\t@Override",
                "-\tpublic boolean isRunning() {",
                "-\t\treturn this.running;",
                "-\t}",
                "@@ -221,2 +217,7 @@ public abstract class AbstractHandshakeHandler implements HandshakeHandler, Life",
                "+\t@Override",
                "+\tpublic boolean isRunning() {",
                "+\t\treturn this.running;",
                "+\t}",
                "+",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java",
                "index ae814653d9..b097d3e8db 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,3 +23,2 @@ import java.util.List;",
                " import java.util.Map;",
                "-",
                " import javax.servlet.ServletContext;",
                "@@ -121,6 +120,2 @@ public class WebSocketHttpRequestHandler implements HttpRequestHandler, Lifecycl",
                "-\t@Override",
                "-\tpublic boolean isRunning() {",
                "-\t\treturn this.running;",
                "-\t}",
                "@@ -146,2 +141,7 @@ public class WebSocketHttpRequestHandler implements HttpRequestHandler, Lifecycl",
                "+\t@Override",
                "+\tpublic boolean isRunning() {",
                "+\t\treturn this.running;",
                "+\t}",
                "+",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java",
                "index c6c6b9dc1e..987e62ae79 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -66,4 +66,3 @@ public abstract class AbstractXhrTransport implements XhrTransport {",
                " \tpublic List<TransportType> getTransportTypes() {",
                "-\t\treturn (isXhrStreamingDisabled() ?",
                "-\t\t\t\tCollections.singletonList(TransportType.XHR) :",
                "+\t\treturn (isXhrStreamingDisabled() ? Collections.singletonList(TransportType.XHR) :",
                " \t\t\t\tArrays.asList(TransportType.XHR_STREAMING, TransportType.XHR));",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "index 80297452eb..18b0e466a1 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -22,2 +22,4 @@ import java.nio.ByteBuffer;",
                " import java.util.Enumeration;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "@@ -85,3 +87,3 @@ public class JettyXhrTransport extends AbstractXhrTransport implements Lifecycle",
                " \t\tcatch (Exception ex) {",
                "-\t\t\tthrow new SockJsException(\"Failed to start \" + this, ex);",
                "+\t\t\tthrow new SockJsException(\"Failed to start JettyXhrTransport\", ex);",
                " \t\t}",
                "@@ -97,3 +99,3 @@ public class JettyXhrTransport extends AbstractXhrTransport implements Lifecycle",
                " \t\tcatch (Exception ex) {",
                "-\t\t\tthrow new SockJsException(\"Failed to stop \" + this, ex);",
                "+\t\t\tthrow new SockJsException(\"Failed to stop JettyXhrTransport\", ex);",
                " \t\t}",
                "@@ -158,5 +160,5 @@ public class JettyXhrTransport extends AbstractXhrTransport implements Lifecycle",
                " \tprivate static void addHttpHeaders(Request request, HttpHeaders headers) {",
                "-\t\tfor (String name : headers.keySet()) {",
                "-\t\t\tfor (String value : headers.get(name)) {",
                "-\t\t\t\trequest.header(name, value);",
                "+\t\tfor (Map.Entry<String, List<String>> entry : headers.entrySet()) {",
                "+\t\t\tfor (String value : entry.getValue()) {",
                "+\t\t\t\trequest.header(entry.getKey(), value);",
                " \t\t\t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java",
                "index 465762f4ef..99d39c3c72 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java",
                "@@ -80,3 +80,3 @@ public class TransportHandlingSockJsService extends AbstractSockJsService implem",
                "-\tprivate boolean running;",
                "+\tprivate volatile boolean running;",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java",
                "index 6915512068..7a66b6c16e 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,2 @@ package org.springframework.web.socket.sockjs.transport.handler;",
                " import java.util.Map;",
                "-",
                " import javax.servlet.ServletContext;",
                "@@ -55,3 +54,3 @@ public class WebSocketTransportHandler extends AbstractTransportHandler",
                "-\tprivate boolean running;",
                "+\tprivate volatile boolean running;",
                "@@ -59,3 +58,3 @@ public class WebSocketTransportHandler extends AbstractTransportHandler",
                " \tpublic WebSocketTransportHandler(HandshakeHandler handshakeHandler) {",
                "-\t\tAssert.notNull(handshakeHandler, \"handshakeHandler must not be null\");",
                "+\t\tAssert.notNull(handshakeHandler, \"HandshakeHandler must not be null\");",
                " \t\tthis.handshakeHandler = handshakeHandler;",
                "@@ -80,6 +79,2 @@ public class WebSocketTransportHandler extends AbstractTransportHandler",
                "-\t@Override",
                "-\tpublic boolean isRunning() {",
                "-\t\treturn this.running;",
                "-\t}",
                "@@ -105,2 +100,8 @@ public class WebSocketTransportHandler extends AbstractTransportHandler",
                "+\t@Override",
                "+\tpublic boolean isRunning() {",
                "+\t\treturn this.running;",
                "+\t}",
                "+",
                "+",
                " \t@Override"
            ],
            "changed_files": [
                "spring-jms/src/main/java/org/springframework/jms/listener/AbstractJmsListeningContainer.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "spring-tx/src/main/java/org/springframework/jca/endpoint/GenericMessageEndpointManager.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "d4a8f76bf9c73598662f860f86b6c3674c254b40"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: WebSocket",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java, spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.java, spring-websocket/src/main/java/org/springframework/web/socket/messaging/SubProtocolWebSocketHandler.java, spring-websocket/src/main/java/org/springframework/web/socket/client/ConnectionManagerSupport.java, spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java, spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/AbstractXhrTransport.java, spring-websocket/src/main/java/org/springframework/web/socket/sockjs/client/JettyXhrTransport.java, spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/TransportHandlingSockJsService.java, spring-messaging/src/main/java/org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.java, spring-websocket/src/main/java/org/springframework/web/socket/sockjs/transport/handler/WebSocketTransportHandler.java, spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java, spring-websocket/src/main/java/org/springframework/web/socket/server/support/WebSocketHttpRequestHandler.java, spring-websocket/src/main/java/org/springframework/web/socket/server/support/AbstractHandshakeHandler.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: websocket, endpoint, stomp, message, broker, user",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9cc03fa8b02682762e4ba3c2d2dd6cd35fbe4b1b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522195411,
            "hunks": 247,
            "message": "Polishing",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java b/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java",
                "index 5acddd8ce5..38381ea176 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -27,3 +27,2 @@ import java.util.List;",
                " import java.util.Map;",
                "-import java.util.Map.Entry;",
                " import java.util.Properties;",
                "@@ -203,3 +202,3 @@ public abstract class YamlProcessor {",
                " \t\tMap<Object, Object> map = (Map<Object, Object>) object;",
                "-\t\tfor (Entry<Object, Object> entry : map.entrySet()) {",
                "+\t\tfor (Map.Entry<Object, Object> entry : map.entrySet()) {",
                " \t\t\tObject value = entry.getValue();",
                "@@ -275,3 +274,3 @@ public abstract class YamlProcessor {",
                " \tprivate void buildFlattenedMap(Map<String, Object> result, Map<String, Object> source, String path) {",
                "-\t\tfor (Entry<String, Object> entry : source.entrySet()) {",
                "+\t\tfor (Map.Entry<String, Object> entry : source.entrySet()) {",
                " \t\t\tString key = entry.getKey();",
                "diff --git a/spring-context/src/main/java/org/springframework/context/expression/BeanFactoryResolver.java b/spring-context/src/main/java/org/springframework/context/expression/BeanFactoryResolver.java",
                "index 94ecbe74a0..e9f7639004 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/expression/BeanFactoryResolver.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/expression/BeanFactoryResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -36,2 +36,7 @@ public class BeanFactoryResolver implements BeanResolver {",
                "+",
                "+\t/**",
                "+\t * Create a new {@link BeanFactoryResolver} for the given factory.",
                "+\t * @param beanFactory the {@link BeanFactory} to resolve bean names against",
                "+\t */",
                " \tpublic BeanFactoryResolver(BeanFactory beanFactory) {",
                "@@ -41,2 +46,3 @@ public class BeanFactoryResolver implements BeanResolver {",
                "+",
                " \t@Override",
                "diff --git a/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java b/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java",
                "index c48a347951..5b5eb9f5bb 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -145,4 +145,3 @@ public class StandardBeanExpressionResolver implements BeanExpressionResolver {",
                " \t\t\tif (sec == null) {",
                "-\t\t\t\tsec = new StandardEvaluationContext();",
                "-\t\t\t\tsec.setRootObject(evalContext);",
                "+\t\t\t\tsec = new StandardEvaluationContext(evalContext);",
                " \t\t\t\tsec.addPropertyAccessor(new BeanExpressionContextAccessor());",
                "diff --git a/spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java b/spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java",
                "index 908b54d341..fa378ed063 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -71,3 +71,3 @@ public abstract class SpringFactoriesLoader {",
                " \t * {@value #FACTORIES_RESOURCE_LOCATION}, using the given class loader.",
                "-\t * <p>The returned factories are sorted in accordance with the {@link AnnotationAwareOrderComparator}.",
                "+\t * <p>The returned factories are sorted through {@link AnnotationAwareOrderComparator}.",
                " \t * <p>If a custom instantiation strategy is required, use {@link #loadFactoryNames}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/BeanResolver.java b/spring-expression/src/main/java/org/springframework/expression/BeanResolver.java",
                "index 1f6726f1f1..6335563335 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/BeanResolver.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/BeanResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,6 +19,5 @@ package org.springframework.expression;",
                " /**",
                "- * A bean resolver can be registered with the evaluation context",
                "- * and will kick in for {@code @myBeanName} and {@code &myBeanName} expressions.",
                "- * The <tt>&</tt> variant syntax allows access to the factory bean where",
                "- * relevant.",
                "+ * A bean resolver can be registered with the evaluation context and will kick in",
                "+ * for bean references: {@code @myBeanName} and {@code &myBeanName} expressions.",
                "+ * The <tt>&</tt> variant syntax allows access to the factory bean where relevant.",
                "  *",
                "@@ -30,8 +29,8 @@ public interface BeanResolver {",
                " \t/**",
                "-\t * Look up the named bean and return it. If attempting to access a factory",
                "-\t * bean the name will have a <tt>&</tt> prefix.",
                "+\t * Look up a bean by the given name and return a corresponding instance for it.",
                "+\t * For attempting access to a factory bean, the name needs a <tt>&</tt> prefix.",
                " \t * @param context the current evaluation context",
                "-\t * @param beanName the name of the bean to lookup",
                "+\t * @param beanName the name of the bean to look up",
                " \t * @return an object representing the bean",
                "-\t * @throws AccessException if there is an unexpected problem resolving the named bean",
                "+\t * @throws AccessException if there is an unexpected problem resolving the bean",
                " \t */",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java",
                "index 929b40a110..700951b002 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2017 the original author or authors.",
                "  *",
                "@@ -51,3 +51,3 @@ import org.springframework.util.StringUtils;",
                "  * <p>Column values are mapped based on matching the column name as obtained from result set",
                "- * metadata to public setters for the corresponding properties. The names are matched either",
                "+ * meta-data to public setters for the corresponding properties. The names are matched either",
                "  * directly or by transforming a name separating the parts with underscores to the same name",
                "@@ -209,3 +209,3 @@ public class BeanPropertyRowMapper<T> implements RowMapper<T> {",
                " \t/**",
                "-\t * Initialize the mapping metadata for the given class.",
                "+\t * Initialize the mapping meta-data for the given class.",
                " \t * @param mappedClass the mapped class",
                "@@ -270,3 +270,3 @@ public class BeanPropertyRowMapper<T> implements RowMapper<T> {",
                " \t * Extract the values for all columns in the current row.",
                "-\t * <p>Utilizes public setters and result set metadata.",
                "+\t * <p>Utilizes public setters and result set meta-data.",
                " \t * @see java.sql.ResultSetMetaData",
                "@@ -363,3 +363,2 @@ public class BeanPropertyRowMapper<T> implements RowMapper<T> {",
                " \t * @param pd the bean property that each result object is expected to match",
                "-\t * (or {@code null} if none specified)",
                " \t * @return the Object value",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCreatorFactory.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCreatorFactory.java",
                "index 0e65bf8d2e..37a7d89581 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCreatorFactory.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCreatorFactory.java",
                "@@ -260,3 +260,3 @@ public class PreparedStatementCreatorFactory {",
                " \t\t\t\tSqlParameter declaredParameter;",
                "-\t\t\t\t// SqlParameterValue overrides declared parameter metadata, in particular for",
                "+\t\t\t\t// SqlParameterValue overrides declared parameter meta-data, in particular for",
                " \t\t\t\t// independence from the declared parameter position in case of named parameters.",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.java",
                "index ca515b5bbc..b6b05c0be7 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -129,3 +129,3 @@ public class ResultSetSupportingSqlParameter extends SqlParameter {",
                " \t/**",
                "-\t * <p>This implementation always returns {@code false}.",
                "+\t * This implementation always returns {@code false}.",
                " \t */",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlInOutParameter.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlInOutParameter.java",
                "index 1c25a16b85..bec02349db 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlInOutParameter.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlInOutParameter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,4 +23,3 @@ package org.springframework.jdbc.core;",
                "  *",
                "- * <p>Output parameters - like all stored procedure parameters -",
                "- * must have names.",
                "+ * <p>Output parameters - like all stored procedure parameters - must have names.",
                "  *",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlOutParameter.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlOutParameter.java",
                "index 0baba25d2f..367a3fb195 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlOutParameter.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlOutParameter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2007 the original author or authors.",
                "+ * Copyright 2002-2017 the original author or authors.",
                "  *",
                "@@ -19,8 +19,6 @@ package org.springframework.jdbc.core;",
                " /**",
                "- * Subclass of SqlParameter to represent an output parameter.",
                "- * No additional properties: instanceof will be used to check",
                "- * for such types.",
                "+ * Subclass of {@link SqlParameter} to represent an output parameter.",
                "+ * No additional properties: instanceof will be used to check for such types.",
                "  *",
                "- * <p>Output parameters - like all stored procedure parameters -",
                "- * must have names.",
                "+ * <p>Output parameters - like all stored procedure parameters - must have names.",
                "  *",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlParameter.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlParameter.java",
                "index b4ce5c5bee..ffcd702620 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlParameter.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlParameter.java",
                "@@ -27,3 +27,3 @@ import org.springframework.util.Assert;",
                "  *",
                "- * <p>Parameters may be anonymous in which case \"name\" is {@code null}.",
                "+ * <p>Parameters may be anonymous, in which case \"name\" is {@code null}.",
                "  * However, all parameters must define a SQL type according to {@link java.sql.Types}.",
                "@@ -167,3 +167,3 @@ public class SqlParameter {",
                " \t * Return whether this parameter is an implicit return parameter used during the",
                "-\t * results preocessing of the CallableStatement.getMoreResults/getUpdateCount.",
                "+\t * results processing of {@code CallableStatement.getMoreResults/getUpdateCount}.",
                " \t * <p>This implementation always returns {@code false}.",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlParameterValue.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlParameterValue.java",
                "index 4fdc5b10d3..3c30cf01d0 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlParameterValue.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlParameterValue.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2017 the original author or authors.",
                "  *",
                "@@ -19,3 +19,3 @@ package org.springframework.jdbc.core;",
                " /**",
                "- * Object to represent a SQL parameter value, including parameter metadata",
                "+ * Object to represent a SQL parameter value, including parameter meta-data",
                "  * such as the SQL type and the scale for numeric values.",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlReturnResultSet.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlReturnResultSet.java",
                "index 02e956c291..6ea9cecaa7 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlReturnResultSet.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlReturnResultSet.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -25,3 +25,3 @@ package org.springframework.jdbc.core;",
                "  * <p>Returned {@link java.sql.ResultSet ResultSets} - like all stored procedure",
                "- * parameters - <b>must</b> have names.",
                "+ * parameters - must have names.",
                "  *",
                "@@ -59,6 +59,5 @@ public class SqlReturnResultSet extends ResultSetSupportingSqlParameter {",
                "+",
                " \t/**",
                "-\t * Return whether this parameter is an implicit return parameter used during the",
                "-\t * results preocessing of the CallableStatement.getMoreResults/getUpdateCount.",
                "-\t * <p>This implementation always returns {@code true}.",
                "+\t * This implementation always returns {@code true}.",
                " \t */",
                "@@ -68,2 +67,3 @@ public class SqlReturnResultSet extends ResultSetSupportingSqlParameter {",
                " \t}",
                "+",
                " }",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlReturnUpdateCount.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlReturnUpdateCount.java",
                "index 397ce33e6f..d78431fbd4 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlReturnUpdateCount.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlReturnUpdateCount.java",
                "@@ -1 +1,17 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                " package org.springframework.jdbc.core;",
                "@@ -15,3 +31,3 @@ public class SqlReturnUpdateCount extends SqlParameter {",
                " \t/**",
                "-\t * Create a new instance of the {@link SqlReturnUpdateCount} class.",
                "+\t * Create a new SqlReturnUpdateCount.",
                " \t * @param name name of the parameter, as used in input and output maps",
                "@@ -24,5 +40,3 @@ public class SqlReturnUpdateCount extends SqlParameter {",
                " \t/**",
                "-\t * Return whether this parameter holds input values that should be set",
                "-\t * before execution even if they are {@code null}.",
                "-\t * <p>This implementation always returns {@code false}.",
                "+\t * This implementation always returns {@code false}.",
                " \t */",
                "@@ -34,5 +48,3 @@ public class SqlReturnUpdateCount extends SqlParameter {",
                " \t/**",
                "-\t * Return whether this parameter is an implicit return parameter used during the",
                "-\t * results preocessing of the CallableStatement.getMoreResults/getUpdateCount.",
                "-\t * <p>This implementation always returns {@code true}.",
                "+\t * This implementation always returns {@code true}.",
                " \t */",
                "@@ -42,2 +54,3 @@ public class SqlReturnUpdateCount extends SqlParameter {",
                " \t}",
                "+",
                " }",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProvider.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProvider.java",
                "index a888190dc6..ad5c8f1ddb 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProvider.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProvider.java",
                "@@ -25,3 +25,3 @@ import org.springframework.jdbc.core.SqlParameter;",
                " /**",
                "- * Interface specifying the API to be implemented by a class providing call metadata.",
                "+ * Interface specifying the API to be implemented by a class providing call meta-data.",
                "  *",
                "@@ -43,5 +43,5 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Initialize the database specific management of procedure column meta data.",
                "+\t * Initialize the database specific management of procedure column meta-data.",
                " \t * This is only called for databases that are supported. This initialization",
                "-\t * can be turned off by specifying that column meta data should not be used.",
                "+\t * can be turned off by specifying that column meta-data should not be used.",
                " \t * @param databaseMetaData used to retrieve database specific information",
                "@@ -57,3 +57,3 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Provide any modification of the procedure name passed in to match the meta data currently used.",
                "+\t * Provide any modification of the procedure name passed in to match the meta-data currently used.",
                " \t * This could include altering the case.",
                "@@ -63,3 +63,3 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Provide any modification of the catalog name passed in to match the meta data currently used.",
                "+\t * Provide any modification of the catalog name passed in to match the meta-data currently used.",
                " \t * This could include altering the case.",
                "@@ -69,3 +69,3 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Provide any modification of the schema name passed in to match the meta data currently used.",
                "+\t * Provide any modification of the schema name passed in to match the meta-data currently used.",
                " \t * This could include altering the case.",
                "@@ -75,17 +75,17 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Provide any modification of the catalog name passed in to match the meta data currently used.",
                "-\t * The returned value will be used for meta data lookups. This could include altering the case",
                "+\t * Provide any modification of the catalog name passed in to match the meta-data currently used.",
                "+\t * The returned value will be used for meta-data lookups. This could include altering the case",
                " \t * used or providing a base catalog if none is provided.",
                " \t */",
                "-\tString metaDataCatalogNameToUse(String catalogName) ;",
                "+\tString metaDataCatalogNameToUse(String catalogName);",
                " \t/**",
                "-\t * Provide any modification of the schema name passed in to match the meta data currently used.",
                "-\t * The returned value will be used for meta data lookups. This could include altering the case",
                "+\t * Provide any modification of the schema name passed in to match the meta-data currently used.",
                "+\t * The returned value will be used for meta-data lookups. This could include altering the case",
                " \t * used or providing a base schema if none is provided.",
                " \t */",
                "-\tString metaDataSchemaNameToUse(String schemaName) ;",
                "+\tString metaDataSchemaNameToUse(String schemaName);",
                " \t/**",
                "-\t * Provide any modification of the column name passed in to match the meta data currently used.",
                "+\t * Provide any modification of the column name passed in to match the meta-data currently used.",
                " \t * This could include altering the case.",
                "@@ -96,6 +96,6 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Create a default out parameter based on the provided meta data.",
                "+\t * Create a default out parameter based on the provided meta-data.",
                " \t * This is used when no explicit parameter declaration has been made.",
                " \t * @param parameterName the name of the parameter",
                "-\t * @param meta meta data used for this call",
                "+\t * @param meta meta-data used for this call",
                " \t * @return the configured SqlOutParameter",
                "@@ -105,6 +105,6 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Create a default inout parameter based on the provided meta data.",
                "+\t * Create a default inout parameter based on the provided meta-data.",
                " \t * This is used when no explicit parameter declaration has been made.",
                " \t * @param parameterName the name of the parameter",
                "-\t * @param meta meta data used for this call",
                "+\t * @param meta meta-data used for this call",
                " \t * @return the configured SqlInOutParameter",
                "@@ -114,6 +114,6 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Create a default in parameter based on the provided meta data.",
                "+\t * Create a default in parameter based on the provided meta-data.",
                " \t * This is used when no explicit parameter declaration has been made.",
                " \t * @param parameterName the name of the parameter",
                "-\t * @param meta meta data used for this call",
                "+\t * @param meta meta-data used for this call",
                " \t * @return the configured SqlParameter",
                "@@ -123,3 +123,3 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Get the name of the current user. Useful for meta data lookups etc.",
                "+\t * Get the name of the current user. Useful for meta-data lookups etc.",
                " \t * @return current user name from database connection",
                "@@ -129,4 +129,4 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Does this database support returning ResultSets that should be retrieved with the JDBC call.",
                "-\t * {@link java.sql.Statement#getResultSet()}",
                "+\t * Does this database support returning ResultSets that should be retrieved with the JDBC call:",
                "+\t * {@link java.sql.Statement#getResultSet()}?",
                " \t */",
                "@@ -147,3 +147,3 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Are we using the meta data for the procedure columns?",
                "+\t * Are we using the meta-data for the procedure columns?",
                " \t */",
                "@@ -159,3 +159,3 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Get the call parameter metadata that is currently used.",
                "+\t * Get the call parameter meta-data that is currently used.",
                " \t * @return List of {@link CallParameterMetaData}",
                "@@ -165,3 +165,3 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Does the database support the use of catalog name in procedure calls",
                "+\t * Does the database support the use of catalog name in procedure calls?",
                " \t */",
                "@@ -170,3 +170,3 @@ public interface CallMetaDataProvider {",
                " \t/**",
                "-\t * Does the database support the use of schema name in procedure calls",
                "+\t * Does the database support the use of schema name in procedure calls?",
                " \t */",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java",
                "index 528176097b..b220c04ba5 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java",
                "@@ -65,5 +65,5 @@ public class CallMetaDataProviderFactory {",
                " \t/**",
                "-\t * Create a {@link CallMetaDataProvider} based on the database metadata",
                "-\t * @param dataSource used to retrieve metadata",
                "-\t * @param context the class that holds configuration and metadata",
                "+\t * Create a {@link CallMetaDataProvider} based on the database meta-data.",
                "+\t * @param dataSource the JDBC DataSource to use for retrieving meta-data",
                "+\t * @param context the class that holds configuration and meta-data",
                " \t * @return instance of the CallMetaDataProvider implementation to be used",
                "@@ -141,3 +141,3 @@ public class CallMetaDataProviderFactory {",
                " \t\tcatch (MetaDataAccessException ex) {",
                "-\t\t\tthrow new DataAccessResourceFailureException(\"Error retrieving database metadata\", ex);",
                "+\t\t\tthrow new DataAccessResourceFailureException(\"Error retrieving database meta-data\", ex);",
                " \t\t}",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.java",
                "index 8ea0bdfffb..b40ac99fb0 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.java",
                "@@ -23,3 +23,3 @@ import java.sql.SQLException;",
                "  * The Derby specific implementation of {@link TableMetaDataProvider}.",
                "- * Overrides the Derby metadata info regarding retrieving generated keys.",
                "+ * Overrides the Derby meta-data info regarding retrieving generated keys.",
                "  *",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java",
                "index c580fde6d0..efaecad81f 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java",
                "@@ -63,4 +63,4 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t/**",
                "-\t * Constructor used to initialize with provided database meta data.",
                "-\t * @param databaseMetaData meta data to be used",
                "+\t * Constructor used to initialize with provided database meta-data.",
                "+\t * @param databaseMetaData meta-data to be used",
                " \t */",
                "@@ -251,3 +251,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t/**",
                "-\t * Specify whether the database supports the use of catalog name in procedure calls",
                "+\t * Specify whether the database supports the use of catalog name in procedure calls.",
                " \t */",
                "@@ -258,3 +258,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t/**",
                "-\t * Does the database support the use of catalog name in procedure calls",
                "+\t * Does the database support the use of catalog name in procedure calls?",
                " \t */",
                "@@ -266,3 +266,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t/**",
                "-\t * Specify whether the database supports the use of schema name in procedure calls",
                "+\t * Specify whether the database supports the use of schema name in procedure calls.",
                " \t */",
                "@@ -273,3 +273,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t/**",
                "-\t * Does the database support the use of schema name in procedure calls",
                "+\t * Does the database support the use of schema name in procedure calls?",
                " \t */",
                "@@ -281,3 +281,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t/**",
                "-\t * Specify whether the database uses upper case for identifiers",
                "+\t * Specify whether the database uses upper case for identifiers.",
                " \t */",
                "@@ -288,3 +288,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t/**",
                "-\t * Does the database use upper case for identifiers",
                "+\t * Does the database use upper case for identifiers?",
                " \t */",
                "@@ -295,3 +295,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t/**",
                "-\t * Specify whether the database uses lower case for identifiers",
                "+\t * Specify whether the database uses lower case for identifiers.",
                " \t */",
                "@@ -302,3 +302,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t/**",
                "-\t * Does the database use lower case for identifiers",
                "+\t * Does the database use lower case for identifiers?",
                " \t */",
                "@@ -310,3 +310,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t/**",
                "-\t * Process the procedure column metadata",
                "+\t * Process the procedure column meta-data.",
                " \t */",
                "@@ -319,3 +319,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t\tif (logger.isDebugEnabled()) {",
                "-\t\t\tlogger.debug(\"Retrieving metadata for \" + metaDataCatalogName + '/' +",
                "+\t\t\tlogger.debug(\"Retrieving meta-data for \" + metaDataCatalogName + '/' +",
                " \t\t\t\t\tmetaDataSchemaName + '/' + metaDataProcedureName);",
                "@@ -369,3 +369,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\tlogger.debug(\"Skipping metadata for: \" + columnType + \" \" + procs.getInt(\"DATA_TYPE\") +",
                "+\t\t\t\t\t\tlogger.debug(\"Skipping meta-data for: \" + columnType + \" \" + procs.getInt(\"DATA_TYPE\") +",
                " \t\t\t\t\t\t\t\" \" + procs.getString(\"TYPE_NAME\") + \" \" + procs.getInt(\"NULLABLE\") +",
                "@@ -380,3 +380,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\tlogger.debug(\"Retrieved metadata: \" + meta.getParameterName() + \" \" +",
                "+\t\t\t\t\t\tlogger.debug(\"Retrieved meta-data: \" + meta.getParameterName() + \" \" +",
                " \t\t\t\t\t\t\t\tmeta.getParameterType() + \" \" + meta.getSqlType() + \" \" +",
                "@@ -389,3 +389,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t\t\tif (logger.isWarnEnabled()) {",
                "-\t\t\t\tlogger.warn(\"Error while retrieving metadata for procedure columns: \" + ex);",
                "+\t\t\t\tlogger.warn(\"Error while retrieving meta-data for procedure columns: \" + ex);",
                " \t\t\t}",
                "@@ -400,3 +400,3 @@ public class GenericCallMetaDataProvider implements CallMetaDataProvider {",
                " \t\t\t\tif (logger.isWarnEnabled()) {",
                "-\t\t\t\t\tlogger.warn(\"Problem closing ResultSet for procedure column metadata: \" + ex);",
                "+\t\t\t\t\tlogger.warn(\"Problem closing ResultSet for procedure column meta-data: \" + ex);",
                " \t\t\t\t}",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java",
                "index a86338237c..10c15f869d 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java",
                "@@ -48,3 +48,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                "-\t/** indicator whether column metadata should be used */",
                "+\t/** indicator whether column meta-data should be used */",
                " \tprivate boolean tableColumnMetaDataUsed = false;",
                "@@ -81,4 +81,4 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t/**",
                "-\t * Constructor used to initialize with provided database metadata.",
                "-\t * @param databaseMetaData metadata to be used",
                "+\t * Constructor used to initialize with provided database meta-data.",
                "+\t * @param databaseMetaData meta-data to be used",
                " \t */",
                "@@ -309,3 +309,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t/**",
                "-\t * Method supporting the metadata processing for a table.",
                "+\t * Method supporting the meta-data processing for a table.",
                " \t */",
                "@@ -334,3 +334,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t\t\tif (logger.isWarnEnabled()) {",
                "-\t\t\t\tlogger.warn(\"Error while accessing table meta data results: \" + ex.getMessage());",
                "+\t\t\t\tlogger.warn(\"Error while accessing table meta-data results: \" + ex.getMessage());",
                " \t\t\t}",
                "@@ -343,3 +343,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t\t\tif (logger.isWarnEnabled()) {",
                "-\t\t\t\tlogger.warn(\"Unable to locate table meta data for '\" + tableName + \"': column names must be provided\");",
                "+\t\t\t\tlogger.warn(\"Unable to locate table meta-data for '\" + tableName + \"': column names must be provided\");",
                " \t\t\t}",
                "@@ -355,3 +355,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t\t\tif (tmd == null) {",
                "-\t\t\t\tthrow new DataAccessResourceFailureException(\"Unable to locate table meta data for '\" +",
                "+\t\t\t\tthrow new DataAccessResourceFailureException(\"Unable to locate table meta-data for '\" +",
                " \t\t\t\t\t\ttableName + \"' in the '\" + schemaName + \"' schema\");",
                "@@ -376,3 +376,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t\t\t\tthrow new DataAccessResourceFailureException(",
                "-\t\t\t\t\t\t\"Unable to locate table meta data for '\" + tableName + \"' in the default schema\");",
                "+\t\t\t\t\t\t\"Unable to locate table meta-data for '\" + tableName + \"' in the default schema\");",
                " \t\t\t}",
                "@@ -383,3 +383,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t/**",
                "-\t * Method supporting the metadata processing for a table's columns",
                "+\t * Method supporting the meta-data processing for a table's columns",
                " \t */",
                "@@ -391,3 +391,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t\tif (logger.isDebugEnabled()) {",
                "-\t\t\tlogger.debug(\"Retrieving metadata for \" + metaDataCatalogName + '/' +",
                "+\t\t\tlogger.debug(\"Retrieving meta-data for \" + metaDataCatalogName + '/' +",
                " \t\t\t\t\tmetaDataSchemaName + '/' + metaDataTableName);",
                "@@ -409,3 +409,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\tlogger.debug(\"Overriding metadata: \" + columnName + \" now NUMERIC instead of DECIMAL\");",
                "+\t\t\t\t\t\t\tlogger.debug(\"Overriding meta-data: \" + columnName + \" now NUMERIC instead of DECIMAL\");",
                " \t\t\t\t\t\t}",
                "@@ -417,3 +417,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\tlogger.debug(\"Retrieved metadata: \" + meta.getParameterName() + \" \" +",
                "+\t\t\t\t\tlogger.debug(\"Retrieved meta-data: \" + meta.getParameterName() + \" \" +",
                " \t\t\t\t\t\t\tmeta.getSqlType() + \" \" + meta.isNullable());",
                "@@ -424,3 +424,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t\t\tif (logger.isWarnEnabled()) {",
                "-\t\t\t\tlogger.warn(\"Error while retrieving metadata for table columns: \" + ex.getMessage());",
                "+\t\t\t\tlogger.warn(\"Error while retrieving meta-data for table columns: \" + ex.getMessage());",
                " \t\t\t}",
                "@@ -434,3 +434,3 @@ public class GenericTableMetaDataProvider implements TableMetaDataProvider {",
                " \t/**",
                "-\t * Inner class representing table meta data.",
                "+\t * Inner class representing table meta-data.",
                " \t */",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java",
                "index 96ecffe2ef..4918424b3f 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java",
                "@@ -31,3 +31,3 @@ import org.springframework.util.ReflectionUtils;",
                "  * Oracle-specific implementation of the {@link org.springframework.jdbc.core.metadata.TableMetaDataProvider}.",
                "- * Supports a feature for including synonyms in the metadata lookup. Also supports lookup of current schema",
                "+ * Supports a feature for including synonyms in the meta-data lookup. Also supports lookup of current schema",
                "  * using the {@code sys_context}.",
                "@@ -49,4 +49,4 @@ public class OracleTableMetaDataProvider extends GenericTableMetaDataProvider {",
                " \t/**",
                "-\t * Constructor used to initialize with provided database metadata.",
                "-\t * @param databaseMetaData metadata to be used",
                "+\t * Constructor used to initialize with provided database meta-data.",
                "+\t * @param databaseMetaData meta-data to be used",
                " \t */",
                "@@ -57,4 +57,4 @@ public class OracleTableMetaDataProvider extends GenericTableMetaDataProvider {",
                " \t/**",
                "-\t * Constructor used to initialize with provided database metadata.",
                "-\t * @param databaseMetaData metadata to be used",
                "+\t * Constructor used to initialize with provided database meta-data.",
                "+\t * @param databaseMetaData meta-data to be used",
                " \t * @param includeSynonyms whether to include synonyms",
                "@@ -113,3 +113,3 @@ public class OracleTableMetaDataProvider extends GenericTableMetaDataProvider {",
                " \t\tif (!this.includeSynonyms) {",
                "-\t\t\tlogger.debug(\"Defaulting to no synonyms in table metadata lookup\");",
                "+\t\t\tlogger.debug(\"Defaulting to no synonyms in table meta-data lookup\");",
                " \t\t\tsuper.initializeWithTableColumnMetaData(databaseMetaData, catalogName, schemaName, tableName);",
                "@@ -120,3 +120,3 @@ public class OracleTableMetaDataProvider extends GenericTableMetaDataProvider {",
                " \t\tif (con == null) {",
                "-\t\t\tlogger.warn(\"Unable to include synonyms in table metadata lookup - no Connection from DatabaseMetaData\");",
                "+\t\t\tlogger.warn(\"Unable to include synonyms in table meta-data lookup - no Connection from DatabaseMetaData\");",
                " \t\t\tsuper.initializeWithTableColumnMetaData(databaseMetaData, catalogName, schemaName, tableName);",
                "@@ -150,3 +150,3 @@ public class OracleTableMetaDataProvider extends GenericTableMetaDataProvider {",
                " \t\t\tif (logger.isWarnEnabled()) {",
                "-\t\t\t\tlogger.warn(\"Unable to include synonyms in table metadata lookup - no Oracle Connection: \" + con);",
                "+\t\t\t\tlogger.warn(\"Unable to include synonyms in table meta-data lookup - no Oracle Connection: \" + con);",
                " \t\t\t}",
                "@@ -156,3 +156,3 @@ public class OracleTableMetaDataProvider extends GenericTableMetaDataProvider {",
                "-\t\tlogger.debug(\"Including synonyms in table metadata lookup\");",
                "+\t\tlogger.debug(\"Including synonyms in table meta-data lookup\");",
                " \t\tMethod setIncludeSynonyms;",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataProvider.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataProvider.java",
                "index 900eb63fe3..20173e2c4b 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataProvider.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataProvider.java",
                "@@ -25,3 +25,3 @@ import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor;",
                " /**",
                "- * Interface specifying the API to be implemented by a class providing table metadata.",
                "+ * Interface specifying the API to be implemented by a class providing table meta-data.",
                "  * This is intended for internal use by the Simple JDBC classes.",
                "@@ -34,3 +34,3 @@ public interface TableMetaDataProvider {",
                " \t/**",
                "-\t * Initialize using the database metadata provided.",
                "+\t * Initialize using the database meta-data provided.",
                " \t * @param databaseMetaData used to retrieve database specific information",
                "@@ -41,4 +41,4 @@ public interface TableMetaDataProvider {",
                " \t/**",
                "-\t * Initialize using provided database metadata, table and column information.",
                "-\t * This initialization can be turned off by specifying that column meta data should not be used.",
                "+\t * Initialize using provided database meta-data, table and column information.",
                "+\t * This initialization can be turned off by specifying that column meta-data should not be used.",
                " \t * @param databaseMetaData used to retrieve database specific information",
                "@@ -49,8 +49,8 @@ public interface TableMetaDataProvider {",
                " \t */",
                "-\tvoid initializeWithTableColumnMetaData(",
                "-\t\t\tDatabaseMetaData databaseMetaData, String catalogName, String schemaName, String tableName)",
                "-\t\t\tthrows SQLException;",
                "+\tvoid initializeWithTableColumnMetaData(DatabaseMetaData databaseMetaData, String catalogName,",
                "+\t\t\tString schemaName, String tableName) throws SQLException;",
                " \t/**",
                "-\t * Get the table name formatted based on metadata information. This could include altering the case.",
                "+\t * Get the table name formatted based on meta-data information.",
                "+\t * This could include altering the case.",
                " \t */",
                "@@ -59,3 +59,4 @@ public interface TableMetaDataProvider {",
                " \t/**",
                "-\t * Get the catalog name formatted based on metadata information. This could include altering the case.",
                "+\t * Get the catalog name formatted based on meta-data information.",
                "+\t * This could include altering the case.",
                " \t */",
                "@@ -64,3 +65,4 @@ public interface TableMetaDataProvider {",
                " \t/**",
                "-\t * Get the schema name formatted based on metadata information. This could include altering the case.",
                "+\t * Get the schema name formatted based on meta-data information.",
                "+\t * This could include altering the case.",
                " \t */",
                "@@ -69,5 +71,5 @@ public interface TableMetaDataProvider {",
                " \t/**",
                "-\t * Provide any modification of the catalog name passed in to match the meta data currently used.",
                "-\t * The returned value will be used for meta data lookups.  This could include altering the case used or",
                "-\t * providing a base catalog if none is provided.",
                "+\t * Provide any modification of the catalog name passed in to match the meta-data currently used.",
                "+\t * The returned value will be used for meta-data lookups.",
                "+\t * This could include altering the case used or providing a base catalog if none is provided.",
                " \t */",
                "@@ -76,5 +78,5 @@ public interface TableMetaDataProvider {",
                " \t/**",
                "-\t * Provide any modification of the schema name passed in to match the meta data currently used.",
                "-\t * The returned value will be used for meta data lookups.  This could include altering the case used or",
                "-\t * providing a base schema if none is provided.",
                "+\t * Provide any modification of the schema name passed in to match the meta-data currently used.",
                "+\t * The returned value will be used for meta-data lookups.",
                "+\t * This could include altering the case used or providing a base schema if none is provided.",
                " \t */",
                "@@ -83,3 +85,3 @@ public interface TableMetaDataProvider {",
                " \t/**",
                "-\t * Are we using the meta data for the table columns?",
                "+\t * Are we using the meta-data for the table columns?",
                " \t */",
                "@@ -88,3 +90,3 @@ public interface TableMetaDataProvider {",
                " \t/**",
                "-\t * Does this database support the JDBC 3.0 feature of retrieving generated keys",
                "+\t * Does this database support the JDBC 3.0 feature of retrieving generated keys:",
                " \t * {@link java.sql.DatabaseMetaData#supportsGetGeneratedKeys()}?",
                "@@ -101,3 +103,3 @@ public interface TableMetaDataProvider {",
                " \t/**",
                "-\t * Get the simple query to retrieve a generated key",
                "+\t * Get the simple query to retrieve a generated key.",
                " \t */",
                "@@ -106,4 +108,4 @@ public interface TableMetaDataProvider {",
                " \t/**",
                "-\t * Does this database support a column name String array for retrieving generated keys",
                "-\t * {@link java.sql.Connection#createStruct(String, Object[])}",
                "+\t * Does this database support a column name String array for retrieving generated keys:",
                "+\t * {@link java.sql.Connection#createStruct(String, Object[])}?",
                " \t */",
                "@@ -112,3 +114,3 @@ public interface TableMetaDataProvider {",
                " \t/**",
                "-\t * Get the table parameter metadata that is currently used.",
                "+\t * Get the table parameter meta-data that is currently used.",
                " \t * @return List of {@link TableParameterMetaData}",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.java",
                "index d916a83a05..7ab5d2d848 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.java",
                "@@ -44,5 +44,5 @@ public class TableMetaDataProviderFactory {",
                " \t/**",
                "-\t * Create a {@link TableMetaDataProvider} based on the database metadata.",
                "-\t * @param dataSource used to retrieve metadata",
                "-\t * @param context the class that holds configuration and metadata",
                "+\t * Create a {@link TableMetaDataProvider} based on the database meta-data.",
                "+\t * @param dataSource used to retrieve meta-data",
                "+\t * @param context the class that holds configuration and meta-data",
                " \t * @return instance of the TableMetaDataProvider implementation to be used",
                "@@ -70,4 +70,4 @@ public class TableMetaDataProviderFactory {",
                " \t\t\t\t\t\t\tboolean accessTableColumnMetaData = context.isAccessTableColumnMetaData();",
                "-",
                " \t\t\t\t\t\t\tTableMetaDataProvider provider;",
                "+",
                " \t\t\t\t\t\t\tif (\"Oracle\".equals(databaseProductName)) {",
                "@@ -105,3 +105,3 @@ public class TableMetaDataProviderFactory {",
                " \t\tcatch (MetaDataAccessException ex) {",
                "-\t\t\tthrow new DataAccessResourceFailureException(\"Error retrieving database metadata\", ex);",
                "+\t\t\tthrow new DataAccessResourceFailureException(\"Error retrieving database meta-data\", ex);",
                " \t\t}",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableParameterMetaData.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableParameterMetaData.java",
                "index f63f29f470..7f6081dddf 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableParameterMetaData.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableParameterMetaData.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,3 @@ package org.springframework.jdbc.core.metadata;",
                " /**",
                "- * Holder of metadata for a specific parameter that is used for table processing.",
                "+ * Holder of meta-data for a specific parameter that is used for table processing.",
                "  *",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/package-info.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/package-info.java",
                "index 7ad1eaee19..32634d757b 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/package-info.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/package-info.java",
                "@@ -1,3 +1,4 @@",
                " /**",
                "- * Context metadata abstraction for the configuration and execution of a stored procedure call.",
                "+ * Context metadata abstraction for the configuration and execution",
                "+ * of table inserts and stored procedure calls.",
                "  */",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCall.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCall.java",
                "index e08be0acd6..e2d2d3da85 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCall.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCall.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -30,3 +30,3 @@ import org.springframework.jdbc.core.namedparam.SqlParameterSource;",
                "  * A SimpleJdbcCall is a multi-threaded, reusable object representing a call",
                "- * to a stored procedure or a stored function. It provides meta data processing",
                "+ * to a stored procedure or a stored function. It provides meta-data processing",
                "  * to simplify the code needed to access basic stored procedures/functions.",
                "@@ -37,5 +37,5 @@ import org.springframework.jdbc.core.namedparam.SqlParameterSource;",
                "  *",
                "- * <p>The meta data processing is based on the DatabaseMetaData provided by",
                "+ * <p>The meta-data processing is based on the DatabaseMetaData provided by",
                "  * the JDBC driver. Since we rely on the JDBC driver, this \"auto-detection\"",
                "- * can only be used for databases that are known to provide accurate meta data.",
                "+ * can only be used for databases that are known to provide accurate meta-data.",
                "  * These currently include Derby, MySQL, Microsoft SQL Server, Oracle, DB2,",
                "@@ -43,9 +43,8 @@ import org.springframework.jdbc.core.namedparam.SqlParameterSource;",
                "  * all parameters explicitly. You can of course declare all parameters",
                "- * explicitly even if the database provides the necessary meta data. In that",
                "+ * explicitly even if the database provides the necessary meta-data. In that",
                "  * case your declared parameters will take precedence. You can also turn off",
                "- * any metadata processing if you want to use parameter names that do not",
                "+ * any meta-data processing if you want to use parameter names that do not",
                "  * match what is declared during the stored procedure compilation.",
                "  *",
                "- * <p>The actual insert is being handled using Spring's",
                "- * {@link org.springframework.jdbc.core.JdbcTemplate}.",
                "+ * <p>The actual insert is being handled using Spring's {@link JdbcTemplate}.",
                "  *",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.java",
                "index 6cb91185c7..4067c86e06 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.java",
                "@@ -73,3 +73,3 @@ public interface SimpleJdbcCallOperations {",
                " \t * Specify one or more parameters if desired. These parameters will be supplemented with",
                "-\t * any parameter information retrieved from the database meta data.",
                "+\t * any parameter information retrieved from the database meta-data.",
                " \t * <p>Note that only parameters declared as {@code SqlParameter} and {@code SqlInOutParameter}",
                "@@ -98,3 +98,3 @@ public interface SimpleJdbcCallOperations {",
                " \t/**",
                "-\t * Turn off any processing of parameter meta data information obtained via JDBC.",
                "+\t * Turn off any processing of parameter meta-data information obtained via JDBC.",
                " \t * @return the instance of this SimpleJdbcCall",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcInsert.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcInsert.java",
                "index 417423507f..d20d3b4b21 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcInsert.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcInsert.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2017 the original author or authors.",
                "  *",
                "@@ -29,3 +29,3 @@ import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor;",
                "  * A SimpleJdbcInsert is a multi-threaded, reusable object providing easy insert",
                "- * capabilities for a table. It provides meta data processing to simplify the code",
                "+ * capabilities for a table. It provides meta-data processing to simplify the code",
                "  * needed to construct a basic insert statement. All you need to provide is the",
                "@@ -33,3 +33,3 @@ import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor;",
                "  *",
                "- * <p>The meta data processing is based on the DatabaseMetaData provided by the",
                "+ * <p>The meta-data processing is based on the DatabaseMetaData provided by the",
                "  * JDBC driver. As long as the JDBC driver can provide the names of the columns",
                "@@ -38,9 +38,10 @@ import org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor;",
                "  *",
                "- * <p>The actual insert is being handled using Spring's",
                "- * {@link org.springframework.jdbc.core.JdbcTemplate}.",
                "+ * <p>The actual insert is being handled using Spring's {@link JdbcTemplate}.",
                "  *",
                "- * <p>Many of the configuration methods return the current instance of the SimpleJdbcInsert",
                "- * to provide the ability to chain multiple ones together in a \"fluent\" interface style.",
                "+ * <p>Many of the configuration methods return the current instance of the",
                "+ * SimpleJdbcInsert to provide the ability to chain multiple ones together",
                "+ * in a \"fluent\" interface style.",
                "  *",
                "  * @author Thomas Risberg",
                "+ * @author Juergen Hoeller",
                "  * @since 2.5",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.java",
                "index 55bf65994c..e219da517c 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.java",
                "@@ -70,3 +70,3 @@ public interface SimpleJdbcInsertOperations {",
                " \t/**",
                "-\t * Turn off any processing of column meta data information obtained via JDBC.",
                "+\t * Turn off any processing of column meta-data information obtained via JDBC.",
                " \t * @return the instance of this SimpleJdbcInsert",
                "@@ -76,3 +76,3 @@ public interface SimpleJdbcInsertOperations {",
                " \t/**",
                "-\t * Include synonyms for the column meta data lookups via JDBC.",
                "+\t * Include synonyms for the column meta-data lookups via JDBC.",
                " \t * <p>Note: This is only necessary to include for Oracle since other databases",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/package-info.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/package-info.java",
                "index d9403a2c9b..af57f1d56b 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/package-info.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/package-info.java",
                "@@ -1,7 +1,7 @@",
                " /**",
                "- * Simplification layer over JdbcTemplate for Java 5 and above.",
                "+ * Simplification layer for table inserts and stored procedure calls.",
                "  *",
                "- * <p>{@code SimpleJdbcInsert} and {@code SimpleJdbcCall} are classes that takes advantage",
                "- * of database metadata provided by the JDBC driver to simplify the application code. Much of the",
                "- * parameter specification becomes unnecessary since it can be looked up in the metadata.",
                "+ * <p>{@code SimpleJdbcInsert} and {@code SimpleJdbcCall} take advantage of database",
                "+ * meta-data provided by the JDBC driver to simplify the application code. Much of the",
                "+ * parameter specification becomes unnecessary since it can be looked up in the meta-data.",
                "  */",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java",
                "index 423bc3f36a..246077a5a6 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -180,2 +180,3 @@ public abstract class ScriptUtils {",
                " \t\tboolean inEscape = false;",
                "+",
                " \t\tfor (int i = 0; i < script.length(); i++) {",
                "@@ -245,2 +246,3 @@ public abstract class ScriptUtils {",
                " \t\t}",
                "+",
                " \t\tif (StringUtils.hasText(sb)) {",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/support/DatabaseMetaDataCallback.java b/spring-jdbc/src/main/java/org/springframework/jdbc/support/DatabaseMetaDataCallback.java",
                "index abb9d7e33b..883bca7c26 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/support/DatabaseMetaDataCallback.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/DatabaseMetaDataCallback.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2016 the original author or authors.",
                "  *",
                "@@ -23,3 +23,3 @@ import java.sql.SQLException;",
                "  * A callback interface used by the JdbcUtils class. Implementations of this",
                "- * interface perform the actual work of extracting database meta data, but",
                "+ * interface perform the actual work of extracting database meta-data, but",
                "  * don't need to worry about exception handling. SQLExceptions will be caught",
                "@@ -33,6 +33,6 @@ public interface DatabaseMetaDataCallback {",
                " \t/**",
                "-\t * Implementations must implement this method to process the meta data",
                "+\t * Implementations must implement this method to process the meta-data",
                " \t * passed in. Exactly what the implementation chooses to do is up to it.",
                " \t * @param dbmd the DatabaseMetaData to process",
                "-\t * @return a result object extracted from the meta data",
                "+\t * @return a result object extracted from the meta-data",
                " \t * (can be an arbitrary object, as needed by the implementation)",
                "@@ -41,3 +41,3 @@ public interface DatabaseMetaDataCallback {",
                " \t * @throws MetaDataAccessException in case of other failures while",
                "-\t * extracting meta data (for example, reflection failure)",
                "+\t * extracting meta-data (for example, reflection failure)",
                " \t */",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java b/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java",
                "index f43a447816..bcd1728695 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java",
                "@@ -66,3 +66,3 @@ public abstract class JdbcAccessor implements InitializingBean {",
                " \t * This allows to initialize a SQLErrorCodeSQLExceptionTranslator without",
                "-\t * obtaining a Connection from the DataSource to get the metadata.",
                "+\t * obtaining a Connection from the DataSource to get the meta-data.",
                " \t * @param dbName the database product name that identifies the error codes entry",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java b/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java",
                "index 2cd2c45045..501122df75 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java",
                "@@ -305,4 +305,4 @@ public abstract class JdbcUtils {",
                " \t/**",
                "-\t * Extract database meta data via the given DatabaseMetaDataCallback.",
                "-\t * <p>This method will open a connection to the database and retrieve the database metadata.",
                "+\t * Extract database meta-data via the given DatabaseMetaDataCallback.",
                "+\t * <p>This method will open a connection to the database and retrieve the database meta-data.",
                " \t * Since this method is called before the exception translation feature is configured for",
                "@@ -313,3 +313,3 @@ public abstract class JdbcUtils {",
                " \t * reappear when you try to access the database again.",
                "-\t * @param dataSource the DataSource to extract metadata for",
                "+\t * @param dataSource the DataSource to extract meta-data for",
                " \t * @param action callback that will do the actual work",
                "@@ -317,3 +317,3 @@ public abstract class JdbcUtils {",
                " \t * the DatabaseMetaDataCallback's {@code processMetaData} method",
                "-\t * @throws MetaDataAccessException if meta data access failed",
                "+\t * @throws MetaDataAccessException if meta-data access failed",
                " \t */",
                "@@ -354,3 +354,3 @@ public abstract class JdbcUtils {",
                " \t * and extract the invocation result.",
                "-\t * @param dataSource the DataSource to extract meta data for",
                "+\t * @param dataSource the DataSource to extract meta-data for",
                " \t * @param metaDataMethodName the name of the DatabaseMetaData method to call",
                "@@ -423,3 +423,3 @@ public abstract class JdbcUtils {",
                " \t * various drivers/platforms provide varying names at runtime.",
                "-\t * @param source the name as provided in database metadata",
                "+\t * @param source the name as provided in database meta-data",
                " \t * @return the common name to be used (e.g. \"DB2\" or \"Sybase\")",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/support/MetaDataAccessException.java b/spring-jdbc/src/main/java/org/springframework/jdbc/support/MetaDataAccessException.java",
                "index 45d9d57f1c..9923a7580f 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/support/MetaDataAccessException.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/MetaDataAccessException.java",
                "@@ -21,3 +21,3 @@ import org.springframework.core.NestedCheckedException;",
                " /**",
                "- * Exception indicating that something went wrong during JDBC metadata lookup.",
                "+ * Exception indicating that something went wrong during JDBC meta-data lookup.",
                "  *",
                "@@ -25,3 +25,3 @@ import org.springframework.core.NestedCheckedException;",
                "  * handled rather than cause the application to fail. Failure to read JDBC",
                "- * metadata is usually not a fatal problem.",
                "+ * meta-data is usually not a fatal problem.",
                "  *",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.java b/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.java",
                "index d9afb8837f..a71156badb 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -46,3 +46,3 @@ import org.springframework.jdbc.InvalidResultSetAccessException;",
                "  * by default. This factory loads a \"sql-error-codes.xml\" file from the class path,",
                "- * defining error code mappings for database names from database metadata.",
                "+ * defining error code mappings for database names from database meta-data.",
                "  * <li>Fallback to a fallback translator. {@link SQLStateSQLExceptionTranslator} is the",
                "@@ -89,4 +89,4 @@ public class SQLErrorCodeSQLExceptionTranslator extends AbstractFallbackSQLExcep",
                " \t * Invoking this constructor will cause a Connection to be obtained",
                "-\t * from the DataSource to get the metadata.",
                "-\t * @param dataSource DataSource to use to find metadata and establish",
                "+\t * from the DataSource to get the meta-data.",
                "+\t * @param dataSource DataSource to use to find meta-data and establish",
                " \t * which error codes are usable",
                "@@ -102,3 +102,3 @@ public class SQLErrorCodeSQLExceptionTranslator extends AbstractFallbackSQLExcep",
                " \t * Invoking this constructor will avoid obtaining a Connection from the",
                "-\t * DataSource to get the metadata.",
                "+\t * DataSource to get the meta-data.",
                " \t * @param dbName the database product name that identifies the error codes entry",
                "@@ -114,3 +114,3 @@ public class SQLErrorCodeSQLExceptionTranslator extends AbstractFallbackSQLExcep",
                " \t * Create a SQLErrorCode translator given these error codes.",
                "-\t * Does not require a database metadata lookup to be performed using a connection.",
                "+\t * Does not require a database meta-data lookup to be performed using a connection.",
                " \t * @param sec error codes",
                "@@ -126,4 +126,4 @@ public class SQLErrorCodeSQLExceptionTranslator extends AbstractFallbackSQLExcep",
                " \t * <p>Setting this property will cause a Connection to be obtained from",
                "-\t * the DataSource to get the metadata.",
                "-\t * @param dataSource DataSource to use to find metadata and establish",
                "+\t * the DataSource to get the meta-data.",
                "+\t * @param dataSource DataSource to use to find meta-data and establish",
                " \t * which error codes are usable",
                "@@ -139,3 +139,3 @@ public class SQLErrorCodeSQLExceptionTranslator extends AbstractFallbackSQLExcep",
                " \t * <p>Setting this property will avoid obtaining a Connection from the DataSource",
                "-\t * to get the metadata.",
                "+\t * to get the meta-data.",
                " \t * @param dbName the database product name that identifies the error codes entry",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java b/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java",
                "index 3d6569a5fb..2301700f9c 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java",
                "@@ -155,3 +155,3 @@ public class SQLErrorCodesFactory {",
                " \t * Return the {@link SQLErrorCodes} instance for the given database.",
                "-\t * <p>No need for a database metadata lookup.",
                "+\t * <p>No need for a database meta-data lookup.",
                " \t * @param databaseName the database name (must not be {@code null})",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/support/rowset/SqlRowSet.java b/spring-jdbc/src/main/java/org/springframework/jdbc/support/rowset/SqlRowSet.java",
                "index ac434886b5..83226f9f54 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/support/rowset/SqlRowSet.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/rowset/SqlRowSet.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -29,14 +29,13 @@ import org.springframework.jdbc.InvalidResultSetAccessException;",
                " /**",
                "- * Mirror interface for {@link javax.sql.RowSet}, representing",
                "- * disconnected {@link java.sql.ResultSet} data.",
                "+ * Mirror interface for {@link javax.sql.RowSet}, representing a disconnected variant of",
                "+ * {@link java.sql.ResultSet} data.",
                "  *",
                "- * <p>The main difference to the standard JDBC RowSet is that a",
                "- * {@link java.sql.SQLException} is never thrown here. This allows a",
                "- * SqlRowSet to be used without having to deal with checked exceptions.",
                "- * A SqlRowSet will throw Spring's {@link InvalidResultSetAccessException}",
                "+ * <p>The main difference to the standard JDBC RowSet is that a {@link java.sql.SQLException}",
                "+ * is never thrown here. This allows a SqlRowSet to be used without having to deal with",
                "+ * checked exceptions. A SqlRowSet will throw Spring's {@link InvalidResultSetAccessException}",
                "  * instead (when appropriate).",
                "  *",
                "- * <p>Note: This interface extends the {@code java.io.Serializable} marker",
                "- * interface. Implementations, which typically hold disconnected data,",
                "- * are encouraged to be actually serializable (as far as possible).",
                "+ * <p>Note: This interface extends the {@code java.io.Serializable} marker interface.",
                "+ * Implementations, which typically hold disconnected data, are encouraged to be actually",
                "+ * serializable (as far as possible).",
                "  *",
                "@@ -53,3 +52,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the meta data, i.e. number, types and properties",
                "+\t * Retrieve the meta-data, i.e. number, types and properties",
                " \t * for the columns of this row set.",
                "@@ -72,4 +71,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a BigDecimal object.",
                "+\t * Retrieve the value of the indicated column in the current row as a BigDecimal object.",
                " \t * @param columnIndex the column index",
                "@@ -81,4 +79,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a BigDecimal object.",
                "+\t * Retrieve the value of the indicated column in the current row as a BigDecimal object.",
                " \t * @param columnLabel the column label",
                "@@ -90,4 +87,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a boolean.",
                "+\t * Retrieve the value of the indicated column in the current row as a boolean.",
                " \t * @param columnIndex the column index",
                "@@ -99,4 +95,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a boolean.",
                "+\t * Retrieve the value of the indicated column in the current row as a boolean.",
                " \t * @param columnLabel the column label",
                "@@ -108,4 +103,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a byte.",
                "+\t * Retrieve the value of the indicated column in the current row as a byte.",
                " \t * @param columnIndex the column index",
                "@@ -117,4 +111,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a byte.",
                "+\t * Retrieve the value of the indicated column in the current row as a byte.",
                " \t * @param columnLabel the column label",
                "@@ -126,4 +119,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Date object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Date object.",
                " \t * @param columnIndex the column index",
                "@@ -135,4 +127,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Date object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Date object.",
                " \t * @param columnLabel the column label",
                "@@ -144,4 +135,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Date object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Date object.",
                " \t * @param columnIndex the column index",
                "@@ -154,4 +144,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Date object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Date object.",
                " \t * @param columnLabel the column label",
                "@@ -164,4 +153,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Double object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Double object.",
                " \t * @param columnIndex the column index",
                "@@ -173,4 +161,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Double object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Double object.",
                " \t * @param columnLabel the column label",
                "@@ -182,4 +169,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a float.",
                "+\t * Retrieve the value of the indicated column in the current row as a float.",
                " \t * @param columnIndex the column index",
                "@@ -191,4 +177,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a float.",
                "+\t * Retrieve the value of the indicated column in the current row as a float.",
                " \t * @param columnLabel the column label",
                "@@ -200,4 +185,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as an int.",
                "+\t * Retrieve the value of the indicated column in the current row as an int.",
                " \t * @param columnIndex the column index",
                "@@ -209,4 +193,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as an int.",
                "+\t * Retrieve the value of the indicated column in the current row as an int.",
                " \t * @param columnLabel the column label",
                "@@ -218,4 +201,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a long.",
                "+\t * Retrieve the value of the indicated column in the current row as a long.",
                " \t * @param columnIndex the column index",
                "@@ -227,4 +209,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a long.",
                "+\t * Retrieve the value of the indicated column in the current row as a long.",
                " \t * @param columnLabel the column label",
                "@@ -236,4 +217,4 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a String (for NCHAR, NVARCHAR, LONGNVARCHAR columns).",
                "+\t * Retrieve the value of the indicated column in the current row as a String",
                "+\t * (for NCHAR, NVARCHAR, LONGNVARCHAR columns).",
                " \t * @param columnIndex the column index",
                "@@ -246,4 +227,4 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a String (for NCHAR, NVARCHAR, LONGNVARCHAR columns).",
                "+\t * Retrieve the value of the indicated column in the current row as a String",
                "+\t * (for NCHAR, NVARCHAR, LONGNVARCHAR columns).",
                " \t * @param columnLabel the column label",
                "@@ -256,4 +237,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as an Object.",
                "+\t * Retrieve the value of the indicated column in the current row as an Object.",
                " \t * @param columnIndex the column index",
                "@@ -265,4 +245,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as an Object.",
                "+\t * Retrieve the value of the indicated column in the current row as an Object.",
                " \t * @param columnLabel the column label",
                "@@ -274,4 +253,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as an Object.",
                "+\t * Retrieve the value of the indicated column in the current row as an Object.",
                " \t * @param columnIndex the column index",
                "@@ -284,4 +262,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as an Object.",
                "+\t * Retrieve the value of the indicated column in the current row as an Object.",
                " \t * @param columnLabel the column label",
                "@@ -294,4 +271,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as an Object.",
                "+\t * Retrieve the value of the indicated column in the current row as an Object.",
                " \t * @param columnIndex the column index",
                "@@ -305,4 +281,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as an Object.",
                "+\t * Retrieve the value of the indicated column in the current row as an Object.",
                " \t * @param columnLabel the column label",
                "@@ -316,4 +291,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a short.",
                "+\t * Retrieve the value of the indicated column in the current row as a short.",
                " \t * @param columnIndex the column index",
                "@@ -325,4 +299,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a short.",
                "+\t * Retrieve the value of the indicated column in the current row as a short.",
                " \t * @param columnLabel the column label",
                "@@ -334,4 +307,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a String.",
                "+\t * Retrieve the value of the indicated column in the current row as a String.",
                " \t * @param columnIndex the column index",
                "@@ -343,4 +315,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a String.",
                "+\t * Retrieve the value of the indicated column in the current row as a String.",
                " \t * @param columnLabel the column label",
                "@@ -352,4 +323,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Time object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Time object.",
                " \t * @param columnIndex the column index",
                "@@ -361,4 +331,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Time object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Time object.",
                " \t * @param columnLabel the column label",
                "@@ -370,4 +339,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Time object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Time object.",
                " \t * @param columnIndex the column index",
                "@@ -380,4 +348,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Time object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Time object.",
                " \t * @param columnLabel the column label",
                "@@ -390,4 +357,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Timestamp object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Timestamp object.",
                " \t * @param columnIndex the column index",
                "@@ -399,4 +365,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Timestamp object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Timestamp object.",
                " \t * @param columnLabel the column label",
                "@@ -408,4 +373,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Timestamp object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Timestamp object.",
                " \t * @param columnIndex the column index",
                "@@ -418,4 +382,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Retrieve the value of the indicated column in the current row",
                "-\t * as a Timestamp object.",
                "+\t * Retrieve the value of the indicated column in the current row as a Timestamp object.",
                " \t * @param columnLabel the column label",
                "@@ -431,7 +394,5 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Move the cursor to the given row number in the row set,",
                "-\t * just after the last row.",
                "+\t * Move the cursor to the given row number in the row set, just after the last row.",
                " \t * @param row the number of the row where the cursor should move",
                "-\t * @return {@code true} if the cursor is on the row set,",
                "-\t * {@code false} otherwise",
                "+\t * @return {@code true} if the cursor is on the row set, {@code false} otherwise",
                " \t * @see java.sql.ResultSet#absolute(int)",
                "@@ -447,4 +408,3 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Move the cursor to the front of this row set,",
                "-\t * just before the first row.",
                "+\t * Move the cursor to the front of this row set, just before the first row.",
                " \t * @see java.sql.ResultSet#beforeFirst()",
                "@@ -455,4 +415,3 @@ public interface SqlRowSet extends Serializable {",
                " \t * Move the cursor to the first row of this row set.",
                "-\t * @return {@code true} if the cursor is on a valid row,",
                "-\t * {@code false} otherwise",
                "+\t * @return {@code true} if the cursor is on a valid row, {@code false} otherwise",
                " \t * @see java.sql.ResultSet#first()",
                "@@ -470,4 +429,3 @@ public interface SqlRowSet extends Serializable {",
                " \t * Retrieve whether the cursor is after the last row of this row set.",
                "-\t * @return {@code true} if the cursor is after the last row,",
                "-\t * {@code false} otherwise",
                "+\t * @return {@code true} if the cursor is after the last row, {@code false} otherwise",
                " \t * @see java.sql.ResultSet#isAfterLast()",
                "@@ -478,4 +436,3 @@ public interface SqlRowSet extends Serializable {",
                " \t * Retrieve whether the cursor is before the first row of this row set.",
                "-\t * @return {@code true} if the cursor is before the first row,",
                "-\t * {@code false} otherwise",
                "+\t * @return {@code true} if the cursor is before the first row, {@code false} otherwise",
                " \t * @see java.sql.ResultSet#isBeforeFirst()",
                "@@ -486,4 +443,3 @@ public interface SqlRowSet extends Serializable {",
                " \t * Retrieve whether the cursor is on the first row of this row set.",
                "-\t * @return {@code true} if the cursor is after the first row,",
                "-\t * {@code false} otherwise",
                "+\t * @return {@code true} if the cursor is after the first row, {@code false} otherwise",
                " \t * @see java.sql.ResultSet#isFirst()",
                "@@ -494,4 +450,3 @@ public interface SqlRowSet extends Serializable {",
                " \t * Retrieve whether the cursor is on the last row of this row set.",
                "-\t * @return {@code true} if the cursor is after the last row,",
                "-\t * {@code false} otherwise",
                "+\t * @return {@code true} if the cursor is after the last row, {@code false} otherwise",
                " \t * @see java.sql.ResultSet#isLast()",
                "@@ -502,4 +457,3 @@ public interface SqlRowSet extends Serializable {",
                " \t * Move the cursor to the last row of this row set.",
                "-\t * @return {@code true} if the cursor is on a valid row,",
                "-\t * {@code false} otherwise",
                "+\t * @return {@code true} if the cursor is on a valid row, {@code false} otherwise",
                " \t * @see java.sql.ResultSet#last()",
                "@@ -510,4 +464,3 @@ public interface SqlRowSet extends Serializable {",
                " \t * Move the cursor to the next row.",
                "-\t * @return {@code true} if the new row is valid,",
                "-\t * {@code false} if there are no more rows",
                "+\t * @return {@code true} if the new row is valid, {@code false} if there are no more rows",
                " \t * @see java.sql.ResultSet#next()",
                "@@ -518,4 +471,3 @@ public interface SqlRowSet extends Serializable {",
                " \t * Move the cursor to the previous row.",
                "-\t * @return {@code true} if the new row is valid,",
                "-\t * {@code false} if it is off the row set",
                "+\t * @return {@code true} if the new row is valid, {@code false} if it is off the row set",
                " \t * @see java.sql.ResultSet#previous()",
                "@@ -525,6 +477,4 @@ public interface SqlRowSet extends Serializable {",
                " \t/**",
                "-\t * Move the cursor a relative number of rows,",
                "-\t * either positive or negative.",
                "-\t * @return {@code true} if the cursor is on a row,",
                "-\t * {@code false} otherwise",
                "+\t * Move the cursor a relative number of rows, either positive or negative.",
                "+\t * @return {@code true} if the cursor is on a row, {@code false} otherwise",
                " \t * @see java.sql.ResultSet#relative(int)",
                "@@ -535,5 +485,5 @@ public interface SqlRowSet extends Serializable {",
                " \t * Report whether the last column read had a value of SQL {@code NULL}.",
                "-\t * <p>Note that you must first call one of the getter methods",
                "-\t * and then call the {@code wasNull()} method.",
                "-\t * @return {@code true} if the most recent coumn retrieved was",
                "+\t * <p>Note that you must first call one of the getter methods and then",
                "+\t * call the {@code wasNull()} method.",
                "+\t * @return {@code true} if the most recent column retrieved was",
                " \t * SQL {@code NULL}, {@code false} otherwise",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/support/converter/SimpleMessageConverter.java b/spring-jms/src/main/java/org/springframework/jms/support/converter/SimpleMessageConverter.java",
                "index b64ae749d1..b6017c04ba 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/support/converter/SimpleMessageConverter.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/support/converter/SimpleMessageConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -149,7 +149,8 @@ public class SimpleMessageConverter implements MessageConverter {",
                " \t\tfor (Map.Entry<?, ?> entry : map.entrySet()) {",
                "-\t\t\tif (!(entry.getKey() instanceof String)) {",
                "+\t\t\tObject key = entry.getKey();",
                "+\t\t\tif (!(key instanceof String)) {",
                " \t\t\t\tthrow new MessageConversionException(\"Cannot convert non-String key of type [\" +",
                "-\t\t\t\t\t\tObjectUtils.nullSafeClassName(entry.getKey()) + \"] to JMS MapMessage entry\");",
                "+\t\t\t\t\t\tObjectUtils.nullSafeClassName(key) + \"] to JMS MapMessage entry\");",
                " \t\t\t}",
                "-\t\t\tmessage.setObject((String) entry.getKey(), entry.getValue());",
                "+\t\t\tmessage.setObject((String) key, entry.getValue());",
                " \t\t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SubscriptionRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SubscriptionRegistry.java",
                "index ac9dc15e54..c16b914026 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SubscriptionRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SubscriptionRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -47,7 +47,7 @@ public interface SubscriptionRegistry {",
                " \t/**",
                "-\t * Find all subscriptions that should receive the given message. The map",
                "-\t * returned is safe to iterate and will never be modified.",
                "+\t * Find all subscriptions that should receive the given message.",
                "+\t * The map returned is safe to iterate and will never be modified.",
                " \t * @param message the message",
                "-\t * @return a {@code MultiValueMap} with sessionId-subscriptionId pairs,",
                "-\t * possibly empty.",
                "+\t * @return a {@code MultiValueMap} with sessionId-subscriptionId pairs",
                "+\t * (possibly empty)",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java",
                "index 3c875529d2..a51917b964 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,3 +23,2 @@ import java.util.Locale;",
                " import java.util.Map;",
                "-import java.util.Map.Entry;",
                " import java.util.Properties;",
                "@@ -141,3 +140,3 @@ public class ContentNegotiationManagerFactoryBean",
                " \t\tif (!CollectionUtils.isEmpty(mediaTypes)) {",
                "-\t\t\tfor (Entry<Object, Object> entry : mediaTypes.entrySet()) {",
                "+\t\t\tfor (Map.Entry<Object, Object> entry : mediaTypes.entrySet()) {",
                " \t\t\t\tString extension = ((String)entry.getKey()).toLowerCase(Locale.ENGLISH);",
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java b/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                "index 9c518c4eb4..397933b72e 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -24,3 +24,2 @@ import java.util.Locale;",
                " import java.util.Map;",
                "-import java.util.Map.Entry;",
                " import java.util.concurrent.ConcurrentHashMap;",
                "@@ -58,3 +57,3 @@ public class MappingMediaTypeFileExtensionResolver implements MediaTypeFileExten",
                " \t\tif (mediaTypes != null) {",
                "-\t\t\tfor (Entry<String, MediaType> entries : mediaTypes.entrySet()) {",
                "+\t\t\tfor (Map.Entry<String, MediaType> entries : mediaTypes.entrySet()) {",
                " \t\t\t\tString extension = entries.getKey().toLowerCase(Locale.ENGLISH);",
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java",
                "index 560b3ff32e..02d83653f3 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java",
                "@@ -157,6 +157,4 @@ final class HierarchicalUriComponents extends UriComponents {",
                " \t\t\t\t\t\tqueryBuilder.append(name);",
                "-",
                " \t\t\t\t\t\tif (value != null) {",
                "-\t\t\t\t\t\t\tqueryBuilder.append('=');",
                "-\t\t\t\t\t\t\tqueryBuilder.append(value.toString());",
                "+\t\t\t\t\t\t\tqueryBuilder.append('=').append(value.toString());",
                " \t\t\t\t\t\t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "index 60fe9b7c21..e5d87d5153 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -22,3 +22,2 @@ import java.util.LinkedHashMap;",
                " import java.util.Map;",
                "-import java.util.Map.Entry;",
                " import java.util.Properties;",
                "@@ -537,3 +536,3 @@ public class UrlPathHelper {",
                " \t\t\tMap<String, String> decodedVars = new LinkedHashMap<String, String>(vars.size());",
                "-\t\t\tfor (Entry<String, String> entry : vars.entrySet()) {",
                "+\t\t\tfor (Map.Entry<String, String> entry : vars.entrySet()) {",
                " \t\t\t\tdecodedVars.put(entry.getKey(), decodeInternal(request, entry.getValue()));",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java",
                "index fd1994d7d2..57be99d174 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java",
                "@@ -25,3 +25,2 @@ import java.util.List;",
                " import java.util.Map;",
                "-import java.util.Map.Entry;",
                " import java.util.concurrent.ConcurrentHashMap;",
                "@@ -450,3 +449,3 @@ public class ExceptionHandlerExceptionResolver extends AbstractHandlerMethodExce",
                "-\t\tfor (Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {",
                "+\t\tfor (Map.Entry<ControllerAdviceBean, ExceptionHandlerMethodResolver> entry : this.exceptionHandlerAdviceCache.entrySet()) {",
                " \t\t\tControllerAdviceBean advice = entry.getKey();",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java",
                "index 45fab4637b..ee229f5027 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -32,6 +32,7 @@ public class WebSocketToJettyExtensionConfigAdapter extends ExtensionConfig {",
                " \t\tsuper(extension.getName());",
                "-\t\tfor (Map.Entry<String,String> p : extension.getParameters().entrySet()) {",
                "-\t\t\tsuper.setParameter(p.getKey(), p.getValue());",
                "+\t\tfor (Map.Entry<String,String> parameter : extension.getParameters().entrySet()) {",
                "+\t\t\tsuper.setParameter(parameter.getKey(), parameter.getValue());",
                " \t\t}",
                " \t}",
                "+",
                " }"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/config/YamlProcessor.java",
                "spring-context/src/main/java/org/springframework/context/expression/BeanFactoryResolver.java",
                "spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java",
                "spring-core/src/main/java/org/springframework/core/io/support/SpringFactoriesLoader.java",
                "spring-expression/src/main/java/org/springframework/expression/BeanResolver.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/BeanPropertyRowMapper.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/PreparedStatementCreatorFactory.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/ResultSetSupportingSqlParameter.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlInOutParameter.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlOutParameter.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlParameter.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlParameterValue.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlReturnResultSet.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/SqlReturnUpdateCount.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProvider.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataProviderFactory.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/DerbyTableMetaDataProvider.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericCallMetaDataProvider.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/GenericTableMetaDataProvider.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/OracleTableMetaDataProvider.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataProvider.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableParameterMetaData.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/package-info.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCall.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcCallOperations.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcInsert.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/SimpleJdbcInsertOperations.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/package-info.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/support/DatabaseMetaDataCallback.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcUtils.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/support/MetaDataAccessException.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/support/SQLErrorCodesFactory.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/support/rowset/SqlRowSet.java",
                "spring-jms/src/main/java/org/springframework/jms/support/converter/SimpleMessageConverter.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SubscriptionRegistry.java",
                "spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManagerFactoryBean.java",
                "spring-web/src/main/java/org/springframework/web/accept/MappingMediaTypeFileExtensionResolver.java",
                "spring-web/src/main/java/org/springframework/web/util/HierarchicalUriComponents.java",
                "spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "bcda243f637391d9d7c243b847853a3624baba49"
                ],
                [
                    "no-tag",
                    "cddcf3637d1bb035a47e09f1d669040507025047"
                ],
                [
                    "no-tag",
                    "0bc01fcd55ea57290f7fbfcba0117f8af90fb3ba"
                ],
                [
                    "no-tag",
                    "702b27e1e4d67fd8041427d779c15a8d33ef1522"
                ],
                [
                    "no-tag",
                    "fafb823e8de25ad426e01a927f08042718b32fd6"
                ],
                [
                    "no-tag",
                    "49eafe426142f55f415c2c289333e133180d13e5"
                ],
                [
                    "no-tag",
                    "b0ed385f84f8610f5fe482d319c881f3aaa771ac"
                ],
                [
                    "no-tag",
                    "04a8f817108c2d3bce636b36ba869c858d152ba0"
                ],
                [
                    "no-tag",
                    "c1405ef140b9ee62be111c4bed1a78787161b0ad"
                ],
                [
                    "no-tag",
                    "3988dd9ebb976dce8d79ba31bcc515c5e62154de"
                ],
                [
                    "no-tag",
                    "912c270f2bebf3f24dd16dcaea576a58d500852e"
                ],
                [
                    "no-tag",
                    "b2d87abcbbead29fe4538329a05636d2b6503cc7"
                ],
                [
                    "no-tag",
                    "b165475eb60f65b902940cbaa2f6f6f6166fa3d3"
                ],
                [
                    "no-tag",
                    "4fef1fe820627e6462413f4c4b658d24146367a2"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: WebSocket",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/WebSocketToJettyExtensionConfigAdapter.java, spring-messaging/src/main/java/org/springframework/messaging/simp/broker/SubscriptionRegistry.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: broker, code, websocket, message",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4aae6a6dda54dc594285b3cc4df93fb6ff041c53",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522191303,
            "hunks": 39,
            "message": "Use Map.forEach instead of manual Map.Entry iteration wherever possible SPR-16646",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/remoting/support/SimpleHttpServerFactoryBean.java b/spring-context/src/main/java/org/springframework/remoting/support/SimpleHttpServerFactoryBean.java",
                "index 57d4a22813..47a4452514 100644",
                "--- a/spring-context/src/main/java/org/springframework/remoting/support/SimpleHttpServerFactoryBean.java",
                "+++ b/spring-context/src/main/java/org/springframework/remoting/support/SimpleHttpServerFactoryBean.java",
                "@@ -155,4 +155,4 @@ public class SimpleHttpServerFactoryBean implements FactoryBean<HttpServer>, Ini",
                " \t\tif (this.contexts != null) {",
                "-\t\t\tfor (String key : this.contexts.keySet()) {",
                "-\t\t\t\tHttpContext httpContext = this.server.createContext(key, this.contexts.get(key));",
                "+\t\t\tthis.contexts.forEach((key, context) -> {",
                "+\t\t\t\tHttpContext httpContext = this.server.createContext(key, context);",
                " \t\t\t\tif (this.filters != null) {",
                "@@ -163,3 +163,3 @@ public class SimpleHttpServerFactoryBean implements FactoryBean<HttpServer>, Ini",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "index b926fae2d5..15cbb79179 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "@@ -198,4 +198,4 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\tMultiValueMap<String, String> result = new LinkedMultiValueMap<>(allMatches.size());",
                "-\t\tfor (String sessionId : allMatches.keySet()) {",
                "-\t\t\tfor (String subId : allMatches.get(sessionId)) {",
                "+\t\tallMatches.forEach((sessionId, subIds) -> {",
                "+\t\t\tfor (String subId : subIds) {",
                " \t\t\t\tSessionSubscriptionInfo info = this.subscriptionRegistry.getSubscriptions(sessionId);",
                "@@ -227,3 +227,3 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t\treturn result;",
                "diff --git a/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java",
                "index f9eaf0208b..fa0440baa1 100644",
                "--- a/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java",
                "+++ b/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java",
                "@@ -528,4 +528,3 @@ public class MockHttpServletRequest implements HttpServletRequest {",
                " \t\tAssert.notNull(params, \"Parameter map must not be null\");",
                "-\t\tfor (String key : params.keySet()) {",
                "-\t\t\tObject value = params.get(key);",
                "+\t\tparams.forEach((key, value) -> {",
                " \t\t\tif (value instanceof String) {",
                "@@ -540,3 +539,3 @@ public class MockHttpServletRequest implements HttpServletRequest {",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "@@ -578,4 +577,3 @@ public class MockHttpServletRequest implements HttpServletRequest {",
                " \t\tAssert.notNull(params, \"Parameter map must not be null\");",
                "-\t\tfor (String key : params.keySet()) {",
                "-\t\t\tObject value = params.get(key);",
                "+\t\tparams.forEach((key, value) -> {",
                " \t\t\tif (value instanceof String) {",
                "@@ -590,3 +588,3 @@ public class MockHttpServletRequest implements HttpServletRequest {",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java",
                "index 1fd56b25f8..1e83741e67 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java",
                "@@ -662,5 +662,3 @@ public class Jackson2ObjectMapperBuilder {",
                "-\t\tfor (Class<?> target : this.mixIns.keySet()) {",
                "-\t\t\tobjectMapper.addMixIn(target, this.mixIns.get(target));",
                "-\t\t}",
                "+\t\tthis.mixIns.forEach((target, mixinSource) -> objectMapper.addMixIn(target, mixinSource));",
                "@@ -674,5 +672,3 @@ public class Jackson2ObjectMapperBuilder {",
                " \t\tcustomizeDefaultFeatures(objectMapper);",
                "-\t\tfor (Object feature : this.features.keySet()) {",
                "-\t\t\tconfigureFeature(objectMapper, feature, this.features.get(feature));",
                "-\t\t}",
                "+\t\tthis.features.forEach((feature, enabled) -> configureFeature(objectMapper, feature, enabled));",
                "@@ -701,5 +697,4 @@ public class Jackson2ObjectMapperBuilder {",
                " \tprivate <T> void addSerializers(SimpleModule module) {",
                "-\t\tfor (Class<?> type : this.serializers.keySet()) {",
                "-\t\t\tmodule.addSerializer((Class<? extends T>) type, (JsonSerializer<T>) this.serializers.get(type));",
                "-\t\t}",
                "+\t\tthis.serializers.forEach((type, serializer) ->",
                "+\t\t\t\tmodule.addSerializer((Class<? extends T>) type, (JsonSerializer<T>) serializer));",
                " \t}",
                "@@ -708,5 +703,4 @@ public class Jackson2ObjectMapperBuilder {",
                " \tprivate <T> void addDeserializers(SimpleModule module) {",
                "-\t\tfor (Class<?> type : this.deserializers.keySet()) {",
                "-\t\t\tmodule.addDeserializer((Class<T>) type, (JsonDeserializer<? extends T>) this.deserializers.get(type));",
                "-\t\t}",
                "+\t\tthis.deserializers.forEach((type, deserializer) ->",
                "+\t\t\t\tmodule.addDeserializer((Class<T>) type, (JsonDeserializer<? extends T>) deserializer));",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/method/annotation/SessionAttributesHandler.java b/spring-web/src/main/java/org/springframework/web/method/annotation/SessionAttributesHandler.java",
                "index ee90f4f95f..4582fd6f34 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/method/annotation/SessionAttributesHandler.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/method/annotation/SessionAttributesHandler.java",
                "@@ -114,4 +114,3 @@ public class SessionAttributesHandler {",
                " \tpublic void storeAttributes(WebRequest request, Map<String, ?> attributes) {",
                "-\t\tfor (String name : attributes.keySet()) {",
                "-\t\t\tObject value = attributes.get(name);",
                "+\t\tattributes.forEach((name, value) -> {",
                " \t\t\tif (value != null && isHandlerSessionAttribute(name, value.getClass())) {",
                "@@ -119,3 +118,3 @@ public class SessionAttributesHandler {",
                " \t\t\t}",
                "-\t\t}",
                "+\t\t});",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "index feefad6540..833da5b73b 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "@@ -569,7 +569,7 @@ public class UrlPathHelper {",
                " \t\t\tMultiValueMap<String, String> decodedVars = new LinkedMultiValueMap<>(vars.size());",
                "-\t\t\tfor (String key : vars.keySet()) {",
                "-\t\t\t\tfor (String value : vars.get(key)) {",
                "+\t\t\tvars.forEach((key, values) -> {",
                "+\t\t\t\tfor (String value : values) {",
                " \t\t\t\t\tdecodedVars.add(key, decodeInternal(request, value));",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t\treturn decodedVars;",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMapMethodArgumentResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMapMethodArgumentResolver.java",
                "index 1a81a98fb6..513ff6cdd8 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMapMethodArgumentResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMapMethodArgumentResolver.java",
                "@@ -92,7 +92,7 @@ public class MatrixVariableMapMethodArgumentResolver extends HandlerMethodArgume",
                " \t\t\tfor (MultiValueMap<String, String> vars : matrixVariables.values()) {",
                "-\t\t\t\tfor (String name : vars.keySet()) {",
                "-\t\t\t\t\tfor (String value : vars.get(name)) {",
                "+\t\t\t\tvars.forEach((name, values) -> {",
                "+\t\t\t\t\tfor (String value : values) {",
                " \t\t\t\t\t\tmap.add(name, value);",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "+\t\t\t\t});",
                " \t\t\t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/FlashMap.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/FlashMap.java",
                "index 329f459a66..ae947f9f0a 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/FlashMap.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/FlashMap.java",
                "@@ -82,7 +82,7 @@ public final class FlashMap extends HashMap<String, Object> implements Comparabl",
                " \t\tif (params != null) {",
                "-\t\t\tfor (String key : params.keySet()) {",
                "-\t\t\t\tfor (String value : params.get(key)) {",
                "+\t\t\tparams.forEach((key, values) -> {",
                "+\t\t\t\tfor (String value : values) {",
                " \t\t\t\t\taddTargetRequestParam(key, value);",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MatrixVariableMapMethodArgumentResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MatrixVariableMapMethodArgumentResolver.java",
                "index b66a24080d..14819a2b40 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MatrixVariableMapMethodArgumentResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MatrixVariableMapMethodArgumentResolver.java",
                "@@ -88,7 +88,7 @@ public class MatrixVariableMapMethodArgumentResolver implements HandlerMethodArg",
                " \t\t\tfor (MultiValueMap<String, String> vars : matrixVariables.values()) {",
                "-\t\t\t\tfor (String name : vars.keySet()) {",
                "-\t\t\t\t\tfor (String value : vars.get(name)) {",
                "+\t\t\t\tvars.forEach((name, values) -> {",
                "+\t\t\t\t\tfor (String value : values) {",
                " \t\t\t\t\t\tmap.add(name, value);",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "+\t\t\t\t});",
                " \t\t\t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.java",
                "index 825b043f4f..84fb2652e7 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.java",
                "@@ -113,5 +113,3 @@ public class RedirectAttributesModelMap extends ModelMap implements RedirectAttr",
                " \t\tif (attributes != null) {",
                "-\t\t\tfor (String key : attributes.keySet()) {",
                "-\t\t\t\taddAttribute(key, attributes.get(key));",
                "-\t\t\t}",
                "+\t\t\tattributes.forEach(this::addAttribute);",
                " \t\t}",
                "@@ -127,7 +125,7 @@ public class RedirectAttributesModelMap extends ModelMap implements RedirectAttr",
                " \t\tif (attributes != null) {",
                "-\t\t\tfor (String key : attributes.keySet()) {",
                "+\t\t\tattributes.forEach((key, attribute) -> {",
                " \t\t\t\tif (!containsKey(key)) {",
                "-\t\t\t\t\taddAttribute(key, attributes.get(key));",
                "+\t\t\t\t\taddAttribute(key, attribute);",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "@@ -157,5 +155,3 @@ public class RedirectAttributesModelMap extends ModelMap implements RedirectAttr",
                " \t\tif (map != null) {",
                "-\t\t\tfor (String key : map.keySet()) {",
                "-\t\t\t\tput(key, formatValue(map.get(key)));",
                "-\t\t\t}",
                "+\t\t\tmap.forEach((key, value) -> put(key, formatValue(value)));",
                " \t\t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/client/AbstractWebSocketClient.java b/spring-websocket/src/main/java/org/springframework/web/socket/client/AbstractWebSocketClient.java",
                "index 56b6e65e57..5bf3522d6e 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/client/AbstractWebSocketClient.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/client/AbstractWebSocketClient.java",
                "@@ -86,4 +86,3 @@ public abstract class AbstractWebSocketClient implements WebSocketClient {",
                " \t\tif (headers != null) {",
                "-\t\t\tfor (String header : headers.keySet()) {",
                "-\t\t\t\tList<String> values = headers.get(header);",
                "+\t\t\theaders.forEach((header, values) -> {",
                " \t\t\t\tif (values != null && !specialHeaders.contains(header.toLowerCase())) {",
                "@@ -91,3 +90,3 @@ public abstract class AbstractWebSocketClient implements WebSocketClient {",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java b/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "index 8f4af0214c..9043df396d 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "@@ -149,5 +149,3 @@ public class JettyWebSocketClient extends AbstractWebSocketClient implements Lif",
                "-\t\tfor (String header : headers.keySet()) {",
                "-\t\t\trequest.setHeader(header, headers.get(header));",
                "-\t\t}",
                "+\t\theaders.forEach(request::setHeader);",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/AbstractWebSocketHandlerRegistration.java b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/AbstractWebSocketHandlerRegistration.java",
                "index fe3d1b9ed5..0e180c1ae3 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/AbstractWebSocketHandlerRegistration.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/AbstractWebSocketHandlerRegistration.java",
                "@@ -155,4 +155,4 @@ public abstract class AbstractWebSocketHandlerRegistration<M> implements WebSock",
                " \t\t\tSockJsService sockJsService = this.sockJsServiceRegistration.getSockJsService();",
                "-\t\t\tfor (WebSocketHandler wsHandler : this.handlerMap.keySet()) {",
                "-\t\t\t\tfor (String path : this.handlerMap.get(wsHandler)) {",
                "+\t\t\tthis.handlerMap.forEach((wsHandler, paths) -> {",
                "+\t\t\t\tfor (String path : paths) {",
                " \t\t\t\t\tString pathPattern = (path.endsWith(\"/\") ? path + \"**\" : path + \"/**\");",
                "@@ -160,3 +160,3 @@ public abstract class AbstractWebSocketHandlerRegistration<M> implements WebSock",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "@@ -165,7 +165,7 @@ public abstract class AbstractWebSocketHandlerRegistration<M> implements WebSock",
                " \t\t\tHandshakeInterceptor[] interceptors = getInterceptors();",
                "-\t\t\tfor (WebSocketHandler wsHandler : this.handlerMap.keySet()) {",
                "-\t\t\t\tfor (String path : this.handlerMap.get(wsHandler)) {",
                "+\t\t\tthis.handlerMap.forEach((wsHandler, paths) -> {",
                "+\t\t\t\tfor (String path : paths) {",
                " \t\t\t\t\taddWebSocketHandlerMapping(mappings, wsHandler, handshakeHandler, interceptors, path);",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java",
                "index 6be3b68c6c..d415f6200b 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java",
                "@@ -129,7 +129,7 @@ public class ServletWebSocketHandlerRegistry implements WebSocketHandlerRegistry",
                " \t\t\tMultiValueMap<HttpRequestHandler, String> mappings = registration.getMappings();",
                "-\t\t\tfor (HttpRequestHandler httpHandler : mappings.keySet()) {",
                "-\t\t\t\tfor (String pattern : mappings.get(httpHandler)) {",
                "+\t\t\tmappings.forEach((httpHandler, patterns) -> {",
                "+\t\t\t\tfor (String pattern : patterns) {",
                " \t\t\t\t\turlMap.put(pattern, httpHandler);",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java",
                "index fd1d854739..ac162ef97b 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java",
                "@@ -152,7 +152,7 @@ public class WebMvcStompEndpointRegistry implements StompEndpointRegistry {",
                " \t\t\tMultiValueMap<HttpRequestHandler, String> mappings = registration.getMappings();",
                "-\t\t\tfor (HttpRequestHandler httpHandler : mappings.keySet()) {",
                "-\t\t\t\tfor (String pattern : mappings.get(httpHandler)) {",
                "+\t\t\tmappings.forEach((httpHandler, patterns) -> {",
                "+\t\t\t\tfor (String pattern : patterns) {",
                " \t\t\t\t\turlMap.put(pattern, httpHandler);",
                " \t\t\t\t}",
                "-\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractTyrusRequestUpgradeStrategy.java b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractTyrusRequestUpgradeStrategy.java",
                "index 8b48a583a6..6b76794ec5 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractTyrusRequestUpgradeStrategy.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractTyrusRequestUpgradeStrategy.java",
                "@@ -186,5 +186,3 @@ public abstract class AbstractTyrusRequestUpgradeStrategy extends AbstractStanda",
                " \t\t\t\t\t\t.build();",
                "-\t\tfor (String header : headers.keySet()) {",
                "-\t\t\tcontext.getHeaders().put(header, headers.get(header));",
                "-\t\t}",
                "+\t\theaders.forEach((header, value) -> context.getHeaders().put(header, value));",
                " \t\treturn context;"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/remoting/support/SimpleHttpServerFactoryBean.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "spring-test/src/main/java/org/springframework/mock/web/MockHttpServletRequest.java",
                "spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java",
                "spring-web/src/main/java/org/springframework/web/method/annotation/SessionAttributesHandler.java",
                "spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMapMethodArgumentResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/FlashMap.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MatrixVariableMapMethodArgumentResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/support/RedirectAttributesModelMap.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/client/AbstractWebSocketClient.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/AbstractWebSocketHandlerRegistration.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractTyrusRequestUpgradeStrategy.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e3d0ef6015f14ceb7baf380ca0598904d75731d5"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: WebSocket",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/ServletWebSocketHandlerRegistry.java, spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/WebMvcStompEndpointRegistry.java, spring-websocket/src/main/java/org/springframework/web/socket/server/standard/AbstractTyrusRequestUpgradeStrategy.java, spring-websocket/src/main/java/org/springframework/web/socket/client/jetty/JettyWebSocketClient.java, spring-websocket/src/main/java/org/springframework/web/socket/client/AbstractWebSocketClient.java, spring-websocket/src/main/java/org/springframework/web/socket/config/annotation/AbstractWebSocketHandlerRegistration.java, spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: broker, endpoint, stomp, websocket",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "60b19c784d7c8431ac0545a18607fe18fff4bfda",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429873973,
            "hunks": 62,
            "message": "Update TCP/Reactor Issue: SPR-12599",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 8b5239dea1..b97c681d0b 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -119,5 +119,5 @@ configure(allprojects) { project ->",
                " \trepositories {",
                "-\t\tmavenLocal()",
                " \t\tmaven { url \"https://repo.spring.io/libs-release\" }",
                " \t\tmaven { url \"https://repo.spring.io/milestone\" }",
                "+\t\tmaven { url \"https://repo.spring.io/snapshot\" } // for reactor 2.0.1 snapshot",
                " \t}",
                "@@ -489,2 +489,3 @@ project(\"spring-messaging\") {",
                " \t\tcompile(project(\":spring-context\"))",
                "+\t\toptional(\"io.projectreactor:reactor-core:${reactorVersion}\")",
                " \t\toptional(\"io.projectreactor:reactor-net:${reactorVersion}\") {",
                "@@ -499,3 +500,2 @@ project(\"spring-messaging\") {",
                " \t\ttestCompile(project(\":spring-test\"))",
                "-\t\ttestCompile('org.slf4j:slf4j-log4j12:1.7.10')",
                " \t\ttestCompile(\"javax.inject:javax.inject-tck:1\")",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2StompCodec.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2StompCodec.java",
                "index 4ee2074da0..4f211d6fc1 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2StompCodec.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2StompCodec.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java",
                "index 59abaa32a4..23220225e1 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java",
                "@@ -20,2 +20,3 @@ import org.springframework.messaging.tcp.TcpOperations;",
                " import org.springframework.messaging.tcp.reactor.Reactor2TcpClient;",
                "+import org.springframework.messaging.tcp.reactor.Reactor2TcpClient.TcpClientSpecFactory;",
                " import org.springframework.util.concurrent.ListenableFuture;",
                "@@ -26,6 +27,6 @@ import reactor.core.config.DispatcherType;",
                " import reactor.core.config.ReactorConfiguration;",
                "-import reactor.fn.Function;",
                "-import reactor.io.net.Spec;",
                "+import reactor.io.net.Spec.TcpClientSpec;",
                " import java.util.Arrays;",
                "+import java.util.List;",
                " import java.util.Properties;",
                "@@ -54,3 +55,2 @@ public class Reactor2TcpStompClient extends StompClientSupport {",
                " \t * Create an instance with the given host and port.",
                "-\t *",
                " \t * @param host the host",
                "@@ -59,26 +59,6 @@ public class Reactor2TcpStompClient extends StompClientSupport {",
                " \tpublic Reactor2TcpStompClient(final String host, final int port) {",
                "-\t\tthis.tcpClient = new Reactor2TcpClient<byte[]>(createNettyTcpClientFactory(host, port));",
                "-\t}",
                "-",
                "-\tprivate Function<Spec.TcpClientSpec<Message<byte[]>, Message<byte[]>>,",
                "-\t\t\tSpec.TcpClientSpec<Message<byte[]>, Message<byte[]>>> createNettyTcpClientFactory(",
                "-\t\t\tfinal String host, final int port",
                "-\t) {",
                "-",
                "-\t\tfinal Environment environment = new Environment(new StompClientDispatcherConfigReader()).assignErrorJournal();",
                "-",
                "-\t\treturn new Function<Spec.TcpClientSpec<Message<byte[]>, Message<byte[]>>,",
                "-\t\t\t\tSpec.TcpClientSpec<Message<byte[]>, Message<byte[]>>>() {",
                "-",
                "-\t\t\t@Override",
                "-\t\t\tpublic Spec.TcpClientSpec<Message<byte[]>, Message<byte[]>> apply(Spec.TcpClientSpec<Message<byte[]>,",
                "-\t\t\t\t\tMessage<byte[]>> spec) {",
                "-",
                "-\t\t\t\treturn spec",
                "-\t\t\t\t\t\t.codec(new Reactor2StompCodec(new StompEncoder(), new StompDecoder()))",
                "-\t\t\t\t\t\t.env(environment)",
                "-\t\t\t\t\t\t.dispatcher(environment.getCachedDispatchers(\"StompClient\").get())",
                "-\t\t\t\t\t\t.connect(host, port);",
                "-\t\t\t}",
                "-\t\t};",
                "+\t\tConfigurationReader reader = new StompClientDispatcherConfigReader();",
                "+\t\tEnvironment environment = new Environment(reader).assignErrorJournal();",
                "+\t\tStompTcpClientSpecFactory factory = new StompTcpClientSpecFactory(environment, host, port);",
                "+\t\tthis.tcpClient = new Reactor2TcpClient<byte[]>(factory);",
                " \t}",
                "@@ -87,3 +67,2 @@ public class Reactor2TcpStompClient extends StompClientSupport {",
                " \t * Create an instance with a pre-configured TCP client.",
                "-\t *",
                " \t * @param tcpClient the client to use",
                "@@ -138,4 +117,31 @@ public class Reactor2TcpStompClient extends StompClientSupport {",
                " \t\t\tDispatcherConfiguration config = new DispatcherConfiguration(dispatcherName, dispatcherType, 128, 0);",
                "-\t\t\treturn new ReactorConfiguration(Arrays.<DispatcherConfiguration>asList(config), dispatcherName, new Properties",
                "-\t\t\t\t\t());",
                "+\t\t\tList<DispatcherConfiguration> configList = Arrays.<DispatcherConfiguration>asList(config);",
                "+\t\t\treturn new ReactorConfiguration(configList, dispatcherName, new Properties());",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tprivate static class StompTcpClientSpecFactory",
                "+\t\t\timplements TcpClientSpecFactory<Message<byte[]>, Message<byte[]>> {",
                "+",
                "+\t\tprivate final Environment environment;",
                "+",
                "+\t\tprivate final String host;",
                "+",
                "+\t\tprivate final int port;",
                "+",
                "+\t\tpublic StompTcpClientSpecFactory(Environment environment, String host, int port) {",
                "+\t\t\tthis.environment = environment;",
                "+\t\t\tthis.host = host;",
                "+\t\t\tthis.port = port;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic TcpClientSpec<Message<byte[]>, Message<byte[]>> apply(",
                "+\t\t\t\tTcpClientSpec<Message<byte[]>, Message<byte[]>> tcpClientSpec) {",
                "+",
                "+\t\t\treturn tcpClientSpec",
                "+\t\t\t\t\t.codec(new Reactor2StompCodec(new StompEncoder(), new StompDecoder()))",
                "+\t\t\t\t\t.env(this.environment)",
                "+\t\t\t\t\t.dispatcher(this.environment.getCachedDispatchers(\"StompClient\").get())",
                "+\t\t\t\t\t.connect(this.host, this.port);",
                " \t\t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java",
                "index e70b0974cd..935128ae76 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java",
                "@@ -56,3 +56,4 @@ abstract class AbstractPromiseToListenableFutureAdapter<S, T> implements Listena",
                " \t\t\t\t\tregistry.success(adapt(result));",
                "-\t\t\t\t} catch (Throwable t) {",
                "+\t\t\t\t}",
                "+\t\t\t\tcatch (Throwable t) {",
                " \t\t\t\t\tregistry.failure(t);",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java",
                "index d880cdd71d..3028307f31 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -18,3 +18,2 @@ package org.springframework.messaging.tcp.reactor;",
                "-",
                " import reactor.rx.Promise;",
                "@@ -22,4 +21,4 @@ import reactor.rx.Promise;",
                " /**",
                "- * A Promise-to-ListenableFutureAdapter where the source and the target from the Promise and",
                "- * the ListenableFuture respectively are of the same type.",
                "+ * A Promise-to-ListenableFutureAdapter where the source and the target from",
                "+ * the Promise and the ListenableFuture respectively are of the same type.",
                "  *",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "index d71d5f1e1d..5780392c5d 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "@@ -18,9 +18,13 @@ package org.springframework.messaging.tcp.reactor;",
                "+import java.net.InetSocketAddress;",
                "+import java.util.ArrayList;",
                "+import java.util.Arrays;",
                "+import java.util.List;",
                "+import java.util.Properties;",
                "+",
                " import io.netty.channel.nio.NioEventLoopGroup;",
                "-import org.springframework.messaging.Message;",
                "-import org.springframework.messaging.tcp.ReconnectStrategy;",
                "-import org.springframework.messaging.tcp.TcpConnectionHandler;",
                "-import org.springframework.messaging.tcp.TcpOperations;",
                "-import org.springframework.util.Assert;",
                "-import org.springframework.util.concurrent.ListenableFuture;",
                "+import reactor.Environment;",
                "+import reactor.core.config.ConfigurationReader;",
                "+import reactor.core.config.DispatcherConfiguration;",
                "+import reactor.core.config.ReactorConfiguration;",
                " import reactor.core.support.NamedDaemonThreadFactory;",
                "@@ -36,3 +40,3 @@ import reactor.io.net.NetStreams;",
                " import reactor.io.net.Reconnect;",
                "-import reactor.io.net.Spec;",
                "+import reactor.io.net.Spec.TcpClientSpec;",
                " import reactor.io.net.impl.netty.NettyClientSocketOptions;",
                "@@ -45,5 +49,8 @@ import reactor.rx.action.Signal;",
                "-import java.net.InetSocketAddress;",
                "-import java.util.ArrayList;",
                "-import java.util.List;",
                "+import org.springframework.messaging.Message;",
                "+import org.springframework.messaging.tcp.ReconnectStrategy;",
                "+import org.springframework.messaging.tcp.TcpConnectionHandler;",
                "+import org.springframework.messaging.tcp.TcpOperations;",
                "+import org.springframework.util.Assert;",
                "+import org.springframework.util.concurrent.ListenableFuture;",
                "@@ -53,4 +60,5 @@ import java.util.List;",
                "  * based on the TCP client support of the Reactor project.",
                "- * <p/>",
                "- * This client will wrap N number of clients for N {@link #connect} calls (one client by connection).",
                "+ *",
                "+ * <p>This implementation wraps N (Reactor) clients for N {@link #connect} calls,",
                "+ * i.e. a separate (Reactor) client instance for each connection.",
                "  *",
                "@@ -65,20 +73,16 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\tprivate final Function<Spec.TcpClientSpec<Message<P>, Message<P>>,",
                "-\t\t\tSpec.TcpClientSpec<Message<P>, Message<P>>> tcpClientSpec;",
                "+\tprivate final TcpClientSpecFactory<Message<P>, Message<P>> tcpClientSpecFactory;",
                "-\tprivate final List<TcpClient<Message<P>, Message<P>>> activeClients =",
                "+\tprivate final List<TcpClient<Message<P>, Message<P>>> tcpClients =",
                " \t\t\tnew ArrayList<TcpClient<Message<P>, Message<P>>>();",
                "+",
                " \t/**",
                "-\t * A constructor that creates a {@link reactor.io.net.Spec.TcpClientSpec} factory with",
                "-\t * a default {@link reactor.core.dispatch.SynchronousDispatcher} as a result of which",
                "-\t * network I/O is handled in Netty threads. Number of Netty threads can be tweaked with",
                "-\t * the {@code reactor.tcp.ioThreadCount} System property.",
                "-\t * <p>",
                "-\t * The network I/O threads will be shared amongst the active clients.",
                "-\t * </p>",
                "-\t * <p/>",
                "+\t * A constructor that creates a {@link TcpClientSpec TcpClientSpec} factory",
                "+\t * with a default {@link reactor.core.dispatch.SynchronousDispatcher}, i.e.",
                "+\t * relying on Netty threads. The number of Netty threads can be tweaked with",
                "+\t * the {@code reactor.tcp.ioThreadCount} System property. The network I/O",
                "+\t * threads will be shared amongst the active clients.",
                " \t * <p>Also see the constructor accepting a ready Reactor",
                "-\t * {@link reactor.io.net.Spec.TcpClientSpec} {@link Function} factory.",
                "-\t *",
                "+\t * {@link TcpClientSpec} {@link Function} factory.",
                " \t * @param host  the host to connect to",
                "@@ -89,3 +93,18 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\t\t//FIXME Should it be exposed in Spring ?",
                "+\t\tfinal NioEventLoopGroup eventLoopGroup = initEventLoopGroup();",
                "+",
                "+\t\tthis.tcpClientSpecFactory = new TcpClientSpecFactory<Message<P>, Message<P>>() {",
                "+",
                "+\t\t\t@Override",
                "+\t\t\tpublic TcpClientSpec<Message<P>, Message<P>> apply(TcpClientSpec<Message<P>, Message<P>> spec) {",
                "+\t\t\t\treturn spec",
                "+\t\t\t\t\t\t.env(new Environment(new SynchronousDispatcherConfigReader()))",
                "+\t\t\t\t\t\t.codec(codec)",
                "+\t\t\t\t\t\t.connect(host, port)",
                "+\t\t\t\t\t\t.options(new NettyClientSocketOptions().eventLoopGroup(eventLoopGroup));",
                "+\t\t\t}",
                "+\t\t};",
                "+\t}",
                "+",
                "+\tprivate NioEventLoopGroup initEventLoopGroup() {",
                " \t\tint ioThreadCount;",
                "@@ -93,3 +112,4 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t\tioThreadCount = Integer.parseInt(System.getProperty(\"reactor.tcp.ioThreadCount\"));",
                "-\t\t} catch (Exception i) {",
                "+\t\t}",
                "+\t\tcatch (Exception i) {",
                " \t\t\tioThreadCount = -1;",
                "@@ -100,18 +120,4 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\t\tfinal NioEventLoopGroup eventLoopGroup =",
                "-\t\t\t\tnew NioEventLoopGroup(ioThreadCount, new NamedDaemonThreadFactory(\"reactor-tcp-io\"));",
                "-",
                "-\t\tthis.tcpClientSpec = new Function<Spec.TcpClientSpec<Message<P>, Message<P>>,",
                "-\t\t\t\tSpec.TcpClientSpec<Message<P>, Message<P>>>() {",
                "-",
                "-\t\t\t@Override",
                "-\t\t\tpublic Spec.TcpClientSpec<Message<P>, Message<P>> apply(Spec.TcpClientSpec<Message<P>, Message<P>>",
                "-\t\t\t\t\t                                                        messageMessageTcpClientSpec) {",
                "-\t\t\t\treturn messageMessageTcpClientSpec",
                "-\t\t\t\t\t\t.codec(codec)",
                "-\t\t\t\t\t\t\t\t//make connect dynamic or use reconnect strategy to LB onto cluster",
                "-\t\t\t\t\t\t.connect(host, port)",
                "-\t\t\t\t\t\t.options(new NettyClientSocketOptions().eventLoopGroup(eventLoopGroup));",
                "-\t\t\t}",
                "-\t\t};",
                "+\t\treturn new NioEventLoopGroup(ioThreadCount,",
                "+\t\t\t\tnew NamedDaemonThreadFactory(\"reactor-tcp-io\"));",
                " \t}",
                "@@ -119,7 +125,8 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t/**",
                "-\t * A constructor with a pre-configured {@link reactor.io.net.Spec.TcpClientSpec} {@link Function} factory.",
                "-\t * This might be used to add SSL or specific network parameters to the generated client configuration.",
                "-\t * <p/>",
                "+\t * A constructor with a pre-configured {@link TcpClientSpec} {@link Function}",
                "+\t * factory. This might be used to add SSL or specific network parameters to",
                "+\t * the generated client configuration.",
                " \t * <p><strong>NOTE:</strong> if the client is configured with a thread-creating",
                "-\t * dispatcher, you are responsible for cleaning them, e.g. using {@link reactor.core.Dispatcher#shutdown}.",
                "+\t * dispatcher, you are responsible for cleaning them, e.g. using",
                "+\t * {@link reactor.core.Dispatcher#shutdown}.",
                " \t *",
                "@@ -127,6 +134,5 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t */",
                "-\tpublic Reactor2TcpClient(Function<Spec.TcpClientSpec<Message<P>, Message<P>>,",
                "-\t\t\tSpec.TcpClientSpec<Message<P>, Message<P>>> tcpClientSpecFactory) {",
                "+\tpublic Reactor2TcpClient(TcpClientSpecFactory<Message<P>, Message<P>> tcpClientSpecFactory) {",
                " \t\tAssert.notNull(tcpClientSpecFactory, \"'tcpClientClientFactory' must not be null\");",
                "-\t\tthis.tcpClientSpec = tcpClientSpecFactory;",
                "+\t\tthis.tcpClientSpecFactory = tcpClientSpecFactory;",
                " \t}",
                "@@ -136,19 +142,7 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \tpublic ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler) {",
                "-",
                "-\t\t//create a new client",
                "-\t\tTcpClient<Message<P>, Message<P>> tcpClient = NetStreams.tcpClient(REACTOR_TCP_CLIENT_TYPE, tcpClientSpec);",
                "-",
                "-\t\t//attach connection handler",
                "+\t\tClass<NettyTcpClient> type = REACTOR_TCP_CLIENT_TYPE;",
                "+\t\tTcpClient<Message<P>, Message<P>> tcpClient = NetStreams.tcpClient(type, this.tcpClientSpecFactory);",
                " \t\tcomposeConnectionHandling(tcpClient, connectionHandler);",
                "-",
                "-\t\t//open connection",
                " \t\tPromise<Boolean> promise = tcpClient.open();",
                "-",
                "-\t\t//adapt to ListenableFuture",
                "-\t\treturn new AbstractPromiseToListenableFutureAdapter<Boolean, Void>(promise) {",
                "-\t\t\t@Override",
                "-\t\t\tprotected Void adapt(Boolean result) {",
                "-\t\t\t\treturn null;",
                "-\t\t\t}",
                "-\t\t};",
                "+\t\treturn new BooleanToVoidAdapter(promise);",
                " \t}",
                "@@ -156,33 +150,9 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t@Override",
                "-\tpublic ListenableFuture<Void> connect(final TcpConnectionHandler<P> connectionHandler,",
                "-\t                                      final ReconnectStrategy reconnectStrategy) {",
                "-",
                "-\t\tAssert.notNull(reconnectStrategy, \"ReconnectStrategy must not be null\");",
                "-",
                "-\t\tReconnect reconnect = new Reconnect() {",
                "-\t\t\t@Override",
                "-\t\t\tpublic Tuple2<InetSocketAddress, Long> reconnect(InetSocketAddress address, int attempt) {",
                "-\t\t\t\treturn Tuple.of(address, reconnectStrategy.getTimeToNextAttempt(attempt));",
                "-\t\t\t}",
                "-\t\t};",
                "-",
                "-\t\t//create a new client",
                "-\t\tTcpClient<Message<P>, Message<P>> tcpClient = NetStreams.tcpClient(REACTOR_TCP_CLIENT_TYPE, tcpClientSpec);",
                "-",
                "-\t\t//attach connection handler",
                "-\t\tcomposeConnectionHandling(tcpClient, connectionHandler);",
                "-",
                "-\t\t//open connection",
                "-\t\tStream<Boolean> stream = tcpClient.open(reconnect);",
                "-",
                "-\t\t//adapt to ListenableFuture with the next available connection",
                "-\t\tPromise<Void> promise = stream.next().map(",
                "-\t\t\t\tnew Function<Boolean, Void>() {",
                "-\t\t\t\t\t@Override",
                "-\t\t\t\t\tpublic Void apply(Boolean ch) {",
                "-\t\t\t\t\t\treturn null;",
                "-\t\t\t\t\t}",
                "-\t\t\t\t});",
                "-",
                "-\t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(promise);",
                "+\tpublic ListenableFuture<Void> connect(TcpConnectionHandler<P> handler, ReconnectStrategy strategy) {",
                "+\t\tAssert.notNull(strategy, \"ReconnectStrategy must not be null\");",
                "+\t\tClass<NettyTcpClient> type = REACTOR_TCP_CLIENT_TYPE;",
                "+\t\tTcpClient<Message<P>, Message<P>> tcpClient = NetStreams.tcpClient(type, this.tcpClientSpecFactory);",
                "+\t\tcomposeConnectionHandling(tcpClient, handler);",
                "+\t\tStream<Boolean> stream = tcpClient.open(new ReactorRectonnectAdapter(strategy));",
                "+\t\treturn new BooleanToVoidAdapter(stream.next());",
                " \t}",
                "@@ -190,6 +160,6 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \tprivate void composeConnectionHandling(final TcpClient<Message<P>, Message<P>> tcpClient,",
                "-\t                                       final TcpConnectionHandler<P> connectionHandler) {",
                "+\t\t\tfinal TcpConnectionHandler<P> connectionHandler) {",
                "-\t\tsynchronized (activeClients){",
                "-\t\t\tactiveClients.add(tcpClient);",
                "+\t\tsynchronized (this.tcpClients){",
                "+\t\t\tthis.tcpClients.add(tcpClient);",
                " \t\t}",
                "@@ -197,9 +167,10 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\ttcpClient",
                "-\t\t\t\t.finallyDo(new Consumer<Signal<ChannelStream<Message<P>,Message<P>>>>() {",
                "+\t\t\t\t.finallyDo(new Consumer<Signal<ChannelStream<Message<P>, Message<P>>>>() {",
                "+",
                " \t\t\t\t\t@Override",
                "-\t\t\t\t\tpublic void accept(Signal<ChannelStream<Message<P>,Message<P>>> signal) {",
                "-\t\t\t\t\t\tsynchronized (activeClients) {",
                "-\t\t\t\t\t\t\tactiveClients.remove(tcpClient);",
                "+\t\t\t\t\tpublic void accept(Signal<ChannelStream<Message<P>, Message<P>>> signal) {",
                "+\t\t\t\t\t\tsynchronized (tcpClients) {",
                "+\t\t\t\t\t\t\ttcpClients.remove(tcpClient);",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\tif(signal.isOnError()) {",
                "+\t\t\t\t\t\tif (signal.isOnError()) {",
                " \t\t\t\t\t\t\tconnectionHandler.afterConnectFailure(signal.getThrowable());",
                "@@ -208,4 +179,4 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t\t\t})",
                "-\t\t\t\t.log(\"reactor.client\")",
                " \t\t\t\t.consume(new Consumer<ChannelStream<Message<P>, Message<P>>>() {",
                "+",
                " \t\t\t\t\t@Override",
                "@@ -213,4 +184,4 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t\t\t\t\tconnection",
                "-\t\t\t\t\t\t\t\t.log(\"reactor.connection\")",
                " \t\t\t\t\t\t\t\t.finallyDo(new Consumer<Signal<Message<P>>>() {",
                "+",
                " \t\t\t\t\t\t\t\t\t@Override",
                "@@ -219,3 +190,4 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t\t\t\t\t\t\t\t\t\tconnectionHandler.handleFailure(signal.getThrowable());",
                "-\t\t\t\t\t\t\t\t\t\t} else if (signal.isOnComplete()) {",
                "+\t\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t\t\telse if (signal.isOnComplete()) {",
                " \t\t\t\t\t\t\t\t\t\t\tconnectionHandler.afterConnectionClosed();",
                "@@ -225,2 +197,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t\t\t\t\t\t\t.consume(new Consumer<Message<P>>() {",
                "+",
                " \t\t\t\t\t\t\t\t\t@Override",
                "@@ -230,3 +203,2 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t\t\t\t\t\t\t});",
                "-",
                " \t\t\t\t\t\tconnectionHandler.afterConnected(new Reactor2TcpConnection<P>(connection));",
                "@@ -238,8 +210,7 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \tpublic ListenableFuture<Boolean> shutdown() {",
                "+",
                " \t\tfinal List<TcpClient<Message<P>, Message<P>>> clients;",
                "-\t\tsynchronized (activeClients){",
                "-\t\t\tclients = new ArrayList<TcpClient<Message<P>, Message<P>>>(activeClients);",
                "-\t\t\t//should be cleared individually in tcpClient#finallyDo()",
                "-\t\t\t//activeClients.clear();",
                "+\t\tsynchronized (this.tcpClients) {",
                "+\t\t\tclients = new ArrayList<TcpClient<Message<P>, Message<P>>>(this.tcpClients);",
                " \t\t}",
                "@@ -261,9 +232,43 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\t\treturn new AbstractPromiseToListenableFutureAdapter<Boolean, Boolean>(promise) {",
                "-\t\t\t@Override",
                "-\t\t\tprotected Boolean adapt(Boolean result) {",
                "-\t\t\t\treturn result;",
                "-\t\t\t}",
                "-\t\t};",
                "+\t\treturn new PassThroughPromiseToListenableFutureAdapter<Boolean>(promise);",
                "+\t}",
                "+",
                "+",
                "+\tpublic interface TcpClientSpecFactory<I, O> extends Function<TcpClientSpec<I, O>, TcpClientSpec<I, O>> {",
                "+\t}",
                "+",
                "+\tprivate static class SynchronousDispatcherConfigReader implements ConfigurationReader {",
                "+",
                "+\t\t@Override",
                "+\t\tpublic ReactorConfiguration read() {",
                "+\t\t\treturn new ReactorConfiguration(Arrays.<DispatcherConfiguration>asList(), \"sync\", new Properties());",
                "+\t\t}",
                " \t}",
                "+",
                "+\tprivate static class ReactorRectonnectAdapter implements Reconnect {",
                "+",
                "+\t\tprivate final ReconnectStrategy strategy;",
                "+",
                "+\t\tpublic ReactorRectonnectAdapter(ReconnectStrategy strategy) {",
                "+\t\t\tthis.strategy = strategy;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic Tuple2<InetSocketAddress, Long> reconnect(InetSocketAddress address, int attempt) {",
                "+\t\t\treturn Tuple.of(address, strategy.getTimeToNextAttempt(attempt));",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tprivate static class BooleanToVoidAdapter extends AbstractPromiseToListenableFutureAdapter<Boolean, Void> {",
                "+",
                "+\t\tpublic BooleanToVoidAdapter(Promise<Boolean> promise) {",
                "+\t\t\tsuper(promise);",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tprotected Void adapt(Boolean result) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+\t}",
                "+",
                " }",
                "\\ No newline at end of file",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java",
                "index 2f9df2b432..a08533b702 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java",
                "@@ -18,25 +18,19 @@ package org.springframework.messaging.tcp.reactor;",
                "-import org.reactivestreams.Publisher;",
                "-import org.springframework.messaging.Message;",
                "-import org.springframework.messaging.tcp.TcpConnection;",
                "-import org.springframework.util.concurrent.ListenableFuture;",
                "-import reactor.fn.Consumer;",
                "-import reactor.fn.Function;",
                " import reactor.fn.Functions;",
                " import reactor.io.net.ChannelStream;",
                "-import reactor.rx.Promise;",
                " import reactor.rx.Promises;",
                "-import reactor.rx.Stream;",
                " import reactor.rx.broadcast.Broadcaster;",
                "-import java.lang.reflect.Constructor;",
                "+import org.springframework.messaging.Message;",
                "+import org.springframework.messaging.tcp.TcpConnection;",
                "+import org.springframework.util.concurrent.ListenableFuture;",
                " /**",
                "- * An implementation of {@link org.springframework.messaging.tcp.TcpConnection}",
                "- * based on the TCP client support of the Reactor project.",
                "+ * An implementation of {@link org.springframework.messaging.tcp.TcpConnection",
                "+ * TcpConnection} based on the TCP client support of the Reactor project.",
                "+ *",
                "+ * @param <P> the payload type of messages read or written to the TCP stream.",
                "  *",
                "  * @author Rossen Stoyanchev",
                "- * @since 4.0",
                "- * @param <P> the payload type of Spring Message's read from and written to",
                "- * the TCP stream",
                "+ * @since 4.2",
                "  */",
                "@@ -44,11 +38,11 @@ public class Reactor2TcpConnection<P> implements TcpConnection<P> {",
                "-\tprivate final ChannelStream<Message<P>, Message<P>> channel;",
                "-\tprivate final Broadcaster<Message<P>>               sink;",
                "+\tprivate final ChannelStream<Message<P>, Message<P>> channelStream;",
                "+\tprivate final Broadcaster<Message<P>> sink;",
                "-\tpublic Reactor2TcpConnection(ChannelStream<Message<P>, Message<P>> connection) {",
                "-\t\tthis.channel = connection;",
                "-\t\tthis.sink = Broadcaster.create();",
                "-\t\tchannel.sink(sink);",
                "+\tpublic Reactor2TcpConnection(ChannelStream<Message<P>, Message<P>> channelStream) {",
                "+\t\tthis.channelStream = channelStream;",
                "+\t\tthis.sink = Broadcaster.create();",
                "+\t\tthis.channelStream.sink(this.sink);",
                " \t}",
                "@@ -58,4 +52,3 @@ public class Reactor2TcpConnection<P> implements TcpConnection<P> {",
                " \tpublic ListenableFuture<Void> send(Message<P> message) {",
                "-\t\tsink.onNext(message);",
                "-\t\t//FIXME need to align Reactor with Reactive IPC to have publish/confirm receipt",
                "+\t\tthis.sink.onNext(message);",
                " \t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(Promises.<Void>success(null));",
                "@@ -65,3 +58,3 @@ public class Reactor2TcpConnection<P> implements TcpConnection<P> {",
                " \tpublic void onReadInactivity(Runnable runnable, long inactivityDuration) {",
                "-\t\tthis.channel.on().readIdle(inactivityDuration, Functions.<Void>consumer(runnable));",
                "+\t\tthis.channelStream.on().readIdle(inactivityDuration, Functions.<Void>consumer(runnable));",
                " \t}",
                "@@ -70,3 +63,3 @@ public class Reactor2TcpConnection<P> implements TcpConnection<P> {",
                " \tpublic void onWriteInactivity(Runnable runnable, long inactivityDuration) {",
                "-\t\tthis.channel.on().writeIdle(inactivityDuration, Functions.<Void>consumer(runnable));",
                "+\t\tthis.channelStream.on().writeIdle(inactivityDuration, Functions.<Void>consumer(runnable));",
                " \t}",
                "@@ -75,3 +68,3 @@ public class Reactor2TcpConnection<P> implements TcpConnection<P> {",
                " \tpublic void close() {",
                "-\t\tsink.onComplete();",
                "+\t\tthis.sink.onComplete();",
                " \t}"
            ],
            "changed_files": [
                "build.gradle",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2StompCodec.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: spring-messaging",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java, spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2StompCodec.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java, spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: code, stomp",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "74c025052541e70d61d3569a59f80d612fb08272",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429810732,
            "hunks": 20,
            "message": "Upgrade to Reactor 2 Issue: SPR-12599",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index c969e83394..8b5239dea1 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -55,3 +55,3 @@ configure(allprojects) { project ->",
                " \text.protobufVersion      = \"2.6.1\"",
                "-\text.reactorVersion       = \"1.1.6.RELEASE\"",
                "+\text.reactorVersion       = \"2.0.1.BUILD-SNAPSHOT\"",
                " \text.slf4jVersion         = \"1.7.11\"",
                "@@ -119,2 +119,3 @@ configure(allprojects) { project ->",
                " \trepositories {",
                "+\t\tmavenLocal()",
                " \t\tmaven { url \"https://repo.spring.io/libs-release\" }",
                "@@ -488,6 +489,6 @@ project(\"spring-messaging\") {",
                " \t\tcompile(project(\":spring-context\"))",
                "-\t\toptional(\"org.projectreactor:reactor-core:${reactorVersion}\")",
                "-\t\toptional(\"org.projectreactor:reactor-net:${reactorVersion}\") {",
                "+\t\toptional(\"io.projectreactor:reactor-net:${reactorVersion}\") {",
                " \t\t\texclude group: \"io.netty\", module: \"netty-all\"",
                " \t\t}",
                "+\t\toptional \"io.netty:netty-all:$nettyVersion\"",
                " \t\toptional(\"org.eclipse.jetty.websocket:websocket-server:${jettyVersion}\") {",
                "@@ -498,2 +499,3 @@ project(\"spring-messaging\") {",
                " \t\ttestCompile(project(\":spring-test\"))",
                "+\t\ttestCompile('org.slf4j:slf4j-log4j12:1.7.10')",
                " \t\ttestCompile(\"javax.inject:javax.inject-tck:1\")",
                "@@ -758,4 +760,3 @@ project(\"spring-websocket\") {",
                " \t\ttestCompile(\"org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}\")",
                "-\t\ttestCompile(\"org.projectreactor:reactor-core:${reactorVersion}\")",
                "-\t\ttestCompile(\"org.projectreactor:reactor-net:${reactorVersion}\")",
                "+\t\ttestCompile(\"io.projectreactor:reactor-net:${reactorVersion}\")",
                " \t\ttestCompile(\"log4j:log4j:1.2.17\")",
                "diff --git a/spring-core/src/main/java/org/springframework/core/convert/support/StreamConverter.java b/spring-core/src/main/java/org/springframework/core/convert/support/StreamConverter.java",
                "index 425c11576c..06a8818995 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/convert/support/StreamConverter.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/convert/support/StreamConverter.java",
                "@@ -101,3 +101,3 @@ public class StreamConverter implements ConditionalGenericConverter {",
                " \tprivate Object convertFromStream(Stream<?> source, TypeDescriptor streamType, TypeDescriptor targetType) {",
                "-\t\tList<Object> content = source.collect(Collectors.toList());",
                "+\t\tList<Object> content = source.collect(Collectors.<Object>toList());",
                " \t\tTypeDescriptor listType = TypeDescriptor.collection(List.class, streamType.getElementTypeDescriptor());",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2StompCodec.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2StompCodec.java",
                "new file mode 100644",
                "index 0000000000..4ee2074da0",
                "--- /dev/null",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2StompCodec.java",
                "@@ -0,0 +1,106 @@",
                "+/*",
                "+ * Copyright 2002-2014 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.messaging.simp.stomp;",
                "+",
                "+import java.nio.ByteBuffer;",
                "+",
                "+",
                "+import org.springframework.messaging.Message;",
                "+import org.springframework.util.Assert;",
                "+import reactor.fn.Consumer;",
                "+import reactor.fn.Function;",
                "+import reactor.io.buffer.Buffer;",
                "+import reactor.io.codec.Codec;",
                "+",
                "+/**",
                "+ * A Reactor TCP {@link Codec} for sending and receiving STOMP messages.",
                "+ *",
                "+ * @author Andy Wilkinson",
                "+ * @author Rossen Stoyanchev",
                "+ * @since 4.0",
                "+ */",
                "+public class Reactor2StompCodec extends Codec<Buffer, Message<byte[]>, Message<byte[]>> {",
                "+",
                "+\tprivate final StompDecoder stompDecoder;",
                "+",
                "+\tprivate final StompEncoder stompEncoder;",
                "+",
                "+\tprivate final Function<Message<byte[]>, Buffer> encodingFunction;",
                "+",
                "+",
                "+\tpublic Reactor2StompCodec() {",
                "+\t\tthis(new StompEncoder(), new StompDecoder());",
                "+\t}",
                "+",
                "+\tpublic Reactor2StompCodec(StompEncoder encoder, StompDecoder decoder) {",
                "+\t\tAssert.notNull(encoder, \"'encoder' is required\");",
                "+\t\tAssert.notNull(decoder, \"'decoder' is required\");",
                "+\t\tthis.stompEncoder = encoder;",
                "+\t\tthis.stompDecoder = decoder;",
                "+\t\tthis.encodingFunction = new EncodingFunction(this.stompEncoder);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Function<Buffer, Message<byte[]>> decoder(final Consumer<Message<byte[]>> messageConsumer) {",
                "+\t\treturn new DecodingFunction(this.stompDecoder, messageConsumer);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Function<Message<byte[]>, Buffer> encoder() {",
                "+\t\treturn this.encodingFunction;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Buffer apply(Message<byte[]> message) {",
                "+\t\treturn encodingFunction.apply(message);",
                "+\t}",
                "+",
                "+\tprivate static class EncodingFunction implements Function<Message<byte[]>, Buffer> {",
                "+",
                "+\t\tprivate final StompEncoder encoder;",
                "+",
                "+\t\tprivate EncodingFunction(StompEncoder encoder) {",
                "+\t\t\tthis.encoder = encoder;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic Buffer apply(Message<byte[]> message) {",
                "+\t\t\tbyte[] bytes = this.encoder.encode(message);",
                "+\t\t\treturn new Buffer(ByteBuffer.wrap(bytes));",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tprivate static class DecodingFunction implements Function<Buffer, Message<byte[]>> {",
                "+",
                "+\t\tprivate final StompDecoder decoder;",
                "+",
                "+\t\tprivate final Consumer<Message<byte[]>> messageConsumer;",
                "+",
                "+\t\tpublic DecodingFunction(StompDecoder decoder, Consumer<Message<byte[]>> next) {",
                "+\t\t\tthis.decoder = decoder;",
                "+\t\t\tthis.messageConsumer = next;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic Message<byte[]> apply(Buffer buffer) {",
                "+\t\t\tfor (Message<byte[]> message : this.decoder.decode(buffer.byteBuffer())) {",
                "+\t\t\t\tthis.messageConsumer.accept(message);",
                "+\t\t\t}",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+\t}",
                "+}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java",
                "new file mode 100644",
                "index 0000000000..59abaa32a4",
                "--- /dev/null",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java",
                "@@ -0,0 +1,144 @@",
                "+/*",
                "+ * Copyright 2002-2015 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+package org.springframework.messaging.simp.stomp;",
                "+",
                "+import org.springframework.messaging.Message;",
                "+import org.springframework.messaging.tcp.TcpOperations;",
                "+import org.springframework.messaging.tcp.reactor.Reactor2TcpClient;",
                "+import org.springframework.util.concurrent.ListenableFuture;",
                "+import reactor.Environment;",
                "+import reactor.core.config.ConfigurationReader;",
                "+import reactor.core.config.DispatcherConfiguration;",
                "+import reactor.core.config.DispatcherType;",
                "+import reactor.core.config.ReactorConfiguration;",
                "+import reactor.fn.Function;",
                "+import reactor.io.net.Spec;",
                "+",
                "+import java.util.Arrays;",
                "+import java.util.Properties;",
                "+",
                "+/**",
                "+ * A STOMP over TCP client that uses",
                "+ * {@link Reactor2TcpClient",
                "+ * Reactor11TcpClient}.",
                "+ *",
                "+ * @author Rossen Stoyanchev",
                "+ * @since 4.2",
                "+ */",
                "+public class Reactor2TcpStompClient extends StompClientSupport {",
                "+",
                "+\tprivate final TcpOperations<byte[]> tcpClient;",
                "+",
                "+",
                "+\t/**",
                "+\t * Create an instance with host \"127.0.0.1\" and port 61613.",
                "+\t */",
                "+\tpublic Reactor2TcpStompClient() {",
                "+\t\tthis(\"127.0.0.1\", 61613);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create an instance with the given host and port.",
                "+\t *",
                "+\t * @param host the host",
                "+\t * @param port the port",
                "+\t */",
                "+\tpublic Reactor2TcpStompClient(final String host, final int port) {",
                "+\t\tthis.tcpClient = new Reactor2TcpClient<byte[]>(createNettyTcpClientFactory(host, port));",
                "+\t}",
                "+",
                "+\tprivate Function<Spec.TcpClientSpec<Message<byte[]>, Message<byte[]>>,",
                "+\t\t\tSpec.TcpClientSpec<Message<byte[]>, Message<byte[]>>> createNettyTcpClientFactory(",
                "+\t\t\tfinal String host, final int port",
                "+\t) {",
                "+",
                "+\t\tfinal Environment environment = new Environment(new StompClientDispatcherConfigReader()).assignErrorJournal();",
                "+",
                "+\t\treturn new Function<Spec.TcpClientSpec<Message<byte[]>, Message<byte[]>>,",
                "+\t\t\t\tSpec.TcpClientSpec<Message<byte[]>, Message<byte[]>>>() {",
                "+",
                "+\t\t\t@Override",
                "+\t\t\tpublic Spec.TcpClientSpec<Message<byte[]>, Message<byte[]>> apply(Spec.TcpClientSpec<Message<byte[]>,",
                "+\t\t\t\t\tMessage<byte[]>> spec) {",
                "+",
                "+\t\t\t\treturn spec",
                "+\t\t\t\t\t\t.codec(new Reactor2StompCodec(new StompEncoder(), new StompDecoder()))",
                "+\t\t\t\t\t\t.env(environment)",
                "+\t\t\t\t\t\t.dispatcher(environment.getCachedDispatchers(\"StompClient\").get())",
                "+\t\t\t\t\t\t.connect(host, port);",
                "+\t\t\t}",
                "+\t\t};",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create an instance with a pre-configured TCP client.",
                "+\t *",
                "+\t * @param tcpClient the client to use",
                "+\t */",
                "+\tpublic Reactor2TcpStompClient(TcpOperations<byte[]> tcpClient) {",
                "+\t\tthis.tcpClient = tcpClient;",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Connect and notify the given {@link StompSessionHandler} when connected",
                "+\t * on the STOMP level,",
                "+\t *",
                "+\t * @param handler the handler for the STOMP session",
                "+\t * @return ListenableFuture for access to the session when ready for use",
                "+\t */",
                "+\tpublic ListenableFuture<StompSession> connect(StompSessionHandler handler) {",
                "+\t\treturn connect(null, handler);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * An overloaded version of {@link #connect(StompSessionHandler)} that",
                "+\t * accepts headers to use for the STOMP CONNECT frame.",
                "+\t *",
                "+\t * @param connectHeaders headers to add to the CONNECT frame",
                "+\t * @param handler        the handler for the STOMP session",
                "+\t * @return ListenableFuture for access to the session when ready for use",
                "+\t */",
                "+\tpublic ListenableFuture<StompSession> connect(StompHeaders connectHeaders, StompSessionHandler handler) {",
                "+\t\tConnectionHandlingStompSession session = createSession(connectHeaders, handler);",
                "+\t\tthis.tcpClient.connect(session);",
                "+\t\treturn session.getSessionFuture();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Shut down the client and release resources.",
                "+\t */",
                "+\tpublic void shutdown() {",
                "+\t\tthis.tcpClient.shutdown();",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * A ConfigurationReader with a thread pool-based dispatcher.",
                "+\t */",
                "+\tprivate static class StompClientDispatcherConfigReader implements ConfigurationReader {",
                "+",
                "+\t\t@Override",
                "+\t\tpublic ReactorConfiguration read() {",
                "+\t\t\tString dispatcherName = \"StompClient\";",
                "+\t\t\tDispatcherType dispatcherType = DispatcherType.DISPATCHER_GROUP;",
                "+\t\t\tDispatcherConfiguration config = new DispatcherConfiguration(dispatcherName, dispatcherType, 128, 0);",
                "+\t\t\treturn new ReactorConfiguration(Arrays.<DispatcherConfiguration>asList(config), dispatcherName, new Properties",
                "+\t\t\t\t\t());",
                "+\t\t}",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "index dd30ba706b..0766267375 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "@@ -42,3 +42,3 @@ import org.springframework.messaging.tcp.TcpConnectionHandler;",
                " import org.springframework.messaging.tcp.TcpOperations;",
                "-import org.springframework.messaging.tcp.reactor.Reactor11TcpClient;",
                "+import org.springframework.messaging.tcp.reactor.Reactor2TcpClient;",
                " import org.springframework.util.Assert;",
                "@@ -329,3 +329,3 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                " \t * Configure a TCP client for managing TCP connections to the STOMP broker.",
                "-\t * By default {@link org.springframework.messaging.tcp.reactor.Reactor11TcpClient} is used.",
                "+\t * By default {@link Reactor2TcpClient} is used.",
                " \t */",
                "@@ -381,3 +381,3 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                " \t\t\tdecoder.setHeaderInitializer(getHeaderInitializer());",
                "-\t\t\tReactor11StompCodec codec = new Reactor11StompCodec(new StompEncoder(), decoder);",
                "+\t\t\tReactor2StompCodec codec = new Reactor2StompCodec(new StompEncoder(), decoder);",
                " \t\t\tthis.tcpClient = new StompTcpClientFactory().create(this.relayHost, this.relayPort, codec);",
                "@@ -958,4 +958,4 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                "-\t\tpublic TcpOperations<byte[]> create(String relayHost, int relayPort, Reactor11StompCodec codec) {",
                "-\t\t\treturn new Reactor11TcpClient<byte[]>(relayHost, relayPort, codec);",
                "+\t\tpublic TcpOperations<byte[]> create(String relayHost, int relayPort, Reactor2StompCodec codec) {",
                "+\t\t\treturn new Reactor2TcpClient<byte[]>(relayHost, relayPort, codec);",
                " \t\t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java",
                "index 9874dfd1e6..e70b0974cd 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java",
                "@@ -22,5 +22,2 @@ import java.util.concurrent.TimeoutException;",
                "-import reactor.core.composable.Promise;",
                "-import reactor.function.Consumer;",
                "-",
                " import org.springframework.util.Assert;",
                "@@ -31,2 +28,4 @@ import org.springframework.util.concurrent.ListenableFutureCallbackRegistry;",
                " import org.springframework.util.concurrent.SuccessCallback;",
                "+import reactor.fn.Consumer;",
                "+import reactor.rx.Promise;",
                "@@ -57,4 +56,3 @@ abstract class AbstractPromiseToListenableFutureAdapter<S, T> implements Listena",
                " \t\t\t\t\tregistry.success(adapt(result));",
                "-\t\t\t\t}",
                "-\t\t\t\tcatch (Throwable t) {",
                "+\t\t\t\t} catch (Throwable t) {",
                " \t\t\t\t\tregistry.failure(t);",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java",
                "index cc4267f9d9..d880cdd71d 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java",
                "@@ -18,3 +18,4 @@ package org.springframework.messaging.tcp.reactor;",
                "-import reactor.core.composable.Promise;",
                "+",
                "+import reactor.rx.Promise;",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor11TcpClient.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor11TcpClient.java",
                "deleted file mode 100644",
                "index a38eb324ff..0000000000",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor11TcpClient.java",
                "+++ /dev/null",
                "@@ -1,221 +0,0 @@",
                "-/*",
                "- * Copyright 2002-2014 the original author or authors.",
                "- *",
                "- * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "- * you may not use this file except in compliance with the License.",
                "- * You may obtain a copy of the License at",
                "- *",
                "- *      http://www.apache.org/licenses/LICENSE-2.0",
                "- *",
                "- * Unless required by applicable law or agreed to in writing, software",
                "- * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "- * See the License for the specific language governing permissions and",
                "- * limitations under the License.",
                "- */",
                "-",
                "-package org.springframework.messaging.tcp.reactor;",
                "-",
                "-import java.net.InetSocketAddress;",
                "-import java.util.Arrays;",
                "-import java.util.Properties;",
                "-",
                "-import reactor.core.Environment;",
                "-import reactor.core.composable.Composable;",
                "-import reactor.core.composable.Promise;",
                "-import reactor.core.composable.Stream;",
                "-import reactor.core.composable.spec.Promises;",
                "-import reactor.core.configuration.ConfigurationReader;",
                "-import reactor.core.configuration.DispatcherConfiguration;",
                "-import reactor.core.configuration.ReactorConfiguration;",
                "-import reactor.function.Consumer;",
                "-import reactor.function.Function;",
                "-import reactor.io.Buffer;",
                "-import reactor.io.encoding.Codec;",
                "-import reactor.net.NetChannel;",
                "-import reactor.net.Reconnect;",
                "-import reactor.net.netty.tcp.NettyTcpClient;",
                "-import reactor.net.tcp.TcpClient;",
                "-import reactor.net.tcp.spec.TcpClientSpec;",
                "-import reactor.tuple.Tuple;",
                "-import reactor.tuple.Tuple2;",
                "-",
                "-import org.springframework.messaging.Message;",
                "-import org.springframework.messaging.tcp.ReconnectStrategy;",
                "-import org.springframework.messaging.tcp.TcpConnectionHandler;",
                "-import org.springframework.messaging.tcp.TcpOperations;",
                "-import org.springframework.util.Assert;",
                "-import org.springframework.util.concurrent.ListenableFuture;",
                "-",
                "-",
                "-/**",
                "- * An implementation of {@link org.springframework.messaging.tcp.TcpOperations}",
                "- * based on the TCP client support of the Reactor project.",
                "- *",
                "- * @author Rossen Stoyanchev",
                "- * @since 4.0",
                "- */",
                "-public class Reactor11TcpClient<P> implements TcpOperations<P> {",
                "-",
                "-\t@SuppressWarnings(\"rawtypes\")",
                "-\tpublic static final Class<NettyTcpClient> REACTOR_TCP_CLIENT_TYPE = NettyTcpClient.class;",
                "-",
                "-",
                "-\tprivate final TcpClient<Message<P>, Message<P>> tcpClient;",
                "-",
                "-\tprivate final Environment environment;",
                "-",
                "-",
                "-\t/**",
                "-\t * A constructor that creates a {@link reactor.net.netty.tcp.NettyTcpClient} with",
                "-\t * a {@link reactor.event.dispatch.SynchronousDispatcher} as a result of which",
                "-\t * network I/O is handled in Netty threads.",
                "-\t *",
                "-\t * <p>Also see the constructor accepting a pre-configured Reactor",
                "-\t * {@link reactor.net.tcp.TcpClient}.",
                "-\t *",
                "-\t * @param host the host to connect to",
                "-\t * @param port the port to connect to",
                "-\t * @param codec the codec to use for encoding and decoding the TCP stream",
                "-\t */",
                "-\tpublic Reactor11TcpClient(String host, int port, Codec<Buffer, Message<P>, Message<P>> codec) {",
                "-",
                "-\t\t// Revisit in 1.1: is Environment still required w/ sync dispatcher?",
                "-\t\tthis.environment = new Environment(new SynchronousDispatcherConfigReader());",
                "-",
                "-\t\tthis.tcpClient = new TcpClientSpec<Message<P>, Message<P>>(REACTOR_TCP_CLIENT_TYPE)",
                "-\t\t\t\t.env(this.environment)",
                "-\t\t\t\t.codec(codec)",
                "-\t\t\t\t.connect(host, port)",
                "-\t\t\t\t.get();",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * A constructor with a pre-configured {@link reactor.net.tcp.TcpClient}.",
                "-\t *",
                "-\t * <p><strong>NOTE:</strong> if the client is configured with a thread-creating",
                "-\t * dispatcher, you are responsible for shutting down the {@link reactor.core.Environment}",
                "-\t * instance with which the client is configured.",
                "-\t *",
                "-\t * @param tcpClient the TcpClient to use",
                "-\t */",
                "-\tpublic Reactor11TcpClient(TcpClient<Message<P>, Message<P>> tcpClient) {",
                "-\t\tAssert.notNull(tcpClient, \"'tcpClient' must not be null\");",
                "-\t\tthis.tcpClient = tcpClient;",
                "-\t\tthis.environment = null;",
                "-\t}",
                "-",
                "-",
                "-\t@Override",
                "-\tpublic ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler) {",
                "-",
                "-\t\tPromise<NetChannel<Message<P>, Message<P>>> promise = this.tcpClient.open();",
                "-\t\tcomposeConnectionHandling(promise, connectionHandler);",
                "-",
                "-\t\treturn new AbstractPromiseToListenableFutureAdapter<NetChannel<Message<P>, Message<P>>, Void>(promise) {",
                "-\t\t\t@Override",
                "-\t\t\tprotected Void adapt(NetChannel<Message<P>, Message<P>> result) {",
                "-\t\t\t\treturn null;",
                "-\t\t\t}",
                "-\t\t};",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic ListenableFuture<Void> connect(final TcpConnectionHandler<P> connectionHandler,",
                "-\t\t\tfinal ReconnectStrategy reconnectStrategy) {",
                "-",
                "-\t\tAssert.notNull(reconnectStrategy, \"ReconnectStrategy must not be null\");",
                "-",
                "-\t\tReconnect reconnect = new Reconnect() {",
                "-\t\t\t@Override",
                "-\t\t\tpublic Tuple2<InetSocketAddress, Long> reconnect(InetSocketAddress address, int attempt) {",
                "-\t\t\t\treturn Tuple.of(address, reconnectStrategy.getTimeToNextAttempt(attempt));",
                "-\t\t\t}",
                "-\t\t};",
                "-",
                "-\t\tStream<NetChannel<Message<P>, Message<P>>> stream = this.tcpClient.open(reconnect);",
                "-\t\tcomposeConnectionHandling(stream, connectionHandler);",
                "-",
                "-\t\tPromise<Void> promise = Promises.next(stream).map(",
                "-\t\t\t\tnew Function<NetChannel<Message<P>, Message<P>>, Void>() {",
                "-\t\t\t\t\t@Override",
                "-\t\t\t\t\tpublic Void apply(NetChannel<Message<P>, Message<P>> ch) {",
                "-\t\t\t\t\t\treturn null;",
                "-\t\t\t\t\t}",
                "-\t\t\t\t});",
                "-\t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(promise);",
                "-\t}",
                "-",
                "-\tprivate void composeConnectionHandling(Composable<NetChannel<Message<P>, Message<P>>> composable,",
                "-\t\t\tfinal TcpConnectionHandler<P> connectionHandler) {",
                "-",
                "-\t\tcomposable",
                "-\t\t\t\t.when(Throwable.class, new Consumer<Throwable>() {",
                "-\t\t\t\t\t@Override",
                "-\t\t\t\t\tpublic void accept(Throwable ex) {",
                "-\t\t\t\t\t\tconnectionHandler.afterConnectFailure(ex);",
                "-\t\t\t\t\t}",
                "-\t\t\t\t})",
                "-\t\t\t\t.consume(new Consumer<NetChannel<Message<P>, Message<P>>>() {",
                "-\t\t\t\t\t@Override",
                "-\t\t\t\t\tpublic void accept(NetChannel<Message<P>, Message<P>> connection) {",
                "-\t\t\t\t\t\tconnection",
                "-\t\t\t\t\t\t\t\t.when(Throwable.class, new Consumer<Throwable>() {",
                "-\t\t\t\t\t\t\t\t\t@Override",
                "-\t\t\t\t\t\t\t\t\tpublic void accept(Throwable t) {",
                "-\t\t\t\t\t\t\t\t\t\tconnectionHandler.handleFailure(t);",
                "-\t\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t\t})",
                "-\t\t\t\t\t\t\t\t.consume(new Consumer<Message<P>>() {",
                "-\t\t\t\t\t\t\t\t\t@Override",
                "-\t\t\t\t\t\t\t\t\tpublic void accept(Message<P> message) {",
                "-\t\t\t\t\t\t\t\t\t\tconnectionHandler.handleMessage(message);",
                "-\t\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t\t})",
                "-\t\t\t\t\t\t\t\t.on()",
                "-\t\t\t\t\t\t\t\t.close(new Runnable() {",
                "-\t\t\t\t\t\t\t\t\t@Override",
                "-\t\t\t\t\t\t\t\t\tpublic void run() {",
                "-\t\t\t\t\t\t\t\t\t\tconnectionHandler.afterConnectionClosed();",
                "-\t\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t\t});",
                "-\t\t\t\t\t\tconnectionHandler.afterConnected(new Reactor11TcpConnection<P>(connection));",
                "-\t\t\t\t\t}",
                "-\t\t\t\t});",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic ListenableFuture<Boolean> shutdown() {",
                "-\t\ttry {",
                "-\t\t\tPromise<Boolean> promise = this.tcpClient.close();",
                "-\t\t\treturn new AbstractPromiseToListenableFutureAdapter<Boolean, Boolean>(promise) {",
                "-\t\t\t\t@Override",
                "-\t\t\t\tprotected Boolean adapt(Boolean result) {",
                "-\t\t\t\t\treturn result;",
                "-\t\t\t\t}",
                "-\t\t\t};",
                "-\t\t}",
                "-\t\tfinally {",
                "-\t\t\tif (this.environment != null) {",
                "-\t\t\t\tthis.environment.shutdown();",
                "-\t\t\t}",
                "-",
                "-\t\t}",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * A ConfigurationReader that enforces the use of a SynchronousDispatcher.",
                "-\t *",
                "-\t * <p>The {@link reactor.core.configuration.PropertiesConfigurationReader} used by",
                "-\t * default automatically creates other dispatchers with thread pools that are",
                "-\t * not needed.",
                "-\t */",
                "-\tprivate static class SynchronousDispatcherConfigReader implements ConfigurationReader {",
                "-",
                "-\t\t@Override",
                "-\t\tpublic ReactorConfiguration read() {",
                "-\t\t\treturn new ReactorConfiguration(Arrays.<DispatcherConfiguration>asList(), \"sync\", new Properties());",
                "-\t\t}",
                "-\t}",
                "-",
                "-}",
                "\\ No newline at end of file",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "new file mode 100644",
                "index 0000000000..d71d5f1e1d",
                "--- /dev/null",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "@@ -0,0 +1,269 @@",
                "+/*",
                "+ * Copyright 2002-2014 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.messaging.tcp.reactor;",
                "+",
                "+import io.netty.channel.nio.NioEventLoopGroup;",
                "+import org.springframework.messaging.Message;",
                "+import org.springframework.messaging.tcp.ReconnectStrategy;",
                "+import org.springframework.messaging.tcp.TcpConnectionHandler;",
                "+import org.springframework.messaging.tcp.TcpOperations;",
                "+import org.springframework.util.Assert;",
                "+import org.springframework.util.concurrent.ListenableFuture;",
                "+import reactor.core.support.NamedDaemonThreadFactory;",
                "+import reactor.fn.BiFunction;",
                "+import reactor.fn.Consumer;",
                "+import reactor.fn.Function;",
                "+import reactor.fn.tuple.Tuple;",
                "+import reactor.fn.tuple.Tuple2;",
                "+import reactor.io.buffer.Buffer;",
                "+import reactor.io.codec.Codec;",
                "+import reactor.io.net.ChannelStream;",
                "+import reactor.io.net.NetStreams;",
                "+import reactor.io.net.Reconnect;",
                "+import reactor.io.net.Spec;",
                "+import reactor.io.net.impl.netty.NettyClientSocketOptions;",
                "+import reactor.io.net.impl.netty.tcp.NettyTcpClient;",
                "+import reactor.io.net.tcp.TcpClient;",
                "+import reactor.rx.Promise;",
                "+import reactor.rx.Stream;",
                "+import reactor.rx.Streams;",
                "+import reactor.rx.action.Signal;",
                "+",
                "+import java.net.InetSocketAddress;",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+",
                "+",
                "+/**",
                "+ * An implementation of {@link org.springframework.messaging.tcp.TcpOperations}",
                "+ * based on the TCP client support of the Reactor project.",
                "+ * <p/>",
                "+ * This client will wrap N number of clients for N {@link #connect} calls (one client by connection).",
                "+ *",
                "+ * @author Rossen Stoyanchev",
                "+ * @author Stephane Maldini",
                "+ * @since 4.2",
                "+ */",
                "+public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "+",
                "+\t@SuppressWarnings(\"rawtypes\")",
                "+\tpublic static final Class<NettyTcpClient> REACTOR_TCP_CLIENT_TYPE = NettyTcpClient.class;",
                "+",
                "+\tprivate final Function<Spec.TcpClientSpec<Message<P>, Message<P>>,",
                "+\t\t\tSpec.TcpClientSpec<Message<P>, Message<P>>> tcpClientSpec;",
                "+",
                "+\tprivate final List<TcpClient<Message<P>, Message<P>>> activeClients =",
                "+\t\t\tnew ArrayList<TcpClient<Message<P>, Message<P>>>();",
                "+",
                "+\t/**",
                "+\t * A constructor that creates a {@link reactor.io.net.Spec.TcpClientSpec} factory with",
                "+\t * a default {@link reactor.core.dispatch.SynchronousDispatcher} as a result of which",
                "+\t * network I/O is handled in Netty threads. Number of Netty threads can be tweaked with",
                "+\t * the {@code reactor.tcp.ioThreadCount} System property.",
                "+\t * <p>",
                "+\t * The network I/O threads will be shared amongst the active clients.",
                "+\t * </p>",
                "+\t * <p/>",
                "+\t * <p>Also see the constructor accepting a ready Reactor",
                "+\t * {@link reactor.io.net.Spec.TcpClientSpec} {@link Function} factory.",
                "+\t *",
                "+\t * @param host  the host to connect to",
                "+\t * @param port  the port to connect to",
                "+\t * @param codec the codec to use for encoding and decoding the TCP stream",
                "+\t */",
                "+\tpublic Reactor2TcpClient(final String host, final int port, final Codec<Buffer, Message<P>, Message<P>> codec) {",
                "+",
                "+\t\t//FIXME Should it be exposed in Spring ?",
                "+\t\tint ioThreadCount;",
                "+\t\ttry {",
                "+\t\t\tioThreadCount = Integer.parseInt(System.getProperty(\"reactor.tcp.ioThreadCount\"));",
                "+\t\t} catch (Exception i) {",
                "+\t\t\tioThreadCount = -1;",
                "+\t\t}",
                "+\t\tif (ioThreadCount <= 0l) {",
                "+\t\t\tioThreadCount = Runtime.getRuntime().availableProcessors();",
                "+\t\t}",
                "+",
                "+\t\tfinal NioEventLoopGroup eventLoopGroup =",
                "+\t\t\t\tnew NioEventLoopGroup(ioThreadCount, new NamedDaemonThreadFactory(\"reactor-tcp-io\"));",
                "+",
                "+\t\tthis.tcpClientSpec = new Function<Spec.TcpClientSpec<Message<P>, Message<P>>,",
                "+\t\t\t\tSpec.TcpClientSpec<Message<P>, Message<P>>>() {",
                "+",
                "+\t\t\t@Override",
                "+\t\t\tpublic Spec.TcpClientSpec<Message<P>, Message<P>> apply(Spec.TcpClientSpec<Message<P>, Message<P>>",
                "+\t\t\t\t\t                                                        messageMessageTcpClientSpec) {",
                "+\t\t\t\treturn messageMessageTcpClientSpec",
                "+\t\t\t\t\t\t.codec(codec)",
                "+\t\t\t\t\t\t\t\t//make connect dynamic or use reconnect strategy to LB onto cluster",
                "+\t\t\t\t\t\t.connect(host, port)",
                "+\t\t\t\t\t\t.options(new NettyClientSocketOptions().eventLoopGroup(eventLoopGroup));",
                "+\t\t\t}",
                "+\t\t};",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * A constructor with a pre-configured {@link reactor.io.net.Spec.TcpClientSpec} {@link Function} factory.",
                "+\t * This might be used to add SSL or specific network parameters to the generated client configuration.",
                "+\t * <p/>",
                "+\t * <p><strong>NOTE:</strong> if the client is configured with a thread-creating",
                "+\t * dispatcher, you are responsible for cleaning them, e.g. using {@link reactor.core.Dispatcher#shutdown}.",
                "+\t *",
                "+\t * @param tcpClientSpecFactory the TcpClientSpec {@link Function} to use for each client creation.",
                "+\t */",
                "+\tpublic Reactor2TcpClient(Function<Spec.TcpClientSpec<Message<P>, Message<P>>,",
                "+\t\t\tSpec.TcpClientSpec<Message<P>, Message<P>>> tcpClientSpecFactory) {",
                "+\t\tAssert.notNull(tcpClientSpecFactory, \"'tcpClientClientFactory' must not be null\");",
                "+\t\tthis.tcpClientSpec = tcpClientSpecFactory;",
                "+\t}",
                "+",
                "+",
                "+\t@Override",
                "+\tpublic ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler) {",
                "+",
                "+\t\t//create a new client",
                "+\t\tTcpClient<Message<P>, Message<P>> tcpClient = NetStreams.tcpClient(REACTOR_TCP_CLIENT_TYPE, tcpClientSpec);",
                "+",
                "+\t\t//attach connection handler",
                "+\t\tcomposeConnectionHandling(tcpClient, connectionHandler);",
                "+",
                "+\t\t//open connection",
                "+\t\tPromise<Boolean> promise = tcpClient.open();",
                "+",
                "+\t\t//adapt to ListenableFuture",
                "+\t\treturn new AbstractPromiseToListenableFutureAdapter<Boolean, Void>(promise) {",
                "+\t\t\t@Override",
                "+\t\t\tprotected Void adapt(Boolean result) {",
                "+\t\t\t\treturn null;",
                "+\t\t\t}",
                "+\t\t};",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ListenableFuture<Void> connect(final TcpConnectionHandler<P> connectionHandler,",
                "+\t                                      final ReconnectStrategy reconnectStrategy) {",
                "+",
                "+\t\tAssert.notNull(reconnectStrategy, \"ReconnectStrategy must not be null\");",
                "+",
                "+\t\tReconnect reconnect = new Reconnect() {",
                "+\t\t\t@Override",
                "+\t\t\tpublic Tuple2<InetSocketAddress, Long> reconnect(InetSocketAddress address, int attempt) {",
                "+\t\t\t\treturn Tuple.of(address, reconnectStrategy.getTimeToNextAttempt(attempt));",
                "+\t\t\t}",
                "+\t\t};",
                "+",
                "+\t\t//create a new client",
                "+\t\tTcpClient<Message<P>, Message<P>> tcpClient = NetStreams.tcpClient(REACTOR_TCP_CLIENT_TYPE, tcpClientSpec);",
                "+",
                "+\t\t//attach connection handler",
                "+\t\tcomposeConnectionHandling(tcpClient, connectionHandler);",
                "+",
                "+\t\t//open connection",
                "+\t\tStream<Boolean> stream = tcpClient.open(reconnect);",
                "+",
                "+\t\t//adapt to ListenableFuture with the next available connection",
                "+\t\tPromise<Void> promise = stream.next().map(",
                "+\t\t\t\tnew Function<Boolean, Void>() {",
                "+\t\t\t\t\t@Override",
                "+\t\t\t\t\tpublic Void apply(Boolean ch) {",
                "+\t\t\t\t\t\treturn null;",
                "+\t\t\t\t\t}",
                "+\t\t\t\t});",
                "+",
                "+\t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(promise);",
                "+\t}",
                "+",
                "+\tprivate void composeConnectionHandling(final TcpClient<Message<P>, Message<P>> tcpClient,",
                "+\t                                       final TcpConnectionHandler<P> connectionHandler) {",
                "+",
                "+\t\tsynchronized (activeClients){",
                "+\t\t\tactiveClients.add(tcpClient);",
                "+\t\t}",
                "+",
                "+\t\ttcpClient",
                "+\t\t\t\t.finallyDo(new Consumer<Signal<ChannelStream<Message<P>,Message<P>>>>() {",
                "+\t\t\t\t\t@Override",
                "+\t\t\t\t\tpublic void accept(Signal<ChannelStream<Message<P>,Message<P>>> signal) {",
                "+\t\t\t\t\t\tsynchronized (activeClients) {",
                "+\t\t\t\t\t\t\tactiveClients.remove(tcpClient);",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t\tif(signal.isOnError()) {",
                "+\t\t\t\t\t\t\tconnectionHandler.afterConnectFailure(signal.getThrowable());",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+\t\t\t\t})",
                "+\t\t\t\t.log(\"reactor.client\")",
                "+\t\t\t\t.consume(new Consumer<ChannelStream<Message<P>, Message<P>>>() {",
                "+\t\t\t\t\t@Override",
                "+\t\t\t\t\tpublic void accept(ChannelStream<Message<P>, Message<P>> connection) {",
                "+\t\t\t\t\t\tconnection",
                "+\t\t\t\t\t\t\t\t.log(\"reactor.connection\")",
                "+\t\t\t\t\t\t\t\t.finallyDo(new Consumer<Signal<Message<P>>>() {",
                "+\t\t\t\t\t\t\t\t\t@Override",
                "+\t\t\t\t\t\t\t\t\tpublic void accept(Signal<Message<P>> signal) {",
                "+\t\t\t\t\t\t\t\t\t\tif (signal.isOnError()) {",
                "+\t\t\t\t\t\t\t\t\t\t\tconnectionHandler.handleFailure(signal.getThrowable());",
                "+\t\t\t\t\t\t\t\t\t\t} else if (signal.isOnComplete()) {",
                "+\t\t\t\t\t\t\t\t\t\t\tconnectionHandler.afterConnectionClosed();",
                "+\t\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t})",
                "+\t\t\t\t\t\t\t\t.consume(new Consumer<Message<P>>() {",
                "+\t\t\t\t\t\t\t\t\t@Override",
                "+\t\t\t\t\t\t\t\t\tpublic void accept(Message<P> message) {",
                "+\t\t\t\t\t\t\t\t\t\tconnectionHandler.handleMessage(message);",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t});",
                "+",
                "+\t\t\t\t\t\tconnectionHandler.afterConnected(new Reactor2TcpConnection<P>(connection));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t});",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ListenableFuture<Boolean> shutdown() {",
                "+\t\tfinal List<TcpClient<Message<P>, Message<P>>> clients;",
                "+",
                "+\t\tsynchronized (activeClients){",
                "+\t\t\tclients = new ArrayList<TcpClient<Message<P>, Message<P>>>(activeClients);",
                "+\t\t\t//should be cleared individually in tcpClient#finallyDo()",
                "+\t\t\t//activeClients.clear();",
                "+\t\t}",
                "+",
                "+\t\tPromise<Boolean> promise = Streams.from(clients)",
                "+\t\t\t\t.flatMap(new Function<TcpClient<Message<P>, Message<P>>, Promise<Boolean>>() {",
                "+\t\t\t\t\t@Override",
                "+\t\t\t\t\tpublic Promise<Boolean> apply(TcpClient<Message<P>, Message<P>> client) {",
                "+\t\t\t\t\t\treturn client.close();",
                "+\t\t\t\t\t}",
                "+\t\t\t\t})",
                "+\t\t\t\t.reduce(new BiFunction<Boolean, Boolean, Boolean>() {",
                "+\t\t\t\t\t@Override",
                "+\t\t\t\t\tpublic Boolean apply(Boolean prev, Boolean next) {",
                "+\t\t\t\t\t\treturn prev && next;",
                "+\t\t\t\t\t}",
                "+\t\t\t\t})",
                "+\t\t\t\t.next();",
                "+",
                "+\t\treturn new AbstractPromiseToListenableFutureAdapter<Boolean, Boolean>(promise) {",
                "+\t\t\t@Override",
                "+\t\t\tprotected Boolean adapt(Boolean result) {",
                "+\t\t\t\treturn result;",
                "+\t\t\t}",
                "+\t\t};",
                "+\t}",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java",
                "new file mode 100644",
                "index 0000000000..2f9df2b432",
                "--- /dev/null",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java",
                "@@ -0,0 +1,79 @@",
                "+/*",
                "+ * Copyright 2002-2015 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.messaging.tcp.reactor;",
                "+",
                "+import org.reactivestreams.Publisher;",
                "+import org.springframework.messaging.Message;",
                "+import org.springframework.messaging.tcp.TcpConnection;",
                "+import org.springframework.util.concurrent.ListenableFuture;",
                "+import reactor.fn.Consumer;",
                "+import reactor.fn.Function;",
                "+import reactor.fn.Functions;",
                "+import reactor.io.net.ChannelStream;",
                "+import reactor.rx.Promise;",
                "+import reactor.rx.Promises;",
                "+import reactor.rx.Stream;",
                "+import reactor.rx.broadcast.Broadcaster;",
                "+",
                "+import java.lang.reflect.Constructor;",
                "+",
                "+/**",
                "+ * An implementation of {@link org.springframework.messaging.tcp.TcpConnection}",
                "+ * based on the TCP client support of the Reactor project.",
                "+ *",
                "+ * @author Rossen Stoyanchev",
                "+ * @since 4.0",
                "+ * @param <P> the payload type of Spring Message's read from and written to",
                "+ * the TCP stream",
                "+ */",
                "+public class Reactor2TcpConnection<P> implements TcpConnection<P> {",
                "+",
                "+\tprivate final ChannelStream<Message<P>, Message<P>> channel;",
                "+\tprivate final Broadcaster<Message<P>>               sink;",
                "+",
                "+",
                "+\tpublic Reactor2TcpConnection(ChannelStream<Message<P>, Message<P>> connection) {",
                "+\t\tthis.channel = connection;",
                "+\t\tthis.sink = Broadcaster.create();",
                "+",
                "+\t\tchannel.sink(sink);",
                "+\t}",
                "+",
                "+",
                "+\t@Override",
                "+\tpublic ListenableFuture<Void> send(Message<P> message) {",
                "+\t\tsink.onNext(message);",
                "+\t\t//FIXME need to align Reactor with Reactive IPC to have publish/confirm receipt",
                "+\t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(Promises.<Void>success(null));",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void onReadInactivity(Runnable runnable, long inactivityDuration) {",
                "+\t\tthis.channel.on().readIdle(inactivityDuration, Functions.<Void>consumer(runnable));",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void onWriteInactivity(Runnable runnable, long inactivityDuration) {",
                "+\t\tthis.channel.on().writeIdle(inactivityDuration, Functions.<Void>consumer(runnable));",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void close() {",
                "+\t\tsink.onComplete();",
                "+\t}",
                "+",
                "+}"
            ],
            "changed_files": [
                "build.gradle",
                "spring-core/src/main/java/org/springframework/core/convert/support/StreamConverter.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2StompCodec.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor11TcpClient.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: STOMP, spring-messaging",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java, spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2StompCodec.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter.java, spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor11TcpClient.java, spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: broker, code, stomp, message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "5ebc1a8b60558cf72383847d213b007a0859416a",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1430098024,
            "hunks": 35,
            "message": "Update to latest reactor 2.0.1 snapshot",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java",
                "index 23220225e1..62a4a478cd 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java",
                "@@ -20,3 +20,2 @@ import org.springframework.messaging.tcp.TcpOperations;",
                " import org.springframework.messaging.tcp.reactor.Reactor2TcpClient;",
                "-import org.springframework.messaging.tcp.reactor.Reactor2TcpClient.TcpClientSpecFactory;",
                " import org.springframework.util.concurrent.ListenableFuture;",
                "@@ -27,2 +26,3 @@ import reactor.core.config.DispatcherType;",
                " import reactor.core.config.ReactorConfiguration;",
                "+import reactor.io.net.NetStreams;",
                " import reactor.io.net.Spec.TcpClientSpec;",
                "@@ -35,4 +35,3 @@ import java.util.Properties;",
                "  * A STOMP over TCP client that uses",
                "- * {@link Reactor2TcpClient",
                "- * Reactor11TcpClient}.",
                "+ * {@link Reactor2TcpClient}.",
                "  *",
                "@@ -123,3 +122,3 @@ public class Reactor2TcpStompClient extends StompClientSupport {",
                " \tprivate static class StompTcpClientSpecFactory",
                "-\t\t\timplements TcpClientSpecFactory<Message<byte[]>, Message<byte[]>> {",
                "+\t\t\timplements NetStreams.TcpClientFactory<Message<byte[]>, Message<byte[]>> {",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/TcpOperations.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/TcpOperations.java",
                "index c90a87e9e1..4795b2a7eb 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/TcpOperations.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/TcpOperations.java",
                "@@ -51,3 +51,3 @@ public interface TcpOperations<P> {",
                " \t */",
                "-\tListenableFuture<Boolean> shutdown();",
                "+\tListenableFuture<Void> shutdown();",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "index 5780392c5d..e40ad6a1f4 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "@@ -25,2 +25,3 @@ import java.util.Properties;",
                " import io.netty.channel.nio.NioEventLoopGroup;",
                "+import org.reactivestreams.Publisher;",
                " import reactor.Environment;",
                "@@ -37,5 +38,3 @@ import reactor.io.buffer.Buffer;",
                " import reactor.io.codec.Codec;",
                "-import reactor.io.net.ChannelStream;",
                "-import reactor.io.net.NetStreams;",
                "-import reactor.io.net.Reconnect;",
                "+import reactor.io.net.*;",
                " import reactor.io.net.Spec.TcpClientSpec;",
                "@@ -45,2 +44,3 @@ import reactor.io.net.tcp.TcpClient;",
                " import reactor.rx.Promise;",
                "+import reactor.rx.Promises;",
                " import reactor.rx.Stream;",
                "@@ -60,3 +60,3 @@ import org.springframework.util.concurrent.ListenableFuture;",
                "  * based on the TCP client support of the Reactor project.",
                "- *",
                "+ * <p>",
                "  * <p>This implementation wraps N (Reactor) clients for N {@link #connect} calls,",
                "@@ -73,3 +73,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\tprivate final TcpClientSpecFactory<Message<P>, Message<P>> tcpClientSpecFactory;",
                "+\tprivate final NetStreams.TcpClientFactory<Message<P>, Message<P>> tcpClientSpecFactory;",
                "@@ -87,2 +87,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t * {@link TcpClientSpec} {@link Function} factory.",
                "+\t *",
                " \t * @param host  the host to connect to",
                "@@ -95,3 +96,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\t\tthis.tcpClientSpecFactory = new TcpClientSpecFactory<Message<P>, Message<P>>() {",
                "+\t\tthis.tcpClientSpecFactory = new NetStreams.TcpClientFactory<Message<P>, Message<P>>() {",
                "@@ -112,4 +113,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t\tioThreadCount = Integer.parseInt(System.getProperty(\"reactor.tcp.ioThreadCount\"));",
                "-\t\t}",
                "-\t\tcatch (Exception i) {",
                "+\t\t} catch (Exception i) {",
                " \t\t\tioThreadCount = -1;",
                "@@ -134,3 +134,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t */",
                "-\tpublic Reactor2TcpClient(TcpClientSpecFactory<Message<P>, Message<P>> tcpClientSpecFactory) {",
                "+\tpublic Reactor2TcpClient(NetStreams.TcpClientFactory<Message<P>, Message<P>> tcpClientSpecFactory) {",
                " \t\tAssert.notNull(tcpClientSpecFactory, \"'tcpClientClientFactory' must not be null\");",
                "@@ -143,6 +143,15 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\tClass<NettyTcpClient> type = REACTOR_TCP_CLIENT_TYPE;",
                "+",
                " \t\tTcpClient<Message<P>, Message<P>> tcpClient = NetStreams.tcpClient(type, this.tcpClientSpecFactory);",
                "-\t\tcomposeConnectionHandling(tcpClient, connectionHandler);",
                "-\t\tPromise<Boolean> promise = tcpClient.open();",
                "-\t\treturn new BooleanToVoidAdapter(promise);",
                "+",
                "+\t\tPromise<Void> promise = tcpClient.start(composeConnectionHandling(tcpClient, connectionHandler));",
                "+",
                "+\t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(",
                "+\t\t\t\tpromise.onError(new Consumer<Throwable>() {",
                "+\t\t\t\t\t@Override",
                "+\t\t\t\t\tpublic void accept(Throwable throwable) {",
                "+\t\t\t\t\t\tconnectionHandler.afterConnectFailure(throwable);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t})",
                "+\t\t);",
                " \t}",
                "@@ -153,12 +162,19 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\tClass<NettyTcpClient> type = REACTOR_TCP_CLIENT_TYPE;",
                "+",
                " \t\tTcpClient<Message<P>, Message<P>> tcpClient = NetStreams.tcpClient(type, this.tcpClientSpecFactory);",
                "-\t\tcomposeConnectionHandling(tcpClient, handler);",
                "-\t\tStream<Boolean> stream = tcpClient.open(new ReactorRectonnectAdapter(strategy));",
                "-\t\treturn new BooleanToVoidAdapter(stream.next());",
                "+",
                "+\t\tStream<Tuple2<InetSocketAddress, Integer>> stream = tcpClient.start(",
                "+\t\t\t\tcomposeConnectionHandling(tcpClient, handler),",
                "+\t\t\t\tnew ReactorRectonnectAdapter(strategy)",
                "+\t\t);",
                "+",
                "+\t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(stream.next().after());",
                " \t}",
                "-\tprivate void composeConnectionHandling(final TcpClient<Message<P>, Message<P>> tcpClient,",
                "-\t\t\tfinal TcpConnectionHandler<P> connectionHandler) {",
                "+\tprivate MessageHandler<P> composeConnectionHandling(",
                "+\t\t\tfinal TcpClient<Message<P>, Message<P>> tcpClient,",
                "+\t\t\tfinal TcpConnectionHandler<P> connectionHandler",
                "+\t) {",
                "-\t\tsynchronized (this.tcpClients){",
                "+\t\tsynchronized (this.tcpClients) {",
                " \t\t\tthis.tcpClients.add(tcpClient);",
                "@@ -166,42 +182,33 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\t\ttcpClient",
                "-\t\t\t\t.finallyDo(new Consumer<Signal<ChannelStream<Message<P>, Message<P>>>>() {",
                "+\t\treturn new MessageHandler<P>() {",
                "+\t\t\t@Override",
                "+\t\t\tpublic Publisher<Void> apply(ChannelStream<Message<P>, Message<P>> connection) {",
                "-\t\t\t\t\t@Override",
                "-\t\t\t\t\tpublic void accept(Signal<ChannelStream<Message<P>, Message<P>>> signal) {",
                "-\t\t\t\t\t\tsynchronized (tcpClients) {",
                "-\t\t\t\t\t\t\ttcpClients.remove(tcpClient);",
                "-\t\t\t\t\t\t}",
                "-\t\t\t\t\t\tif (signal.isOnError()) {",
                "-\t\t\t\t\t\t\tconnectionHandler.afterConnectFailure(signal.getThrowable());",
                "-\t\t\t\t\t\t}",
                "-\t\t\t\t\t}",
                "-\t\t\t\t})",
                "-\t\t\t\t.consume(new Consumer<ChannelStream<Message<P>, Message<P>>>() {",
                "+\t\t\t\tPromise<Void> closePromise = Promises.prepare();",
                "-\t\t\t\t\t@Override",
                "-\t\t\t\t\tpublic void accept(ChannelStream<Message<P>, Message<P>> connection) {",
                "-\t\t\t\t\t\tconnection",
                "-\t\t\t\t\t\t\t\t.finallyDo(new Consumer<Signal<Message<P>>>() {",
                "-",
                "-\t\t\t\t\t\t\t\t\t@Override",
                "-\t\t\t\t\t\t\t\t\tpublic void accept(Signal<Message<P>> signal) {",
                "-\t\t\t\t\t\t\t\t\t\tif (signal.isOnError()) {",
                "-\t\t\t\t\t\t\t\t\t\t\tconnectionHandler.handleFailure(signal.getThrowable());",
                "-\t\t\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t\t\t\telse if (signal.isOnComplete()) {",
                "-\t\t\t\t\t\t\t\t\t\t\tconnectionHandler.afterConnectionClosed();",
                "-\t\t\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t\t})",
                "-\t\t\t\t\t\t\t\t.consume(new Consumer<Message<P>>() {",
                "-",
                "-\t\t\t\t\t\t\t\t\t@Override",
                "-\t\t\t\t\t\t\t\t\tpublic void accept(Message<P> message) {",
                "-\t\t\t\t\t\t\t\t\t\tconnectionHandler.handleMessage(message);",
                "-\t\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t\t});",
                "-\t\t\t\t\t\tconnectionHandler.afterConnected(new Reactor2TcpConnection<P>(connection));",
                "-\t\t\t\t\t}",
                "-\t\t\t\t});",
                "+\t\t\t\tconnectionHandler.afterConnected(new Reactor2TcpConnection<P>(connection, closePromise));",
                "+",
                "+\t\t\t\tconnection",
                "+\t\t\t\t\t\t.finallyDo(new Consumer<Signal<Message<P>>>() {",
                "+",
                "+\t\t\t\t\t\t\t@Override",
                "+\t\t\t\t\t\t\tpublic void accept(Signal<Message<P>> signal) {",
                "+\t\t\t\t\t\t\t\tif (signal.isOnError()) {",
                "+\t\t\t\t\t\t\t\t\tconnectionHandler.handleFailure(signal.getThrowable());",
                "+\t\t\t\t\t\t\t\t} else if (signal.isOnComplete()) {",
                "+\t\t\t\t\t\t\t\t\tconnectionHandler.afterConnectionClosed();",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t})",
                "+\t\t\t\t\t\t.consume(new Consumer<Message<P>>() {",
                "+",
                "+\t\t\t\t\t\t\t@Override",
                "+\t\t\t\t\t\t\tpublic void accept(Message<P> message) {",
                "+\t\t\t\t\t\t\t\tconnectionHandler.handleMessage(message);",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t});",
                "+",
                "+\t\t\t\treturn closePromise;",
                "+\t\t\t}",
                "+\t\t};",
                " \t}",
                "@@ -209,3 +216,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t@Override",
                "-\tpublic ListenableFuture<Boolean> shutdown() {",
                "+\tpublic ListenableFuture<Void> shutdown() {",
                "@@ -217,13 +224,14 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\t\tPromise<Boolean> promise = Streams.from(clients)",
                "-\t\t\t\t.flatMap(new Function<TcpClient<Message<P>, Message<P>>, Promise<Boolean>>() {",
                "-\t\t\t\t\t@Override",
                "-\t\t\t\t\tpublic Promise<Boolean> apply(TcpClient<Message<P>, Message<P>> client) {",
                "-\t\t\t\t\t\treturn client.close();",
                "-\t\t\t\t\t}",
                "-\t\t\t\t})",
                "-\t\t\t\t.reduce(new BiFunction<Boolean, Boolean, Boolean>() {",
                "+\t\tPromise<Void> promise = Streams.from(clients)",
                "+\t\t\t\t.flatMap(new Function<TcpClient<Message<P>, Message<P>>, Promise<Void>>() {",
                " \t\t\t\t\t@Override",
                "-\t\t\t\t\tpublic Boolean apply(Boolean prev, Boolean next) {",
                "-\t\t\t\t\t\treturn prev && next;",
                "+\t\t\t\t\tpublic Promise<Void> apply(final TcpClient<Message<P>, Message<P>> client) {",
                "+\t\t\t\t\t\treturn client.shutdown().onComplete(new Consumer<Promise<Void>>() {",
                "+\t\t\t\t\t\t\t@Override",
                "+\t\t\t\t\t\t\tpublic void accept(Promise<Void> voidPromise) {",
                "+\t\t\t\t\t\t\t\tsynchronized (tcpClients) {",
                "+\t\t\t\t\t\t\t\t\ttcpClients.remove(client);",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t});",
                " \t\t\t\t\t}",
                "@@ -232,7 +240,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\t\treturn new PassThroughPromiseToListenableFutureAdapter<Boolean>(promise);",
                "-\t}",
                "-",
                "-",
                "-\tpublic interface TcpClientSpecFactory<I, O> extends Function<TcpClientSpec<I, O>, TcpClientSpec<I, O>> {",
                "+\t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(promise);",
                " \t}",
                "@@ -259,16 +263,9 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t}",
                "-\t}",
                "-",
                "-\tprivate static class BooleanToVoidAdapter extends AbstractPromiseToListenableFutureAdapter<Boolean, Void> {",
                "-\t\tpublic BooleanToVoidAdapter(Promise<Boolean> promise) {",
                "-\t\t\tsuper(promise);",
                "-\t\t}",
                "+\t}",
                "-\t\t@Override",
                "-\t\tprotected Void adapt(Boolean result) {",
                "-\t\t\treturn null;",
                "-\t\t}",
                "+\tprivate interface MessageHandler<P>",
                "+\t\t\textends ReactorChannelHandler<Message<P>, Message<P>, ChannelStream<Message<P>, Message<P>>>{",
                " \t}",
                "-}",
                "\\ No newline at end of file",
                "+}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java",
                "index a08533b702..ed198f9599 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java",
                "@@ -18,5 +18,10 @@ package org.springframework.messaging.tcp.reactor;",
                "+import org.reactivestreams.Subscriber;",
                "+import org.reactivestreams.Subscription;",
                "+import org.springframework.util.concurrent.ListenableFutureAdapter;",
                " import reactor.fn.Functions;",
                " import reactor.io.net.ChannelStream;",
                "+import reactor.rx.Promise;",
                " import reactor.rx.Promises;",
                "+import reactor.rx.Streams;",
                " import reactor.rx.broadcast.Broadcaster;",
                "@@ -39,10 +44,7 @@ public class Reactor2TcpConnection<P> implements TcpConnection<P> {",
                " \tprivate final ChannelStream<Message<P>, Message<P>> channelStream;",
                "+\tprivate final Promise<Void> closePromise;",
                "-\tprivate final Broadcaster<Message<P>> sink;",
                "-",
                "-",
                "-\tpublic Reactor2TcpConnection(ChannelStream<Message<P>, Message<P>> channelStream) {",
                "+\tpublic Reactor2TcpConnection(ChannelStream<Message<P>, Message<P>> channelStream, Promise<Void> closePromise) {",
                " \t\tthis.channelStream = channelStream;",
                "-\t\tthis.sink = Broadcaster.create();",
                "-\t\tthis.channelStream.sink(this.sink);",
                "+\t\tthis.closePromise = closePromise;",
                " \t}",
                "@@ -52,4 +54,5 @@ public class Reactor2TcpConnection<P> implements TcpConnection<P> {",
                " \tpublic ListenableFuture<Void> send(Message<P> message) {",
                "-\t\tthis.sink.onNext(message);",
                "-\t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(Promises.<Void>success(null));",
                "+\t\tPromise<Void> afterWrite = Promises.prepare();",
                "+\t\tthis.channelStream.writeWith(Streams.just(message)).subscribe(afterWrite);",
                "+\t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(afterWrite);",
                " \t}",
                "@@ -68,5 +71,4 @@ public class Reactor2TcpConnection<P> implements TcpConnection<P> {",
                " \tpublic void close() {",
                "-\t\tthis.sink.onComplete();",
                "+\t\tthis.closePromise.onComplete();",
                " \t}",
                "-",
                " }"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/TcpOperations.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_CODE",
                    "message": "The commit modifies code containing relevant filename or methods: STOMP",
                    "relevance": 8
                },
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/Reactor2TcpStompClient.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/TcpOperations.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: stomp",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "c29eae3307c718db7fb4b9ced2ff2a30fcb62b71",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429059048,
            "hunks": 47,
            "message": "Support user destinations with multiple app servers This change adds support for broadcasting messages with unresolved user destinations so that other servers can try to resolve it. That enables sending messages to users who may be connected to a different server. Issue: SPR-11620",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java",
                "index 443f7e5a85..7e3d7f12b6 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -71,7 +71,4 @@ public class SimpMessageHeaderAccessor extends NativeMessageHeaderAccessor {",
                " \t/**",
                "-\t * For internal use.",
                "-\t * <p>The original destination used by a client when subscribing. Such a",
                "-\t * destination may have been modified (e.g. user destinations) on the server",
                "-\t * side. This header provides a hint so messages sent to clients may have",
                "-\t * a destination matching to their original subscription.",
                "+\t * A header for internal use with \"user\" destinations where we need to",
                "+\t * restore the destination prior to sending messages to clients.",
                " \t */",
                "@@ -79,2 +76,8 @@ public class SimpMessageHeaderAccessor extends NativeMessageHeaderAccessor {",
                "+\t/**",
                "+\t * A header that indicates to the broker that the sender will ignore errors.",
                "+\t * The header is simply checked for presence or absence.",
                "+\t */",
                "+\tpublic static final String IGNORE_ERROR = \"simpIgnoreError\";",
                "+",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java",
                "index 2e4faed318..3964f7339c 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java",
                "@@ -19,3 +19,6 @@ package org.springframework.messaging.simp.config;",
                " import java.util.ArrayList;",
                "+import java.util.Collections;",
                "+import java.util.HashMap;",
                " import java.util.List;",
                "+import java.util.Map;",
                "@@ -27,2 +30,3 @@ import org.springframework.context.annotation.Bean;",
                " import org.springframework.messaging.Message;",
                "+import org.springframework.messaging.MessageHandler;",
                " import org.springframework.messaging.converter.ByteArrayMessageConverter;",
                "@@ -39,2 +43,3 @@ import org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler;",
                " import org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler;",
                "+import org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler;",
                " import org.springframework.messaging.simp.user.DefaultUserDestinationResolver;",
                "@@ -280,4 +285,13 @@ public abstract class AbstractMessageBrokerConfiguration implements ApplicationC",
                " \tpublic AbstractBrokerMessageHandler stompBrokerRelayMessageHandler() {",
                "-\t\tAbstractBrokerMessageHandler handler = getBrokerRegistry().getStompBrokerRelay(brokerChannel());",
                "-\t\treturn (handler != null ? handler : new NoOpBrokerMessageHandler());",
                "+\t\tStompBrokerRelayMessageHandler handler = getBrokerRegistry().getStompBrokerRelay(brokerChannel());",
                "+\t\tif (handler == null) {",
                "+\t\t\treturn new NoOpBrokerMessageHandler();",
                "+\t\t}",
                "+\t\tString destination = getBrokerRegistry().getUserDestinationBroadcast();",
                "+\t\tif (destination != null) {",
                "+\t\t\tMap<String, MessageHandler> map = new HashMap<String, MessageHandler>(1);",
                "+\t\t\tmap.put(destination, userDestinationMessageHandler());",
                "+\t\t\thandler.setSystemSubscriptions(map);",
                "+\t\t}",
                "+\t\treturn handler;",
                " \t}",
                "@@ -286,3 +300,7 @@ public abstract class AbstractMessageBrokerConfiguration implements ApplicationC",
                " \tpublic UserDestinationMessageHandler userDestinationMessageHandler() {",
                "-\t\treturn new UserDestinationMessageHandler(clientInboundChannel(), brokerChannel(), userDestinationResolver());",
                "+\t\tUserDestinationMessageHandler handler = new UserDestinationMessageHandler(clientInboundChannel(),",
                "+\t\t\t\tbrokerChannel(), userDestinationResolver());",
                "+\t\tString destination = getBrokerRegistry().getUserDestinationBroadcast();",
                "+\t\thandler.setUserDestinationBroadcast(destination);",
                "+\t\treturn handler;",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/config/MessageBrokerRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/MessageBrokerRegistry.java",
                "index 669a751ba0..6970905322 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/config/MessageBrokerRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/config/MessageBrokerRegistry.java",
                "@@ -51,2 +51,4 @@ public class MessageBrokerRegistry {",
                "+\tprivate String userDestinationBroadcast;",
                "+",
                " \tprivate PathMatcher pathMatcher;",
                "@@ -139,2 +141,20 @@ public class MessageBrokerRegistry {",
                "+\t/**",
                "+\t * Set a destination to broadcast messages to that remain unresolved because",
                "+\t * the user is not connected. In a multi-application server scenario this",
                "+\t * gives other application servers a chance to try.",
                "+\t * <p><strong>Note:</strong> this option applies only when the",
                "+\t * {@link #enableStompBrokerRelay \"broker relay\"} is enabled.",
                "+\t * <p>By default this is not set.",
                "+\t * @param destination the destination to forward unresolved",
                "+\t * messages to, e.g. \"/topic/unresolved-user-destination\".",
                "+\t */",
                "+\tpublic void setUserDestinationBroadcast(String destination) {",
                "+\t\tthis.userDestinationBroadcast = destination;",
                "+\t}",
                "+",
                "+\tprotected String getUserDestinationBroadcast() {",
                "+\t\treturn this.userDestinationBroadcast;",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "index fc74ddc360..dd30ba706b 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "@@ -19,2 +19,3 @@ package org.springframework.messaging.simp.stomp;",
                " import java.util.Collection;",
                "+import java.util.HashMap;",
                " import java.util.Map;",
                "@@ -28,2 +29,3 @@ import org.springframework.messaging.MessageChannel;",
                " import org.springframework.messaging.MessageDeliveryException;",
                "+import org.springframework.messaging.MessageHandler;",
                " import org.springframework.messaging.MessageHeaders;",
                "@@ -114,2 +116,4 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                "+\tprivate final Map<String, MessageHandler> systemSubscriptions = new HashMap<String, MessageHandler>(4);",
                "+",
                " \tprivate TcpOperations<byte[]> tcpClient;",
                "@@ -283,2 +287,23 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                "+\t/**",
                "+\t * Configure one more destinations to subscribe to on the shared \"system\"",
                "+\t * connection along with MessageHandler's to handle received messages.",
                "+\t * <p>This is for internal use in a multi-application server scenario where",
                "+\t * servers forward messages to each other (e.g. unresolved user destinations).",
                "+\t * @param subscriptions the destinations to subscribe to.",
                "+\t */",
                "+\tpublic void setSystemSubscriptions(Map<String, MessageHandler> subscriptions) {",
                "+\t\tthis.systemSubscriptions.clear();",
                "+\t\tif (subscriptions != null) {",
                "+\t\t\tthis.systemSubscriptions.putAll(subscriptions);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Return the configured map with subscriptions on the \"system\" connection.",
                "+\t */",
                "+\tpublic Map<String, MessageHandler> getSystemSubscriptions() {",
                "+\t\treturn this.systemSubscriptions;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -534,2 +559,6 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                "+\t\tprotected TcpConnection<byte[]> getTcpConnection() {",
                "+\t\t\treturn this.tcpConnection;",
                "+\t\t}",
                "+",
                " \t\t@Override",
                "@@ -581,4 +610,3 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                " \t\t\t\tMessage<?> errorMessage = MessageBuilder.createMessage(EMPTY_PAYLOAD, headerAccessor.getMessageHeaders());",
                "-\t\t\t\theaderAccessor.setImmutable();",
                "-\t\t\t\tsendMessageToClient(errorMessage);",
                "+\t\t\t\thandleInboundMessage(errorMessage);",
                " \t\t\t}",
                "@@ -586,4 +614,6 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                "-\t\tprotected void sendMessageToClient(Message<?> message) {",
                "+\t\tprotected void handleInboundMessage(Message<?> message) {",
                " \t\t\tif (this.isRemoteClientSession) {",
                "+\t\t\t\tStompHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(message, StompHeaderAccessor.class);",
                "+\t\t\t\taccessor.setImmutable();",
                " \t\t\t\tStompBrokerRelayMessageHandler.this.getClientOutboundChannel().send(message);",
                "@@ -612,4 +642,3 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                "-\t\t\taccessor.setImmutable();",
                "-\t\t\tsendMessageToClient(message);",
                "+\t\t\thandleInboundMessage(message);",
                " \t\t}",
                "@@ -827,3 +856,2 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                "-",
                " \tprivate class SystemStompConnectionHandler extends StompConnectionHandler {",
                "@@ -841,2 +869,59 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                " \t\t\tpublishBrokerAvailableEvent();",
                "+\t\t\tsendSystemSubscriptions();",
                "+\t\t}",
                "+",
                "+\t\tprivate void sendSystemSubscriptions() {",
                "+\t\t\tint i = 0;",
                "+\t\t\tfor (String destination : getSystemSubscriptions().keySet()) {",
                "+\t\t\t\tStompHeaderAccessor accessor = StompHeaderAccessor.create(StompCommand.SUBSCRIBE);",
                "+\t\t\t\taccessor.setSubscriptionId(String.valueOf(i++));",
                "+\t\t\t\taccessor.setDestination(destination);",
                "+\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\tlogger.debug(\"Subscribing to \" + destination + \" on \\\"system\\\" connection.\");",
                "+\t\t\t\t}",
                "+\t\t\t\tTcpConnection<byte[]> conn = getTcpConnection();",
                "+\t\t\t\tif (conn != null) {",
                "+\t\t\t\t\tMessageHeaders headers = accessor.getMessageHeaders();",
                "+\t\t\t\t\tconn.send(MessageBuilder.createMessage(EMPTY_PAYLOAD, headers)).addCallback(",
                "+\t\t\t\t\t\t\tnew ListenableFutureCallback<Void>() {",
                "+\t\t\t\t\t\t\t\tpublic void onSuccess(Void result) {",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\tpublic void onFailure(Throwable ex) {",
                "+\t\t\t\t\t\t\t\t\tString error = \"Failed to subscribe in \\\"system\\\" session.\";",
                "+\t\t\t\t\t\t\t\t\thandleTcpConnectionFailure(error, ex);",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t});",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tprotected void handleInboundMessage(Message<?> message) {",
                "+\t\t\tStompHeaderAccessor accessor = MessageHeaderAccessor.getAccessor(message, StompHeaderAccessor.class);",
                "+\t\t\tif (StompCommand.MESSAGE.equals(accessor.getCommand())) {",
                "+\t\t\t\tString destination = accessor.getDestination();",
                "+\t\t\t\tif (destination == null) {",
                "+\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\t\tlogger.debug(\"Got message on \\\"system\\\" connection, with no destination: \" +",
                "+\t\t\t\t\t\t\t\taccessor.getDetailedLogMessage(message.getPayload()));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn;",
                "+\t\t\t\t}",
                "+\t\t\t\tif (!getSystemSubscriptions().containsKey(destination)) {",
                "+\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\t\tlogger.debug(\"Got message on \\\"system\\\" connection with no handler: \" +",
                "+\t\t\t\t\t\t\t\taccessor.getDetailedLogMessage(message.getPayload()));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn;",
                "+\t\t\t\t}",
                "+\t\t\t\ttry {",
                "+\t\t\t\t\tMessageHandler handler = getSystemSubscriptions().get(destination);",
                "+\t\t\t\t\thandler.handleMessage(message);",
                "+\t\t\t\t}",
                "+\t\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\t\tlogger.debug(\"Error while handling message on \\\"system\\\" connection.\", ex);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t}",
                " \t\t}",
                "@@ -859,3 +944,5 @@ public class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler",
                " \t\t\t\tListenableFuture<Void> future = super.forward(message, accessor);",
                "-\t\t\t\tfuture.get();",
                "+\t\t\t\tif (message.getHeaders().get(SimpMessageHeaderAccessor.IGNORE_ERROR) == null) {",
                "+\t\t\t\t\tfuture.get();",
                "+\t\t\t\t}",
                " \t\t\t\treturn future;",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "index 2223af3dba..9cf7730e5f 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "@@ -18,3 +18,7 @@ package org.springframework.messaging.simp.user;",
                "-import java.util.Set;",
                "+import static org.springframework.messaging.simp.SimpMessageHeaderAccessor.*;",
                "+import static org.springframework.messaging.support.MessageHeaderAccessor.getAccessor;",
                "+",
                "+import java.util.Arrays;",
                "+import java.util.List;",
                "@@ -26,2 +30,3 @@ import org.springframework.messaging.Message;",
                " import org.springframework.messaging.MessageHandler;",
                "+import org.springframework.messaging.MessageHeaders;",
                " import org.springframework.messaging.MessagingException;",
                "@@ -35,2 +40,3 @@ import org.springframework.messaging.support.MessageHeaderInitializer;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.StringUtils;",
                "@@ -55,5 +61,7 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                "+\tprivate final UserDestinationResolver destinationResolver;",
                "+",
                " \tprivate final MessageSendingOperations<String> messagingTemplate;",
                "-\tprivate final UserDestinationResolver destinationResolver;",
                "+\tprivate BroadcastHandler broadcastHandler;",
                "@@ -95,2 +103,21 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                "+\t/**",
                "+\t * Set a destination to broadcast messages to that remain unresolved because",
                "+\t * the user is not connected. In a multi-application server scenario this",
                "+\t * gives other application servers a chance to try.",
                "+\t * <p>By default this is not set.",
                "+\t * @param destination the target destination.",
                "+\t */",
                "+\tpublic void setUserDestinationBroadcast(String destination) {",
                "+\t\tthis.broadcastHandler = (StringUtils.hasText(destination) ?",
                "+\t\t\t\tnew BroadcastHandler(this.messagingTemplate, destination) : null);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Return the configured destination for unresolved messages.",
                "+\t */",
                "+\tpublic String getUserDestinationBroadcast() {",
                "+\t\treturn (this.broadcastHandler != null ? this.broadcastHandler.getBroadcastDestination() : null);",
                "+\t}",
                "+",
                " \t/**",
                "@@ -166,2 +193,8 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \tpublic void handleMessage(Message<?> message) throws MessagingException {",
                "+\t\tif (this.broadcastHandler != null) {",
                "+\t\t\tmessage = this.broadcastHandler.preHandle(message);",
                "+\t\t\tif (message == null) {",
                "+\t\t\t\treturn;",
                "+\t\t\t}",
                "+\t\t}",
                " \t\tUserDestinationResult result = this.destinationResolver.resolveDestination(message);",
                "@@ -170,6 +203,8 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \t\t}",
                "-\t\tSet<String> destinations = result.getTargetDestinations();",
                "-\t\tif (destinations.isEmpty()) {",
                "+\t\tif (result.getTargetDestinations().isEmpty()) {",
                " \t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\tlogger.trace(\"No user destinations found for \" + result.getSourceDestination());",
                "+\t\t\t\tlogger.trace(\"No active sessions for user destination: \" + result.getSourceDestination());",
                "+\t\t\t}",
                "+\t\t\tif (this.broadcastHandler != null) {",
                "+\t\t\t\tthis.broadcastHandler.handleUnresolved(message);",
                " \t\t\t}",
                "@@ -177,14 +212,12 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                " \t\t}",
                "-\t\tif (SimpMessageType.MESSAGE.equals(SimpMessageHeaderAccessor.getMessageType(message.getHeaders()))) {",
                "-\t\t\tSimpMessageHeaderAccessor accessor = SimpMessageHeaderAccessor.wrap(message);",
                "-\t\t\tinitHeaders(accessor);",
                "-\t\t\tString header = SimpMessageHeaderAccessor.ORIGINAL_DESTINATION;",
                "-\t\t\taccessor.setNativeHeader(header, result.getSubscribeDestination());",
                "-\t\t\tmessage = MessageBuilder.createMessage(message.getPayload(), accessor.getMessageHeaders());",
                "-\t\t}",
                "-\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\tlogger.debug(\"Translated \" + result.getSourceDestination() + \" -> \" + destinations);",
                "+\t\tSimpMessageHeaderAccessor accessor = SimpMessageHeaderAccessor.wrap(message);",
                "+\t\tinitHeaders(accessor);",
                "+\t\taccessor.setNativeHeader(ORIGINAL_DESTINATION, result.getSubscribeDestination());",
                "+\t\taccessor.setLeaveMutable(true);",
                "+\t\tmessage = MessageBuilder.createMessage(message.getPayload(), accessor.getMessageHeaders());",
                "+\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\tlogger.trace(\"Translated \" + result.getSourceDestination() + \" -> \" + result.getTargetDestinations());",
                " \t\t}",
                "-\t\tfor (String destination : destinations) {",
                "-\t\t\tthis.messagingTemplate.send(destination, message);",
                "+\t\tfor (String target : result.getTargetDestinations()) {",
                "+\t\t\tthis.messagingTemplate.send(target, message);",
                " \t\t}",
                "@@ -203,2 +236,71 @@ public class UserDestinationMessageHandler implements MessageHandler, SmartLifec",
                "+",
                "+\t/**",
                "+\t * A handler that broadcasts locally unresolved messages to the broker and",
                "+\t * also handles similar broadcasts received from the broker.",
                "+\t */",
                "+\tprivate static class BroadcastHandler {",
                "+",
                "+\t\tprivate static final List<String> NO_COPY_LIST = Arrays.asList(\"subscription\", \"message-id\");",
                "+",
                "+",
                "+\t\tprivate final MessageSendingOperations<String> messagingTemplate;",
                "+",
                "+\t\tprivate final String broadcastDestination;",
                "+",
                "+",
                "+\t\tpublic BroadcastHandler(MessageSendingOperations<String> template, String destination) {",
                "+\t\t\tthis.messagingTemplate = template;",
                "+\t\t\tthis.broadcastDestination = destination;",
                "+\t\t}",
                "+",
                "+",
                "+\t\tpublic String getBroadcastDestination() {",
                "+\t\t\treturn this.broadcastDestination;",
                "+\t\t}",
                "+",
                "+\t\tpublic Message<?> preHandle(Message<?> message) throws MessagingException {",
                "+\t\t\tString destination = SimpMessageHeaderAccessor.getDestination(message.getHeaders());",
                "+\t\t\tif (!getBroadcastDestination().equals(destination)) {",
                "+\t\t\t\treturn message;",
                "+\t\t\t}",
                "+\t\t\tSimpMessageHeaderAccessor accessor = getAccessor(message, SimpMessageHeaderAccessor.class);",
                "+\t\t\tif (accessor.getSessionId() == null) {",
                "+\t\t\t\t// Our own broadcast",
                "+\t\t\t\treturn null;",
                "+\t\t\t}",
                "+\t\t\tdestination = accessor.getFirstNativeHeader(ORIGINAL_DESTINATION);",
                "+\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\tlogger.trace(\"Checking unresolved user destination: \" + destination);",
                "+\t\t\t}",
                "+\t\t\tSimpMessageHeaderAccessor newAccessor = SimpMessageHeaderAccessor.create(SimpMessageType.MESSAGE);",
                "+\t\t\tfor (String name : accessor.toNativeHeaderMap().keySet()) {",
                "+\t\t\t\tif (NO_COPY_LIST.contains(name)) {",
                "+\t\t\t\t\tcontinue;",
                "+\t\t\t\t}",
                "+\t\t\t\tnewAccessor.setNativeHeader(name, accessor.getFirstNativeHeader(name));",
                "+\t\t\t}",
                "+\t\t\tnewAccessor.setDestination(destination);",
                "+\t\t\tnewAccessor.setHeader(SimpMessageHeaderAccessor.IGNORE_ERROR, true); // ensure send doesn't block",
                "+\t\t\treturn MessageBuilder.createMessage(message.getPayload(), newAccessor.getMessageHeaders());",
                "+\t\t}",
                "+",
                "+\t\tpublic void handleUnresolved(Message<?> message) {",
                "+\t\t\tMessageHeaders headers = message.getHeaders();",
                "+\t\t\tif (SimpMessageHeaderAccessor.getFirstNativeHeader(ORIGINAL_DESTINATION, headers) != null) {",
                "+\t\t\t\t// Re-broadcast",
                "+\t\t\t\treturn;",
                "+\t\t\t}",
                "+\t\t\tSimpMessageHeaderAccessor accessor = SimpMessageHeaderAccessor.wrap(message);",
                "+\t\t\tString destination = accessor.getDestination();",
                "+\t\t\taccessor.setNativeHeader(ORIGINAL_DESTINATION, destination);",
                "+\t\t\taccessor.setLeaveMutable(true);",
                "+\t\t\tmessage = MessageBuilder.createMessage(message.getPayload(), accessor.getMessageHeaders());",
                "+\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\tlogger.trace(\"Translated \" + destination + \" -> \" + getBroadcastDestination());",
                "+\t\t\t}",
                "+\t\t\tthis.messagingTemplate.send(getBroadcastDestination(), message);",
                "+\t\t}",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java b/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java",
                "index 881d38e1c2..8240760a96 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java",
                "@@ -117,3 +117,3 @@ public class NativeMessageHeaderAccessor extends MessageHeaderAccessor {",
                " \t\tMap<String, List<String>> map = getNativeHeaders();",
                "-\t\treturn (map != null ? map.containsKey(headerName) : false);",
                "+\t\treturn (map != null && map.containsKey(headerName));",
                " \t}",
                "@@ -209,2 +209,14 @@ public class NativeMessageHeaderAccessor extends MessageHeaderAccessor {",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic static String getFirstNativeHeader(String headerName, Map<String, Object> headers) {",
                "+\t\tMap<String, List<String>> map = (Map<String, List<String>>) headers.get(NATIVE_HEADERS);",
                "+\t\tif (map != null) {",
                "+\t\t\tList<String> values = map.get(headerName);",
                "+\t\t\tif (values != null) {",
                "+\t\t\t\treturn values.get(0);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn null;",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java",
                "index 0cb4348b94..1b69b4c75d 100644",
                "--- a/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java",
                "+++ b/spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java",
                "@@ -161,3 +161,9 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                " \t\tRuntimeBeanReference brokerChannel = getMessageChannel(\"brokerChannel\", channelElem, context, source);",
                "-\t\tRootBeanDefinition broker = registerMessageBroker(element, inChannel, outChannel, brokerChannel, context, source);",
                "+",
                "+\t\tRuntimeBeanReference resolver = registerUserDestResolver(element, sessionRegistry, context, source);",
                "+\t\tRuntimeBeanReference userDestHandler = registerUserDestHandler(element, inChannel,",
                "+\t\t\t\tbrokerChannel, resolver, context, source);",
                "+",
                "+\t\tRootBeanDefinition broker = registerMessageBroker(element, userDestHandler, inChannel,",
                "+\t\t\t\toutChannel, brokerChannel, context, source);",
                "@@ -167,5 +173,2 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                "-\t\tRuntimeBeanReference resolver = registerUserDestinationResolver(element, sessionRegistry, context, source);",
                "-\t\tregisterUserDestinationMessageHandler(inChannel, brokerChannel, resolver, context, source);",
                "-",
                " \t\tMap<String, Object> scopeMap = Collections.<String, Object>singletonMap(\"websocket\", new SimpSessionScope());",
                "@@ -310,7 +313,9 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                "-\tprivate RootBeanDefinition registerMessageBroker(Element messageBrokerElement, RuntimeBeanReference inChannel,",
                "-\t\t\tRuntimeBeanReference outChannel, RuntimeBeanReference brokerChannel, ParserContext context, Object source) {",
                "+\tprivate RootBeanDefinition registerMessageBroker(Element brokerElement,",
                "+\t\t\tRuntimeBeanReference userDestHandler, RuntimeBeanReference inChannel,",
                "+\t\t\tRuntimeBeanReference outChannel, RuntimeBeanReference brokerChannel,",
                "+\t\t\tParserContext context, Object source) {",
                "-\t\tElement simpleBrokerElem = DomUtils.getChildElementByTagName(messageBrokerElement, \"simple-broker\");",
                "-\t\tElement brokerRelayElem = DomUtils.getChildElementByTagName(messageBrokerElement, \"stomp-broker-relay\");",
                "+\t\tElement simpleBrokerElem = DomUtils.getChildElementByTagName(brokerElement, \"simple-broker\");",
                "+\t\tElement brokerRelayElem = DomUtils.getChildElementByTagName(brokerElement, \"stomp-broker-relay\");",
                "@@ -326,4 +331,4 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                " \t\t\tbrokerDef = new RootBeanDefinition(SimpleBrokerMessageHandler.class, cavs, null);",
                "-\t\t\tif (messageBrokerElement.hasAttribute(\"path-matcher\")) {",
                "-\t\t\t\tString pathMatcherRef = messageBrokerElement.getAttribute(\"path-matcher\");",
                "+\t\t\tif (brokerElement.hasAttribute(\"path-matcher\")) {",
                "+\t\t\t\tString pathMatcherRef = brokerElement.getAttribute(\"path-matcher\");",
                " \t\t\t\tbrokerDef.getPropertyValues().add(\"pathMatcher\", new RuntimeBeanReference(pathMatcherRef));",
                "@@ -371,2 +376,9 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                " \t\t\t}",
                "+\t\t\tif (brokerElement.hasAttribute(\"user-destination-broadcast\")) {",
                "+\t\t\t\tString destination = brokerElement.getAttribute(\"user-destination-broadcast\");",
                "+\t\t\t\tManagedMap<String, Object> map = new ManagedMap<String, Object>();",
                "+\t\t\t\tmap.setSource(source);",
                "+\t\t\t\tmap.put(destination, userDestHandler);",
                "+\t\t\t\tvalues.add(\"systemSubscriptions\", map);",
                "+\t\t\t}",
                " \t\t\tClass<?> handlerType = StompBrokerRelayMessageHandler.class;",
                "@@ -473,3 +485,3 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                "-\tprivate RuntimeBeanReference registerUserDestinationResolver(Element brokerElem,",
                "+\tprivate RuntimeBeanReference registerUserDestResolver(Element brokerElem,",
                " \t\t\tRuntimeBeanReference userSessionRegistry, ParserContext context, Object source) {",
                "@@ -485,5 +497,5 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                "-\tprivate RuntimeBeanReference registerUserDestinationMessageHandler(RuntimeBeanReference inChannel,",
                "-\t\t\tRuntimeBeanReference brokerChannel, RuntimeBeanReference userDestinationResolver,",
                "-\t\t\tParserContext context, Object source) {",
                "+\tprivate RuntimeBeanReference registerUserDestHandler(Element brokerElem,",
                "+\t\t\tRuntimeBeanReference inChannel, RuntimeBeanReference brokerChannel,",
                "+\t\t\tRuntimeBeanReference userDestinationResolver, ParserContext context, Object source) {",
                "@@ -494,2 +506,6 @@ class MessageBrokerBeanDefinitionParser implements BeanDefinitionParser {",
                " \t\tRootBeanDefinition beanDef = new RootBeanDefinition(UserDestinationMessageHandler.class, cavs, null);",
                "+\t\tif (brokerElem.hasAttribute(\"user-destination-broadcast\")) {",
                "+\t\t\tString destination = brokerElem.getAttribute(\"user-destination-broadcast\");",
                "+\t\t\tbeanDef.getPropertyValues().add(\"userDestinationBroadcast\", destination);",
                "+\t\t}",
                " \t\treturn new RuntimeBeanReference(registerBeanDef(beanDef, context, source));",
                "diff --git a/spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd b/spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd",
                "index 8ec7535b3c..749f1637a1 100644",
                "--- a/spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd",
                "+++ b/spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd",
                "@@ -855,2 +855,13 @@",
                " \tThe default value is \"/user/\".",
                "+                    ]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"user-destination-broadcast\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tSet a destination to broadcast messages to that remain unresolved because",
                "+\tthe user is not connected. In a multi-application server scenario this",
                "+\tgives other application servers a chance to try.",
                "+\tNote: this option applies only when the stomp-broker-relay is enabled.",
                "+\tBy default this is not set.",
                "                     ]]></xsd:documentation>",
                "diff --git a/src/asciidoc/web-websocket.adoc b/src/asciidoc/web-websocket.adoc",
                "index 71f1d74aa9..9ecd118bcf 100644",
                "--- a/src/asciidoc/web-websocket.adoc",
                "+++ b/src/asciidoc/web-websocket.adoc",
                "@@ -1743,2 +1743,9 @@ for purging inactive destinations.",
                "+In a multi-application server scenario a user destination may remain unresolved because",
                "+the user is connected to a different server. In such cases you can configure a",
                "+destination to broadcast unresolved messages to so that other servers have a chance to try.",
                "+This can be done through the `userDestinationBroadcast` property of the",
                "+`MessageBrokerRegistry` in Java config and the `user-destination-broadcast` attribute",
                "+of the `message-broker` element in XML.",
                "+"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/config/MessageBrokerRegistry.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java",
                "spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java",
                "spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java",
                "spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd",
                "src/asciidoc/web-websocket.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-websocket/src/main/java/org/springframework/web/socket/config/MessageBrokerBeanDefinitionParser.java, spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessageHeaderAccessor.java, src/asciidoc/web-websocket.adoc, spring-messaging/src/main/java/org/springframework/messaging/simp/config/MessageBrokerRegistry.java, spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java, spring-websocket/src/main/resources/org/springframework/web/socket/config/spring-websocket-4.2.xsd, spring-messaging/src/main/java/org/springframework/messaging/simp/user/UserDestinationMessageHandler.java, spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.java, spring-messaging/src/main/java/org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: user, message",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: websocket, stomp, message, broker, user",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d3a0a8e0078df5f152d9e5f802683614a0018182",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521714971,
            "hunks": 21,
            "message": "Use Collection.removeIf() where possible (#1747) Use Collection.removeIf() where possible Issue: SPR-16622",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.java b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.java",
                "index e339e716b4..03ec6dd127 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,2 @@ package org.springframework.aop.framework.autoproxy.target;",
                " import java.util.HashMap;",
                "-import java.util.Iterator;",
                " import java.util.Map;",
                "@@ -33,3 +32,2 @@ import org.springframework.beans.factory.DisposableBean;",
                " import org.springframework.beans.factory.config.BeanDefinition;",
                "-import org.springframework.beans.factory.config.BeanPostProcessor;",
                " import org.springframework.beans.factory.config.ConfigurableBeanFactory;",
                "@@ -152,7 +150,4 @@ public abstract class AbstractBeanFactoryBasedTargetSourceCreator",
                " \t\t// since those are only meant to apply to beans defined in the original factory.",
                "-\t\tfor (Iterator<BeanPostProcessor> it = internalBeanFactory.getBeanPostProcessors().iterator(); it.hasNext();) {",
                "-\t\t\tif (it.next() instanceof AopInfrastructureBean) {",
                "-\t\t\t\tit.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tinternalBeanFactory.getBeanPostProcessors().removeIf(beanPostProcessor ->",
                "+\t\t\t\tbeanPostProcessor instanceof AopInfrastructureBean);",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java b/spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java",
                "index ef74f0dd37..8656d9e702 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java",
                "@@ -23,3 +23,2 @@ import java.beans.PropertyDescriptor;",
                " import java.util.Collections;",
                "-import java.util.Iterator;",
                " import java.util.LinkedHashMap;",
                "@@ -152,20 +151,8 @@ public class CachedIntrospectionResults {",
                " \tpublic static void clearClassLoader(@Nullable ClassLoader classLoader) {",
                "-\t\tfor (Iterator<ClassLoader> it = acceptedClassLoaders.iterator(); it.hasNext();) {",
                "-\t\t\tClassLoader registeredLoader = it.next();",
                "-\t\t\tif (isUnderneathClassLoader(registeredLoader, classLoader)) {",
                "-\t\t\t\tit.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\tfor (Iterator<Class<?>> it = strongClassCache.keySet().iterator(); it.hasNext();) {",
                "-\t\t\tClass<?> beanClass = it.next();",
                "-\t\t\tif (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) {",
                "-\t\t\t\tit.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\tfor (Iterator<Class<?>> it = softClassCache.keySet().iterator(); it.hasNext();) {",
                "-\t\t\tClass<?> beanClass = it.next();",
                "-\t\t\tif (isUnderneathClassLoader(beanClass.getClassLoader(), classLoader)) {",
                "-\t\t\t\tit.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tacceptedClassLoaders.removeIf(registeredLoader ->",
                "+\t\t\t\tisUnderneathClassLoader(registeredLoader, classLoader));",
                "+\t\tstrongClassCache.keySet().removeIf(beanClass ->",
                "+\t\t\t\tisUnderneathClassLoader(beanClass.getClassLoader(), classLoader));",
                "+\t\tsoftClassCache.keySet().removeIf(beanClass ->",
                "+\t\t\t\tisUnderneathClassLoader(beanClass.getClassLoader(), classLoader));",
                " \t}",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "index 07c87795e5..6f5a392c6a 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "@@ -29,3 +29,2 @@ import java.util.HashMap;",
                " import java.util.HashSet;",
                "-import java.util.Iterator;",
                " import java.util.LinkedHashMap;",
                "@@ -1340,8 +1339,3 @@ public abstract class AbstractBeanFactory extends FactoryBeanRegistrySupport imp",
                " \tpublic void clearMetadataCache() {",
                "-\t\tIterator<String> mergedBeans = this.mergedBeanDefinitions.keySet().iterator();",
                "-\t\twhile (mergedBeans.hasNext()) {",
                "-\t\t\tif (!isBeanEligibleForMetadataCaching(mergedBeans.next())) {",
                "-\t\t\t\tmergedBeans.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tthis.mergedBeanDefinitions.keySet().removeIf(bean -> !isBeanEligibleForMetadataCaching(bean));",
                " \t}",
                "diff --git a/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java b/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java",
                "index 0e379c8ebf..b21093fb4b 100644",
                "--- a/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java",
                "+++ b/spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,2 @@ package org.springframework.scripting.support;",
                " import java.util.HashMap;",
                "-import java.util.Iterator;",
                " import java.util.Map;",
                "@@ -41,3 +40,2 @@ import org.springframework.beans.factory.FactoryBean;",
                " import org.springframework.beans.factory.config.BeanDefinition;",
                "-import org.springframework.beans.factory.config.BeanPostProcessor;",
                " import org.springframework.beans.factory.config.ConfigurableBeanFactory;",
                "@@ -227,7 +225,4 @@ public class ScriptFactoryPostProcessor extends InstantiationAwareBeanPostProces",
                " \t\t// since those are only meant to apply to beans defined in the original factory.",
                "-\t\tfor (Iterator<BeanPostProcessor> it = this.scriptBeanFactory.getBeanPostProcessors().iterator(); it.hasNext();) {",
                "-\t\t\tif (it.next() instanceof AopInfrastructureBean) {",
                "-\t\t\t\tit.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tthis.scriptBeanFactory.getBeanPostProcessors().removeIf(beanPostProcessor ->",
                "+\t\t\t\tbeanPostProcessor instanceof AopInfrastructureBean);",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                "index e7744e3e77..7d943d44c6 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,3 +23,2 @@ import java.util.HashMap;",
                " import java.util.HashSet;",
                "-import java.util.Iterator;",
                " import java.util.Map;",
                "@@ -177,9 +176,3 @@ public class MultiServerUserRegistry implements SimpUserRegistry, SmartApplicati",
                " \t\tlong now = System.currentTimeMillis();",
                "-\t\tIterator<Map.Entry<String, UserRegistrySnapshot>> iterator = this.remoteRegistries.entrySet().iterator();",
                "-\t\twhile (iterator.hasNext()) {",
                "-\t\t\tMap.Entry<String, UserRegistrySnapshot> entry = iterator.next();",
                "-\t\t\tif (entry.getValue().isExpired(now)) {",
                "-\t\t\t\titerator.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tthis.remoteRegistries.entrySet().removeIf(entry -> entry.getValue().isExpired(now));",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ConsumesRequestCondition.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ConsumesRequestCondition.java",
                "index f187441794..fc190243da 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ConsumesRequestCondition.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ConsumesRequestCondition.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,3 +21,2 @@ import java.util.Collection;",
                " import java.util.Collections;",
                "-import java.util.Iterator;",
                " import java.util.LinkedHashSet;",
                "@@ -170,8 +169,3 @@ public final class ConsumesRequestCondition extends AbstractRequestCondition<Con",
                " \t\tSet<ConsumeMediaTypeExpression> result = new LinkedHashSet<>(expressions);",
                "-\t\tfor (Iterator<ConsumeMediaTypeExpression> iterator = result.iterator(); iterator.hasNext();) {",
                "-\t\t\tConsumeMediaTypeExpression expression = iterator.next();",
                "-\t\t\tif (!expression.match(exchange)) {",
                "-\t\t\t\titerator.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tresult.removeIf(expression -> !expression.match(exchange));",
                " \t\treturn (result.isEmpty()) ? null : new ConsumesRequestCondition(result);",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "index 4e28666f63..b9a799a189 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,3 +21,2 @@ import java.util.Collection;",
                " import java.util.Collections;",
                "-import java.util.Iterator;",
                " import java.util.LinkedHashSet;",
                "@@ -194,8 +193,3 @@ public final class ProducesRequestCondition extends AbstractRequestCondition<Pro",
                " \t\tSet<ProduceMediaTypeExpression> result = new LinkedHashSet<>(expressions);",
                "-\t\tfor (Iterator<ProduceMediaTypeExpression> iterator = result.iterator(); iterator.hasNext();) {",
                "-\t\t\tProduceMediaTypeExpression expression = iterator.next();",
                "-\t\t\tif (!expression.match(exchange)) {",
                "-\t\t\t\titerator.remove();",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tresult.removeIf(expression -> !expression.match(exchange));",
                " \t\treturn (result.isEmpty()) ? null : new ProducesRequestCondition(result, this.contentTypeResolver);"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/framework/autoproxy/target/AbstractBeanFactoryBasedTargetSourceCreator.java",
                "spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "spring-context/src/main/java/org/springframework/scripting/support/ScriptFactoryPostProcessor.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ConsumesRequestCondition.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1747": "Use Collection.removeIf() where possible [SPR-16622] #21163"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/simp/user/MultiServerUserRegistry.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: user",
                    "relevance": 4
                },
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1747",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "16ee69203cc6a556f1b8efb1ccebfe312826e30f",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429739681,
            "hunks": 11,
            "message": "Add support for destination vars in @SendTo/SendToUser Issue: SPR-12170",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandler.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandler.java",
                "index e1ae458065..e83506b8af 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandler.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -20,2 +20,3 @@ import java.lang.annotation.Annotation;",
                " import java.security.Principal;",
                "+import java.util.Map;",
                "@@ -28,2 +29,3 @@ import org.springframework.messaging.handler.DestinationPatternsMessageCondition",
                " import org.springframework.messaging.handler.annotation.SendTo;",
                "+import org.springframework.messaging.handler.annotation.support.DestinationVariableMethodArgumentResolver;",
                " import org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandler;",
                "@@ -37,2 +39,4 @@ import org.springframework.util.Assert;",
                " import org.springframework.util.ObjectUtils;",
                "+import org.springframework.util.PropertyPlaceholderHelper;",
                "+import org.springframework.util.PropertyPlaceholderHelper.PlaceholderResolver;",
                "@@ -61,2 +65,4 @@ public class SendToMethodReturnValueHandler implements HandlerMethodReturnValueH",
                "+\tprivate PropertyPlaceholderHelper placeholderHelper = new PropertyPlaceholderHelper(\"{\", \"}\", null, false);",
                "+",
                " \tprivate MessageHeaderInitializer headerInitializer;",
                "@@ -141,4 +147,5 @@ public class SendToMethodReturnValueHandler implements HandlerMethodReturnValueH",
                " \t\tString sessionId = SimpMessageHeaderAccessor.getSessionId(headers);",
                "-",
                "+\t\tPlaceholderResolver varResolver = initVarResolver(headers);",
                " \t\tSendToUser sendToUser = returnType.getMethodAnnotation(SendToUser.class);",
                "+",
                " \t\tif (sendToUser != null) {",
                "@@ -155,2 +162,3 @@ public class SendToMethodReturnValueHandler implements HandlerMethodReturnValueH",
                " \t\t\tfor (String destination : destinations) {",
                "+\t\t\t\tdestination = this.placeholderHelper.replacePlaceholders(destination, varResolver);",
                " \t\t\t\tif (broadcast) {",
                "@@ -167,2 +175,3 @@ public class SendToMethodReturnValueHandler implements HandlerMethodReturnValueH",
                " \t\t\tfor (String destination : destinations) {",
                "+\t\t\t\tdestination = this.placeholderHelper.replacePlaceholders(destination, varResolver);",
                " \t\t\t\tthis.messagingTemplate.convertAndSend(destination, returnValue, createHeaders(sessionId));",
                "@@ -172,2 +181,9 @@ public class SendToMethodReturnValueHandler implements HandlerMethodReturnValueH",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tprivate PlaceholderResolver initVarResolver(MessageHeaders headers) {",
                "+\t\tString name = DestinationVariableMethodArgumentResolver.DESTINATION_TEMPLATE_VARIABLES_HEADER;",
                "+\t\tMap<String, String> vars = (Map<String, String>) headers.get(name);",
                "+\t\treturn new DestinationVariablePlaceholderResolver(vars);",
                "+\t}",
                "+",
                " \tprotected String getUserName(Message<?> message, MessageHeaders headers) {",
                "@@ -212,2 +228,17 @@ public class SendToMethodReturnValueHandler implements HandlerMethodReturnValueH",
                "+\tprivate static class DestinationVariablePlaceholderResolver implements PlaceholderResolver {",
                "+",
                "+\t\tprivate final Map<String, String> vars;",
                "+",
                "+",
                "+\t\tpublic DestinationVariablePlaceholderResolver(Map<String, String> vars) {",
                "+\t\t\tthis.vars = vars;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic String resolvePlaceholder(String placeholderName) {",
                "+\t\t\treturn (this.vars != null ? this.vars.get(placeholderName) : null);",
                "+\t\t}",
                "+\t}",
                "+",
                " }"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/simp/annotation/support/SendToMethodReturnValueHandler.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: user",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ff377a383621e88ca3d164055da7c28746846ee2",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521817794,
            "hunks": 3,
            "message": "Minor typo in docs",
            "diff": [
                "diff --git a/src/asciidoc/core-expressions.adoc b/src/asciidoc/core-expressions.adoc",
                "index 8ae51a9688..bb68284dc0 100644",
                "--- a/src/asciidoc/core-expressions.adoc",
                "+++ b/src/asciidoc/core-expressions.adoc",
                "@@ -203,3 +203,3 @@ one of, or some combination of the following:",
                "-. Custom {@code PropertyAccessor} only (no reflection).",
                "+. Custom `PropertyAccessor` only (no reflection).",
                " . Data binding properties for read-only access.",
                "diff --git a/src/asciidoc/web-websocket.adoc b/src/asciidoc/web-websocket.adoc",
                "index 370407547e..46d36c5b30 100644",
                "--- a/src/asciidoc/web-websocket.adoc",
                "+++ b/src/asciidoc/web-websocket.adoc",
                "@@ -1470,3 +1470,3 @@ method with respect to mapping and input arguments. For example you can combine",
                " type-level `@MessageMapping` to express a shared destination prefix, and you can use the",
                "-same <<websocket-stomp-message-mapping,method arguments>> as on any @MessageMapping` method.",
                "+same <<websocket-stomp-message-mapping,method arguments>> as any @MessageMapping` method.",
                "@@ -1508,3 +1508,4 @@ itself, or through a method argument if you want to get access to the exception",
                " `@MessageExceptionHandler` methods support flexible method signatures and support the same",
                "-method argument types and return values as <<websocket-stomp-message-mapping>> methods.",
                "+method argument types and return values as",
                "+<<websocket-stomp-message-mapping,@MessageMapping>> methods."
            ],
            "changed_files": [
                "src/asciidoc/core-expressions.adoc",
                "src/asciidoc/web-websocket.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: src/asciidoc/web-websocket.adoc",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: websocket",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "51c57d77d90981d266dc94054ebe27e3f77890a1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521738567,
            "hunks": 46,
            "message": "SimpleEvaluationContext with dedicated factory methods for common cases Aligned with DataBindingPropertyAccessor and shown in ref doc examples. Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java",
                "index f8a723429f..b2fa91ec64 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -59,3 +59,3 @@ public enum SpelMessage {",
                " \tPROPERTY_OR_FIELD_NOT_READABLE(Kind.ERROR, 1008,",
                "-\t\t\t\"Property or field ''{0}'' cannot be found on object of type ''{1}'' - maybe not public?\"),",
                "+\t\t\t\"Property or field ''{0}'' cannot be found on object of type ''{1}'' - maybe not public or not valid?\"),",
                "@@ -65,3 +65,3 @@ public enum SpelMessage {",
                " \tPROPERTY_OR_FIELD_NOT_WRITABLE(Kind.ERROR, 1010,",
                "-\t\t\t\"Property or field ''{0}'' cannot be set on object of type ''{1}'' - maybe not public?\"),",
                "+\t\t\t\"Property or field ''{0}'' cannot be set on object of type ''{1}'' - maybe not public or not writable?\"),",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "index 2deb173993..8ee7ec946d 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "@@ -24,8 +24,8 @@ import java.lang.reflect.Method;",
                "  *",
                "- * <p>A property can be accessed through a public getter method (when being read)",
                "+ * <p>A property can be referenced through a public getter method (when being read)",
                "  * or a public setter method (when being written), and also as a public field.",
                "  *",
                "- * <p>This accessor is explicitly designed for user-level property evaluation",
                "- * and does not resolve technical properties on {@code java.lang.Object}.",
                "- * For more resolution power, choose {@link ReflectivePropertyAccessor} instead.",
                "+ * <p>This accessor is explicitly designed for user-declared properties and does not",
                "+ * resolve technical properties on {@code java.lang.Object} or {@code java.lang.Class}.",
                "+ * For unrestricted resolution, choose {@link ReflectivePropertyAccessor} instead.",
                "  *",
                "@@ -51,4 +51,5 @@ public class DataBindingPropertyAccessor extends ReflectivePropertyAccessor {",
                " \t@Override",
                "-\tprotected boolean isCandidateForProperty(Method method) {",
                "-\t\treturn (method.getDeclaringClass() != Object.class);",
                "+\tprotected boolean isCandidateForProperty(Method method, Class<?> targetClass) {",
                "+\t\tClass<?> clazz = method.getDeclaringClass();",
                "+\t\treturn (clazz != Object.class && clazz != Class.class && !ClassLoader.class.isAssignableFrom(targetClass));",
                " \t}",
                "@@ -57,3 +58,3 @@ public class DataBindingPropertyAccessor extends ReflectivePropertyAccessor {",
                " \t/**",
                "-\t * Create a new data-binding property accessor for read-only access.",
                "+\t * Create a new data-binding property accessor for read-only operations.",
                " \t */",
                "@@ -64,3 +65,3 @@ public class DataBindingPropertyAccessor extends ReflectivePropertyAccessor {",
                " \t/**",
                "-\t * Create a new data-binding property accessor for read-write access.",
                "+\t * Create a new data-binding property accessor for read-write operations.",
                " \t */",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index c8ad58abdc..41eb0ed7bc 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -50,3 +50,3 @@ import org.springframework.util.StringUtils;",
                "  *",
                "- * <p>A property can be accessed through a public getter method (when being read)",
                "+ * <p>A property can be referenced through a public getter method (when being read)",
                "  * or a public setter method (when being written), and also as a public field.",
                "@@ -411,3 +411,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tfor (Method method : methods) {",
                "-\t\t\t\tif (isCandidateForProperty(method) && method.getName().equals(prefix + methodSuffix) &&",
                "+\t\t\t\tif (isCandidateForProperty(method, clazz) && method.getName().equals(prefix + methodSuffix) &&",
                " \t\t\t\t\t\tmethod.getParameterCount() == numberOfParams &&",
                "@@ -427,5 +427,6 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t * @param method the Method to evaluate",
                "+\t * @param targetClass the concrete target class that is being introspected",
                " \t * @since 4.3.15",
                " \t */",
                "-\tprotected boolean isCandidateForProperty(Method method) {",
                "+\tprotected boolean isCandidateForProperty(Method method, Class<?> targetClass) {",
                " \t\treturn true;",
                "@@ -520,4 +521,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "-\t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "-\t\tif (type.isArray()) {",
                "+\t\tClass<?> clazz = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "+\t\tif (clazz.isArray()) {",
                " \t\t\treturn this;",
                "@@ -525,3 +526,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "-\t\tPropertyCacheKey cacheKey = new PropertyCacheKey(type, name, target instanceof Class);",
                "+\t\tPropertyCacheKey cacheKey = new PropertyCacheKey(clazz, name, target instanceof Class);",
                " \t\tInvokerPair invocationTarget = this.readerCache.get(cacheKey);",
                "@@ -531,3 +532,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tif (method == null) {",
                "-\t\t\t\tmethod = findGetterForProperty(name, type, target);",
                "+\t\t\t\tmethod = findGetterForProperty(name, clazz, target);",
                " \t\t\t\tif (method != null) {",
                "@@ -538,3 +539,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t}",
                "-\t\t\tif (method != null && isCandidateForProperty(method)) {",
                "+\t\t\tif (method != null) {",
                " \t\t\t\treturn new OptimalPropertyAccessor(invocationTarget);",
                "@@ -546,3 +547,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tif (field == null) {",
                "-\t\t\t\tfield = findField(name, type, target instanceof Class);",
                "+\t\t\t\tfield = findField(name, clazz, target instanceof Class);",
                " \t\t\t\tif (field != null) {",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 03a543a1ae..20272c18e0 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -18,3 +18,2 @@ package org.springframework.expression.spel.support;",
                "-import java.util.ArrayList;",
                " import java.util.Arrays;",
                "@@ -25,2 +24,3 @@ import java.util.Map;",
                "+import org.springframework.core.convert.ConversionService;",
                " import org.springframework.expression.BeanResolver;",
                "@@ -43,30 +43,38 @@ import org.springframework.lang.Nullable;",
                "  *",
                "- * <p>In many cases, the full extent of the SpEL language is not",
                "- * required and should be meaningfully restricted. Examples include but are not",
                "- * limited to data binding expressions, property-based filters, and others. To",
                "- * that effect, {@code SimpleEvaluationContext} is tailored to support only a",
                "- * subset of the SpEL language syntax, e.g. excluding references to Java types,",
                "- * constructors, and bean references.",
                "+ * <p>In many cases, the full extent of the SpEL language is not required and",
                "+ * should be meaningfully restricted. Examples include but are not limited to",
                "+ * data binding expressions, property-based filters, and others. To that effect,",
                "+ * {@code SimpleEvaluationContext} is tailored to support only a subset of the",
                "+ * SpEL language syntax, e.g. excluding references to Java types, constructors,",
                "+ * and bean references.",
                "  *",
                "  * <p>When creating {@code SimpleEvaluationContext} you need to choose the level",
                "- * of support you need to deal with properties and methods in SpEL expressions.",
                "- * By default, {@link SimpleEvaluationContext#create()} enables only read access",
                "- * to properties via {@link DataBindingPropertyAccessor}. Alternatively, use",
                "- * {@link SimpleEvaluationContext#builder()} to configure the exact level of",
                "- * support needed, targeting one of, or some combination of the following:",
                "+ * of support you need to deal with properties and methods in SpEL expressions:",
                "  * <ul>",
                "- * <li>Custom {@code PropertyAccessor} only (no reflection).</li>",
                "- * <li>Data binding properties for read-only access.</li>",
                "- * <li>Data binding properties for read and write.</li>",
                "+ * <li>Custom {@code PropertyAccessor} only (no reflection)</li>",
                "+ * <li>Data binding properties for read-only access</li>",
                "+ * <li>Data binding properties for read and write</li>",
                "  * </ul>",
                "  *",
                "- * <p>Note that {@code SimpleEvaluationContext} cannot be configured with a",
                "- * default root object. Instead it is meant to be created once and used",
                "- * repeatedly through method variants on",
                "- * {@link org.springframework.expression.Expression Expression} that accept",
                "- * both an {@code EvaluationContext} and a root object.",
                "+ * <p>Conveniently, {@link SimpleEvaluationContext#forReadOnlyDataBinding()}",
                "+ * enables read access to properties via {@link DataBindingPropertyAccessor};",
                "+ * same for {@link SimpleEvaluationContext#forReadWriteDataBinding()} when",
                "+ * write access is needed as well. Alternatively, configure custom accessors",
                "+ * via {@link SimpleEvaluationContext#forPropertyAccessors}.",
                "+ *",
                "+ * <p>Note that {@code SimpleEvaluationContext} cannot be configured with",
                "+ * a default root object. Instead it is meant to be created once and used",
                "+ * repeatedly through {@code getValue} calls on a pre-compiled",
                "+ * {@link org.springframework.expression.Expression} with both an",
                "+ * {@code EvaluationContext} and a root object as arguments",
                "+ *",
                "+ * <p>For more flexibility, consider {@link StandardEvaluationContext} instead.",
                "  *",
                "  * @author Rossen Stoyanchev",
                "+ * @author Juergen Hoeller",
                "  * @since 4.3.15",
                "+ * @see #forReadOnlyDataBinding()",
                "+ * @see #forReadWriteDataBinding()",
                "  * @see StandardEvaluationContext",
                "+ * @see StandardTypeConverter",
                "  * @see DataBindingPropertyAccessor",
                "@@ -82,6 +90,2 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tprivate final List<ConstructorResolver> constructorResolvers = Collections.emptyList();",
                "-",
                "-\tprivate final List<MethodResolver> methodResolvers = Collections.emptyList();",
                "-",
                " \tprivate final TypeConverter typeConverter;",
                "@@ -96,4 +100,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, @Nullable TypeConverter converter) {",
                "-\t\tthis.propertyAccessors = Collections.unmodifiableList(new ArrayList<>(accessors));",
                "-\t\tthis.typeConverter = converter != null ? converter : new StandardTypeConverter();",
                "+\t\tthis.propertyAccessors = accessors;",
                "+\t\tthis.typeConverter = (converter != null ? converter : new StandardTypeConverter());",
                " \t}",
                "@@ -124,3 +128,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic List<ConstructorResolver> getConstructorResolvers() {",
                "-\t\treturn this.constructorResolvers;",
                "+\t\treturn Collections.emptyList();",
                " \t}",
                "@@ -132,3 +136,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic List<MethodResolver> getMethodResolvers() {",
                "-\t\treturn this.methodResolvers;",
                "+\t\treturn Collections.emptyList();",
                " \t}",
                "@@ -172,3 +176,2 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-",
                " \t/**",
                "@@ -194,14 +197,18 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Create a {@code SimpleEvaluationContext} with read-only access to",
                "+\t * Create a {@code SimpleEvaluationContext} for the specified",
                "+\t * {@link PropertyAccessor} delegates.",
                "+\t * @see ReflectivePropertyAccessor",
                "+\t * @see DataBindingPropertyAccessor",
                "+\t */",
                "+\tpublic static Builder forPropertyAccessors(PropertyAccessor... accessors) {",
                "+\t\treturn new Builder(accessors);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a {@code SimpleEvaluationContext} for read-only access to",
                " \t * public properties via {@link DataBindingPropertyAccessor}.",
                "-\t * <p>Effectively, a shortcut for:",
                "-\t * <pre class=\"code\">",
                "-\t * SimpleEvaluationContext context = SimpleEvaluationContext.builder()",
                "-\t *         .dataBindingPropertyAccessor(true)",
                "-\t *         .build();",
                "-\t * </pre>",
                "-\t * @see #builder()",
                "+\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                " \t */",
                "-\tpublic static SimpleEvaluationContext create() {",
                "-\t\treturn new Builder().dataBindingPropertyAccessor(true).build();",
                "+\tpublic static Builder forReadOnlyDataBinding() {",
                "+\t\treturn new Builder(DataBindingPropertyAccessor.forReadOnlyAccess());",
                " \t}",
                "@@ -209,7 +216,8 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Return a builder to create a {@code SimpleEvaluationContext}.",
                "-\t * @see #create()",
                "+\t * Create a {@code SimpleEvaluationContext} for read-write access to",
                "+\t * public properties via {@link DataBindingPropertyAccessor}.",
                "+\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                " \t */",
                "-\tpublic static Builder builder() {",
                "-\t\treturn new Builder();",
                "+\tpublic static Builder forReadWriteDataBinding() {",
                "+\t\treturn new Builder(DataBindingPropertyAccessor.forReadWriteAccess());",
                " \t}",
                "@@ -222,3 +230,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\t\tprivate final List<PropertyAccessor> propertyAccessors = new ArrayList<>();",
                "+\t\tprivate final List<PropertyAccessor> propertyAccessors;",
                "@@ -227,14 +235,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-",
                "-\t\t/**",
                "-\t\t * Enable access to public properties for data binding purposes.",
                "-\t\t * <p>Effectively, a shortcut for",
                "-\t\t * {@code propertyAccessor(new DataBindingPropertyAccessor(boolean))}.",
                "-\t\t * @param readOnlyAccess whether to read-only access to properties,",
                "-\t\t * {@code \"true\"}, or read and write, {@code \"false\"}.",
                "-\t\t */",
                "-\t\tpublic Builder dataBindingPropertyAccessor(boolean readOnlyAccess) {",
                "-\t\t\treturn propertyAccessor(readOnlyAccess ?",
                "-\t\t\t\t\tDataBindingPropertyAccessor.forReadOnlyAccess() :",
                "-\t\t\t\t\tDataBindingPropertyAccessor.forReadWriteAccess());",
                "+\t\tpublic Builder(PropertyAccessor... accessors) {",
                "+\t\t\tthis.propertyAccessors = Arrays.asList(accessors);",
                " \t\t}",
                "@@ -242,7 +240,11 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t/**",
                "-\t\t * Register a custom accessor for properties in expressions.",
                "-\t\t * <p>By default, the builder does not enable property access.",
                "+\t\t * Register a custom {@link TypeConverter}.",
                "+\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService}",
                "+\t\t * is used.",
                "+\t\t * @see #withConversionService",
                "+\t\t * @see StandardTypeConverter#StandardTypeConverter()",
                " \t\t */",
                "-\t\tpublic Builder propertyAccessor(PropertyAccessor... accessors) {",
                "-\t\t\tthis.propertyAccessors.addAll(Arrays.asList(accessors));",
                "+\t\tpublic Builder withTypeConverter(TypeConverter converter) {",
                "+\t\t\tthis.typeConverter = converter;",
                " \t\t\treturn this;",
                "@@ -251,7 +253,11 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t/**",
                "-\t\t * Register a custom {@link TypeConverter}.",
                "-\t\t * <p>By default {@link StandardTypeConverter} is used.",
                "+\t\t * Register a custom {@link ConversionService}.",
                "+\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService}",
                "+\t\t * is used.",
                "+\t\t * @see #withTypeConverter",
                "+\t\t * @see StandardTypeConverter#StandardTypeConverter(ConversionService)",
                " \t\t */",
                "-\t\tpublic Builder typeConverter(TypeConverter converter) {",
                "-\t\t\tthis.typeConverter = converter;",
                "+\t\tpublic Builder withConversionService(ConversionService conversionService) {",
                "+\t\t\tthis.typeConverter = new StandardTypeConverter(conversionService);",
                " \t\t\treturn this;",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardTypeConverter.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardTypeConverter.java",
                "index fce9643b65..77ff16342e 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardTypeConverter.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardTypeConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -44,2 +44,3 @@ public class StandardTypeConverter implements TypeConverter {",
                " \t * Create a StandardTypeConverter for the default ConversionService.",
                "+\t * @see DefaultConversionService#getSharedInstance()",
                " \t */",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "index ae9c6b7414..18c9a9169e 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                "@@ -66,6 +66,5 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                "-\t/** Static evaluation context to re-use */",
                "-\tprivate static SimpleEvaluationContext evaluationContext = SimpleEvaluationContext.builder()",
                "-\t\t\t.propertyAccessor(new SimpMessageHeaderPropertyAccessor()).build();",
                "-",
                "+\t/** Static evaluation context to reuse */",
                "+\tprivate static EvaluationContext messageEvalContext =",
                "+\t\t\tSimpleEvaluationContext.forPropertyAccessors(new SimpMessageHeaderPropertyAccessor()).build();",
                "@@ -215,3 +214,3 @@ public class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry {",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tif (Boolean.TRUE.equals(expression.getValue(evaluationContext, message, Boolean.class))) {",
                "+\t\t\t\t\tif (Boolean.TRUE.equals(expression.getValue(messageEvalContext, message, Boolean.class))) {",
                " \t\t\t\t\t\tresult.add(sessionId, subId);"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/SpelMessage.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/StandardTypeConverter.java",
                "spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: broker, message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f00afe3247128c74c52a4f323d7c7e18c46ceefe",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521822983,
            "hunks": 10,
            "message": "Use (Concurrent)Map.computeIfAbsent for lazy nested collection creation",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/xml/SimpleNamespaceContext.java b/spring-core/src/main/java/org/springframework/util/xml/SimpleNamespaceContext.java",
                "index 8d94ed7e9e..d0498abcea 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/xml/SimpleNamespaceContext.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/xml/SimpleNamespaceContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -125,7 +125,4 @@ public class SimpleNamespaceContext implements NamespaceContext {",
                " \t\t\tthis.prefixToNamespaceUri.put(prefix, namespaceUri);",
                "-\t\t\tSet<String> prefixes = this.namespaceUriToPrefixes.get(namespaceUri);",
                "-\t\t\tif (prefixes == null) {",
                "-\t\t\t\tprefixes = new LinkedHashSet<>();",
                "-\t\t\t\tthis.namespaceUriToPrefixes.put(namespaceUri, prefixes);",
                "-\t\t\t}",
                "+\t\t\tSet<String> prefixes =",
                "+\t\t\t\t\tthis.namespaceUriToPrefixes.computeIfAbsent(namespaceUri, k -> new LinkedHashSet<>());",
                " \t\t\tprefixes.add(prefix);",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java b/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java",
                "index 2426c0d0b9..1c3dd8fe6d 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java",
                "@@ -28,2 +28,4 @@ import java.util.List;",
                " import java.util.Map;",
                "+import java.util.concurrent.ConcurrentHashMap;",
                "+import java.util.concurrent.ConcurrentMap;",
                " import javax.jms.Connection;",
                "@@ -88,3 +90,3 @@ public class CachingConnectionFactory extends SingleConnectionFactory {",
                "-\tprivate final Map<Integer, LinkedList<Session>> cachedSessions = new HashMap<>();",
                "+\tprivate final ConcurrentMap<Integer, LinkedList<Session>> cachedSessions = new ConcurrentHashMap<>();",
                "@@ -210,10 +212,3 @@ public class CachingConnectionFactory extends SingleConnectionFactory {",
                "-\t\tLinkedList<Session> sessionList;",
                "-\t\tsynchronized (this.cachedSessions) {",
                "-\t\t\tsessionList = this.cachedSessions.get(mode);",
                "-\t\t\tif (sessionList == null) {",
                "-\t\t\t\tsessionList = new LinkedList<>();",
                "-\t\t\t\tthis.cachedSessions.put(mode, sessionList);",
                "-\t\t\t}",
                "-\t\t}",
                "+\t\tLinkedList<Session> sessionList = this.cachedSessions.computeIfAbsent(mode, k -> new LinkedList<>());",
                " \t\tSession session = null;",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java b/spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java",
                "index f38945eb82..5a09a0db85 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -141,7 +141,3 @@ public class JmsResourceHolder extends ResourceHolderSupport {",
                " \t\t\tif (connection != null) {",
                "-\t\t\t\tList<Session> sessions = this.sessionsPerConnection.get(connection);",
                "-\t\t\t\tif (sessions == null) {",
                "-\t\t\t\t\tsessions = new LinkedList<>();",
                "-\t\t\t\t\tthis.sessionsPerConnection.put(connection, sessions);",
                "-\t\t\t\t}",
                "+\t\t\t\tList<Session> sessions = this.sessionsPerConnection.computeIfAbsent(connection, k -> new LinkedList<>());",
                " \t\t\t\tsessions.add(session);",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java b/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java",
                "index 3049f07c15..4b83ee76e2 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -186,7 +186,3 @@ public class NativeMessageHeaderAccessor extends MessageHeaderAccessor {",
                " \t\t}",
                "-\t\tList<String> values = nativeHeaders.get(name);",
                "-\t\tif (values == null) {",
                "-\t\t\tvalues = new LinkedList<>();",
                "-\t\t\tnativeHeaders.put(name, values);",
                "-\t\t}",
                "+\t\tList<String> values = nativeHeaders.computeIfAbsent(name, k -> new LinkedList<>());",
                " \t\tvalues.add(value);",
                "@@ -199,4 +195,3 @@ public class NativeMessageHeaderAccessor extends MessageHeaderAccessor {",
                " \t\t}",
                "-\t\theaders.forEach((key, values) ->",
                "-\t\t\t\tvalues.forEach(value -> addNativeHeader(key, value)));",
                "+\t\theaders.forEach((key, values) -> values.forEach(value -> addNativeHeader(key, value)));",
                " \t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/xml/SimpleNamespaceContext.java",
                "spring-jms/src/main/java/org/springframework/jms/connection/CachingConnectionFactory.java",
                "spring-jms/src/main/java/org/springframework/jms/connection/JmsResourceHolder.java",
                "spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/support/NativeMessageHeaderAccessor.java",
                    "relevance": 8
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "41730220f4e5ef89024f3fbcf20b1f8362a56565",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520890308,
            "hunks": 28,
            "message": "InterceptingClientHttpRequest adapts to StreamingHttpOutputMessage Issue: SPR-16582",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/HttpInputMessage.java b/spring-web/src/main/java/org/springframework/http/HttpInputMessage.java",
                "index 9aeab46b9a..61874849f7 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/HttpInputMessage.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/HttpInputMessage.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -36,3 +36,3 @@ public interface HttpInputMessage extends HttpMessage {",
                " \t * @return the input stream body (never {@code null})",
                "-\t * @throws IOException in case of I/O Errors",
                "+\t * @throws IOException in case of I/O errors",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/http/HttpOutputMessage.java b/spring-web/src/main/java/org/springframework/http/HttpOutputMessage.java",
                "index fdee15b0c9..f8c7f866c8 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/HttpOutputMessage.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/HttpOutputMessage.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -36,3 +36,3 @@ public interface HttpOutputMessage extends HttpMessage {",
                " \t * @return the output stream body (never {@code null})",
                "-\t * @throws IOException in case of I/O Errors",
                "+\t * @throws IOException in case of I/O errors",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/http/StreamingHttpOutputMessage.java b/spring-web/src/main/java/org/springframework/http/StreamingHttpOutputMessage.java",
                "index abe13051bf..c4787b2fdd 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/StreamingHttpOutputMessage.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/StreamingHttpOutputMessage.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -32,4 +32,4 @@ public interface StreamingHttpOutputMessage extends HttpOutputMessage {",
                " \t/**",
                "-\t * Set the streaming body for this message.",
                "-\t * @param body the streaming body",
                "+\t * Set the streaming body callback for this message.",
                "+\t * @param body the streaming body callback",
                " \t */",
                "@@ -39,5 +39,5 @@ public interface StreamingHttpOutputMessage extends HttpOutputMessage {",
                " \t/**",
                "-\t * Defines the contract for bodies that can be written directly to an {@link OutputStream}.",
                "-\t * It is useful with HTTP client libraries that provide indirect access to an",
                "-\t * {@link OutputStream} via a callback mechanism.",
                "+\t * Defines the contract for bodies that can be written directly to an",
                "+\t * {@link OutputStream}. Useful with HTTP client libraries that provide",
                "+\t * indirect access to an {@link OutputStream} via a callback mechanism.",
                " \t */",
                "@@ -49,3 +49,3 @@ public interface StreamingHttpOutputMessage extends HttpOutputMessage {",
                " \t\t * @param outputStream the output stream to write to",
                "-\t\t * @throws IOException in case of errors",
                "+\t\t * @throws IOException in case of I/O errors",
                " \t\t */",
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java b/spring-web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java",
                "index 81e2d618bb..cab167e2f6 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -24,4 +24,4 @@ import org.springframework.http.HttpRequest;",
                "  * Intercepts client-side HTTP requests. Implementations of this interface can be",
                "- * {@linkplain org.springframework.web.client.RestTemplate#setInterceptors(java.util.List)",
                "- * registered} with the {@link org.springframework.web.client.RestTemplate RestTemplate},",
                "+ * {@linkplain org.springframework.web.client.RestTemplate#setInterceptors registered}",
                "+ * with the {@link org.springframework.web.client.RestTemplate RestTemplate},",
                "  * as to modify the outgoing {@link ClientHttpRequest} and/or the incoming",
                "@@ -42,3 +42,2 @@ public interface ClientHttpRequestInterceptor {",
                " \t * request and response to the next entity in the chain.",
                "-\t *",
                " \t * <p>A typical implementation of this method would follow the following pattern:",
                "@@ -58,3 +57,2 @@ public interface ClientHttpRequestInterceptor {",
                " \t * </ol>",
                "-\t *",
                " \t * @param request the request, containing method, URI, and headers",
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java",
                "index 27815f69a9..095b10a853 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -147,2 +147,3 @@ public class HttpComponentsClientHttpRequestFactory implements ClientHttpRequest",
                " \t * recommended to change this property to {@code false}, so as not to run out of memory.",
                "+\t * @since 4.0",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java b/spring-web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java",
                "index 3d73648314..dd4d564c05 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -22,3 +22,2 @@ import java.util.Iterator;",
                " import java.util.List;",
                "-import java.util.Map;",
                "@@ -27,2 +26,3 @@ import org.springframework.http.HttpMethod;",
                " import org.springframework.http.HttpRequest;",
                "+import org.springframework.http.StreamingHttpOutputMessage;",
                " import org.springframework.util.Assert;",
                "@@ -97,7 +97,11 @@ class InterceptingClientHttpRequest extends AbstractBufferingClientHttpRequest {",
                " \t\t\t\tClientHttpRequest delegate = requestFactory.createRequest(request.getURI(), method);",
                "-\t\t\t\tfor (Map.Entry<String, List<String>> entry : request.getHeaders().entrySet()) {",
                "-\t\t\t\t\tdelegate.getHeaders().addAll(entry.getKey(), entry.getValue());",
                "-\t\t\t\t}",
                "+\t\t\t\trequest.getHeaders().forEach((key, value) -> delegate.getHeaders().addAll(key, value));",
                " \t\t\t\tif (body.length > 0) {",
                "-\t\t\t\t\tStreamUtils.copy(body, delegate.getBody());",
                "+\t\t\t\t\tif (delegate instanceof StreamingHttpOutputMessage) {",
                "+\t\t\t\t\t\tStreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) delegate;",
                "+\t\t\t\t\t\tstreamingOutputMessage.setBody(outputStream -> StreamUtils.copy(body, outputStream));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\telse {",
                "+\t\t\t\t\t\tStreamUtils.copy(body, delegate.getBody());",
                "+\t\t\t\t\t}",
                " \t\t\t\t}",
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
                "index 3761dc17dc..78d05eceed 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -210,19 +210,13 @@ public abstract class AbstractHttpMessageConverter<T> implements HttpMessageConv",
                " \t\tif (outputMessage instanceof StreamingHttpOutputMessage) {",
                "-\t\t\tStreamingHttpOutputMessage streamingOutputMessage =",
                "-\t\t\t\t\t(StreamingHttpOutputMessage) outputMessage;",
                "-\t\t\tstreamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {",
                "+\t\t\tStreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) outputMessage;",
                "+\t\t\tstreamingOutputMessage.setBody(outputStream -> writeInternal(t, new HttpOutputMessage() {",
                " \t\t\t\t@Override",
                "-\t\t\t\tpublic void writeTo(final OutputStream outputStream) throws IOException {",
                "-\t\t\t\t\twriteInternal(t, new HttpOutputMessage() {",
                "-\t\t\t\t\t\t@Override",
                "-\t\t\t\t\t\tpublic OutputStream getBody() throws IOException {",
                "-\t\t\t\t\t\t\treturn outputStream;",
                "-\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t@Override",
                "-\t\t\t\t\t\tpublic HttpHeaders getHeaders() {",
                "-\t\t\t\t\t\t\treturn headers;",
                "-\t\t\t\t\t\t}",
                "-\t\t\t\t\t});",
                "+\t\t\t\tpublic OutputStream getBody() {",
                "+\t\t\t\t\treturn outputStream;",
                " \t\t\t\t}",
                "-\t\t\t});",
                "+\t\t\t\t@Override",
                "+\t\t\t\tpublic HttpHeaders getHeaders() {",
                "+\t\t\t\t\treturn headers;",
                "+\t\t\t\t}",
                "+\t\t\t}));",
                " \t\t}",
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/BufferedImageHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/BufferedImageHttpMessageConverter.java",
                "index 5f4a662731..7bbe9064df 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/BufferedImageHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/BufferedImageHttpMessageConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -223,8 +223,3 @@ public class BufferedImageHttpMessageConverter implements HttpMessageConverter<B",
                " \t\t\tStreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) outputMessage;",
                "-\t\t\tstreamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {",
                "-\t\t\t\t@Override",
                "-\t\t\t\tpublic void writeTo(OutputStream outputStream) throws IOException {",
                "-\t\t\t\t\twriteInternal(image, selectedContentType, outputStream);",
                "-\t\t\t\t}",
                "-\t\t\t});",
                "+\t\t\tstreamingOutputMessage.setBody(outputStream -> writeInternal(image, selectedContentType, outputStream));",
                " \t\t}",
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "index 3c22c99490..3972641a98 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -321,8 +321,3 @@ public class FormHttpMessageConverter implements HttpMessageConverter<MultiValue",
                " \t\t\tStreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) outputMessage;",
                "-\t\t\tstreamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {",
                "-\t\t\t\t@Override",
                "-\t\t\t\tpublic void writeTo(OutputStream outputStream) throws IOException {",
                "-\t\t\t\t\tStreamUtils.copy(bytes, outputStream);",
                "-\t\t\t\t}",
                "-\t\t\t});",
                "+\t\t\tstreamingOutputMessage.setBody(outputStream -> StreamUtils.copy(bytes, outputStream));",
                " \t\t}",
                "@@ -349,8 +344,5 @@ public class FormHttpMessageConverter implements HttpMessageConverter<MultiValue",
                " \t\t\tStreamingHttpOutputMessage streamingOutputMessage = (StreamingHttpOutputMessage) outputMessage;",
                "-\t\t\tstreamingOutputMessage.setBody(new StreamingHttpOutputMessage.Body() {",
                "-\t\t\t\t@Override",
                "-\t\t\t\tpublic void writeTo(OutputStream outputStream) throws IOException {",
                "-\t\t\t\t\twriteParts(outputStream, parts, boundary);",
                "-\t\t\t\t\twriteEnd(outputStream, boundary);",
                "-\t\t\t\t}",
                "+\t\t\tstreamingOutputMessage.setBody(outputStream -> {",
                "+\t\t\t\twriteParts(outputStream, parts, boundary);",
                "+\t\t\t\twriteEnd(outputStream, boundary);",
                " \t\t\t});"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/HttpInputMessage.java",
                "spring-web/src/main/java/org/springframework/http/HttpOutputMessage.java",
                "spring-web/src/main/java/org/springframework/http/StreamingHttpOutputMessage.java",
                "spring-web/src/main/java/org/springframework/http/client/ClientHttpRequestInterceptor.java",
                "spring-web/src/main/java/org/springframework/http/client/HttpComponentsClientHttpRequestFactory.java",
                "spring-web/src/main/java/org/springframework/http/client/InterceptingClientHttpRequest.java",
                "spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
                "spring-web/src/main/java/org/springframework/http/converter/BufferedImageHttpMessageConverter.java",
                "spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "2cac3a82552063b9b7eb3ad6089bd06e12fe5dab"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: message",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: message",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1cc513d7db1ae20a1cd25a798b875bb7fabb231f",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522359844,
            "hunks": 10,
            "message": "Consistent to/cc/bcc array handling and revised hashCode without text Issue: SPR-16671",
            "diff": [
                "diff --git a/spring-context-support/src/main/java/org/springframework/mail/SimpleMailMessage.java b/spring-context-support/src/main/java/org/springframework/mail/SimpleMailMessage.java",
                "index 3b224a47b1..0d876549d3 100644",
                "--- a/spring-context-support/src/main/java/org/springframework/mail/SimpleMailMessage.java",
                "+++ b/spring-context-support/src/main/java/org/springframework/mail/SimpleMailMessage.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -85,11 +85,5 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                " \t\tthis.replyTo = original.getReplyTo();",
                "-\t\tif (original.getTo() != null) {",
                "-\t\t\tthis.to = copy(original.getTo());",
                "-\t\t}",
                "-\t\tif (original.getCc() != null) {",
                "-\t\t\tthis.cc = copy(original.getCc());",
                "-\t\t}",
                "-\t\tif (original.getBcc() != null) {",
                "-\t\t\tthis.bcc = copy(original.getBcc());",
                "-\t\t}",
                "+\t\tthis.to = copyOrNull(original.getTo());",
                "+\t\tthis.cc = copyOrNull(original.getCc());",
                "+\t\tthis.bcc = copyOrNull(original.getBcc());",
                " \t\tthis.sentDate = original.getSentDate();",
                "@@ -201,3 +195,3 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                " \tpublic void copyTo(MailMessage target) {",
                "-\t\tAssert.notNull(target, \"'target' message argument must not be null\");",
                "+\t\tAssert.notNull(target, \"'target' MailMessage must not be null\");",
                " \t\tif (getFrom() != null) {",
                "@@ -209,9 +203,9 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                " \t\tif (getTo() != null) {",
                "-\t\t\ttarget.setTo(getTo());",
                "+\t\t\ttarget.setTo(copy(getTo()));",
                " \t\t}",
                " \t\tif (getCc() != null) {",
                "-\t\t\ttarget.setCc(getCc());",
                "+\t\t\ttarget.setCc(copy(getCc()));",
                " \t\t}",
                " \t\tif (getBcc() != null) {",
                "-\t\t\ttarget.setBcc(getBcc());",
                "+\t\t\ttarget.setBcc(copy(getBcc()));",
                " \t\t}",
                "@@ -229,16 +223,2 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                "-\t@Override",
                "-\tpublic String toString() {",
                "-\t\tStringBuilder sb = new StringBuilder(\"SimpleMailMessage: \");",
                "-\t\tsb.append(\"from=\").append(this.from).append(\"; \");",
                "-\t\tsb.append(\"replyTo=\").append(this.replyTo).append(\"; \");",
                "-\t\tsb.append(\"to=\").append(StringUtils.arrayToCommaDelimitedString(this.to)).append(\"; \");",
                "-\t\tsb.append(\"cc=\").append(StringUtils.arrayToCommaDelimitedString(this.cc)).append(\"; \");",
                "-\t\tsb.append(\"bcc=\").append(StringUtils.arrayToCommaDelimitedString(this.bcc)).append(\"; \");",
                "-\t\tsb.append(\"sentDate=\").append(this.sentDate).append(\"; \");",
                "-\t\tsb.append(\"subject=\").append(this.subject).append(\"; \");",
                "-\t\tsb.append(\"text=\").append(this.text);",
                "-\t\treturn sb.toString();",
                "-\t}",
                "-",
                " \t@Override",
                "@@ -254,5 +234,5 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                " \t\t\t\tObjectUtils.nullSafeEquals(this.replyTo, otherMessage.replyTo) &&",
                "-\t\t\t\tjava.util.Arrays.equals(this.to, otherMessage.to) &&",
                "-\t\t\t\tjava.util.Arrays.equals(this.cc, otherMessage.cc) &&",
                "-\t\t\t\tjava.util.Arrays.equals(this.bcc, otherMessage.bcc) &&",
                "+\t\t\t\tObjectUtils.nullSafeEquals(this.to, otherMessage.to) &&",
                "+\t\t\t\tObjectUtils.nullSafeEquals(this.cc, otherMessage.cc) &&",
                "+\t\t\t\tObjectUtils.nullSafeEquals(this.bcc, otherMessage.bcc) &&",
                " \t\t\t\tObjectUtils.nullSafeEquals(this.sentDate, otherMessage.sentDate) &&",
                "@@ -264,16 +244,9 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                " \tpublic int hashCode() {",
                "-\t\tint hashCode = (this.from == null ? 0 : this.from.hashCode());",
                "-\t\thashCode = 29 * hashCode + (this.replyTo == null ? 0 : this.replyTo.hashCode());",
                "-\t\tfor (int i = 0; this.to != null && i < this.to.length; i++) {",
                "-\t\t\thashCode = 29 * hashCode + (this.to == null ? 0 : this.to[i].hashCode());",
                "-\t\t}",
                "-\t\tfor (int i = 0; this.cc != null && i < this.cc.length; i++) {",
                "-\t\t\thashCode = 29 * hashCode + (this.cc == null ? 0 : this.cc[i].hashCode());",
                "-\t\t}",
                "-\t\tfor (int i = 0; this.bcc != null && i < this.bcc.length; i++) {",
                "-\t\t\thashCode = 29 * hashCode + (this.bcc == null ? 0 : this.bcc[i].hashCode());",
                "-\t\t}",
                "-\t\thashCode = 29 * hashCode + (this.sentDate == null ? 0 : this.sentDate.hashCode());",
                "-\t\thashCode = 29 * hashCode + (this.subject == null ? 0 : this.subject.hashCode());",
                "-\t\thashCode = 29 * hashCode + (this.text == null ? 0 : this.text.hashCode());",
                "+\t\tint hashCode = ObjectUtils.nullSafeHashCode(this.from);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.replyTo);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.to);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.cc);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.bcc);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.sentDate);",
                "+\t\thashCode = 29 * hashCode + ObjectUtils.nullSafeHashCode(this.subject);",
                " \t\treturn hashCode;",
                "@@ -281,2 +254,24 @@ public class SimpleMailMessage implements MailMessage, Serializable {",
                "+\t@Override",
                "+\tpublic String toString() {",
                "+\t\tStringBuilder sb = new StringBuilder(\"SimpleMailMessage: \");",
                "+\t\tsb.append(\"from=\").append(this.from).append(\"; \");",
                "+\t\tsb.append(\"replyTo=\").append(this.replyTo).append(\"; \");",
                "+\t\tsb.append(\"to=\").append(StringUtils.arrayToCommaDelimitedString(this.to)).append(\"; \");",
                "+\t\tsb.append(\"cc=\").append(StringUtils.arrayToCommaDelimitedString(this.cc)).append(\"; \");",
                "+\t\tsb.append(\"bcc=\").append(StringUtils.arrayToCommaDelimitedString(this.bcc)).append(\"; \");",
                "+\t\tsb.append(\"sentDate=\").append(this.sentDate).append(\"; \");",
                "+\t\tsb.append(\"subject=\").append(this.subject).append(\"; \");",
                "+\t\tsb.append(\"text=\").append(this.text);",
                "+\t\treturn sb.toString();",
                "+\t}",
                "+",
                "+",
                "+\t@Nullable",
                "+\tprivate static String[] copyOrNull(@Nullable String[] state) {",
                "+\t\tif (state == null) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "+\t\treturn copy(state);",
                "+\t}"
            ],
            "changed_files": [
                "spring-context-support/src/main/java/org/springframework/mail/SimpleMailMessage.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "4cf179535908846e918ab2bfeb3f49a2b82398e2"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: code",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: message",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "442ddb08457bf22afce9622ba9cd82c7415b6832",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521488294,
            "hunks": 3,
            "message": "Correct documentation of default HttpMessageConverters in RestTemplate Issue: SPR-7885",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "index 3972641a98..a2c8964ff4 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "@@ -66,4 +66,6 @@ import org.springframework.util.StringUtils;",
                "  * <pre class=\"code\">",
                "- * RestTemplate template = new RestTemplate();  // FormHttpMessageConverter is configured by default",
                "- * MultiValueMap&lt;String, String&gt; form = new LinkedMultiValueMap&lt;String, String&gt;();",
                "+ * RestTemplate template = new RestTemplate();",
                "+ * // AllEncompassingFormHttpMessageConverter is configured by default",
                "+ *",
                "+ * MultiValueMap&lt;String, String&gt; form = new LinkedMultiValueMap&lt;&gt;();",
                "  * form.add(\"field 1\", \"value 1\");",
                "@@ -76,3 +78,3 @@ import org.springframework.util.StringUtils;",
                "  * <pre class=\"code\">",
                "- * MultiValueMap&lt;String, Object&gt; parts = new LinkedMultiValueMap&lt;String, Object&gt;();",
                "+ * MultiValueMap&lt;String, Object&gt; parts = new LinkedMultiValueMap&lt;&gt;();",
                "  * parts.add(\"field 1\", \"value 1\");",
                "@@ -89,3 +91,4 @@ import org.springframework.util.StringUtils;",
                "  * @since 3.0",
                "- * @see MultiValueMap",
                "+ * @see org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter",
                "+ * @see org.springframework.util.MultiValueMap",
                "  */"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "977084a6b83590390e6ee93775d394d8326f2955"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: message",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: message",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1db7e02de3eb0c011ee6681f5a12eb9d166fea81",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520878300,
            "hunks": 13,
            "message": "Modify SpEL code gen to take account of null safe refs With this change the code generation for method and property references is modified to include branching logic in the case of null safe dereferencing (?.). This is complicated by the possible usage of primitives on the left hand side of the dereference. To cope with this case primitives are promoted to boxed types when this situation occurs enabling null to be passed as a possible result. Issue: SPR-16489",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "index b257f47f55..659107ca9b 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "@@ -1019,2 +1019,17 @@ public class CodeFlow implements Opcodes {",
                "+\tpublic static String toBoxedDescriptor(String primitiveDescriptor) {",
                "+\t\tswitch (primitiveDescriptor.charAt(0)) {",
                "+\t\t\tcase 'I': return \"Ljava/lang/Integer\";",
                "+\t\t\tcase 'J': return \"Ljava/lang/Long\";",
                "+\t\t\tcase 'F': return \"Ljava/lang/Float\";",
                "+\t\t\tcase 'D': return \"Ljava/lang/Double\";",
                "+\t\t\tcase 'B': return \"Ljava/lang/Byte\";",
                "+\t\t\tcase 'C': return \"Ljava/lang/Character\";",
                "+\t\t\tcase 'S': return \"Ljava/lang/Short\";",
                "+\t\t\tcase 'Z': return \"Ljava/lang/Boolean\";",
                "+\t\t\tdefault:",
                "+\t\t\t\tthrow new IllegalArgumentException(\"Unexpected non primitive descriptor \"+primitiveDescriptor);",
                "+\t\t}\t",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java",
                "index 1b68f61ecb..1c578bac67 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java",
                "@@ -26,2 +26,3 @@ import java.util.List;",
                "+import org.springframework.asm.Label;",
                " import org.springframework.asm.MethodVisitor;",
                "@@ -58,2 +59,4 @@ public class MethodReference extends SpelNodeImpl {",
                "+\tprivate String originalPrimitiveExitTypeDescriptor = null;",
                "+",
                " \t@Nullable",
                "@@ -238,3 +241,10 @@ public class MethodReference extends SpelNodeImpl {",
                " \t\t\tMethod method = ((ReflectiveMethodExecutor) executorToCheck.get()).getMethod();",
                "-\t\t\tthis.exitTypeDescriptor = CodeFlow.toDescriptor(method.getReturnType());",
                "+\t\t\tString descriptor = CodeFlow.toDescriptor(method.getReturnType());",
                "+\t\t\tif (this.nullSafe && CodeFlow.isPrimitive(descriptor)) {",
                "+\t\t\t\toriginalPrimitiveExitTypeDescriptor = descriptor;",
                "+\t\t\t\tthis.exitTypeDescriptor = CodeFlow.toBoxedDescriptor(descriptor);",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\tthis.exitTypeDescriptor = descriptor;",
                "+\t\t\t}",
                " \t\t}",
                "@@ -298,13 +308,19 @@ public class MethodReference extends SpelNodeImpl {",
                "-\t\tif (descriptor == null) {",
                "-\t\t\tif (!isStaticMethod) {",
                "-\t\t\t\t// Nothing on the stack but something is needed",
                "-\t\t\t\tcf.loadTarget(mv);",
                "-\t\t\t}",
                "+\t\tLabel skipIfNull = null;",
                "+\t\tif (descriptor == null && !isStaticMethod) {",
                "+\t\t\t// Nothing on the stack but something is needed",
                "+\t\t\tcf.loadTarget(mv);",
                " \t\t}",
                "-\t\telse {",
                "-\t\t\tif (isStaticMethod) {",
                "-\t\t\t\t// Something on the stack when nothing is needed",
                "-\t\t\t\tmv.visitInsn(POP);",
                "-\t\t\t}",
                "+\t\tif ((descriptor != null || !isStaticMethod) && nullSafe) {",
                "+\t\t\tmv.visitInsn(DUP);",
                "+\t\t\tskipIfNull = new Label();",
                "+\t\t\tLabel continueLabel = new Label();",
                "+\t\t\tmv.visitJumpInsn(IFNONNULL,continueLabel);",
                "+\t\t\tCodeFlow.insertCheckCast(mv, this.exitTypeDescriptor);",
                "+\t\t\tmv.visitJumpInsn(GOTO, skipIfNull);",
                "+\t\t\tmv.visitLabel(continueLabel);",
                "+\t\t}",
                "+\t\tif (descriptor != null && isStaticMethod) {",
                "+\t\t\t// Something on the stack when nothing is needed",
                "+\t\t\tmv.visitInsn(POP);",
                " \t\t}",
                "@@ -335,2 +351,10 @@ public class MethodReference extends SpelNodeImpl {",
                " \t\tcf.pushDescriptor(this.exitTypeDescriptor);",
                "+\t\tif (originalPrimitiveExitTypeDescriptor != null) {",
                "+\t\t\t// The output of the accessor will be a primitive but from the block above it might be null,",
                "+\t\t\t// so to have a 'common stack' element at skipIfNull target we need to box the primitive",
                "+\t\t\tCodeFlow.insertBoxIfNecessary(mv, originalPrimitiveExitTypeDescriptor);",
                "+\t\t}",
                "+\t\tif (skipIfNull != null) {",
                "+\t\t\tmv.visitLabel(skipIfNull);",
                "+\t\t}",
                " \t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java",
                "index cbc74a9459..3653e93b0c 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java",
                "@@ -24,2 +24,3 @@ import java.util.Map;",
                "+import org.springframework.asm.Label;",
                " import org.springframework.asm.MethodVisitor;",
                "@@ -53,2 +54,4 @@ public class PropertyOrFieldReference extends SpelNodeImpl {",
                "+\tprivate String originalPrimitiveExitTypeDescriptor = null;",
                "+",
                " \tprivate final String name;",
                "@@ -91,3 +94,3 @@ public class PropertyOrFieldReference extends SpelNodeImpl {",
                " \t\t\tCompilablePropertyAccessor accessor = (CompilablePropertyAccessor) accessorToUse;",
                "-\t\t\tthis.exitTypeDescriptor = CodeFlow.toDescriptor(accessor.getPropertyType());",
                "+\t\t\tsetExitTypeDescriptor(CodeFlow.toDescriptor(accessor.getPropertyType()));",
                " \t\t}",
                "@@ -340,4 +343,36 @@ public class PropertyOrFieldReference extends SpelNodeImpl {",
                " \t\t}",
                "+\t\tLabel skipIfNull = null;",
                "+\t\tif (nullSafe) {",
                "+\t\t\tmv.visitInsn(DUP);",
                "+\t\t\tskipIfNull = new Label();",
                "+\t\t\tLabel continueLabel = new Label();",
                "+\t\t\tmv.visitJumpInsn(IFNONNULL,continueLabel);",
                "+\t\t\tCodeFlow.insertCheckCast(mv, this.exitTypeDescriptor);",
                "+\t\t\tmv.visitJumpInsn(GOTO, skipIfNull);",
                "+\t\t\tmv.visitLabel(continueLabel);",
                "+\t\t}",
                " \t\t((CompilablePropertyAccessor) accessorToUse).generateCode(this.name, mv, cf);",
                " \t\tcf.pushDescriptor(this.exitTypeDescriptor);",
                "+\t\tif (originalPrimitiveExitTypeDescriptor != null) {",
                "+\t\t\t// The output of the accessor is a primitive but from the block above it might be null,",
                "+\t\t\t// so to have a common stack element type at skipIfNull target it is necessary",
                "+\t\t\t// to box the primitive",
                "+\t\t\tCodeFlow.insertBoxIfNecessary(mv, originalPrimitiveExitTypeDescriptor);",
                "+\t\t}",
                "+\t\tif (skipIfNull != null) {",
                "+\t\t\tmv.visitLabel(skipIfNull);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tvoid setExitTypeDescriptor(String descriptor) {",
                "+\t\t// If this property or field access would return a primitive - and yet",
                "+\t\t// it is also marked null safe - then the exit type descriptor must be",
                "+\t\t// promoted to the box type to allow a null value to be passed on",
                "+\t\tif (this.nullSafe && CodeFlow.isPrimitive(descriptor)) {",
                "+\t\t\tthis.originalPrimitiveExitTypeDescriptor = descriptor;",
                "+\t\t\tthis.exitTypeDescriptor = CodeFlow.toBoxedDescriptor(descriptor);",
                "+\t\t}",
                "+\t\telse {",
                "+\t\t\tthis.exitTypeDescriptor = descriptor;",
                "+\t\t}",
                " \t}",
                "@@ -370,4 +405,3 @@ public class PropertyOrFieldReference extends SpelNodeImpl {",
                " \t\t\tif (accessorToUse instanceof CompilablePropertyAccessor) {",
                "-\t\t\t\tthis.ref.exitTypeDescriptor =",
                "-\t\t\t\t\t\tCodeFlow.toDescriptor(((CompilablePropertyAccessor) accessorToUse).getPropertyType());",
                "+\t\t\t\tthis.ref.setExitTypeDescriptor(CodeFlow.toDescriptor(((CompilablePropertyAccessor) accessorToUse).getPropertyType()));",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/MethodReference.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/PropertyOrFieldReference.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: code",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: code",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "8a1f9f8aa37370868ea12be6e2feed8049f97e2b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429632034,
            "hunks": 1,
            "message": "Fix typo in exception message",
            "diff": [
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter.java b/spring-tx/src/main/java/org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter.java",
                "index e23a379aa4..7934a6eba1 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter.java",
                "@@ -85,3 +85,3 @@ class ApplicationListenerMethodTransactionalAdapter extends ApplicationListenerM",
                " \t\tif (annotation == null) {",
                "-\t\t\tthrow new IllegalStateException(\"No TransactionalEventListener annotation found ou '\" + method + \"'\");",
                "+\t\t\tthrow new IllegalStateException(\"No TransactionalEventListener annotation found on '\" + method + \"'\");",
                " \t\t}"
            ],
            "changed_files": [
                "spring-tx/src/main/java/org/springframework/transaction/event/ApplicationListenerMethodTransactionalAdapter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: message",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: application",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "444b9032be7fa73d12103cbf351f82751b08a95b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429516293,
            "hunks": 7,
            "message": "Apply DestinationResolver to listener container Previously, a custom `DestinationResolver` was not made available to the underlying `MessageListener`: if a reply needs to be sent, the default `DestinationResolver` was used. This commit ensures that if a custom `DestinationResolver` has been set, it is also configured accordingly for replies. Issue: SPR-12927",
            "diff": [
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java b/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java",
                "index 013146b95a..4855573d63 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java",
                "@@ -29,2 +29,3 @@ import org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter;",
                " import org.springframework.jms.support.converter.MessageConverter;",
                "+import org.springframework.jms.support.destination.DestinationResolver;",
                " import org.springframework.messaging.handler.annotation.SendTo;",
                "@@ -112,2 +113,6 @@ public class MethodJmsListenerEndpoint extends AbstractJmsListenerEndpoint {",
                " \t\t}",
                "+\t\tDestinationResolver destinationResolver = container.getDestinationResolver();",
                "+\t\tif (destinationResolver != null) {",
                "+\t\t\tmessageListener.setDestinationResolver(destinationResolver);",
                "+\t\t}",
                " \t\treturn messageListener;",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java b/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java",
                "index 920c9d4029..2457c53781 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java",
                "@@ -20,2 +20,3 @@ import org.springframework.context.SmartLifecycle;",
                " import org.springframework.jms.support.converter.MessageConverter;",
                "+import org.springframework.jms.support.destination.DestinationResolver;",
                "@@ -43,2 +44,8 @@ public interface MessageListenerContainer extends SmartLifecycle {",
                "+\t/**",
                "+\t * Return the {@link DestinationResolver} to use to resolve",
                "+\t * destinations by names.",
                "+\t */",
                "+\tDestinationResolver getDestinationResolver();",
                "+",
                " \t/**",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java",
                "index 774dd75e90..8af16f5991 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java",
                "@@ -193,2 +193,10 @@ public class JmsMessageEndpointManager extends GenericMessageEndpointManager",
                "+\t@Override",
                "+\tpublic DestinationResolver getDestinationResolver() {",
                "+\t\tif (this.activationSpecFactory instanceof StandardJmsActivationSpecFactory) {",
                "+\t\t\treturn ((StandardJmsActivationSpecFactory) this.activationSpecFactory).getDestinationResolver();",
                "+\t\t}",
                "+\t\treturn null;",
                "+\t}",
                "+",
                " \t@Override",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java",
                "index e90f2bdc45..4cc2bd97d7 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -92,2 +92,8 @@ public class StandardJmsActivationSpecFactory implements JmsActivationSpecFactor",
                "+\t/**",
                "+\t * Return the {@link DestinationResolver} to use for resolving destinations names.",
                "+\t */",
                "+\tpublic DestinationResolver getDestinationResolver() {",
                "+\t\treturn destinationResolver;",
                "+\t}"
            ],
            "changed_files": [
                "spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java",
                "spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java",
                "spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java",
                "spring-jms/src/main/java/org/springframework/jms/listener/endpoint/StandardJmsActivationSpecFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: message",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: endpoint, message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "e0d2dbd21da68e1e5bb6279934b8a2a7461aec51",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429731394,
            "hunks": 6,
            "message": "Polish Javadoc & TODOs in ApplicationListenerMethodAdapter Issue: SPR-12738",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "index 66c28340aa..2f09a5e730 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "@@ -47,4 +47,4 @@ import org.springframework.util.StringUtils;",
                "  *",
                "- * <p>Delegates to {@link #processEvent(ApplicationEvent)} to give a chance to",
                "- * sub-classes to deviate from the default. Unwraps the content of a",
                "+ * <p>Delegates to {@link #processEvent(ApplicationEvent)} to give sub-classes",
                "+ * a chance to deviate from the default. Unwraps the content of a",
                "  * {@link PayloadApplicationEvent} if necessary to allow method declaration",
                "@@ -54,2 +54,3 @@ import org.springframework.util.StringUtils;",
                "  * @author Stephane Nicoll",
                "+ * @author Sam Brannen",
                "  * @since 4.2",
                "@@ -126,2 +127,3 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                " \t\t\t\t&& event instanceof PayloadApplicationEvent) {",
                "+\t\t\t@SuppressWarnings(\"rawtypes\")",
                " \t\t\tObject payload = ((PayloadApplicationEvent) event).getPayload();",
                "@@ -242,5 +244,6 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                " \t/**",
                "-\t * Return the condition to use. Matches the {@code condition} attribute of the",
                "-\t * {@link EventListener} annotation or any matching attribute on a composed",
                "-\t * annotation.",
                "+\t * Return the condition to use.",
                "+\t * <p>Matches the {@code condition} attribute of the {@link EventListener}",
                "+\t * annotation or any matching attribute on a composed annotation that",
                "+\t * is meta-annotated with {@code @EventListener}.",
                " \t */",
                "@@ -248,3 +251,2 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                " \t\tif (this.condition == null) {",
                "-\t\t\t// TODO annotationAttributes are null with proxy",
                " \t\t\tAnnotationAttributes annotationAttributes = AnnotatedElementUtils",
                "@@ -255,3 +257,3 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                " \t\t\t}",
                "-\t\t\t// TODO Remove once AnnotatedElementUtils supports annotations on proxies",
                "+\t\t\t// TODO [SPR-12738] Remove once AnnotatedElementUtils finds annotated methods on interfaces (e.g., in dynamic proxies)",
                " \t\t\telse {"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: application",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: application",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "ad6bea1cda366bd24ce641ed2207529dfca8b382",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429829748,
            "hunks": 59,
            "message": "Support abstract, bridge, & interface methods in AnnotatedElementUtils This commit introduces support for finding annotations on abstract, bridge, and interface methods in AnnotatedElementUtils.  - Introduced dedicated findAnnotationAttributes() methods in    AnnotatedElementUtils that provide first-class support for    processing methods, class hierarchies, interfaces, bridge methods,    etc.  - Introduced find/get search algorithm dichotomy in    AnnotatedElementUtils which is visible in the public API as well as    in the internal implementation. This was necessary in order to    maintain backwards compatibility with the existing API (even though    it was undocumented).  - Reverted all recent changes made to the \"get semantics\" search    algorithm in AnnotatedElementUtils in order to ensure backwards    compatibility, and reverted recent changes to    JtaTransactionAnnotationParser and SpringTransactionAnnotationParser    accordingly.  - Documented internal AnnotatedElementUtils.Processor<T> interface.  - Enabled failing tests and introduced    findAnnotationAttributesFromBridgeMethod() test in    AnnotatedElementUtilsTests.  - Refactored ApplicationListenerMethodAdapter.getCondition() and    enabled failing test in TransactionalEventListenerTests.  - AnnotationUtils.isInterfaceWithAnnotatedMethods() is now package    private. Issue: SPR-12738, SPR-11514, SPR-11598",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "index 2f09a5e730..f63511bfe8 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "@@ -164,3 +164,2 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                "-",
                " \tprivate boolean shouldHandle(ApplicationEvent event, Object[] args) {",
                "@@ -252,3 +251,3 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                " \t\t\tAnnotationAttributes annotationAttributes = AnnotatedElementUtils",
                "-\t\t\t\t\t.getAnnotationAttributes(this.method, EventListener.class.getName());",
                "+\t\t\t\t\t.findAnnotationAttributes(this.method, EventListener.class);",
                " \t\t\tif (annotationAttributes != null) {",
                "@@ -257,7 +256,2 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                " \t\t\t}",
                "-\t\t\t// TODO [SPR-12738] Remove once AnnotatedElementUtils finds annotated methods on interfaces (e.g., in dynamic proxies)",
                "-\t\t\telse {",
                "-\t\t\t\tEventListener eventListener = getMethodAnnotation(EventListener.class);",
                "-\t\t\t\tthis.condition = (eventListener != null ? eventListener.condition() : \"\");",
                "-\t\t\t}",
                " \t\t}",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index 40f533bf21..6ed47b1ce9 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -20,2 +20,3 @@ import java.lang.annotation.Annotation;",
                " import java.lang.reflect.AnnotatedElement;",
                "+import java.lang.reflect.Method;",
                " import java.util.HashSet;",
                "@@ -25,2 +26,3 @@ import java.util.Set;",
                "+import org.springframework.core.BridgeMethodResolver;",
                " import org.springframework.util.LinkedMultiValueMap;",
                "@@ -29,4 +31,4 @@ import org.springframework.util.MultiValueMap;",
                " /**",
                "- * Utility class used to collect all annotation attributes, including those",
                "- * declared on meta-annotations.",
                "+ * Utility class used to collect and merge all annotation attributes on a",
                "+ * given {@link AnnotatedElement}, including those declared via meta-annotations.",
                "  *",
                "@@ -41,3 +43,3 @@ public class AnnotatedElementUtils {",
                " \t\tfinal Set<String> types = new LinkedHashSet<String>();",
                "-\t\tprocess(element, annotationType, true, false, new Processor<Object>() {",
                "+\t\tprocessWithGetSemantics(element, annotationType, new Processor<Object>() {",
                " \t\t\t@Override",
                "@@ -57,3 +59,3 @@ public class AnnotatedElementUtils {",
                " \tpublic static boolean hasMetaAnnotationTypes(AnnotatedElement element, String annotationType) {",
                "-\t\treturn Boolean.TRUE.equals(process(element, annotationType, true, false, new Processor<Boolean>() {",
                "+\t\treturn Boolean.TRUE.equals(processWithGetSemantics(element, annotationType, new Processor<Boolean>() {",
                " \t\t\t@Override",
                "@@ -72,3 +74,3 @@ public class AnnotatedElementUtils {",
                " \tpublic static boolean isAnnotated(AnnotatedElement element, String annotationType) {",
                "-\t\treturn Boolean.TRUE.equals(process(element, annotationType, true, false, new Processor<Boolean>() {",
                "+\t\treturn Boolean.TRUE.equals(processWithGetSemantics(element, annotationType, new Processor<Boolean>() {",
                " \t\t\t@Override",
                "@@ -84,3 +86,7 @@ public class AnnotatedElementUtils {",
                " \t/**",
                "-\t * Delegates to {@link #getAnnotationAttributes(AnnotatedElement, String, boolean, boolean)},",
                "+\t * <em>Get</em> annotation attributes of the specified {@code annotationType}",
                "+\t * in the annotation hierarchy of the supplied {@link AnnotatedElement},",
                "+\t * and merge the results into an {@link AnnotationAttributes} map.",
                "+\t *",
                "+\t * <p>Delegates to {@link #getAnnotationAttributes(AnnotatedElement, String, boolean, boolean)},",
                " \t * supplying {@code false} for {@code classValuesAsString} and {@code nestedAnnotationsAsMap}.",
                "@@ -89,2 +95,3 @@ public class AnnotatedElementUtils {",
                " \t * @param annotationType the annotation type to find",
                "+\t * @return the merged {@code AnnotationAttributes}",
                " \t * @see #getAnnotationAttributes(AnnotatedElement, String, boolean, boolean)",
                "@@ -96,4 +103,5 @@ public class AnnotatedElementUtils {",
                " \t/**",
                "-\t * Delegates to {@link #getAnnotationAttributes(AnnotatedElement, String, boolean, boolean, boolean, boolean)},",
                "-\t * supplying {@code true} for {@code searchInterfaces} and {@code false} for {@code searchClassHierarchy}.",
                "+\t * <em>Get</em> annotation attributes of the specified {@code annotationType}",
                "+\t * in the annotation hierarchy of the supplied {@link AnnotatedElement},",
                "+\t * and merge the results into an {@link AnnotationAttributes} map.",
                " \t *",
                "@@ -103,6 +111,6 @@ public class AnnotatedElementUtils {",
                " \t * Strings or to preserve them as Class references",
                "-\t * @param nestedAnnotationsAsMap whether to turn nested Annotation instances",
                "-\t * into {@link AnnotationAttributes} maps or to preserve them as Annotation",
                "-\t * instances",
                "-\t * @see #getAnnotationAttributes(AnnotatedElement, String, boolean, boolean, boolean, boolean)",
                "+\t * @param nestedAnnotationsAsMap whether to convert nested Annotation",
                "+\t * instances into {@link AnnotationAttributes} maps or to preserve them",
                "+\t * as Annotation instances",
                "+\t * @return the merged {@code AnnotationAttributes}",
                " \t */",
                "@@ -110,4 +118,40 @@ public class AnnotatedElementUtils {",
                " \t\t\tboolean classValuesAsString, boolean nestedAnnotationsAsMap) {",
                "-\t\treturn getAnnotationAttributes(element, annotationType, true, false, classValuesAsString,",
                "-\t\t\tnestedAnnotationsAsMap);",
                "+",
                "+\t\treturn processWithGetSemantics(element, annotationType, new MergeAnnotationAttributesProcessor(",
                "+\t\t\tclassValuesAsString, nestedAnnotationsAsMap));",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * <em>Find</em> annotation attributes of the specified {@code annotationType}",
                "+\t * in the annotation hierarchy of the supplied {@link AnnotatedElement},",
                "+\t * and merge the results into an {@link AnnotationAttributes} map.",
                "+\t *",
                "+\t * <p>Delegates to",
                "+\t * {@link #findAnnotationAttributes(AnnotatedElement, String, boolean, boolean, boolean, boolean, boolean, boolean)},",
                "+\t * supplying {@code true} for all {@code search*} flags.",
                "+\t *",
                "+\t * @param element the annotated element",
                "+\t * @param annotationType the annotation type to find",
                "+\t * @return the merged {@code AnnotationAttributes}",
                "+\t */",
                "+\tpublic static AnnotationAttributes findAnnotationAttributes(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType) {",
                "+\t\treturn findAnnotationAttributes(element, annotationType.getName(), true, true, true, true, false, false);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * <em>Find</em> annotation attributes of the specified {@code annotationType}",
                "+\t * in the annotation hierarchy of the supplied {@link AnnotatedElement},",
                "+\t * and merge the results into an {@link AnnotationAttributes} map.",
                "+\t *",
                "+\t * <p>Delegates to",
                "+\t * {@link #findAnnotationAttributes(AnnotatedElement, String, boolean, boolean, boolean, boolean, boolean, boolean)},",
                "+\t * supplying {@code true} for all {@code search*} flags.",
                "+\t *",
                "+\t * @param element the annotated element",
                "+\t * @param annotationType the annotation type to find",
                "+\t * @return the merged {@code AnnotationAttributes}",
                "+\t */",
                "+\tpublic static AnnotationAttributes findAnnotationAttributes(AnnotatedElement element, String annotationType) {",
                "+\t\treturn findAnnotationAttributes(element, annotationType, true, true, true, true, false, false);",
                " \t}",
                "@@ -115,4 +159,4 @@ public class AnnotatedElementUtils {",
                " \t/**",
                "-\t * Find annotation attributes of the specified {@code annotationType} in",
                "-\t * the annotation hierarchy of the supplied {@link AnnotatedElement},",
                "+\t * <em>Find</em> annotation attributes of the specified {@code annotationType}",
                "+\t * in the annotation hierarchy of the supplied {@link AnnotatedElement},",
                " \t * and merge the results into an {@link AnnotationAttributes} map.",
                "@@ -121,33 +165,24 @@ public class AnnotatedElementUtils {",
                " \t * @param annotationType the annotation type to find",
                "-\t * @param searchInterfaces whether or not to search on interfaces, if the",
                "+\t * @param searchOnInterfaces whether to search on interfaces, if the",
                " \t * annotated element is a class",
                "-\t * @param searchClassHierarchy whether or not to search the class hierarchy",
                "-\t * recursively, if the annotated element is a class",
                "+\t * @param searchOnSuperclasses whether to search on superclasses, if",
                "+\t * the annotated element is a class",
                "+\t * @param searchOnMethodsInInterfaces whether to search on methods in",
                "+\t * interfaces, if the annotated element is a method",
                "+\t * @param searchOnMethodsInSuperclasses whether to search on methods",
                "+\t * in superclasses, if the annotated element is a method",
                " \t * @param classValuesAsString whether to convert Class references into",
                " \t * Strings or to preserve them as Class references",
                "-\t * @param nestedAnnotationsAsMap whether to turn nested Annotation instances",
                "-\t * into {@link AnnotationAttributes} maps or to preserve them as Annotation",
                "-\t * instances",
                "+\t * @param nestedAnnotationsAsMap whether to convert nested Annotation",
                "+\t * instances into {@link AnnotationAttributes} maps or to preserve them",
                "+\t * as Annotation instances",
                "+\t * @return the merged {@code AnnotationAttributes}",
                " \t */",
                "-\tpublic static AnnotationAttributes getAnnotationAttributes(AnnotatedElement element, String annotationType,",
                "-\t\t\tboolean searchInterfaces, boolean searchClassHierarchy, final boolean classValuesAsString,",
                "-\t\t\tfinal boolean nestedAnnotationsAsMap) {",
                "+\tpublic static AnnotationAttributes findAnnotationAttributes(AnnotatedElement element, String annotationType,",
                "+\t\t\tboolean searchOnInterfaces, boolean searchOnSuperclasses, boolean searchOnMethodsInInterfaces,",
                "+\t\t\tboolean searchOnMethodsInSuperclasses, boolean classValuesAsString, boolean nestedAnnotationsAsMap) {",
                "-\t\treturn process(element, annotationType, searchInterfaces, searchClassHierarchy, new Processor<AnnotationAttributes>() {",
                "-\t\t\t@Override",
                "-\t\t\tpublic AnnotationAttributes process(Annotation annotation, int metaDepth) {",
                "-\t\t\t\treturn AnnotationUtils.getAnnotationAttributes(annotation, classValuesAsString, nestedAnnotationsAsMap);",
                "-\t\t\t}",
                "-\t\t\t@Override",
                "-\t\t\tpublic void postProcess(Annotation annotation, AnnotationAttributes result) {",
                "-\t\t\t\tfor (String key : result.keySet()) {",
                "-\t\t\t\t\tif (!AnnotationUtils.VALUE.equals(key)) {",
                "-\t\t\t\t\t\tObject value = AnnotationUtils.getValue(annotation, key);",
                "-\t\t\t\t\t\tif (value != null) {",
                "-\t\t\t\t\t\t\tresult.put(key, AnnotationUtils.adaptValue(value, classValuesAsString, nestedAnnotationsAsMap));",
                "-\t\t\t\t\t\t}",
                "-\t\t\t\t\t}",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t});",
                "+\t\treturn processWithFindSemantics(element, annotationType, searchOnInterfaces, searchOnSuperclasses,",
                "+\t\t\tsearchOnMethodsInInterfaces, searchOnMethodsInSuperclasses, new MergeAnnotationAttributesProcessor(",
                "+\t\t\t\tclassValuesAsString, nestedAnnotationsAsMap));",
                " \t}",
                "@@ -162,3 +197,3 @@ public class AnnotatedElementUtils {",
                " \t\tfinal MultiValueMap<String, Object> attributes = new LinkedMultiValueMap<String, Object>();",
                "-\t\tprocess(element, annotationType, true, false, new Processor<Void>() {",
                "+\t\tprocessWithGetSemantics(element, annotationType, new Processor<Void>() {",
                " \t\t\t@Override",
                "@@ -192,6 +227,80 @@ public class AnnotatedElementUtils {",
                " \t *",
                "-\t * <p>If the {@code searchClassHierarchy} flag is {@code true} and the sought",
                "-\t * annotation is neither <em>directly present</em> on the given element nor",
                "-\t * present on the given element as a meta-annotation, then the algorithm will",
                "-\t * recursively search through the class hierarchy of the given element.",
                "+\t * @param element the annotated element",
                "+\t * @param annotationType the annotation type to find",
                "+\t * @param processor the processor to delegate to",
                "+\t * @return the result of the processor",
                "+\t */",
                "+\tprivate static <T> T processWithGetSemantics(AnnotatedElement element, String annotationType, Processor<T> processor) {",
                "+\t\ttry {",
                "+\t\t\treturn processWithGetSemantics(element, annotationType, processor, new HashSet<AnnotatedElement>(), 0);",
                "+\t\t}",
                "+\t\tcatch (Throwable ex) {",
                "+\t\t\tthrow new IllegalStateException(\"Failed to introspect annotations: \" + element, ex);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Perform the search algorithm for the {@link #processWithGetSemantics}",
                "+\t * method, avoiding endless recursion by tracking which annotated elements",
                "+\t * have already been <em>visited</em>.",
                "+\t *",
                "+\t * <p>The {@code metaDepth} parameter represents the depth of the annotation",
                "+\t * relative to the initial element. For example, an annotation that is",
                "+\t * <em>present</em> on the element will have a depth of 0; a meta-annotation",
                "+\t * will have a depth of 1; and a meta-meta-annotation will have a depth of 2.",
                "+\t *",
                "+\t * @param element the annotated element",
                "+\t * @param annotationType the annotation type to find",
                "+\t * @param processor the processor to delegate to",
                "+\t * @param visited the set of annotated elements that have already been visited",
                "+\t * @param metaDepth the depth of the annotation relative to the initial element",
                "+\t * @return the result of the processor",
                "+\t */",
                "+\tprivate static <T> T processWithGetSemantics(AnnotatedElement element, String annotationType,",
                "+\t\t\tProcessor<T> processor, Set<AnnotatedElement> visited, int metaDepth) {",
                "+",
                "+\t\tif (visited.add(element)) {",
                "+\t\t\ttry {",
                "+\t\t\t\t// Local annotations: declared OR inherited",
                "+\t\t\t\tAnnotation[] annotations = element.getAnnotations();",
                "+",
                "+\t\t\t\t// Search in local annotations",
                "+\t\t\t\tfor (Annotation annotation : annotations) {",
                "+\t\t\t\t\tif (annotation.annotationType().getName().equals(annotationType) || metaDepth > 0) {",
                "+\t\t\t\t\t\tT result = processor.process(annotation, metaDepth);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t\tresult = processWithGetSemantics(annotation.annotationType(), annotationType, processor,",
                "+\t\t\t\t\t\t\tvisited, metaDepth + 1);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\tprocessor.postProcess(annotation, result);",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+",
                "+\t\t\t\t// Search in meta annotations on local annotations",
                "+\t\t\t\tfor (Annotation annotation : annotations) {",
                "+\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation)) {",
                "+\t\t\t\t\t\tT result = processWithGetSemantics(annotation.annotationType(), annotationType, processor,",
                "+\t\t\t\t\t\t\tvisited, metaDepth);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\tprocessor.postProcess(annotation, result);",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+",
                "+\t\t\t}",
                "+\t\t\tcatch (Exception ex) {",
                "+\t\t\t\tAnnotationUtils.logIntrospectionFailure(element, ex);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn null;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Process all annotations of the specified {@code annotationType} and",
                "+\t * recursively all meta-annotations on the specified {@code element}.",
                " \t *",
                "@@ -199,6 +308,10 @@ public class AnnotatedElementUtils {",
                " \t * @param annotationType the annotation type to find",
                "-\t * @param searchInterfaces whether or not to search on interfaces, if the",
                "+\t * @param searchOnInterfaces whether to search on interfaces, if the",
                " \t * annotated element is a class",
                "-\t * @param searchClassHierarchy whether or not to search the class hierarchy",
                "-\t * recursively, if the annotated element is a class",
                "+\t * @param searchOnSuperclasses whether to search on superclasses, if",
                "+\t * the annotated element is a class",
                "+\t * @param searchOnMethodsInInterfaces whether to search on methods in",
                "+\t * interfaces, if the annotated element is a method",
                "+\t * @param searchOnMethodsInSuperclasses whether to search on methods",
                "+\t * in superclasses, if the annotated element is a method",
                " \t * @param processor the processor to delegate to",
                "@@ -206,8 +319,9 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T process(AnnotatedElement element, String annotationType, boolean searchInterfaces,",
                "-\t\t\tboolean searchClassHierarchy, Processor<T> processor) {",
                "+\tprivate static <T> T processWithFindSemantics(AnnotatedElement element, String annotationType,",
                "+\t\t\tboolean searchOnInterfaces, boolean searchOnSuperclasses, boolean searchOnMethodsInInterfaces,",
                "+\t\t\tboolean searchOnMethodsInSuperclasses, Processor<T> processor) {",
                " \t\ttry {",
                "-\t\t\treturn doProcess(element, annotationType, searchInterfaces, searchClassHierarchy, processor,",
                "-\t\t\t\t\tnew HashSet<AnnotatedElement>(), 0);",
                "+\t\t\treturn processWithFindSemantics(element, annotationType, searchOnInterfaces, searchOnSuperclasses,",
                "+\t\t\t\tsearchOnMethodsInInterfaces, searchOnMethodsInSuperclasses, processor, new HashSet<AnnotatedElement>(), 0);",
                " \t\t}",
                "@@ -230,6 +344,10 @@ public class AnnotatedElementUtils {",
                " \t * @param annotationType the annotation type to find",
                "-\t * @param searchInterfaces whether or not to search on interfaces, if the",
                "+\t * @param searchOnInterfaces whether to search on interfaces, if the",
                " \t * annotated element is a class",
                "-\t * @param searchClassHierarchy whether or not to search the class hierarchy",
                "-\t * recursively, if the annotated element is a class",
                "+\t * @param searchOnSuperclasses whether to search on superclasses, if",
                "+\t * the annotated element is a class",
                "+\t * @param searchOnMethodsInInterfaces whether to search on methods in",
                "+\t * interfaces, if the annotated element is a method",
                "+\t * @param searchOnMethodsInSuperclasses whether to search on methods",
                "+\t * in superclasses, if the annotated element is a method",
                " \t * @param processor the processor to delegate to",
                "@@ -239,4 +357,5 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T doProcess(AnnotatedElement element, String annotationType, boolean searchInterfaces,",
                "-\t\t\tboolean searchClassHierarchy, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) {",
                "+\tprivate static <T> T processWithFindSemantics(AnnotatedElement element, String annotationType,",
                "+\t\t\tboolean searchOnInterfaces, boolean searchOnSuperclasses, boolean searchOnMethodsInInterfaces,",
                "+\t\t\tboolean searchOnMethodsInSuperclasses, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) {",
                "@@ -246,4 +365,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t// Local annotations: declared or (declared + inherited).",
                "-\t\t\t\tAnnotation[] annotations =",
                "-\t\t\t\t\t\t(searchClassHierarchy ? element.getDeclaredAnnotations() : element.getAnnotations());",
                "+\t\t\t\tAnnotation[] annotations = (searchOnSuperclasses ? element.getDeclaredAnnotations()",
                "+\t\t\t\t\t\t: element.getAnnotations());",
                "@@ -256,4 +375,5 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\tresult = doProcess(annotation.annotationType(), annotationType, searchInterfaces,",
                "-\t\t\t\t\t\t\tsearchClassHierarchy, processor, visited, metaDepth + 1);",
                "+\t\t\t\t\t\tresult = processWithFindSemantics(annotation.annotationType(), annotationType,",
                "+\t\t\t\t\t\t\tsearchOnInterfaces, searchOnSuperclasses, searchOnMethodsInInterfaces,",
                "+\t\t\t\t\t\t\tsearchOnMethodsInSuperclasses, processor, visited, metaDepth + 1);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -268,4 +388,5 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation)) {",
                "-\t\t\t\t\t\tT result = doProcess(annotation.annotationType(), annotationType, searchInterfaces,",
                "-\t\t\t\t\t\t\tsearchClassHierarchy, processor, visited, metaDepth);",
                "+\t\t\t\t\t\tT result = processWithFindSemantics(annotation.annotationType(), annotationType,",
                "+\t\t\t\t\t\t\tsearchOnInterfaces, searchOnSuperclasses, searchOnMethodsInInterfaces,",
                "+\t\t\t\t\t\t\tsearchOnMethodsInSuperclasses, processor, visited, metaDepth);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -277,8 +398,20 @@ public class AnnotatedElementUtils {",
                "-\t\t\t\t// Search on interfaces",
                "-\t\t\t\tif (searchInterfaces && element instanceof Class) {",
                "-\t\t\t\t\tClass<?> clazz = (Class<?>) element;",
                "-\t\t\t\t\tfor (Class<?> ifc : clazz.getInterfaces()) {",
                "-\t\t\t\t\t\tT result = doProcess(ifc, annotationType, searchInterfaces, searchClassHierarchy, processor,",
                "-\t\t\t\t\t\t\tvisited, metaDepth);",
                "+\t\t\t\tif (element instanceof Method) {",
                "+\t\t\t\t\tMethod method = (Method) element;",
                "+",
                "+\t\t\t\t\t// Search on possibly bridged method",
                "+\t\t\t\t\tMethod resolvedMethod = BridgeMethodResolver.findBridgedMethod(method);",
                "+\t\t\t\t\tT result = processWithFindSemantics(resolvedMethod, annotationType, searchOnInterfaces,",
                "+\t\t\t\t\t\tsearchOnSuperclasses, searchOnMethodsInInterfaces, searchOnMethodsInSuperclasses, processor,",
                "+\t\t\t\t\t\tvisited, metaDepth);",
                "+\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t}",
                "+",
                "+\t\t\t\t\t// Search on methods in interfaces declared locally",
                "+\t\t\t\t\tif (searchOnMethodsInInterfaces) {",
                "+\t\t\t\t\t\tClass<?>[] ifcs = method.getDeclaringClass().getInterfaces();",
                "+\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, searchOnInterfaces, searchOnSuperclasses,",
                "+\t\t\t\t\t\t\tsearchOnMethodsInInterfaces, searchOnMethodsInSuperclasses, processor, visited, metaDepth,",
                "+\t\t\t\t\t\t\tifcs);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -287,12 +420,67 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t}",
                "+",
                "+\t\t\t\t\t// Search on methods in class hierarchy and interface hierarchy",
                "+\t\t\t\t\tif (searchOnMethodsInSuperclasses) {",
                "+\t\t\t\t\t\tClass<?> clazz = method.getDeclaringClass();",
                "+\t\t\t\t\t\twhile (true) {",
                "+\t\t\t\t\t\t\tclazz = clazz.getSuperclass();",
                "+\t\t\t\t\t\t\tif (clazz == null || clazz.equals(Object.class)) {",
                "+\t\t\t\t\t\t\t\tbreak;",
                "+\t\t\t\t\t\t\t}",
                "+",
                "+\t\t\t\t\t\t\ttry {",
                "+\t\t\t\t\t\t\t\t// TODO [SPR-12738] Resolve equivalent parameterized",
                "+\t\t\t\t\t\t\t\t// method (i.e., bridged method) in superclass.",
                "+\t\t\t\t\t\t\t\tMethod equivalentMethod = clazz.getDeclaredMethod(method.getName(),",
                "+\t\t\t\t\t\t\t\t\tmethod.getParameterTypes());",
                "+\t\t\t\t\t\t\t\tMethod resolvedEquivalentMethod = BridgeMethodResolver.findBridgedMethod(equivalentMethod);",
                "+\t\t\t\t\t\t\t\tresult = processWithFindSemantics(resolvedEquivalentMethod, annotationType,",
                "+\t\t\t\t\t\t\t\t\tsearchOnInterfaces, searchOnSuperclasses, searchOnMethodsInInterfaces,",
                "+\t\t\t\t\t\t\t\t\tsearchOnMethodsInSuperclasses, processor, visited, metaDepth);",
                "+\t\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\tcatch (NoSuchMethodException ex) {",
                "+\t\t\t\t\t\t\t\t// No equivalent method found",
                "+\t\t\t\t\t\t\t}",
                "+",
                "+\t\t\t\t\t\t\t// Search on interfaces declared on superclass",
                "+\t\t\t\t\t\t\tif (searchOnMethodsInInterfaces) {",
                "+\t\t\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, searchOnInterfaces,",
                "+\t\t\t\t\t\t\t\t\tsearchOnSuperclasses, searchOnMethodsInInterfaces, searchOnMethodsInSuperclasses,",
                "+\t\t\t\t\t\t\t\t\tprocessor, visited, metaDepth, clazz.getInterfaces());",
                "+\t\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                " \t\t\t\t}",
                "-\t\t\t\t// Search on superclass",
                "-\t\t\t\tif (searchClassHierarchy && element instanceof Class) {",
                "-\t\t\t\t\tClass<?> superclass = ((Class<?>) element).getSuperclass();",
                "-\t\t\t\t\tif (superclass != null && !superclass.equals(Object.class)) {",
                "-\t\t\t\t\t\tT result = doProcess(superclass, annotationType, searchInterfaces, searchClassHierarchy,",
                "-\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "-\t\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\tif (element instanceof Class) {",
                "+\t\t\t\t\tClass<?> clazz = (Class<?>) element;",
                "+",
                "+\t\t\t\t\t// Search on interfaces",
                "+\t\t\t\t\tif (searchOnInterfaces) {",
                "+\t\t\t\t\t\tfor (Class<?> ifc : clazz.getInterfaces()) {",
                "+\t\t\t\t\t\t\tT result = processWithFindSemantics(ifc, annotationType, searchOnInterfaces,",
                "+\t\t\t\t\t\t\t\tsearchOnSuperclasses, searchOnMethodsInInterfaces, searchOnMethodsInSuperclasses,",
                "+\t\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "+\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+",
                "+\t\t\t\t\t// Search on superclass",
                "+\t\t\t\t\tif (searchOnSuperclasses) {",
                "+\t\t\t\t\t\tClass<?> superclass = clazz.getSuperclass();",
                "+\t\t\t\t\t\tif (superclass != null && !superclass.equals(Object.class)) {",
                "+\t\t\t\t\t\t\tT result = processWithFindSemantics(superclass, annotationType, searchOnInterfaces,",
                "+\t\t\t\t\t\t\t\tsearchOnSuperclasses, searchOnMethodsInInterfaces, searchOnMethodsInSuperclasses,",
                "+\t\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "+\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t}",
                "@@ -308,11 +496,42 @@ public class AnnotatedElementUtils {",
                "+\tprivate static <T> T searchOnInterfaces(Method method, String annotationType, boolean searchOnInterfaces,",
                "+\t\t\tboolean searchOnSuperclasses, boolean searchOnMethodsInInterfaces, boolean searchOnMethodsInSuperclasses,",
                "+\t\t\tProcessor<T> processor, Set<AnnotatedElement> visited, int metaDepth, Class<?>[] ifcs) {",
                "+",
                "+\t\tfor (Class<?> iface : ifcs) {",
                "+\t\t\tif (AnnotationUtils.isInterfaceWithAnnotatedMethods(iface)) {",
                "+\t\t\t\ttry {",
                "+\t\t\t\t\tMethod equivalentMethod = iface.getMethod(method.getName(), method.getParameterTypes());",
                "+\t\t\t\t\tT result = processWithFindSemantics(equivalentMethod, annotationType, searchOnInterfaces,",
                "+\t\t\t\t\t\tsearchOnSuperclasses, searchOnMethodsInInterfaces, searchOnMethodsInSuperclasses, processor,",
                "+\t\t\t\t\t\tvisited, metaDepth);",
                "+",
                "+\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t\tcatch (NoSuchMethodException ex) {",
                "+\t\t\t\t\t// Skip this interface - it doesn't have the method...",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+",
                "+\t\treturn null;",
                "+\t}",
                "+",
                " \t/**",
                "-\t * Callback interface used to process an annotation.",
                "+\t * Callback interface that is used to process a target annotation that",
                "+\t * was found as the result of a search and to post-process the result as",
                "+\t * the search algorithm goes back down the annotation hierarchy from",
                "+\t * the target annotation to the initial {@link AnnotatedElement}.",
                "+\t *",
                " \t * @param <T> the result type",
                " \t */",
                "-\tprivate interface Processor<T> {",
                "+\tprivate static interface Processor<T> {",
                " \t\t/**",
                "-\t\t * Called to process the annotation.",
                "+\t\t * Process the actual target annotation once it has been found by",
                "+\t\t * the search algorithm.",
                "+\t\t *",
                " \t\t * <p>The {@code metaDepth} parameter represents the depth of the",
                "@@ -322,2 +541,3 @@ public class AnnotatedElementUtils {",
                " \t\t * will have a depth of 2.",
                "+\t\t *",
                " \t\t * @param annotation the annotation to process",
                "@@ -328,2 +548,13 @@ public class AnnotatedElementUtils {",
                "+\t\t/**",
                "+\t\t * Post-process the result returned by the {@link #process} method.",
                "+\t\t *",
                "+\t\t * <p>The {@code annotation} supplied to this method is an annotation",
                "+\t\t * that is present in the annotation hierarchy, above the initial",
                "+\t\t * {@link AnnotatedElement} but below the target annotation found by",
                "+\t\t * the search algorithm.",
                "+\t\t *",
                "+\t\t * @param annotation the annotation to post-process",
                "+\t\t * @param result the result to post-process",
                "+\t\t */",
                " \t\tvoid postProcess(Annotation annotation, T result);",
                "@@ -331,2 +562,31 @@ public class AnnotatedElementUtils {",
                "+\tprivate static class MergeAnnotationAttributesProcessor implements Processor<AnnotationAttributes> {",
                "+",
                "+\t\tprivate final boolean classValuesAsString;",
                "+\t\tprivate final boolean nestedAnnotationsAsMap;",
                "+",
                "+",
                "+\t\tMergeAnnotationAttributesProcessor(boolean classValuesAsString, boolean nestedAnnotationsAsMap) {",
                "+\t\t\tthis.classValuesAsString = classValuesAsString;",
                "+\t\t\tthis.nestedAnnotationsAsMap = nestedAnnotationsAsMap;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic AnnotationAttributes process(Annotation annotation, int metaDepth) {",
                "+\t\t\treturn AnnotationUtils.getAnnotationAttributes(annotation, classValuesAsString, nestedAnnotationsAsMap);",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic void postProcess(Annotation annotation, AnnotationAttributes result) {",
                "+\t\t\tfor (String key : result.keySet()) {",
                "+\t\t\t\tif (!AnnotationUtils.VALUE.equals(key)) {",
                "+\t\t\t\t\tObject value = AnnotationUtils.getValue(annotation, key);",
                "+\t\t\t\t\tif (value != null) {",
                "+\t\t\t\t\t\tresult.put(key, AnnotationUtils.adaptValue(value, classValuesAsString, nestedAnnotationsAsMap));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 439cb9d124..c5969b9bac 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -102,5 +102,5 @@ public abstract class AnnotationUtils {",
                " \t@SuppressWarnings(\"unchecked\")",
                "-\tpublic static <T extends Annotation> T getAnnotation(Annotation ann, Class<T> annotationType) {",
                "+\tpublic static <A extends Annotation> A getAnnotation(Annotation ann, Class<A> annotationType) {",
                " \t\tif (annotationType.isInstance(ann)) {",
                "-\t\t\treturn (T) ann;",
                "+\t\t\treturn (A) ann;",
                " \t\t}",
                "@@ -128,5 +128,5 @@ public abstract class AnnotationUtils {",
                " \t */",
                "-\tpublic static <T extends Annotation> T getAnnotation(AnnotatedElement annotatedElement, Class<T> annotationType) {",
                "+\tpublic static <A extends Annotation> A getAnnotation(AnnotatedElement annotatedElement, Class<A> annotationType) {",
                " \t\ttry {",
                "-\t\t\tT ann = annotatedElement.getAnnotation(annotationType);",
                "+\t\t\tA ann = annotatedElement.getAnnotation(annotationType);",
                " \t\t\tif (ann == null) {",
                "@@ -296,3 +296,3 @@ public abstract class AnnotationUtils {",
                " \t@SuppressWarnings(\"unchecked\")",
                "-\tprivate static <T extends Annotation> T findAnnotation(AnnotatedElement annotatedElement, Class<T> annotationType, Set<Annotation> visited) {",
                "+\tprivate static <A extends Annotation> A findAnnotation(AnnotatedElement annotatedElement, Class<A> annotationType, Set<Annotation> visited) {",
                " \t\tAssert.notNull(annotatedElement, \"AnnotatedElement must not be null\");",
                "@@ -302,3 +302,3 @@ public abstract class AnnotationUtils {",
                " \t\t\t\tif (ann.annotationType().equals(annotationType)) {",
                "-\t\t\t\t\treturn (T) ann;",
                "+\t\t\t\t\treturn (A) ann;",
                " \t\t\t\t}",
                "@@ -307,3 +307,3 @@ public abstract class AnnotationUtils {",
                " \t\t\t\tif (!isInJavaLangAnnotationPackage(ann) && visited.add(ann)) {",
                "-\t\t\t\t\tT annotation = findAnnotation((AnnotatedElement) ann.annotationType(), annotationType, visited);",
                "+\t\t\t\t\tA annotation = findAnnotation((AnnotatedElement) ann.annotationType(), annotationType, visited);",
                " \t\t\t\t\tif (annotation != null) {",
                "@@ -394,8 +394,8 @@ public abstract class AnnotationUtils {",
                "-\tprivate static boolean isInterfaceWithAnnotatedMethods(Class<?> iface) {",
                "+\tstatic boolean isInterfaceWithAnnotatedMethods(Class<?> iface) {",
                " \t\tBoolean flag = annotatedInterfaceCache.get(iface);",
                " \t\tif (flag != null) {",
                "-\t\t\treturn flag;",
                "+\t\t\treturn flag.booleanValue();",
                " \t\t}",
                "-\t\tboolean found = false;",
                "+\t\tBoolean found = Boolean.FALSE;",
                " \t\tfor (Method ifcMethod : iface.getMethods()) {",
                "@@ -403,3 +403,3 @@ public abstract class AnnotationUtils {",
                " \t\t\t\tif (ifcMethod.getAnnotations().length > 0) {",
                "-\t\t\t\t\tfound = true;",
                "+\t\t\t\t\tfound = Boolean.TRUE;",
                " \t\t\t\t\tbreak;",
                "@@ -413,3 +413,3 @@ public abstract class AnnotationUtils {",
                " \t\tannotatedInterfaceCache.put(iface, found);",
                "-\t\treturn found;",
                "+\t\treturn found.booleanValue();",
                " \t}",
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/annotation/JtaTransactionAnnotationParser.java b/spring-tx/src/main/java/org/springframework/transaction/annotation/JtaTransactionAnnotationParser.java",
                "index a175bf97db..8b05331450 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/annotation/JtaTransactionAnnotationParser.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/annotation/JtaTransactionAnnotationParser.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2013 the original author or authors.",
                "  *",
                "@@ -34,3 +34,2 @@ import org.springframework.transaction.interceptor.TransactionAttribute;",
                "  * @author Juergen Hoeller",
                "- * @author Sam Brannen",
                "  * @since 4.0",
                "@@ -42,4 +41,3 @@ public class JtaTransactionAnnotationParser implements TransactionAnnotationPars",
                " \tpublic TransactionAttribute parseTransactionAnnotation(AnnotatedElement ae) {",
                "-\t\tAnnotationAttributes ann = AnnotatedElementUtils.getAnnotationAttributes(ae,",
                "-\t\t\tjavax.transaction.Transactional.class.getName(), false, false, false, false);",
                "+\t\tAnnotationAttributes ann = AnnotatedElementUtils.getAnnotationAttributes(ae, javax.transaction.Transactional.class.getName());",
                " \t\tif (ann != null) {",
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.java b/spring-tx/src/main/java/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.java",
                "index 4cc2aa2ded..60ae9b8fda 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2013 the original author or authors.",
                "  *",
                "@@ -34,3 +34,2 @@ import org.springframework.transaction.interceptor.TransactionAttribute;",
                "  * @author Juergen Hoeller",
                "- * @author Sam Brannen",
                "  * @since 2.5",
                "@@ -42,4 +41,3 @@ public class SpringTransactionAnnotationParser implements TransactionAnnotationP",
                " \tpublic TransactionAttribute parseTransactionAnnotation(AnnotatedElement ae) {",
                "-\t\tAnnotationAttributes ann = AnnotatedElementUtils.getAnnotationAttributes(ae, Transactional.class.getName(),",
                "-\t\t\tfalse, false, false, false);",
                "+\t\tAnnotationAttributes ann = AnnotatedElementUtils.getAnnotationAttributes(ae, Transactional.class.getName());",
                " \t\tif (ann != null) {"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "spring-tx/src/main/java/org/springframework/transaction/annotation/JtaTransactionAnnotationParser.java",
                "spring-tx/src/main/java/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: application",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: application",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "86733a98da91c57d2ac28365a82da3e3fbd15fb1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429664063,
            "hunks": 5,
            "message": "Polish ApplicationListenerMethodAdapter",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "index 83f1f0fb32..66c28340aa 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "@@ -48,3 +48,3 @@ import org.springframework.util.StringUtils;",
                "  * <p>Delegates to {@link #processEvent(ApplicationEvent)} to give a chance to",
                "- * sub-classes to deviate from the default. Unwrap the content of a",
                "+ * sub-classes to deviate from the default. Unwraps the content of a",
                "  * {@link PayloadApplicationEvent} if necessary to allow method declaration",
                "@@ -243,3 +243,4 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                " \t * Return the condition to use. Matches the {@code condition} attribute of the",
                "-\t * {@link EventListener} annotation or any matching attribute on a meta-annotation.",
                "+\t * {@link EventListener} annotation or any matching attribute on a composed",
                "+\t * annotation.",
                " \t */",
                "@@ -247,2 +248,3 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                " \t\tif (this.condition == null) {",
                "+\t\t\t// TODO annotationAttributes are null with proxy",
                " \t\t\tAnnotationAttributes annotationAttributes = AnnotatedElementUtils",
                "@@ -253,5 +255,6 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                " \t\t\t}",
                "-\t\t\telse { // TODO annotationAttributes null with proxy",
                "+\t\t\t// TODO Remove once AnnotatedElementUtils supports annotations on proxies",
                "+\t\t\telse {",
                " \t\t\t\tEventListener eventListener = getMethodAnnotation(EventListener.class);",
                "-\t\t\t\tthis.condition = (eventListener != null ? eventListener.condition() : null);",
                "+\t\t\t\tthis.condition = (eventListener != null ? eventListener.condition() : \"\");",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: application",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: application",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "30583a62cfeef79ccbd18daf9c6045d89688e22b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521231422,
            "hunks": 4,
            "message": "Fix Class isAssignableFrom checks for Resource conversion Issue: SPR-16606",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/codec/ResourceDecoder.java b/spring-core/src/main/java/org/springframework/core/codec/ResourceDecoder.java",
                "index e46839085a..c158204c1b 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/codec/ResourceDecoder.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/codec/ResourceDecoder.java",
                "@@ -53,5 +53,3 @@ public class ResourceDecoder extends AbstractDataBufferDecoder<Resource> {",
                " \t\tClass<?> clazz = elementType.getRawClass();",
                "-\t\treturn (clazz != null &&",
                "-\t\t\t\t(InputStreamResource.class == clazz || clazz.isAssignableFrom(ByteArrayResource.class)) &&",
                "-\t\t\t\tsuper.canDecode(elementType, mimeType));",
                "+\t\treturn clazz != null && Resource.class.isAssignableFrom(clazz) && super.canDecode(elementType, mimeType);",
                " \t}",
                "@@ -79,3 +77,3 @@ public class ResourceDecoder extends AbstractDataBufferDecoder<Resource> {",
                " \t\t}",
                "-\t\telse if (clazz.isAssignableFrom(ByteArrayResource.class)) {",
                "+\t\telse if (Resource.class.isAssignableFrom(clazz)) {",
                " \t\t\treturn new ByteArrayResource(bytes);",
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/ResourceHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/ResourceHttpMessageConverter.java",
                "index 332030472c..0f84846454 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/ResourceHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/ResourceHttpMessageConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -88,3 +88,3 @@ public class ResourceHttpMessageConverter extends AbstractHttpMessageConverter<R",
                " \t\t}",
                "-\t\telse if (clazz.isAssignableFrom(ByteArrayResource.class)) {",
                "+\t\telse if (Resource.class == clazz || ByteArrayResource.class.isAssignableFrom(clazz)) {",
                " \t\t\tbyte[] body = StreamUtils.copyToByteArray(inputMessage.getBody());"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/codec/ResourceDecoder.java",
                "spring-web/src/main/java/org/springframework/http/converter/ResourceHttpMessageConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: code, message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "9ed0a56d840886e4d6d9d90a4e21066c789f128e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429200975,
            "hunks": 11,
            "message": "AbstractApplicationContext collects early ApplicationEvents and publishes them once the multicaster is available Issue: SPR-12902",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/ApplicationEventPublisher.java b/spring-context/src/main/java/org/springframework/context/ApplicationEventPublisher.java",
                "index 025257fb5d..d21653b222 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/ApplicationEventPublisher.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/ApplicationEventPublisher.java",
                "@@ -20,3 +20,3 @@ package org.springframework.context;",
                "  * Interface that encapsulates event publication functionality.",
                "- * Serves as super-interface for ApplicationContext.",
                "+ * Serves as super-interface for {@link ApplicationContext}.",
                "  *",
                "@@ -44,5 +44,6 @@ public interface ApplicationEventPublisher {",
                " \t * application of an event.",
                "-\t * <p>If the specified {@code event} is not an {@link ApplicationEvent}, it",
                "-\t * is wrapped in a {@code GenericApplicationEvent}.",
                "+\t * <p>If the specified {@code event} is not an {@link ApplicationEvent},",
                "+\t * it is wrapped in a {@link PayloadApplicationEvent}.",
                " \t * @param event the event to publish",
                "+\t * @since 4.2",
                " \t * @see PayloadApplicationEvent",
                "diff --git a/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java",
                "index 351563444e..ed5f4c0b5b 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java",
                "@@ -167,2 +167,5 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                "+\t/** Environment used by this context */",
                "+\tprivate ConfigurableEnvironment environment;",
                "+",
                " \t/** BeanFactoryPostProcessors to apply on refresh */",
                "@@ -199,6 +202,6 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                " \t/** Statically specified listeners */",
                "-\tprivate Set<ApplicationListener<?>> applicationListeners = new LinkedHashSet<ApplicationListener<?>>();",
                "+\tprivate final Set<ApplicationListener<?>> applicationListeners = new LinkedHashSet<ApplicationListener<?>>();",
                "-\t/** Environment used by this context; initialized by {@link #createEnvironment()} */",
                "-\tprivate ConfigurableEnvironment environment;",
                "+\t/** ApplicationEvents published early */",
                "+\tprivate Set<ApplicationEvent> earlyApplicationEvents;",
                "@@ -342,3 +345,5 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                " \t\t}",
                "-\t\tfinal ApplicationEvent applicationEvent;",
                "+",
                "+\t\t// Decorate event as an ApplicationEvent if necessary",
                "+\t\tApplicationEvent applicationEvent;",
                " \t\tif (event instanceof ApplicationEvent) {",
                "@@ -352,3 +357,12 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                " \t\t}",
                "-\t\tgetApplicationEventMulticaster().multicastEvent(applicationEvent, eventType);",
                "+",
                "+\t\t// Multicast right now if possible - or lazily once the multicaster is initialized",
                "+\t\tif (this.earlyApplicationEvents != null) {",
                "+\t\t\tthis.earlyApplicationEvents.add(applicationEvent);",
                "+\t\t}",
                "+\t\telse {",
                "+\t\t\tgetApplicationEventMulticaster().multicastEvent(applicationEvent, eventType);",
                "+\t\t}",
                "+",
                "+\t\t// Publish event via parent context as well...",
                " \t\tif (this.parent != null) {",
                "@@ -381,3 +395,3 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                " \t */",
                "-\tLifecycleProcessor getLifecycleProcessor() {",
                "+\tLifecycleProcessor getLifecycleProcessor() throws IllegalStateException {",
                " \t\tif (this.lifecycleProcessor == null) {",
                "@@ -545,2 +559,6 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                " \t\tgetEnvironment().validateRequiredProperties();",
                "+",
                "+\t\t// Allow for the collection of early ApplicationEvents,",
                "+\t\t// to be published once the multicaster is available...",
                "+\t\tthis.earlyApplicationEvents = new LinkedHashSet<ApplicationEvent>();",
                " \t}",
                "@@ -750,2 +768,3 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                " \t\t}",
                "+",
                " \t\t// Do not initialize FactoryBeans here: We need to leave all regular beans",
                "@@ -753,4 +772,13 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                " \t\tString[] listenerBeanNames = getBeanNamesForType(ApplicationListener.class, true, false);",
                "-\t\tfor (String lisName : listenerBeanNames) {",
                "-\t\t\tgetApplicationEventMulticaster().addApplicationListenerBean(lisName);",
                "+\t\tfor (String listenerBeanName : listenerBeanNames) {",
                "+\t\t\tgetApplicationEventMulticaster().addApplicationListenerBean(listenerBeanName);",
                "+\t\t}",
                "+",
                "+\t\t// Publish early application events now that we finally have a multicaster...",
                "+\t\tSet<ApplicationEvent> earlyEventsToProcess = this.earlyApplicationEvents;",
                "+\t\tthis.earlyApplicationEvents = null;",
                "+\t\tif (earlyEventsToProcess != null) {",
                "+\t\t\tfor (ApplicationEvent earlyEvent : earlyEventsToProcess) {",
                "+\t\t\t\tgetApplicationEventMulticaster().multicastEvent(earlyEvent);",
                "+\t\t\t}",
                " \t\t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/ApplicationEventPublisher.java",
                "spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: application",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: application",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d398bb7c5166f5a4a79d2e2ced5fa1c88b695a5d",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429217385,
            "hunks": 3,
            "message": "DefaultMessageListenerContainer uses receiveTimeout for wait call on shutdown Issue: SPR-11841",
            "diff": [
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java",
                "index ae0fdb262c..862565bdda 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -171,2 +171,10 @@ public abstract class AbstractPollingMessageListenerContainer extends AbstractMe",
                "+\t/**",
                "+\t * Return the receive timeout (ms) configured for this listener container.",
                "+\t * @since 4.2",
                "+\t */",
                "+\tprotected long getReceiveTimeout() {",
                "+\t\treturn this.receiveTimeout;",
                "+\t}",
                "+",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java b/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java",
                "index 03a690697a..ba55ecc241 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java",
                "@@ -565,3 +565,9 @@ public class DefaultMessageListenerContainer extends AbstractPollingMessageListe",
                " \t\t\t\t\t}",
                "-\t\t\t\t\tthis.lifecycleMonitor.wait();",
                "+\t\t\t\t\tlong timeout = getReceiveTimeout();",
                "+\t\t\t\t\tif (timeout > 0) {",
                "+\t\t\t\t\t\tthis.lifecycleMonitor.wait(timeout);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\telse {",
                "+\t\t\t\t\t\tthis.lifecycleMonitor.wait();",
                "+\t\t\t\t\t}",
                " \t\t\t\t}"
            ],
            "changed_files": [
                "spring-jms/src/main/java/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java",
                "spring-jms/src/main/java/org/springframework/jms/listener/DefaultMessageListenerContainer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: message",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "7891c0d5ca208ef4f123f2dfa92cd13e6cb25042",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1430098377,
            "hunks": 23,
            "message": "Update reactor2 support",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "index e40ad6a1f4..f454243ba2 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "@@ -31,3 +31,2 @@ import reactor.core.config.ReactorConfiguration;",
                " import reactor.core.support.NamedDaemonThreadFactory;",
                "-import reactor.fn.BiFunction;",
                " import reactor.fn.Consumer;",
                "@@ -38,3 +37,7 @@ import reactor.io.buffer.Buffer;",
                " import reactor.io.codec.Codec;",
                "-import reactor.io.net.*;",
                "+import reactor.io.net.ChannelStream;",
                "+import reactor.io.net.NetStreams;",
                "+import reactor.io.net.NetStreams.TcpClientFactory;",
                "+import reactor.io.net.ReactorChannelHandler;",
                "+import reactor.io.net.Reconnect;",
                " import reactor.io.net.Spec.TcpClientSpec;",
                "@@ -73,3 +76,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\tprivate final NetStreams.TcpClientFactory<Message<P>, Message<P>> tcpClientSpecFactory;",
                "+\tprivate final TcpClientFactory<Message<P>, Message<P>> tcpClientSpecFactory;",
                "@@ -96,3 +99,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\t\tthis.tcpClientSpecFactory = new NetStreams.TcpClientFactory<Message<P>, Message<P>>() {",
                "+\t\tthis.tcpClientSpecFactory = new TcpClientFactory<Message<P>, Message<P>>() {",
                "@@ -113,3 +116,4 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t\tioThreadCount = Integer.parseInt(System.getProperty(\"reactor.tcp.ioThreadCount\"));",
                "-\t\t} catch (Exception i) {",
                "+\t\t}",
                "+\t\tcatch (Exception i) {",
                " \t\t\tioThreadCount = -1;",
                "@@ -134,3 +138,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t */",
                "-\tpublic Reactor2TcpClient(NetStreams.TcpClientFactory<Message<P>, Message<P>> tcpClientSpecFactory) {",
                "+\tpublic Reactor2TcpClient(TcpClientFactory<Message<P>, Message<P>> tcpClientSpecFactory) {",
                " \t\tAssert.notNull(tcpClientSpecFactory, \"'tcpClientClientFactory' must not be null\");",
                "@@ -141,9 +145,5 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t@Override",
                "-\tpublic ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler) {",
                "-\t\tClass<NettyTcpClient> type = REACTOR_TCP_CLIENT_TYPE;",
                "-",
                "-\t\tTcpClient<Message<P>, Message<P>> tcpClient = NetStreams.tcpClient(type, this.tcpClientSpecFactory);",
                "-",
                "-\t\tPromise<Void> promise = tcpClient.start(composeConnectionHandling(tcpClient, connectionHandler));",
                "-",
                "+\tpublic ListenableFuture<Void> connect(final TcpConnectionHandler<P> connectionHandler) {",
                "+\t\tAssert.notNull(connectionHandler, \"'connectionHandler' must not be null\");",
                "+\t\tPromise<Void> promise = createTcpClient().start(new MessageChannelStreamHandler<P>(connectionHandler));",
                " \t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(",
                "@@ -159,12 +159,9 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t@Override",
                "-\tpublic ListenableFuture<Void> connect(TcpConnectionHandler<P> handler, ReconnectStrategy strategy) {",
                "-\t\tAssert.notNull(strategy, \"ReconnectStrategy must not be null\");",
                "-\t\tClass<NettyTcpClient> type = REACTOR_TCP_CLIENT_TYPE;",
                "+\tpublic ListenableFuture<Void> connect(TcpConnectionHandler<P> connectionHandler, ReconnectStrategy strategy) {",
                "+\t\tAssert.notNull(connectionHandler, \"'connectionHandler' must not be null\");",
                "+\t\tAssert.notNull(strategy, \"'reconnectStrategy' must not be null\");",
                "-\t\tTcpClient<Message<P>, Message<P>> tcpClient = NetStreams.tcpClient(type, this.tcpClientSpecFactory);",
                "-",
                "-\t\tStream<Tuple2<InetSocketAddress, Integer>> stream = tcpClient.start(",
                "-\t\t\t\tcomposeConnectionHandling(tcpClient, handler),",
                "-\t\t\t\tnew ReactorRectonnectAdapter(strategy)",
                "-\t\t);",
                "+\t\tStream<Tuple2<InetSocketAddress, Integer>> stream = createTcpClient().start(",
                "+\t\t\t\tnew MessageChannelStreamHandler<P>(connectionHandler),",
                "+\t\t\t\tnew ReactorReconnectAdapter(strategy));",
                "@@ -173,7 +170,5 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\tprivate MessageHandler<P> composeConnectionHandling(",
                "-\t\t\tfinal TcpClient<Message<P>, Message<P>> tcpClient,",
                "-\t\t\tfinal TcpConnectionHandler<P> connectionHandler",
                "-\t) {",
                "-",
                "+\tprivate TcpClient<Message<P>, Message<P>> createTcpClient() {",
                "+\t\tClass<NettyTcpClient> type = REACTOR_TCP_CLIENT_TYPE;",
                "+\t\tTcpClient<Message<P>, Message<P>> tcpClient = NetStreams.tcpClient(type, this.tcpClientSpecFactory);",
                " \t\tsynchronized (this.tcpClients) {",
                "@@ -181,34 +176,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t}",
                "-",
                "-\t\treturn new MessageHandler<P>() {",
                "-\t\t\t@Override",
                "-\t\t\tpublic Publisher<Void> apply(ChannelStream<Message<P>, Message<P>> connection) {",
                "-",
                "-\t\t\t\tPromise<Void> closePromise = Promises.prepare();",
                "-",
                "-\t\t\t\tconnectionHandler.afterConnected(new Reactor2TcpConnection<P>(connection, closePromise));",
                "-",
                "-\t\t\t\tconnection",
                "-\t\t\t\t\t\t.finallyDo(new Consumer<Signal<Message<P>>>() {",
                "-",
                "-\t\t\t\t\t\t\t@Override",
                "-\t\t\t\t\t\t\tpublic void accept(Signal<Message<P>> signal) {",
                "-\t\t\t\t\t\t\t\tif (signal.isOnError()) {",
                "-\t\t\t\t\t\t\t\t\tconnectionHandler.handleFailure(signal.getThrowable());",
                "-\t\t\t\t\t\t\t\t} else if (signal.isOnComplete()) {",
                "-\t\t\t\t\t\t\t\t\tconnectionHandler.afterConnectionClosed();",
                "-\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t})",
                "-\t\t\t\t\t\t.consume(new Consumer<Message<P>>() {",
                "-",
                "-\t\t\t\t\t\t\t@Override",
                "-\t\t\t\t\t\t\tpublic void accept(Message<P> message) {",
                "-\t\t\t\t\t\t\t\tconnectionHandler.handleMessage(message);",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t});",
                "-",
                "-\t\t\t\treturn closePromise;",
                "-\t\t\t}",
                "-\t\t};",
                "+\t\treturn tcpClient;",
                " \t}",
                "@@ -217,10 +181,7 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \tpublic ListenableFuture<Void> shutdown() {",
                "-",
                "-\t\tfinal List<TcpClient<Message<P>, Message<P>>> clients;",
                "-",
                "+\t\tfinal List<TcpClient<Message<P>, Message<P>>> readOnlyClients;",
                " \t\tsynchronized (this.tcpClients) {",
                "-\t\t\tclients = new ArrayList<TcpClient<Message<P>, Message<P>>>(this.tcpClients);",
                "+\t\t\treadOnlyClients = new ArrayList<TcpClient<Message<P>, Message<P>>>(this.tcpClients);",
                " \t\t}",
                "-",
                "-\t\tPromise<Void> promise = Streams.from(clients)",
                "+\t\tPromise<Void> promise = Streams.from(readOnlyClients)",
                " \t\t\t\t.flatMap(new Function<TcpClient<Message<P>, Message<P>>, Promise<Void>>() {",
                "@@ -239,3 +200,2 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t\t\t.next();",
                "-",
                " \t\treturn new PassThroughPromiseToListenableFutureAdapter<Void>(promise);",
                "@@ -243,2 +203,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "+",
                " \tprivate static class SynchronousDispatcherConfigReader implements ConfigurationReader {",
                "@@ -251,3 +212,44 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\tprivate static class ReactorRectonnectAdapter implements Reconnect {",
                "+\tprivate static class MessageChannelStreamHandler<P>",
                "+\t\t\timplements ReactorChannelHandler<Message<P>, Message<P>, ChannelStream<Message<P>, Message<P>>> {",
                "+",
                "+\t\tprivate final TcpConnectionHandler<P> connectionHandler;",
                "+",
                "+\t\tpublic MessageChannelStreamHandler(TcpConnectionHandler<P> connectionHandler) {",
                "+\t\t\tthis.connectionHandler = connectionHandler;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic Publisher<Void> apply(ChannelStream<Message<P>, Message<P>> channelStream) {",
                "+",
                "+\t\t\tPromise<Void> closePromise = Promises.prepare();",
                "+",
                "+\t\t\tthis.connectionHandler.afterConnected(new Reactor2TcpConnection<P>(channelStream, closePromise));",
                "+",
                "+\t\t\tchannelStream",
                "+\t\t\t\t\t.finallyDo(new Consumer<Signal<Message<P>>>() {",
                "+",
                "+\t\t\t\t\t\t@Override",
                "+\t\t\t\t\t\tpublic void accept(Signal<Message<P>> signal) {",
                "+\t\t\t\t\t\t\tif (signal.isOnError()) {",
                "+\t\t\t\t\t\t\t\tconnectionHandler.handleFailure(signal.getThrowable());",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\telse if (signal.isOnComplete()) {",
                "+\t\t\t\t\t\t\t\tconnectionHandler.afterConnectionClosed();",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t})",
                "+\t\t\t\t\t.consume(new Consumer<Message<P>>() {",
                "+",
                "+\t\t\t\t\t\t@Override",
                "+\t\t\t\t\t\tpublic void accept(Message<P> message) {",
                "+\t\t\t\t\t\t\tconnectionHandler.handleMessage(message);",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t});",
                "+",
                "+\t\t\treturn closePromise;",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tprivate static class ReactorReconnectAdapter implements Reconnect {",
                "@@ -255,3 +257,3 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                "-\t\tpublic ReactorRectonnectAdapter(ReconnectStrategy strategy) {",
                "+\t\tpublic ReactorReconnectAdapter(ReconnectStrategy strategy) {",
                " \t\t\tthis.strategy = strategy;",
                "@@ -263,7 +265,2 @@ public class Reactor2TcpClient<P> implements TcpOperations<P> {",
                " \t\t}",
                "-",
                "-\t}",
                "-",
                "-\tprivate interface MessageHandler<P>",
                "-\t\t\textends ReactorChannelHandler<Message<P>, Message<P>, ChannelStream<Message<P>, Message<P>>>{",
                " \t}",
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java",
                "index ed198f9599..ff2f8ba585 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java",
                "@@ -18,5 +18,2 @@ package org.springframework.messaging.tcp.reactor;",
                "-import org.reactivestreams.Subscriber;",
                "-import org.reactivestreams.Subscription;",
                "-import org.springframework.util.concurrent.ListenableFutureAdapter;",
                " import reactor.fn.Functions;",
                "@@ -26,3 +23,2 @@ import reactor.rx.Promises;",
                " import reactor.rx.Streams;",
                "-import reactor.rx.broadcast.Broadcaster;",
                "@@ -44,5 +40,9 @@ public class Reactor2TcpConnection<P> implements TcpConnection<P> {",
                " \tprivate final ChannelStream<Message<P>, Message<P>> channelStream;",
                "+",
                " \tprivate final Promise<Void> closePromise;",
                "-\tpublic Reactor2TcpConnection(ChannelStream<Message<P>, Message<P>> channelStream, Promise<Void> closePromise) {",
                "+",
                "+\tpublic Reactor2TcpConnection(ChannelStream<Message<P>, Message<P>> channelStream,",
                "+\t\t\tPromise<Void> closePromise) {",
                "+",
                " \t\tthis.channelStream = channelStream;",
                "@@ -73,2 +73,3 @@ public class Reactor2TcpConnection<P> implements TcpConnection<P> {",
                " \t}",
                "+",
                " }"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpConnection.java, spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/Reactor2TcpClient.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "8b2d9951e0e9d95b561bb04dbc924a023161bc60",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429102663,
            "hunks": 12,
            "message": "AnnotationAsyncExecutionAspect properly accepts ListenableFuture return type Issue: SPR-12895",
            "diff": [
                "diff --git a/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj",
                "index cbd592f504..6df1662a19 100644",
                "--- a/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj",
                "+++ b/spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -25,11 +25,11 @@ import org.springframework.scheduling.annotation.Async;",
                " /**",
                "- * Aspect to route methods based on the {@link Async} annotation.",
                "+ * Aspect to route methods based on Spring's {@link Async} annotation.",
                "  *",
                "- * <p>This aspect routes methods marked with the {@link Async} annotation",
                "- * as well as methods in classes marked with the same. Any method expected",
                "- * to be routed asynchronously must return either {@code void}, {@link Future},",
                "- * or a subtype of {@link Future}. This aspect, therefore, will produce",
                "- * a compile-time error for methods that violate this constraint on the return type.",
                "- * If, however, a class marked with {@code @Async} contains a method that violates this",
                "- * constraint, it produces only a warning.",
                "+ * <p>This aspect routes methods marked with the {@link Async} annotation as well as methods",
                "+ * in classes marked with the same. Any method expected to be routed asynchronously must",
                "+ * return either {@code void}, {@link Future}, or a subtype of {@link Future} (in particular,",
                "+ * Spring's {@link org.springframework.util.concurrent.ListenableFuture}). This aspect,",
                "+ * therefore, will produce a compile-time error for methods that violate this constraint",
                "+ * on the return type. If, however, a class marked with {@code @Async} contains a method",
                "+ * that violates this constraint, it produces only a warning.",
                "  *",
                "@@ -41,7 +41,5 @@ public aspect AnnotationAsyncExecutionAspect extends AbstractAsyncExecutionAspec",
                "-\tprivate pointcut asyncMarkedMethod()",
                "-\t\t: execution(@Async (void || Future+) *(..));",
                "+\tprivate pointcut asyncMarkedMethod() : execution(@Async (void || Future+) *(..));",
                "-\tprivate pointcut asyncTypeMarkedMethod()",
                "-\t\t: execution((void || Future+) (@Async *).*(..));",
                "+\tprivate pointcut asyncTypeMarkedMethod() : execution((void || Future+) (@Async *).*(..));",
                "@@ -49,11 +47,11 @@ public aspect AnnotationAsyncExecutionAspect extends AbstractAsyncExecutionAspec",
                "+",
                " \t/**",
                "-\t * {@inheritDoc}",
                "-\t * <p>This implementation inspects the given method and its declaring class for the",
                "-\t * {@code @Async} annotation, returning the qualifier value expressed by",
                "-\t * {@link Async#value()}. If {@code @Async} is specified at both the method and class level, the",
                "-\t * method's {@code #value} takes precedence (even if empty string, indicating that",
                "-\t * the default executor should be used preferentially).",
                "+\t * This implementation inspects the given method and its declaring class for the",
                "+\t * {@code @Async} annotation, returning the qualifier value expressed by {@link Async#value()}.",
                "+\t * If {@code @Async} is specified at both the method and class level, the method's",
                "+\t * {@code #value} takes precedence (even if empty string, indicating that the default",
                "+\t * executor should be used preferentially).",
                " \t * @return the qualifier if specified, otherwise empty string indicating that the",
                "-\t * {@linkplain #setExecutor(Executor) default executor} should be used",
                "+\t * {@linkplain #setExecutor default executor} should be used",
                " \t * @see #determineAsyncExecutor(Method)",
                "@@ -62,3 +60,3 @@ public aspect AnnotationAsyncExecutionAspect extends AbstractAsyncExecutionAspec",
                " \tprotected String getExecutorQualifier(Method method) {",
                "-\t\t// maintainer's note: changes made here should also be made in",
                "+\t\t// Maintainer's note: changes made here should also be made in",
                " \t\t// AnnotationAsyncExecutionInterceptor#getExecutorQualifier",
                "@@ -68,7 +66,8 @@ public aspect AnnotationAsyncExecutionAspect extends AbstractAsyncExecutionAspec",
                " \t\t}",
                "-\t\treturn async == null ? null : async.value();",
                "+\t\treturn (async != null ? async.value() : null);",
                " \t}",
                "+",
                " \tdeclare error:",
                "-\t\texecution(@Async !(void||Future) *(..)):",
                "+\t\texecution(@Async !(void || Future+) *(..)):",
                " \t\t\"Only methods that return void or Future may have an @Async annotation\";",
                "@@ -76,3 +75,3 @@ public aspect AnnotationAsyncExecutionAspect extends AbstractAsyncExecutionAspec",
                " \tdeclare warning:",
                "-\t\texecution(!(void||Future) (@Async *).*(..)):",
                "+\t\texecution(!(void || Future+) (@Async *).*(..)):",
                " \t\t\"Methods in a class marked with @Async that do not return void or Future will \" +"
            ],
            "changed_files": [
                "spring-aspects/src/main/java/org/springframework/scheduling/aspectj/AnnotationAsyncExecutionAspect.aj"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: execution",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: execution",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "36a222acd5ef02dc4452addcedc6708edf46ed4e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520886750,
            "hunks": 10,
            "message": "Take into account the MimeType's charset in Jackson encoder Notice that per specification, only Unicode is supported (UTF8, UTF16_BE, UTF16_LE, UTF32_BE, UTF32_LE). Issue: SPR-16539",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/codec/json/AbstractJackson2Encoder.java b/spring-web/src/main/java/org/springframework/http/codec/json/AbstractJackson2Encoder.java",
                "index 6fef5ef485..89062082a5 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/codec/json/AbstractJackson2Encoder.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/codec/json/AbstractJackson2Encoder.java",
                "@@ -21,2 +21,3 @@ import java.io.OutputStream;",
                " import java.lang.annotation.Annotation;",
                "+import java.nio.charset.Charset;",
                " import java.util.ArrayList;",
                "@@ -27,2 +28,4 @@ import java.util.Map;",
                "+import com.fasterxml.jackson.core.JsonEncoding;",
                "+import com.fasterxml.jackson.core.JsonGenerator;",
                " import com.fasterxml.jackson.core.JsonProcessingException;",
                "@@ -111,5 +114,7 @@ public abstract class AbstractJackson2Encoder extends Jackson2CodecSupport imple",
                "+\t\tJsonEncoding encoding = getJsonEncoding(mimeType);",
                "+",
                " \t\tif (inputStream instanceof Mono) {",
                " \t\t\treturn Flux.from(inputStream).map(value ->",
                "-\t\t\t\t\tencodeValue(value, mimeType, bufferFactory, elementType, hints));",
                "+\t\t\t\t\tencodeValue(value, mimeType, bufferFactory, elementType, hints, encoding));",
                " \t\t}",
                "@@ -120,3 +125,3 @@ public abstract class AbstractJackson2Encoder extends Jackson2CodecSupport imple",
                " \t\t\t\treturn Flux.from(inputStream).map(value -> {",
                "-\t\t\t\t\tDataBuffer buffer = encodeValue(value, mimeType, bufferFactory, elementType, hints);",
                "+\t\t\t\t\tDataBuffer buffer = encodeValue(value, mimeType, bufferFactory, elementType, hints, encoding);",
                " \t\t\t\t\tif (separator != null) {",
                "@@ -131,3 +136,3 @@ public abstract class AbstractJackson2Encoder extends Jackson2CodecSupport imple",
                " \t\treturn Flux.from(inputStream).collectList().map(list ->",
                "-\t\t\t\tencodeValue(list, mimeType, bufferFactory, listType, hints)).flux();",
                "+\t\t\t\tencodeValue(list, mimeType, bufferFactory, listType, hints, encoding)).flux();",
                " \t}",
                "@@ -135,3 +140,3 @@ public abstract class AbstractJackson2Encoder extends Jackson2CodecSupport imple",
                " \tprivate DataBuffer encodeValue(Object value, @Nullable MimeType mimeType, DataBufferFactory bufferFactory,",
                "-\t\t\tResolvableType elementType, @Nullable Map<String, Object> hints) {",
                "+\t\t\tResolvableType elementType, @Nullable Map<String, Object> hints, JsonEncoding encoding) {",
                "@@ -150,4 +155,6 @@ public abstract class AbstractJackson2Encoder extends Jackson2CodecSupport imple",
                " \t\tOutputStream outputStream = buffer.asOutputStream();",
                "+",
                " \t\ttry {",
                "-\t\t\twriter.writeValue(outputStream, value);",
                "+\t\t\tJsonGenerator generator = getObjectMapper().getFactory().createGenerator(outputStream, encoding);",
                "+\t\t\twriter.writeValue(generator, value);",
                " \t\t}",
                "@@ -172,2 +179,20 @@ public abstract class AbstractJackson2Encoder extends Jackson2CodecSupport imple",
                "+\t/**",
                "+\t * Determine the JSON encoding to use for the given mime type.",
                "+\t * @param mimeType the mime type as requested by the caller",
                "+\t * @return the JSON encoding to use (never {@code null})",
                "+\t * @since 5.0.5",
                "+\t */",
                "+\tprotected JsonEncoding getJsonEncoding(@Nullable MimeType mimeType) {",
                "+\t\tif (mimeType != null && mimeType.getCharset() != null) {",
                "+\t\t\tCharset charset = mimeType.getCharset();",
                "+\t\t\tfor (JsonEncoding encoding : JsonEncoding.values()) {",
                "+\t\t\t\tif (charset.name().equals(encoding.getJavaName())) {",
                "+\t\t\t\t\treturn encoding;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn JsonEncoding.UTF8;",
                "+\t}",
                "+"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/codec/json/AbstractJackson2Encoder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: code",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: code",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "8ff7cc73bcffca02117aab069017e857b17d59f3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1428949885,
            "hunks": 2,
            "message": "Try defaulContentType for application/octet-stream AbstractHttpMessageConverter now tries to call getDefaultContentType with the actual value to be converted to see if that will result in a more concrete mediat type than application/octet-stream. Issue: SPR-12894",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
                "index 25d5faf5c1..1190341e9d 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -176,2 +176,6 @@ public abstract class AbstractHttpMessageConverter<T> implements HttpMessageConv",
                " \t\t\t}",
                "+\t\t\telse if (MediaType.APPLICATION_OCTET_STREAM.equals(contentType)) {",
                "+\t\t\t\tMediaType type = getDefaultContentType(t);",
                "+\t\t\t\tcontentTypeToUse = (type != null ? type : contentTypeToUse);",
                "+\t\t\t}",
                " \t\t\tif (contentTypeToUse != null) {"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/converter/AbstractHttpMessageConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: application, message",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "72894b26c24b1ea31c6dda4634cfde67e7dc3050",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429529360,
            "hunks": 5,
            "message": "Fix conversion of Message<?> payload for replies If a custom MessageConverter is set, it is not used for replies defined via the Message abstraction. This commit harmonizes the behaviour of the `MessagingMessageConverter` so that the conversion of the payload can be converted for both incoming and outgoing messages. Issue: SPR-12912",
            "diff": [
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener.java b/spring-jms/src/main/java/org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener.java",
                "index f910fd4308..cd0516de6d 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -398,2 +398,11 @@ public abstract class AbstractAdaptableMessageListener",
                " \t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tprotected Message createMessageForPayload(Object payload, Session session) throws JMSException {",
                "+\t\t\tMessageConverter converter = getMessageConverter();",
                "+\t\t\tif (converter != null) {",
                "+\t\t\t\treturn converter.toMessage(payload, session);",
                "+\t\t\t}",
                "+\t\t\tthrow new IllegalStateException(\"No message converter, cannot handle '\" + payload + \"'\");",
                "+\t\t}",
                " \t}",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/support/converter/MessagingMessageConverter.java b/spring-jms/src/main/java/org/springframework/jms/support/converter/MessagingMessageConverter.java",
                "index aefa45877e..a4db74313e 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/support/converter/MessagingMessageConverter.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/support/converter/MessagingMessageConverter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -95,3 +95,3 @@ public class MessagingMessageConverter implements MessageConverter, Initializing",
                " \t\tMessage<?> input = (Message<?>) object;",
                "-\t\tjavax.jms.Message reply = this.payloadConverter.toMessage(input.getPayload(), session);",
                "+\t\tjavax.jms.Message reply = createMessageForPayload(input.getPayload(), session);",
                " \t\tthis.headerMapper.fromHeaders(input.getHeaders(), reply);",
                "@@ -121,2 +121,10 @@ public class MessagingMessageConverter implements MessageConverter, Initializing",
                "+\t/**",
                "+\t * Create a JMS message for the specified payload.",
                "+\t * @see MessageConverter#toMessage(Object, Session)",
                "+\t */",
                "+\tprotected javax.jms.Message createMessageForPayload(Object payload, Session session) throws JMSException {",
                "+\t\treturn this.payloadConverter.toMessage(payload, session);",
                "+\t}",
                "+",
                " }"
            ],
            "changed_files": [
                "spring-jms/src/main/java/org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener.java",
                "spring-jms/src/main/java/org/springframework/jms/support/converter/MessagingMessageConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: version, message",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "1b83f129a23a71e3c4176d71faf9a1ce980a47c2",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521764527,
            "hunks": 1,
            "message": "ReactorNettyTcpClient uses elastic pool Issue: SPR-16626",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java",
                "index c37837494a..99dccd316d 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java",
                "@@ -141,3 +141,3 @@ public class ReactorNettyTcpClient<P> implements TcpOperations<P> {",
                " \t\t\tif (!builder.isPoolDisabled()) {",
                "-\t\t\t\tthis.poolResources = PoolResources.fixed(\"tcp-client-pool\");",
                "+\t\t\t\tthis.poolResources = PoolResources.elastic(\"tcp-client-pool\");",
                " \t\t\t\tbuilder.poolResources(this.poolResources);"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "0af847c01c5e2e181fd1215e2e2450b189286ba6",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521845870,
            "hunks": 14,
            "message": "ServerSentEventHttpMessageReader internal refactoring Eliminate use of .block() which Reactor now flags as illegal on schedulers where that's not expected.",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java b/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java",
                "index 6567a252c7..b41910f103 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java",
                "@@ -26,2 +26,3 @@ import java.util.Map;",
                " import java.util.function.IntPredicate;",
                "+import java.util.stream.Collectors;",
                "@@ -42,4 +43,2 @@ import org.springframework.lang.Nullable;",
                "-import static java.util.stream.Collectors.joining;",
                "-",
                " /**",
                "@@ -122,5 +121,6 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\t\t\t.concatMap(rawLines -> {",
                "-\t\t\t\t\tString[] lines = rawLines.stream().collect(joining()).split(\"\\\\r?\\\\n\");",
                "-\t\t\t\t\tServerSentEvent<Object> event = buildEvent(lines, valueType, hints);",
                "-\t\t\t\t\treturn (shouldWrap ? Mono.just(event) : Mono.justOrEmpty(event.data()));",
                "+\t\t\t\t\tString[] lines = rawLines.stream().collect(Collectors.joining()).split(\"\\\\r?\\\\n\");",
                "+\t\t\t\t\treturn buildEvent(lines, valueType, hints)",
                "+\t\t\t\t\t\t\t.filter(event -> shouldWrap || event.data() != null)",
                "+\t\t\t\t\t\t\t.map(event -> shouldWrap ? event : event.data());",
                " \t\t\t\t})",
                "@@ -146,3 +146,3 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                "-\tprivate ServerSentEvent<Object> buildEvent(String[] lines, ResolvableType valueType,",
                "+\tprivate Mono<ServerSentEvent<Object>> buildEvent(String[] lines, ResolvableType valueType,",
                " \t\t\tMap<String, Object> hints) {",
                "@@ -150,4 +150,4 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\tServerSentEvent.Builder<Object> sseBuilder = ServerSentEvent.builder();",
                "-\t\tStringBuilder mutableData = new StringBuilder();",
                "-\t\tStringBuilder mutableComment = new StringBuilder();",
                "+\t\tStringBuilder data = null;",
                "+\t\tStringBuilder comment = null;",
                "@@ -161,3 +161,4 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\t\telse if (line.startsWith(\"data:\")) {",
                "-\t\t\t\tmutableData.append(line.substring(5)).append(\"\\n\");",
                "+\t\t\t\tdata = (data != null ? data : new StringBuilder());",
                "+\t\t\t\tdata.append(line.substring(5)).append(\"\\n\");",
                " \t\t\t}",
                "@@ -167,20 +168,23 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\t\telse if (line.startsWith(\":\")) {",
                "-\t\t\t\tmutableComment.append(line.substring(1)).append(\"\\n\");",
                "+\t\t\t\tcomment = (comment != null ? comment : new StringBuilder());",
                "+\t\t\t\tcomment.append(line.substring(1)).append(\"\\n\");",
                " \t\t\t}",
                " \t\t}",
                "-\t\tif (mutableData.length() > 0) {",
                "-\t\t\tString data = mutableData.toString();",
                "-\t\t\tsseBuilder.data(decodeData(data, valueType, hints));",
                "+\t\tif (comment != null) {",
                "+\t\t\tsseBuilder.comment(comment.toString().substring(0, comment.length() - 1));",
                "+\t\t}",
                "+\t\tif (data != null) {",
                "+\t\t\treturn decodeData(data.toString(), valueType, hints).map(decodedData -> {",
                "+\t\t\t\tsseBuilder.data(decodedData);",
                "+\t\t\t\treturn sseBuilder.build();",
                "+\t\t\t});",
                " \t\t}",
                "-\t\tif (mutableComment.length() > 0) {",
                "-\t\t\tString comment = mutableComment.toString();",
                "-\t\t\tsseBuilder.comment(comment.substring(0, comment.length() - 1));",
                "+\t\telse {",
                "+\t\t\treturn Mono.just(sseBuilder.build());",
                " \t\t}",
                "-\t\treturn sseBuilder.build();",
                " \t}",
                "-\t@Nullable",
                "-\tprivate Object decodeData(String data, ResolvableType dataType, Map<String, Object> hints) {",
                "+\tprivate Mono<?> decodeData(String data, ResolvableType dataType, Map<String, Object> hints) {",
                " \t\tif (String.class == dataType.resolve()) {",
                "-\t\t\treturn data.substring(0, data.length() - 1);",
                "+\t\t\treturn Mono.just(data.substring(0, data.length() - 1));",
                " \t\t}",
                "@@ -188,3 +192,3 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\tif (this.decoder == null) {",
                "-\t\t\treturn Flux.error(new CodecException(\"No SSE decoder configured and the data is not String.\"));",
                "+\t\t\treturn Mono.error(new CodecException(\"No SSE decoder configured and the data is not String.\"));",
                " \t\t}",
                "@@ -193,6 +197,3 @@ public class ServerSentEventHttpMessageReader implements HttpMessageReader<Objec",
                " \t\tMono<DataBuffer> input = Mono.just(bufferFactory.wrap(bytes));",
                "-",
                "-\t\treturn this.decoder",
                "-\t\t\t\t.decodeToMono(input, dataType, MediaType.TEXT_EVENT_STREAM, hints)",
                "-\t\t\t\t.block(Duration.ZERO);",
                "+\t\treturn this.decoder.decodeToMono(input, dataType, MediaType.TEXT_EVENT_STREAM, hints);",
                " \t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/codec/ServerSentEventHttpMessageReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: message",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: code, message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "a989ea0867f36ddf1f0e58b71aade8a2500ffe7d",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521896356,
            "hunks": 26,
            "message": "Polish Synchronoss message reader Issue: SPR-16639",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader.java b/spring-web/src/main/java/org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader.java",
                "index 765918bc8c..8324c402d5 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader.java",
                "@@ -100,3 +100,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t\treturn Mono.error(new UnsupportedOperationException(",
                "-\t\t\t\t\"This reader does not support reading a single element.\"));",
                "+\t\t\t\t\"Can't read a multipart request body into a single Part.\"));",
                " \t}",
                "@@ -105,4 +105,4 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t/**",
                "-\t * Consume and feed input to the Synchronoss parser, then adapt parser",
                "-\t * output events to {@code Flux<Sink<Part>>}.",
                "+\t * Consume and feed input to the Synchronoss parser, then listen for parser",
                "+\t * output events and adapt to {@code Flux<Sink<Part>>}.",
                " \t */",
                "@@ -114,2 +114,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\tSynchronossPartGenerator(ReactiveHttpInputMessage inputMessage, DataBufferFactory factory) {",
                "@@ -119,2 +120,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                "@@ -178,5 +180,6 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "-\t\tFluxSinkAdapterListener(FluxSink<Part> sink, DataBufferFactory bufferFactory, MultipartContext context) {",
                "+",
                "+\t\tFluxSinkAdapterListener(FluxSink<Part> sink, DataBufferFactory factory, MultipartContext context) {",
                " \t\t\tthis.sink = sink;",
                "-\t\t\tthis.bufferFactory = bufferFactory;",
                "+\t\t\tthis.bufferFactory = factory;",
                " \t\t\tthis.context = context;",
                "@@ -184,2 +187,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                "@@ -194,3 +198,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t\t\tif (filename != null) {",
                "-\t\t\t\treturn new SynchronossFilePart(httpHeaders, storage, this.bufferFactory, filename);",
                "+\t\t\t\treturn new SynchronossFilePart(httpHeaders, filename, storage, this.bufferFactory);",
                " \t\t\t}",
                "@@ -201,3 +205,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t\t\telse {",
                "-\t\t\t\treturn new DefaultSynchronossPart(httpHeaders, storage, this.bufferFactory);",
                "+\t\t\t\treturn new SynchronossPart(httpHeaders, storage, this.bufferFactory);",
                " \t\t\t}",
                "@@ -231,2 +235,4 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+\t\tprivate final String name;",
                "+",
                " \t\tprivate final HttpHeaders headers;",
                "@@ -235,2 +241,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\tAbstractSynchronossPart(HttpHeaders headers, DataBufferFactory bufferFactory) {",
                "@@ -238,2 +245,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t\t\tAssert.notNull(bufferFactory, \"'bufferFactory' is required\");",
                "+\t\t\tthis.name = MultipartUtils.getFieldName(headers);",
                " \t\t\tthis.headers = headers;",
                "@@ -242,5 +250,6 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                " \t\tpublic String name() {",
                "-\t\t\treturn MultipartUtils.getFieldName(this.headers);",
                "+\t\t\treturn this.name;",
                " \t\t}",
                "@@ -252,3 +261,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "-\t\tprotected DataBufferFactory getBufferFactory() {",
                "+\t\tDataBufferFactory getBufferFactory() {",
                " \t\t\treturn this.bufferFactory;",
                "@@ -258,3 +267,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "-\tprivate static class DefaultSynchronossPart extends AbstractSynchronossPart {",
                "+\tprivate static class SynchronossPart extends AbstractSynchronossPart {",
                "@@ -262,3 +271,4 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "-\t\tDefaultSynchronossPart(HttpHeaders headers, StreamStorage storage, DataBufferFactory factory) {",
                "+",
                "+\t\tSynchronossPart(HttpHeaders headers, StreamStorage storage, DataBufferFactory factory) {",
                " \t\t\tsuper(headers, factory);",
                "@@ -268,6 +278,6 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                " \t\tpublic Flux<DataBuffer> content() {",
                "-\t\t\treturn DataBufferUtils.readInputStream(this.storage::getInputStream, getBufferFactory(),",
                "-\t\t\t\t\t4096);",
                "+\t\t\treturn DataBufferUtils.readInputStream(getStorage()::getInputStream, getBufferFactory(), 4096);",
                " \t\t}",
                "@@ -280,3 +290,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "-\tprivate static class SynchronossFilePart extends DefaultSynchronossPart implements FilePart {",
                "+\tprivate static class SynchronossFilePart extends SynchronossPart implements FilePart {",
                "@@ -285,6 +295,8 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\tprivate final String filename;",
                "-\t\tpublic SynchronossFilePart(",
                "-\t\t\t\tHttpHeaders headers, StreamStorage storage, DataBufferFactory factory, String filename) {",
                "+",
                "+\t\tSynchronossFilePart(HttpHeaders headers, String filename, StreamStorage storage,",
                "+\t\t\t\tDataBufferFactory factory) {",
                "@@ -294,2 +306,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                "@@ -344,2 +357,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\tSynchronossFormFieldPart(HttpHeaders headers, DataBufferFactory bufferFactory, String content) {",
                "@@ -349,2 +363,3 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                "+",
                " \t\t@Override",
                "@@ -363,4 +378,4 @@ public class SynchronossPartHttpMessageReader implements HttpMessageReader<Part>",
                " \t\tprivate Charset getCharset() {",
                "-\t\t\treturn Optional.ofNullable(MultipartUtils.getCharEncoding(headers()))",
                "-\t\t\t\t\t.map(Charset::forName).orElse(StandardCharsets.UTF_8);",
                "+\t\t\tString name = MultipartUtils.getCharEncoding(headers());",
                "+\t\t\treturn (name != null ? Charset.forName(name) : StandardCharsets.UTF_8);",
                " \t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/codec/multipart/SynchronossPartHttpMessageReader.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: message",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: code, message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "10a51a4f1957e5c579e9e63c023d422b0db55793",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429208771,
            "hunks": 4,
            "message": "InvocableHandlerMethod logs argument resolution exceptions at debug level Issue: SPR-12925",
            "diff": [
                "diff --git a/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java",
                "index e1ec9e5ea2..60b8ad4587 100644",
                "--- a/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java",
                "+++ b/spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -130,4 +130,4 @@ public class InvocableHandlerMethod extends HandlerMethod {",
                " \t\t\t\tcatch (Exception ex) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(getArgumentResolutionErrorMessage(\"Error resolving argument\", i), ex);",
                "+\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\t\tlogger.debug(getArgumentResolutionErrorMessage(\"Error resolving argument\", i), ex);",
                " \t\t\t\t\t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java b/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java",
                "index 6ce16e50bb..65b91ae543 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -166,4 +166,4 @@ public class InvocableHandlerMethod extends HandlerMethod {",
                " \t\t\t\tcatch (Exception ex) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(getArgumentResolutionErrorMessage(\"Error resolving argument\", i), ex);",
                "+\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\t\tlogger.debug(getArgumentResolutionErrorMessage(\"Error resolving argument\", i), ex);",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java",
                "spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "CHANGES_RELEVANT_FILES",
                    "message": "The commit changes some relevant files: spring-messaging/src/main/java/org/springframework/messaging/handler/invocation/InvocableHandlerMethod.java",
                    "relevance": 8
                }
            ]
        },
        {
            "commit_id": "2c7d2d38a9a3499947e7a83d9f0a81e8b4c45dc3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429198188,
            "hunks": 23,
            "message": "Support custom resolution of response destination Previously, the \"pubSubDomain\" drove the resolution of both the destination of the listener and the default response destination. A new \"replyPubSubDomain\" attribute has been added on the base listener and  can be used to listen on a topic and reply to a queue (or vice versa). The attribute is exposed via the \"response-destination-type\" XML attribute on the listener container element. It is also available on the JmsListenerContainerFactory for use with the @JmsListener infrastructure. Issue: SPR-12911",
            "diff": [
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/config/AbstractJmsListenerContainerFactory.java b/spring-jms/src/main/java/org/springframework/jms/config/AbstractJmsListenerContainerFactory.java",
                "index 811709cd53..888f8e6b2b 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/config/AbstractJmsListenerContainerFactory.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/config/AbstractJmsListenerContainerFactory.java",
                "@@ -54,2 +54,4 @@ public abstract class AbstractJmsListenerContainerFactory<C extends AbstractMess",
                "+\tprivate Boolean replyPubSubDomain;",
                "+",
                " \tprivate Boolean subscriptionDurable;",
                "@@ -114,2 +116,9 @@ public abstract class AbstractJmsListenerContainerFactory<C extends AbstractMess",
                "+\t/**",
                "+\t * @see AbstractMessageListenerContainer#setReplyPubSubDomain(boolean)",
                "+\t */",
                "+\tpublic void setReplyPubSubDomain(Boolean replyPubSubDomain) {",
                "+\t\tthis.replyPubSubDomain = replyPubSubDomain;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -174,2 +183,5 @@ public abstract class AbstractJmsListenerContainerFactory<C extends AbstractMess",
                " \t\t}",
                "+\t\tif (this.replyPubSubDomain != null) {",
                "+\t\t\tinstance.setReplyPubSubDomain(this.replyPubSubDomain);",
                "+\t\t}",
                " \t\tif (this.subscriptionDurable != null) {",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java b/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "index e4608b0929..f2d33d3023 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -80,2 +80,4 @@ abstract class AbstractListenerContainerParser implements BeanDefinitionParser {",
                "+\tprotected static final String RESPONSE_DESTINATION_TYPE_ATTRIBUTE = \"response-destination-type\";",
                "+",
                " \tprotected static final String CLIENT_ID_ATTRIBUTE = \"client-id\";",
                "@@ -172,3 +174,3 @@ abstract class AbstractListenerContainerParser implements BeanDefinitionParser {",
                " \t\t\tString responseDestination = listenerEle.getAttribute(RESPONSE_DESTINATION_ATTRIBUTE);",
                "-\t\t\tBoolean pubSubDomain = (Boolean) commonContainerProperties.getPropertyValue(\"pubSubDomain\").getValue();",
                "+\t\t\tBoolean pubSubDomain = (Boolean) commonContainerProperties.getPropertyValue(\"replyPubSubDomain\").getValue();",
                " \t\t\tlistenerDef.getPropertyValues().add(",
                "@@ -262,2 +264,19 @@ abstract class AbstractListenerContainerParser implements BeanDefinitionParser {",
                "+\t\tboolean replyPubSubDomain = false;",
                "+\t\tString replyDestinationType = containerEle.getAttribute(RESPONSE_DESTINATION_TYPE_ATTRIBUTE);",
                "+\t\tif (DESTINATION_TYPE_TOPIC.equals(replyDestinationType)) {",
                "+\t\t\treplyPubSubDomain = true;",
                "+\t\t}",
                "+\t\telse if (DESTINATION_TYPE_QUEUE.equals(replyDestinationType)) {",
                "+\t\t\treplyPubSubDomain = false;",
                "+\t\t}",
                "+\t\telse if (!StringUtils.hasText(replyDestinationType)) {",
                "+\t\t\treplyPubSubDomain = pubSubDomain; // the default: same value as pubSubDomain",
                "+\t\t}",
                "+\t\telse if (StringUtils.hasText(replyDestinationType)) {",
                "+\t\t\tparserContext.getReaderContext().error(\"Invalid listener container 'response-destination-type': only \" +",
                "+\t\t\t\t\t\"\\\"queue\\\", \\\"topic\\\" supported.\", containerEle);",
                "+\t\t}",
                "+\t\tproperties.add(\"replyPubSubDomain\", replyPubSubDomain);",
                "+",
                " \t\tif (containerEle.hasAttribute(CLIENT_ID_ATTRIBUTE)) {",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java b/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java",
                "index 29c9dec455..848ff3d593 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -91,3 +91,3 @@ public class MethodJmsListenerEndpoint extends AbstractJmsListenerEndpoint {",
                " \t\tif (StringUtils.hasText(responseDestination)) {",
                "-\t\t\tif (container.isPubSubDomain()) {",
                "+\t\t\tif (container.isReplyPubSubDomain()) {",
                " \t\t\t\tmessageListener.setDefaultResponseTopicName(responseDestination);",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java",
                "index 58c0c13380..60d36bb922 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java",
                "@@ -155,2 +155,4 @@ public abstract class AbstractMessageListenerContainer extends AbstractJmsListen",
                "+\tprivate Boolean replyPubSubDomain;",
                "+",
                " \tprivate boolean pubSubNoLocal = false;",
                "@@ -447,2 +449,30 @@ public abstract class AbstractMessageListenerContainer extends AbstractJmsListen",
                "+\t/**",
                "+\t * Configure the reply destination type. By default, the configured {@code pubSubDomain}",
                "+\t * value is used (see {@link #isPubSubDomain()}.",
                "+\t * <p>This setting primarily indicates what type of destination to resolve",
                "+\t * if dynamic destinations are enabled.",
                "+\t * @param replyPubSubDomain \"true\" for the Publish/Subscribe domain ({@link javax.jms.Topic Topics}),",
                "+\t * \"false\" for the Point-to-Point domain ({@link javax.jms.Queue Queues})",
                "+\t * @see #setDestinationResolver",
                "+\t */",
                "+\tpublic void setReplyPubSubDomain(boolean replyPubSubDomain) {",
                "+\t\tthis.replyPubSubDomain = replyPubSubDomain;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Return whether the Publish/Subscribe domain ({@link javax.jms.Topic Topics}) is used",
                "+\t * for replies. Otherwise, the Point-to-Point domain ({@link javax.jms.Queue Queues}) is",
                "+\t * used.",
                "+\t */",
                "+\t@Override",
                "+\tpublic boolean isReplyPubSubDomain() {",
                "+\t\tif (this.replyPubSubDomain != null) {",
                "+\t\t\treturn replyPubSubDomain;",
                "+\t\t}",
                "+\t\telse {",
                "+\t\t\treturn isPubSubDomain();",
                "+\t\t}",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java b/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java",
                "index 9d77fbc57d..920c9d4029 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -49,2 +49,10 @@ public interface MessageListenerContainer extends SmartLifecycle {",
                "+\t/**",
                "+\t * Return whether the reply destination uses Publish/Subscribe domain",
                "+\t * ({@link javax.jms.Topic Topics}). Otherwise, the Point-to-Point domain",
                "+\t * ({@link javax.jms.Queue Queues}) is used.",
                "+\t * <p>By default, the value is identical to {@link #isPubSubDomain()}.",
                "+\t */",
                "+\tboolean isReplyPubSubDomain();",
                "+",
                " }",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.java b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.java",
                "index fc2fdf8551..6a6fde3b48 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -48,2 +48,4 @@ public class JmsActivationSpecConfig {",
                "+\tprivate Boolean replyPubSubDomain;",
                "+",
                " \tprivate boolean subscriptionDurable = false;",
                "@@ -83,2 +85,15 @@ public class JmsActivationSpecConfig {",
                "+\tpublic void setReplyPubSubDomain(boolean replyPubSubDomain) {",
                "+\t\tthis.replyPubSubDomain = replyPubSubDomain;",
                "+\t}",
                "+",
                "+\tpublic boolean isReplyPubSubDomain() {",
                "+\t\tif (this.replyPubSubDomain != null) {",
                "+\t\t\treturn this.replyPubSubDomain;",
                "+\t\t}",
                "+\t\telse {",
                "+\t\t\treturn isPubSubDomain();",
                "+\t\t}",
                "+\t}",
                "+",
                " \tpublic void setSubscriptionDurable(boolean subscriptionDurable) {",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java",
                "index a82524b387..774dd75e90 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -202,2 +202,11 @@ public class JmsMessageEndpointManager extends GenericMessageEndpointManager",
                "+\t@Override",
                "+\tpublic boolean isReplyPubSubDomain() {",
                "+\t\tJmsActivationSpecConfig config = getActivationSpecConfig();",
                "+\t\tif (config != null) {",
                "+\t\t\treturn config.isReplyPubSubDomain();",
                "+\t\t}",
                "+\t\tthrow new IllegalStateException(\"Could not determine reply pubSubDomain - no activation spec config is set\");",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-jms/src/main/resources/META-INF/spring.schemas b/spring-jms/src/main/resources/META-INF/spring.schemas",
                "index c7c42d4642..a6ee238a4a 100644",
                "--- a/spring-jms/src/main/resources/META-INF/spring.schemas",
                "+++ b/spring-jms/src/main/resources/META-INF/spring.schemas",
                "@@ -6,2 +6,3 @@ http\\://www.springframework.org/schema/jms/spring-jms-4.0.xsd=org/springframewor",
                " http\\://www.springframework.org/schema/jms/spring-jms-4.1.xsd=org/springframework/jms/config/spring-jms-4.1.xsd",
                "-http\\://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-4.1.xsd",
                "+http\\://www.springframework.org/schema/jms/spring-jms-4.2.xsd=org/springframework/jms/config/spring-jms-4.2.xsd",
                "+http\\://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-4.2.xsd",
                "diff --git a/spring-jms/src/main/resources/org/springframework/jms/config/spring-jms-4.2.xsd b/spring-jms/src/main/resources/org/springframework/jms/config/spring-jms-4.2.xsd",
                "new file mode 100644",
                "index 0000000000..5122b3c44c",
                "--- /dev/null",
                "+++ b/spring-jms/src/main/resources/org/springframework/jms/config/spring-jms-4.2.xsd",
                "@@ -0,0 +1,638 @@",
                "+<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
                "+",
                "+<xsd:schema xmlns=\"http://www.springframework.org/schema/jms\"",
                "+\t\txmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"",
                "+\t\txmlns:tool=\"http://www.springframework.org/schema/tool\"",
                "+\t\ttargetNamespace=\"http://www.springframework.org/schema/jms\"",
                "+\t\telementFormDefault=\"qualified\"",
                "+\t\tattributeFormDefault=\"unqualified\">",
                "+",
                "+\t<xsd:import namespace=\"http://www.springframework.org/schema/tool\" schemaLocation=\"http://www.springframework.org/schema/tool/spring-tool-4.2.xsd\"/>",
                "+",
                "+\t<xsd:annotation>",
                "+\t\t<xsd:documentation><![CDATA[",
                "+\tDefines the configuration elements for the Spring Framework's JMS support.",
                "+\tAllows for configuring JMS listener containers in XML 'shortcut' style as",
                "+\twell as through annotation.",
                "+\t\t]]></xsd:documentation>",
                "+\t</xsd:annotation>",
                "+",
                "+\t<xsd:element name=\"annotation-driven\">",
                "+\t\t<xsd:annotation>",
                "+\t\t\t<xsd:documentation><![CDATA[",
                "+\tEnables the detection of @JmsListener annotation on any Spring-managed object. If",
                "+\tpresent, a message listener container will be created to receive the relevant",
                "+\tmessages and invoke the annotated method accordingly.",
                "+",
                "+\tSee Javadoc for the org.springframework.jms.annotation.EnableJms annotation for",
                "+\tinformation\ton code-based alternatives to this XML element.",
                "+\t\t\t]]></xsd:documentation>",
                "+\t\t</xsd:annotation>",
                "+\t\t<xsd:complexType>",
                "+\t\t\t<xsd:attribute name=\"registry\" type=\"xsd:string\" use=\"optional\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tSpecifies the org.springframework.jms.config.JmsListenerEndpointRegistry instance to",
                "+\tuse to register annotated jms listener endpoints. If not provided, a default instance",
                "+\twill be used by default.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.jms.config.JmsListenerEndpointRegistry\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"container-factory\" type=\"xsd:string\" use=\"optional\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tSpecifies the org.springframework.jms.config.JmsListenerContainerFactory instance to",
                "+\tuse to create the container for a jms listener endpoint that does not define a specific",
                "+\tfactory. This permits in practice to omit the \"containerFactory\" attribute of the JmsListener",
                "+\tannotation. This attribute is not required as each endpoint may define the factory to use and,",
                "+\tas a convenience, the JmsListenerContainerFactory with name 'jmsListenerContainerFactory' is",
                "+\tlooked up by default.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.jms.config.JmsListenerContainerFactory\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"handler-method-factory\" type=\"xsd:string\" use=\"optional\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tSpecifies a custom org.springframework.messaging.handler.annotation.support.MessageHandlerMethodFactory",
                "+\tinstance to\tuse to configure the message listener responsible to serve an endpoint detected by this",
                "+\tprocessor. By default, DefaultMessageHandlerMethodFactory is used and it can be configured",
                "+\tfurther to support additional method arguments or to customize conversion and validation",
                "+\tsupport. See org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory",
                "+\tJavadoc for more details.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.messaging.handler.annotation.support.MessageHandlerMethodFactory\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+",
                "+",
                "+\t\t</xsd:complexType>",
                "+\t</xsd:element>",
                "+",
                "+\t<xsd:element name=\"listener-container\">",
                "+\t\t<xsd:annotation>",
                "+\t\t\t<xsd:documentation><![CDATA[",
                "+\tEach listener child element will be hosted by a container whose configuration",
                "+\tis determined by this parent element. This variant builds standard JMS",
                "+\tlistener containers, operating against a specified JMS ConnectionFactory. When",
                "+\ta factory-id attribute is present, the configuration defined by this element is",
                "+\texposed as a org.springframework.jms.config.JmsListenerContainerFactory. It is",
                "+\ttherefore possible to only define this element without any child to just expose",
                "+\ta container factory.",
                "+\t\t\t]]></xsd:documentation>",
                "+\t\t\t<xsd:appinfo>",
                "+\t\t\t\t<tool:annotation>",
                "+\t\t\t\t\t<tool:exports type=\"org.springframework.jms.listener.AbstractMessageListenerContainer\"/>",
                "+\t\t\t\t</tool:annotation>",
                "+\t\t\t</xsd:appinfo>",
                "+\t\t</xsd:annotation>",
                "+\t\t<xsd:complexType>",
                "+\t\t\t<xsd:sequence>",
                "+\t\t\t\t<xsd:element name=\"listener\" type=\"listenerType\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>",
                "+\t\t\t</xsd:sequence>",
                "+\t\t\t<xsd:attribute name=\"factory-id\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tExpose the settings defined by this element as a org.springframework.jms.config.JmsListenerContainerFactory",
                "+\tso that they can be reused with other endpoints.",
                "+\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"container-type\" default=\"default\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe type of this listener container: \"default\" or \"simple\", choosing",
                "+\tbetween DefaultMessageListenerContainer and SimpleMessageListenerContainer.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t\t<xsd:simpleType>",
                "+\t\t\t\t\t<xsd:restriction base=\"xsd:string\">",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"default\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"simple\"/>",
                "+\t\t\t\t\t</xsd:restriction>",
                "+\t\t\t\t</xsd:simpleType>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"container-class\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA custom listener container implementation class as fully qualified class name.",
                "+\tDefault is Spring's standard DefaultMessageListenerContainer or",
                "+\tSimpleMessageListenerContainer, according to the \"container-type\" attribute.",
                "+\tNote that a custom container class will typically be a subclass of either of",
                "+\tthose two Spring-provided standard container classes: Nake sure that the",
                "+\t\"container-type\" attribute matches the actual base type that the custom class",
                "+\tderives from (\"default\" will usually be fine anyway, since most custom classes",
                "+\twill derive from DefaultMessageListenerContainer).",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation>",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"java.lang.Class\"/>",
                "+\t\t\t\t\t\t\t<tool:assignable-to type=\"org.springframework.jms.listener.AbstractMessageListenerContainer\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"connection-factory\" type=\"xsd:string\" default=\"connectionFactory\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA reference to the JMS ConnectionFactory bean.",
                "+\tDefault is \"connectionFactory\".",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"javax.jms.ConnectionFactory\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"task-executor\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA reference to a Spring TaskExecutor (or standard JDK 1.5 Executor) for executing",
                "+\tJMS listener invokers. Default is a SimpleAsyncTaskExecutor in case of a",
                "+\tDefaultMessageListenerContainer, using internally managed threads. For a",
                "+\tSimpleMessageListenerContainer, listeners will always get invoked within the",
                "+\tJMS provider's receive thread by default.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"java.util.concurrent.Executor\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"destination-resolver\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA reference to the DestinationResolver strategy for resolving destination names.",
                "+\tDefault is a DynamicDestinationResolver, using the JMS provider's queue/topic",
                "+\tname resolution. Alternatively, specify a reference to a JndiDestinationResolver",
                "+\t(typically in a J2EE environment).",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.jms.support.destination.DestinationResolver\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"message-converter\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA reference to the MessageConverter strategy for converting JMS Messages to",
                "+\tlistener method arguments. Default is a SimpleMessageConverter.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.jms.support.converter.MessageConverter\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"error-handler\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA reference to an ErrorHandler strategy for handling any uncaught Exceptions",
                "+\tthat may occur during the execution of the MessageListener.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.util.ErrorHandler\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"destination-type\" default=\"queue\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe JMS destination type for this listener: \"queue\", \"topic\", \"durableTopic\",",
                "+\t\"sharedTopic\", \"sharedDurableTopic\". This enables potentially the \"pubSubDomain\",",
                "+\t\"subscriptionDurable\" and \"subscriptionShared\" properties of the container. The",
                "+\tdefault is \"queue\" (i.e. disabling those 3 properties).",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t\t<xsd:simpleType>",
                "+\t\t\t\t\t<xsd:restriction base=\"xsd:string\">",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"queue\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"topic\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"durableTopic\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"sharedTopic\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"sharedDurableTopic\"/>",
                "+\t\t\t\t\t</xsd:restriction>",
                "+\t\t\t\t</xsd:simpleType>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"response-destination-type\" default=\"queue\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe JMS destination type for responses: \"queue\", \"topic\". Default",
                "+\tis the value of the \"destination-type\" attribute.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t\t<xsd:simpleType>",
                "+\t\t\t\t\t<xsd:restriction base=\"xsd:string\">",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"queue\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"topic\"/>",
                "+\t\t\t\t\t</xsd:restriction>",
                "+\t\t\t\t</xsd:simpleType>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"client-id\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe JMS client id for this listener container.",
                "+\tNeeds to be specified when using subscriptions.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"cache\" default=\"auto\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe cache level for JMS resources: \"none\", \"connection\", \"session\", \"consumer\"",
                "+\tor \"auto\". By default (\"auto\"), the cache level will effectively be \"consumer\",",
                "+\tunless an external transaction manager has been specified - in which case the",
                "+\teffective default will be \"none\" (assuming J2EE-style transaction management",
                "+\twhere the given ConnectionFactory is an XA-aware pool).",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t\t<xsd:simpleType>",
                "+\t\t\t\t\t<xsd:restriction base=\"xsd:string\">",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"none\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"connection\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"session\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"consumer\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"auto\"/>",
                "+\t\t\t\t\t</xsd:restriction>",
                "+\t\t\t\t</xsd:simpleType>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"acknowledge\" default=\"auto\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe native JMS acknowledge mode: \"auto\", \"client\", \"dups-ok\" or \"transacted\".",
                "+\tA value of \"transacted\" effectively activates a locally transacted Session;",
                "+\tas alternative, specify an external \"transaction-manager\" via the corresponding",
                "+\tattribute. Default is \"auto\".",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t\t<xsd:simpleType>",
                "+\t\t\t\t\t<xsd:restriction base=\"xsd:string\">",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"auto\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"client\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"dups-ok\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"transacted\"/>",
                "+\t\t\t\t\t</xsd:restriction>",
                "+\t\t\t\t</xsd:simpleType>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"transaction-manager\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA reference to an external PlatformTransactionManager (typically an",
                "+\tXA-based transaction coordinator, e.g. Spring's JtaTransactionManager).",
                "+\tIf not specified, native acknowledging will be used (see \"acknowledge\" attribute).",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.transaction.PlatformTransactionManager\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"concurrency\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe number of concurrent sessions/consumers to start for each listener.",
                "+\tCan either be a simple number indicating the maximum number (e.g. \"5\")",
                "+\tor a range indicating the lower as well as the upper limit (e.g. \"3-5\").",
                "+\tNote that a specified minimum is just a hint and might be ignored at runtime.",
                "+\tDefault is 1; keep concurrency limited to 1 in case of a topic listener",
                "+\tor if message ordering is important; consider raising it for general queues.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"prefetch\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe maximum number of messages to load into a single session.",
                "+\tNote that raising this number might lead to starvation of concurrent consumers!",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"receive-timeout\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe timeout to use for receive calls (in milliseconds).",
                "+\tThe default is 1000 ms (1 sec); -1 indicates no timeout at all.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"back-off\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\t Specify the BackOff instance to use to compute the interval between recovery",
                "+\t attempts. If the BackOff implementation returns \"BackOffExecution#STOP\", the listener",
                "+\t container will not further attempt to recover. The recovery-interval value is",
                "+\t ignored when this property is set. The default is a FixedBackOff with an",
                "+\t interval of 5000 ms, that is 5 seconds.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.util.backoff.BackOff\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"recovery-interval\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tSpecify the interval between recovery attempts, in milliseconds. Convenience",
                "+\tway to create a FixedBackOff with the specified interval. For more recovery",
                "+\toptions, consider specifying a BackOff instance instead. The default is",
                "+\t5000 ms, that is 5 seconds.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"phase\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe lifecycle phase within which this container should start and stop. The lower",
                "+\tthe value the earlier this container will start and the later it will stop. The",
                "+\tdefault is Integer.MAX_VALUE meaning the container will start as late as possible",
                "+\tand stop as soon as possible.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t</xsd:complexType>",
                "+\t</xsd:element>",
                "+",
                "+\t<xsd:element name=\"jca-listener-container\">",
                "+\t\t<xsd:annotation>",
                "+\t\t\t<xsd:documentation><![CDATA[",
                "+\tEach listener child element will be hosted by a container whose configuration",
                "+\tis determined by this parent element. This variant builds standard JCA-based",
                "+\tlistener containers, operating against a specified JCA ResourceAdapter",
                "+\t(which needs to be provided by the JMS message broker, e.g. ActiveMQ). When",
                "+\ta factory-id attribute is present, the configuration defined by this element is",
                "+\texposed as a org.springframework.jms.config.JmsListenerContainerFactory. It is",
                "+\ttherefore possible to only define this element without any child to just expose",
                "+\ta container factory.",
                "+\t\t\t]]></xsd:documentation>",
                "+\t\t\t<xsd:appinfo>",
                "+\t\t\t\t<tool:annotation>",
                "+\t\t\t\t\t<tool:exports type=\"org.springframework.jms.listener.endpoint.JmsMessageEndpointManager\"/>",
                "+\t\t\t\t</tool:annotation>",
                "+\t\t\t</xsd:appinfo>",
                "+\t\t</xsd:annotation>",
                "+\t\t<xsd:complexType>",
                "+\t\t\t<xsd:sequence>",
                "+\t\t\t\t<xsd:element name=\"listener\" type=\"listenerType\" minOccurs=\"0\" maxOccurs=\"unbounded\"/>",
                "+\t\t\t</xsd:sequence>",
                "+\t\t\t<xsd:attribute name=\"factory-id\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tExpose the settings defined by this element as a org.springframework.jms.config.JmsListenerContainerFactory",
                "+\tso that they can be reused with other endpoints.",
                "+\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"resource-adapter\" type=\"xsd:string\" default=\"resourceAdapter\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA reference to the JCA ResourceAdapter bean for the JMS provider.",
                "+\tDefault is \"resourceAdapter\".",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"javax.resource.spi.ResourceAdapter\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"activation-spec-factory\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA reference to the JmsActivationSpecFactory.",
                "+\tDefault is to autodetect the JMS provider and its ActivationSpec class",
                "+\t(see DefaultJmsActivationSpecFactory).",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.jms.listener.endpoint.JmsActivationSpecFactory\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"destination-resolver\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA reference to the DestinationResolver strategy for resolving destination names.",
                "+\tDefault is to pass in the destination name Strings into the JCA ActivationSpec as-is.",
                "+\tAlternatively, specify a reference to a JndiDestinationResolver (typically in a J2EE",
                "+\tenvironment, in particular if the server insists on receiving Destination objects).",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.jms.support.destination.DestinationResolver\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"message-converter\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA reference to the MessageConverter strategy for converting JMS Messages to",
                "+\tlistener method arguments. Default is a SimpleMessageConverter.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\">",
                "+\t\t\t\t\t\t\t<tool:expected-type type=\"org.springframework.jms.support.converter.MessageConverter\"/>",
                "+\t\t\t\t\t\t</tool:annotation>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"destination-type\" default=\"queue\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe JMS destination type for this listener: \"queue\", \"topic\" or \"durableTopic\".",
                "+\tDefault is \"queue\".",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t\t<xsd:simpleType>",
                "+\t\t\t\t\t<xsd:restriction base=\"xsd:string\">",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"queue\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"topic\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"durableTopic\"/>",
                "+\t\t\t\t\t</xsd:restriction>",
                "+\t\t\t\t</xsd:simpleType>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"response-destination-type\" default=\"queue\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe JMS destination type for responses: \"queue\", \"topic\". Default",
                "+\tis the value of the \"destination-type\" attribute.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t\t<xsd:simpleType>",
                "+\t\t\t\t\t<xsd:restriction base=\"xsd:string\">",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"queue\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"topic\"/>",
                "+\t\t\t\t\t</xsd:restriction>",
                "+\t\t\t\t</xsd:simpleType>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"client-id\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe JMS client id for this listener container.",
                "+\tNeeds to be specified when using durable subscriptions.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"acknowledge\" default=\"auto\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe native JMS acknowledge mode: \"auto\", \"client\", \"dups-ok\" or \"transacted\".",
                "+\tA value of \"transacted\" effectively activates a locally transacted Session;",
                "+\tas alternative, specify an external \"transaction-manager\" via the corresponding",
                "+\tattribute. Default is \"auto\".",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t\t<xsd:simpleType>",
                "+\t\t\t\t\t<xsd:restriction base=\"xsd:string\">",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"auto\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"client\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"dups-ok\"/>",
                "+\t\t\t\t\t\t<xsd:enumeration value=\"transacted\"/>",
                "+\t\t\t\t\t</xsd:restriction>",
                "+\t\t\t\t</xsd:simpleType>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"transaction-manager\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tA reference to the Spring JtaTransactionManager or [javax.transaction.TransactionManager],",
                "+\tfor kicking off an XA transaction for each incoming message.",
                "+\tIf not specified, native acknowledging will be used (see \"acknowledge\" attribute).",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t\t<tool:annotation kind=\"ref\"/>",
                "+\t\t\t\t\t</xsd:appinfo>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"concurrency\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe number of concurrent sessions/consumers to start for each listener.",
                "+\tCan either be a simple number indicating the maximum number (e.g. \"5\")",
                "+\tor a range indicating the lower as well as the upper limit (e.g. \"3-5\").",
                "+\tNote that a specified minimum is just a hint and will typically be ignored",
                "+\tat runtime when using a JCA listener container. Default is 1.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"prefetch\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe maximum number of messages to load into a single session.",
                "+\tNote that raising this number might lead to starvation of concurrent consumers!",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"phase\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe lifecycle phase within which this container should start and stop. The lower",
                "+\tthe value the earlier this container will start and the later it will stop. The",
                "+\tdefault is Integer.MAX_VALUE meaning the container will start as late as possible",
                "+\tand stop as soon as possible.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t</xsd:complexType>",
                "+\t</xsd:element>",
                "+",
                "+\t<xsd:complexType name=\"listenerType\">",
                "+\t\t<xsd:attribute name=\"id\" type=\"xsd:string\">",
                "+\t\t\t<xsd:annotation>",
                "+\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe unique identifier for a listener.",
                "+\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t</xsd:annotation>",
                "+\t\t</xsd:attribute>",
                "+\t\t<xsd:attribute name=\"destination\" type=\"xsd:string\" use=\"required\">",
                "+\t\t\t<xsd:annotation>",
                "+\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe destination name for this listener, resolved through the",
                "+\tcontainer-wide DestinationResolver strategy (if any). Required.",
                "+\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t</xsd:annotation>",
                "+\t\t</xsd:attribute>",
                "+\t\t<xsd:attribute name=\"subscription\" type=\"xsd:string\">",
                "+\t\t\t<xsd:annotation>",
                "+\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe name for the durable subscription, if any.",
                "+\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t</xsd:annotation>",
                "+\t\t</xsd:attribute>",
                "+\t\t<xsd:attribute name=\"selector\" type=\"xsd:string\">",
                "+\t\t\t<xsd:annotation>",
                "+\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe JMS message selector for this listener.",
                "+\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t</xsd:annotation>",
                "+\t\t</xsd:attribute>",
                "+\t\t<xsd:attribute name=\"ref\" type=\"xsd:string\" use=\"required\">",
                "+\t\t\t<xsd:annotation>",
                "+\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe bean name of the listener object, implementing",
                "+\tthe MessageListener/SessionAwareMessageListener interface",
                "+\tor defining the specified listener method. Required.",
                "+\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t<xsd:appinfo>",
                "+\t\t\t\t\t<tool:annotation kind=\"ref\"/>",
                "+\t\t\t\t</xsd:appinfo>",
                "+\t\t\t</xsd:annotation>",
                "+\t\t</xsd:attribute>",
                "+\t\t<xsd:attribute name=\"method\" type=\"xsd:string\">",
                "+\t\t\t<xsd:annotation>",
                "+\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe name of the listener method to invoke. If not specified,",
                "+\tthe target bean is supposed to implement the MessageListener",
                "+\tor SessionAwareMessageListener interface.",
                "+\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t</xsd:annotation>",
                "+\t\t</xsd:attribute>",
                "+\t\t<xsd:attribute name=\"response-destination\" type=\"xsd:string\">",
                "+\t\t\t<xsd:annotation>",
                "+\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe name of the default response destination to send response messages to.",
                "+\tThis will be applied in case of a request message that does not carry",
                "+\ta \"JMSReplyTo\" field. The type of this destination will be determined",
                "+\tby the listener-container's \"response-destination-type\" attribute.",
                "+\tNote: This only applies to a listener method with a return value,",
                "+\tfor which each result object will be converted into a response message.",
                "+\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t</xsd:annotation>",
                "+\t\t</xsd:attribute>",
                "+\t\t<xsd:attribute name=\"concurrency\" type=\"xsd:string\">",
                "+\t\t\t<xsd:annotation>",
                "+\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe number of concurrent sessions/consumers to start for this listener.",
                "+\tCan either be a simple number indicating the maximum number (e.g. \"5\")",
                "+\tor a range indicating the lower as well as the upper limit (e.g. \"3-5\").",
                "+\tNote that a specified minimum is just a hint and might be ignored at runtime.",
                "+\tDefault is the value provided by the container.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t</xsd:annotation>",
                "+\t\t</xsd:attribute>",
                "+\t</xsd:complexType>",
                "+",
                "+</xsd:schema>",
                "diff --git a/src/asciidoc/integration.adoc b/src/asciidoc/integration.adoc",
                "index cc87dc13fe..d89ea0a30c 100644",
                "--- a/src/asciidoc/integration.adoc",
                "+++ b/src/asciidoc/integration.adoc",
                "@@ -2871,3 +2871,3 @@ describes all available attributes:",
                "   type of this destination will be determined by the listener-container's",
                "-  \"destination-type\" attribute. Note: This only applies to a listener method with a",
                "+  \"response-destination-type\" attribute. Note: This only applies to a listener method with a",
                "   return value, for which each result object will be converted into a response message.",
                "@@ -2960,2 +2960,6 @@ choices and message redelivery scenarios.",
                "+| response-destination-type",
                "+| The JMS destination type for responses: \"queue\", \"topic\". Default is the value of the",
                "+  \"destination-type\" attribute.",
                "+",
                " | client-id",
                "@@ -3066,2 +3070,6 @@ table:",
                "+| response-destination-type",
                "+| The JMS destination type for responses: \"queue\", \"topic\". Default is the value of the",
                "+  \"destination-type\" attribute.",
                "+",
                " | client-id"
            ],
            "changed_files": [
                "spring-jms/src/main/java/org/springframework/jms/config/AbstractJmsListenerContainerFactory.java",
                "spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java",
                "spring-jms/src/main/java/org/springframework/jms/listener/AbstractMessageListenerContainer.java",
                "spring-jms/src/main/java/org/springframework/jms/listener/MessageListenerContainer.java",
                "spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsActivationSpecConfig.java",
                "spring-jms/src/main/java/org/springframework/jms/listener/endpoint/JmsMessageEndpointManager.java",
                "spring-jms/src/main/resources/META-INF/spring.schemas",
                "spring-jms/src/main/resources/org/springframework/jms/config/spring-jms-4.2.xsd",
                "src/asciidoc/integration.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: expose",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: endpoint, message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f98a6c6b6ac6e391f3eee7c4a7f8690a869403fd",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429201109,
            "hunks": 8,
            "message": "Support expression in @SendTo The attributes of @JmsListener allows to specify the reference to a key in the Environment but @SendTo did not. This commit fixes this inconsistency so that response destinations are now also externally configurable. Issue: SPR-12899",
            "diff": [
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java",
                "index 54b8e98f80..ce245f609d 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -249,2 +249,3 @@ public class JmsListenerAnnotationBeanPostProcessor",
                " \t\tendpoint.setMessageHandlerMethodFactory(this.messageHandlerMethodFactory);",
                "+\t\tendpoint.setBeanFactory(this.beanFactory);",
                " \t\tendpoint.setId(getEndpointId(jmsListener));",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java b/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java",
                "index 848ff3d593..013146b95a 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java",
                "@@ -23,2 +23,4 @@ import org.springframework.aop.framework.AopProxyUtils;",
                " import org.springframework.aop.support.AopUtils;",
                "+import org.springframework.beans.factory.BeanFactory;",
                "+import org.springframework.beans.factory.config.ConfigurableBeanFactory;",
                " import org.springframework.core.annotation.AnnotationUtils;",
                "@@ -48,2 +50,4 @@ public class MethodJmsListenerEndpoint extends AbstractJmsListenerEndpoint {",
                "+\tprivate BeanFactory beanFactory;",
                "+",
                "@@ -80,2 +84,8 @@ public class MethodJmsListenerEndpoint extends AbstractJmsListenerEndpoint {",
                "+\t/**",
                "+\t * Set the {@link BeanFactory} to use to resolve expressions (can be null).",
                "+\t */",
                "+\tpublic void setBeanFactory(BeanFactory beanFactory) {",
                "+\t\tthis.beanFactory = beanFactory;",
                "+\t}",
                "@@ -112,3 +122,6 @@ public class MethodJmsListenerEndpoint extends AbstractJmsListenerEndpoint {",
                "-\tprivate String getDefaultResponseDestination() {",
                "+\t/**",
                "+\t * Return the default response destination, if any.",
                "+\t */",
                "+\tprotected String getDefaultResponseDestination() {",
                " \t\tMethod specificMethod = getMostSpecificMethod();",
                "@@ -121,3 +134,3 @@ public class MethodJmsListenerEndpoint extends AbstractJmsListenerEndpoint {",
                " \t\t\t}",
                "-\t\t\treturn (String) destinations[0];",
                "+\t\t\treturn resolve((String) destinations[0]);",
                " \t\t}",
                "@@ -126,2 +139,14 @@ public class MethodJmsListenerEndpoint extends AbstractJmsListenerEndpoint {",
                "+\t/**",
                "+\t * Resolve the specified value if possible.",
                "+\t * @see ConfigurableBeanFactory#resolveEmbeddedValue",
                "+\t */",
                "+\tprivate String resolve(String value) {",
                "+\t\tif (this.beanFactory instanceof ConfigurableBeanFactory) {",
                "+\t\t\treturn ((ConfigurableBeanFactory) this.beanFactory).resolveEmbeddedValue(value);",
                "+\t\t}",
                "+\t\treturn value;",
                "+\t}",
                "+",
                "+",
                " \tprivate Method getMostSpecificMethod() {"
            ],
            "changed_files": [
                "spring-jms/src/main/java/org/springframework/jms/annotation/JmsListenerAnnotationBeanPostProcessor.java",
                "spring-jms/src/main/java/org/springframework/jms/config/MethodJmsListenerEndpoint.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: allow",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: endpoint",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f3994467c4e1094f5229d05c5679550f956cba8e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522182738,
            "hunks": 20,
            "message": "Refine ContentNegotiationStrategy contract Consistently return \"*/*\" if no media types were requested rather than an empty list. Existing code has to check for both in any case to see if nothing was requested. Issue: SPR-16624",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.java b/spring-web/src/main/java/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.java",
                "index 1ebfe6bae0..045e90297f 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -124,3 +124,3 @@ public abstract class AbstractMappingContentNegotiationStrategy extends MappingM",
                " \t\t}",
                "-\t\treturn Collections.emptyList();",
                "+\t\treturn MEDIA_TYPE_ALL_LIST;",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManager.java b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManager.java",
                "index 3b910adcb8..1213161bc7 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManager.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManager.java",
                "@@ -47,5 +47,2 @@ public class ContentNegotiationManager implements ContentNegotiationStrategy, Me",
                "-\tprivate static final List<MediaType> MEDIA_TYPE_ALL = Collections.singletonList(MediaType.ALL);",
                "-",
                "-",
                " \tprivate final List<ContentNegotiationStrategy> strategies = new ArrayList<>();",
                "@@ -127,3 +124,3 @@ public class ContentNegotiationManager implements ContentNegotiationStrategy, Me",
                " \t\t\tList<MediaType> mediaTypes = strategy.resolveMediaTypes(request);",
                "-\t\t\tif (mediaTypes.isEmpty() || mediaTypes.equals(MEDIA_TYPE_ALL)) {",
                "+\t\t\tif (mediaTypes.equals(MEDIA_TYPE_ALL_LIST)) {",
                " \t\t\t\tcontinue;",
                "@@ -132,3 +129,3 @@ public class ContentNegotiationManager implements ContentNegotiationStrategy, Me",
                " \t\t}",
                "-\t\treturn Collections.emptyList();",
                "+\t\treturn MEDIA_TYPE_ALL_LIST;",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationStrategy.java b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationStrategy.java",
                "index 6f998e73c4..b84569419d 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationStrategy.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationStrategy.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,2 +18,3 @@ package org.springframework.web.accept;",
                "+import java.util.Collections;",
                " import java.util.List;",
                "@@ -33,2 +34,10 @@ public interface ContentNegotiationStrategy {",
                "+\t/**",
                "+\t * A singleton list with {@link MediaType#ALL} that is returned from",
                "+\t * {@link #resolveMediaTypes} when no specific media types are requested.",
                "+\t * @since 5.0.5",
                "+\t */",
                "+\tList<MediaType> MEDIA_TYPE_ALL_LIST = Collections.singletonList(MediaType.ALL);",
                "+",
                "+",
                " \t/**",
                "@@ -37,3 +46,4 @@ public interface ContentNegotiationStrategy {",
                " \t * @param webRequest the current request",
                "-\t * @return the requested media types or an empty list (never {@code null})",
                "+\t * @return the requested media types, or {@link #MEDIA_TYPE_ALL_LIST} if none",
                "+\t * were requested.",
                " \t * @throws HttpMediaTypeNotAcceptableException if the requested media",
                "diff --git a/spring-web/src/main/java/org/springframework/web/accept/HeaderContentNegotiationStrategy.java b/spring-web/src/main/java/org/springframework/web/accept/HeaderContentNegotiationStrategy.java",
                "index c758ea4bbe..96dd2ba536 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/accept/HeaderContentNegotiationStrategy.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/accept/HeaderContentNegotiationStrategy.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,2 @@ package org.springframework.web.accept;",
                " import java.util.Arrays;",
                "-import java.util.Collections;",
                " import java.util.List;",
                "@@ -25,2 +24,3 @@ import org.springframework.http.InvalidMediaTypeException;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.util.CollectionUtils;",
                " import org.springframework.web.HttpMediaTypeNotAcceptableException;",
                "@@ -47,3 +47,3 @@ public class HeaderContentNegotiationStrategy implements ContentNegotiationStrat",
                " \t\tif (headerValueArray == null) {",
                "-\t\t\treturn Collections.emptyList();",
                "+\t\t\treturn MEDIA_TYPE_ALL_LIST;",
                " \t\t}",
                "@@ -54,3 +54,3 @@ public class HeaderContentNegotiationStrategy implements ContentNegotiationStrat",
                " \t\t\tMediaType.sortBySpecificityAndQuality(mediaTypes);",
                "-\t\t\treturn mediaTypes;",
                "+\t\t\treturn !CollectionUtils.isEmpty(mediaTypes) ? mediaTypes : MEDIA_TYPE_ALL_LIST;",
                " \t\t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java",
                "index 660b36106d..df84690ad4 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java",
                "@@ -261,4 +261,3 @@ public final class ProducesRequestCondition extends AbstractRequestCondition<Pro",
                " \tprivate List<MediaType> getAcceptedMediaTypes(HttpServletRequest request) throws HttpMediaTypeNotAcceptableException {",
                "-\t\tList<MediaType> mediaTypes = this.contentNegotiationManager.resolveMediaTypes(new ServletWebRequest(request));",
                "-\t\treturn mediaTypes.isEmpty() ? Collections.singletonList(MediaType.ALL) : mediaTypes;",
                "+\t\treturn this.contentNegotiationManager.resolveMediaTypes(new ServletWebRequest(request));",
                " \t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "index 36adce100e..807affee65 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -367,4 +367,3 @@ public abstract class AbstractMessageConverterMethodProcessor extends AbstractMe",
                "-\t\tList<MediaType> types = this.contentNegotiationManager.resolveMediaTypes(new ServletWebRequest(request));",
                "-\t\treturn (types.isEmpty() ? Collections.singletonList(MediaType.ALL) : types);",
                "+\t\treturn this.contentNegotiationManager.resolveMediaTypes(new ServletWebRequest(request));",
                " \t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java",
                "index 2c555203cc..d8bfc12916 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -255,7 +255,3 @@ public class ContentNegotiatingViewResolver extends WebApplicationObjectSupport",
                " \t\t\tServletWebRequest webRequest = new ServletWebRequest(request);",
                "-",
                " \t\t\tList<MediaType> acceptableMediaTypes = this.contentNegotiationManager.resolveMediaTypes(webRequest);",
                "-\t\t\tacceptableMediaTypes = (!acceptableMediaTypes.isEmpty() ? acceptableMediaTypes :",
                "-\t\t\t\t\tCollections.singletonList(MediaType.ALL));",
                "-",
                " \t\t\tList<MediaType> producibleMediaTypes = getProducibleMediaTypes(request);"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/accept/AbstractMappingContentNegotiationStrategy.java",
                "spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationManager.java",
                "spring-web/src/main/java/org/springframework/web/accept/ContentNegotiationStrategy.java",
                "spring-web/src/main/java/org/springframework/web/accept/HeaderContentNegotiationStrategy.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/ProducesRequestCondition.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/ContentNegotiatingViewResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: code",
                    "relevance": 4
                },
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f046a066eceefa0799d1bc89bd6e1318f39bdf69",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522192921,
            "hunks": 4,
            "message": "Simplified separator check within isInvalidEncodedPath Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "index e8cbd8ee50..63baaf1baa 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "@@ -287,9 +287,5 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "-\t\t\t\tint separatorIndex = decodedPath.indexOf(\"..\") + 2;",
                "-\t\t\t\tif (separatorIndex > 1 && separatorIndex < decodedPath.length()) {",
                "-\t\t\t\t\tchar separator = decodedPath.charAt(separatorIndex);",
                "-\t\t\t\t\tif (separator == '/' || separator == '\\\\') {",
                "-\t\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "-\t\t\t\t\t\t}",
                "+\t\t\t\tif (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\")) {",
                "+\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + resourcePath + \"]\");",
                " \t\t\t\t\t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "index 9bd4a5f92c..531167c1d3 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "@@ -71,5 +71,5 @@ import org.springframework.web.util.UrlPathHelper;",
                "  * <p>The {@linkplain #setLocations \"locations\"} property takes a list of Spring",
                "- * {@link Resource} locations from which static resources are allowed to",
                "- * be served by this handler. Resources could be served from a classpath location,",
                "- * e.g. \"classpath:/META-INF/public-web-resources/\", allowing convenient packaging",
                "+ * {@link Resource} locations from which static resources are allowed to be served",
                "+ * by this handler. Resources could be served from a classpath location, e.g.",
                "+ * \"classpath:/META-INF/public-web-resources/\", allowing convenient packaging",
                "  * and serving of resources such as .js, .css, and others in jar files.",
                "@@ -79,12 +79,11 @@ import org.springframework.web.util.UrlPathHelper;",
                "  * {@link #setResourceTransformers(List) resourceTransformer} chains to support",
                "- * arbitrary resolution and transformation of resources being served. By default a",
                "- * {@link PathResourceResolver} simply finds resources based on the configured",
                "- * \"locations\". An application can configure additional resolvers and",
                "- * transformers such as the {@link VersionResourceResolver} which can resolve",
                "- * and prepare URLs for resources with a version in the URL.",
                "+ * arbitrary resolution and transformation of resources being served. By default",
                "+ * a {@link PathResourceResolver} simply finds resources based on the configured",
                "+ * \"locations\". An application can configure additional resolvers and transformers",
                "+ * such as the {@link VersionResourceResolver} which can resolve and prepare URLs",
                "+ * for resources with a version in the URL.",
                "  *",
                "- * <p>This handler also properly evaluates the {@code Last-Modified} header (if",
                "- * present) so that a {@code 304} status code will be returned as appropriate,",
                "- * avoiding unnecessary overhead for resources that are already cached by the",
                "- * client.",
                "+ * <p>This handler also properly evaluates the {@code Last-Modified} header",
                "+ * (if present) so that a {@code 304} status code will be returned as appropriate,",
                "+ * avoiding unnecessary overhead for resources that are already cached by the client.",
                "  *"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f59ea610dfcf55cd0b42f6dd76a9b3dab0218aaa"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: code",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "08dad4e3aca7072feafb9d32860e77c5325ddf0a",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522332300,
            "hunks": 42,
            "message": "Consistent references to primitive types (in alphabetical order)",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java b/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java",
                "index 73aa91d5e2..42cbccb14e 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -51,5 +51,5 @@ public class TypeDescriptor implements Serializable {",
                "-\tstatic final Annotation[] EMPTY_ANNOTATION_ARRAY = new Annotation[0];",
                "+\tprivate static final Annotation[] EMPTY_ANNOTATION_ARRAY = new Annotation[0];",
                "-\tprivate static final Map<Class<?>, TypeDescriptor> commonTypesCache = new HashMap<>(18);",
                "+\tprivate static final Map<Class<?>, TypeDescriptor> commonTypesCache = new HashMap<>(32);",
                "@@ -57,4 +57,4 @@ public class TypeDescriptor implements Serializable {",
                " \t\t\tboolean.class, Boolean.class, byte.class, Byte.class, char.class, Character.class,",
                "-\t\t\tdouble.class, Double.class, int.class, Integer.class, long.class, Long.class,",
                "-\t\t\tfloat.class, Float.class, short.class, Short.class, String.class, Object.class};",
                "+\t\t\tdouble.class, Double.class, float.class, Float.class, int.class, Integer.class,",
                "+\t\t\tlong.class, Long.class, short.class, Short.class, String.class, Object.class};",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "index 659107ca9b..66b232c88d 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "@@ -480,11 +480,8 @@ public class CodeFlow implements Opcodes {",
                " \t\tif (clazz.isPrimitive()) {",
                "-\t\t\tif (clazz == Void.TYPE) {",
                "-\t\t\t\tsb.append('V');",
                "-\t\t\t}",
                "-\t\t\telse if (clazz == Integer.TYPE) {",
                "-\t\t\t\tsb.append('I');",
                "-\t\t\t}",
                "-\t\t\telse if (clazz == Boolean.TYPE) {",
                "+\t\t\tif (clazz == Boolean.TYPE) {",
                " \t\t\t\tsb.append('Z');",
                " \t\t\t}",
                "+\t\t\telse if (clazz == Byte.TYPE) {",
                "+\t\t\t\tsb.append('B');",
                "+\t\t\t}",
                " \t\t\telse if (clazz == Character.TYPE) {",
                "@@ -492,5 +489,2 @@ public class CodeFlow implements Opcodes {",
                " \t\t\t}",
                "-\t\t\telse if (clazz == Long.TYPE) {",
                "-\t\t\t\tsb.append('J');",
                "-\t\t\t}",
                " \t\t\telse if (clazz == Double.TYPE) {",
                "@@ -501,4 +495,7 @@ public class CodeFlow implements Opcodes {",
                " \t\t\t}",
                "-\t\t\telse if (clazz == Byte.TYPE) {",
                "-\t\t\t\tsb.append('B');",
                "+\t\t\telse if (clazz == Integer.TYPE) {",
                "+\t\t\t\tsb.append('I');",
                "+\t\t\t}",
                "+\t\t\telse if (clazz == Long.TYPE) {",
                "+\t\t\t\tsb.append('J');",
                " \t\t\t}",
                "@@ -507,2 +504,5 @@ public class CodeFlow implements Opcodes {",
                " \t\t\t}",
                "+\t\t\telse if (clazz == Void.TYPE) {",
                "+\t\t\t\tsb.append('V');",
                "+\t\t\t}",
                " \t\t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java",
                "index 76762beeac..5575f5ba93 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java",
                "@@ -297,5 +297,2 @@ public class ConstructorReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (arrayTypeCode == TypeCode.INT) {",
                "-\t\t\t\tpopulateIntArray(state, newArray, typeConverter, initializer);",
                "-\t\t\t}",
                " \t\t\telse if (arrayTypeCode == TypeCode.BOOLEAN) {",
                "@@ -303,2 +300,5 @@ public class ConstructorReference extends SpelNodeImpl {",
                " \t\t\t}",
                "+\t\t\telse if (arrayTypeCode == TypeCode.BYTE) {",
                "+\t\t\t\tpopulateByteArray(state, newArray, typeConverter, initializer);",
                "+\t\t\t}",
                " \t\t\telse if (arrayTypeCode == TypeCode.CHAR) {",
                "@@ -306,8 +306,2 @@ public class ConstructorReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (arrayTypeCode == TypeCode.LONG) {",
                "-\t\t\t\tpopulateLongArray(state, newArray, typeConverter, initializer);",
                "-\t\t\t}",
                "-\t\t\telse if (arrayTypeCode == TypeCode.SHORT) {",
                "-\t\t\t\tpopulateShortArray(state, newArray, typeConverter, initializer);",
                "-\t\t\t}",
                " \t\t\telse if (arrayTypeCode == TypeCode.DOUBLE) {",
                "@@ -318,4 +312,10 @@ public class ConstructorReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (arrayTypeCode == TypeCode.BYTE) {",
                "-\t\t\t\tpopulateByteArray(state, newArray, typeConverter, initializer);",
                "+\t\t\telse if (arrayTypeCode == TypeCode.INT) {",
                "+\t\t\t\tpopulateIntArray(state, newArray, typeConverter, initializer);",
                "+\t\t\t}",
                "+\t\t\telse if (arrayTypeCode == TypeCode.LONG) {",
                "+\t\t\t\tpopulateLongArray(state, newArray, typeConverter, initializer);",
                "+\t\t\t}",
                "+\t\t\telse if (arrayTypeCode == TypeCode.SHORT) {",
                "+\t\t\t\tpopulateShortArray(state, newArray, typeConverter, initializer);",
                " \t\t\t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                "index 4a26b4a27d..64a19263aa 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                "@@ -337,3 +337,18 @@ public class Indexer extends SpelNodeImpl {",
                "-\t\tif (arrayComponentType == Double.TYPE) {",
                "+\t\tif (arrayComponentType == Boolean.TYPE) {",
                "+\t\t\tboolean[] array = (boolean[]) ctx;",
                "+\t\t\tcheckAccess(array.length, idx);",
                "+\t\t\tarray[idx] = convertValue(converter, newValue, Boolean.class);",
                "+\t\t}",
                "+\t\telse if (arrayComponentType == Byte.TYPE) {",
                "+\t\t\tbyte[] array = (byte[]) ctx;",
                "+\t\t\tcheckAccess(array.length, idx);",
                "+\t\t\tarray[idx] = convertValue(converter, newValue, Byte.class);",
                "+\t\t}",
                "+\t\telse if (arrayComponentType == Character.TYPE) {",
                "+\t\t\tchar[] array = (char[]) ctx;",
                "+\t\t\tcheckAccess(array.length, idx);",
                "+\t\t\tarray[idx] = convertValue(converter, newValue, Character.class);",
                "+\t\t}",
                "+\t\telse if (arrayComponentType == Double.TYPE) {",
                " \t\t\tdouble[] array = (double[]) ctx;",
                "@@ -347,7 +362,2 @@ public class Indexer extends SpelNodeImpl {",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Long.TYPE) {",
                "-\t\t\tlong[] array = (long[]) ctx;",
                "-\t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tarray[idx] = convertValue(converter, newValue, Long.class);",
                "-\t\t}",
                " \t\telse if (arrayComponentType == Integer.TYPE) {",
                "@@ -357,2 +367,7 @@ public class Indexer extends SpelNodeImpl {",
                " \t\t}",
                "+\t\telse if (arrayComponentType == Long.TYPE) {",
                "+\t\t\tlong[] array = (long[]) ctx;",
                "+\t\t\tcheckAccess(array.length, idx);",
                "+\t\t\tarray[idx] = convertValue(converter, newValue, Long.class);",
                "+\t\t}",
                " \t\telse if (arrayComponentType == Short.TYPE) {",
                "@@ -362,17 +377,2 @@ public class Indexer extends SpelNodeImpl {",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Byte.TYPE) {",
                "-\t\t\tbyte[] array = (byte[]) ctx;",
                "-\t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tarray[idx] = convertValue(converter, newValue, Byte.class);",
                "-\t\t}",
                "-\t\telse if (arrayComponentType == Character.TYPE) {",
                "-\t\t\tchar[] array = (char[]) ctx;",
                "-\t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tarray[idx] = convertValue(converter, newValue, Character.class);",
                "-\t\t}",
                "-\t\telse if (arrayComponentType == Boolean.TYPE) {",
                "-\t\t\tboolean[] array = (boolean[]) ctx;",
                "-\t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tarray[idx] = convertValue(converter, newValue, Boolean.class);",
                "-\t\t}",
                " \t\telse {",
                "@@ -386,48 +386,48 @@ public class Indexer extends SpelNodeImpl {",
                " \t\tClass<?> arrayComponentType = ctx.getClass().getComponentType();",
                "-\t\tif (arrayComponentType == Double.TYPE) {",
                "-\t\t\tdouble[] array = (double[]) ctx;",
                "+\t\tif (arrayComponentType == Boolean.TYPE) {",
                "+\t\t\tboolean[] array = (boolean[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"D\";",
                "+\t\t\tthis.exitTypeDescriptor = \"Z\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Float.TYPE) {",
                "-\t\t\tfloat[] array = (float[]) ctx;",
                "+\t\telse if (arrayComponentType == Byte.TYPE) {",
                "+\t\t\tbyte[] array = (byte[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"F\";",
                "+\t\t\tthis.exitTypeDescriptor = \"B\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Long.TYPE) {",
                "-\t\t\tlong[] array = (long[]) ctx;",
                "+\t\telse if (arrayComponentType == Character.TYPE) {",
                "+\t\t\tchar[] array = (char[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"J\";",
                "+\t\t\tthis.exitTypeDescriptor = \"C\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Integer.TYPE) {",
                "-\t\t\tint[] array = (int[]) ctx;",
                "+\t\telse if (arrayComponentType == Double.TYPE) {",
                "+\t\t\tdouble[] array = (double[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"I\";",
                "+\t\t\tthis.exitTypeDescriptor = \"D\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Short.TYPE) {",
                "-\t\t\tshort[] array = (short[]) ctx;",
                "+\t\telse if (arrayComponentType == Float.TYPE) {",
                "+\t\t\tfloat[] array = (float[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"S\";",
                "+\t\t\tthis.exitTypeDescriptor = \"F\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Byte.TYPE) {",
                "-\t\t\tbyte[] array = (byte[]) ctx;",
                "+\t\telse if (arrayComponentType == Integer.TYPE) {",
                "+\t\t\tint[] array = (int[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"B\";",
                "+\t\t\tthis.exitTypeDescriptor = \"I\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Character.TYPE) {",
                "-\t\t\tchar[] array = (char[]) ctx;",
                "+\t\telse if (arrayComponentType == Long.TYPE) {",
                "+\t\t\tlong[] array = (long[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"C\";",
                "+\t\t\tthis.exitTypeDescriptor = \"J\";",
                " \t\t\treturn array[idx];",
                " \t\t}",
                "-\t\telse if (arrayComponentType == Boolean.TYPE) {",
                "-\t\t\tboolean[] array = (boolean[]) ctx;",
                "+\t\telse if (arrayComponentType == Short.TYPE) {",
                "+\t\t\tshort[] array = (short[]) ctx;",
                " \t\t\tcheckAccess(array.length, idx);",
                "-\t\t\tthis.exitTypeDescriptor = \"Z\";",
                "+\t\t\tthis.exitTypeDescriptor = \"S\";",
                " \t\t\treturn array[idx];",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeCode.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeCode.java",
                "index fe785b1a39..2595365508 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeCode.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeCode.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -34,3 +34,5 @@ public enum TypeCode {",
                "-\tSHORT(Short.TYPE),",
                "+\tDOUBLE(Double.TYPE),",
                "+",
                "+\tFLOAT(Float.TYPE),",
                "@@ -40,5 +42,3 @@ public enum TypeCode {",
                "-\tFLOAT(Float.TYPE),",
                "-",
                "-\tDOUBLE(Double.TYPE);",
                "+\tSHORT(Short.TYPE);",
                "@@ -66,3 +66,3 @@ public enum TypeCode {",
                " \t\t}",
                "-\t\treturn TypeCode.OBJECT;",
                "+\t\treturn OBJECT;",
                " \t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeReference.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeReference.java",
                "index 8f96013cf0..2de5c0ae44 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeReference.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeReference.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -105,6 +105,3 @@ public class TypeReference extends SpelNodeImpl {",
                " \t\tif (this.type.isPrimitive()) {",
                "-\t\t\tif (this.type == Integer.TYPE) {",
                "-\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Integer\", \"TYPE\", \"Ljava/lang/Class;\");",
                "-\t\t\t}",
                "-\t\t\telse if (this.type == Boolean.TYPE) {",
                "+\t\t\tif (this.type == Boolean.TYPE) {",
                " \t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Boolean\", \"TYPE\", \"Ljava/lang/Class;\");",
                "@@ -114,4 +111,4 @@ public class TypeReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (this.type == Short.TYPE) {",
                "-\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Short\", \"TYPE\", \"Ljava/lang/Class;\");",
                "+\t\t\telse if (this.type == Character.TYPE) {",
                "+\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Character\", \"TYPE\", \"Ljava/lang/Class;\");",
                " \t\t\t}",
                "@@ -120,5 +117,2 @@ public class TypeReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (this.type == Character.TYPE) {",
                "-\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Character\", \"TYPE\", \"Ljava/lang/Class;\");",
                "-\t\t\t}",
                " \t\t\telse if (this.type == Float.TYPE) {",
                "@@ -126,2 +120,5 @@ public class TypeReference extends SpelNodeImpl {",
                " \t\t\t}",
                "+\t\t\telse if (this.type == Integer.TYPE) {",
                "+\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Integer\", \"TYPE\", \"Ljava/lang/Class;\");",
                "+\t\t\t}",
                " \t\t\telse if (this.type == Long.TYPE) {",
                "@@ -129,5 +126,5 @@ public class TypeReference extends SpelNodeImpl {",
                " \t\t\t}",
                "-\t\t\telse if (this.type == Boolean.TYPE) {",
                "-\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Boolean\", \"TYPE\", \"Ljava/lang/Class;\");",
                "-\t        }",
                "+\t\t\telse if (this.type == Short.TYPE) {",
                "+\t\t\t\tmv.visitFieldInsn(GETSTATIC, \"java/lang/Short\", \"TYPE\", \"Ljava/lang/Class;\");",
                "+\t\t\t}",
                " \t\t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/convert/TypeDescriptor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/ConstructorReference.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/Indexer.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeCode.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/TypeReference.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "64f304c33376dff829c14b15fd3ab8bf1f2ae2cb"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: code",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1897d8e85843174e18d164b2eebb08c14b988999",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522195348,
            "hunks": 4,
            "message": "Always specify charset for form data requests Issue: SPR-16613",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "index d5d595dd9c..9442273149 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "@@ -95,2 +95,5 @@ public class FormHttpMessageConverter implements HttpMessageConverter<MultiValue",
                "+\tprivate static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =",
                "+\t\t\tnew MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);",
                "+",
                "@@ -281,11 +284,10 @@ public class FormHttpMessageConverter implements HttpMessageConverter<MultiValue",
                "-\t\tCharset charset;",
                "-\t\tif (contentType != null) {",
                "-\t\t\toutputMessage.getHeaders().setContentType(contentType);",
                "-\t\t\tcharset = (contentType.getCharset() != null ? contentType.getCharset() : this.charset);",
                "-\t\t}",
                "-\t\telse {",
                "-\t\t\toutputMessage.getHeaders().setContentType(MediaType.APPLICATION_FORM_URLENCODED);",
                "+\t\tcontentType = (contentType != null ? contentType : DEFAULT_FORM_DATA_MEDIA_TYPE);",
                "+\t\tCharset charset = contentType.getCharset();",
                "+\t\tif (charset == null) {",
                " \t\t\tcharset = this.charset;",
                "+\t\t\tcontentType = new MediaType(contentType, charset);",
                " \t\t}",
                "+\t\toutputMessage.getHeaders().setContentType(contentType);",
                "+",
                " \t\tStringBuilder builder = new StringBuilder();"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5861e9685bfa6556ffdd56e76df6bd83829fbba6"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: message",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e02ff3a0da50744b0980d5d665fd242eedea7675",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521856350,
            "hunks": 3,
            "message": "MimeTypeUtils uses SecureRandom The prevailing current wisdom is to use the default constructor for secure and let it pick the best algorithm for the OS. On Java 8 (Oracle), Linux this results in \"NativePRNG\" which uses /dev/random (potentially blocking) for the initial seed, and /dev/urandom (non-blocking) for subsequent calls to nextInt. Issue: SPR-16635",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "index 5b3a7a0f2b..6cf7e00107 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -20,2 +20,3 @@ import java.nio.charset.Charset;",
                " import java.nio.charset.UnsupportedCharsetException;",
                "+import java.security.SecureRandom;",
                " import java.util.ArrayList;",
                "@@ -48,3 +49,3 @@ public abstract class MimeTypeUtils {",
                "-\tprivate static final Random RND = new Random();",
                "+\tprivate static final Random RND = new SecureRandom();"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "ab2410c754b67902f002bfcc0c3895bd7772d39f"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "SEC_KEYWORDS_IN_MESSAGE",
                    "message": "The commit message contains some security-related keywords: secure",
                    "relevance": 4
                },
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "72bbb2619dcd2d71f4333fb501a7495ef34eec53",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521169944,
            "hunks": 8,
            "message": "Commit actions are (properly) deferred Issue: SPR-16597",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java b/spring-web/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java",
                "index 3a83764aa6..272b2823f9 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java",
                "@@ -47,2 +47,5 @@ public interface ReactiveHttpOutputMessage extends HttpMessage {",
                " \t * Register an action to apply just before the HttpOutputMessage is committed.",
                "+\t * <p><strong>Note:</strong> the supplied action must be properly deferred,",
                "+\t * e.g. via {@link Mono#defer} or {@link Mono#fromRunnable}, to ensure it's",
                "+\t * executed in the right order, relative to other actions.",
                " \t * @param action the action to apply",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java",
                "index 3ad0e93700..ec6d5aaf94 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java",
                "@@ -211,9 +211,9 @@ public abstract class AbstractServerHttpResponse implements ServerHttpResponse {",
                "-\t\tthis.commitActions.add(() -> {",
                "-\t\t\tapplyStatusCode();",
                "-\t\t\tapplyHeaders();",
                "-\t\t\tapplyCookies();",
                "-\t\t\tthis.state.set(State.COMMITTED);",
                "-\t\t\treturn Mono.empty();",
                "-\t\t});",
                "+\t\tthis.commitActions.add(() ->",
                "+\t\t\t\tMono.fromRunnable(() -> {",
                "+\t\t\t\t\tapplyStatusCode();",
                "+\t\t\t\t\tapplyHeaders();",
                "+\t\t\t\t\tapplyCookies();",
                "+\t\t\t\t\tthis.state.set(State.COMMITTED);",
                "+\t\t\t\t}));",
                "@@ -226,3 +226,3 @@ public abstract class AbstractServerHttpResponse implements ServerHttpResponse {",
                "-\t\treturn Flux.concat(actions).next();",
                "+\t\treturn Flux.concat(actions).then();",
                " \t}",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java b/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "index 3804bb4b8a..d6c93f896c 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -113,24 +113,26 @@ class UndertowServerHttpResponse extends AbstractListenerServerHttpResponse impl",
                " \tpublic Mono<Void> writeWith(File file, long position, long count) {",
                "-\t\treturn doCommit(() -> {",
                "-\t\t\tFileChannel source = null;",
                "-\t\t\ttry {",
                "-\t\t\t\tsource = FileChannel.open(file.toPath(), StandardOpenOption.READ);",
                "-\t\t\t\tStreamSinkChannel destination = this.exchange.getResponseChannel();",
                "-\t\t\t\tChannels.transferBlocking(destination, source, position, count);",
                "-\t\t\t\treturn Mono.empty();",
                "-\t\t\t}",
                "-\t\t\tcatch (IOException ex) {",
                "-\t\t\t\treturn Mono.error(ex);",
                "-\t\t\t}",
                "-\t\t\tfinally {",
                "-\t\t\t\tif (source != null) {",
                "+\t\treturn doCommit(() ->",
                "+\t\t\t\tMono.defer(() -> {",
                "+\t\t\t\t\tFileChannel source = null;",
                " \t\t\t\t\ttry {",
                "-\t\t\t\t\t\tsource.close();",
                "+\t\t\t\t\t\tsource = FileChannel.open(file.toPath(), StandardOpenOption.READ);",
                "+\t\t\t\t\t\tStreamSinkChannel destination = this.exchange.getResponseChannel();",
                "+\t\t\t\t\t\tChannels.transferBlocking(destination, source, position, count);",
                "+\t\t\t\t\t\treturn Mono.empty();",
                " \t\t\t\t\t}",
                " \t\t\t\t\tcatch (IOException ex) {",
                "-\t\t\t\t\t\t// ignore",
                "+\t\t\t\t\t\treturn Mono.error(ex);",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t});",
                "+\t\t\t\t\tfinally {",
                "+\t\t\t\t\t\tif (source != null) {",
                "+\t\t\t\t\t\t\ttry {",
                "+\t\t\t\t\t\t\t\tsource.close();",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\tcatch (IOException ex) {",
                "+\t\t\t\t\t\t\t\t// ignore",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+",
                "+\t\t\t\t}));",
                " \t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/ReactiveHttpOutputMessage.java",
                "spring-web/src/main/java/org/springframework/http/server/reactive/AbstractServerHttpResponse.java",
                "spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "1cd0f433e0a5dd9b659143664ea432d24b4386eb",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429801178,
            "hunks": 17,
            "message": "Allow MvcUriComponentsBuilder instance with baseUrl Before this change MvcUriComponentsBuilder exposed only static factory methods for creating links where the links are relative to the current request or a baseUrl explicitly provided as an argument. This change allows creating an MvcUriComponents builder instance with a built-in baseUrl. The instance can then be used with non-static withXxx(...) method alternatives to the static fromXxx(...) methods. Issue: SPR-12617",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "index 058cbb126d..7b8a7c271f 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "@@ -66,4 +66,15 @@ import org.springframework.web.util.UriComponentsBuilder;",
                " /**",
                "- * A UriComponentsBuilder that helps to build URIs to Spring MVC controllers",
                "- * and methods from their request mappings.",
                "+ * Creates instances of {@link org.springframework.web.util.UriComponentsBuilder}",
                "+ * by pointing to Spring MVC controllers and {@code @RequestMapping} methods.",
                "+ *",
                "+ * <p>The static {@code fromXxx(...)} methods prepare links relative to the",
                "+ * current request as determined by a call to",
                "+ * {@link org.springframework.web.servlet.support.ServletUriComponentsBuilder#fromCurrentServletMapping()}.",
                "+ *",
                "+ * <p>The static {@code fromXxx(UriComponentsBuilder,...)} methods can be given",
                "+ * the baseUrl when operating outside the context of a request.",
                "+ *",
                "+ * <p>You can also create an MvcUriComponentsBuilder instance with a baseUrl",
                "+ * via {@link #relativeTo(org.springframework.web.util.UriComponentsBuilder)}",
                "+ * and then use the non-static {@code withXxx(...)} method variants.",
                "  *",
                "@@ -96,2 +107,4 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                "+\tprivate final UriComponentsBuilder baseUrl;",
                "+",
                "@@ -106,3 +119,5 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                " \t */",
                "-\tprotected MvcUriComponentsBuilder() {",
                "+\tprotected MvcUriComponentsBuilder(UriComponentsBuilder baseUrl) {",
                "+\t\tAssert.notNull(baseUrl, \"'baseUrl' is required\");",
                "+\t\tthis.baseUrl = baseUrl;",
                " \t}",
                "@@ -115,4 +130,15 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\tsuper(other);",
                "+\t\tthis.baseUrl = other.baseUrl;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create an instance of this class with a base URL. After that calls to one",
                "+\t * of the instance based {@code withXxx(...}} methods will create URLs relative",
                "+\t * to the given base URL.",
                "+\t */",
                "+\tpublic static MvcUriComponentsBuilder relativeTo(UriComponentsBuilder baseUrl) {",
                "+\t\treturn new MvcUriComponentsBuilder(baseUrl);",
                " \t}",
                "+",
                " \t/**",
                "@@ -318,2 +344,19 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                " \tpublic static MethodArgumentBuilder fromMappingName(String mappingName) {",
                "+\t\treturn fromMappingName(null, mappingName);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * An alternative to {@link #fromMappingName(String)} that accepts a",
                "+\t * {@code UriComponentsBuilder} representing the base URL. This is useful",
                "+\t * when using MvcUriComponentsBuilder outside the context of processing a",
                "+\t * request or to apply a custom baseUrl not matching the current request.",
                "+\t * @param builder the builder for the base URL; the builder will be cloned",
                "+\t * and therefore not modified and may be re-used for further calls.",
                "+\t * @param mappingName the mapping name",
                "+\t * @return a builder to to prepare the URI String",
                "+\t * @throws IllegalArgumentException if the mapping name is not found or",
                "+\t * if there is no unique match",
                "+\t * @since 4.2",
                "+\t */",
                "+\tpublic static MethodArgumentBuilder fromMappingName(UriComponentsBuilder builder, String mappingName) {",
                " \t\tRequestMappingInfoHandlerMapping handlerMapping = getRequestMappingInfoHandlerMapping();",
                "@@ -327,3 +370,3 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\t}",
                "-\t\treturn new MethodArgumentBuilder(handlerMethods.get(0).getMethod());",
                "+\t\treturn new MethodArgumentBuilder(builder, handlerMethods.get(0).getMethod());",
                " \t}",
                "@@ -532,2 +575,42 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                "+\t/**",
                "+\t * An alternative to {@link #fromController(Class)} for use with an instance",
                "+\t * of this class created via a call to {@link #relativeTo}.",
                "+\t */",
                "+\tpublic UriComponentsBuilder withController(Class<?> controllerType) {",
                "+\t\treturn fromController(this.baseUrl, controllerType);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * An alternative to {@link #fromMethodName(Class, String, Object...)}} for",
                "+\t * use with an instance of this class created via {@link #relativeTo}.",
                "+\t */",
                "+\tpublic UriComponentsBuilder withMethodName(Class<?> controllerType, String methodName, Object... args) {",
                "+\t\treturn fromMethodName(this.baseUrl, controllerType, methodName, args);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * An alternative to {@link #fromMethodCall(Object)} for use with an instance",
                "+\t * of this class created via {@link #relativeTo}.",
                "+\t */",
                "+\tpublic UriComponentsBuilder withMethodCall(Object invocationInfo) {",
                "+\t\treturn fromMethodCall(this.baseUrl, invocationInfo);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * An alternative to {@link #fromMappingName(String)} for use with an instance",
                "+\t * of this class created via {@link #relativeTo}.",
                "+\t */",
                "+\tpublic MethodArgumentBuilder withMappingName(String mappingName) {",
                "+\t\treturn fromMappingName(this.baseUrl, mappingName);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * An alternative to {@link #fromMethod(java.lang.reflect.Method, Object...)}",
                "+\t * for use with an instance of this class created via {@link #relativeTo}.",
                "+\t */",
                "+\tpublic UriComponentsBuilder withMethod(Method method, Object... args) {",
                "+\t\treturn fromMethod(this.baseUrl, method, args);",
                "+\t}",
                "+",
                " \t@Override",
                "@@ -592,5 +675,12 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                "+\t\tprivate final UriComponentsBuilder baseUrl;",
                "+",
                " \t\tpublic MethodArgumentBuilder(Method method) {",
                "+\t\t\tthis(null, method);",
                "+\t\t}",
                "+",
                "+\t\tpublic MethodArgumentBuilder(UriComponentsBuilder baseUrl, Method method) {",
                " \t\t\tAssert.notNull(method, \"'method' is required\");",
                "+\t\t\tthis.baseUrl = baseUrl;",
                " \t\t\tthis.method = method;",
                "@@ -608,3 +698,3 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\tpublic String build() {",
                "-\t\t\treturn MvcUriComponentsBuilder.fromMethod(this.method, this.argumentValues)",
                "+\t\t\treturn MvcUriComponentsBuilder.fromMethod(this.baseUrl, this.method, this.argumentValues)",
                " \t\t\t\t\t.build(false).encode().toUriString();",
                "@@ -613,3 +703,3 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\tpublic String buildAndExpand(Object... uriVariables) {",
                "-\t\t\treturn MvcUriComponentsBuilder.fromMethod(this.method, this.argumentValues)",
                "+\t\t\treturn MvcUriComponentsBuilder.fromMethod(this.baseUrl, this.method, this.argumentValues)",
                " \t\t\t\t\t.build(false).expand(uriVariables).encode().toString();",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/UriComponentsBuilderMethodArgumentResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/UriComponentsBuilderMethodArgumentResolver.java",
                "index 74e632f2a9..d01f2e8cb7 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/UriComponentsBuilderMethodArgumentResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/UriComponentsBuilderMethodArgumentResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -28,2 +28,3 @@ import org.springframework.web.util.UriComponentsBuilder;",
                "+",
                " /**",
                "@@ -39,5 +40,7 @@ public class UriComponentsBuilderMethodArgumentResolver implements HandlerMethod",
                "+",
                " \t@Override",
                " \tpublic boolean supportsParameter(MethodParameter parameter) {",
                "-\t\treturn UriComponentsBuilder.class.isAssignableFrom(parameter.getParameterType());",
                "+\t\tClass<?> type = parameter.getParameterType();",
                "+\t\treturn (UriComponentsBuilder.class.equals(type) || ServletUriComponentsBuilder.class.equals(type));",
                " \t}"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/UriComponentsBuilderMethodArgumentResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: expose, allow",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "d553ddc5b3a657adebad04d9f3c7d466fbdd7b05",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522360217,
            "hunks": 50,
            "message": "Nullability refinements (based on IntelliJ IDEA 2018.1 introspection) Issue: SPR-15756",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java",
                "index 5819471ee8..f9712f4af2 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/BeanUtils.java",
                "@@ -369,5 +369,5 @@ public abstract class BeanUtils {",
                " \t\tAssert.notNull(clazz, \"Class must not be null\");",
                "-\t\tint firstParen = signature.indexOf('(');",
                "-\t\tint lastParen = signature.indexOf(')');",
                "-\t\tif (firstParen > -1 && lastParen == -1) {",
                "+\t\tint startParen = signature.indexOf('(');",
                "+\t\tint endParen = signature.indexOf(')');",
                "+\t\tif (startParen > -1 && endParen == -1) {",
                " \t\t\tthrow new IllegalArgumentException(\"Invalid method signature '\" + signature +",
                "@@ -375,3 +375,3 @@ public abstract class BeanUtils {",
                " \t\t}",
                "-\t\telse if (lastParen > -1 && firstParen == -1) {",
                "+\t\telse if (startParen == -1 && endParen > -1) {",
                " \t\t\tthrow new IllegalArgumentException(\"Invalid method signature '\" + signature +",
                "@@ -379,3 +379,3 @@ public abstract class BeanUtils {",
                " \t\t}",
                "-\t\telse if (firstParen == -1 && lastParen == -1) {",
                "+\t\telse if (startParen == -1) {",
                " \t\t\treturn findMethodWithMinimalParameters(clazz, signature);",
                "@@ -383,5 +383,5 @@ public abstract class BeanUtils {",
                " \t\telse {",
                "-\t\t\tString methodName = signature.substring(0, firstParen);",
                "+\t\t\tString methodName = signature.substring(0, startParen);",
                " \t\t\tString[] parameterTypeNames =",
                "-\t\t\t\t\tStringUtils.commaDelimitedListToStringArray(signature.substring(firstParen + 1, lastParen));",
                "+\t\t\t\t\tStringUtils.commaDelimitedListToStringArray(signature.substring(startParen + 1, endParen));",
                " \t\t\tClass<?>[] parameterTypes = new Class<?>[parameterTypeNames.length];",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/wiring/BeanConfigurerSupport.java b/spring-beans/src/main/java/org/springframework/beans/factory/wiring/BeanConfigurerSupport.java",
                "index 601b06b34a..22944cf04c 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/wiring/BeanConfigurerSupport.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/wiring/BeanConfigurerSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -146,7 +146,8 @@ public class BeanConfigurerSupport implements BeanFactoryAware, InitializingBean",
                " \t\ttry {",
                "-\t\t\tif (bwi.indicatesAutowiring() || (bwi.isDefaultBeanName() && bwi.getBeanName() != null &&",
                "-\t\t\t\t\t!beanFactory.containsBean(bwi.getBeanName()))) {",
                "+\t\t\tString beanName = bwi.getBeanName();",
                "+\t\t\tif (bwi.indicatesAutowiring() || (bwi.isDefaultBeanName() && beanName != null &&",
                "+\t\t\t\t\t!beanFactory.containsBean(beanName))) {",
                " \t\t\t\t// Perform autowiring (also applying standard factory / post-processor callbacks).",
                " \t\t\t\tbeanFactory.autowireBeanProperties(beanInstance, bwi.getAutowireMode(), bwi.getDependencyCheck());",
                "-\t\t\t\tbeanFactory.initializeBean(beanInstance, bwi.getBeanName());",
                "+\t\t\t\tbeanFactory.initializeBean(beanInstance, (beanName != null ? beanName : \"\"));",
                " \t\t\t}",
                "@@ -154,3 +155,3 @@ public class BeanConfigurerSupport implements BeanFactoryAware, InitializingBean",
                " \t\t\t\t// Perform explicit wiring based on the specified bean definition.",
                "-\t\t\t\tbeanFactory.configureBean(beanInstance, bwi.getBeanName());",
                "+\t\t\t\tbeanFactory.configureBean(beanInstance, (beanName != null ? beanName : \"\"));",
                " \t\t\t}",
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "index 71790901d9..2d3bb969dc 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "@@ -590,3 +590,3 @@ class ConfigurationClassParser {",
                " \tprivate void processImports(ConfigurationClass configClass, SourceClass currentSourceClass,",
                "-\t\t\tCollection<SourceClass> importCandidates, boolean checkForCircularImports) throws IOException {",
                "+\t\t\tCollection<SourceClass> importCandidates, boolean checkForCircularImports) {",
                "@@ -1035,5 +1035,5 @@ class ConfigurationClassParser {",
                " \t\t\t\t\t\"Illegal attempt by @Configuration class '%s' to import class '%s' as '%s' is \" +",
                "-\t\t\t\t\t\"already present in the current import stack %s\", importStack.peek().getSimpleName(),",
                "+\t\t\t\t\t\"already present in the current import stack %s\", importStack.element().getSimpleName(),",
                " \t\t\t\t\tattemptedImport.getSimpleName(), attemptedImport.getSimpleName(), importStack),",
                "-\t\t\t\t\tnew Location(importStack.peek().getResource(), attemptedImport.getMetadata()));",
                "+\t\t\t\t\tnew Location(importStack.element().getResource(), attemptedImport.getMetadata()));",
                " \t\t}",
                "diff --git a/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "index 2d38c021b6..f0cb18e4df 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "@@ -368,3 +368,3 @@ public class ApplicationListenerMethodAdapter implements GenericApplicationListe",
                " \t\t\t}",
                "-\t\t\tif (declaredEventType.getRawClass().isInstance(event)) {",
                "+\t\t\tif (eventClass != null && eventClass.isInstance(event)) {",
                " \t\t\t\treturn declaredEventType;",
                "diff --git a/spring-core/src/main/java/org/springframework/util/ClassUtils.java b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "index c0023dacad..33bf4bbf3c 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "@@ -211,10 +211,2 @@ public abstract class ClassUtils {",
                "-\t/**",
                "-\t * Determine if the supplied class is an <em>inner class</em>.",
                "-\t * @return {@code true} if the supplied class is an inner class",
                "-\t */",
                "-\tpublic static boolean isInnerClass(Class<?> clazz) {",
                "-\t\treturn clazz != null && clazz.isMemberClass() && !Modifier.isStatic(clazz.getModifiers());",
                "-\t}",
                "-",
                " \t/**",
                "@@ -385,2 +377,13 @@ public abstract class ClassUtils {",
                "+\t/**",
                "+\t * Determine if the supplied class is an <em>inner class</em>,",
                "+\t * i.e. a non-static member of an enclosing class.",
                "+\t * @return {@code true} if the supplied class is an inner class",
                "+\t * @since 5.0.5",
                "+\t * @see Class#isMemberClass()",
                "+\t */",
                "+\tpublic static boolean isInnerClass(Class<?> clazz) {",
                "+\t\treturn (clazz.isMemberClass() && !Modifier.isStatic(clazz.getModifiers()));",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java b/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java",
                "index 6f7aba4772..3c581db9e8 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -138,4 +138,5 @@ public class ListenableFutureCallbackRegistry<T> {",
                " \t\t\tthis.result = result;",
                "-\t\t\twhile (!this.successCallbacks.isEmpty()) {",
                "-\t\t\t\tnotifySuccess(this.successCallbacks.poll());",
                "+\t\t\tSuccessCallback<? super T> callback;",
                "+\t\t\twhile ((callback = this.successCallbacks.poll()) != null) {",
                "+\t\t\t\tnotifySuccess(callback);",
                " \t\t\t}",
                "@@ -153,4 +154,5 @@ public class ListenableFutureCallbackRegistry<T> {",
                " \t\t\tthis.result = ex;",
                "-\t\t\twhile (!this.failureCallbacks.isEmpty()) {",
                "-\t\t\t\tnotifyFailure(this.failureCallbacks.poll());",
                "+\t\t\tFailureCallback callback;",
                "+\t\t\twhile ((callback = this.failureCallbacks.poll()) != null) {",
                "+\t\t\t\tnotifyFailure(callback);",
                " \t\t\t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "index 66b232c88d..934f15a05a 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "@@ -60,3 +60,3 @@ public class CodeFlow implements Opcodes {",
                " \t */",
                "-\tprivate final Deque<ArrayList<String>> compilationScopes;",
                "+\tprivate final Deque<List<String>> compilationScopes;",
                "@@ -130,3 +130,3 @@ public class CodeFlow implements Opcodes {",
                " \t\tif (descriptor != null) {",
                "-\t\t\tthis.compilationScopes.peek().add(descriptor);",
                "+\t\t\tthis.compilationScopes.element().add(descriptor);",
                " \t\t}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java b/spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java",
                "index 3f244d4142..42f2e3d336 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java",
                "@@ -108,3 +108,3 @@ public class ExpressionState {",
                " \t\t}",
                "-\t\treturn this.contextObjects.peek();",
                "+\t\treturn this.contextObjects.element();",
                " \t}",
                "@@ -138,3 +138,3 @@ public class ExpressionState {",
                " \t\t}",
                "-\t\treturn this.scopeRootObjects.peek();",
                "+\t\treturn this.scopeRootObjects.element();",
                " \t}",
                "@@ -159,4 +159,4 @@ public class ExpressionState {",
                " \tpublic Object convertValue(Object value, TypeDescriptor targetTypeDescriptor) throws EvaluationException {",
                "-\t\tObject result = this.relatedContext.getTypeConverter().convertValue(value,",
                "-\t\t\t\tTypeDescriptor.forObject(value), targetTypeDescriptor);",
                "+\t\tObject result = this.relatedContext.getTypeConverter().convertValue(",
                "+\t\t\t\tvalue, TypeDescriptor.forObject(value), targetTypeDescriptor);",
                " \t\tif (result == null) {",
                "@@ -174,3 +174,4 @@ public class ExpressionState {",
                " \t\tObject val = value.getValue();",
                "-\t\treturn this.relatedContext.getTypeConverter().convertValue(val, TypeDescriptor.forObject(val), targetTypeDescriptor);",
                "+\t\treturn this.relatedContext.getTypeConverter().convertValue(",
                "+\t\t\t\tval, TypeDescriptor.forObject(val), targetTypeDescriptor);",
                " \t}",
                "@@ -201,3 +202,3 @@ public class ExpressionState {",
                " \tpublic void setLocalVariable(String name, Object value) {",
                "-\t\tinitVariableScopes().peek().setVariable(name, value);",
                "+\t\tinitVariableScopes().element().setVariable(name, value);",
                " \t}",
                "@@ -214,6 +215,6 @@ public class ExpressionState {",
                "-\tprivate LinkedList<VariableScope> initVariableScopes() {",
                "+\tprivate Deque<VariableScope> initVariableScopes() {",
                " \t\tif (this.variableScopes == null) {",
                " \t\t\tthis.variableScopes = new LinkedList<>();",
                "-\t\t\t// top level empty variable scope",
                "+\t\t\t// top-level empty variable scope",
                " \t\t\tthis.variableScopes.add(new VariableScope());",
                "@@ -223,3 +224,3 @@ public class ExpressionState {",
                "-\tprivate ArrayDeque<TypedValue> initScopeRootObjects() {",
                "+\tprivate Deque<TypedValue> initScopeRootObjects() {",
                " \t\tif (this.scopeRootObjects == null) {",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/ast/ValueRef.java b/spring-expression/src/main/java/org/springframework/expression/spel/ast/ValueRef.java",
                "index 85f47c4dfb..702f0e5c6a 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/ast/ValueRef.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/ast/ValueRef.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -60,3 +60,3 @@ public interface ValueRef {",
                " \t */",
                "-\tstatic class NullValueRef implements ValueRef {",
                "+\tclass NullValueRef implements ValueRef {",
                "@@ -87,3 +87,3 @@ public interface ValueRef {",
                " \t */",
                "-\tstatic class TypedValueHolderValueRef implements ValueRef {",
                "+\tclass TypedValueHolderValueRef implements ValueRef {",
                "@@ -93,3 +93,3 @@ public interface ValueRef {",
                "-\t\tpublic TypedValueHolderValueRef(TypedValue typedValue,SpelNodeImpl node) {",
                "+\t\tpublic TypedValueHolderValueRef(TypedValue typedValue, SpelNodeImpl node) {",
                " \t\t\tthis.typedValue = typedValue;",
                "diff --git a/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java b/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "index db1388326a..7fc7767412 100644",
                "--- a/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "+++ b/spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -270,12 +270,9 @@ abstract class AbstractListenerContainerParser implements BeanDefinitionParser {",
                " \t\tString replyDestinationType = containerEle.getAttribute(RESPONSE_DESTINATION_TYPE_ATTRIBUTE);",
                "-\t\tif (DESTINATION_TYPE_TOPIC.equals(replyDestinationType)) {",
                "-\t\t\treplyPubSubDomain = true;",
                "-\t\t}",
                "-\t\telse if (DESTINATION_TYPE_QUEUE.equals(replyDestinationType)) {",
                "-\t\t\treplyPubSubDomain = false;",
                "+\t\tif (!StringUtils.hasText(replyDestinationType)) {",
                "+\t\t\treplyPubSubDomain = pubSubDomain;  // the default: same value as pubSubDomain",
                " \t\t}",
                "-\t\telse if (!StringUtils.hasText(replyDestinationType)) {",
                "-\t\t\treplyPubSubDomain = pubSubDomain; // the default: same value as pubSubDomain",
                "+\t\telse if (DESTINATION_TYPE_TOPIC.equals(replyDestinationType)) {",
                "+\t\t\treplyPubSubDomain = true;",
                " \t\t}",
                "-\t\telse if (StringUtils.hasText(replyDestinationType)) {",
                "+\t\telse if (!DESTINATION_TYPE_QUEUE.equals(replyDestinationType)) {",
                " \t\t\tparserContext.getReaderContext().error(\"Invalid listener container 'response-destination-type': only \" +",
                "diff --git a/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java b/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java",
                "index 841de69fa9..b2108b471f 100644",
                "--- a/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java",
                "+++ b/spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -211,2 +211,3 @@ public class SimpleNamingContext implements Context {",
                " \t@Override",
                "+\t@Nullable",
                " \tpublic Object addToEnvironment(String propName, Object propVal) {",
                "diff --git a/spring-web/src/main/java/org/springframework/http/codec/xml/Jaxb2XmlDecoder.java b/spring-web/src/main/java/org/springframework/http/codec/xml/Jaxb2XmlDecoder.java",
                "index 90ed50eaf0..a51802eb40 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/codec/xml/Jaxb2XmlDecoder.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/codec/xml/Jaxb2XmlDecoder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -224,2 +224,3 @@ public class Jaxb2XmlDecoder extends AbstractDecoder<Object> {",
                " \t\t\tif (this.elementDepth > this.barrier) {",
                "+\t\t\t\tAssert.state(this.events != null, \"No XMLEvent List\");",
                " \t\t\t\tthis.events.add(event);",
                "@@ -230,2 +231,3 @@ public class Jaxb2XmlDecoder extends AbstractDecoder<Object> {",
                " \t\t\t\t\tthis.barrier = Integer.MAX_VALUE;",
                "+\t\t\t\t\tAssert.state(this.events != null, \"No XMLEvent List\");",
                " \t\t\t\t\treturn Mono.just(this.events);",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/DefaultPathContainer.java b/spring-web/src/main/java/org/springframework/http/server/DefaultPathContainer.java",
                "index 5a715d1fb1..e97418f818 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/DefaultPathContainer.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/DefaultPathContainer.java",
                "@@ -182,5 +182,5 @@ class DefaultPathContainer implements PathContainer {",
                "-\t\tAssert.isTrue(fromIndex < toIndex, () -> \"fromIndex: \" + fromIndex + \" should be < toIndex \" + toIndex);",
                " \t\tAssert.isTrue(fromIndex >= 0 && fromIndex < elements.size(), () -> \"Invalid fromIndex: \" + fromIndex);",
                " \t\tAssert.isTrue(toIndex >= 0 && toIndex <= elements.size(), () -> \"Invalid toIndex: \" + toIndex);",
                "+\t\tAssert.isTrue(fromIndex < toIndex, () -> \"fromIndex: \" + fromIndex + \" should be < toIndex \" + toIndex);",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java b/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "index 7d93e21374..52abd5e5d0 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "@@ -111,5 +111,3 @@ class UndertowServerHttpResponse extends AbstractListenerServerHttpResponse impl",
                " \t\t\t\tMono.defer(() -> {",
                "-\t\t\t\t\tFileChannel source = null;",
                "-\t\t\t\t\ttry {",
                "-\t\t\t\t\t\tsource = FileChannel.open(file.toPath(), StandardOpenOption.READ);",
                "+\t\t\t\t\ttry (FileChannel source = FileChannel.open(file.toPath(), StandardOpenOption.READ)) {",
                " \t\t\t\t\t\tStreamSinkChannel destination = this.exchange.getResponseChannel();",
                "@@ -121,13 +119,2 @@ class UndertowServerHttpResponse extends AbstractListenerServerHttpResponse impl",
                " \t\t\t\t\t}",
                "-\t\t\t\t\tfinally {",
                "-\t\t\t\t\t\tif (source != null) {",
                "-\t\t\t\t\t\t\ttry {",
                "-\t\t\t\t\t\t\t\tsource.close();",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\tcatch (IOException ex) {",
                "-\t\t\t\t\t\t\t\t// ignore",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t}",
                "-\t\t\t\t\t}",
                "-",
                " \t\t\t\t}));",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "index 4cda6ab082..5841b899a9 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -85,3 +85,3 @@ public abstract class AbstractView implements View, ApplicationContextAware {",
                " \t */",
                "-\tpublic void setSupportedMediaTypes(@Nullable List<MediaType> supportedMediaTypes) {",
                "+\tpublic void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {",
                " \t\tAssert.notEmpty(supportedMediaTypes, \"MediaType List must not be empty\");",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "index 637303983d..bd621ae75f 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -25,3 +25,2 @@ import org.springframework.core.Ordered;",
                " import org.springframework.http.MediaType;",
                "-import org.springframework.lang.Nullable;",
                " import org.springframework.util.Assert;",
                "@@ -56,3 +55,3 @@ public abstract class ViewResolverSupport implements Ordered {",
                " \t */",
                "-\tpublic void setSupportedMediaTypes(@Nullable List<MediaType> supportedMediaTypes) {",
                "+\tpublic void setSupportedMediaTypes(List<MediaType> supportedMediaTypes) {",
                " \t\tAssert.notEmpty(supportedMediaTypes, \"MediaType List must not be empty\");"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/BeanUtils.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/wiring/BeanConfigurerSupport.java",
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "spring-context/src/main/java/org/springframework/context/event/ApplicationListenerMethodAdapter.java",
                "spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "spring-core/src/main/java/org/springframework/util/concurrent/ListenableFutureCallbackRegistry.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/CodeFlow.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ExpressionState.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/ast/ValueRef.java",
                "spring-jms/src/main/java/org/springframework/jms/config/AbstractListenerContainerParser.java",
                "spring-test/src/main/java/org/springframework/mock/jndi/SimpleNamingContext.java",
                "spring-web/src/main/java/org/springframework/http/codec/xml/Jaxb2XmlDecoder.java",
                "spring-web/src/main/java/org/springframework/http/server/DefaultPathContainer.java",
                "spring-web/src/main/java/org/springframework/http/server/reactive/UndertowServerHttpResponse.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: code, application",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "b9b0b78fa1f80efa5f5549a862d44d11b0bc3ba1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429662384,
            "hunks": 17,
            "message": "Support n meta-annotation levels on methods in AnnotationUtils Prior to this commit, the search algorithm used by the findAnnotation(Method, Class) method in AnnotationUtils only found direct annotations or direct meta-annotations (i.e., one level of meta-annotations). This commit reworks the search algorithm so that it supports arbitrary levels of meta-annotations on methods. To make this possible, a new findAnnotation(AnnotatedElement, Class) method has been introduced in AnnotationUtils. This fix also allows for the @Ignore'd tests in TransactionalEventListenerTests to be re-enabled. Issue: SPR-12941",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 5ec94f43dd..9db91d5ff1 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -93,4 +93,5 @@ public abstract class AnnotationUtils {",
                " \t * thereof.",
                "-\t * <p>Note that this method does <em>not</em> support arbitrary levels of",
                "-\t * meta-annotations.",
                "+\t * <p>Note that this method supports only a single level of meta-annotations.",
                "+\t * For support for arbitrary levels of meta-annotations, use one of the",
                "+\t * {@code find*()} methods instead.",
                " \t * @param ann the Annotation to check",
                "@@ -117,5 +118,7 @@ public abstract class AnnotationUtils {",
                " \t * Get a single {@link Annotation} of {@code annotationType} from the supplied",
                "-\t * {@link AnnotatedElement}.",
                "-\t * <p>Meta-annotations will be searched if the annotation is not",
                "-\t * <em>directly present</em> on the supplied element.",
                "+\t * {@link AnnotatedElement}, where the {@code AnnotatedElement} is either",
                "+\t * directly annotated or meta-annotated with the {@code annotationType}.",
                "+\t * <p>Note that this method supports only a single level of meta-annotations.",
                "+\t * For support for arbitrary levels of meta-annotations, use",
                "+\t * {@link #findAnnotation(AnnotatedElement, Class)} instead.",
                " \t * @param annotatedElement the {@code AnnotatedElement} from which to get the annotation",
                "@@ -146,6 +149,9 @@ public abstract class AnnotationUtils {",
                " \t/**",
                "-\t * Get a single {@link Annotation} of {@code annotationType} from the supplied {@link Method}.",
                "+\t * Get a single {@link Annotation} of {@code annotationType} from the",
                "+\t * supplied {@link Method}, where the method is either directly annotated",
                "+\t * or meta-annotated with the {@code annotationType}.",
                " \t * <p>Correctly handles bridge {@link Method Methods} generated by the compiler.",
                "-\t * <p>Meta-annotations will be searched if the annotation is not",
                "-\t * <em>directly present</em> on the supplied method.",
                "+\t * <p>Note that this method supports only a single level of meta-annotations.",
                "+\t * For support for arbitrary levels of meta-annotations, use",
                "+\t * {@link #findAnnotation(Method, Class)} instead.",
                " \t * @param method the method to look for annotations on",
                "@@ -258,8 +264,68 @@ public abstract class AnnotationUtils {",
                " \t/**",
                "-\t * Find a single {@link Annotation} of {@code annotationType} from the supplied",
                "+\t * Find a single {@link Annotation} of {@code annotationType} on the",
                "+\t * supplied {@link AnnotatedElement}.",
                "+\t * <p>Meta-annotations will be searched if the annotation is not",
                "+\t * <em>directly present</em> on the supplied element.",
                "+\t * <p><strong>Warning</strong>: this method operates generically on",
                "+\t * annotated elements. In other words, this method does not execute",
                "+\t * specialized search algorithms for classes or methods. If you require",
                "+\t * the more specific semantics of {@link #findAnnotation(Class, Class)}",
                "+\t * or {@link #findAnnotation(Method, Class)}, invoke one of those methods",
                "+\t * instead.",
                "+\t * @param annotatedElement the {@code AnnotatedElement} on which to find the annotation",
                "+\t * @param annotationType the annotation type to look for, both locally and as a meta-annotation",
                "+\t * @return the matching annotation, or {@code null} if not found",
                "+\t * @since 4.2",
                "+\t */",
                "+\tpublic static <A extends Annotation> A findAnnotation(AnnotatedElement annotatedElement, Class<A> annotationType) {",
                "+\t\t// Do NOT store result in the findAnnotationCache since doing so could break",
                "+\t\t// findAnnotation(Class, Class) and findAnnotation(Method, Class).",
                "+\t\treturn findAnnotation(annotatedElement, annotationType, new HashSet<Annotation>());",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Perform the search algorithm for {@link #findAnnotation(AnnotatedElement, Class)}",
                "+\t * avoiding endless recursion by tracking which annotations have already",
                "+\t * been <em>visited</em>.",
                "+\t * @param annotatedElement the {@code AnnotatedElement} on which to find the annotation",
                "+\t * @param annotationType the annotation type to look for, both locally and as a meta-annotation",
                "+\t * @param visited the set of annotations that have already been visited",
                "+\t * @return the matching annotation, or {@code null} if not found",
                "+\t * @since 4.2",
                "+\t */",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tprivate static <T extends Annotation> T findAnnotation(AnnotatedElement annotatedElement, Class<T> annotationType, Set<Annotation> visited) {",
                "+\t\tAssert.notNull(annotatedElement, \"AnnotatedElement must not be null\");",
                "+\t\ttry {",
                "+\t\t\tAnnotation[] anns = annotatedElement.getDeclaredAnnotations();",
                "+\t\t\tfor (Annotation ann : anns) {",
                "+\t\t\t\tif (ann.annotationType().equals(annotationType)) {",
                "+\t\t\t\t\treturn (T) ann;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tfor (Annotation ann : anns) {",
                "+\t\t\t\tif (!isInJavaLangAnnotationPackage(ann) && visited.add(ann)) {",
                "+\t\t\t\t\tT annotation = findAnnotation((AnnotatedElement) ann.annotationType(), annotationType, visited);",
                "+\t\t\t\t\tif (annotation != null) {",
                "+\t\t\t\t\t\treturn annotation;",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\tcatch (Exception ex) {",
                "+\t\t\t// Assuming nested Class values not resolvable within annotation attributes...",
                "+\t\t\tlogIntrospectionFailure(annotatedElement, ex);",
                "+\t\t}",
                "+\t\treturn null;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Find a single {@link Annotation} of {@code annotationType} on the supplied",
                " \t * {@link Method}, traversing its super methods (i.e., from superclasses and",
                " \t * interfaces) if no annotation can be found on the given method itself.",
                "+\t * <p>Correctly handles bridge {@link Method Methods} generated by the compiler.",
                "+\t * <p>Meta-annotations will be searched if the annotation is not",
                "+\t * <em>directly present</em> on the method.",
                " \t * <p>Annotations on methods are not inherited by default, so we need to handle",
                " \t * this explicitly.",
                "-\t * <p>Meta-annotations will <em>not</em> be searched.",
                " \t * @param method the method to look for annotations on",
                "@@ -267,2 +333,3 @@ public abstract class AnnotationUtils {",
                " \t * @return the matching annotation, or {@code null} if not found",
                "+\t * @see #getAnnotation(Method, Class)",
                " \t */",
                "@@ -272,8 +339,12 @@ public abstract class AnnotationUtils {",
                " \t\tA result = (A) findAnnotationCache.get(cacheKey);",
                "+",
                " \t\tif (result == null) {",
                "-\t\t\tresult = getAnnotation(method, annotationType);",
                "-\t\t\tClass<?> clazz = method.getDeclaringClass();",
                "+\t\t\tMethod resolvedMethod = BridgeMethodResolver.findBridgedMethod(method);",
                "+\t\t\tresult = findAnnotation((AnnotatedElement) resolvedMethod, annotationType);",
                "+",
                " \t\t\tif (result == null) {",
                "-\t\t\t\tresult = searchOnInterfaces(method, annotationType, clazz.getInterfaces());",
                "+\t\t\t\tresult = searchOnInterfaces(method, annotationType, method.getDeclaringClass().getInterfaces());",
                " \t\t\t}",
                "+",
                "+\t\t\tClass<?> clazz = method.getDeclaringClass();",
                " \t\t\twhile (result == null) {",
                "@@ -285,3 +356,4 @@ public abstract class AnnotationUtils {",
                " \t\t\t\t\tMethod equivalentMethod = clazz.getDeclaredMethod(method.getName(), method.getParameterTypes());",
                "-\t\t\t\t\tresult = getAnnotation(equivalentMethod, annotationType);",
                "+\t\t\t\t\tMethod resolvedEquivalentMethod = BridgeMethodResolver.findBridgedMethod(equivalentMethod);",
                "+\t\t\t\t\tresult = findAnnotation((AnnotatedElement) resolvedEquivalentMethod, annotationType);",
                " \t\t\t\t}",
                "@@ -294,5 +366,6 @@ public abstract class AnnotationUtils {",
                " \t\t\t}",
                "-\t\t\tif (result != null) {",
                "-\t\t\t\tfindAnnotationCache.put(cacheKey, result);",
                "-\t\t\t}",
                "+\t\t}",
                "+",
                "+\t\tif (result != null) {",
                "+\t\t\tfindAnnotationCache.put(cacheKey, result);",
                " \t\t}",
                "@@ -682,3 +755,3 @@ public abstract class AnnotationUtils {",
                " \t/**",
                "-\t * Retrieve the <em>value</em> of the {@code &quot;value&quot;} attribute of a",
                "+\t * Retrieve the <em>value</em> of the {@code value} attribute of a",
                " \t * single-element Annotation, given an annotation instance.",
                "@@ -714,3 +787,3 @@ public abstract class AnnotationUtils {",
                " \t/**",
                "-\t * Retrieve the <em>default value</em> of the {@code &quot;value&quot;} attribute",
                "+\t * Retrieve the <em>default value</em> of the {@code value} attribute",
                " \t * of a single-element Annotation, given an annotation instance.",
                "@@ -739,3 +812,3 @@ public abstract class AnnotationUtils {",
                " \t/**",
                "-\t * Retrieve the <em>default value</em> of the {@code &quot;value&quot;} attribute",
                "+\t * Retrieve the <em>default value</em> of the {@code value} attribute",
                " \t * of a single-element Annotation, given the {@link Class annotation type}."
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: allow",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "13356a7ee2240f740737c5c83bdccdacc30603ab",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522105242,
            "hunks": 11,
            "message": "Consistent encoded path evaluation in reactive ResourceWebHandler and co Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "index 5fa5a20692..37bcff4b23 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,2 +19,3 @@ package org.springframework.web.reactive.resource;",
                " import java.io.IOException;",
                "+import java.io.UnsupportedEncodingException;",
                " import java.net.URLDecoder;",
                "@@ -186,17 +187,17 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\tlocationPath = (locationPath.endsWith(\"/\") || locationPath.isEmpty() ? locationPath : locationPath + \"/\");",
                "-\t\tif (!resourcePath.startsWith(locationPath)) {",
                "-\t\t\treturn false;",
                "-\t\t}",
                "+\t\treturn (resourcePath.startsWith(locationPath) && !isInvalidEncodedPath(resourcePath));",
                "+\t}",
                "+\tprivate boolean isInvalidEncodedPath(String resourcePath) {",
                " \t\tif (resourcePath.contains(\"%\")) {",
                " \t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars...",
                "-\t\t\tif (URLDecoder.decode(resourcePath, \"UTF-8\").contains(\"../\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "-\t\t\t\t}",
                "-\t\t\t\treturn false;",
                "+\t\t\ttry {",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "+\t\t\t\treturn (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\"));",
                "+\t\t\t}",
                "+\t\t\tcatch (UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                " \t\t\t}",
                " \t\t}",
                "-",
                "-\t\treturn true;",
                "+\t\treturn false;",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "index 215a50f6c8..1d1782a392 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "@@ -30,3 +30,2 @@ import org.apache.commons.logging.Log;",
                " import org.apache.commons.logging.LogFactory;",
                "-import reactor.core.Exceptions;",
                " import reactor.core.publisher.Mono;",
                "@@ -316,5 +315,5 @@ public class ResourceWebHandler implements WebHandler, InitializingBean {",
                " \tprotected Mono<Resource> getResource(ServerWebExchange exchange) {",
                "-",
                " \t\tString name = HandlerMapping.PATH_WITHIN_HANDLER_MAPPING_ATTRIBUTE;",
                " \t\tPathContainer pathWithinHandler = exchange.getRequiredAttribute(name);",
                "+",
                " \t\tString path = processPath(pathWithinHandler.value());",
                "@@ -326,27 +325,7 @@ public class ResourceWebHandler implements WebHandler, InitializingBean {",
                " \t\t}",
                "-",
                "-\t\tif (path.contains(\"%\")) {",
                "-\t\t\ttry {",
                "-\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "-\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "-\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\treturn Mono.empty();",
                "-\t\t\t\t}",
                "-\t\t\t\tdecodedPath = processPath(decodedPath);",
                "-\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\treturn Mono.empty();",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t\tcatch (IllegalArgumentException ex) {",
                "-\t\t\t\t// ignore",
                "-\t\t\t}",
                "-\t\t\tcatch (UnsupportedEncodingException ex) {",
                "-\t\t\t\treturn Mono.error(Exceptions.propagate(ex));",
                "+\t\tif (isInvalidEncodedPath(path)) {",
                "+\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"]\");",
                " \t\t\t}",
                "+\t\t\treturn Mono.empty();",
                " \t\t}",
                "@@ -422,2 +401,27 @@ public class ResourceWebHandler implements WebHandler, InitializingBean {",
                "+\t/**",
                "+\t * Check whether the given path contains invalid escape sequences.",
                "+\t * @param path the path to validate",
                "+\t * @return {@code true} if the path is invalid, {@code false} otherwise",
                "+\t */",
                "+\tprivate boolean isInvalidEncodedPath(String path) {",
                "+\t\tif (path.contains(\"%\")) {",
                "+\t\t\ttry {",
                "+\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t\tdecodedPath = processPath(decodedPath);",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (IllegalArgumentException | UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: code",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "706d3adf07988d8248d2a13a6585b2a40388de78",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429910443,
            "hunks": 7,
            "message": "Consistently throw IllegalStateException from getAutowireCapableBeanFactory() Issue: SPR-12932",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/support/GenericApplicationContext.java b/spring-context/src/main/java/org/springframework/context/support/GenericApplicationContext.java",
                "index 9e3626e1d4..aff0017ef9 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/support/GenericApplicationContext.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/support/GenericApplicationContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -19,2 +19,3 @@ package org.springframework.context.support;",
                " import java.io.IOException;",
                "+import java.util.concurrent.atomic.AtomicBoolean;",
                "@@ -23,2 +24,3 @@ import org.springframework.beans.factory.BeanDefinitionStoreException;",
                " import org.springframework.beans.factory.NoSuchBeanDefinitionException;",
                "+import org.springframework.beans.factory.config.AutowireCapableBeanFactory;",
                " import org.springframework.beans.factory.config.BeanDefinition;",
                "@@ -91,3 +93,3 @@ public class GenericApplicationContext extends AbstractApplicationContext implem",
                "-\tprivate boolean refreshed = false;",
                "+\tprivate final AtomicBoolean refreshed = new AtomicBoolean();",
                "@@ -237,3 +239,3 @@ public class GenericApplicationContext extends AbstractApplicationContext implem",
                " \tprotected final void refreshBeanFactory() throws IllegalStateException {",
                "-\t\tif (this.refreshed) {",
                "+\t\tif (!this.refreshed.compareAndSet(false, true)) {",
                " \t\t\tthrow new IllegalStateException(",
                "@@ -242,3 +244,2 @@ public class GenericApplicationContext extends AbstractApplicationContext implem",
                " \t\tthis.beanFactory.setSerializationId(getId());",
                "-\t\tthis.refreshed = true;",
                " \t}",
                "@@ -281,2 +282,8 @@ public class GenericApplicationContext extends AbstractApplicationContext implem",
                "+\t@Override",
                "+\tpublic AutowireCapableBeanFactory getAutowireCapableBeanFactory() throws IllegalStateException {",
                "+\t\tassertBeanFactoryActive();",
                "+\t\treturn this.beanFactory;",
                "+\t}",
                "+"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/support/GenericApplicationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: application",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "28ea718d2d62a43bd54a5795f5c511284508df15",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522531051,
            "hunks": 17,
            "message": "Build setup allows for JDK 10 as source/test target compatibility Includes upgrade to Groovy 2.4.15 and HtmlUnit 2.30. Issue: SPR-16390",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 05d84c74bb..87e262c85c 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -45,3 +45,3 @@ configure(allprojects) { project ->",
                " \text.freemarkerVersion    = \"2.3.27-incubating\"",
                "-\text.groovyVersion        = \"2.4.14\"",
                "+\text.groovyVersion        = \"2.4.15\"",
                " \text.hsqldbVersion        = \"2.4.0\"",
                "@@ -115,3 +115,3 @@ configure(allprojects) { project ->",
                " \tcompileJava {",
                "-\t\tsourceCompatibility = 1.8",
                "+\t\tsourceCompatibility = 1.8  // can be switched to 10 for testing",
                " \t\ttargetCompatibility = 1.8",
                "@@ -121,3 +121,3 @@ configure(allprojects) { project ->",
                " \tcompileTestJava {",
                "-\t\tsourceCompatibility = 1.8",
                "+\t\tsourceCompatibility = 1.8  // can be switched to 10 for testing",
                " \t\ttargetCompatibility = 1.8",
                "diff --git a/spring-aspects/spring-aspects.gradle b/spring-aspects/spring-aspects.gradle",
                "index aa05384ce9..2203096d78 100644",
                "--- a/spring-aspects/spring-aspects.gradle",
                "+++ b/spring-aspects/spring-aspects.gradle",
                "@@ -12,7 +12,3 @@ configurations {",
                "-// exclude spring-aspects as a module within IDEA until IDEA-64446 is resolved",
                "-tasks.getByName(\"idea\").onlyIf { false }",
                "-tasks.getByName(\"ideaModule\").onlyIf { false }",
                "-",
                "-compileJava  {",
                "+compileJava {",
                " \tactions = []",
                "@@ -21,3 +17,2 @@ compileJava  {",
                " \tdef outputDir = project.sourceSets.main.java.outputDir",
                "-",
                " \tinputs.files(project.sourceSets.main.allSource + project.sourceSets.main.compileClasspath)",
                "@@ -25,4 +20,4 @@ compileJava  {",
                "-\text.sourceCompatibility = project(\":spring-core\").compileJava.sourceCompatibility",
                "-\text.targetCompatibility = project(\":spring-core\").compileJava.targetCompatibility",
                "+\tsourceCompatibility = 1.8  // fixed even when general compatibility level set to e.g. 10",
                "+\ttargetCompatibility = 1.8",
                "@@ -51,3 +46,3 @@ compileJava  {",
                "-compileTestJava  {",
                "+compileTestJava {",
                " \tactions = []",
                "@@ -57,3 +52,2 @@ compileTestJava  {",
                " \tdef outputDir = project.sourceSets.test.java.outputDir",
                "-",
                " \tinputs.files(project.sourceSets.test.allSource + project.sourceSets.test.compileClasspath)",
                "@@ -61,4 +55,4 @@ compileTestJava  {",
                "-\text.sourceCompatibility = project(\":spring-core\").compileTestJava.sourceCompatibility",
                "-\text.targetCompatibility = project(\":spring-core\").compileTestJava.targetCompatibility",
                "+\tsourceCompatibility = 1.8  // fixed even when general compatibility level set to e.g. 10",
                "+\ttargetCompatibility = 1.8",
                "diff --git a/spring-context-support/spring-context-support.gradle b/spring-context-support/spring-context-support.gradle",
                "index 84fd61f5ab..b69b27e9e9 100644",
                "--- a/spring-context-support/spring-context-support.gradle",
                "+++ b/spring-context-support/spring-context-support.gradle",
                "@@ -19,2 +19,3 @@ dependencies {",
                " \ttestCompile(\"org.hibernate:hibernate-validator:6.0.9.Final\")",
                "+\ttestCompile(\"javax.annotation:javax.annotation-api:1.3.2\")",
                " \ttestRuntime(\"org.ehcache:jcache:1.0.1\")",
                "@@ -22,3 +23,2 @@ dependencies {",
                " \ttestRuntime(\"org.glassfish:javax.el:3.0.1-b08\")",
                "-\ttestRuntime(\"javax.annotation:javax.annotation-api:1.3.2\")",
                " \ttestRuntime(\"com.sun.mail:javax.mail:1.6.1\")",
                "diff --git a/spring-test/spring-test.gradle b/spring-test/spring-test.gradle",
                "index d2cd0964a9..f921f589a7 100644",
                "--- a/spring-test/spring-test.gradle",
                "+++ b/spring-test/spring-test.gradle",
                "@@ -44,6 +44,6 @@ dependencies {",
                " \t}",
                "-\toptional(\"net.sourceforge.htmlunit:htmlunit:2.29\") {",
                "+\toptional(\"net.sourceforge.htmlunit:htmlunit:2.30\") {",
                " \t\texclude group: \"commons-logging\", module: \"commons-logging\"",
                " \t}",
                "-\toptional(\"org.seleniumhq.selenium:htmlunit-driver:2.29.3\") {",
                "+\toptional(\"org.seleniumhq.selenium:htmlunit-driver:2.30.0\") {",
                " \t\texclude group: \"commons-logging\", module: \"commons-logging\"",
                "@@ -62,2 +62,3 @@ dependencies {",
                " \ttestCompile(project(\":spring-oxm\"))",
                "+\ttestCompile(\"javax.annotation:javax.annotation-api:1.3.2\")",
                " \ttestCompile(\"javax.cache:cache-api:1.1.0\")",
                "@@ -84,2 +85,3 @@ dependencies {",
                " \t// so that we can run JUnit 4 tests in IntelliJ IDEA.",
                "+\ttestCompile('de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1')",
                " \ttestRuntime(\"org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}\")",
                "@@ -87,4 +89,2 @@ dependencies {",
                " \ttestRuntime(\"org.junit.vintage:junit-vintage-engine:${junitVintageVersion}\")",
                "-\ttestCompile('de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1')",
                "-\ttestRuntime(\"javax.annotation:javax.annotation-api:1.3.2\")",
                " \ttestRuntime(\"org.glassfish:javax.el:3.0.1-b08\")",
                "diff --git a/spring-web/spring-web.gradle b/spring-web/spring-web.gradle",
                "index e03cd9ccae..cbe034d1b9 100644",
                "--- a/spring-web/spring-web.gradle",
                "+++ b/spring-web/spring-web.gradle",
                "@@ -31,2 +31,3 @@ dependencies {",
                " \toptional(\"javax.xml.ws:jaxws-api:2.3.0\")",
                "+\toptional(\"org.glassfish.main:javax.jws:4.0-b33\")",
                " \toptional(\"io.reactivex:rxjava:${rxjavaVersion}\")"
            ],
            "changed_files": [
                "build.gradle",
                "spring-aspects/spring-aspects.gradle",
                "spring-context-support/spring-context-support.gradle",
                "spring-test/spring-test.gradle",
                "spring-web/spring-web.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: allow",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "224d52e03286e868c5361bb205f641918a7a7e33",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522183996,
            "hunks": 22,
            "message": "Refine RequestedContentTypeResolver contract Consistently return \"*/*\" if no media types were requested rather than an empty list. Existing code has to check for both in any case to see if nothing was requested. Issue: SPR-16624",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/FixedContentTypeResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/FixedContentTypeResolver.java",
                "index e834c14288..95019daf0f 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/FixedContentTypeResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/FixedContentTypeResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -25,2 +25,3 @@ import org.apache.commons.logging.LogFactory;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.util.Assert;",
                " import org.springframework.web.server.ServerWebExchange;",
                "@@ -40,3 +41,3 @@ public class FixedContentTypeResolver implements RequestedContentTypeResolver {",
                "-\tprivate final List<MediaType> mediaTypes;",
                "+\tprivate final List<MediaType> contentTypes;",
                "@@ -56,4 +57,5 @@ public class FixedContentTypeResolver implements RequestedContentTypeResolver {",
                " \t */",
                "-\tpublic FixedContentTypeResolver(List<MediaType> mediaTypes) {",
                "-\t\tthis.mediaTypes = Collections.unmodifiableList(mediaTypes);",
                "+\tpublic FixedContentTypeResolver(List<MediaType> contentTypes) {",
                "+\t\tAssert.notNull(contentTypes, \"'contentTypes' must not be null\");",
                "+\t\tthis.contentTypes = Collections.unmodifiableList(contentTypes);",
                " \t}",
                "@@ -65,3 +67,3 @@ public class FixedContentTypeResolver implements RequestedContentTypeResolver {",
                " \tpublic List<MediaType> getContentTypes() {",
                "-\t\treturn this.mediaTypes;",
                "+\t\treturn this.contentTypes;",
                " \t}",
                "@@ -72,5 +74,5 @@ public class FixedContentTypeResolver implements RequestedContentTypeResolver {",
                " \t\tif (logger.isDebugEnabled()) {",
                "-\t\t\tlogger.debug(\"Requested media types: \" + this.mediaTypes);",
                "+\t\t\tlogger.debug(\"Requested media types: \" + this.contentTypes);",
                " \t\t}",
                "-\t\treturn this.mediaTypes;",
                "+\t\treturn this.contentTypes;",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/HeaderContentTypeResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/HeaderContentTypeResolver.java",
                "index 58d10e85a8..25ea29048a 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/HeaderContentTypeResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/HeaderContentTypeResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,2 +21,3 @@ import org.springframework.http.InvalidMediaTypeException;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.util.CollectionUtils;",
                " import org.springframework.web.server.NotAcceptableStatusException;",
                "@@ -37,3 +38,3 @@ public class HeaderContentTypeResolver implements RequestedContentTypeResolver {",
                " \t\t\tMediaType.sortBySpecificityAndQuality(mediaTypes);",
                "-\t\t\treturn mediaTypes;",
                "+\t\t\treturn !CollectionUtils.isEmpty(mediaTypes) ? mediaTypes : MEDIA_TYPE_ALL_LIST;",
                " \t\t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/ParameterContentTypeResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/ParameterContentTypeResolver.java",
                "index 29a71761f3..82e34ed9cf 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/ParameterContentTypeResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/ParameterContentTypeResolver.java",
                "@@ -74,3 +74,3 @@ public class ParameterContentTypeResolver implements RequestedContentTypeResolve",
                " \t\tif (!StringUtils.hasText(key)) {",
                "-\t\t\treturn Collections.emptyList();",
                "+\t\t\treturn MEDIA_TYPE_ALL_LIST;",
                " \t\t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolver.java",
                "index d4479708c6..0cfeb1ca96 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,2 +18,3 @@ package org.springframework.web.reactive.accept;",
                "+import java.util.Collections;",
                " import java.util.List;",
                "@@ -35,2 +36,10 @@ public interface RequestedContentTypeResolver {",
                "+\t/**",
                "+\t * A singleton list with {@link MediaType#ALL} that is returned from",
                "+\t * {@link #resolveMediaTypes} when no specific media types are requested.",
                "+\t * @since 5.0.5",
                "+\t */",
                "+\tList<MediaType> MEDIA_TYPE_ALL_LIST = Collections.singletonList(MediaType.ALL);",
                "+",
                "+",
                " \t/**",
                "@@ -39,3 +48,4 @@ public interface RequestedContentTypeResolver {",
                " \t * @param exchange the current exchange",
                "-\t * @return the requested media types or an empty list",
                "+\t * @return the requested media types, or {@link #MEDIA_TYPE_ALL_LIST} if none",
                "+\t * were requested.",
                " \t * @throws NotAcceptableStatusException if the requested media type is invalid",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder.java b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder.java",
                "index 8b0d7cd584..aa27e928a4 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder.java",
                "@@ -97,9 +97,9 @@ public class RequestedContentTypeResolverBuilder {",
                " \t\t\tfor (RequestedContentTypeResolver resolver : resolvers) {",
                "-\t\t\t\tList<MediaType> type = resolver.resolveMediaTypes(exchange);",
                "-\t\t\t\tif (type.isEmpty() || (type.size() == 1 && type.contains(MediaType.ALL))) {",
                "+\t\t\t\tList<MediaType> mediaTypes = resolver.resolveMediaTypes(exchange);",
                "+\t\t\t\tif (mediaTypes.equals(RequestedContentTypeResolver.MEDIA_TYPE_ALL_LIST)) {",
                " \t\t\t\t\tcontinue;",
                " \t\t\t\t}",
                "-\t\t\t\treturn type;",
                "+\t\t\t\treturn mediaTypes;",
                " \t\t\t}",
                "-\t\t\treturn Collections.emptyList();",
                "+\t\t\treturn RequestedContentTypeResolver.MEDIA_TYPE_ALL_LIST;",
                " \t\t};",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java",
                "index 5f36840ffb..506a1ff201 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,2 @@ package org.springframework.web.reactive.result;",
                " import java.util.ArrayList;",
                "-import java.util.Collections;",
                " import java.util.Comparator;",
                "@@ -151,4 +150,3 @@ public abstract class HandlerResultHandlerSupport implements Ordered {",
                " \tprivate List<MediaType> getAcceptableTypes(ServerWebExchange exchange) {",
                "-\t\tList<MediaType> mediaTypes = getContentTypeResolver().resolveMediaTypes(exchange);",
                "-\t\treturn (mediaTypes.isEmpty() ? Collections.singletonList(MediaType.ALL) : mediaTypes);",
                "+\t\treturn getContentTypeResolver().resolveMediaTypes(exchange);",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "index b9a799a189..147d83eacc 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java",
                "@@ -240,7 +240,4 @@ public final class ProducesRequestCondition extends AbstractRequestCondition<Pro",
                "-\tprivate List<MediaType> getAcceptedMediaTypes(ServerWebExchange exchange)",
                "-\t\t\tthrows NotAcceptableStatusException {",
                "-",
                "-\t\tList<MediaType> mediaTypes = this.contentTypeResolver.resolveMediaTypes(exchange);",
                "-\t\treturn mediaTypes.isEmpty() ? Collections.singletonList(MediaType.ALL) : mediaTypes;",
                "+\tprivate List<MediaType> getAcceptedMediaTypes(ServerWebExchange exchange) throws NotAcceptableStatusException {",
                "+\t\treturn this.contentTypeResolver.resolveMediaTypes(exchange);",
                " \t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/accept/FixedContentTypeResolver.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/accept/HeaderContentTypeResolver.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/accept/ParameterContentTypeResolver.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolver.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/accept/RequestedContentTypeResolverBuilder.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/HandlerResultHandlerSupport.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/condition/ProducesRequestCondition.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: code",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "91b803a2310344d925e5d4b1709bbcea90375548",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521630133,
            "hunks": 22,
            "message": "Consistent encoded path evaluation in ResourceHttpRequestHandler and co Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "index 7543d91d4f..5e9753fc3b 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,2 +19,3 @@ package org.springframework.web.servlet.resource;",
                " import java.io.IOException;",
                "+import java.io.UnsupportedEncodingException;",
                " import java.net.URLDecoder;",
                "@@ -253,17 +254,3 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\tlocationPath = (locationPath.endsWith(\"/\") || locationPath.isEmpty() ? locationPath : locationPath + \"/\");",
                "-\t\tif (!resourcePath.startsWith(locationPath)) {",
                "-\t\t\treturn false;",
                "-\t\t}",
                "-",
                "-\t\tif (resourcePath.contains(\"%\")) {",
                "-\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars...",
                "-\t\t\tif (URLDecoder.decode(resourcePath, \"UTF-8\").contains(\"../\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "-\t\t\t\t}",
                "-\t\t\t\treturn false;",
                "-\t\t\t}",
                "-\t\t}",
                "-",
                "-\t\treturn true;",
                "+\t\treturn (resourcePath.startsWith(locationPath) && !isInvalidEncodedPath(resourcePath));",
                " \t}",
                "@@ -291,4 +278,26 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \tprivate boolean shouldEncodeRelativePath(Resource location) {",
                "-\t\treturn location instanceof UrlResource &&",
                "-\t\t\t\tthis.urlPathHelper != null && this.urlPathHelper.isUrlDecode();",
                "+\t\treturn (location instanceof UrlResource && this.urlPathHelper != null && this.urlPathHelper.isUrlDecode());",
                "+\t}",
                "+",
                "+\tprivate boolean isInvalidEncodedPath(String resourcePath) {",
                "+\t\tif (resourcePath.contains(\"%\")) {",
                "+\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars...",
                "+\t\t\ttry {",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "+\t\t\t\tint separatorIndex = decodedPath.indexOf(\"..\") + 2;",
                "+\t\t\t\tif (separatorIndex > 1 && separatorIndex < decodedPath.length()) {",
                "+\t\t\t\t\tchar separator = decodedPath.charAt(separatorIndex);",
                "+\t\t\t\t\tif (separator == '/' || separator == '\\\\') {",
                "+\t\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                " \t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "index 80731c37b6..0691dd5ce2 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "@@ -19,2 +19,3 @@ package org.springframework.web.servlet.resource;",
                " import java.io.IOException;",
                "+import java.io.UnsupportedEncodingException;",
                " import java.net.URLDecoder;",
                "@@ -68,5 +69,5 @@ import org.springframework.web.util.UrlPathHelper;",
                "  * <p>The {@linkplain #setLocations \"locations\"} property takes a list of Spring",
                "- * {@link Resource} locations from which static resources are allowed to",
                "- * be served by this handler. Resources could be served from a classpath location,",
                "- * e.g. \"classpath:/META-INF/public-web-resources/\", allowing convenient packaging",
                "+ * {@link Resource} locations from which static resources are allowed to be served",
                "+ * by this handler. Resources could be served from a classpath location, e.g.",
                "+ * \"classpath:/META-INF/public-web-resources/\", allowing convenient packaging",
                "  * and serving of resources such as .js, .css, and others in jar files.",
                "@@ -76,12 +77,11 @@ import org.springframework.web.util.UrlPathHelper;",
                "  * {@link #setResourceTransformers(List) resourceTransformer} chains to support",
                "- * arbitrary resolution and transformation of resources being served. By default a",
                "- * {@link PathResourceResolver} simply finds resources based on the configured",
                "- * \"locations\". An application can configure additional resolvers and",
                "- * transformers such as the {@link VersionResourceResolver} which can resolve",
                "- * and prepare URLs for resources with a version in the URL.",
                "+ * arbitrary resolution and transformation of resources being served. By default",
                "+ * a {@link PathResourceResolver} simply finds resources based on the configured",
                "+ * \"locations\". An application can configure additional resolvers and transformers",
                "+ * such as the {@link VersionResourceResolver} which can resolve and prepare URLs",
                "+ * for resources with a version in the URL.",
                "  *",
                "- * <p>This handler also properly evaluates the {@code Last-Modified} header (if",
                "- * present) so that a {@code 304} status code will be returned as appropriate,",
                "- * avoiding unnecessary overhead for resources that are already cached by the",
                "- * client.",
                "+ * <p>This handler also properly evaluates the {@code Last-Modified} header",
                "+ * (if present) so that a {@code 304} status code will be returned as appropriate,",
                "+ * avoiding unnecessary overhead for resources that are already cached by the client.",
                "  *",
                "@@ -512,2 +512,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "+",
                " \t\tpath = processPath(path);",
                "@@ -519,24 +520,9 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "-\t\tif (path.contains(\"%\")) {",
                "-\t\t\ttry {",
                "-\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "-\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "-\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\treturn null;",
                "-\t\t\t\t}",
                "-\t\t\t\tdecodedPath = processPath(decodedPath);",
                "-\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\treturn null;",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t\tcatch (IllegalArgumentException ex) {",
                "-\t\t\t\t// ignore",
                "+\t\tif (isInvalidEncodedPath(path)) {",
                "+\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"]\");",
                " \t\t\t}",
                "+\t\t\treturn null;",
                " \t\t}",
                "+",
                " \t\tResourceResolverChain resolveChain = new DefaultResourceResolverChain(getResourceResolvers());",
                "@@ -546,2 +532,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "+",
                " \t\tResourceTransformerChain transformChain =",
                "@@ -552,20 +539,2 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                "-\t/**",
                "-\t * Process the given resource path.",
                "-\t * <p>The default implementation replaces:",
                "-\t * <ul>",
                "-\t * <li>Backslash with forward slash.",
                "-\t * <li>Duplicate occurrences of slash with a single slash.",
                "-\t * <li>Any combination of leading slash and control characters (00-1F and 7F)",
                "-\t * with a single \"/\" or \"\". For example {@code \"  / // foo/bar\"}",
                "-\t * becomes {@code \"/foo/bar\"}.",
                "-\t * </ul>",
                "-\t * @since 3.2.12",
                "-\t */",
                "-\tprotected String processPath(String path) {",
                "-\t\tpath = StringUtils.replace(path, \"\\\\\", \"/\");",
                "-\t\tpath = cleanDuplicateSlashes(path);",
                "-\t\treturn cleanLeadingSlash(path);",
                "-\t}",
                "-",
                " \tprivate String cleanDuplicateSlashes(String path) {",
                "@@ -603,5 +572,5 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\t\t}",
                "-\t\t\t\tpath = slash ? \"/\" + path.substring(i) : path.substring(i);",
                "+\t\t\t\tpath = (slash ? \"/\" + path.substring(i) : path.substring(i));",
                " \t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path after trimming leading '/' and control characters: \" + path);",
                "+\t\t\t\t\tlogger.trace(\"Path after trimming leading '/' and control characters: [\" + path + \"]\");",
                " \t\t\t\t}",
                "@@ -613,2 +582,27 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                "+\t/**",
                "+\t * Check whether the given path contains invalid escape sequences.",
                "+\t * @param path the path to validate",
                "+\t * @return {@code true} if the path is invalid, {@code false} otherwise",
                "+\t */",
                "+\tprivate boolean isInvalidEncodedPath(String path) {",
                "+\t\tif (path.contains(\"%\")) {",
                "+\t\t\ttry {",
                "+\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t\tdecodedPath = processPath(decodedPath);",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (IllegalArgumentException | UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -629,9 +623,4 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \tprotected boolean isInvalidPath(String path) {",
                "-\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\tlogger.trace(\"Applying \\\"invalid path\\\" checks to path: \" + path);",
                "-\t\t}",
                " \t\tif (path.contains(\"WEB-INF\") || path.contains(\"META-INF\")) {",
                "-\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\tlogger.trace(\"Path contains \\\"WEB-INF\\\" or \\\"META-INF\\\".\");",
                "-\t\t\t}",
                "+\t\t\tlogger.trace(\"Path contains \\\"WEB-INF\\\" or \\\"META-INF\\\".\");",
                " \t\t\treturn true;",
                "@@ -641,5 +630,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\tif (ResourceUtils.isUrl(relativePath) || relativePath.startsWith(\"url:\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path represents URL or has \\\"url:\\\" prefix.\");",
                "-\t\t\t\t}",
                "+\t\t\t\tlogger.trace(\"Path represents URL or has \\\"url:\\\" prefix.\");",
                " \t\t\t\treturn true;",
                "@@ -650,5 +637,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\tif (path.contains(\"../\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path contains \\\"../\\\" after call to StringUtils#cleanPath.\");",
                "-\t\t\t\t}",
                "+\t\t\t\tlogger.trace(\"Path contains \\\"../\\\" after call to StringUtils#cleanPath.\");",
                " \t\t\t\treturn true;",
                "@@ -659,2 +644,20 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                "+\t/**",
                "+\t * Process the given resource path.",
                "+\t * <p>The default implementation replaces:",
                "+\t * <ul>",
                "+\t * <li>Backslash with forward slash.",
                "+\t * <li>Duplicate occurrences of slash with a single slash.",
                "+\t * <li>Any combination of leading slash and control characters (00-1F and 7F)",
                "+\t * with a single \"/\" or \"\". For example {@code \"  / // foo/bar\"}",
                "+\t * becomes {@code \"/foo/bar\"}.",
                "+\t * </ul>",
                "+\t * @since 3.2.12",
                "+\t */",
                "+\tprotected String processPath(String path) {",
                "+\t\tpath = StringUtils.replace(path, \"\\\\\", \"/\");",
                "+\t\tpath = cleanDuplicateSlashes(path);",
                "+\t\treturn cleanLeadingSlash(path);",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: code",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "98ad23bef8e2e04143f8f5b201380543a8d8c0c3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522163099,
            "hunks": 2,
            "message": "Consistent logging of encoded path evaluation failure Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "index 37bcff4b23..404607542d 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "@@ -195,3 +195,8 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "-\t\t\t\treturn (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\"));",
                "+\t\t\t\tif (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\")) {",
                "+\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + resourcePath + \"]\");",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                " \t\t\t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "index 41f3ffebf2..43a8397650 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "@@ -286,3 +286,8 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "-\t\t\t\treturn (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\"));",
                "+\t\t\t\tif (decodedPath.contains(\"../\") || decodedPath.contains(\"..\\\\\")) {",
                "+\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + resourcePath + \"]\");",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: code",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "cc12afdea2c4b2c3073c1c2bbc88091a4e7db74e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520578904,
            "hunks": 12,
            "message": "Add support for deferred import selector group This commit allows several DeferredImportSelector instances to be grouped and managed in a centralized fashion. This typically allows different instances to provide a consistent ordered set of imports to apply. Issue: SPR-16589",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "index 2e3800e14f..71790901d9 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "@@ -53,2 +53,3 @@ import org.springframework.beans.factory.support.BeanNameGenerator;",
                " import org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase;",
                "+import org.springframework.context.annotation.DeferredImportSelector.Group;",
                " import org.springframework.core.NestedIOException;",
                "@@ -102,2 +103,3 @@ import org.springframework.util.StringUtils;",
                "  * @author Sam Brannen",
                "+ * @author Stephane Nicoll",
                "  * @since 3.0",
                "@@ -545,16 +547,30 @@ class ConfigurationClassParser {",
                " \t\tdeferredImports.sort(DEFERRED_IMPORT_COMPARATOR);",
                "+\t\tMap<Object, DeferredImportSelectorGrouping> groupings = new LinkedHashMap<>();",
                "+\t\tMap<AnnotationMetadata, ConfigurationClass> configurationClasses = new HashMap<>();",
                " \t\tfor (DeferredImportSelectorHolder deferredImport : deferredImports) {",
                "-\t\t\tConfigurationClass configClass = deferredImport.getConfigurationClass();",
                "-\t\t\ttry {",
                "-\t\t\t\tString[] imports = deferredImport.getImportSelector().selectImports(configClass.getMetadata());",
                "-\t\t\t\tprocessImports(configClass, asSourceClass(configClass), asSourceClasses(imports), false);",
                "-\t\t\t}",
                "-\t\t\tcatch (BeanDefinitionStoreException ex) {",
                "-\t\t\t\tthrow ex;",
                "-\t\t\t}",
                "-\t\t\tcatch (Throwable ex) {",
                "-\t\t\t\tthrow new BeanDefinitionStoreException(",
                "-\t\t\t\t\t\t\"Failed to process import candidates for configuration class [\" +",
                "-\t\t\t\t\t\tconfigClass.getMetadata().getClassName() + \"]\", ex);",
                "-\t\t\t}",
                "+\t\t\tClass<? extends Group> group = deferredImport.getImportSelector().getImportGroup();",
                "+\t\t\tDeferredImportSelectorGrouping grouping = groupings.computeIfAbsent(",
                "+\t\t\t\t\t(group == null ? deferredImport : group),",
                "+\t\t\t\t\t(key) -> new DeferredImportSelectorGrouping(createGroup(group)));",
                "+\t\t\tgrouping.add(deferredImport);",
                "+\t\t\tconfigurationClasses.put(deferredImport.getConfigurationClass().getMetadata(),",
                "+\t\t\t\t\tdeferredImport.getConfigurationClass());",
                "+\t\t}",
                "+\t\tfor (DeferredImportSelectorGrouping grouping : groupings.values()) {",
                "+\t\t\tgrouping.getImports().forEach((entry) -> {",
                "+\t\t\t\tConfigurationClass configurationClass = configurationClasses.get(",
                "+\t\t\t\t\t\tentry.getMetadata());",
                "+\t\t\t\ttry {",
                "+\t\t\t\t\tprocessImports(configurationClass, asSourceClass(configurationClass),",
                "+\t\t\t\t\t\t\tasSourceClasses(entry.getImportClassName()), false);",
                "+\t\t\t\t}",
                "+\t\t\t\tcatch (BeanDefinitionStoreException ex) {",
                "+\t\t\t\t\tthrow ex;",
                "+\t\t\t\t}",
                "+\t\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\t\tthrow new BeanDefinitionStoreException(",
                "+\t\t\t\t\t\t\t\"Failed to process import candidates for configuration class [\" +",
                "+\t\t\t\t\t\t\t\t\tconfigurationClass.getMetadata().getClassName() + \"]\", ex);",
                "+\t\t\t\t}",
                "+\t\t\t});",
                " \t\t}",
                "@@ -562,2 +578,13 @@ class ConfigurationClassParser {",
                "+\tprivate Group createGroup(@Nullable Class<? extends Group> type) {",
                "+\t\tClass<? extends Group> effectiveType = (type != null ? type",
                "+\t\t\t\t: DefaultDeferredImportSelectorGroup.class);",
                "+\t\tGroup group = BeanUtils.instantiateClass(effectiveType);",
                "+\t\tParserStrategyUtils.invokeAwareMethods(group,",
                "+\t\t\t\tConfigurationClassParser.this.environment,",
                "+\t\t\t\tConfigurationClassParser.this.resourceLoader,",
                "+\t\t\t\tConfigurationClassParser.this.registry);",
                "+\t\treturn group;",
                "+\t}",
                "+",
                " \tprivate void processImports(ConfigurationClass configClass, SourceClass currentSourceClass,",
                "@@ -679,3 +706,3 @@ class ConfigurationClassParser {",
                " \t */",
                "-\tprivate Collection<SourceClass> asSourceClasses(String[] classNames) throws IOException {",
                "+\tprivate Collection<SourceClass> asSourceClasses(String... classNames) throws IOException {",
                " \t\tList<SourceClass> annotatedClasses = new ArrayList<>(classNames.length);",
                "@@ -779,2 +806,48 @@ class ConfigurationClassParser {",
                "+\tprivate static class DeferredImportSelectorGrouping {",
                "+",
                "+\t\tprivate final DeferredImportSelector.Group group;",
                "+",
                "+\t\tprivate final List<DeferredImportSelectorHolder> deferredImports = new ArrayList<>();",
                "+",
                "+\t\tDeferredImportSelectorGrouping(Group group) {",
                "+\t\t\tthis.group = group;",
                "+\t\t}",
                "+",
                "+\t\tpublic void add(DeferredImportSelectorHolder deferredImport) {",
                "+\t\t\tthis.deferredImports.add(deferredImport);",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Return the imports defined by the group.",
                "+\t\t * @return each import with its associated configuration class",
                "+\t\t */",
                "+\t\tpublic Iterable<Group.Entry> getImports() {",
                "+\t\t\tfor (DeferredImportSelectorHolder deferredImport : this.deferredImports) {",
                "+\t\t\t\tthis.group.process(deferredImport.getConfigurationClass().getMetadata(),",
                "+\t\t\t\t\t\tdeferredImport.getImportSelector());",
                "+\t\t\t}",
                "+\t\t\treturn this.group.selectImports();",
                "+\t\t}",
                "+\t}",
                "+",
                "+",
                "+\tprivate static class DefaultDeferredImportSelectorGroup implements Group {",
                "+",
                "+\t\tprivate final List<Entry> imports = new ArrayList<>();",
                "+",
                "+\t\t@Override",
                "+\t\tpublic void process(AnnotationMetadata metadata, DeferredImportSelector selector) {",
                "+\t\t\tfor (String importClassName : selector.selectImports(metadata)) {",
                "+\t\t\t\tthis.imports.add(new Entry(metadata, importClassName));",
                "+\t\t\t}",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic Iterable<Entry> selectImports() {",
                "+\t\t\treturn this.imports;",
                "+\t\t}",
                "+\t}",
                "+",
                "+",
                " \t/**",
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/DeferredImportSelector.java b/spring-context/src/main/java/org/springframework/context/annotation/DeferredImportSelector.java",
                "index ceb7f9b6e3..a7dbf15b1d 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/DeferredImportSelector.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/DeferredImportSelector.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,2 +18,7 @@ package org.springframework.context.annotation;",
                "+import java.util.Objects;",
                "+",
                "+import org.springframework.core.type.AnnotationMetadata;",
                "+import org.springframework.lang.Nullable;",
                "+",
                " /**",
                "@@ -27,3 +32,7 @@ package org.springframework.context.annotation;",
                "  *",
                "+ * <p>Implementations may also provide an {@link #getImportGroup() import group} which",
                "+ * can provide additional sorting and filtering logic across different selectors.",
                "+ *",
                "  * @author Phillip Webb",
                "+ * @author Stephane Nicoll",
                "  * @since 4.0",
                "@@ -32,2 +41,79 @@ public interface DeferredImportSelector extends ImportSelector {",
                "+\t/**",
                "+\t * Return a specific import group or {@code null} if no grouping is required.",
                "+\t * @return the import group class or {@code null}",
                "+\t */",
                "+\t@Nullable",
                "+\tdefault Class<? extends Group> getImportGroup() {",
                "+\t\treturn null;",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Interface used to group results from different import selectors.",
                "+\t */",
                "+\tinterface Group {",
                "+",
                "+\t\t/**",
                "+\t\t * Process the {@link AnnotationMetadata} of the importing @{@link Configuration}",
                "+\t\t * class using the specified {@link DeferredImportSelector}.",
                "+\t\t */",
                "+\t\tvoid process(AnnotationMetadata metadata, DeferredImportSelector selector);",
                "+",
                "+\t\t/**",
                "+\t\t * Return the {@link Entry entries} of which class(es) should be imported for this",
                "+\t\t * group.",
                "+\t\t */",
                "+\t\tIterable<Entry> selectImports();",
                "+",
                "+\t\t/**",
                "+\t\t * An entry that holds the {@link AnnotationMetadata} of the importing",
                "+\t\t * {@link Configuration} class and the class name to import.",
                "+\t\t */",
                "+\t\tclass Entry {",
                "+",
                "+\t\t\tprivate final AnnotationMetadata metadata;",
                "+",
                "+\t\t\tprivate final String importClassName;",
                "+",
                "+\t\t\tpublic Entry(AnnotationMetadata metadata, String importClassName) {",
                "+\t\t\t\tthis.metadata = metadata;",
                "+\t\t\t\tthis.importClassName = importClassName;",
                "+\t\t\t}",
                "+",
                "+\t\t\t/**",
                "+\t\t\t * Return the {@link AnnotationMetadata} of the importing",
                "+\t\t\t * {@link Configuration} class.",
                "+\t\t\t */",
                "+\t\t\tpublic AnnotationMetadata getMetadata() {",
                "+\t\t\t\treturn this.metadata;",
                "+\t\t\t}",
                "+",
                "+\t\t\t/**",
                "+\t\t\t * Return the fully qualified name of the class to import.",
                "+\t\t\t */",
                "+\t\t\tpublic String getImportClassName() {",
                "+\t\t\t\treturn this.importClassName;",
                "+\t\t\t}",
                "+",
                "+\t\t\t@Override",
                "+\t\t\tpublic boolean equals(Object o) {",
                "+\t\t\t\tif (this == o) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t\tif (o == null || getClass() != o.getClass()) {",
                "+\t\t\t\t\treturn false;",
                "+\t\t\t\t}",
                "+\t\t\t\tEntry entry = (Entry) o;",
                "+\t\t\t\treturn Objects.equals(this.metadata, entry.metadata) &&",
                "+\t\t\t\t\t\tObjects.equals(this.importClassName, entry.importClassName);",
                "+\t\t\t}",
                "+",
                "+\t\t\t@Override",
                "+\t\t\tpublic int hashCode() {",
                "+\t\t\t\treturn Objects.hash(this.metadata, this.importClassName);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "+",
                " }"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "spring-context/src/main/java/org/springframework/context/annotation/DeferredImportSelector.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: allow",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "0ddcbce90ac37581988a8850e990d98731ff77fa",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429802180,
            "hunks": 5,
            "message": "MvcUriCB no longer extends UriCB Before 4.2 the MvcUriComponentsBuilder exposed only static factory methods and therefore there should be no reason for it to extend UriComponentsBuilder (design oversight). It's also highly unlikely for application code to treat MvcUriCB as UriCB since there is no need and no way to obtain an instance (constructor is protected). This change removes the base class declaration from MvcUriCB. Issue: SPR-12617",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "index ff023c0351..81b142ffbe 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "@@ -84,3 +84,3 @@ import org.springframework.web.util.UriComponentsBuilder;",
                "  */",
                "-public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                "+public class MvcUriComponentsBuilder {",
                "@@ -124,10 +124,2 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                "-\t/**",
                "-\t * Create a deep copy of the given MvcUriComponentsBuilder.",
                "-\t * @param other the other builder to copy from",
                "-\t */",
                "-\tprotected MvcUriComponentsBuilder(MvcUriComponentsBuilder other) {",
                "-\t\tsuper(other);",
                "-\t\tthis.baseUrl = other.baseUrl;",
                "-\t}",
                "@@ -459,3 +451,3 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                "-\tprotected static CompositeUriComponentsContributor getConfiguredUriComponentsContributor() {",
                "+\tprivate static CompositeUriComponentsContributor getConfiguredUriComponentsContributor() {",
                " \t\tWebApplicationContext wac = getWebApplicationContext();",
                "@@ -476,3 +468,3 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                "-\tprotected static RequestMappingInfoHandlerMapping getRequestMappingInfoHandlerMapping() {",
                "+\tprivate static RequestMappingInfoHandlerMapping getRequestMappingInfoHandlerMapping() {",
                " \t\tWebApplicationContext wac = getWebApplicationContext();",
                "@@ -614,7 +606,2 @@ public class MvcUriComponentsBuilder extends UriComponentsBuilder {",
                "-\t@Override",
                "-\tpublic Object clone() {",
                "-\t\treturn new MvcUriComponentsBuilder(this);",
                "-\t}",
                "-"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: code, application, expose",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "2e4963fca3647be299fa75383548e23e2448a2ce",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522252649,
            "hunks": 4,
            "message": "Revert \"Always specify charset for form data requests\" This reverts commit 1897d8e85843174e18d164b2eebb08c14b988999. Issue: SPR-16613",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "index 9442273149..d5d595dd9c 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java",
                "@@ -95,5 +95,2 @@ public class FormHttpMessageConverter implements HttpMessageConverter<MultiValue",
                "-\tprivate static final MediaType DEFAULT_FORM_DATA_MEDIA_TYPE =",
                "-\t\t\tnew MediaType(MediaType.APPLICATION_FORM_URLENCODED, DEFAULT_CHARSET);",
                "-",
                "@@ -284,10 +281,11 @@ public class FormHttpMessageConverter implements HttpMessageConverter<MultiValue",
                "-\t\tcontentType = (contentType != null ? contentType : DEFAULT_FORM_DATA_MEDIA_TYPE);",
                "-\t\tCharset charset = contentType.getCharset();",
                "-\t\tif (charset == null) {",
                "+\t\tCharset charset;",
                "+\t\tif (contentType != null) {",
                "+\t\t\toutputMessage.getHeaders().setContentType(contentType);",
                "+\t\t\tcharset = (contentType.getCharset() != null ? contentType.getCharset() : this.charset);",
                "+\t\t}",
                "+\t\telse {",
                "+\t\t\toutputMessage.getHeaders().setContentType(MediaType.APPLICATION_FORM_URLENCODED);",
                " \t\t\tcharset = this.charset;",
                "-\t\t\tcontentType = new MediaType(contentType, charset);",
                " \t\t}",
                "-\t\toutputMessage.getHeaders().setContentType(contentType);",
                "-",
                " \t\tStringBuilder builder = new StringBuilder();"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/converter/FormHttpMessageConverter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "f9df8c738a4eb9fff292f58a82be7ba09e1c3097",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521580250,
            "hunks": 2,
            "message": "Avoid inifinite recursion in UndertowServerHttpRequest Undertow does not provide a way to check if data is available to read but instead we have to try to read and see if any data is returned. This makes it impossible to implement checkOnDataAvailable without trying to read and that can lead to infinite recursion like this: ... UndertowServerHttpRequest$RequestBodyPublisher.checkOnDataAvailable(UndertowServerHttpRequest.java:156) AbstractListenerReadPublisher.changeToDemandState(AbstractListenerReadPublisher.java:177) AbstractListenerReadPublisher.access$900(AbstractListenerReadPublisher.java:47) AbstractListenerReadPublisher$State$4.onDataAvailable(AbstractListenerReadPublisher.java:319) AbstractListenerReadPublisher.onDataAvailable(AbstractListenerReadPublisher.java:85) UndertowServerHttpRequest$RequestBodyPublisher.checkOnDataAvailable(UndertowServerHttpRequest.java:156) This commit prevent the call to checkOnDataAvailable() when switching states from READING->DEMAND which implies we exited the readAndPublish loop because there was no more data to read. Issue: SPR-16545",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java",
                "index 0389e4cf72..e83dc84cfc 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -176,3 +176,8 @@ public abstract class AbstractListenerReadPublisher<T> implements Publisher<T> {",
                " \t\tif (changeState(oldState, State.DEMAND)) {",
                "-\t\t\tcheckOnDataAvailable();",
                "+\t\t\t// Protect from infinite recursion in Undertow, where we can't check if data",
                "+\t\t\t// is available, so all we can do is to try to read.",
                "+\t\t\t// Generally, no need to check if we just came out of readAndPublish()...",
                "+\t\t\tif (!oldState.equals(State.READING)) {",
                "+\t\t\t\tcheckOnDataAvailable();",
                "+\t\t\t}",
                " \t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/server/reactive/AbstractListenerReadPublisher.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: lead",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "bc07a54075f540240791311e1276222450589802",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522530510,
            "hunks": 5,
            "message": "Clear AnnotationUtils cache after context refresh (along with others) Issue: SPR-16675",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java",
                "index a265d32168..4ec03e7680 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -68,2 +68,3 @@ import org.springframework.context.weaving.LoadTimeWeaverAwareProcessor;",
                " import org.springframework.core.ResolvableType;",
                "+import org.springframework.core.annotation.AnnotationUtils;",
                " import org.springframework.core.convert.ConversionService;",
                "@@ -902,6 +903,8 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                " \t/**",
                "-\t * Reset Spring's common core caches, in particular the {@link ReflectionUtils},",
                "-\t * {@link ResolvableType} and {@link CachedIntrospectionResults} caches.",
                "+\t * Reset Spring's common reflection metadata caches, in particular the",
                "+\t * {@link ReflectionUtils}, {@link AnnotationUtils}, {@link ResolvableType}",
                "+\t * and {@link CachedIntrospectionResults} caches.",
                " \t * @since 4.2",
                " \t * @see ReflectionUtils#clearCache()",
                "+\t * @see AnnotationUtils#clearCache()",
                " \t * @see ResolvableType#clearCache()",
                "@@ -911,2 +914,3 @@ public abstract class AbstractApplicationContext extends DefaultResourceLoader",
                " \t\tReflectionUtils.clearCache();",
                "+\t\tAnnotationUtils.clearCache();",
                " \t\tResolvableType.clearCache();"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/support/AbstractApplicationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_FILES",
                    "message": "An advisory keyword is contained in the changed files: application",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "b45ebad2c20a40e239d26831c26c2990bcabe888",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1430130053,
            "hunks": 1,
            "message": "Add netty-all test dependency to spring-websocket This commit fixes recent build failures involving MessageBrokerBeanDefinitionParserTests and NoClassDefFoundError: io/netty/channel/nio/NioEventLoopGroup.",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index b97c681d0b..6309441f59 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -761,2 +761,3 @@ project(\"spring-websocket\") {",
                " \t\ttestCompile(\"io.projectreactor:reactor-net:${reactorVersion}\")",
                "+\t\ttestCompile(\"io.netty:netty-all:${nettyVersion}\")",
                " \t\ttestCompile(\"log4j:log4j:1.2.17\")"
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "ADV_KEYWORDS_IN_MSG",
                    "message": "The commit message and the advisory description contain the following keywords: broker, websocket, message",
                    "relevance": 4
                }
            ]
        },
        {
            "commit_id": "986d219391d2e1312cccd08ea51f4a4fb5058020",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522362391,
            "hunks": 12,
            "message": "Replaces rather than prepend contextPath Issue: SPR-16650",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "index 8ea7004d7c..8bf1125f67 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "@@ -83,2 +83,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -86,3 +90,4 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\tServletUriComponentsBuilder builder = initFromRequest(request);",
                "-\t\tbuilder.replacePath(prependForwardedPrefix(request, request.getContextPath()));",
                "+\t\tString forwardedPrefix = getForwardedPrefix(request);",
                "+\t\tbuilder.replacePath(forwardedPrefix != null ? forwardedPrefix : request.getContextPath());",
                " \t\treturn builder;",
                "@@ -100,2 +105,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -115,2 +124,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -118,3 +131,3 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\tServletUriComponentsBuilder builder = initFromRequest(request);",
                "-\t\tbuilder.initPath(prependForwardedPrefix(request, request.getRequestURI()));",
                "+\t\tbuilder.initPath(getRequestUriWithForwardedPrefix(request));",
                " \t\treturn builder;",
                "@@ -128,2 +141,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -131,3 +148,3 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\tServletUriComponentsBuilder builder = initFromRequest(request);",
                "-\t\tbuilder.initPath(prependForwardedPrefix(request, request.getRequestURI()));",
                "+\t\tbuilder.initPath(getRequestUriWithForwardedPrefix(request));",
                " \t\tbuilder.query(request.getQueryString());",
                "@@ -155,3 +172,3 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                "-\tprivate static String prependForwardedPrefix(HttpServletRequest request, String path) {",
                "+\tprivate static String getForwardedPrefix(HttpServletRequest request) {",
                " \t\tString prefix = null;",
                "@@ -165,3 +182,18 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t\tif (prefix != null) {",
                "-\t\t\tpath = prefix + path;",
                "+\t\t\twhile (prefix.endsWith(\"/\")) {",
                "+\t\t\t\tprefix = prefix.substring(0, prefix.length() - 1);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn prefix;",
                "+\t}",
                "+",
                "+\tprivate static String getRequestUriWithForwardedPrefix(HttpServletRequest request) {",
                "+\t\tString path = request.getRequestURI();",
                "+\t\tString forwardedPrefix = getForwardedPrefix(request);",
                "+\t\tif (forwardedPrefix != null) {",
                "+\t\t\tString contextPath = request.getContextPath();",
                "+\t\t\tif (!StringUtils.isEmpty(contextPath) && !contextPath.equals(\"/\") && path.startsWith(contextPath)) {",
                "+\t\t\t\tpath = path.substring(contextPath.length());",
                "+\t\t\t}",
                "+\t\t\tpath = forwardedPrefix + path;",
                " \t\t}",
                "@@ -179,2 +211,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -201,2 +237,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */",
                "@@ -212,2 +252,6 @@ public class ServletUriComponentsBuilder extends UriComponentsBuilder {",
                " \t * and \"X-Forwarded-*\" headers if found. See class-level docs.",
                "+\t *",
                "+\t * <p>As of 4.3.15, this method replaces the contextPath with the value",
                "+\t * of \"X-Forwarded-Prefix\" rather than prepending, thus aligning with",
                "+\t * {@code ForwardedHeaderFiller}.",
                " \t */"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "240d6f52c90fac68146bd38cea79ea6e099c6a00"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9a722b4558ca7985fb54a06ff76e3934abe898cb",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522359833,
            "hunks": 2,
            "message": "Pass type name into PreparedStatement.setNull in case of Types.OTHER Issue: SPR-16669",
            "diff": [
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java",
                "index 303a8fc766..60d3af492b 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -242,3 +242,3 @@ public abstract class StatementCreatorUtils {",
                "-\t\tif (sqlType == SqlTypeValue.TYPE_UNKNOWN || sqlType == Types.OTHER) {",
                "+\t\tif (sqlType == SqlTypeValue.TYPE_UNKNOWN || (sqlType == Types.OTHER && typeName == null)) {",
                " \t\t\tboolean useSetObject = false;"
            ],
            "changed_files": [
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5629fa2c9f94ed43aedfd87181164fcbc154fffc"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "313c6cef320bfe1ee856b58a119bd33943b2c0ec",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521223381,
            "hunks": 66,
            "message": "Polish",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/MultipartBodyBuilder.java b/spring-web/src/main/java/org/springframework/http/client/MultipartBodyBuilder.java",
                "index 22d39766ac..f9429225d9 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/MultipartBodyBuilder.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/MultipartBodyBuilder.java",
                "@@ -50,2 +50,3 @@ import org.springframework.util.MultiValueMap;",
                "  * @author Arjen Poutsma",
                "+ * @author Rossen Stoyanchev",
                "  * @since 5.0.2",
                "@@ -66,22 +67,6 @@ public final class MultipartBodyBuilder {",
                " \t/**",
                "-\t * Builds the multipart body.",
                "-\t * @return the built body",
                "-\t */",
                "-\tpublic MultiValueMap<String, HttpEntity<?>> build() {",
                "-\t\tMultiValueMap<String, HttpEntity<?>> result = new LinkedMultiValueMap<>(this.parts.size());",
                "-\t\tfor (Map.Entry<String, List<DefaultPartBuilder>> entry : this.parts.entrySet()) {",
                "-\t\t\tfor (DefaultPartBuilder builder : entry.getValue()) {",
                "-\t\t\t\tHttpEntity<?> entity = builder.build();",
                "-\t\t\t\tresult.add(entry.getKey(), entity);",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\treturn result;",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * Adds a part to this builder, allowing for further header customization with the returned",
                "-\t * {@link PartBuilder}.",
                "-\t * @param name the name of the part to add (may not be empty)",
                "-\t * @param part the part to add",
                "-\t * @return a builder that allows for further header customization",
                "+\t * Add a part from an Object.",
                "+\t * @param name the name of the part to add",
                "+\t * @param part the part data",
                "+\t * @return builder that allows for further customization of part headers",
                " \t */",
                "@@ -92,8 +77,8 @@ public final class MultipartBodyBuilder {",
                " \t/**",
                "-\t * Adds a part to this builder, allowing for further header customization with the returned",
                "-\t * {@link PartBuilder}.",
                "-\t * @param name the name of the part to add (may not be empty)",
                "-\t * @param part the part to add",
                "-\t * @param contentType the {@code Content-Type} header for the part (may be {@code null})",
                "-\t * @return a builder that allows for further header customization",
                "+\t * Variant of {@link #part(String, Object)} that also accepts a MediaType",
                "+\t * which is used to determine how to encode the part.",
                "+\t * @param name the name of the part to add",
                "+\t * @param part the part data",
                "+\t * @param contentType the media type for the part",
                "+\t * @return builder that allows for further customization of part headers",
                " \t */",
                "@@ -123,3 +108,4 @@ public final class MultipartBodyBuilder {",
                " \t\t}",
                "-\t\tDefaultPartBuilder builder = new DefaultPartBuilder(partBody, partHeaders);",
                "+",
                "+\t\tDefaultPartBuilder builder = new DefaultPartBuilder(partHeaders, partBody);",
                " \t\tthis.parts.add(name, builder);",
                "@@ -129,8 +115,7 @@ public final class MultipartBodyBuilder {",
                " \t/**",
                "-\t * Adds a {@link Publisher} part to this builder, allowing for further header customization with",
                "-\t * the returned {@link PartBuilder}.",
                "-\t * @param name the name of the part to add (may not be empty)",
                "-\t * @param publisher the contents of the part to add",
                "-\t * @param elementClass the class of elements contained in the publisher",
                "-\t * @return a builder that allows for further header customization",
                "+\t * Add an asynchronous part with {@link Publisher}-based content.",
                "+\t * @param name the name of the part to add",
                "+\t * @param publisher the part contents",
                "+\t * @param elementClass the type of elements contained in the publisher",
                "+\t * @return builder that allows for further customization of part headers",
                " \t */",
                "@@ -145,5 +130,4 @@ public final class MultipartBodyBuilder {",
                "-\t\tHttpHeaders partHeaders = new HttpHeaders();",
                "-\t\tPublisherPartBuilder<T, P> builder =",
                "-\t\t\t\tnew PublisherPartBuilder<>(publisher, elementClass, partHeaders);",
                "+\t\tHttpHeaders headers = new HttpHeaders();",
                "+\t\tPublisherPartBuilder<T, P> builder = new PublisherPartBuilder<>(headers, publisher, elementClass);",
                " \t\tthis.parts.add(name, builder);",
                "@@ -154,8 +138,9 @@ public final class MultipartBodyBuilder {",
                " \t/**",
                "-\t * Adds a {@link Publisher} part to this builder, allowing for further header customization with",
                "-\t * the returned {@link PartBuilder}.",
                "-\t * @param name the name of the part to add (may not be empty)",
                "-\t * @param publisher the contents of the part to add",
                "+\t * Variant of {@link #asyncPart(String, Publisher, Class)} that accepts a",
                "+\t * {@link ParameterizedTypeReference} for the element type, which allows",
                "+\t * specifying generic type information.",
                "+\t * @param name the name of the part to add",
                "+\t * @param publisher the part contents",
                " \t * @param typeReference the type of elements contained in the publisher",
                "-\t * @return a builder that allows for further header customization",
                "+\t * @return builder that allows for further customization of part headers",
                " \t */",
                "@@ -170,5 +155,4 @@ public final class MultipartBodyBuilder {",
                "-\t\tHttpHeaders partHeaders = new HttpHeaders();",
                "-\t\tPublisherPartBuilder<T, P> builder =",
                "-\t\t\t\tnew PublisherPartBuilder<>(publisher, typeReference, partHeaders);",
                "+\t\tHttpHeaders headers = new HttpHeaders();",
                "+\t\tPublisherPartBuilder<T, P> builder = new PublisherPartBuilder<>(publisher, typeReference, headers);",
                " \t\tthis.parts.add(name, builder);",
                "@@ -178,3 +162,18 @@ public final class MultipartBodyBuilder {",
                " \t/**",
                "-\t * Builder interface that allows for customization of part headers.",
                "+\t * Return a {@code MultiValueMap} with the configured parts.",
                "+\t */",
                "+\tpublic MultiValueMap<String, HttpEntity<?>> build() {",
                "+\t\tMultiValueMap<String, HttpEntity<?>> result = new LinkedMultiValueMap<>(this.parts.size());",
                "+\t\tfor (Map.Entry<String, List<DefaultPartBuilder>> entry : this.parts.entrySet()) {",
                "+\t\t\tfor (DefaultPartBuilder builder : entry.getValue()) {",
                "+\t\t\t\tHttpEntity<?> entity = builder.build();",
                "+\t\t\t\tresult.add(entry.getKey(), entity);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn result;",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Builder that allows for further customization of part headers.",
                " \t */",
                "@@ -183,3 +182,3 @@ public final class MultipartBodyBuilder {",
                " \t\t/**",
                "-\t\t * Add the given part-specific header values under the given name.",
                "+\t\t * Add part header values.",
                " \t\t * @param headerName the part header name",
                "@@ -187,3 +186,3 @@ public final class MultipartBodyBuilder {",
                " \t\t * @return this builder",
                "-\t\t * @see HttpHeaders#add(String, String)",
                "+\t\t * @see HttpHeaders#addAll(String, List)",
                " \t\t */",
                "@@ -192,4 +191,4 @@ public final class MultipartBodyBuilder {",
                " \t\t/**",
                "-\t\t * Manipulate the part's headers with the given consumer.",
                "-\t\t * @param headersConsumer a function that consumes the {@code HttpHeaders}",
                "+\t\t * Manipulate the part headers through the given consumer.",
                "+\t\t * @param headersConsumer consumer to manipulate the part headers with",
                " \t\t * @return this builder",
                "@@ -202,2 +201,4 @@ public final class MultipartBodyBuilder {",
                "+\t\tprotected final HttpHeaders headers;",
                "+",
                " \t\t@Nullable",
                "@@ -205,7 +206,6 @@ public final class MultipartBodyBuilder {",
                "-\t\tprotected final HttpHeaders headers;",
                "-\t\tpublic DefaultPartBuilder(@Nullable Object body, HttpHeaders headers) {",
                "-\t\t\tthis.body = body;",
                "+\t\tpublic DefaultPartBuilder(HttpHeaders headers, @Nullable Object body) {",
                " \t\t\tthis.headers = headers;",
                "+\t\t\tthis.body = body;",
                " \t\t}",
                "@@ -230,4 +230,4 @@ public final class MultipartBodyBuilder {",
                "-\tprivate static class PublisherPartBuilder<S, P extends Publisher<S>>",
                "-\t\t\textends DefaultPartBuilder {",
                "+",
                "+\tprivate static class PublisherPartBuilder<S, P extends Publisher<S>> extends DefaultPartBuilder {",
                "@@ -235,4 +235,5 @@ public final class MultipartBodyBuilder {",
                "-\t\tpublic PublisherPartBuilder(P body, Class<S> elementClass, HttpHeaders headers) {",
                "-\t\t\tsuper(body, headers);",
                "+",
                "+\t\tpublic PublisherPartBuilder(HttpHeaders headers, P body, Class<S> elementClass) {",
                "+\t\t\tsuper(headers, body);",
                " \t\t\tthis.resolvableType = ResolvableType.forClass(elementClass);",
                "@@ -240,6 +241,4 @@ public final class MultipartBodyBuilder {",
                "-\t\tpublic PublisherPartBuilder(P body, ParameterizedTypeReference<S> typeReference,",
                "-\t\t\t\tHttpHeaders headers) {",
                "-",
                "-\t\t\tsuper(body, headers);",
                "+\t\tpublic PublisherPartBuilder(P body, ParameterizedTypeReference<S> typeReference, HttpHeaders headers) {",
                "+\t\t\tsuper(headers, body);",
                " \t\t\tthis.resolvableType = ResolvableType.forType(typeReference);",
                "@@ -252,3 +251,3 @@ public final class MultipartBodyBuilder {",
                " \t\t\tAssert.state(publisher != null, \"'publisher' must not be null\");",
                "-\t\t\treturn new PublisherEntity<>(publisher, this.resolvableType, this.headers);",
                "+\t\t\treturn new PublisherEntity<>(this.headers, publisher, this.resolvableType);",
                " \t\t}",
                "@@ -258,4 +257,5 @@ public final class MultipartBodyBuilder {",
                " \t/**",
                "-\t * Specific subtype of {@link HttpEntity} for containing {@link Publisher}s as body.",
                "-\t * Exposes the type contained in the publisher through {@link #getResolvableType()}.",
                "+\t * Specialization of {@link HttpEntity} for use with a",
                "+\t * {@link Publisher}-based body, for which we also need to keep track of",
                "+\t * the element type.",
                " \t * @param <T> The type contained in the publisher",
                "@@ -268,4 +268,5 @@ public final class MultipartBodyBuilder {",
                "-\t\tPublisherEntity(P publisher, ResolvableType resolvableType,",
                "-\t\t\t\t@Nullable MultiValueMap<String, String> headers) {",
                "+\t\tprivate PublisherEntity(@Nullable MultiValueMap<String, String> headers, P publisher,",
                "+\t\t\t\tResolvableType resolvableType) {",
                "+",
                " \t\t\tsuper(publisher, headers);",
                "@@ -277,3 +278,3 @@ public final class MultipartBodyBuilder {",
                " \t\t/**",
                "-\t\t * Return the resolvable type for this entry.",
                "+\t\t * Return the element type for the {@code Publisher} body.",
                " \t\t */",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java",
                "index 15fa32670d..f1a0cfbdeb 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java",
                "@@ -202,4 +202,4 @@ public abstract class BodyInserters {",
                " \t * request builders of both the {@code WebClient} and {@code WebTestClient}.",
                "-\t * In that case the setting of the content type is also not required, just",
                "-\t * be sure the map contains String values only or otherwise it would be",
                "+\t * In that case the setting of the request content type is also not required,",
                "+\t * just be sure the map contains String values only or otherwise it would be",
                " \t * interpreted as a multipart request.",
                "@@ -207,8 +207,6 @@ public abstract class BodyInserters {",
                " \t * @param formData the form data to write to the output message",
                "-\t * @return a {@code FormInserter} that writes form data",
                "+\t * @return the inserter that allows adding more form data",
                " \t */",
                " \tpublic static FormInserter<String> fromFormData(MultiValueMap<String, String> formData) {",
                "-",
                " \t\tAssert.notNull(formData, \"'formData' must not be null\");",
                "-",
                " \t\treturn new DefaultFormInserter().with(formData);",
                "@@ -220,11 +218,10 @@ public abstract class BodyInserters {",
                " \t * entries to be added via {@link FormInserter#with(String, Object)}.",
                "-\t * @param key the key to add to the form",
                "+\t * @param name the key to add to the form",
                " \t * @param value the value to add to the form",
                "-\t * @return a {@code FormInserter} that writes form data",
                "+\t * @return the inserter that allows adding more form data",
                " \t */",
                "-\tpublic static FormInserter<String> fromFormData(String key, String value) {",
                "-\t\tAssert.notNull(key, \"'key' must not be null\");",
                "+\tpublic static FormInserter<String> fromFormData(String name, String value) {",
                "+\t\tAssert.notNull(name, \"'key' must not be null\");",
                " \t\tAssert.notNull(value, \"'value' must not be null\");",
                "-",
                "-\t\treturn new DefaultFormInserter().with(key, value);",
                "+\t\treturn new DefaultFormInserter().with(name, value);",
                " \t}",
                "@@ -232,20 +229,12 @@ public abstract class BodyInserters {",
                " \t/**",
                "-\t * Return a {@code FormInserter} that writes the given {@code MultiValueMap}",
                "-\t * as multipart data. The values in the {@code MultiValueMap} can be any",
                "-\t * Object representing the body of the part, or an",
                "-\t * {@link org.springframework.http.HttpEntity HttpEntity} representing a part",
                "-\t * with body and headers. The {@code MultiValueMap} can be built conveniently",
                "-\t * using {@link org.springframework.http.client.MultipartBodyBuilder",
                "-\t * MultipartBodyBuilder}. Also the returned inserter allows for additional",
                "-\t * entries to be added via {@link FormInserter#with(String, Object)}.",
                "+\t * Return a {@link MultipartInserter} that writes the given",
                "+\t * {@code MultiValueMap} as multipart data. Values in the map can be an",
                "+\t * Object or an {@link HttpEntity}.",
                " \t *",
                "-\t * <p>Note that you can also use the {@code syncBody(Object)} method in the",
                "-\t * request builders of both the {@code WebClient} and {@code WebTestClient}.",
                "-\t * In that case the setting of the content type is also not required, just",
                "-\t * be sure the map contains at least one non-String value or otherwise,",
                "-\t * without a content-type header as a hint, it would be interpreted as a",
                "-\t * plain form data request.",
                "+\t * <p>Note that you can also build the multipart data externally with",
                "+\t * {@link MultipartBodyBuilder}, and pass the resulting map directly to the",
                "+\t * {@code syncBody(Object)} shortcut method in {@code WebClient}.",
                " \t *",
                " \t * @param multipartData the form data to write to the output message",
                "-\t * @return a {@code BodyInserter} that writes multipart data",
                "+\t * @return the inserter that allows adding more parts",
                " \t * @see MultipartBodyBuilder",
                "@@ -258,15 +247,18 @@ public abstract class BodyInserters {",
                " \t/**",
                "-\t * A variant of {@link #fromMultipartData(MultiValueMap)} for adding",
                "-\t * parts as name-value pairs in-line vs building a {@code MultiValueMap}",
                "-\t * and passing it in.",
                "-\t * @param key the part name",
                "+\t * Return a {@link MultipartInserter} that writes the given parts,",
                "+\t * as multipart data. Values in the map can be an Object or an",
                "+\t * {@link HttpEntity}.",
                "+\t *",
                "+\t * <p>Note that you can also build the multipart data externally with",
                "+\t * {@link MultipartBodyBuilder}, and pass the resulting map directly to the",
                "+\t * {@code syncBody(Object)} shortcut method in {@code WebClient}.",
                "+\t *",
                "+\t * @param name the part name",
                " \t * @param value the part value, an Object or {@code HttpEntity}",
                "-\t * @return a {@code FormInserter} that can writes the provided multipart",
                "-\t * data and also allows adding more parts",
                "+\t * @return the inserter that allows adding more parts",
                " \t */",
                "-\tpublic static MultipartInserter fromMultipartData(String key, Object value) {",
                "-\t\tAssert.notNull(key, \"'key' must not be null\");",
                "+\tpublic static MultipartInserter fromMultipartData(String name, Object value) {",
                "+\t\tAssert.notNull(name, \"'key' must not be null\");",
                " \t\tAssert.notNull(value, \"'value' must not be null\");",
                "-",
                "-\t\treturn new DefaultMultipartInserter().with(key, value);",
                "+\t\treturn new DefaultMultipartInserter().with(name, value);",
                " \t}",
                "@@ -274,14 +266,18 @@ public abstract class BodyInserters {",
                " \t/**",
                "-\t * A variant of {@link #fromMultipartData(MultiValueMap)} for adding asynchronous data as a",
                "-\t * part in-line vs building a {@code MultiValueMap} and passing it in.",
                "-\t * @param key the part name",
                "+\t * Return a {@link MultipartInserter} that writes the given asynchronous parts,",
                "+\t * as multipart data.",
                "+\t *",
                "+\t * <p>Note that you can also build the multipart data externally with",
                "+\t * {@link MultipartBodyBuilder}, and pass the resulting map directly to the",
                "+\t * {@code syncBody(Object)} shortcut method in {@code WebClient}.",
                "+\t *",
                "+\t * @param name the part name",
                " \t * @param publisher the publisher that forms the part value",
                " \t * @param elementClass the class contained in the {@code publisher}",
                "-\t * @return a {@code FormInserter} that can writes the provided multipart",
                "-\t * data and also allows adding more parts",
                "+\t * @return the inserter that allows adding more parts",
                " \t */",
                "-\tpublic static <T, P extends Publisher<T>> MultipartInserter fromMultipartAsyncData(String key,",
                "+\tpublic static <T, P extends Publisher<T>> MultipartInserter fromMultipartAsyncData(String name,",
                " \t\t\tP publisher, Class<T> elementClass) {",
                "-\t\tAssert.notNull(key, \"'key' must not be null\");",
                "+\t\tAssert.notNull(name, \"'key' must not be null\");",
                " \t\tAssert.notNull(publisher, \"'publisher' must not be null\");",
                "@@ -289,3 +285,3 @@ public abstract class BodyInserters {",
                "-\t\treturn new DefaultMultipartInserter().withPublisher(key, publisher, elementClass);",
                "+\t\treturn new DefaultMultipartInserter().withPublisher(name, publisher, elementClass);",
                " \t}",
                "@@ -293,14 +289,19 @@ public abstract class BodyInserters {",
                " \t/**",
                "-\t * A variant of {@link #fromMultipartData(MultiValueMap)} for adding asynchronous data as a",
                "-\t * part in-line vs building a {@code MultiValueMap} and passing it in.",
                "-\t * @param key the part name",
                "+\t * Variant of {@link #fromMultipartAsyncData(String, Publisher, Class)} that",
                "+\t * accepts a {@link ParameterizedTypeReference} for the element type, which",
                "+\t * allows specifying generic type information.",
                "+\t *",
                "+\t * <p>Note that you can also build the multipart data externally with",
                "+\t * {@link MultipartBodyBuilder}, and pass the resulting map directly to the",
                "+\t * {@code syncBody(Object)} shortcut method in {@code WebClient}.",
                "+\t *",
                "+\t * @param name the part name",
                " \t * @param publisher the publisher that forms the part value",
                " \t * @param typeReference the type contained in the {@code publisher}",
                "-\t * @return a {@code FormInserter} that can writes the provided multipart",
                "-\t * data and also allows adding more parts",
                "+\t * @return the inserter that allows adding more parts",
                " \t */",
                "-\tpublic static <T, P extends Publisher<T>> MultipartInserter fromMultipartAsyncData(String key,",
                "+\tpublic static <T, P extends Publisher<T>> MultipartInserter fromMultipartAsyncData(String name,",
                " \t\t\tP publisher, ParameterizedTypeReference<T> typeReference) {",
                "-\t\tAssert.notNull(key, \"'key' must not be null\");",
                "+\t\tAssert.notNull(name, \"'key' must not be null\");",
                " \t\tAssert.notNull(publisher, \"'publisher' must not be null\");",
                "@@ -308,3 +309,3 @@ public abstract class BodyInserters {",
                "-\t\treturn new DefaultMultipartInserter().withPublisher(key, publisher, typeReference);",
                "+\t\treturn new DefaultMultipartInserter().withPublisher(name, publisher, typeReference);",
                " \t}",
                "@@ -377,9 +378,8 @@ public abstract class BodyInserters {",
                " \t/**",
                "-\t * Sub-interface of {@link BodyInserter} that allows for additional (multipart) form data to be",
                "-\t * added.",
                "+\t * Extension of {@link BodyInserter} that allows for adding form data or",
                "+\t * multipart form data.",
                " \t */",
                "-\t// Note that FormInserter is parameterized to ClientHttpRequest, not ReactiveHttpOutputMessage",
                "-\t// like other return values methods, since sending form data only typically happens on the client-side",
                "-\tpublic interface FormInserter<T> extends",
                "-\t\t\tBodyInserter<MultiValueMap<String, T>, ClientHttpRequest> {",
                "+\tpublic interface FormInserter<T> extends BodyInserter<MultiValueMap<String, T>, ClientHttpRequest> {",
                "+",
                "+\t\t// FormInserter is parameterized to ClientHttpRequest (for client-side use only)",
                "@@ -389,3 +389,3 @@ public abstract class BodyInserters {",
                " \t\t * @param value the value to be added",
                "-\t\t * @return this inserter",
                "+\t\t * @return this inserter for adding more parts",
                " \t\t */",
                "@@ -396,3 +396,3 @@ public abstract class BodyInserters {",
                " \t\t * @param values the values to be added",
                "-\t\t * @return this inserter",
                "+\t\t * @return this inserter for adding more parts",
                " \t\t */",
                "@@ -404,3 +404,3 @@ public abstract class BodyInserters {",
                " \t/**",
                "-\t * Extension of {@link FormInserter} that has methods for adding asynchronous part data.",
                "+\t * Extension of {@link FormInserter} that allows for adding asynchronous parts.",
                " \t */",
                "@@ -409,10 +409,9 @@ public abstract class BodyInserters {",
                " \t\t/**",
                "-\t\t * Adds the specified publisher as a part.",
                "-\t\t *",
                "-\t\t * @param key the key to be added",
                "-\t\t * @param publisher the publisher to be added as value",
                "-\t\t * @param elementClass the class of elements contained in {@code publisher}",
                "-\t\t * @return this inserter",
                "+\t\t * Add an asynchronous part with {@link Publisher}-based content.",
                "+\t\t * @param name the name of the part to add",
                "+\t\t * @param publisher the part contents",
                "+\t\t * @param elementClass the type of elements contained in the publisher",
                "+\t\t * @return this inserter for adding more parts",
                " \t\t */",
                "-\t\t<T, P extends Publisher<T>> MultipartInserter withPublisher(String key, P publisher,",
                "+\t\t<T, P extends Publisher<T>> MultipartInserter withPublisher(String name, P publisher,",
                " \t\t\t\tClass<T> elementClass);",
                "@@ -420,10 +419,11 @@ public abstract class BodyInserters {",
                " \t\t/**",
                "-\t\t * Adds the specified publisher as a part.",
                "-\t\t *",
                "-\t\t * @param key the key to be added",
                "+\t\t * Variant of {@link #withPublisher(String, Publisher, Class)} that accepts a",
                "+\t\t * {@link ParameterizedTypeReference} for the element type, which allows",
                "+\t\t * specifying generic type information.",
                "+\t\t * @param name the key to be added",
                " \t\t * @param publisher the publisher to be added as value",
                " \t\t * @param typeReference the type of elements contained in {@code publisher}",
                "-\t\t * @return this inserter",
                "+\t\t * @return this inserter for adding more parts",
                " \t\t */",
                "-\t\t<T, P extends Publisher<T>> MultipartInserter withPublisher(String key, P publisher,",
                "+\t\t<T, P extends Publisher<T>> MultipartInserter withPublisher(String name, P publisher,",
                " \t\t\t\tParameterizedTypeReference<T> typeReference);",
                "@@ -437,2 +437,3 @@ public abstract class BodyInserters {",
                "+",
                " \t\tpublic DefaultFormInserter() {",
                "@@ -440,2 +441,3 @@ public abstract class BodyInserters {",
                "+",
                " \t\t@Override",
                "@@ -467,2 +469,3 @@ public abstract class BodyInserters {",
                "+",
                " \t\tpublic DefaultMultipartInserter() {",
                "@@ -470,2 +473,3 @@ public abstract class BodyInserters {",
                "+",
                " \t\t@Override",
                "@@ -494,6 +498,6 @@ public abstract class BodyInserters {",
                " \t\t@Override",
                "-\t\tpublic <T, P extends Publisher<T>> MultipartInserter withPublisher(String key,",
                "+\t\tpublic <T, P extends Publisher<T>> MultipartInserter withPublisher(String name,",
                " \t\t\t\tP publisher, Class<T> elementClass) {",
                "-\t\t\tthis.builder.asyncPart(key, publisher, elementClass);",
                "+\t\t\tthis.builder.asyncPart(name, publisher, elementClass);",
                " \t\t\treturn this;",
                "@@ -502,6 +506,6 @@ public abstract class BodyInserters {",
                " \t\t@Override",
                "-\t\tpublic <T, P extends Publisher<T>> MultipartInserter withPublisher(String key,",
                "+\t\tpublic <T, P extends Publisher<T>> MultipartInserter withPublisher(String name,",
                " \t\t\t\tP publisher, ParameterizedTypeReference<T> typeReference) {",
                "-\t\t\tthis.builder.asyncPart(key, publisher, typeReference);",
                "+\t\t\tthis.builder.asyncPart(name, publisher, typeReference);",
                " \t\t\treturn this;"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/client/MultipartBodyBuilder.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/BodyInserters.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e4acbae2704682b6cdfe5d0685cb63439a192827"
                ],
                [
                    "no-tag",
                    "cbabb00ba29a9b8ac69ff0219a4c858d6b82d950"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "50e980c02f0dba610303e064289be0420d1f6ce1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520858426,
            "hunks": 15,
            "message": "Validate declared annotations before deciding between reflection and ASM Issue: SPR-16564",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "index 046889c47e..2e3800e14f 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "@@ -20,2 +20,3 @@ import java.io.FileNotFoundException;",
                " import java.io.IOException;",
                "+import java.lang.annotation.Annotation;",
                " import java.net.UnknownHostException;",
                "@@ -57,2 +58,3 @@ import org.springframework.core.annotation.AnnotationAttributes;",
                " import org.springframework.core.annotation.AnnotationAwareOrderComparator;",
                "+import org.springframework.core.annotation.AnnotationUtils;",
                " import org.springframework.core.env.CompositePropertySource;",
                "@@ -661,4 +663,7 @@ class ConfigurationClassParser {",
                " \t\ttry {",
                "-\t\t\t// Sanity test that we can read annotations, if not fall back to ASM",
                "-\t\t\tclassType.getAnnotations();",
                "+\t\t\t// Sanity test that we can reflectively read annotations,",
                "+\t\t\t// including Class attributes; if not -> fall back to ASM",
                "+\t\t\tfor (Annotation ann : classType.getAnnotations()) {",
                "+\t\t\t\tAnnotationUtils.validateAnnotation(ann);",
                "+\t\t\t}",
                " \t\t\treturn new SourceClass(classType);",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index 63a769b4f8..0bd78ec559 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -62,6 +62,5 @@ import org.springframework.util.MultiValueMap;",
                "  * <p><strong>Get semantics</strong> are limited to searching for annotations",
                "- * that are either <em>present</em> on an {@code AnnotatedElement} (i.e.,",
                "- * declared locally or {@linkplain java.lang.annotation.Inherited inherited})",
                "- * or declared within the annotation hierarchy <em>above</em> the",
                "- * {@code AnnotatedElement}.",
                "+ * that are either <em>present</em> on an {@code AnnotatedElement} (i.e. declared",
                "+ * locally or {@linkplain java.lang.annotation.Inherited inherited}) or declared",
                "+ * within the annotation hierarchy <em>above</em> the {@code AnnotatedElement}.",
                "  *",
                "@@ -79,10 +78,9 @@ import org.springframework.util.MultiValueMap;",
                "  * <h3>Support for {@code @Inherited}</h3>",
                "- * <p>Methods following <em>get semantics</em> will honor the contract of",
                "- * Java's {@link java.lang.annotation.Inherited @Inherited} annotation except",
                "- * that locally declared annotations (including custom composed annotations)",
                "- * will be favored over inherited annotations. In contrast, methods following",
                "- * <em>find semantics</em> will completely ignore the presence of",
                "- * {@code @Inherited} since the <em>find</em> search algorithm manually",
                "- * traverses type and method hierarchies and thereby implicitly supports",
                "- * annotation inheritance without the need for {@code @Inherited}.",
                "+ * <p>Methods following <em>get semantics</em> will honor the contract of Java's",
                "+ * {@link java.lang.annotation.Inherited @Inherited} annotation except that locally",
                "+ * declared annotations (including custom composed annotations) will be favored over",
                "+ * inherited annotations. In contrast, methods following <em>find semantics</em>",
                "+ * will completely ignore the presence of {@code @Inherited} since the <em>find</em>",
                "+ * search algorithm manually traverses type and method hierarchies and thereby",
                "+ * implicitly supports annotation inheritance without a need for {@code @Inherited}.",
                "  *",
                "@@ -796,3 +794,3 @@ public class AnnotatedElementUtils {",
                " \t * @param processor the processor to delegate to",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t */",
                "@@ -817,3 +815,3 @@ public class AnnotatedElementUtils {",
                " \t * @param processor the processor to delegate to",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t * @since 4.3",
                "@@ -850,3 +848,3 @@ public class AnnotatedElementUtils {",
                " \t * @param metaDepth the meta-depth of the annotation",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t */",
                "@@ -911,3 +909,3 @@ public class AnnotatedElementUtils {",
                " \t * @param metaDepth the meta-depth of the annotation",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t * @since 4.2",
                "@@ -981,3 +979,3 @@ public class AnnotatedElementUtils {",
                " \t * @param processor the processor to delegate to",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t * @since 4.2",
                "@@ -1003,3 +1001,3 @@ public class AnnotatedElementUtils {",
                " \t * @param processor the processor to delegate to",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t * @since 4.3",
                "@@ -1041,3 +1039,3 @@ public class AnnotatedElementUtils {",
                " \t * @param metaDepth the meta-depth of the annotation",
                "-\t * @return the result of the processor, potentially {@code null}",
                "+\t * @return the result of the processor (potentially {@code null})",
                " \t * @since 4.2",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index f764ceddbf..3fb11e3095 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -900,2 +900,27 @@ public abstract class AnnotationUtils {",
                "+\t/**",
                "+\t * Check the declared attributes of the given annotation, in particular covering",
                "+\t * Google App Engine's late arrival of {@code TypeNotPresentExceptionProxy} for",
                "+\t * {@code Class} values (instead of early {@code Class.getAnnotations() failure}.",
                "+\t * <p>This method not failing indicates that {@link #getAnnotationAttributes(Annotation)}",
                "+\t * won't failure either (when attempted later on).",
                "+\t * @param annotation the annotation to validate",
                "+\t * @throws IllegalStateException if a declared {@code Class} attribute could not be read",
                "+\t * @since 4.3.15",
                "+\t * @see Class#getAnnotations()",
                "+\t * @see #getAnnotationAttributes(Annotation)",
                "+\t */",
                "+\tpublic static void validateAnnotation(Annotation annotation) {",
                "+\t\tfor (Method method : getAttributeMethods(annotation.annotationType())) {",
                "+\t\t\tif (method.getReturnType() == Class.class) {",
                "+\t\t\t\ttry {",
                "+\t\t\t\t\tmethod.invoke(annotation);",
                "+\t\t\t\t}",
                "+\t\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\t\tthrow new IllegalStateException(\"Could not obtain annotation attribute value for \" + method, ex);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "+",
                " \t/**",
                "@@ -1837,3 +1862,3 @@ public abstract class AnnotationUtils {",
                " \t\t\tif (loggerToUse.isDebugEnabled()) {",
                "-\t\t\t\tloggerToUse.debug(\"Failed to meta-introspect annotation [\" + element + \"]: \" + ex);",
                "+\t\t\t\tloggerToUse.debug(\"Failed to meta-introspect annotation \" + element + \": \" + ex);",
                " \t\t\t}",
                "@@ -1843,3 +1868,3 @@ public abstract class AnnotationUtils {",
                " \t\t\tif (loggerToUse.isInfoEnabled()) {",
                "-\t\t\t\tloggerToUse.info(\"Failed to introspect annotations on [\" + element + \"]: \" + ex);",
                "+\t\t\t\tloggerToUse.info(\"Failed to introspect annotations on \" + element + \": \" + ex);",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "7cafa6764ce12191bd824da06b88729dffc20e69"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "2c7efbb9d09f46691c905467e5a192f79acfa55b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521457491,
            "hunks": 27,
            "message": "Deprecate TableMetaDataContext.getSimulationQueryForGetGeneratedKey",
            "diff": [
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "index f5743e06bf..10823a73b1 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "@@ -38,3 +38,3 @@ import org.springframework.util.Assert;",
                " /**",
                "- * Class to manage context metadata used for the configuration",
                "+ * Class to manage context meta-data used for the configuration",
                "  * and execution of operations on a database table.",
                "@@ -65,9 +65,9 @@ public class TableMetaDataContext {",
                "-\t// Should we access insert parameter meta data info or not",
                "+\t// Should we access insert parameter meta-data info or not",
                " \tprivate boolean accessTableColumnMetaData = true;",
                "-\t// Should we override default for including synonyms for meta data lookups",
                "+\t// Should we override default for including synonyms for meta-data lookups",
                " \tprivate boolean overrideIncludeSynonymsDefault = false;",
                "-\t// The provider of table meta data",
                "+\t// The provider of table meta-data",
                " \t@Nullable",
                "@@ -125,3 +125,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Specify whether we should access table column meta data.",
                "+\t * Specify whether we should access table column meta-data.",
                " \t */",
                "@@ -132,3 +132,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Are we accessing table meta data?",
                "+\t * Are we accessing table meta-data?",
                " \t */",
                "@@ -162,3 +162,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Process the current meta data with the provided configuration options.",
                "+\t * Process the current meta-data with the provided configuration options.",
                " \t * @param dataSource the DataSource being used",
                "@@ -178,3 +178,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Compare columns created from metadata with declared columns and return a reconciled list.",
                "+\t * Compare columns created from meta-data with declared columns and return a reconciled list.",
                " \t * @param declaredColumns declared column names",
                "@@ -209,3 +209,3 @@ public class TableMetaDataContext {",
                " \t\t// For parameter source lookups we need to provide case-insensitive lookup support since the",
                "-\t\t// database metadata is not necessarily providing case-sensitive column names",
                "+\t\t// database meta-data is not necessarily providing case-sensitive column names",
                " \t\tMap<String, String> caseInsensitiveParameterNames =",
                "@@ -259,3 +259,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Build the insert string based on configuration and metadata information",
                "+\t * Build the insert string based on configuration and meta-data information",
                " \t * @return the insert string to be used",
                "@@ -307,3 +307,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Build the array of {@link java.sql.Types} based on configuration and metadata information",
                "+\t * Build the array of {@link java.sql.Types} based on configuration and meta-data information.",
                " \t * @return the array of types to be used",
                "@@ -313,4 +313,3 @@ public class TableMetaDataContext {",
                " \t\tList<TableParameterMetaData> parameters = obtainMetaDataProvider().getTableParameterMetaData();",
                "-\t\tMap<String, TableParameterMetaData> parameterMap =",
                "-\t\t\t\tnew LinkedHashMap<>(parameters.size());",
                "+\t\tMap<String, TableParameterMetaData> parameterMap = new LinkedHashMap<>(parameters.size());",
                " \t\tfor (TableParameterMetaData tpmd : parameters) {",
                "@@ -339,3 +338,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Does this database support the JDBC 3.0 feature of retrieving generated keys",
                "+\t * Does this database support the JDBC 3.0 feature of retrieving generated keys:",
                " \t * {@link java.sql.DatabaseMetaData#supportsGetGeneratedKeys()}?",
                "@@ -348,3 +347,3 @@ public class TableMetaDataContext {",
                " \t * Does this database support simple query to retrieve generated keys",
                "-\t * when the JDBC 3.0 feature is not supported.",
                "+\t * when the JDBC 3.0 feature is not supported:",
                " \t * {@link java.sql.DatabaseMetaData#supportsGetGeneratedKeys()}?",
                "@@ -356,8 +355,17 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Does this database support simple query to retrieve generated keys",
                "-\t * when the JDBC 3.0 feature is not supported.",
                "-\t * {@link java.sql.DatabaseMetaData#supportsGetGeneratedKeys()}?",
                "+\t * @deprecated as of 4.3.15, in favor of {@link #getSimpleQueryForGetGeneratedKey}",
                " \t */",
                "+\t@Deprecated",
                " \t@Nullable",
                " \tpublic String getSimulationQueryForGetGeneratedKey(String tableName, String keyColumnName) {",
                "+\t\treturn getSimpleQueryForGetGeneratedKey(tableName, keyColumnName);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Does this database support a simple query to retrieve generated keys",
                "+\t * when the JDBC 3.0 feature is not supported:",
                "+\t * {@link java.sql.DatabaseMetaData#supportsGetGeneratedKeys()}?",
                "+\t */",
                "+\t@Nullable",
                "+\tpublic String getSimpleQueryForGetGeneratedKey(String tableName, String keyColumnName) {",
                " \t\treturn obtainMetaDataProvider().getSimpleQueryForGetGeneratedKey(tableName, keyColumnName);",
                "@@ -366,3 +374,3 @@ public class TableMetaDataContext {",
                " \t/**",
                "-\t * Is a column name String array for retrieving generated keys supported?",
                "+\t * Is a column name String array for retrieving generated keys supported:",
                " \t * {@link java.sql.Connection#createStruct(String, Object[])}?",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java",
                "index b772898c0b..70b8055b0a 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java",
                "@@ -52,4 +52,5 @@ import org.springframework.util.Assert;",
                "  * Abstract class to provide base functionality for easy inserts",
                "- * based on configuration options and database metadata.",
                "- * This class provides the base SPI for {@link SimpleJdbcInsert}.",
                "+ * based on configuration options and database meta-data.",
                "+ *",
                "+ * <p>This class provides the base SPI for {@link SimpleJdbcInsert}.",
                "  *",
                "@@ -67,3 +68,3 @@ public abstract class AbstractJdbcInsert {",
                "-\t/** Context used to retrieve and manage database metadata */",
                "+\t/** Context used to retrieve and manage database meta-data */",
                " \tprivate final TableMetaDataContext tableMetaDataContext = new TableMetaDataContext();",
                "@@ -206,3 +207,3 @@ public abstract class AbstractJdbcInsert {",
                " \t/**",
                "-\t * Specify whether the parameter metadata for the call should be used.",
                "+\t * Specify whether the parameter meta-data for the call should be used.",
                " \t * The default is {@code true}.",
                "@@ -241,3 +242,3 @@ public abstract class AbstractJdbcInsert {",
                " \t/**",
                "-\t * Compile this JdbcInsert using provided parameters and meta data plus other settings.",
                "+\t * Compile this JdbcInsert using provided parameters and meta-data plus other settings.",
                " \t * This finalizes the configuration for this object and subsequent attempts to compile are",
                "@@ -317,3 +318,3 @@ public abstract class AbstractJdbcInsert {",
                " \t\t\tthrow new InvalidDataAccessApiUsageException(",
                "-\t\t\t\t\t\"Configuration can't be altered once the class has been compiled or used\");",
                "+\t\t\t\t\t\"Configuration cannot be altered once the class has been compiled or used\");",
                " \t\t}",
                "@@ -455,5 +456,5 @@ public abstract class AbstractJdbcInsert {",
                " \t\t\tAssert.state(getTableName() != null, \"No table name set\");",
                "-\t\t\tfinal String keyQuery = this.tableMetaDataContext.getSimulationQueryForGetGeneratedKey(",
                "+\t\t\tfinal String keyQuery = this.tableMetaDataContext.getSimpleQueryForGetGeneratedKey(",
                " \t\t\t\t\tgetTableName(), getGeneratedKeyNames()[0]);",
                "-\t\t\tAssert.state(keyQuery != null, \"Query for simulating get generated keys can't be null\");",
                "+\t\t\tAssert.state(keyQuery != null, \"Query for simulating get generated keys must not be null\");",
                "@@ -604,3 +605,3 @@ public abstract class AbstractJdbcInsert {",
                " \t * Match the provided in parameter values with registered parameters and parameters",
                "-\t * defined via metadata processing.",
                "+\t * defined via meta-data processing.",
                " \t * @param parameterSource the parameter values provided as a {@link SqlParameterSource}",
                "@@ -614,3 +615,3 @@ public abstract class AbstractJdbcInsert {",
                " \t * Match the provided in parameter values with registered parameters and parameters",
                "-\t * defined via metadata processing.",
                "+\t * defined via meta-data processing.",
                " \t * @param args the parameter values provided in a Map"
            ],
            "changed_files": [
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/TableMetaDataContext.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/simple/AbstractJdbcInsert.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "0e7e49bab0786b4acf1cef159a966c47c80809c7"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f2478cf8cfd4d8b59eadb195d22d1287ee744692",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521822728,
            "hunks": 1,
            "message": "Contextual BeanCreationException in case of depending on a missing bean Issue: SPR-16628 (cherry picked from commit 937cd48)",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "index c147765e16..9e0044c0ee 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "@@ -295,3 +295,9 @@ public abstract class AbstractBeanFactory extends FactoryBeanRegistrySupport imp",
                " \t\t\t\t\t\tregisterDependentBean(dep, beanName);",
                "-\t\t\t\t\t\tgetBean(dep);",
                "+\t\t\t\t\t\ttry {",
                "+\t\t\t\t\t\t\tgetBean(dep);",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t\tcatch (NoSuchBeanDefinitionException ex) {",
                "+\t\t\t\t\t\t\tthrow new BeanCreationException(mbd.getResourceDescription(), beanName,",
                "+\t\t\t\t\t\t\t\t\t\"'\" + beanName + \"' depends on missing bean '\" + dep + \"'\", ex);",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "937cd48fcb3675daed5a65a9b4de5c7fcb56cb9b"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "618cb6155c073df24263f28103c3e130526c1931",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522330950,
            "hunks": 2,
            "message": "Correct description for doWithLocalFields Issue: SPR-16658 (cherry picked from commit 3ac46da)",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/ReflectionUtils.java b/spring-core/src/main/java/org/springframework/util/ReflectionUtils.java",
                "index 04f3e020b5..a43d016b08 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ReflectionUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ReflectionUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -647,4 +647,3 @@ public abstract class ReflectionUtils {",
                " \t/**",
                "-\t * Invoke the given callback on all fields in the target class, going up the",
                "-\t * class hierarchy to get all declared fields.",
                "+\t * Invoke the given callback on all locally declared fields in the given class.",
                " \t * @param clazz the target class to analyze"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/ReflectionUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "3ac46da22f9605aa45f104f0fa1d889d5d4c9d88"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "881817678fafb7ace42264242cb90a733ec310b8",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521222540,
            "hunks": 12,
            "message": "Scope annotation in class hierarchies vs XML bean definition inheritance Issue: SPR-16602 (cherry picked from commit 914b247)",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/Scope.java b/spring-context/src/main/java/org/springframework/context/annotation/Scope.java",
                "index b0daf8c0ce..cf64e8acd5 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/Scope.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/Scope.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -37,2 +37,8 @@ import org.springframework.core.annotation.AliasFor;",
                "  *",
                "+ * <p><b>NOTE:</b> {@code @Scope} annotations are only introspected on the",
                "+ * concrete bean class (for annotated components) or the factory method",
                "+ * (for {@code @Bean} methods). In contrast to XML bean definitions,",
                "+ * there is no notion of bean definition inheritance, and inheritance",
                "+ * hierarchies at the class level are irrelevant for metadata purposes.",
                "+ *",
                "  * <p>In this context, <em>scope</em> means the lifecycle of an instance,",
                "diff --git a/src/asciidoc/core-beans.adoc b/src/asciidoc/core-beans.adoc",
                "index 0f367cb711..a2b044842d 100644",
                "--- a/src/asciidoc/core-beans.adoc",
                "+++ b/src/asciidoc/core-beans.adoc",
                "@@ -308,19 +308,19 @@ Typically, such configuration will live in a \".groovy\" file with a structure as",
                " ----",
                "-    beans {",
                "-        dataSource(BasicDataSource) {",
                "-            driverClassName = \"org.hsqldb.jdbcDriver\"",
                "-            url = \"jdbc:hsqldb:mem:grailsDB\"",
                "-            username = \"sa\"",
                "-            password = \"\"",
                "-            settings = [mynew:\"setting\"]",
                "-        }",
                "-        sessionFactory(SessionFactory) {",
                "-            dataSource = dataSource",
                "-        }",
                "-        myService(MyService) {",
                "-            nestedBean = { AnotherBean bean ->",
                "-                dataSource = dataSource",
                "-            }",
                "-        }",
                "-    }",
                "+\tbeans {",
                "+\t\tdataSource(BasicDataSource) {",
                "+\t\t\tdriverClassName = \"org.hsqldb.jdbcDriver\"",
                "+\t\t\turl = \"jdbc:hsqldb:mem:grailsDB\"",
                "+\t\t\tusername = \"sa\"",
                "+\t\t\tpassword = \"\"",
                "+\t\t\tsettings = [mynew:\"setting\"]",
                "+\t\t}",
                "+\t\tsessionFactory(SessionFactory) {",
                "+\t\t\tdataSource = dataSource",
                "+\t\t}",
                "+\t\tmyService(MyService) {",
                "+\t\t\tnestedBean = { AnotherBean bean ->",
                "+\t\t\t\tdataSource = dataSource",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                " ----",
                "@@ -4471,3 +4471,3 @@ Your target beans can implement the `org.springframework.core.Ordered` interface",
                " the `@Order` or standard `@Priority` annotation if you want items in the array or list",
                "-to be sorted into a specific order. Otherwise their order will follow the registration",
                "+to be sorted in a specific order. Otherwise their order will follow the registration",
                " order of the corresponding target bean definitions in the container.",
                "@@ -4476,3 +4476,3 @@ The `@Order` annotation may be declared at target class level but also on `@Bean",
                " potentially being very individual per bean definition (in case of multiple definitions",
                "-with the same bean class). `@Order` values may influence priorities at injection points",
                "+with the same bean class). `@Order` values may influence priorities at injection points,",
                " but please be aware that they do not influence singleton startup order which is an",
                "@@ -4481,3 +4481,3 @@ orthogonal concern determined by dependency relationships and `@DependsOn` decla",
                " Note that the standard `javax.annotation.Priority` annotation is not available at the",
                "-`@Bean` level since it cannot be declared on methods. Its semantics can be modelled",
                "+`@Bean` level since it cannot be declared on methods. Its semantics can be modeled",
                " through `@Order` values in combination with `@Primary` on a single bean per type.",
                "@@ -5733,6 +5733,6 @@ corresponding bean definition.",
                "-If such an annotation contains no _name_ `value` or for any other detected component (such",
                "-as those discovered by custom filters), the default bean name generator returns the",
                "-uncapitalized non-qualified class name. For example, if the following two components",
                "-were detected, the names would be `myMovieLister` and `movieFinderImpl`:",
                "+If such an annotation contains no _name_ `value` or for any other detected component",
                "+(such as those discovered by custom filters), the default bean name generator returns",
                "+the uncapitalized non-qualified class name. For example, if the following component",
                "+classes were detected, the names would be `myMovieLister` and `movieFinderImpl`:",
                "@@ -5795,4 +5795,4 @@ As with Spring-managed components in general, the default and most common scope",
                " autodetected components is `singleton`. However, sometimes you need a different scope",
                "-which can be specified via the `@Scope` annotation. Simply provide the name of the scope",
                "-within the annotation:",
                "+which can be specified via the `@Scope` annotation. Simply provide the name of the",
                "+scope within the annotation:",
                "@@ -5808,4 +5808,15 @@ within the annotation:",
                "-For details on web-specific scopes, see <<beans-factory-scopes-other>>.",
                "+[NOTE]",
                "+====",
                "+`@Scope` annotations are only introspected on the concrete bean class (for annotated",
                "+components) or the factory method (for `@Bean` methods). In contrast to XML bean",
                "+definitions, there is no notion of bean definition inheritance, and inheritance",
                "+hierarchies at the class level are irrelevant for metadata purposes.",
                "+====",
                "+For details on web-specific scopes such as \"request\"/\"session\" in a Spring context,",
                "+see <<beans-factory-scopes-other>>. Like the pre-built annotations for those scopes,",
                "+you may also compose your own scoping annotations using Spring's meta-annotation",
                "+approach: e.g. a custom annotation meta-annotated with `@Scope(\"prototype\")`,",
                "+possibly also declaring a custom scoped-proxy mode.",
                "@@ -5834,4 +5845,3 @@ fully-qualified class name when configuring the scanner:",
                " \t<beans>",
                "-\t\t<context:component-scan base-package=\"org.example\"",
                "-\t\t\t\tscope-resolver=\"org.example.MyScopeResolver\" />",
                "+\t\t<context:component-scan base-package=\"org.example\" scope-resolver=\"org.example.MyScopeResolver\"/>",
                " \t</beans>",
                "@@ -5859,4 +5869,3 @@ the following configuration will result in standard JDK dynamic proxies:",
                " \t<beans>",
                "-\t\t<context:component-scan base-package=\"org.example\"",
                "-\t\t\tscoped-proxy=\"interfaces\" />",
                "+\t\t<context:component-scan base-package=\"org.example\" scoped-proxy=\"interfaces\"/>",
                " \t</beans>",
                "@@ -7978,2 +7987,11 @@ as a default. If no default is specified and a property cannot be resolved, an",
                "+[NOTE]",
                "+====",
                "+The `@PropertySource` annotation is repeatable according to Java 8 conventions.",
                "+However, all such `@PropertySource` annotations need to be declared at the same",
                "+level: either directly on the configuration class or as meta-annotations within the",
                "+same custom annotation. Mixing of direct annotations and meta-annotations is not",
                "+recommended since direct annotations will effectively override meta-annotations.",
                "+====",
                "+"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/Scope.java",
                "src/asciidoc/core-beans.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "914b2470dc8f55a6dc4fed1b39834d3a18d858fe"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1b1a69a144f657d46c752f1c017f64d3302891d2",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520857668,
            "hunks": 5,
            "message": "SimpleAliasRegistry fully synchronizes registerAlias and removeAlias Issue: SPR-16577",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java b/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java",
                "index fce7420811..0e676c43eb 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -47,19 +47,21 @@ public class SimpleAliasRegistry implements AliasRegistry {",
                " \t\tAssert.hasText(alias, \"'alias' must not be empty\");",
                "-\t\tif (alias.equals(name)) {",
                "-\t\t\tthis.aliasMap.remove(alias);",
                "-\t\t}",
                "-\t\telse {",
                "-\t\t\tString registeredName = this.aliasMap.get(alias);",
                "-\t\t\tif (registeredName != null) {",
                "-\t\t\t\tif (registeredName.equals(name)) {",
                "-\t\t\t\t\t// An existing alias - no need to re-register",
                "-\t\t\t\t\treturn;",
                "-\t\t\t\t}",
                "-\t\t\t\tif (!allowAliasOverriding()) {",
                "-\t\t\t\t\tthrow new IllegalStateException(\"Cannot register alias '\" + alias + \"' for name '\" +",
                "-\t\t\t\t\t\t\tname + \"': It is already registered for name '\" + registeredName + \"'.\");",
                "+\t\tsynchronized (this.aliasMap) {",
                "+\t\t\tif (alias.equals(name)) {",
                "+\t\t\t\tthis.aliasMap.remove(alias);",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\tString registeredName = this.aliasMap.get(alias);",
                "+\t\t\t\tif (registeredName != null) {",
                "+\t\t\t\t\tif (registeredName.equals(name)) {",
                "+\t\t\t\t\t\t// An existing alias - no need to re-register",
                "+\t\t\t\t\t\treturn;",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tif (!allowAliasOverriding()) {",
                "+\t\t\t\t\t\tthrow new IllegalStateException(\"Cannot register alias '\" + alias + \"' for name '\" +",
                "+\t\t\t\t\t\t\t\tname + \"': It is already registered for name '\" + registeredName + \"'.\");",
                "+\t\t\t\t\t}",
                " \t\t\t\t}",
                "+\t\t\t\tcheckForAliasCircle(name, alias);",
                "+\t\t\t\tthis.aliasMap.put(alias, name);",
                " \t\t\t}",
                "-\t\t\tcheckForAliasCircle(name, alias);",
                "-\t\t\tthis.aliasMap.put(alias, name);",
                " \t\t}",
                "@@ -94,5 +96,7 @@ public class SimpleAliasRegistry implements AliasRegistry {",
                " \tpublic void removeAlias(String alias) {",
                "-\t\tString name = this.aliasMap.remove(alias);",
                "-\t\tif (name == null) {",
                "-\t\t\tthrow new IllegalStateException(\"No alias '\" + alias + \"' registered\");",
                "+\t\tsynchronized (this.aliasMap) {",
                "+\t\t\tString name = this.aliasMap.remove(alias);",
                "+\t\t\tif (name == null) {",
                "+\t\t\t\tthrow new IllegalStateException(\"No alias '\" + alias + \"' registered\");",
                "+\t\t\t}",
                " \t\t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/SimpleAliasRegistry.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "3dff1b3f6e9589b4b33f0311e349c2bf694d89ea"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "a546cf0a3bf1ef29407da5083ce24882a46dd1d7",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522351714,
            "hunks": 3,
            "message": "Reject invalid forwarded headers Issue: SPR-16660",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java",
                "index 7489f7e06c..6f9883b33e 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java",
                "@@ -731,32 +731,39 @@ public class UriComponentsBuilder implements UriBuilder, Cloneable {",
                " \tUriComponentsBuilder adaptFromForwardedHeaders(HttpHeaders headers) {",
                "-\t\tString forwardedHeader = headers.getFirst(\"Forwarded\");",
                "-\t\tif (StringUtils.hasText(forwardedHeader)) {",
                "-\t\t\tString forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, \",\")[0];",
                "-\t\t\tMatcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse);",
                "-\t\t\tif (matcher.find()) {",
                "-\t\t\t\tscheme(matcher.group(1).trim());",
                "-\t\t\t\tport(null);",
                "-\t\t\t}",
                "-\t\t\tmatcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse);",
                "-\t\t\tif (matcher.find()) {",
                "-\t\t\t\tadaptForwardedHost(matcher.group(1).trim());",
                "-\t\t\t}",
                "-\t\t}",
                "-\t\telse {",
                "-\t\t\tString protocolHeader = headers.getFirst(\"X-Forwarded-Proto\");",
                "-\t\t\tif (StringUtils.hasText(protocolHeader)) {",
                "-\t\t\t\tscheme(StringUtils.tokenizeToStringArray(protocolHeader, \",\")[0]);",
                "-\t\t\t\tport(null);",
                "+\t\ttry {",
                "+\t\t\tString forwardedHeader = headers.getFirst(\"Forwarded\");",
                "+\t\t\tif (StringUtils.hasText(forwardedHeader)) {",
                "+\t\t\t\tString forwardedToUse = StringUtils.tokenizeToStringArray(forwardedHeader, \",\")[0];",
                "+\t\t\t\tMatcher matcher = FORWARDED_PROTO_PATTERN.matcher(forwardedToUse);",
                "+\t\t\t\tif (matcher.find()) {",
                "+\t\t\t\t\tscheme(matcher.group(1).trim());",
                "+\t\t\t\t\tport(null);",
                "+\t\t\t\t}",
                "+\t\t\t\tmatcher = FORWARDED_HOST_PATTERN.matcher(forwardedToUse);",
                "+\t\t\t\tif (matcher.find()) {",
                "+\t\t\t\t\tadaptForwardedHost(matcher.group(1).trim());",
                "+\t\t\t\t}",
                " \t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\tString protocolHeader = headers.getFirst(\"X-Forwarded-Proto\");",
                "+\t\t\t\tif (StringUtils.hasText(protocolHeader)) {",
                "+\t\t\t\t\tscheme(StringUtils.tokenizeToStringArray(protocolHeader, \",\")[0]);",
                "+\t\t\t\t\tport(null);",
                "+\t\t\t\t}",
                "-\t\t\tString hostHeader = headers.getFirst(\"X-Forwarded-Host\");",
                "-\t\t\tif (StringUtils.hasText(hostHeader)) {",
                "-\t\t\t\tadaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, \",\")[0]);",
                "-\t\t\t}",
                "+\t\t\t\tString hostHeader = headers.getFirst(\"X-Forwarded-Host\");",
                "+\t\t\t\tif (StringUtils.hasText(hostHeader)) {",
                "+\t\t\t\t\tadaptForwardedHost(StringUtils.tokenizeToStringArray(hostHeader, \",\")[0]);",
                "+\t\t\t\t}",
                "-\t\t\tString portHeader = headers.getFirst(\"X-Forwarded-Port\");",
                "-\t\t\tif (StringUtils.hasText(portHeader)) {",
                "-\t\t\t\tport(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, \",\")[0]));",
                "+\t\t\t\tString portHeader = headers.getFirst(\"X-Forwarded-Port\");",
                "+\t\t\t\tif (StringUtils.hasText(portHeader)) {",
                "+\t\t\t\t\tport(Integer.parseInt(StringUtils.tokenizeToStringArray(portHeader, \",\")[0]));",
                "+\t\t\t\t}",
                " \t\t\t}",
                " \t\t}",
                "+\t\tcatch (NumberFormatException ex) {",
                "+\t\t\tthrow new IllegalArgumentException(\"Failed to parse a port from \\\"forwarded\\\"-type headers. \" +",
                "+\t\t\t\t\t\"If not behind a trusted proxy, consider using ForwardedHeaderFilter \" +",
                "+\t\t\t\t\t\"with the removeOnly=true. Request headers: \" + headers);",
                "+\t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/util/UriComponentsBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e8c656d2bc67f47e39fed08e7195ea077578c49e"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "53d01392d70daef1d198e6563fd8f96d0d0166a0",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522331102,
            "hunks": 5,
            "message": "Workaround for inner class constructor parameter annotation bug in javac Issue: SPR-16652",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/MethodParameter.java b/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "index 1a6dda592d..b8116804ea 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -24,2 +24,3 @@ import java.lang.reflect.Member;",
                " import java.lang.reflect.Method;",
                "+import java.lang.reflect.Modifier;",
                " import java.lang.reflect.Parameter;",
                "@@ -59,2 +60,4 @@ public class MethodParameter {",
                "+\tprivate static final Annotation[] EMPTY_ANNOTATION_ARRAY = new Annotation[0];",
                "+",
                " \tprivate final Executable executable;",
                "@@ -516,7 +519,16 @@ public class MethodParameter {",
                " \t\t\tAnnotation[][] annotationArray = this.executable.getParameterAnnotations();",
                "-\t\t\tif (this.parameterIndex >= 0 && this.parameterIndex < annotationArray.length) {",
                "-\t\t\t\tparamAnns = adaptAnnotationArray(annotationArray[this.parameterIndex]);",
                "+\t\t\tint index = this.parameterIndex;",
                "+\t\t\tif (this.executable instanceof Constructor &&",
                "+\t\t\t\t\tthis.executable.getDeclaringClass().isMemberClass() &&",
                "+\t\t\t\t\t!Modifier.isStatic(this.executable.getDeclaringClass().getModifiers()) &&",
                "+\t\t\t\t\tannotationArray.length == this.executable.getParameterCount() - 1) {",
                "+\t\t\t\t// Bug in javac in JDK <9: annotation array excludes enclosing instance parameter",
                "+\t\t\t\t// for inner classes, so access it with the actual parameter index lowered by 1",
                "+\t\t\t\tindex = this.parameterIndex - 1;",
                "+\t\t\t}",
                "+\t\t\tif (index >= 0 && index < annotationArray.length) {",
                "+\t\t\t\tparamAnns = adaptAnnotationArray(annotationArray[index]);",
                " \t\t\t}",
                " \t\t\telse {",
                "-\t\t\t\tparamAnns = new Annotation[0];",
                "+\t\t\t\tparamAnns = EMPTY_ANNOTATION_ARRAY;",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/MethodParameter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "5f6b04251e1643d7ba22fcff708fcf196a36dcc6"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "71126faae06e6a0727a0c02d685518ab6e43254d",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522194733,
            "hunks": 1,
            "message": "MimeTypeUtils trims parameter names / values Issue: SPR-16630",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "index 6cf7e00107..decf391887 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "@@ -290,4 +290,4 @@ public abstract class MimeTypeUtils {",
                " \t\t\t\tif (eqIndex >= 0) {",
                "-\t\t\t\t\tString attribute = parameter.substring(0, eqIndex);",
                "-\t\t\t\t\tString value = parameter.substring(eqIndex + 1, parameter.length());",
                "+\t\t\t\t\tString attribute = parameter.substring(0, eqIndex).trim();",
                "+\t\t\t\t\tString value = parameter.substring(eqIndex + 1, parameter.length()).trim();",
                " \t\t\t\t\tparameters.put(attribute, value);"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "e00384a6fd4bde8f009b78e11895a64c89d51b95"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "82cb5dbf2ba238e0f962e4323c21321afa556471",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522295853,
            "hunks": 1,
            "message": "NamedParameterUtils.parseSqlStatement should parse :{x} style parameter correctly In my opinion, we should parse \":{x}\" style parameter as \"x\" is parameter using \"NamedParameterUtils.parseSqlStatement\", so the condition \"j - i > 2\" is the correct condition, not \"j - i > 3\", because if \"i\" is the index of \":\" in \":{x}\", and \"j\" is the index of \"}\" in \":{x}\",  \"j - i == 3\" is true. Also add a test case for SPR-16663.",
            "diff": [
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java",
                "index b3b91cb3f0..211ee1ff63 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java",
                "@@ -132,3 +132,3 @@ public abstract class NamedParameterUtils {",
                " \t\t\t\t\t}",
                "-\t\t\t\t\tif (j - i > 3) {",
                "+\t\t\t\t\tif (j - i > 2) {",
                " \t\t\t\t\t\tparameter = sql.substring(i + 2, j);"
            ],
            "changed_files": [
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/namedparam/NamedParameterUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f3dd22da5b6a40922dca8a41f400281239152490"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8d2f64fe2dd799ce7c4aa0a184b4acba1c5eaa43",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522305836,
            "hunks": 1,
            "message": "Nested \"enum\"s should not be declared static Closes gh-1759",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java",
                "index a21670dc21..212d8a3af1 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java",
                "@@ -375,3 +375,3 @@ public class ReflectionHelper {",
                "-\tstatic enum ArgumentsMatchKind {",
                "+\tenum ArgumentsMatchKind {"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1759": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1759",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "dd96c873e392a8afc31f0762d90edef914aadf04",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522354261,
            "hunks": 15,
            "message": "Improve docs on forwarded headers Issue: SPR-16660",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java",
                "index 76d49fb894..5efafcb77e 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -83,2 +83,9 @@ public @interface CrossOrigin {",
                " \t * <p>By default all origins are allowed.",
                "+\t * <p><strong>Note:</strong> CORS checks use values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t * @see #value",
                "diff --git a/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java b/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java",
                "index 6b39369d67..5478bb6656 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -147,2 +147,9 @@ public class CorsConfiguration {",
                " \t * <p>By default this is not set.",
                "+\t * <p><strong>Note:</strong> CORS checks use values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/web/cors/reactive/CorsUtils.java b/spring-web/src/main/java/org/springframework/web/cors/reactive/CorsUtils.java",
                "index 073409a0d6..23380447ed 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/cors/reactive/CorsUtils.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/cors/reactive/CorsUtils.java",
                "@@ -56,2 +56,9 @@ public abstract class CorsUtils {",
                " \t * of a cross-origin request",
                "+\t * <p><strong>Note:</strong> this method uses values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t */",
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/WebUtils.java b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java",
                "index 3a390245fa..6af42f4546 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/WebUtils.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/WebUtils.java",
                "@@ -679,2 +679,9 @@ public abstract class WebUtils {",
                " \t * An empty list means only same origin is allowed.",
                "+\t * <p><strong>Note:</strong> this method may use values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t * @return {@code true} if the request origin is valid, {@code false} otherwise",
                "@@ -703,2 +710,9 @@ public abstract class WebUtils {",
                " \t * @code X-Forwarded-Port} headers.",
                "+\t * <p><strong>Note:</strong> this method uses values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t * @return {@code true} if the request is a same-origin one, {@code false} in case",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java b/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java",
                "index e70119c7fd..0c4d6cc94c 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -51,2 +51,9 @@ public class CorsRegistration {",
                " \t * <p>By default all origins are allowed.",
                "+\t * <p><strong>Note:</strong> CORS checks use values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t */",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/CorsRegistration.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/CorsRegistration.java",
                "index db1b192e38..429836ef2a 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/CorsRegistration.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/CorsRegistration.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -53,2 +53,9 @@ public class CorsRegistration {",
                " \t * <p>By default, all origins are allowed.",
                "+\t * <p><strong>Note:</strong> CORS checks use values from \"Forwarded\"",
                "+\t * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+\t * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+\t * if present, in order to reflect the client-originated address.",
                "+\t * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+\t * central place whether to extract and use, or to discard such headers.",
                "+\t * See the Spring Framework reference for more on this filter.",
                " \t */",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "index 6ab89eccbb..f217e911b8 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -85,10 +85,9 @@ import org.springframework.web.util.UriComponentsBuilder;",
                "  *",
                "- * <p><strong>Note:</strong> This class extracts and uses values from the headers",
                "- * \"Forwarded\" (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "- * or \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" if",
                "- * \"Forwarded\" is not found, in order to reflect the client-originated protocol",
                "- * and address. As an alternative consider using the",
                "- * {@link org.springframework.web.filter.ForwardedHeaderFilter} to have such",
                "- * headers extracted once and removed, or removed only (without being used).",
                "- * See the reference for further information including security considerations.",
                "+ * <p><strong>Note:</strong> This class uses values from \"Forwarded\"",
                "+ * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+ * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+ * if present, in order to reflect the client-originated protocol and address.",
                "+ * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+ * central place whether to extract and use, or to discard such headers.",
                "+ * See the Spring Framework reference for more on this filter.",
                "  *",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "index 17ac0343a9..8f50db6319 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "@@ -38,10 +38,9 @@ import org.springframework.web.util.UrlPathHelper;",
                "  *",
                "- * <p><strong>Note:</strong> This class extracts and uses values from the headers",
                "- * \"Forwarded\" (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "- * or \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" if",
                "- * \"Forwarded\" is not found, in order to reflect the client-originated protocol",
                "- * and address. As an alternative consider using the",
                "- * {@link org.springframework.web.filter.ForwardedHeaderFilter} to have such",
                "- * headers extracted once and removed, or removed only (without being used).",
                "- * See the reference for further information including security considerations.",
                "+ * <p><strong>Note:</strong> This class uses values from \"Forwarded\"",
                "+ * (<a href=\"http://tools.ietf.org/html/rfc7239\">RFC 7239</a>),",
                "+ * \"X-Forwarded-Host\", \"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers,",
                "+ * if present, in order to reflect the client-originated protocol and address.",
                "+ * Consider using the {@code ForwardedHeaderFilter} in order to choose from a",
                "+ * central place whether to extract and use, or to discard such headers.",
                "+ * See the Spring Framework reference for more on this filter.",
                "  *",
                "diff --git a/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc.xsd b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc.xsd",
                "index 071ecae722..df49cfe09a 100644",
                "--- a/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc.xsd",
                "+++ b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc.xsd",
                "@@ -1333,2 +1333,8 @@",
                " \tThe special value \"*\" allows all domains (default).",
                "+",
                "+\tNote that CORS checks use values from \"Forwarded\" (RFC 7239), \"X-Forwarded-Host\",",
                "+\t\"X-Forwarded-Port\", and \"X-Forwarded-Proto\" headers, if present, in order to reflect",
                "+\tthe client-originated address. Consider using the ForwardedHeaderFilter in order to",
                "+\tchoose from a central place whether to extract and use such headers, or whether to",
                "+\tdiscard them. See the Spring Framework reference for more on this filter.",
                " \t\t\t\t\t\t\t\t]]></xsd:documentation>"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/bind/annotation/CrossOrigin.java",
                "spring-web/src/main/java/org/springframework/web/cors/CorsConfiguration.java",
                "spring-web/src/main/java/org/springframework/web/cors/reactive/CorsUtils.java",
                "spring-web/src/main/java/org/springframework/web/util/WebUtils.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/config/CorsRegistration.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/CorsRegistration.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/support/ServletUriComponentsBuilder.java",
                "spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc.xsd"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "de4da5ea4e2de8ba4964d03c389aa47368d773b9"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f9e6ea548241194b46e7eed1e47960e2c30119b7",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522289614,
            "hunks": 3,
            "message": "MvcResult returns asyncResult after asyncDispatch Issue: SPR-16648",
            "diff": [
                "diff --git a/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java b/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java",
                "index c36c67e9af..ed63a6902d 100644",
                "--- a/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java",
                "+++ b/spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -67,3 +67,10 @@ public class MockAsyncContext implements AsyncContext {",
                " \t\tAssert.notNull(handler, \"Dispatch handler must not be null\");",
                "-\t\tthis.dispatchHandlers.add(handler);",
                "+\t\tsynchronized (this) {",
                "+\t\t\tif (this.dispatchedPath == null) {",
                "+\t\t\t\tthis.dispatchHandlers.add(handler);",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\thandler.run();",
                "+\t\t\t}",
                "+\t\t}",
                " \t}",
                "@@ -98,5 +105,5 @@ public class MockAsyncContext implements AsyncContext {",
                " \tpublic void dispatch(@Nullable ServletContext context, String path) {",
                "-\t\tthis.dispatchedPath = path;",
                "-\t\tfor (Runnable r : this.dispatchHandlers) {",
                "-\t\t\tr.run();",
                "+\t\tsynchronized (this) {",
                "+\t\t\tthis.dispatchedPath = path;",
                "+\t\t\tthis.dispatchHandlers.forEach(Runnable::run);",
                " \t\t}"
            ],
            "changed_files": [
                "spring-test/src/main/java/org/springframework/mock/web/MockAsyncContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "6e4bbac6f7d54fe8f7c4c0ac6a94e924cb24765e"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "4bc3e0c2b4c703b3da90774e948f8adb18f334f9",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521058228,
            "hunks": 65,
            "message": "Add SimpleEvaluationContext Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "new file mode 100644",
                "index 0000000000..06f14cc8f0",
                "--- /dev/null",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -0,0 +1,195 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.expression.spel.support;",
                "+",
                "+import java.util.ArrayList;",
                "+import java.util.Collections;",
                "+import java.util.HashMap;",
                "+import java.util.List;",
                "+import java.util.Map;",
                "+",
                "+import org.springframework.expression.BeanResolver;",
                "+import org.springframework.expression.ConstructorResolver;",
                "+import org.springframework.expression.EvaluationContext;",
                "+import org.springframework.expression.EvaluationException;",
                "+import org.springframework.expression.MethodResolver;",
                "+import org.springframework.expression.OperatorOverloader;",
                "+import org.springframework.expression.PropertyAccessor;",
                "+import org.springframework.expression.TypeComparator;",
                "+import org.springframework.expression.TypeConverter;",
                "+import org.springframework.expression.TypeLocator;",
                "+import org.springframework.expression.TypedValue;",
                "+import org.springframework.expression.spel.SpelEvaluationException;",
                "+import org.springframework.expression.spel.SpelMessage;",
                "+",
                "+/**",
                "+ * A basic implementation of {@link EvaluationContext} that focuses on a subset",
                "+ * of essential SpEL features and configuration options, and relies on default",
                "+ * strategies otherwise.",
                "+ *",
                "+ * <p>In many cases, the full extent of the SpEL is not",
                "+ * required and should be meaningfully restricted. Examples include but are not",
                "+ * limited to data binding expressions, property-based filters, and others. To",
                "+ * that effect, {@code SimpleEvaluationContext} supports only a subset of the",
                "+ * SpEL language syntax that excludes references to Java types, constructors,",
                "+ * and bean references.",
                "+ *",
                "+ * <p>Note that {@code SimpleEvaluationContext} cannot be configured with a",
                "+ * default root object. Instead it is meant to be created once and used",
                "+ * repeatedly through method variants on",
                "+ * {@link org.springframework.expression.Expression Expression} that accept",
                "+ * both an {@code EvaluationContext} and a root object.",
                "+ *",
                "+ * @author Rossen Stoyanchev",
                "+ * @since 4.3.15",
                "+ */",
                "+public class SimpleEvaluationContext implements EvaluationContext {",
                "+",
                "+\tprivate static final TypeLocator typeNotFoundTypeLocator = new TypeLocator() {",
                "+",
                "+\t\t@Override",
                "+\t\tpublic Class<?> findType(String typeName) throws EvaluationException {",
                "+\t\t\tthrow new SpelEvaluationException(SpelMessage.TYPE_NOT_FOUND, typeName);",
                "+\t\t}",
                "+\t};",
                "+",
                "+",
                "+\tprivate final List<PropertyAccessor> propertyAccessors;",
                "+",
                "+\tprivate final List<ConstructorResolver> constructorResolvers =",
                "+\t\t\tCollections.<ConstructorResolver>singletonList(new ReflectiveConstructorResolver());",
                "+",
                "+\tprivate final List<MethodResolver> methodResolvers =",
                "+\t\t\tCollections.<MethodResolver>singletonList(new ReflectiveMethodResolver());",
                "+",
                "+\tprivate final TypeConverter typeConverter;",
                "+",
                "+\tprivate final TypeComparator typeComparator = new StandardTypeComparator();",
                "+",
                "+\tprivate final OperatorOverloader operatorOverloader = new StandardOperatorOverloader();",
                "+",
                "+\tprivate final Map<String, Object> variables = new HashMap<String, Object>();",
                "+",
                "+",
                "+\tpublic SimpleEvaluationContext() {",
                "+\t\tthis(null, null);",
                "+\t}",
                "+",
                "+\tpublic SimpleEvaluationContext(List<PropertyAccessor> accessors, TypeConverter converter) {",
                "+\t\tthis.propertyAccessors = initPropertyAccessors(accessors);",
                "+\t\tthis.typeConverter = converter != null ? converter : new StandardTypeConverter();",
                "+\t}",
                "+",
                "+",
                "+\tprivate static List<PropertyAccessor> initPropertyAccessors(List<PropertyAccessor> accessors) {",
                "+\t\tif (accessors == null) {",
                "+\t\t\taccessors = new ArrayList<PropertyAccessor>(5);",
                "+\t\t\taccessors.add(new ReflectivePropertyAccessor());",
                "+\t\t}",
                "+\t\treturn accessors;",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * {@code SimpleEvaluationContext} cannot be configured with a root object.",
                "+\t * It is meant for repeated use with",
                "+\t * {@link org.springframework.expression.Expression Expression} method",
                "+\t * variants that accept both an {@code EvaluationContext} and a root object.",
                "+\t * @return Always returns {@link TypedValue#NULL}.",
                "+\t */",
                "+\t@Override",
                "+\tpublic TypedValue getRootObject() {",
                "+\t\treturn TypedValue.NULL;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic List<PropertyAccessor> getPropertyAccessors() {",
                "+\t\treturn this.propertyAccessors;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Return a single {@link ReflectiveConstructorResolver}.",
                "+\t */",
                "+\t@Override",
                "+\tpublic List<ConstructorResolver> getConstructorResolvers() {",
                "+\t\treturn this.constructorResolvers;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Return a single {@link ReflectiveMethodResolver}.",
                "+\t */",
                "+\t@Override",
                "+\tpublic List<MethodResolver> getMethodResolvers() {",
                "+\t\treturn this.methodResolvers;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * {@code SimpleEvaluationContext} does not support use of bean references.",
                "+\t * @return Always returns {@code null}",
                "+\t */",
                "+\t@Override",
                "+\tpublic BeanResolver getBeanResolver() {",
                "+\t\treturn null;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * {@code SimpleEvaluationContext} does not support use of type references.",
                "+\t * @return {@code TypeLocator} implementation that raises a",
                "+\t * {@link SpelEvaluationException} with {@link SpelMessage#TYPE_NOT_FOUND}.",
                "+\t */",
                "+\t@Override",
                "+\tpublic TypeLocator getTypeLocator() {",
                "+\t\treturn typeNotFoundTypeLocator;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * The configured {@link TypeConverter}.",
                "+\t * <p>By default this is {@link StandardTypeConverter}.",
                "+\t */",
                "+\t@Override",
                "+\tpublic TypeConverter getTypeConverter() {",
                "+\t\treturn this.typeConverter;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Return an instance of {@link StandardTypeComparator}.",
                "+\t */",
                "+\t@Override",
                "+\tpublic TypeComparator getTypeComparator() {",
                "+\t\treturn this.typeComparator;",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Return an instance of {@link StandardOperatorOverloader}.",
                "+\t */",
                "+\t@Override",
                "+\tpublic OperatorOverloader getOperatorOverloader() {",
                "+\t\treturn this.operatorOverloader;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void setVariable(String name, Object value) {",
                "+\t\tthis.variables.put(name, value);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Object lookupVariable(String name) {",
                "+\t\treturn this.variables.get(name);",
                "+\t}",
                "+",
                "+}",
                "diff --git a/src/asciidoc/core-expressions.adoc b/src/asciidoc/core-expressions.adoc",
                "index 85796bab87..3ac3a0e69c 100644",
                "--- a/src/asciidoc/core-expressions.adoc",
                "+++ b/src/asciidoc/core-expressions.adoc",
                "@@ -8,2 +8,3 @@",
                " == Introduction",
                "+",
                " The Spring Expression Language (SpEL for short) is a powerful expression language that",
                "@@ -37,8 +38,3 @@ populate them are listed at the end of the chapter.",
                "-",
                "-",
                "-",
                "-[[expressions-features]]",
                "-== Feature Overview",
                "-The expression language supports the following functionality",
                "+The expression language supports the following functionality:",
                "@@ -68,3 +64,4 @@ The expression language supports the following functionality",
                " [[expressions-evaluation]]",
                "-== Expression Evaluation using Spring's Expression Interface",
                "+== Evaluation",
                "+",
                " This section introduces the simple use of SpEL interfaces and its expression language.",
                "@@ -155,6 +152,5 @@ type `T` or converted using the registered type converter.",
                " The more common usage of SpEL is to provide an expression string that is evaluated",
                "-against a specific object instance (called the root object). There are two options here",
                "-and which to choose depends on whether the object against which the expression is being",
                "-evaluated will be changing with each call to evaluate the expression. In the following",
                "-example we retrieve the `name` property from an instance of the Inventor class.",
                "+against a specific object instance (called the root object). The example shows",
                "+how to retrieve the `name` property from an instance of the `Inventor` class or",
                "+create a boolean condition:",
                "@@ -171,62 +167,10 @@ example we retrieve the `name` property from an instance of the Inventor class.",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tExpression exp = parser.parseExpression(\"**name**\");",
                "-",
                "-\tEvaluationContext context = new StandardEvaluationContext(tesla);",
                "-\tString name = (String) exp.getValue(context);",
                "-----",
                "-",
                "-In the last line, the value of the string variable `name` will be set to \"Nikola Tesla\".",
                "-The class StandardEvaluationContext is where you can specify which object the \"name\"",
                "-property will be evaluated against. This is the mechanism to use if the root object is",
                "-unlikely to change, it can simply be set once in the evaluation context. If the root",
                "-object is likely to change repeatedly, it can be supplied on each call to `getValue`, as",
                "-this next example shows:",
                "-",
                "-[source,java,indent=0]",
                "-[subs=\"verbatim,quotes\"]",
                "-----",
                "-\t/ Create and set a calendar",
                "-\tGregorianCalendar c = new GregorianCalendar();",
                "-\tc.set(1856, 7, 9);",
                "-\t// The constructor arguments are name, birthday, and nationality.",
                "-\tInventor tesla = new Inventor(\"Nikola Tesla\", c.getTime(), \"Serbian\");",
                "-",
                "-\tExpressionParser parser = new SpelExpressionParser();",
                " \tExpression exp = parser.parseExpression(\"**name**\");",
                " \tString name = (String) exp.getValue(tesla);",
                "-----",
                "+\t// name == \"Nikola Tesla\"",
                "-In this case the inventor `tesla` has been supplied directly to `getValue` and the",
                "-expression evaluation infrastructure creates and manages a default evaluation context",
                "-internally - it did not require one to be supplied.",
                "-",
                "-The StandardEvaluationContext is relatively expensive to construct and during repeated",
                "-usage it builds up cached state that enables subsequent expression evaluations to be",
                "-performed more quickly. For this reason it is better to cache and reuse them where",
                "-possible, rather than construct a new one for each expression evaluation.",
                "-",
                "-In some cases it can be desirable to use a configured evaluation context and yet still",
                "-supply a different root object on each call to `getValue`. `getValue` allows both to be",
                "-specified on the same call. In these situations the root object passed on the call is",
                "-considered to override any (which maybe null) specified on the evaluation context.",
                "-",
                "-[NOTE]",
                "-====",
                "-In standalone usage of SpEL there is a need to create the parser, parse expressions and",
                "-perhaps provide evaluation contexts and a root context object. However, more common",
                "-usage is to provide only the SpEL expression string as part of a configuration file, for",
                "-example for Spring bean or Spring Web Flow definitions. In this case, the parser,",
                "-evaluation context, root object and any predefined variables are all set up implicitly,",
                "-requiring the user to specify nothing other than the expressions.",
                "-====",
                "-",
                "-As a final introductory example, the use of a boolean operator is shown using the",
                "-Inventor object in the previous example.",
                "-",
                "-[source,java,indent=0]",
                "-[subs=\"verbatim,quotes\"]",
                "-----",
                "-\tExpression exp = parser.parseExpression(\"name == 'Nikola Tesla'\");",
                "-\tboolean result = exp.getValue(context, Boolean.class); // evaluates to true",
                "+\texp = parser.parseExpression(\"name == 'Nikola Tesla'\");",
                "+\tboolean result = exp.getValue(tesla, Boolean.class);",
                "+\t// result == true",
                " ----",
                "@@ -236,18 +180,21 @@ Inventor object in the previous example.",
                " [[expressions-evaluation-context]]",
                "-=== The EvaluationContext interface",
                "+=== `EvaluationContext`",
                "+",
                " The interface `EvaluationContext` is used when evaluating an expression to resolve",
                " properties, methods, fields, and to help perform type conversion. The out-of-the-box",
                "-implementation, `StandardEvaluationContext`, uses reflection to manipulate the object,",
                "-caching `java.lang.reflect.Method`, `java.lang.reflect.Field`, and",
                "-`java.lang.reflect.Constructor` instances for increased performance.",
                "+implementations, `SimpleEvalutationContext` and `StandardEvaluationContext`, use",
                "+reflection to manipulate the object, caching `java.lang.reflect.Method`,",
                "+`java.lang.reflect.Field`, and `java.lang.reflect.Constructor` instances for increased",
                "+performance.",
                "+",
                "+`SimpleEvaluationContext` exposes a subset of essential SpEL language features and",
                "+configuration options. Certain categories of expressions, do not require the full extent",
                "+of the SpEL language syntax and arguably should be meaningfully restricted. Examples",
                "+include but are not limited to data binding expressions, property-based filters, and",
                "+others. To effect, `SimpleEvaluationContext` supports a subset of the SpEL language syntax",
                "+that excludes references to Java types, constructors, and bean references.",
                "-The `StandardEvaluationContext` is where you may specify the root object to evaluate",
                "-against via the method `setRootObject()` or passing the root object into the",
                "-constructor. You can also specify variables and functions that will be used in the",
                "-expression using the methods `setVariable()` and `registerFunction()`. The use of",
                "-variables and functions are described in the language reference sections",
                "-<<expressions-ref-variables,Variables>> and <<expressions-ref-functions,Functions>>. The",
                "-`StandardEvaluationContext` is also where you can register custom",
                "-``ConstructorResolver``s, ``MethodResolver``s, and ``PropertyAccessor``s to extend how SpEL",
                "-evaluates expressions. Please refer to the javadoc of these classes for more details.",
                "+`StandardEvaluationContext` exposes the full set of SpEL language features and",
                "+configuration options. You may use it to specify a default root object, and to configure",
                "+every available evaluation-related strategy.",
                "@@ -255,3 +202,4 @@ evaluates expressions. Please refer to the javadoc of these classes for more det",
                " [[expressions-type-conversion]]",
                "-==== Type Conversion",
                "+==== Type conversion",
                "+",
                " By default SpEL uses the conversion service available in Spring core (",
                "@@ -277,6 +225,5 @@ being placed in it. A simple example:",
                " \tSimple simple = new Simple();",
                "-",
                " \tsimple.booleanList.add(true);",
                "-\tStandardEvaluationContext simpleContext = new StandardEvaluationContext(simple);",
                "+\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "@@ -284,3 +231,4 @@ being placed in it. A simple example:",
                " \t// correctly recognize that it needs to be a Boolean and convert it",
                "-\tparser.parseExpression(\"booleanList[0]\").setValue(simpleContext, \"false\");",
                "+",
                "+\tparser.parseExpression(\"booleanList[0]\").setValue(context, simple, \"false\");",
                "@@ -290,5 +238,8 @@ being placed in it. A simple example:",
                "+",
                "+",
                " [[expressions-parser-configuration]]",
                " === Parser configuration",
                "-It is possible to configure the SpEL expression parser using a parser configuration object ",
                "+",
                "+It is possible to configure the SpEL expression parser using a parser configuration object",
                " (`org.springframework.expression.spel.SpelParserConfiguration`). The configuration",
                "@@ -327,2 +278,4 @@ It is also possible to configure the behaviour of the SpEL expression compiler.",
                "+",
                "+",
                " [[expressions-spel-compilation]]",
                "@@ -358,2 +311,3 @@ of the expression.",
                "+",
                " [[expressions-compiler-configuration]]",
                "@@ -417,2 +371,3 @@ enum values (`off`, `immediate`, or `mixed`).",
                "+",
                " [[expressions-compiler-limitations]]",
                "@@ -432,4 +387,8 @@ More and more types of expression will be compilable in the future.",
                "+",
                "+",
                "+",
                " [[expressions-beandef]]",
                "-== Expression support for defining bean definitions",
                "+== Expressions in bean definitions",
                "+",
                " SpEL expressions can be used with XML or annotation-based configuration metadata for",
                "@@ -441,3 +400,4 @@ form `#{ <expression string> }`.",
                " [[expressions-beandef-xml-based]]",
                "-=== XML based configuration",
                "+=== XML configuration",
                "+",
                " A property or constructor-arg value can be set using expressions as shown below.",
                "@@ -489,3 +449,4 @@ You can also refer to other bean properties by name, for example.",
                " [[expressions-beandef-annotation-based]]",
                "-=== Annotation-based configuration",
                "+=== Annotation config",
                "+",
                " The `@Value` annotation can be placed on fields, methods and method/constructor",
                "@@ -586,2 +547,3 @@ Autowired methods and constructors can also use the `@Value` annotation.",
                " === Literal expressions",
                "+",
                " The types of literal expressions supported are strings, numeric values (int, real, hex),",
                "@@ -619,2 +581,3 @@ By default real numbers are parsed using Double.parseDouble().",
                " === Properties, Arrays, Lists, Maps, Indexers",
                "+",
                " Navigating with property references is easy: just use a period to indicate a nested",
                "@@ -641,5 +604,5 @@ arrays and lists are obtained using square bracket notation.",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "+\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                " \t// Inventions Array",
                "-\tStandardEvaluationContext teslaContext = new StandardEvaluationContext(tesla);",
                "@@ -647,6 +610,5 @@ arrays and lists are obtained using square bracket notation.",
                " \tString invention = parser.parseExpression(\"inventions[3]\").getValue(",
                "-\t\t\tteslaContext, String.class);",
                "+\t\t\tcontext, tesla, String.class);",
                " \t// Members List",
                "-\tStandardEvaluationContext societyContext = new StandardEvaluationContext(ieee);",
                "@@ -654,3 +616,3 @@ arrays and lists are obtained using square bracket notation.",
                " \tString name = parser.parseExpression(\"Members[0].Name\").getValue(",
                "-\t\t\tsocietyContext, String.class);",
                "+\t\t\tcontext, ieee, String.class);",
                "@@ -659,3 +621,3 @@ arrays and lists are obtained using square bracket notation.",
                " \tString invention = parser.parseExpression(\"Members[0].Inventions[6]\").getValue(",
                "-\t\t\tsocietyContext, String.class);",
                "+\t\t\tcontext, ieee, String.class);",
                " ----",
                "@@ -687,2 +649,3 @@ string literals.",
                " === Inline lists",
                "+",
                " Lists can be expressed directly in an expression using `{}` notation.",
                "@@ -702,4 +665,7 @@ expression, rather than building a new list on each evaluation.",
                "+",
                "+",
                " [[expressions-inline-maps]]",
                " === Inline Maps",
                "+",
                " Maps can also be expressed directly in an expression using `{key:value}` notation.",
                "@@ -719,4 +685,7 @@ is optional, the examples above are not using quoted keys.",
                "+",
                "+",
                " [[expressions-array-construction]]",
                " === Array construction",
                "+",
                " Arrays can be built using the familiar Java syntax, optionally supplying an initializer",
                "@@ -743,2 +712,3 @@ multi-dimensional array.",
                " === Methods",
                "+",
                " Methods are invoked using typical Java programming syntax. You may also invoke methods",
                "@@ -765,2 +735,3 @@ on literals. Varargs are also supported.",
                " ==== Relational operators",
                "+",
                " The relational operators; equal, not equal, less than, less than or equal, greater than,",
                "@@ -827,2 +798,3 @@ shown here: `lt` (`<`), `gt` (`>`), `le` (`<=`), `ge` (`>=`), `eq` (`==`),",
                " ==== Logical operators",
                "+",
                " The logical operators that are supported are and, or, and not. Their use is demonstrated",
                "@@ -864,2 +836,3 @@ below.",
                " ==== Mathematical operators",
                "+",
                " The addition operator can be used on both numbers and strings. Subtraction, multiplication",
                "@@ -906,2 +879,3 @@ operators are demonstrated below.",
                " === Assignment",
                "+",
                " Setting of a property is done by using the assignment operator. This would typically be",
                "@@ -913,5 +887,5 @@ done within a call to `setValue` but can also be done inside a call to `getValue",
                " \tInventor inventor = new Inventor();",
                "-\tStandardEvaluationContext inventorContext = new StandardEvaluationContext(inventor);",
                "+\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "-\tparser.parseExpression(\"Name\").setValue(inventorContext, \"Alexander Seovic2\");",
                "+\tparser.parseExpression(\"Name\").setValue(context, inventor, \"Alexander Seovic2\");",
                "@@ -920,3 +894,3 @@ done within a call to `setValue` but can also be done inside a call to `getValue",
                " \tString aleks = parser.parseExpression(",
                "-\t\t\t\"Name = 'Alexandar Seovic'\").getValue(inventorContext, String.class);",
                "+\t\t\t\"Name = 'Alexandar Seovic'\").getValue(context, inventor, String.class);",
                " ----",
                "@@ -927,2 +901,3 @@ done within a call to `setValue` but can also be done inside a call to `getValue",
                " === Types",
                "+",
                " The special `T` operator can be used to specify an instance of java.lang.Class (the",
                "@@ -950,2 +925,3 @@ fully qualified, but all other type references must be.",
                " === Constructors",
                "+",
                " Constructors can be invoked using the new operator. The fully qualified class name",
                "@@ -971,4 +947,5 @@ used).",
                " === Variables",
                "+",
                " Variables can be referenced in the expression using the syntax `#variableName`. Variables",
                "-are set using the method setVariable on the `StandardEvaluationContext`.",
                "+are set using the method setVariable on `EvaluationContext` implementations.",
                "@@ -978,6 +955,6 @@ are set using the method setVariable on the `StandardEvaluationContext`.",
                " \tInventor tesla = new Inventor(\"Nikola Tesla\", \"Serbian\");",
                "-\tStandardEvaluationContext context = new StandardEvaluationContext(tesla);",
                "+\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                " \tcontext.setVariable(\"newName\", \"Mike Tesla\");",
                "-\tparser.parseExpression(\"Name = #newName\").getValue(context);",
                "+\tparser.parseExpression(\"Name = #newName\").getValue(context, tesla);",
                "@@ -989,2 +966,3 @@ are set using the method setVariable on the `StandardEvaluationContext`.",
                " ==== The #this and #root variables",
                "+",
                " The variable #this is always defined and refers to the current evaluation object",
                "@@ -1003,3 +981,3 @@ an expression are evaluated, #root always refers to the root.",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tStandardEvaluationContext context = new StandardEvaluationContext();",
                "+\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                " \tcontext.setVariable(\"primes\",primes);",
                "@@ -1016,5 +994,5 @@ an expression are evaluated, #root always refers to the root.",
                " === Functions",
                "+",
                " You can extend SpEL by registering user defined functions that can be called within the",
                "-expression string. The function is registered with the `StandardEvaluationContext` using",
                "-the method.",
                "+expression string. The function is registered through the `EvaluationContext`.",
                "@@ -1023,7 +1001,9 @@ the method.",
                " ----",
                "-\tpublic void registerFunction(String name, Method m)",
                "+\tMethod method = ...;",
                "+",
                "+\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tcontext.setVariable(\"myFunction\", method);",
                " ----",
                "-A reference to a Java Method provides the implementation of the function. For example, a",
                "-utility method to reverse a string is shown below.",
                "+For example, given a utility method to reverse a string is shown below:",
                "@@ -1044,4 +1024,3 @@ utility method to reverse a string is shown below.",
                "-This method is then registered with the evaluation context and can be used within an",
                "-expression string.",
                "+The above method can then be registered and used as follows:",
                "@@ -1051,5 +1030,5 @@ expression string.",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tStandardEvaluationContext context = new StandardEvaluationContext();",
                "+\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "-\tcontext.registerFunction(\"reverseString\",",
                "+\tcontext.setVariable(\"reverseString\",",
                " \t\tStringUtils.class.getDeclaredMethod(\"reverseString\", String.class));",
                "@@ -1064,2 +1043,3 @@ expression string.",
                " === Bean references",
                "+",
                " If the evaluation context has been configured with a bean resolver it is possible to",
                "@@ -1094,2 +1074,3 @@ To access a factory bean itself, the bean name should instead be prefixed with a",
                " === Ternary Operator (If-Then-Else)",
                "+",
                " You can use the ternary operator for performing if-then-else conditional logic inside",
                "@@ -1128,2 +1109,3 @@ ternary operator.",
                " === The Elvis Operator",
                "+",
                " The Elvis operator is a shortening of the ternary operator syntax and is used in the",
                "@@ -1160,5 +1142,5 @@ Here is a more complex example.",
                " \tInventor tesla = new Inventor(\"Nikola Tesla\", \"Serbian\");",
                "-\tStandardEvaluationContext context = new StandardEvaluationContext(tesla);",
                "+\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "-\tString name = parser.parseExpression(\"Name?:'Elvis Presley'\").getValue(context, String.class);",
                "+\tString name = parser.parseExpression(\"Name?:'Elvis Presley'\").getValue(context, tesla, String.class);",
                "@@ -1168,3 +1150,3 @@ Here is a more complex example.",
                "-\tname = parser.parseExpression(\"Name?:'Elvis Presley'\").getValue(context, String.class);",
                "+\tname = parser.parseExpression(\"Name?:'Elvis Presley'\").getValue(context, tesla, String.class);",
                "@@ -1177,2 +1159,3 @@ Here is a more complex example.",
                " === Safe Navigation operator",
                "+",
                " The Safe Navigation operator is used to avoid a `NullPointerException` and comes from",
                "@@ -1191,5 +1174,5 @@ safe navigation operator will simply return null instead of throwing an exceptio",
                "-\tStandardEvaluationContext context = new StandardEvaluationContext(tesla);",
                "+\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "-\tString city = parser.parseExpression(\"PlaceOfBirth?.City\").getValue(context, String.class);",
                "+\tString city = parser.parseExpression(\"PlaceOfBirth?.City\").getValue(context, tesla, String.class);",
                " \tSystem.out.println(city); // Smiljan",
                "@@ -1198,3 +1181,3 @@ safe navigation operator will simply return null instead of throwing an exceptio",
                "-\tcity = parser.parseExpression(\"PlaceOfBirth?.City\").getValue(context, String.class);",
                "+\tcity = parser.parseExpression(\"PlaceOfBirth?.City\").getValue(context, tesla, String.class);",
                "@@ -1221,2 +1204,3 @@ This will inject a system property `pop3.port` if it is defined or 25 if not.",
                " === Collection Selection",
                "+",
                " Selection is a powerful expression language feature that allows you to transform some"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "src/asciidoc/core-expressions.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "cb8c6e32519c21b6ec4eb097244c1e6464c29a89"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "6e1cac9145385c9b9dbcefbeec46b1a86985bc19",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522192896,
            "hunks": 7,
            "message": "AcceptHeaderLocaleResolver keeps language match among supported locales Issue: SPR-16599",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java",
                "index 9984b65b80..1755549171 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java",
                "@@ -99,6 +99,7 @@ public class AcceptHeaderLocaleResolver implements LocaleResolver {",
                " \t\tLocale requestLocale = request.getLocale();",
                "-\t\tif (isSupportedLocale(requestLocale)) {",
                "+\t\tList<Locale> supportedLocales = getSupportedLocales();",
                "+\t\tif (supportedLocales.isEmpty() || supportedLocales.contains(requestLocale)) {",
                " \t\t\treturn requestLocale;",
                " \t\t}",
                "-\t\tLocale supportedLocale = findSupportedLocale(request);",
                "+\t\tLocale supportedLocale = findSupportedLocale(request, supportedLocales);",
                " \t\tif (supportedLocale != null) {",
                "@@ -109,10 +110,4 @@ public class AcceptHeaderLocaleResolver implements LocaleResolver {",
                "-\tprivate boolean isSupportedLocale(Locale locale) {",
                "-\t\tList<Locale> supportedLocales = getSupportedLocales();",
                "-\t\treturn (supportedLocales.isEmpty() || supportedLocales.contains(locale));",
                "-\t}",
                "-",
                "-\tprivate Locale findSupportedLocale(HttpServletRequest request) {",
                "+\tprivate Locale findSupportedLocale(HttpServletRequest request, List<Locale> supportedLocales) {",
                " \t\tEnumeration<Locale> requestLocales = request.getLocales();",
                "-\t\tList<Locale> supported = getSupportedLocales();",
                " \t\tLocale languageMatch = null;",
                "@@ -120,5 +115,7 @@ public class AcceptHeaderLocaleResolver implements LocaleResolver {",
                " \t\t\tLocale locale = requestLocales.nextElement();",
                "-\t\t\tif (supported.contains(locale)) {",
                "-\t\t\t\t// Full match: typically language + country",
                "-\t\t\t\treturn locale;",
                "+\t\t\tif (supportedLocales.contains(locale)) {",
                "+\t\t\t\tif (languageMatch == null || languageMatch.getLanguage().equals(locale.getLanguage())) {",
                "+\t\t\t\t\t// Full match: language + country, possibly narrowed from earlier language-only match",
                "+\t\t\t\t\treturn locale;",
                "+\t\t\t\t}",
                " \t\t\t}",
                "@@ -126,3 +123,3 @@ public class AcceptHeaderLocaleResolver implements LocaleResolver {",
                " \t\t\t\t// Let's try to find a language-only match as a fallback",
                "-\t\t\t\tfor (Locale candidate : supported) {",
                "+\t\t\t\tfor (Locale candidate : supportedLocales) {",
                " \t\t\t\t\tif (!StringUtils.hasLength(candidate.getCountry()) &&",
                "@@ -130,2 +127,3 @@ public class AcceptHeaderLocaleResolver implements LocaleResolver {",
                " \t\t\t\t\t\tlanguageMatch = candidate;",
                "+\t\t\t\t\t\tbreak;",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/i18n/AcceptHeaderLocaleResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f8588e364a4846723ac4be6a914b13404ef412ea"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "8d8bb04783804898279c5a65754e829562959070",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521044224,
            "hunks": 8,
            "message": "ConcurrentReferenceHashMap properly handles getOrDefault for null values Issue: SPR-16584 (cherry picked from commit 356ef45)",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java b/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java",
                "index 17127f2eeb..cee33acdf9 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -225,4 +225,3 @@ public class ConcurrentReferenceHashMap<K, V> extends AbstractMap<K, V> implemen",
                " \tpublic V get(Object key) {",
                "-\t\tReference<K, V> reference = getReference(key, Restructure.WHEN_NECESSARY);",
                "-\t\tEntry<K, V> entry = (reference != null ? reference.get() : null);",
                "+\t\tEntry<K, V> entry = getEntryIfAvailable(key);",
                " \t\treturn (entry != null ? entry.getValue() : null);",
                "@@ -230,6 +229,11 @@ public class ConcurrentReferenceHashMap<K, V> extends AbstractMap<K, V> implemen",
                "+\t@Override",
                "+\tpublic V getOrDefault(Object key, V defaultValue) {",
                "+\t\tEntry<K, V> entry = getEntryIfAvailable(key);",
                "+\t\treturn (entry != null ? entry.getValue() : defaultValue);",
                "+\t}",
                "+",
                " \t@Override",
                " \tpublic boolean containsKey(Object key) {",
                "-\t\tReference<K, V> reference = getReference(key, Restructure.WHEN_NECESSARY);",
                "-\t\tEntry<K, V> entry = (reference != null ? reference.get() : null);",
                "+\t\tEntry<K, V> entry = getEntryIfAvailable(key);",
                " \t\treturn (entry != null && ObjectUtils.nullSafeEquals(entry.getKey(), key));",
                "@@ -237,2 +241,7 @@ public class ConcurrentReferenceHashMap<K, V> extends AbstractMap<K, V> implemen",
                "+\tprivate Entry<K, V> getEntryIfAvailable(Object key) {",
                "+\t\tReference<K, V> reference = getReference(key, Restructure.WHEN_NECESSARY);",
                "+\t\treturn (reference != null ? reference.get() : null);",
                "+\t}",
                "+",
                " \t/**",
                "@@ -584,9 +593,10 @@ public class ConcurrentReferenceHashMap<K, V> extends AbstractMap<K, V> implemen",
                " \t\tprivate Reference<K, V> findInChain(Reference<K, V> reference, Object key, int hash) {",
                "-\t\t\twhile (reference != null) {",
                "-\t\t\t\tif (reference.getHash() == hash) {",
                "-\t\t\t\t\tEntry<K, V> entry = reference.get();",
                "+\t\t\tReference<K, V> currRef = reference;",
                "+\t\t\twhile (currRef != null) {",
                "+\t\t\t\tif (currRef.getHash() == hash) {",
                "+\t\t\t\t\tEntry<K, V> entry = currRef.get();",
                " \t\t\t\t\tif (entry != null) {",
                " \t\t\t\t\t\tK entryKey = entry.getKey();",
                "-\t\t\t\t\t\tif (entryKey == key || entryKey.equals(key)) {",
                "-\t\t\t\t\t\t\treturn reference;",
                "+\t\t\t\t\t\tif (ObjectUtils.nullSafeEquals(entryKey, key)) {",
                "+\t\t\t\t\t\t\treturn currRef;",
                " \t\t\t\t\t\t}",
                "@@ -594,3 +604,3 @@ public class ConcurrentReferenceHashMap<K, V> extends AbstractMap<K, V> implemen",
                " \t\t\t\t}",
                "-\t\t\t\treference = reference.getNext();",
                "+\t\t\t\tcurrRef = currRef.getNext();",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "356ef45e99c9d1e409f3d04330c44e43d2b45811"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "301ba014278855681681e3bc1371bbd10a0d4489",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521457455,
            "hunks": 55,
            "message": "CallMetaDataContext handles 'procedureColumnResult' as return parameter Issue: SPR-16611 (cherry picked from commit b7c4238)",
            "diff": [
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "index ab96ef62ce..64ddd6ca48 100755",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "@@ -44,3 +44,4 @@ import org.springframework.util.StringUtils;",
                " /**",
                "- * Class to manage context metadata used for the configuration and execution of the call.",
                "+ * Class to manage context meta-data used for the configuration",
                "+ * and execution of a stored procedure call.",
                "  *",
                "@@ -83,3 +84,3 @@ public class CallMetaDataContext {",
                "-\t// Should we access call parameter meta data info or not",
                "+\t// Should we access call parameter meta-data info or not",
                " \tprivate boolean accessCallParameterMetaData = true;",
                "@@ -89,3 +90,3 @@ public class CallMetaDataContext {",
                "-\t// The provider of call meta data",
                "+\t// The provider of call meta-data",
                " \tprivate CallMetaDataProvider metaDataProvider;",
                "@@ -206,3 +207,3 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Specify whether call parameter metadata should be accessed.",
                "+\t * Specify whether call parameter meta-data should be accessed.",
                " \t */",
                "@@ -213,3 +214,3 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Check whether call parameter metadata should be accessed.",
                "+\t * Check whether call parameter meta-data should be accessed.",
                " \t */",
                "@@ -237,4 +238,4 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Initialize this class with metadata from the database.",
                "-\t * @param dataSource the DataSource used to retrieve metadata",
                "+\t * Initialize this class with meta-data from the database.",
                "+\t * @param dataSource the DataSource used to retrieve meta-data",
                " \t */",
                "@@ -260,3 +261,4 @@ public class CallMetaDataContext {",
                " \t\t\telse {",
                "-\t\t\t\tthrow new InvalidDataAccessApiUsageException(\"Return of a ResultSet from a stored procedure is not supported.\");",
                "+\t\t\t\tthrow new InvalidDataAccessApiUsageException(",
                "+\t\t\t\t\t\t\"Return of a ResultSet from a stored procedure is not supported\");",
                " \t\t\t}",
                "@@ -277,3 +279,3 @@ public class CallMetaDataContext {",
                " \t\t\t}",
                "-\t\t\treturn (this.outParameterNames.size() > 0 ? this.outParameterNames.get(0) : null);",
                "+\t\t\treturn (!this.outParameterNames.isEmpty() ? this.outParameterNames.get(0) : null);",
                " \t\t}",
                "@@ -289,4 +291,4 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Process the list of parameters provided, and if procedure column metadata is used,",
                "-\t * the parameters will be matched against the metadata information and any missing",
                "+\t * Process the list of parameters provided, and if procedure column meta-data is used,",
                "+\t * the parameters will be matched against the meta-data information and any missing",
                " \t * ones will be automatically included.",
                "@@ -299,3 +301,3 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Reconcile the provided parameters with available metadata and add new ones where appropriate.",
                "+\t * Reconcile the provided parameters with available meta-data and add new ones where appropriate.",
                " \t */",
                "@@ -308,5 +310,5 @@ public class CallMetaDataContext {",
                "-\t\t// Get the names of the meta data parameters",
                "+\t\t// Get the names of the meta-data parameters",
                " \t\tfor (CallParameterMetaData meta : this.metaDataProvider.getCallParameterMetaData()) {",
                "-\t\t\tif (meta.getParameterType() != DatabaseMetaData.procedureColumnReturn) {",
                "+\t\t\tif (!meta.isReturnParameter()) {",
                " \t\t\t\tmetaDataParamNames.add(meta.getParameterName().toLowerCase());",
                "@@ -330,11 +332,8 @@ public class CallMetaDataContext {",
                " \t\t\t\t\toutParamNames.add(paramName);",
                "-\t\t\t\t\tif (isFunction() && !metaDataParamNames.contains(paramNameToMatch)) {",
                "-\t\t\t\t\t\tif (!returnDeclared) {",
                "-\t\t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\t\tlogger.debug(\"Using declared out parameter '\" + paramName +",
                "-\t\t\t\t\t\t\t\t\t\t\"' for function return value\");",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\tsetFunctionReturnName(paramName);",
                "-\t\t\t\t\t\t\treturnDeclared = true;",
                "+\t\t\t\t\tif (isFunction() && !metaDataParamNames.contains(paramNameToMatch) && !returnDeclared) {",
                "+\t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\t\t\tlogger.debug(\"Using declared out parameter '\" + paramName + \"' for function return value\");",
                " \t\t\t\t\t\t}",
                "+\t\t\t\t\t\tsetFunctionReturnName(paramName);",
                "+\t\t\t\t\t\treturnDeclared = true;",
                " \t\t\t\t\t}",
                "@@ -347,3 +346,2 @@ public class CallMetaDataContext {",
                " \t\tworkParams.addAll(declaredReturnParams);",
                "-",
                " \t\tif (!this.metaDataProvider.isProcedureColumnMetaDataUsed()) {",
                "@@ -365,8 +363,7 @@ public class CallMetaDataContext {",
                " \t\t\tString paramNameToUse = this.metaDataProvider.parameterNameToUse(meta.getParameterName());",
                "-\t\t\tif (declaredParams.containsKey(paramNameToCheck) ||",
                "-\t\t\t\t\t(meta.getParameterType() == DatabaseMetaData.procedureColumnReturn && returnDeclared)) {",
                "+\t\t\tif (declaredParams.containsKey(paramNameToCheck) || (meta.isReturnParameter() && returnDeclared)) {",
                " \t\t\t\tSqlParameter param;",
                "-\t\t\t\tif (meta.getParameterType() == DatabaseMetaData.procedureColumnReturn) {",
                "+\t\t\t\tif (meta.isReturnParameter()) {",
                " \t\t\t\t\tparam = declaredParams.get(getFunctionReturnName());",
                "-\t\t\t\t\tif (param == null && getOutParameterNames().size() > 0) {",
                "+\t\t\t\t\tif (param == null && !getOutParameterNames().isEmpty()) {",
                " \t\t\t\t\t\tparam = declaredParams.get(getOutParameterNames().get(0).toLowerCase());",
                "@@ -394,3 +391,4 @@ public class CallMetaDataContext {",
                " \t\t\telse {",
                "-\t\t\t\tif (meta.getParameterType() == DatabaseMetaData.procedureColumnReturn) {",
                "+\t\t\t\tif (meta.isReturnParameter()) {",
                "+\t\t\t\t\t// DatabaseMetaData.procedureColumnReturn or possibly procedureColumnResult",
                " \t\t\t\t\tif (!isFunction() && !isReturnValueRequired() &&",
                "@@ -398,3 +396,3 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\tlogger.debug(\"Bypassing metadata return parameter for '\" + meta.getParameterName() + \"'\");",
                "+\t\t\t\t\t\t\tlogger.debug(\"Bypassing meta-data return parameter for '\" + meta.getParameterName() + \"'\");",
                " \t\t\t\t\t\t}",
                "@@ -402,4 +400,4 @@ public class CallMetaDataContext {",
                " \t\t\t\t\telse {",
                "-\t\t\t\t\t\tString returnNameToUse =(StringUtils.hasLength(meta.getParameterName()) ?",
                "-\t\t\t\t\t\t\t\tparamNameToUse : getFunctionReturnName());",
                "+\t\t\t\t\t\tString returnNameToUse =",
                "+\t\t\t\t\t\t\t\t(StringUtils.hasLength(meta.getParameterName()) ? paramNameToUse : getFunctionReturnName());",
                " \t\t\t\t\t\tworkParams.add(this.metaDataProvider.createDefaultOutParameter(returnNameToUse, meta));",
                "@@ -410,3 +408,3 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\tlogger.debug(\"Added metadata return parameter for '\" + returnNameToUse + \"'\");",
                "+\t\t\t\t\t\t\tlogger.debug(\"Added meta-data return parameter for '\" + returnNameToUse + \"'\");",
                " \t\t\t\t\t\t}",
                "@@ -419,3 +417,3 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\tlogger.debug(\"Added metadata out parameter for '\" + paramNameToUse + \"'\");",
                "+\t\t\t\t\t\t\tlogger.debug(\"Added meta-data out parameter for '\" + paramNameToUse + \"'\");",
                " \t\t\t\t\t\t}",
                "@@ -426,3 +424,3 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\tlogger.debug(\"Added metadata in out parameter for '\" + paramNameToUse + \"'\");",
                "+\t\t\t\t\t\t\tlogger.debug(\"Added meta-data in-out parameter for '\" + paramNameToUse + \"'\");",
                " \t\t\t\t\t\t}",
                "@@ -434,3 +432,3 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\t\tif (logger.isDebugEnabled()) {",
                "-\t\t\t\t\t\t\t\tlogger.debug(\"Added metadata in parameter for '\" + paramNameToUse + \"'\");",
                "+\t\t\t\t\t\t\t\tlogger.debug(\"Added meta-data in parameter for '\" + paramNameToUse + \"'\");",
                " \t\t\t\t\t\t\t}",
                "@@ -458,3 +456,3 @@ public class CallMetaDataContext {",
                " \t\t// For parameter source lookups we need to provide case-insensitive lookup support",
                "-\t\t// since the database metadata is not necessarily providing case sensitive parameter names.",
                "+\t\t// since the database meta-data is not necessarily providing case sensitive parameter names.",
                " \t\tMap<String, String> caseInsensitiveParameterNames =",
                "@@ -473,3 +471,4 @@ public class CallMetaDataContext {",
                " \t\t\t\t\tif (parameterSource.hasValue(parameterName)) {",
                "-\t\t\t\t\t\tmatchedParameters.put(parameterName, SqlParameterSourceUtils.getTypedValue(parameterSource, parameterName));",
                "+\t\t\t\t\t\tmatchedParameters.put(parameterName,",
                "+\t\t\t\t\t\t\t\tSqlParameterSourceUtils.getTypedValue(parameterSource, parameterName));",
                " \t\t\t\t\t}",
                "@@ -478,3 +477,4 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\tif (parameterSource.hasValue(lowerCaseName)) {",
                "-\t\t\t\t\t\t\tmatchedParameters.put(parameterName, SqlParameterSourceUtils.getTypedValue(parameterSource, lowerCaseName));",
                "+\t\t\t\t\t\t\tmatchedParameters.put(parameterName,",
                "+\t\t\t\t\t\t\t\t\tSqlParameterSourceUtils.getTypedValue(parameterSource, lowerCaseName));",
                " \t\t\t\t\t\t}",
                "@@ -483,3 +483,4 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\t\tif (parameterSource.hasValue(englishLowerCaseName)) {",
                "-\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName, SqlParameterSourceUtils.getTypedValue(parameterSource, englishLowerCaseName));",
                "+\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName,",
                "+\t\t\t\t\t\t\t\t\t\tSqlParameterSourceUtils.getTypedValue(parameterSource, englishLowerCaseName));",
                " \t\t\t\t\t\t\t}",
                "@@ -488,3 +489,4 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\t\t\tif (parameterSource.hasValue(propertyName)) {",
                "-\t\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName, SqlParameterSourceUtils.getTypedValue(parameterSource, propertyName));",
                "+\t\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName,",
                "+\t\t\t\t\t\t\t\t\t\t\tSqlParameterSourceUtils.getTypedValue(parameterSource, propertyName));",
                " \t\t\t\t\t\t\t\t}",
                "@@ -493,7 +495,9 @@ public class CallMetaDataContext {",
                " \t\t\t\t\t\t\t\t\t\tString sourceName = caseInsensitiveParameterNames.get(lowerCaseName);",
                "-\t\t\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName, SqlParameterSourceUtils.getTypedValue(parameterSource, sourceName));",
                "+\t\t\t\t\t\t\t\t\t\tmatchedParameters.put(parameterName,",
                "+\t\t\t\t\t\t\t\t\t\t\t\tSqlParameterSourceUtils.getTypedValue(parameterSource, sourceName));",
                " \t\t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t\t\telse {",
                "-\t\t\t\t\t\t\t\t\t\tlogger.warn(\"Unable to locate the corresponding parameter value for '\" + parameterName +",
                "-\t\t\t\t\t\t\t\t\t\t\t\t\"' within the parameter values provided: \" + caseInsensitiveParameterNames.values());",
                "+\t\t\t\t\t\t\t\t\t\tlogger.warn(\"Unable to locate the corresponding parameter value for '\" +",
                "+\t\t\t\t\t\t\t\t\t\t\t\tparameterName + \"' within the parameter values provided: \" +",
                "+\t\t\t\t\t\t\t\t\t\t\t\tcaseInsensitiveParameterNames.values());",
                " \t\t\t\t\t\t\t\t\t}",
                "@@ -523,2 +527,3 @@ public class CallMetaDataContext {",
                " \t\t}",
                "+",
                " \t\tMap<String, String> callParameterNames = new HashMap<String, String>(this.callParameters.size());",
                "@@ -533,2 +538,3 @@ public class CallMetaDataContext {",
                " \t\t}",
                "+",
                " \t\tMap<String, Object> matchedParameters = new HashMap<String, Object>(inParameters.size());",
                "@@ -541,7 +547,7 @@ public class CallMetaDataContext {",
                " \t\t\t\t\tif (value instanceof SqlParameterValue) {",
                "-\t\t\t\t\t\tvalue = ((SqlParameterValue)value).getValue();",
                "+\t\t\t\t\t\tvalue = ((SqlParameterValue) value).getValue();",
                " \t\t\t\t\t}",
                " \t\t\t\t\tif (value != null) {",
                "-\t\t\t\t\t\tlogger.debug(\"Unable to locate the corresponding IN or IN-OUT parameter for \\\"\" + parameterName +",
                "-\t\t\t\t\t\t\t\t\"\\\" in the parameters used: \" + callParameterNames.keySet());",
                "+\t\t\t\t\t\tlogger.debug(\"Unable to locate the corresponding IN or IN-OUT parameter for \\\"\" +",
                "+\t\t\t\t\t\t\t\tparameterName + \"\\\" in the parameters used: \" + callParameterNames.keySet());",
                " \t\t\t\t\t}",
                "@@ -553,2 +559,3 @@ public class CallMetaDataContext {",
                " \t\t}",
                "+",
                " \t\tif (matchedParameters.size() < callParameterNames.size()) {",
                "@@ -563,2 +570,3 @@ public class CallMetaDataContext {",
                " \t\t}",
                "+",
                " \t\tif (logger.isDebugEnabled()) {",
                "@@ -583,3 +591,3 @@ public class CallMetaDataContext {",
                " \t/**",
                "-\t * Build the call string based on configuration and metadata information.",
                "+\t * Build the call string based on configuration and meta-data information.",
                " \t * @return the call string to be used",
                "@@ -587,3 +595,3 @@ public class CallMetaDataContext {",
                " \tpublic String createCallString() {",
                "-\t\tString callString;",
                "+\t\tStringBuilder callString;",
                " \t\tint parameterCount = 0;",
                "@@ -603,8 +611,9 @@ public class CallMetaDataContext {",
                " \t\t}",
                "+",
                " \t\tString procedureNameToUse = this.metaDataProvider.procedureNameToUse(getProcedureName());",
                " \t\tif (isFunction() || isReturnValueRequired()) {",
                "-\t\t\tcallString = \"{? = call \" +",
                "-\t\t\t\t\t(StringUtils.hasLength(catalogNameToUse) ? catalogNameToUse + \".\" : \"\") +",
                "-\t\t\t\t\t(StringUtils.hasLength(schemaNameToUse) ? schemaNameToUse + \".\" : \"\") +",
                "-\t\t\t\t\tprocedureNameToUse + \"(\";",
                "+\t\t\tcallString = new StringBuilder().append(\"{? = call \").",
                "+\t\t\t\t\tappend(StringUtils.hasLength(catalogNameToUse) ? catalogNameToUse + \".\" : \"\").",
                "+\t\t\t\t\tappend(StringUtils.hasLength(schemaNameToUse) ? schemaNameToUse + \".\" : \"\").",
                "+\t\t\t\t\tappend(procedureNameToUse).append(\"(\");",
                " \t\t\tparameterCount = -1;",
                "@@ -612,14 +621,15 @@ public class CallMetaDataContext {",
                " \t\telse {",
                "-\t\t\tcallString = \"{call \" +",
                "-\t\t\t\t\t(StringUtils.hasLength(catalogNameToUse) ? catalogNameToUse + \".\" : \"\") +",
                "-\t\t\t\t\t(StringUtils.hasLength(schemaNameToUse) ? schemaNameToUse + \".\" : \"\") +",
                "-\t\t\t\t\tprocedureNameToUse + \"(\";",
                "+\t\t\tcallString = new StringBuilder().append(\"{call \").",
                "+\t\t\t\t\tappend(StringUtils.hasLength(catalogNameToUse) ? catalogNameToUse + \".\" : \"\").",
                "+\t\t\t\t\tappend(StringUtils.hasLength(schemaNameToUse) ? schemaNameToUse + \".\" : \"\").",
                "+\t\t\t\t\tappend(procedureNameToUse).append(\"(\");",
                " \t\t}",
                "+",
                " \t\tfor (SqlParameter parameter : this.callParameters) {",
                "-\t\t\tif (!(parameter.isResultsParameter())) {",
                "+\t\t\tif (!parameter.isResultsParameter()) {",
                " \t\t\t\tif (parameterCount > 0) {",
                "-\t\t\t\t\tcallString += \", \";",
                "+\t\t\t\t\tcallString.append(\", \");",
                " \t\t\t\t}",
                " \t\t\t\tif (parameterCount >= 0) {",
                "-\t\t\t\t\tcallString += createParameterBinding(parameter);",
                "+\t\t\t\t\tcallString.append(createParameterBinding(parameter));",
                " \t\t\t\t}",
                "@@ -628,5 +638,5 @@ public class CallMetaDataContext {",
                " \t\t}",
                "-\t\tcallString += \")}\";",
                "+\t\tcallString.append(\")}\");",
                "-\t\treturn callString;",
                "+\t\treturn callString.toString();",
                " \t}",
                "@@ -640,8 +650,3 @@ public class CallMetaDataContext {",
                " \tprotected String createParameterBinding(SqlParameter parameter) {",
                "-\t\tif (isNamedBinding()) {",
                "-\t\t\treturn parameter.getName() + \" => ?\";",
                "-\t\t}",
                "-\t\telse {",
                "-\t\t\treturn \"?\";",
                "-\t\t}",
                "+\t\treturn (isNamedBinding() ? parameter.getName() + \" => ?\" : \"?\");",
                " \t}",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallParameterMetaData.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallParameterMetaData.java",
                "index a10b05cfd1..eeb3e23b52 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallParameterMetaData.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallParameterMetaData.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,6 +18,9 @@ package org.springframework.jdbc.core.metadata;",
                "+import java.sql.DatabaseMetaData;",
                "+",
                " /**",
                "- * Holder of metadata for a specific parameter that is used for call processing.",
                "+ * Holder of meta-data for a specific parameter that is used for call processing.",
                "  *",
                "  * @author Thomas Risberg",
                "+ * @author Juergen Hoeller",
                "  * @since 2.5",
                "@@ -41,3 +44,5 @@ public class CallParameterMetaData {",
                " \t */",
                "-\tpublic CallParameterMetaData(String columnName, int columnType, int sqlType, String typeName, boolean nullable) {",
                "+\tpublic CallParameterMetaData(",
                "+\t\t\tString columnName, int columnType, int sqlType, String typeName, boolean nullable) {",
                "+",
                " \t\tthis.parameterName = columnName;",
                "@@ -64,2 +69,13 @@ public class CallParameterMetaData {",
                "+\t/**",
                "+\t * Determine whether the declared parameter qualifies as a 'return' parameter",
                "+\t * for our purposes: type {@link DatabaseMetaData#procedureColumnReturn} or",
                "+\t * {@link DatabaseMetaData#procedureColumnResult}.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tpublic boolean isReturnParameter() {",
                "+\t\treturn (this.parameterType == DatabaseMetaData.procedureColumnReturn ||",
                "+\t\t\t\tthis.parameterType == DatabaseMetaData.procedureColumnResult);",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallMetaDataContext.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/metadata/CallParameterMetaData.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "b7c423813db7921b726b493b97357eb01d527dd1"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "10cb2ccaefa2736000ae94155ce357c1f2a6590e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522103105,
            "hunks": 12,
            "message": "Avoid triggering lazy resolution in MultipartResolver.cleanupMultipart Issue: SPR-16640",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java b/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java",
                "index af75af7795..18a7627bda 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -35,2 +35,3 @@ import org.springframework.web.multipart.MultipartHttpServletRequest;",
                " import org.springframework.web.multipart.MultipartResolver;",
                "+import org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest;",
                " import org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest;",
                "@@ -190,7 +191,10 @@ public class CommonsMultipartResolver extends CommonsFileUploadSupport",
                " \tpublic void cleanupMultipart(MultipartHttpServletRequest request) {",
                "-\t\ttry {",
                "-\t\t\tcleanupFileItems(request.getMultiFileMap());",
                "-\t\t}",
                "-\t\tcatch (Throwable ex) {",
                "-\t\t\tlogger.warn(\"Failed to perform multipart cleanup for servlet request\", ex);",
                "+\t\tif (!(request instanceof AbstractMultipartHttpServletRequest) ||",
                "+\t\t\t\t((AbstractMultipartHttpServletRequest) request).isResolved()) {",
                "+\t\t\ttry {",
                "+\t\t\t\tcleanupFileItems(request.getMultiFileMap());",
                "+\t\t\t}",
                "+\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\tlogger.warn(\"Failed to perform multipart cleanup for servlet request\", ex);",
                "+\t\t\t}",
                " \t\t}",
                "diff --git a/spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java b/spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java",
                "index e94dca671c..58010cc4d8 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -110,2 +110,14 @@ public abstract class AbstractMultipartHttpServletRequest extends HttpServletReq",
                "+\t/**",
                "+\t * Determine whether the underlying multipart request has been resolved.",
                "+\t * @return {@code true} when eagerly initialized or lazily triggered,",
                "+\t * {@code false} in case of a lazy-resolution request that got aborted",
                "+\t * before any parameters or multipart files have been accessed",
                "+\t * @since 4.3.15",
                "+\t * @see #getMultipartFiles()",
                "+\t */",
                "+\tpublic boolean isResolved() {",
                "+\t\treturn (this.multipartFiles != null);",
                "+\t}",
                "+",
                "diff --git a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                "index 9915190677..fa6ae7dbda 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -54,2 +54,3 @@ import org.springframework.web.multipart.MultipartFile;",
                "  * @since 3.1",
                "+ * @see StandardServletMultipartResolver",
                "  */",
                "@@ -77,5 +78,6 @@ public class StandardMultipartHttpServletRequest extends AbstractMultipartHttpSe",
                " \t * @throws MultipartException if an immediate parsing attempt failed",
                "+\t * @since 3.2.9",
                " \t */",
                "-\tpublic StandardMultipartHttpServletRequest(HttpServletRequest request,",
                "-\t\t\tboolean lazyParsing) throws MultipartException {",
                "+\tpublic StandardMultipartHttpServletRequest(HttpServletRequest request, boolean lazyParsing)",
                "+\t\t\tthrows MultipartException {",
                "diff --git a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "index 0ac3326d2c..34d40edb19 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "@@ -73,2 +73,3 @@ public class StandardServletMultipartResolver implements MultipartResolver {",
                " \t * once the application attempts to obtain multipart files or parameters.",
                "+\t * @since 3.2.9",
                " \t */",
                "@@ -96,13 +97,16 @@ public class StandardServletMultipartResolver implements MultipartResolver {",
                " \tpublic void cleanupMultipart(MultipartHttpServletRequest request) {",
                "-\t\t// To be on the safe side: explicitly delete the parts,",
                "-\t\t// but only actual file parts (for Resin compatibility)",
                "-\t\ttry {",
                "-\t\t\tfor (Part part : request.getParts()) {",
                "-\t\t\t\tif (request.getFile(part.getName()) != null) {",
                "-\t\t\t\t\tpart.delete();",
                "+\t\tif (!(request instanceof AbstractMultipartHttpServletRequest) ||",
                "+\t\t\t\t((AbstractMultipartHttpServletRequest) request).isResolved()) {",
                "+\t\t\t// To be on the safe side: explicitly delete the parts,",
                "+\t\t\t// but only actual file parts (for Resin compatibility)",
                "+\t\t\ttry {",
                "+\t\t\t\tfor (Part part : request.getParts()) {",
                "+\t\t\t\t\tif (request.getFile(part.getName()) != null) {",
                "+\t\t\t\t\t\tpart.delete();",
                "+\t\t\t\t\t}",
                " \t\t\t\t}",
                " \t\t\t}",
                "-\t\t}",
                "-\t\tcatch (Throwable ex) {",
                "-\t\t\tLogFactory.getLog(getClass()).warn(\"Failed to perform cleanup of multipart items\", ex);",
                "+\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\tLogFactory.getLog(getClass()).warn(\"Failed to perform cleanup of multipart items\", ex);",
                "+\t\t\t}",
                " \t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/multipart/commons/CommonsMultipartResolver.java",
                "spring-web/src/main/java/org/springframework/web/multipart/support/AbstractMultipartHttpServletRequest.java",
                "spring-web/src/main/java/org/springframework/web/multipart/support/StandardMultipartHttpServletRequest.java",
                "spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "c1cb0311aa495e3b2cc9b3ec326c8db0b0768e10"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c4e9ce8d0ead9a02679ebf262fd8d57b7658619c",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521050030,
            "hunks": 12,
            "message": "Clarified repeatable PropertySource annotation vs use as meta-annotation Issue: SPR-16592",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                "index 4865d054ba..5a32e6c144 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -300,8 +300,11 @@ public class AnnotationConfigUtils {",
                " \t@SuppressWarnings(\"unchecked\")",
                "-\tstatic Set<AnnotationAttributes> attributesForRepeatable(AnnotationMetadata metadata,",
                "-\t\t\tString containerClassName, String annotationClassName) {",
                "+\tstatic Set<AnnotationAttributes> attributesForRepeatable(",
                "+\t\t\tAnnotationMetadata metadata, String containerClassName, String annotationClassName) {",
                " \t\tSet<AnnotationAttributes> result = new LinkedHashSet<>();",
                "+",
                "+\t\t// Direct annotation present?",
                " \t\taddAttributesIfNotNull(result, metadata.getAnnotationAttributes(annotationClassName, false));",
                "+\t\t// Container annotation present?",
                " \t\tMap<String, Object> container = metadata.getAnnotationAttributes(containerClassName, false);",
                "@@ -312,2 +315,4 @@ public class AnnotationConfigUtils {",
                " \t\t}",
                "+",
                "+\t\t// Return merged result",
                " \t\treturn Collections.unmodifiableSet(result);",
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java b/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "index e423711065..51ca200ebe 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -44,2 +44,3 @@ import org.springframework.core.io.support.PropertySourceFactory;",
                "  * public class AppConfig {",
                "+ *",
                "  *     &#064;Autowired",
                "@@ -55,4 +56,4 @@ import org.springframework.core.io.support.PropertySourceFactory;",
                "  *",
                "- * Notice that the {@code Environment} object is @{@link",
                "- * org.springframework.beans.factory.annotation.Autowired Autowired} into the",
                "+ * Notice that the {@code Environment} object is",
                "+ * {@link org.springframework.beans.factory.annotation.Autowired @Autowired} into the",
                "  * configuration class and then used when populating the {@code TestBean} object. Given",
                "@@ -81,2 +82,3 @@ import org.springframework.core.io.support.PropertySourceFactory;",
                "  * public class AppConfig {",
                "+ *",
                "  *     &#064;Autowired",
                "@@ -120,5 +122,5 @@ import org.springframework.core.io.support.PropertySourceFactory;",
                "  * with the application context.",
                "+ *",
                "  * <pre class=\"code\">",
                "- * AnnotationConfigApplicationContext ctx =",
                "- *     new AnnotationConfigApplicationContext();",
                "+ * AnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();",
                "  * ctx.register(ConfigA.class);",
                "@@ -141,2 +143,8 @@ import org.springframework.core.io.support.PropertySourceFactory;",
                "  *",
                "+ * <p><b>NOTE: This annotation is repeatable according to Java 8 conventions.</b>",
                "+ * However, all such {@code @PropertySource} annotations need to be declared at the same",
                "+ * level: either directly on the configuration class or as meta-annotations within the",
                "+ * same custom annotation. Mixing of direct annotations and meta-annotations is not",
                "+ * recommended since direct annotations will effectively override meta-annotations.",
                "+ *",
                "  * @author Chris Beams"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/AnnotationConfigUtils.java",
                "spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "6158634d67eb6fee43adfff61aca9c98d35c0308"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "9e6a5ae4a748bedba9caca39158d8c16d541fa23",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429465455,
            "hunks": 0,
            "message": "Merge pull request #780 from sbrannen/SPR-12683 Improve extensibility of TestContext bootstrapping & context caching These commits include numerous refactorings and enhancements to the bootstrapping and context caching mechanisms in the Spring TestContext Framework. Issue: SPR-12683",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "780": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 780",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b1048975d2966b5c5ab3315403c4e5f0c736bc4d",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522431341,
            "hunks": 2,
            "message": "Minor updates based on PR#1058 The original repo no longer exists: https://github.com/spring-projects/spring-framework/pull/1058",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                "index 4b02317bd0..71fd4a7a1e 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                "@@ -230,3 +230,5 @@ public final class PatternsRequestCondition extends AbstractRequestCondition<Pat",
                " \t\t}",
                "-\t\tmatches.sort(this.pathMatcher.getPatternComparator(lookupPath));",
                "+\t\tif (matches.size() > 1) {",
                "+\t\t\tmatches.sort(this.pathMatcher.getPatternComparator(lookupPath));",
                "+\t\t}",
                " \t\treturn matches;",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.java",
                "index ec1d5ea3bf..df665ce73b 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.java",
                "@@ -164,3 +164,3 @@ public class SseEmitter extends ResponseBodyEmitter {",
                " \t\t/**",
                "-\t\t * Add an SSE \"event\" line.",
                "+\t\t * Add an SSE \"retry\" line.",
                " \t\t */"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/condition/PatternsRequestCondition.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/SseEmitter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1058": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1058",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "e748cf17d9761ff79c435931b620ca4bd7444ea7",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429903380,
            "hunks": 1,
            "message": "Eclipse project deps come after third-party libs This commit is a backport of SPR-11836. Prior to this commit, the ordering of classpath entries in the generated Eclipse .classpath files did not align with the intended dependency management configured in the Gradle build. Specifically, project dependencies often came before dependencies on third-party libraries required for the given project, causing the project not to compile in Eclipse. This commit fixes this issue by introducing new functionality in the ide.gradle script that moves all project dependencies to the end of the generated classpath. Issue: SPR-12947, SPR-11836",
            "diff": [
                "diff --git a/gradle/ide.gradle b/gradle/ide.gradle",
                "index 3f73282254..66fc228301 100644",
                "--- a/gradle/ide.gradle",
                "+++ b/gradle/ide.gradle",
                "@@ -43,2 +43,13 @@ eclipse.classpath.file.whenMerged { classpath ->",
                "+// Ensure project dependencies come after 3rd-party libs (SPR-11836)",
                "+// https://jira.spring.io/browse/SPR-11836",
                "+eclipse.classpath.file.whenMerged { classpath ->",
                "+\tclasspath.entries.findAll { it instanceof ProjectDependency }.each {",
                "+\t\t// delete from original position",
                "+\t\tclasspath.entries.remove(it)",
                "+\t\t// append to end of classpath",
                "+\t\tclasspath.entries.add(it)",
                "+\t}",
                "+}",
                "+",
                " // Allow projects to be used as WPT modules"
            ],
            "changed_files": [
                "gradle/ide.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "f2e5e5aa86d827f14754f77666a76da89cfbf8d0"
                ]
            ],
            "tags": [
                "v3.2.14.RELEASE",
                "v3.2.15.RELEASE",
                "v3.2.16.RELEASE",
                "v3.2.17.RELEASE",
                "v3.2.18.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "f4813f5b4c2ac3dbae6ab8a1d097c5310e1b41a8",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522307598,
            "hunks": 0,
            "message": "Merge pull request #1759 from igor-suhorukov * pr/1759:   Nested \"enum\"s should not be declared static",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "1759": ""
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 1759",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "499128dae748ff5643d27b72b72bd830eb6b1305",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520889978,
            "hunks": 7,
            "message": "URIEditor uses straight ClassPathResource.getURI() access Issue: SPR-16581",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/propertyeditors/URIEditor.java b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/URIEditor.java",
                "index d9609694bb..4762bddc34 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/propertyeditors/URIEditor.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/propertyeditors/URIEditor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -71,2 +71,3 @@ public class URIEditor extends PropertyEditorSupport {",
                " \t * @param encode indicates whether Strings will be encoded or not",
                "+\t * @since 3.0",
                " \t */",
                "@@ -93,2 +94,3 @@ public class URIEditor extends PropertyEditorSupport {",
                " \t * @param encode indicates whether Strings will be encoded or not",
                "+\t * @since 3.0",
                " \t */",
                "@@ -105,7 +107,6 @@ public class URIEditor extends PropertyEditorSupport {",
                " \t\t\tif (this.classLoader != null && uri.startsWith(ResourceUtils.CLASSPATH_URL_PREFIX)) {",
                "-\t\t\t\tClassPathResource resource =",
                "-\t\t\t\t\t\tnew ClassPathResource(uri.substring(ResourceUtils.CLASSPATH_URL_PREFIX.length()), this.classLoader);",
                "+\t\t\t\tClassPathResource resource = new ClassPathResource(",
                "+\t\t\t\t\t\turi.substring(ResourceUtils.CLASSPATH_URL_PREFIX.length()), this.classLoader);",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tString url = resource.getURL().toString();",
                "-\t\t\t\t\tsetValue(createURI(url));",
                "+\t\t\t\t\tsetValue(resource.getURI());",
                " \t\t\t\t}",
                "@@ -114,5 +115,2 @@ public class URIEditor extends PropertyEditorSupport {",
                " \t\t\t\t}",
                "-\t\t\t\tcatch (URISyntaxException ex) {",
                "-\t\t\t\t\tthrow new IllegalArgumentException(\"Invalid URI syntax: \" + ex);",
                "-\t\t\t\t}",
                " \t\t\t}",
                "@@ -133,5 +131,4 @@ public class URIEditor extends PropertyEditorSupport {",
                " \t/**",
                "-\t * Create a URI instance for the given (resolved) String value.",
                "-\t * <p>The default implementation encodes the value into a RFC",
                "-\t * 2396 compliant URI.",
                "+\t * Create a URI instance for the given user-specified String value.",
                "+\t * <p>The default implementation encodes the value into a RFC-2396 compliant URI.",
                " \t * @param value the value to convert into a URI instance"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/propertyeditors/URIEditor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "25a3019234cdcb2db868c9e4803332e0cdde22d4"
                ]
            ],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "1cbc353dd1ee9db38490fa9a862c8a1673db595c",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522448444,
            "hunks": 31,
            "message": "Consistent Ordered.LOWEST_PRECEDENCE declarations for default order (cherry picked from commit 6393e5c)",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/framework/ProxyProcessorSupport.java b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyProcessorSupport.java",
                "index 2c3de88958..74f3073b93 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/framework/ProxyProcessorSupport.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/framework/ProxyProcessorSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -52,5 +52,5 @@ public class ProxyProcessorSupport extends ProxyConfig implements Ordered, BeanC",
                " \t/**",
                "-\t * Set the ordering which will apply to this class's implementation",
                "-\t * of Ordered, used when applying multiple processors.",
                "-\t * <p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered.",
                "+\t * Set the ordering which will apply to this processor's implementation",
                "+\t * of {@link Ordered}, used when applying multiple processors.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                " \t * @param order the ordering value",
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java b/spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java",
                "index 8219737a22..17b167010f 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java",
                "@@ -47,3 +47,3 @@ public class DefaultIntroductionAdvisor implements IntroductionAdvisor, ClassFil",
                "-\tprivate int order = Integer.MAX_VALUE;",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;",
                "@@ -120,3 +120,2 @@ public class DefaultIntroductionAdvisor implements IntroductionAdvisor, ClassFil",
                "-",
                " \tpublic void setOrder(int order) {",
                "@@ -130,3 +129,2 @@ public class DefaultIntroductionAdvisor implements IntroductionAdvisor, ClassFil",
                "-",
                " \t@Override",
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.java b/spring-aop/src/main/java/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.java",
                "index 9dbe10dbf4..3ba109a1ac 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -38,6 +38,6 @@ public abstract class StaticMethodMatcherPointcutAdvisor extends StaticMethodMat",
                "-\tprivate int order = Integer.MAX_VALUE;",
                "-",
                " \tprivate Advice advice;",
                "+\tprivate int order = Integer.MAX_VALUE;",
                "+",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.java",
                "index 8b27621845..9617cdedb7 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -27,2 +27,3 @@ import org.springframework.beans.factory.BeanInitializationException;",
                " import org.springframework.context.ApplicationContext;",
                "+import org.springframework.core.Ordered;",
                " import org.springframework.util.Assert;",
                "@@ -64,3 +65,3 @@ public class ResourceHandlerRegistry {",
                "-\tprivate int order = Integer.MAX_VALUE -1;",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE - 1;",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java",
                "index 0ecab435b4..13012abb03 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java",
                "@@ -68,4 +68,2 @@ public abstract class AbstractHandlerMapping extends WebApplicationObjectSupport",
                "-\tprivate int order = Integer.MAX_VALUE;  // default: same as non-Ordered",
                "-",
                " \tprivate Object defaultHandler;",
                "@@ -84,16 +82,4 @@ public abstract class AbstractHandlerMapping extends WebApplicationObjectSupport",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;  // default: same as non-Ordered",
                "-\t/**",
                "-\t * Specify the order value for this HandlerMapping bean.",
                "-\t * <p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered.",
                "-\t * @see org.springframework.core.Ordered#getOrder()",
                "-\t */",
                "-\tpublic final void setOrder(int order) {",
                "-\t  this.order = order;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic final int getOrder() {",
                "-\t  return this.order;",
                "-\t}",
                "@@ -237,2 +223,16 @@ public abstract class AbstractHandlerMapping extends WebApplicationObjectSupport",
                "+\t/**",
                "+\t * Specify the order value for this HandlerMapping bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                "+\t */",
                "+\tpublic void setOrder(int order) {",
                "+\t\tthis.order = order;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic int getOrder() {",
                "+\t\treturn this.order;",
                "+\t}",
                "+",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java",
                "index 803b595d4b..2a7c47a6a9 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -47,3 +47,3 @@ public abstract class AbstractHandlerMethodAdapter extends WebContentGenerator i",
                " \t * Specify the order value for this HandlerAdapter bean.",
                "-\t * <p>Default value is {@code Integer.MAX_VALUE}, meaning that it's non-ordered.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                " \t * @see org.springframework.core.Ordered#getOrder()",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java",
                "index 3788079802..8bc7f71c2e 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -55,5 +55,10 @@ public class BeanNameViewResolver extends WebApplicationObjectSupport implements",
                "-\tprivate int order = Integer.MAX_VALUE;  // default: same as non-Ordered",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;  // default: same as non-Ordered",
                "+\t/**",
                "+\t * Specify the order value for this ViewResolver bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                "+\t */",
                " \tpublic void setOrder(int order) {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "index 78731a71b5..8e8313f34d 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -65,7 +65,5 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                " \t/** The default basename if no other basename is supplied. */",
                "-\tpublic final static String DEFAULT_BASENAME = \"views\";",
                "+\tpublic static final String DEFAULT_BASENAME = \"views\";",
                "-\tprivate int order = Integer.MAX_VALUE;  // default: same as non-Ordered",
                "-",
                " \tprivate String[] basenames = new String[] {DEFAULT_BASENAME};",
                "@@ -78,2 +76,4 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;  // default: same as non-Ordered",
                "+",
                " \t/* Locale -> BeanFactory */",
                "@@ -87,11 +87,2 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                "-\tpublic void setOrder(int order) {",
                "-\t\tthis.order = order;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic int getOrder() {",
                "-\t\treturn this.order;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -177,2 +168,16 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                "+\t/**",
                "+\t * Specify the order value for this ViewResolver bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                "+\t */",
                "+\tpublic void setOrder(int order) {",
                "+\t\tthis.order = order;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic int getOrder() {",
                "+\t\treturn this.order;",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/UrlBasedViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/UrlBasedViewResolver.java",
                "index 9b09f8a965..ef7cd69e26 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/UrlBasedViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/UrlBasedViewResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -130,3 +130,3 @@ public class UrlBasedViewResolver extends AbstractCachingViewResolver implements",
                "-\tprivate int order = Integer.MAX_VALUE;",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;",
                "@@ -409,4 +409,5 @@ public class UrlBasedViewResolver extends AbstractCachingViewResolver implements",
                " \t/**",
                "-\t * Set the order in which this {@link org.springframework.web.servlet.ViewResolver}",
                "-\t * is evaluated.",
                "+\t * Specify the order value for this ViewResolver bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                " \t */",
                "@@ -416,6 +417,2 @@ public class UrlBasedViewResolver extends AbstractCachingViewResolver implements",
                "-\t/**",
                "-\t * Return the order in which this {@link org.springframework.web.servlet.ViewResolver}",
                "-\t * is evaluated.",
                "-\t */",
                " \t@Override",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/XmlViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/XmlViewResolver.java",
                "index 2dff254793..9b4eb3ddb5 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/XmlViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/XmlViewResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -59,7 +59,5 @@ public class XmlViewResolver extends AbstractCachingViewResolver",
                " \t/** Default if no other location is supplied */",
                "-\tpublic final static String DEFAULT_LOCATION = \"/WEB-INF/views.xml\";",
                "+\tpublic static final String DEFAULT_LOCATION = \"/WEB-INF/views.xml\";",
                "-\tprivate int order = Integer.MAX_VALUE;  // default: same as non-Ordered",
                "-",
                " \tprivate Resource location;",
                "@@ -68,11 +66,4 @@ public class XmlViewResolver extends AbstractCachingViewResolver",
                "+\tprivate int order = Ordered.LOWEST_PRECEDENCE;  // default: same as non-Ordered",
                "-\tpublic void setOrder(int order) {",
                "-\t\tthis.order = order;",
                "-\t}",
                "-",
                "-\t@Override",
                "-\tpublic int getOrder() {",
                "-\t\treturn this.order;",
                "-\t}",
                "@@ -87,2 +78,16 @@ public class XmlViewResolver extends AbstractCachingViewResolver",
                "+\t/**",
                "+\t * Specify the order value for this ViewResolver bean.",
                "+\t * <p>The default value is {@code Ordered.LOWEST_PRECEDENCE}, meaning non-ordered.",
                "+\t * @see org.springframework.core.Ordered#getOrder()",
                "+\t */",
                "+\tpublic void setOrder(int order) {",
                "+\t\tthis.order = order;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic int getOrder() {",
                "+\t\treturn this.order;",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/framework/ProxyProcessorSupport.java",
                "spring-aop/src/main/java/org/springframework/aop/support/DefaultIntroductionAdvisor.java",
                "spring-aop/src/main/java/org/springframework/aop/support/StaticMethodMatcherPointcutAdvisor.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ResourceHandlerRegistry.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractHandlerMapping.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/UrlBasedViewResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/XmlViewResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [
                [
                    "no-tag",
                    "6393e5ce0cfb6e5502e7415f29e1ea73b363f2a2"
                ]
            ],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": [
                {
                    "id": "COMMIT_HAS_TWINS",
                    "message": "This commit has one or more twins.",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "b0848db17c53695087e3961c66d0028c9c56f8f1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1428947068,
            "hunks": 0,
            "message": "Merge pull request #771 from dgtombs/SPR-12759 * dgtombs-SPR-12759:   Improve RedirectAttributes reference docs",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {
                "771": "Improve RedirectAttributes reference documentation [SPR-12759] #17356"
            },
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": [
                {
                    "id": "GITHUB_ISSUE_IN_MESSAGE",
                    "message": "The commit message references some github issue: 771",
                    "relevance": 2
                }
            ]
        },
        {
            "commit_id": "c60cefa3311bbb087591f16ebec822f6ba5018c5",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522102974,
            "hunks": 12,
            "message": "SimpleEvaluationContext.Builder withRootObject/withTypedRootObject Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index fa379a47d5..265588a61a 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -25,2 +25,3 @@ import java.util.Map;",
                " import org.springframework.core.convert.ConversionService;",
                "+import org.springframework.core.convert.TypeDescriptor;",
                " import org.springframework.expression.BeanResolver;",
                "@@ -28,2 +29,3 @@ import org.springframework.expression.ConstructorResolver;",
                " import org.springframework.expression.EvaluationContext;",
                "+import org.springframework.expression.Expression;",
                " import org.springframework.expression.MethodResolver;",
                "@@ -92,2 +94,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+\tprivate final TypedValue rootObject;",
                "+",
                " \tprivate final List<PropertyAccessor> propertyAccessors;",
                "@@ -106,3 +110,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, List<MethodResolver> resolvers,",
                "-\t\t\t@Nullable TypeConverter converter) {",
                "+\t\t\t@Nullable TypeConverter converter, @Nullable TypedValue rootObject) {",
                "@@ -111,2 +115,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\tthis.typeConverter = (converter != null ? converter : new StandardTypeConverter());",
                "+\t\tthis.rootObject = (rootObject != null ? rootObject : TypedValue.NULL);",
                " \t}",
                "@@ -115,7 +120,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * {@code SimpleEvaluationContext} cannot be configured with a root object.",
                "-\t * It is meant for repeated use with",
                "-\t * {@link org.springframework.expression.Expression Expression} method",
                "-\t * variants that accept both an {@code EvaluationContext} and a root object.",
                "-\t * @return Always returns {@link TypedValue#NULL}.",
                "+\t * Return the specified root object, if any.",
                " \t */",
                "@@ -123,3 +124,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic TypedValue getRootObject() {",
                "-\t\treturn TypedValue.NULL;",
                "+\t\treturn this.rootObject;",
                " \t}",
                "@@ -264,2 +265,5 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+\t\t@Nullable",
                "+\t\tprivate TypedValue rootObject;",
                "+",
                " \t\tpublic Builder(PropertyAccessor... accessors) {",
                "@@ -299,2 +303,14 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+",
                "+\t\t/**",
                "+\t\t * Register a custom {@link ConversionService}.",
                "+\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                "+\t\t * @see #withTypeConverter",
                "+\t\t * @see StandardTypeConverter#StandardTypeConverter(ConversionService)",
                "+\t\t */",
                "+\t\tpublic Builder withConversionService(ConversionService conversionService) {",
                "+\t\t\tthis.typeConverter = new StandardTypeConverter(conversionService);",
                "+\t\t\treturn this;",
                "+\t\t}",
                " \t\t/**",
                "@@ -312,10 +328,20 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t/**",
                "-\t\t * Register a custom {@link ConversionService}.",
                "-\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "-\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                "-\t\t * @see #withTypeConverter",
                "-\t\t * @see StandardTypeConverter#StandardTypeConverter(ConversionService)",
                "+\t\t * Specify a default root object to resolve against.",
                "+\t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "+\t\t * @see Expression#getValue(EvaluationContext)",
                "+\t\t * @see Expression#getValue(EvaluationContext, Object)",
                " \t\t */",
                "-\t\tpublic Builder withConversionService(ConversionService conversionService) {",
                "-\t\t\tthis.typeConverter = new StandardTypeConverter(conversionService);",
                "+\t\tpublic Builder withRootObject(Object rootObject) {",
                "+\t\t\tthis.rootObject = new TypedValue(rootObject);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Specify a typed root object to resolve against.",
                "+\t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "+\t\t * @see Expression#getValue(EvaluationContext)",
                "+\t\t * @see Expression#getValue(EvaluationContext, Object)",
                "+\t\t */",
                "+\t\tpublic Builder withTypedRootObject(Object rootObject, TypeDescriptor typeDescriptor) {",
                "+\t\t\tthis.rootObject = new TypedValue(rootObject, typeDescriptor);",
                " \t\t\treturn this;",
                "@@ -324,3 +350,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\tpublic SimpleEvaluationContext build() {",
                "-\t\t\treturn new SimpleEvaluationContext(this.accessors, this.resolvers, this.typeConverter);",
                "+\t\t\treturn new SimpleEvaluationContext(this.accessors, this.resolvers, this.typeConverter, this.rootObject);",
                " \t\t}"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7a8d41e5d6d4ac85d6d74d80c311800d78e0a721",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522410082,
            "hunks": 10,
            "message": "Extended set of common classes and language interfaces in ClassUtils Issue: SPR-16667",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/ClassUtils.java b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "index 33bf4bbf3c..52853dd19a 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "@@ -19,2 +19,3 @@ package org.springframework.util;",
                " import java.beans.Introspector;",
                "+import java.io.Closeable;",
                " import java.io.Externalizable;",
                "@@ -29,2 +30,3 @@ import java.util.Collection;",
                " import java.util.Collections;",
                "+import java.util.Enumeration;",
                " import java.util.HashMap;",
                "@@ -34,3 +36,5 @@ import java.util.Iterator;",
                " import java.util.LinkedHashSet;",
                "+import java.util.List;",
                " import java.util.Map;",
                "+import java.util.Optional;",
                " import java.util.Set;",
                "@@ -78,9 +82,2 @@ public abstract class ClassUtils {",
                "-\t/**",
                "-\t * Common Java language interfaces which are supposed to be ignored",
                "-\t * when searching for 'primary' user-level interfaces.",
                "-\t */",
                "-\tprivate static final Set<Class<?>> javaLanguageInterfaces = new HashSet<>(",
                "-\t\t\tArrays.asList(Serializable.class, Externalizable.class, Cloneable.class, Comparable.class));",
                "-",
                " \t/**",
                "@@ -104,6 +101,12 @@ public abstract class ClassUtils {",
                " \t/**",
                "-\t * Map with common \"java.lang\" class name as key and corresponding Class as value.",
                "+\t * Map with common Java language class name as key and corresponding Class as value.",
                " \t * Primarily for efficient deserialization of remote invocations.",
                " \t */",
                "-\tprivate static final Map<String, Class<?>> commonClassCache = new HashMap<>(32);",
                "+\tprivate static final Map<String, Class<?>> commonClassCache = new HashMap<>(64);",
                "+",
                "+\t/**",
                "+\t * Common Java language interfaces which are supposed to be ignored",
                "+\t * when searching for 'primary' user-level interfaces.",
                "+\t */",
                "+\tprivate static final Set<Class<?>> javaLanguageInterfaces;",
                "@@ -137,5 +140,12 @@ public abstract class ClassUtils {",
                " \t\tregisterCommonClasses(Number.class, Number[].class, String.class, String[].class,",
                "-\t\t\t\tObject.class, Object[].class, Class.class, Class[].class);",
                "+\t\t\t\tClass.class, Class[].class, Object.class, Object[].class);",
                " \t\tregisterCommonClasses(Throwable.class, Exception.class, RuntimeException.class,",
                " \t\t\t\tError.class, StackTraceElement.class, StackTraceElement[].class);",
                "+\t\tregisterCommonClasses(Enum.class, Iterable.class, Iterator.class, Enumeration.class,",
                "+\t\t\t\tCollection.class, List.class, Set.class, Map.class, Map.Entry.class, Optional.class);",
                "+",
                "+\t\tClass<?>[] javaLanguageInterfaceArray = {Serializable.class, Externalizable.class,",
                "+\t\t\t\tCloseable.class, AutoCloseable.class, Cloneable.class, Comparable.class};",
                "+\t\tregisterCommonClasses(javaLanguageInterfaceArray);",
                "+\t\tjavaLanguageInterfaces = new HashSet<>(Arrays.asList(javaLanguageInterfaceArray));",
                " \t}",
                "@@ -1237,6 +1247,6 @@ public abstract class ClassUtils {",
                " \t * Determine whether the given interface is a common Java language interface:",
                "-\t * {@link Serializable}, {@link Externalizable}, {@link Cloneable}, {@link Comparable}",
                "-\t * - all of which can be ignored when looking for 'primary' user-level interfaces.",
                "-\t * Common characteristics: no service-level operations, no bean property methods,",
                "-\t * no default methods.",
                "+\t * {@link Serializable}, {@link Externalizable}, {@link Closeable}, {@link AutoCloseable},",
                "+\t * {@link Cloneable}, {@link Comparable} - all of which can be ignored when looking",
                "+\t * for 'primary' user-level interfaces. Common characteristics: no service-level",
                "+\t * operations, no bean property methods, no default methods.",
                " \t * @param ifc the interface to check"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/ClassUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b9ebdaaf3710db473a2e1fec8641c316483a22aa",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521688716,
            "hunks": 20,
            "message": "Backport clean duplicate separators in resource URLs Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "index 8732c39ecd..e8cbd8ee50 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -247,17 +247,3 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\tlocationPath = (locationPath.endsWith(\"/\") || locationPath.isEmpty() ? locationPath : locationPath + \"/\");",
                "-\t\tif (!resourcePath.startsWith(locationPath)) {",
                "-\t\t\treturn false;",
                "-\t\t}",
                "-",
                "-\t\tif (resourcePath.contains(\"%\")) {",
                "-\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars...",
                "-\t\t\tif (URLDecoder.decode(resourcePath, \"UTF-8\").contains(\"../\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "-\t\t\t\t}",
                "-\t\t\t\treturn false;",
                "-\t\t\t}",
                "-\t\t}",
                "-",
                "-\t\treturn true;",
                "+\t\treturn (resourcePath.startsWith(locationPath) && !isInvalidEncodedPath(resourcePath));",
                " \t}",
                "@@ -293,4 +279,26 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \tprivate boolean shouldEncodeRelativePath(Resource location) {",
                "-\t\treturn location instanceof UrlResource &&",
                "-\t\t\t\tthis.urlPathHelper != null && this.urlPathHelper.isUrlDecode();",
                "+\t\treturn (location instanceof UrlResource && this.urlPathHelper != null && this.urlPathHelper.isUrlDecode());",
                "+\t}",
                "+",
                "+\tprivate boolean isInvalidEncodedPath(String resourcePath) {",
                "+\t\tif (resourcePath.contains(\"%\")) {",
                "+\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars...",
                "+\t\t\ttry {",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(resourcePath, \"UTF-8\");",
                "+\t\t\t\tint separatorIndex = decodedPath.indexOf(\"..\") + 2;",
                "+\t\t\t\tif (separatorIndex > 1 && separatorIndex < decodedPath.length()) {",
                "+\t\t\t\t\tchar separator = decodedPath.charAt(separatorIndex);",
                "+\t\t\t\t\tif (separator == '/' || separator == '\\\\') {",
                "+\t\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\t\tlogger.trace(\"Resolved resource path contains \\\"../\\\" after decoding: \" + resourcePath);",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                " \t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "index 2b31cb5f96..9bd4a5f92c 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,2 +19,3 @@ package org.springframework.web.servlet.resource;",
                " import java.io.IOException;",
                "+import java.io.UnsupportedEncodingException;",
                " import java.net.URLDecoder;",
                "@@ -509,2 +510,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "+",
                " \t\tpath = processPath(path);",
                "@@ -516,16 +518,9 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "-\t\tif (path.contains(\"%\")) {",
                "-\t\t\ttry {",
                "-\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "-\t\t\t\tif (isInvalidPath(URLDecoder.decode(path, \"UTF-8\"))) {",
                "-\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "-\t\t\t\t\t}",
                "-\t\t\t\t\treturn null;",
                "-\t\t\t\t}",
                "-\t\t\t}",
                "-\t\t\tcatch (IllegalArgumentException ex) {",
                "-\t\t\t\t// ignore",
                "+\t\tif (isInvalidEncodedPath(path)) {",
                "+\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"]\");",
                " \t\t\t}",
                "+\t\t\treturn null;",
                " \t\t}",
                "+",
                " \t\tResourceResolverChain resolveChain = new DefaultResourceResolverChain(getResourceResolvers());",
                "@@ -535,2 +530,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t}",
                "+",
                " \t\tResourceTransformerChain transformChain =",
                "@@ -542,6 +538,11 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t/**",
                "-\t * Process the given resource path to be used.",
                "-\t * <p>The default implementation replaces any combination of leading '/' and",
                "-\t * control characters (00-1F and 7F) with a single \"/\" or \"\". For example",
                "-\t * {@code \"  // /// ////  foo/bar\"} becomes {@code \"/foo/bar\"}.",
                "+\t * Process the given resource path.",
                "+\t * <p>The default implementation replaces:",
                "+\t * <ul>",
                "+\t * <li>Backslash with forward slash.",
                "+\t * <li>Duplicate occurrences of slash with a single slash.",
                "+\t * <li>Any combination of leading slash and control characters (00-1F and 7F)",
                "+\t * with a single \"/\" or \"\". For example {@code \"  / // foo/bar\"}",
                "+\t * becomes {@code \"/foo/bar\"}.",
                "+\t * </ul>",
                " \t * @since 3.2.12",
                "@@ -549,2 +550,31 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \tprotected String processPath(String path) {",
                "+\t\tpath = StringUtils.replace(path, \"\\\\\", \"/\");",
                "+\t\tpath = cleanDuplicateSlashes(path);",
                "+\t\treturn cleanLeadingSlash(path);",
                "+\t}",
                "+",
                "+\tprivate String cleanDuplicateSlashes(String path) {",
                "+\t\tStringBuilder sb = null;",
                "+\t\tchar prev = 0;",
                "+\t\tfor (int i = 0; i < path.length(); i++) {",
                "+\t\t\tchar curr = path.charAt(i);",
                "+\t\t\ttry {",
                "+\t\t\t\tif ((curr == '/') && (prev == '/')) {",
                "+\t\t\t\t\tif (sb == null) {",
                "+\t\t\t\t\t\tsb = new StringBuilder(path.substring(0, i));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tcontinue;",
                "+\t\t\t\t}",
                "+\t\t\t\tif (sb != null) {",
                "+\t\t\t\t\tsb.append(path.charAt(i));",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tfinally {",
                "+\t\t\t\tprev = curr;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn sb != null ? sb.toString() : path;",
                "+\t}",
                "+",
                "+\tprivate String cleanLeadingSlash(String path) {",
                " \t\tboolean slash = false;",
                "@@ -558,5 +588,5 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\t\t}",
                "-\t\t\t\tpath = slash ? \"/\" + path.substring(i) : path.substring(i);",
                "+\t\t\t\tpath = (slash ? \"/\" + path.substring(i) : path.substring(i));",
                " \t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path after trimming leading '/' and control characters: \" + path);",
                "+\t\t\t\t\tlogger.trace(\"Path after trimming leading '/' and control characters: [\" + path + \"]\");",
                " \t\t\t\t}",
                "@@ -568,2 +598,30 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                "+\t/**",
                "+\t * Check whether the given path contains invalid escape sequences.",
                "+\t * @param path the path to validate",
                "+\t * @return {@code true} if the path is invalid, {@code false} otherwise",
                "+\t */",
                "+\tprivate boolean isInvalidEncodedPath(String path) {",
                "+\t\tif (path.contains(\"%\")) {",
                "+\t\t\ttry {",
                "+\t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t\tdecodedPath = processPath(decodedPath);",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\treturn true;",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (IllegalArgumentException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t\tcatch (UnsupportedEncodingException ex) {",
                "+\t\t\t\t// Should never happen...",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn false;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -582,11 +640,7 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t * @return {@code true} if the path is invalid, {@code false} otherwise",
                "+\t * @since 3.0.6",
                " \t */",
                " \tprotected boolean isInvalidPath(String path) {",
                "-\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\tlogger.trace(\"Applying \\\"invalid path\\\" checks to path: \" + path);",
                "-\t\t}",
                " \t\tif (path.contains(\"WEB-INF\") || path.contains(\"META-INF\")) {",
                "-\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\tlogger.trace(\"Path contains \\\"WEB-INF\\\" or \\\"META-INF\\\".\");",
                "-\t\t\t}",
                "+\t\t\tlogger.trace(\"Path contains \\\"WEB-INF\\\" or \\\"META-INF\\\".\");",
                " \t\t\treturn true;",
                "@@ -596,5 +650,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\tif (ResourceUtils.isUrl(relativePath) || relativePath.startsWith(\"url:\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path represents URL or has \\\"url:\\\" prefix.\");",
                "-\t\t\t\t}",
                "+\t\t\t\tlogger.trace(\"Path represents URL or has \\\"url:\\\" prefix.\");",
                " \t\t\t\treturn true;",
                "@@ -605,5 +657,3 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\tif (path.contains(\"../\")) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Path contains \\\"../\\\" after call to StringUtils#cleanPath.\");",
                "-\t\t\t\t}",
                "+\t\t\t\tlogger.trace(\"Path contains \\\"../\\\" after call to StringUtils#cleanPath.\");",
                " \t\t\t\treturn true;"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3b3f27d5ffc0f9ea9e7361a59a0acbf0c3b20d12",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522230163,
            "hunks": 5,
            "message": "DefaultResponseErrorHandler.hasError avoids exception for unknown status Issue: SPR-16604",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java b/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java",
                "index f4d032ef84..467a4767c1 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -49,8 +49,9 @@ public class DefaultResponseErrorHandler implements ResponseErrorHandler {",
                " \tpublic boolean hasError(ClientHttpResponse response) throws IOException {",
                "-\t\ttry {",
                "-\t\t\treturn hasError(getHttpStatusCode(response));",
                "-\t\t}",
                "-\t\tcatch (UnknownHttpStatusCodeException ex) {",
                "-\t\t\treturn false;",
                "+\t\tint rawStatusCode = response.getRawStatusCode();",
                "+\t\tfor (HttpStatus statusCode : HttpStatus.values()) {",
                "+\t\t\tif (statusCode.value() == rawStatusCode) {",
                "+\t\t\t\treturn hasError(statusCode);",
                "+\t\t\t}",
                " \t\t}",
                "+\t\treturn false;",
                " \t}",
                "@@ -89,3 +90,4 @@ public class DefaultResponseErrorHandler implements ResponseErrorHandler {",
                " \t\t\tdefault:",
                "-\t\t\t\tthrow new RestClientException(\"Unknown status code [\" + statusCode + \"]\");",
                "+\t\t\t\tthrow new UnknownHttpStatusCodeException(statusCode.value(), response.getStatusText(),",
                "+\t\t\t\t\t\tresponse.getHeaders(), getResponseBody(response), getCharset(response));",
                " \t\t}",
                "@@ -96,2 +98,3 @@ public class DefaultResponseErrorHandler implements ResponseErrorHandler {",
                " \t * Determine the HTTP status of the given response.",
                "+\t * <p>Note: Only called from {@link #handleError}, not from {@link #hasError}.",
                " \t * @param response the response to inspect"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/client/DefaultResponseErrorHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "713fc5c4ab2a7b4aaf3685db2bea356eddef0db3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429637641,
            "hunks": 5,
            "message": "Add onTimeout() and onCompletion() callbacks to ResponseBodyEmitter Issue: SPR-12939",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java",
                "index a4536a4b9c..7763262686 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java",
                "@@ -69,2 +69,6 @@ public class ResponseBodyEmitter {",
                "+\tprivate Runnable timeoutCallback;",
                "+",
                "+\tprivate Runnable completionCallback;",
                "+",
                "@@ -98,2 +102,8 @@ public class ResponseBodyEmitter {",
                " \t\t\t}",
                "+\t\t\tif (this.timeoutCallback != null) {",
                "+\t\t\t\tthis.handler.onTimeout(this.timeoutCallback);",
                "+\t\t\t}",
                "+\t\t\tif (this.completionCallback != null) {",
                "+\t\t\t\tthis.handler.onCompletion(this.completionCallback);",
                "+\t\t\t}",
                " \t\t}",
                "@@ -181,2 +191,30 @@ public class ResponseBodyEmitter {",
                "+\t/**",
                "+\t * Register code to invoke when the async request times out. This method is",
                "+\t * called from a container thread when an async request times out.",
                "+\t */",
                "+\tpublic void onTimeout(Runnable callback) {",
                "+\t\tsynchronized (this) {",
                "+\t\t\tthis.timeoutCallback = callback;",
                "+\t\t\tif (this.handler != null) {",
                "+\t\t\t\tthis.handler.onTimeout(callback);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Register code to invoke when the async request completes. This method is",
                "+\t * called from a container thread when an async request completed for any",
                "+\t * reason including timeout and network error. This method is useful for",
                "+\t * detecting that a {@code ResponseBodyEmitter} instance is no longer usable.",
                "+\t */",
                "+\tpublic void onCompletion(Runnable callback) {",
                "+\t\tsynchronized (this) {",
                "+\t\t\tthis.completionCallback = callback;",
                "+\t\t\tif (this.handler != null) {",
                "+\t\t\t\tthis.handler.onCompletion(callback);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "+",
                "@@ -192,2 +230,6 @@ public class ResponseBodyEmitter {",
                " \t\tvoid completeWithError(Throwable failure);",
                "+",
                "+\t\tvoid onTimeout(Runnable callback);",
                "+",
                "+\t\tvoid onCompletion(Runnable callback);",
                " \t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java",
                "index ef7f925d89..fe99556b96 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java",
                "@@ -156,2 +156,12 @@ public class ResponseBodyEmitterReturnValueHandler implements HandlerMethodRetur",
                " \t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic void onTimeout(Runnable callback) {",
                "+\t\t\tthis.deferredResult.onTimeout(callback);",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic void onCompletion(Runnable callback) {",
                "+\t\t\tthis.deferredResult.onCompletion(callback);",
                "+\t\t}",
                " \t}"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitter.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ResponseBodyEmitterReturnValueHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8a9321652d45b6a524921e2cc5988696495ecaaa",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522530428,
            "hunks": 4,
            "message": "Refined javadoc",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "index f9783feaf8..a0dc4417a2 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java",
                "@@ -91,3 +91,3 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                " \t * The default is \"views\".",
                "-\t * <p>{@code ResourceBundle} supports different suffixes. For example,",
                "+\t * <p>{@code ResourceBundle} supports different locale suffixes. For example,",
                " \t * a base name of \"views\" might map to {@code ResourceBundle} files",
                "@@ -109,9 +109,8 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                " \t * conventions. The default is a single basename \"views\".",
                "-\t * <p>{@code ResourceBundle} supports different suffixes. For example,",
                "+\t * <p>{@code ResourceBundle} supports different locale suffixes. For example,",
                " \t * a base name of \"views\" might map to {@code ResourceBundle} files",
                " \t * \"views\", \"views_en_au\" and \"views_de\".",
                "-\t * <p>The associated resource bundles will be checked sequentially",
                "-\t * when resolving a message code. Note that message definitions in a",
                "-\t * <i>previous</i> resource bundle will override ones in a later bundle,",
                "-\t * due to the sequential lookup.",
                "+\t * <p>The associated resource bundles will be checked sequentially when resolving",
                "+\t * a message code. Note that message definitions in a <i>previous</i> resource",
                "+\t * bundle will override ones in a later bundle, due to the sequential lookup.",
                " \t * <p>Note that ResourceBundle names are effectively classpath locations: As a",
                "@@ -122,2 +121,3 @@ public class ResourceBundleViewResolver extends AbstractCachingViewResolver",
                " \t * @see ResourceBundle#getBundle(String)",
                "+\t * @see ResourceBundle#getBundle(String, Locale)",
                " \t */"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/ResourceBundleViewResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "3c1adf7f6af0dff9bda74f40dabe8cf428a62003",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521420322,
            "hunks": 17,
            "message": "ThreadPoolTaskExecutor/Scheduler cancels remaining Futures on shutdown Issue: SPR-16607",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "index 039353e645..84f587e6bf 100644",
                "--- a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "+++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -20,2 +20,3 @@ import java.util.concurrent.ExecutorService;",
                " import java.util.concurrent.RejectedExecutionHandler;",
                "+import java.util.concurrent.RunnableFuture;",
                " import java.util.concurrent.ThreadFactory;",
                "@@ -211,3 +212,5 @@ public abstract class ExecutorConfigurationSupport extends CustomizableThreadFac",
                " \t\t\telse {",
                "-\t\t\t\tthis.executor.shutdownNow();",
                "+\t\t\t\tfor (Runnable remainingTask : this.executor.shutdownNow()) {",
                "+\t\t\t\t\tcancelRemainingTask(remainingTask);",
                "+\t\t\t\t}",
                " \t\t\t}",
                "@@ -217,2 +220,16 @@ public abstract class ExecutorConfigurationSupport extends CustomizableThreadFac",
                "+\t/**",
                "+\t * Cancel the given remaining task which never commended execution,",
                "+\t * as returned from {@link ExecutorService#shutdownNow()}.",
                "+\t * @param task the task to cancel (potentially a {@link RunnableFuture})",
                "+\t * @since 5.0.5",
                "+\t * @see #shutdown()",
                "+\t * @see RunnableFuture#cancel(boolean)",
                "+\t */",
                "+\tprotected void cancelRemainingTask(Runnable task) {",
                "+\t\tif (task instanceof RunnableFuture) {",
                "+\t\t\t((RunnableFuture<?>) task).cancel(true);",
                "+\t\t}",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java",
                "index 4837b68d90..6b04314f69 100644",
                "--- a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java",
                "+++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,2 +18,3 @@ package org.springframework.scheduling.concurrent;",
                "+import java.util.Map;",
                " import java.util.concurrent.BlockingQueue;",
                "@@ -37,2 +38,3 @@ import org.springframework.scheduling.SchedulingTaskExecutor;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.ConcurrentReferenceHashMap;",
                " import org.springframework.util.concurrent.ListenableFuture;",
                "@@ -92,2 +94,6 @@ public class ThreadPoolTaskExecutor extends ExecutorConfigurationSupport",
                "+\t// Runnable decorator to user-level FutureTask, if different",
                "+\tprivate final Map<Runnable, Object> decoratedTaskMap =",
                "+\t\t\tnew ConcurrentReferenceHashMap<>(16, ConcurrentReferenceHashMap.ReferenceType.WEAK);",
                "+",
                "@@ -219,3 +225,7 @@ public class ThreadPoolTaskExecutor extends ExecutorConfigurationSupport",
                " \t\t\t\tpublic void execute(Runnable command) {",
                "-\t\t\t\t\tsuper.execute(taskDecorator.decorate(command));",
                "+\t\t\t\t\tRunnable decorated = taskDecorator.decorate(command);",
                "+\t\t\t\t\tif (decorated != command) {",
                "+\t\t\t\t\t\tdecoratedTaskMap.put(decorated, command);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tsuper.execute(decorated);",
                " \t\t\t\t}",
                "@@ -355,2 +365,12 @@ public class ThreadPoolTaskExecutor extends ExecutorConfigurationSupport",
                "+\t@Override",
                "+\tprotected void cancelRemainingTask(Runnable task) {",
                "+\t\tsuper.cancelRemainingTask(task);",
                "+\t\t// Cancel associated user-level Future handle as well",
                "+\t\tObject original = this.decoratedTaskMap.get(task);",
                "+\t\tif (original instanceof Future) {",
                "+\t\t\t((Future<?>) original).cancel(true);",
                "+\t\t}",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java",
                "index aeb6a97348..ccddbf96dd 100644",
                "--- a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java",
                "+++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,2 +19,3 @@ package org.springframework.scheduling.concurrent;",
                " import java.util.Date;",
                "+import java.util.Map;",
                " import java.util.concurrent.Callable;",
                "@@ -39,2 +40,3 @@ import org.springframework.scheduling.support.TaskUtils;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.ConcurrentReferenceHashMap;",
                " import org.springframework.util.ErrorHandler;",
                "@@ -69,2 +71,6 @@ public class ThreadPoolTaskScheduler extends ExecutorConfigurationSupport",
                "+\t// Underlying ScheduledFutureTask to user-level ListenableFuture handle, if any",
                "+\tprivate final Map<Object, ListenableFuture<?>> listenableFutureMap =",
                "+\t\t\tnew ConcurrentReferenceHashMap<>(16, ConcurrentReferenceHashMap.ReferenceType.WEAK);",
                "+",
                "@@ -255,5 +261,5 @@ public class ThreadPoolTaskScheduler extends ExecutorConfigurationSupport",
                " \t\ttry {",
                "-\t\t\tListenableFutureTask<Object> future = new ListenableFutureTask<>(task, null);",
                "-\t\t\texecutor.execute(errorHandlingTask(future, false));",
                "-\t\t\treturn future;",
                "+\t\t\tListenableFutureTask<Object> listenableFuture = new ListenableFutureTask<>(task, null);",
                "+\t\t\texecuteAndTrack(executor, listenableFuture);",
                "+\t\t\treturn listenableFuture;",
                " \t\t}",
                "@@ -268,5 +274,5 @@ public class ThreadPoolTaskScheduler extends ExecutorConfigurationSupport",
                " \t\ttry {",
                "-\t\t\tListenableFutureTask<T> future = new ListenableFutureTask<>(task);",
                "-\t\t\texecutor.execute(errorHandlingTask(future, false));",
                "-\t\t\treturn future;",
                "+\t\t\tListenableFutureTask<T> listenableFuture = new ListenableFutureTask<>(task);",
                "+\t\t\texecuteAndTrack(executor, listenableFuture);",
                "+\t\t\treturn listenableFuture;",
                " \t\t}",
                "@@ -277,2 +283,19 @@ public class ThreadPoolTaskScheduler extends ExecutorConfigurationSupport",
                "+\tprivate void executeAndTrack(ExecutorService executor, ListenableFutureTask<?> listenableFuture) {",
                "+\t\tFuture<?> scheduledFuture = executor.submit(errorHandlingTask(listenableFuture, false));",
                "+\t\tthis.listenableFutureMap.put(scheduledFuture, listenableFuture);",
                "+\t\tlistenableFuture.addCallback(result -> listenableFutureMap.remove(scheduledFuture),",
                "+\t\t\t\tex -> listenableFutureMap.remove(scheduledFuture));",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected void cancelRemainingTask(Runnable task) {",
                "+\t\tsuper.cancelRemainingTask(task);",
                "+\t\t// Cancel associated user-level ListenableFuture handle as well",
                "+\t\tListenableFuture<?> listenableFuture = this.listenableFutureMap.get(task);",
                "+\t\tif (listenableFuture != null) {",
                "+\t\t\tlistenableFuture.cancel(true);",
                "+\t\t}",
                "+\t}",
                "+",
                " \t@Override"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.java",
                "spring-context/src/main/java/org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "94c525cdc84209dd079c1e62f8aeed36bf15619c",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521671173,
            "hunks": 8,
            "message": "Polish @RequestPart support",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "index e538c33b81..259a444873 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "@@ -314,2 +314,5 @@ public abstract class MimeTypeUtils {",
                "+",
                "+",
                "+",
                " \t/**",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver.java",
                "index 8dc91dc55a..dbba8e07a5 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,3 +18,2 @@ package org.springframework.web.reactive.result.method.annotation;",
                "-import java.util.Collections;",
                " import java.util.List;",
                "@@ -77,6 +76,12 @@ public class RequestPartMethodArgumentResolver extends AbstractMessageReaderArgu",
                "-\t\tFlux<Part> partFlux = getPartValues(name, exchange);",
                "-\t\tif (isRequired) {",
                "-\t\t\tpartFlux = partFlux.switchIfEmpty(Flux.error(getMissingPartException(name, parameter)));",
                "-\t\t}",
                "+\t\tFlux<Part> values = exchange.getMultipartData()",
                "+\t\t\t\t.flatMapMany(map -> {",
                "+\t\t\t\t\tList<Part> parts = map.get(name);",
                "+\t\t\t\t\tif (CollectionUtils.isEmpty(parts)) {",
                "+\t\t\t\t\t\treturn isRequired ?",
                "+\t\t\t\t\t\t\t\tFlux.error(getMissingPartException(name, parameter)) :",
                "+\t\t\t\t\t\t\t\tFlux.empty();",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn Flux.fromIterable(parts);",
                "+\t\t\t\t});",
                "@@ -87,7 +92,7 @@ public class RequestPartMethodArgumentResolver extends AbstractMessageReaderArgu",
                " \t\t\tif (adapter != null) {",
                "-\t\t\t\tpartFlux = adapter.isMultiValue() ? partFlux : partFlux.take(1);",
                "-\t\t\t\treturn Mono.just(adapter.fromPublisher(partFlux));",
                "+\t\t\t\tvalues = adapter.isMultiValue() ? values : values.take(1);",
                "+\t\t\t\treturn Mono.just(adapter.fromPublisher(values));",
                " \t\t\t}",
                " \t\t\telse {",
                "-\t\t\t\treturn partFlux.next().cast(Object.class);",
                "+\t\t\t\treturn values.next().cast(Object.class);",
                " \t\t\t}",
                "@@ -95,3 +100,3 @@ public class RequestPartMethodArgumentResolver extends AbstractMessageReaderArgu",
                "-\t\treturn partFlux.next().flatMap(part -> {",
                "+\t\treturn values.next().flatMap(part -> {",
                " \t\t\tServerHttpRequest partRequest = new PartServerHttpRequest(exchange.getRequest(), part);",
                "@@ -115,8 +120,2 @@ public class RequestPartMethodArgumentResolver extends AbstractMessageReaderArgu",
                "-\tprivate Flux<Part> getPartValues(String name, ServerWebExchange exchange) {",
                "-\t\treturn exchange.getMultipartData()",
                "-\t\t\t\t.filter(map -> !CollectionUtils.isEmpty(map.get(name)))",
                "-\t\t\t\t.flatMapIterable(map -> map.getOrDefault(name, Collections.emptyList()));",
                "-\t}",
                "-",
                " \tprivate ServerWebInputException getMissingPartException(String name, MethodParameter param) {"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/MimeTypeUtils.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestPartMethodArgumentResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b5511645b896034756861a8d6c3e45ad6fead602",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521673386,
            "hunks": 10,
            "message": "DataBindingPropertyAccessor with factory methods (forReadOnlyAccess etc) Includes configurable write support at ReflectivePropertyAccessor level. Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "new file mode 100644",
                "index 0000000000..2deb173993",
                "--- /dev/null",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "@@ -0,0 +1,71 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.expression.spel.support;",
                "+",
                "+import java.lang.reflect.Method;",
                "+",
                "+/**",
                "+ * A {@link org.springframework.expression.PropertyAccessor} variant for data binding",
                "+ * purposes, using reflection to access properties for reading and possibly writing.",
                "+ *",
                "+ * <p>A property can be accessed through a public getter method (when being read)",
                "+ * or a public setter method (when being written), and also as a public field.",
                "+ *",
                "+ * <p>This accessor is explicitly designed for user-level property evaluation",
                "+ * and does not resolve technical properties on {@code java.lang.Object}.",
                "+ * For more resolution power, choose {@link ReflectivePropertyAccessor} instead.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @since 4.3.15",
                "+ * @see #forReadOnlyAccess()",
                "+ * @see #forReadWriteAccess()",
                "+ * @see SimpleEvaluationContext",
                "+ * @see StandardEvaluationContext",
                "+ * @see ReflectivePropertyAccessor",
                "+ */",
                "+public class DataBindingPropertyAccessor extends ReflectivePropertyAccessor {",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading and possibly also writing.",
                "+\t * @param allowWrite whether to also allow for write operations",
                "+\t * @see #canWrite",
                "+\t */",
                "+\tprivate DataBindingPropertyAccessor(boolean allowWrite) {",
                "+\t\tsuper(allowWrite);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected boolean isCandidateForProperty(Method method) {",
                "+\t\treturn (method.getDeclaringClass() != Object.class);",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding property accessor for read-only access.",
                "+\t */",
                "+\tpublic static DataBindingPropertyAccessor forReadOnlyAccess() {",
                "+\t\treturn new DataBindingPropertyAccessor(false);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding property accessor for read-write access.",
                "+\t */",
                "+\tpublic static DataBindingPropertyAccessor forReadWriteAccess() {",
                "+\t\treturn new DataBindingPropertyAccessor(true);",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index 3bf6cdf135..c8ad58abdc 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -48,3 +48,3 @@ import org.springframework.util.StringUtils;",
                "  * A powerful {@link PropertyAccessor} that uses reflection to access properties",
                "- * for reading and writing.",
                "+ * for reading and possibly also for writing.",
                "  *",
                "@@ -59,3 +59,3 @@ import org.springframework.util.StringUtils;",
                "  * @see SimpleEvaluationContext",
                "- * @see SimplePropertyAccessor",
                "+ * @see DataBindingPropertyAccessor",
                "  */",
                "@@ -75,2 +75,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\tprivate final boolean allowWrite;",
                "+",
                " \tprivate final Map<PropertyCacheKey, InvokerPair> readerCache = new ConcurrentHashMap<>(64);",
                "@@ -85,2 +87,21 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t/**",
                "+\t * Create a new property accessor for reading as well writing.",
                "+\t * @see #ReflectivePropertyAccessor(boolean)",
                "+\t */",
                "+\tpublic ReflectivePropertyAccessor() {",
                "+\t\tthis.allowWrite = true;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading and possibly writing.",
                "+\t * @param allowWrite whether to also allow for write operations",
                "+\t * @since 4.3.15",
                "+\t * @see #canWrite",
                "+\t */",
                "+\tpublic ReflectivePropertyAccessor(boolean allowWrite) {",
                "+\t\tthis.allowWrite = allowWrite;",
                "+\t}",
                "+",
                "+",
                " \t/**",
                "@@ -202,3 +223,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \tpublic boolean canWrite(EvaluationContext context, @Nullable Object target, String name) throws AccessException {",
                "-\t\tif (target == null) {",
                "+\t\tif (!this.allowWrite || target == null) {",
                " \t\t\treturn false;",
                "@@ -237,2 +258,7 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t\tif (!this.allowWrite) {",
                "+\t\t\tthrow new AccessException(\"PropertyAccessor for property '\" + name +",
                "+\t\t\t\t\t\"' on target [\" + target + \"] does not allow write operations\");",
                "+\t\t}",
                "+",
                " \t\tAssert.state(target != null, \"Target must not be null\");",
                "@@ -479,10 +505,14 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t/**",
                "-\t * Attempt to create an optimized property accessor tailored for a property of a particular name on",
                "-\t * a particular class. The general ReflectivePropertyAccessor will always work but is not optimal",
                "-\t * due to the need to lookup which reflective member (method/field) to use each time read() is called.",
                "-\t * This method will just return the ReflectivePropertyAccessor instance if it is unable to build",
                "-\t * something more optimal.",
                "+\t * Attempt to create an optimized property accessor tailored for a property of a",
                "+\t * particular name on a particular class. The general ReflectivePropertyAccessor",
                "+\t * will always work but is not optimal due to the need to lookup which reflective",
                "+\t * member (method/field) to use each time read() is called. This method will just",
                "+\t * return the ReflectivePropertyAccessor instance if it is unable to build a more",
                "+\t * optimal accessor.",
                "+\t * <p>Note: An optimal accessor is currently only usable for read attempts.",
                "+\t * Do not call this method if you need a read-write accessor.",
                "+\t * @see OptimalPropertyAccessor",
                " \t */",
                " \tpublic PropertyAccessor createOptimalAccessor(EvaluationContext context, @Nullable Object target, String name) {",
                "-\t\t// Don't be clever for arrays or null target",
                "+\t\t// Don't be clever for arrays or a null target...",
                " \t\tif (target == null) {",
                "@@ -508,3 +538,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t}",
                "-\t\t\tif (method != null) {",
                "+\t\t\tif (method != null && isCandidateForProperty(method)) {",
                " \t\t\t\treturn new OptimalPropertyAccessor(invocationTarget);"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7de2650a7070af4db25ef9b5d87528a679302120",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521173338,
            "hunks": 10,
            "message": "Drop @WebServlet annotation Issue: SPR-16591",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/JettyHttpHandlerAdapter.java b/spring-web/src/main/java/org/springframework/http/server/reactive/JettyHttpHandlerAdapter.java",
                "index f08231cee7..5b5f7b602e 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/JettyHttpHandlerAdapter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/JettyHttpHandlerAdapter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -22,3 +22,2 @@ import javax.servlet.AsyncContext;",
                " import javax.servlet.ServletResponse;",
                "-import javax.servlet.annotation.WebServlet;",
                " import javax.servlet.http.HttpServletResponse;",
                "@@ -36,4 +35,4 @@ import org.springframework.core.io.buffer.DataBufferFactory;",
                "  * @since 5.0",
                "+ * @see org.springframework.web.server.adapter.AbstractReactiveWebInitializer",
                "  */",
                "-@WebServlet(asyncSupported = true)",
                " public class JettyHttpHandlerAdapter extends ServletHttpHandlerAdapter {",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java",
                "index 8692c28818..0374dd38c5 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java",
                "@@ -31,3 +31,2 @@ import javax.servlet.ServletRequest;",
                " import javax.servlet.ServletResponse;",
                "-import javax.servlet.annotation.WebServlet;",
                " import javax.servlet.http.HttpServlet;",
                "@@ -54,4 +53,4 @@ import org.springframework.util.Assert;",
                "  * @since 5.0",
                "+ * @see org.springframework.web.server.adapter.AbstractReactiveWebInitializer",
                "  */",
                "-@WebServlet(asyncSupported = true)",
                " @SuppressWarnings(\"serial\")",
                "diff --git a/spring-web/src/main/java/org/springframework/http/server/reactive/TomcatHttpHandlerAdapter.java b/spring-web/src/main/java/org/springframework/http/server/reactive/TomcatHttpHandlerAdapter.java",
                "index 741bb8d8e8..53abe4186c 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/server/reactive/TomcatHttpHandlerAdapter.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/server/reactive/TomcatHttpHandlerAdapter.java",
                "@@ -23,3 +23,2 @@ import javax.servlet.ServletRequest;",
                " import javax.servlet.ServletResponse;",
                "-import javax.servlet.annotation.WebServlet;",
                " import javax.servlet.http.HttpServletRequest;",
                "@@ -41,4 +40,4 @@ import org.springframework.util.Assert;",
                "  * @since 5.0",
                "+ * @see org.springframework.web.server.adapter.AbstractReactiveWebInitializer",
                "  */",
                "-@WebServlet(asyncSupported = true)",
                " public class TomcatHttpHandlerAdapter extends ServletHttpHandlerAdapter {"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/server/reactive/JettyHttpHandlerAdapter.java",
                "spring-web/src/main/java/org/springframework/http/server/reactive/ServletHttpHandlerAdapter.java",
                "spring-web/src/main/java/org/springframework/http/server/reactive/TomcatHttpHandlerAdapter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5fb4c8254f2c7ddf29c531d34960b3c2e0dcbb78",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522339010,
            "hunks": 1,
            "message": "Fix inclusion of license in jar",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 94d792f150..05d84c74bb 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -197,3 +197,3 @@ configure(subprojects - project(\":spring-build-src\")) { subproject ->",
                "-\t\tfrom(\"${rootProject.projectDir}/src/dist\") {",
                "+\t\tfrom(\"${rootProject.projectDir}/src/docs/dist\") {",
                " \t\t\tinclude \"license.txt\""
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d232fffa63096811d2e157ef7a9057008ca60835",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1474197429,
            "hunks": 3,
            "message": "Use whenComplete since (null) return value not needed",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/concurrent/CompletableToListenableFutureAdapter.java b/spring-core/src/main/java/org/springframework/util/concurrent/CompletableToListenableFutureAdapter.java",
                "index c9b28a79a8..42910bf902 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/concurrent/CompletableToListenableFutureAdapter.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/concurrent/CompletableToListenableFutureAdapter.java",
                "@@ -23,2 +23,3 @@ import java.util.concurrent.TimeUnit;",
                " import java.util.concurrent.TimeoutException;",
                "+import java.util.function.BiConsumer;",
                "@@ -52,3 +53,3 @@ public class CompletableToListenableFutureAdapter<T> implements ListenableFuture",
                " \t\tthis.completableFuture = completableFuture;",
                "-\t\tthis.completableFuture.handle((result, ex) -> {",
                "+\t\tthis.completableFuture.whenComplete((result, ex) -> {",
                " \t\t\tif (ex != null) {",
                "@@ -59,3 +60,2 @@ public class CompletableToListenableFutureAdapter<T> implements ListenableFuture",
                " \t\t\t}",
                "-\t\t\treturn null;",
                " \t\t});"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/concurrent/CompletableToListenableFutureAdapter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5b0a0f4db5e1e7527bb76f10e55ce0d539571ab6",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429523282,
            "hunks": 5,
            "message": "Support CompletableFuture as alternative to DeferredResult in MVC Issue: SPR-12597",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java",
                "index ecc27d16a1..e3b7655be0 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java",
                "@@ -215,2 +215,6 @@ import java.util.concurrent.Callable;",
                "  * thread of its own choosing, as an alternative to returning a Callable.",
                "+ * <li>A {@link java.util.concurrent.CompletionStage} (implemented by",
                "+ * {@link java.util.concurrent.CompletableFuture} for example)",
                "+ * which the application uses to produce a return value in a separate",
                "+ * thread of its own choosing, as an alternative to returning a Callable.",
                "  * <li>A {@link org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/CompletionStageReturnValueHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/CompletionStageReturnValueHandler.java",
                "new file mode 100644",
                "index 0000000000..6e108b3697",
                "--- /dev/null",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/CompletionStageReturnValueHandler.java",
                "@@ -0,0 +1,76 @@",
                "+/*",
                "+ * Copyright 2002-2015 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.web.servlet.mvc.method.annotation;",
                "+",
                "+import java.util.concurrent.CompletionStage;",
                "+import java.util.function.Consumer;",
                "+import java.util.function.Function;",
                "+",
                "+import org.springframework.core.MethodParameter;",
                "+import org.springframework.lang.UsesJava8;",
                "+import org.springframework.web.context.request.NativeWebRequest;",
                "+import org.springframework.web.context.request.async.DeferredResult;",
                "+import org.springframework.web.context.request.async.WebAsyncUtils;",
                "+import org.springframework.web.method.support.HandlerMethodReturnValueHandler;",
                "+import org.springframework.web.method.support.ModelAndViewContainer;",
                "+",
                "+/**",
                "+ * Handles return values of type {@link CompletionStage} (implemented by",
                "+ * {@link java.util.concurrent.CompletableFuture} for example).",
                "+ *",
                "+ * @author Sebastien Deleuze",
                "+ * @since 4.2",
                "+ */",
                "+@UsesJava8",
                "+public class CompletionStageReturnValueHandler implements HandlerMethodReturnValueHandler {",
                "+",
                "+\t@Override",
                "+\tpublic boolean supportsReturnType(MethodParameter returnType) {",
                "+\t\treturn CompletionStage.class.isAssignableFrom(returnType.getParameterType());",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void handleReturnValue(Object returnValue, MethodParameter returnType,",
                "+\t\t\tModelAndViewContainer mavContainer, NativeWebRequest webRequest) throws Exception {",
                "+",
                "+\t\tif (returnValue == null) {",
                "+\t\t\tmavContainer.setRequestHandled(true);",
                "+\t\t\treturn;",
                "+\t\t}",
                "+",
                "+\t\tfinal DeferredResult<Object> deferredResult = new DeferredResult<Object>();",
                "+\t\tWebAsyncUtils.getAsyncManager(webRequest).startDeferredResultProcessing(deferredResult, mavContainer);",
                "+",
                "+\t\t@SuppressWarnings(\"unchecked\")",
                "+\t\tCompletionStage<Object> future = (CompletionStage<Object>) returnValue;",
                "+\t\tfuture.thenAccept(new Consumer<Object>() {",
                "+\t\t\t@Override",
                "+\t\t\tpublic void accept(Object result) {",
                "+\t\t\t\tdeferredResult.setResult(result);",
                "+\t\t\t}",
                "+\t\t});",
                "+\t\tfuture.exceptionally(new Function<Throwable, Object>() {",
                "+\t\t\t@Override",
                "+\t\t\tpublic Object apply(Throwable ex) {",
                "+\t\t\t\tdeferredResult.setErrorResult(ex);",
                "+\t\t\t\treturn null;",
                "+\t\t\t}",
                "+\t\t});",
                "+",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java",
                "index e9ccd1dd48..b310405884 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java",
                "@@ -49,2 +49,3 @@ import org.springframework.ui.ModelMap;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.ClassUtils;",
                " import org.springframework.util.CollectionUtils;",
                "@@ -117,2 +118,6 @@ public class RequestMappingHandlerAdapter extends AbstractHandlerMethodAdapter",
                "+\tprivate static final boolean completionStagePresent = ClassUtils.isPresent(\"java.util.concurrent.CompletionStage\",",
                "+\t\t\tRequestMappingHandlerAdapter.class.getClassLoader());",
                "+",
                "+",
                " \tprivate List<HandlerMethodArgumentResolver> customArgumentResolvers;",
                "@@ -655,2 +660,5 @@ public class RequestMappingHandlerAdapter extends AbstractHandlerMethodAdapter",
                " \t\thandlers.add(new ListenableFutureReturnValueHandler());",
                "+\t\tif (completionStagePresent) {",
                "+\t\t\thandlers.add(new CompletionStageReturnValueHandler());",
                "+\t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/CompletionStageReturnValueHandler.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "58011f71e9764a6be762101b708847d1f6de9437",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521050150,
            "hunks": 33,
            "message": "Consistent assertions for template method result vs servlet registration",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/server/adapter/AbstractReactiveWebInitializer.java b/spring-web/src/main/java/org/springframework/web/server/adapter/AbstractReactiveWebInitializer.java",
                "index 614d0871ca..825d4d4d6f 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/server/adapter/AbstractReactiveWebInitializer.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/server/adapter/AbstractReactiveWebInitializer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -56,6 +56,6 @@ public abstract class AbstractReactiveWebInitializer implements WebApplicationIn",
                " \t\tString servletName = getServletName();",
                "-\t\tAssert.hasLength(servletName, \"getServletName() must not return empty or null\");",
                "+\t\tAssert.hasLength(servletName, \"getServletName() must not return null or empty\");",
                " \t\tApplicationContext applicationContext = createApplicationContext();",
                "-\t\tAssert.notNull(applicationContext, \"createApplicationContext() must not return null.\");",
                "+\t\tAssert.notNull(applicationContext, \"createApplicationContext() must not return null\");",
                "@@ -68,3 +68,6 @@ public abstract class AbstractReactiveWebInitializer implements WebApplicationIn",
                " \t\tServletRegistration.Dynamic registration = servletContext.addServlet(servletName, servlet);",
                "-\t\tAssert.notNull(registration, \"Failed to register servlet '\" + servletName + \"'.\");",
                "+\t\tif (registration == null) {",
                "+\t\t\tthrow new IllegalStateException(\"Failed to register servlet with name '\" + servletName + \"'. \" +",
                "+\t\t\t\t\t\"Check if there is another servlet registered under the same name.\");",
                "+\t\t}",
                "@@ -90,3 +93,3 @@ public abstract class AbstractReactiveWebInitializer implements WebApplicationIn",
                " \t\tClass<?>[] configClasses = getConfigClasses();",
                "-\t\tAssert.notEmpty(configClasses, \"No Spring configuration provided.\");",
                "+\t\tAssert.notEmpty(configClasses, \"No Spring configuration provided through getConfigClasses()\");",
                " \t\tcontext.register(configClasses);",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractDispatcherHandlerInitializer.java b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractDispatcherHandlerInitializer.java",
                "index 3a798e9128..e4fa6cc939 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractDispatcherHandlerInitializer.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractDispatcherHandlerInitializer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -41,5 +41,4 @@ import org.springframework.web.server.adapter.HttpWebHandlerAdapter;",
                "  * @since 5.0",
                "- * @deprecated in favor of",
                "- * {@link org.springframework.web.server.adapter.AbstractReactiveWebInitializer",
                "- * AbstractReactiveWebInitializer}",
                "+ * @deprecated as of 5.0.2, in favor of",
                "+ * {@link org.springframework.web.server.adapter.AbstractReactiveWebInitializer}",
                "  */",
                "@@ -78,8 +77,6 @@ public abstract class AbstractDispatcherHandlerInitializer implements WebApplica",
                " \t\tString servletName = getServletName();",
                "-\t\tAssert.hasLength(servletName, \"getServletName() must not return empty or null\");",
                "+\t\tAssert.hasLength(servletName, \"getServletName() must not return null or empty\");",
                " \t\tApplicationContext applicationContext = createApplicationContext();",
                "-\t\tAssert.notNull(applicationContext,",
                "-\t\t\t\t\"createApplicationContext() did not return an application \" +",
                "-\t\t\t\t\"context for servlet [\" + servletName + \"]\");",
                "+\t\tAssert.notNull(applicationContext, \"createApplicationContext() must not return null\");",
                "@@ -89,13 +86,12 @@ public abstract class AbstractDispatcherHandlerInitializer implements WebApplica",
                " \t\tWebHandler dispatcherHandler = createDispatcherHandler(applicationContext);",
                "-\t\tAssert.notNull(dispatcherHandler,",
                "-\t\t\t\t\"createDispatcherHandler() did not return a WebHandler for servlet [\" + servletName + \"]\");",
                "+\t\tAssert.notNull(dispatcherHandler, \"createDispatcherHandler(ApplicationContext) must not return null\");",
                " \t\tServletHttpHandlerAdapter handlerAdapter = createHandlerAdapter(dispatcherHandler);",
                "-\t\tAssert.notNull(handlerAdapter,",
                "-\t\t\t\t\"createHttpHandler() did not return a ServletHttpHandlerAdapter for servlet [\" + servletName + \"]\");",
                "+\t\tAssert.notNull(handlerAdapter, \"createHandlerAdapter(WebHandler) must not return null\");",
                " \t\tServletRegistration.Dynamic registration = servletContext.addServlet(servletName, handlerAdapter);",
                "-\t\tAssert.notNull(registration,",
                "-\t\t\t\t\"Failed to register servlet with name '\" + servletName + \"'.\" +",
                "-\t\t\t\t\"Check if there is another servlet registered under the same name.\");",
                "+\t\tif (registration == null) {",
                "+\t\t\tthrow new IllegalStateException(\"Failed to register servlet with name '\" + servletName + \"'. \" +",
                "+\t\t\t\t\t\"Check if there is another servlet registered under the same name.\");",
                "+\t\t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractServletHttpHandlerAdapterInitializer.java b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractServletHttpHandlerAdapterInitializer.java",
                "index 837491201c..9950ba6623 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractServletHttpHandlerAdapterInitializer.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractServletHttpHandlerAdapterInitializer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -55,9 +55,9 @@ public abstract class AbstractServletHttpHandlerAdapterInitializer implements We",
                " \t * <p>This method will create a {@code HttpHandler} using {@link #createHttpHandler()},",
                "-\t * and use it to create a {@code ServletHttpHandlerAdapter} with the name returned by",
                "-\t * {@link #getServletName()}, and mapping it to the patterns",
                "-\t * returned from {@link #getServletMappings()}.",
                "-\t * <p>Further customization can be achieved by overriding {@link",
                "-\t * #customizeRegistration(ServletRegistration.Dynamic)} or",
                "+\t * and use it to create a {@code ServletHttpHandlerAdapter} with the name returned",
                "+\t * by {@link #getServletName()}, and mapping it to the patterns returned from",
                "+\t * {@link #getServletMappings()}.",
                "+\t * <p>Further customization can be achieved by overriding",
                "+\t * {@link #customizeRegistration(ServletRegistration.Dynamic)} or",
                " \t * {@link #createServlet(HttpHandler)}.",
                "-\t * @param servletContext the context to register the servlet against",
                "+\t * @param servletContext the context to register the servlet with",
                " \t */",
                "@@ -65,16 +65,15 @@ public abstract class AbstractServletHttpHandlerAdapterInitializer implements We",
                " \t\tString servletName = getServletName();",
                "-\t\tAssert.hasLength(servletName, \"getServletName() must not return empty or null\");",
                "+\t\tAssert.hasLength(servletName, \"getServletName() must not return null or empty\");",
                " \t\tHttpHandler httpHandler = createHttpHandler();",
                "-\t\tAssert.notNull(httpHandler, \"createHttpHandler() did not return a HttpHandler\" +",
                "-\t\t\t\t\"for servlet [\" + servletName + \"]\");",
                "+\t\tAssert.notNull(httpHandler, \"createHttpHandler() must not return null\");",
                " \t\tServletHttpHandlerAdapter servlet = createServlet(httpHandler);",
                "-\t\tAssert.notNull(servlet, \"createHttpHandler() did not return a ServletHttpHandlerAdapter \" +",
                "-\t\t\t\t\"for servlet [\" + servletName + \"]\");",
                "+\t\tAssert.notNull(servlet, \"createServlet(HttpHandler) must not return null\");",
                " \t\tServletRegistration.Dynamic registration = servletContext.addServlet(servletName, servlet);",
                "-\t\tAssert.notNull(registration,",
                "-\t\t\t\t\"Failed to register servlet with name '\" + servletName + \"'.\" +",
                "-\t\t\t\t\"Check if there is another servlet registered under the same name.\");",
                "+\t\tif (registration == null) {",
                "+\t\t\tthrow new IllegalStateException(\"Failed to register servlet with name '\" + servletName + \"'. \" +",
                "+\t\t\t\t\t\"Check if there is another servlet registered under the same name.\");",
                "+\t\t}",
                "@@ -103,3 +102,3 @@ public abstract class AbstractServletHttpHandlerAdapterInitializer implements We",
                " \t * Create a {@link ServletHttpHandlerAdapter}  with the specified .",
                "-\t * <p>Default implementation returns a {@code ServletHttpHandlerAdapter}",
                "+\t * <p>The default implementation returns a {@code ServletHttpHandlerAdapter}",
                " \t * with the provided {@code httpHandler}.",
                "@@ -111,3 +110,3 @@ public abstract class AbstractServletHttpHandlerAdapterInitializer implements We",
                " \t/**",
                "-\t * Specify the servlet mapping(s) for the {@code ServletHttpHandlerAdapter} &mdash;",
                "+\t * Specify the servlet mapping(s) for the {@code ServletHttpHandlerAdapter}:",
                " \t * for example {@code \"/\"}, {@code \"/app\"}, etc.",
                "@@ -125,2 +124,3 @@ public abstract class AbstractServletHttpHandlerAdapterInitializer implements We",
                " \t}",
                "+",
                " }",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.java",
                "index e16494b61e..3815467129 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -19,3 +19,2 @@ package org.springframework.web.servlet.support;",
                " import java.util.EnumSet;",
                "-",
                " import javax.servlet.DispatcherType;",
                "@@ -42,3 +41,3 @@ import org.springframework.web.servlet.FrameworkServlet;",
                "  *",
                "- * <p>Most applications should consider extending the Spring Java config, sub-class",
                "+ * <p>Most applications should consider extending the Spring Java config subclass",
                "  * {@link AbstractAnnotationConfigDispatcherServletInitializer}.",
                "@@ -79,10 +78,9 @@ public abstract class AbstractDispatcherServletInitializer extends AbstractConte",
                " \t\tString servletName = getServletName();",
                "-\t\tAssert.hasLength(servletName, \"getServletName() must not return empty or null\");",
                "+\t\tAssert.hasLength(servletName, \"getServletName() must not return null or empty\");",
                " \t\tWebApplicationContext servletAppContext = createServletApplicationContext();",
                "-\t\tAssert.notNull(servletAppContext,",
                "-\t\t\t\t\"createServletApplicationContext() did not return an application \" +",
                "-\t\t\t\t\"context for servlet [\" + servletName + \"]\");",
                "+\t\tAssert.notNull(servletAppContext, \"createServletApplicationContext() must not return null\");",
                " \t\tFrameworkServlet dispatcherServlet = createDispatcherServlet(servletAppContext);",
                "+\t\tAssert.notNull(dispatcherServlet, \"createDispatcherServlet(WebApplicationContext) must not return null\");",
                " \t\tdispatcherServlet.setContextInitializers(getServletApplicationContextInitializers());",
                "@@ -90,5 +88,6 @@ public abstract class AbstractDispatcherServletInitializer extends AbstractConte",
                " \t\tServletRegistration.Dynamic registration = servletContext.addServlet(servletName, dispatcherServlet);",
                "-\t\tAssert.notNull(registration,",
                "-\t\t\t\t\"Failed to register servlet with name '\" + servletName + \"'.\" +",
                "-\t\t\t\t\"Check if there is another servlet registered under the same name.\");",
                "+\t\tif (registration == null) {",
                "+\t\t\tthrow new IllegalStateException(\"Failed to register servlet with name '\" + servletName + \"'. \" +",
                "+\t\t\t\t\t\"Check if there is another servlet registered under the same name.\");",
                "+\t\t}",
                "@@ -187,12 +186,15 @@ public abstract class AbstractDispatcherServletInitializer extends AbstractConte",
                " \t\tDynamic registration = servletContext.addFilter(filterName, filter);",
                "+",
                " \t\tif (registration == null) {",
                "-\t\t\tint counter = -1;",
                "-\t\t\twhile (counter == -1 || registration == null) {",
                "-\t\t\t\tcounter++;",
                "+\t\t\tint counter = 0;",
                "+\t\t\twhile (registration == null) {",
                "+\t\t\t\tif (counter == 100) {",
                "+\t\t\t\t\tthrow new IllegalStateException(\"Failed to register filter with name '\" + filterName + \"'. \" +",
                "+\t\t\t\t\t\t\t\"Check if there is another filter registered under the same name.\");",
                "+\t\t\t\t}",
                " \t\t\t\tregistration = servletContext.addFilter(filterName + \"#\" + counter, filter);",
                "-\t\t\t\tAssert.isTrue(counter < 100,",
                "-\t\t\t\t\t\t\"Failed to register filter '\" + filter + \"'.\" +",
                "-\t\t\t\t\t\t\"Could the same Filter instance have been registered already?\");",
                "+\t\t\t\tcounter++;",
                " \t\t\t}",
                " \t\t}",
                "+",
                " \t\tregistration.setAsyncSupported(isAsyncSupported());"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/server/adapter/AbstractReactiveWebInitializer.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractDispatcherHandlerInitializer.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/support/AbstractServletHttpHandlerAdapterInitializer.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/support/AbstractDispatcherServletInitializer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ab96bb54280544fb060ecad6d80bf39617b28dc7",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522356820,
            "hunks": 2,
            "message": "Remove redundant check",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "index 516c1e06a3..4cda6ab082 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "@@ -88,5 +88,3 @@ public abstract class AbstractView implements View, ApplicationContextAware {",
                " \t\tthis.mediaTypes.clear();",
                "-\t\tif (supportedMediaTypes != null) {",
                "-\t\t\tthis.mediaTypes.addAll(supportedMediaTypes);",
                "-\t\t}",
                "+\t\tthis.mediaTypes.addAll(supportedMediaTypes);",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "index e8ed8636a1..637303983d 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java",
                "@@ -59,5 +59,3 @@ public abstract class ViewResolverSupport implements Ordered {",
                " \t\tthis.mediaTypes.clear();",
                "-\t\tif (supportedMediaTypes != null) {",
                "-\t\t\tthis.mediaTypes.addAll(supportedMediaTypes);",
                "-\t\t}",
                "+\t\tthis.mediaTypes.addAll(supportedMediaTypes);",
                " \t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/view/AbstractView.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/view/ViewResolverSupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "65a8aa1c092b9259414de47ce3780fcbb4513211",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522192979,
            "hunks": 79,
            "message": "Backported DataBindingPropertyAccessor and DataBindingMethodResolver Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "index 9d509c6121..417f12586c 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -24,5 +24,5 @@ import java.util.List;",
                "  *",
                "- * <p>There is a default implementation of the EvaluationContext,",
                "- * {@link org.springframework.expression.spel.support.StandardEvaluationContext} that can",
                "- * be extended, rather than having to implement everything.",
                "+ * <p>There is a default implementation of this EvaluationContext interface:",
                "+ * {@link org.springframework.expression.spel.support.StandardEvaluationContext}",
                "+ * which can be extended, rather than having to implement everything manually.",
                "  *",
                "@@ -41,2 +41,7 @@ public interface EvaluationContext {",
                "+\t/**",
                "+\t * Return a list of accessors that will be asked in turn to read/write a property.",
                "+\t */",
                "+\tList<PropertyAccessor> getPropertyAccessors();",
                "+",
                " \t/**",
                "@@ -52,5 +57,5 @@ public interface EvaluationContext {",
                " \t/**",
                "-\t * Return a list of accessors that will be asked in turn to read/write a property.",
                "+\t * Return a bean resolver that can look up beans by name.",
                " \t */",
                "-\tList<PropertyAccessor> getPropertyAccessors();",
                "+\tBeanResolver getBeanResolver();",
                "@@ -78,7 +83,2 @@ public interface EvaluationContext {",
                "-\t/**",
                "-\t * Return a bean resolver that can look up beans by name.",
                "-\t */",
                "-\tBeanResolver getBeanResolver();",
                "-",
                " \t/**",
                "@@ -93,3 +93,3 @@ public interface EvaluationContext {",
                " \t * @param name variable to lookup",
                "-\t * @return the value of the variable",
                "+\t * @return the value of the variable, or {@code null} if not found",
                " \t */",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "new file mode 100644",
                "index 0000000000..d63e646839",
                "--- /dev/null",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "@@ -0,0 +1,74 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.expression.spel.support;",
                "+",
                "+import java.lang.reflect.Method;",
                "+import java.lang.reflect.Modifier;",
                "+import java.util.List;",
                "+",
                "+import org.springframework.core.convert.TypeDescriptor;",
                "+import org.springframework.expression.AccessException;",
                "+import org.springframework.expression.EvaluationContext;",
                "+import org.springframework.expression.MethodExecutor;",
                "+",
                "+/**",
                "+ * A {@link org.springframework.expression.MethodResolver} variant for data binding",
                "+ * purposes, using reflection to access instance methods on a given target object.",
                "+ *",
                "+ * <p>This accessor does not resolve static methods and also no technical methods",
                "+ * on {@code java.lang.Object} or {@code java.lang.Class}.",
                "+ * For unrestricted resolution, choose {@link ReflectiveMethodResolver} instead.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @since 4.3.15",
                "+ * @see #forInstanceMethodInvocation()",
                "+ * @see DataBindingPropertyAccessor",
                "+ */",
                "+public class DataBindingMethodResolver extends ReflectiveMethodResolver {",
                "+",
                "+\tprivate DataBindingMethodResolver() {",
                "+\t\tsuper();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic MethodExecutor resolve(EvaluationContext context, Object targetObject, String name,",
                "+\t\t\tList<TypeDescriptor> argumentTypes) throws AccessException {",
                "+",
                "+\t\tif (targetObject instanceof Class) {",
                "+\t\t\tthrow new IllegalArgumentException(\"DataBindingMethodResolver does not support Class targets\");",
                "+\t\t}",
                "+\t\treturn super.resolve(context, targetObject, name, argumentTypes);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected boolean isCandidateForInvocation(Method method, Class<?> targetClass) {",
                "+\t\tif (Modifier.isStatic(method.getModifiers())) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tClass<?> clazz = method.getDeclaringClass();",
                "+\t\treturn (clazz != Object.class && clazz != Class.class && !ClassLoader.class.isAssignableFrom(targetClass));",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding method resolver for instance method resolution.",
                "+\t */",
                "+\tpublic static DataBindingMethodResolver forInstanceMethodInvocation() {",
                "+\t\treturn new DataBindingMethodResolver();",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "new file mode 100644",
                "index 0000000000..8ee7ec946d",
                "--- /dev/null",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "@@ -0,0 +1,72 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.expression.spel.support;",
                "+",
                "+import java.lang.reflect.Method;",
                "+",
                "+/**",
                "+ * A {@link org.springframework.expression.PropertyAccessor} variant for data binding",
                "+ * purposes, using reflection to access properties for reading and possibly writing.",
                "+ *",
                "+ * <p>A property can be referenced through a public getter method (when being read)",
                "+ * or a public setter method (when being written), and also as a public field.",
                "+ *",
                "+ * <p>This accessor is explicitly designed for user-declared properties and does not",
                "+ * resolve technical properties on {@code java.lang.Object} or {@code java.lang.Class}.",
                "+ * For unrestricted resolution, choose {@link ReflectivePropertyAccessor} instead.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @since 4.3.15",
                "+ * @see #forReadOnlyAccess()",
                "+ * @see #forReadWriteAccess()",
                "+ * @see SimpleEvaluationContext",
                "+ * @see StandardEvaluationContext",
                "+ * @see ReflectivePropertyAccessor",
                "+ */",
                "+public class DataBindingPropertyAccessor extends ReflectivePropertyAccessor {",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading and possibly also writing.",
                "+\t * @param allowWrite whether to also allow for write operations",
                "+\t * @see #canWrite",
                "+\t */",
                "+\tprivate DataBindingPropertyAccessor(boolean allowWrite) {",
                "+\t\tsuper(allowWrite);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected boolean isCandidateForProperty(Method method, Class<?> targetClass) {",
                "+\t\tClass<?> clazz = method.getDeclaringClass();",
                "+\t\treturn (clazz != Object.class && clazz != Class.class && !ClassLoader.class.isAssignableFrom(targetClass));",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding property accessor for read-only operations.",
                "+\t */",
                "+\tpublic static DataBindingPropertyAccessor forReadOnlyAccess() {",
                "+\t\treturn new DataBindingPropertyAccessor(false);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding property accessor for read-write operations.",
                "+\t */",
                "+\tpublic static DataBindingPropertyAccessor forReadWriteAccess() {",
                "+\t\treturn new DataBindingPropertyAccessor(true);",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "index fb512d86a0..b1cffa5d43 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,3 +23,2 @@ import java.util.ArrayList;",
                " import java.util.Arrays;",
                "-import java.util.Collection;",
                " import java.util.Collections;",
                "@@ -83,2 +82,8 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "+\t/**",
                "+\t * Register a filter for methods on the given type.",
                "+\t * @param type the type to filter on",
                "+\t * @param filter the corresponding method filter,",
                "+\t * or {@code null} to clear any filter for the given type",
                "+\t */",
                " \tpublic void registerMethodFilter(Class<?> type, MethodFilter filter) {",
                "@@ -95,3 +100,2 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "-",
                " \t/**",
                "@@ -221,3 +225,3 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "-\tprivate Collection<Method> getMethods(Class<?> type, Object targetObject) {",
                "+\tprivate Set<Method> getMethods(Class<?> type, Object targetObject) {",
                " \t\tif (targetObject instanceof Class) {",
                "@@ -239,3 +243,8 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\t\tfor (Class<?> ifc : type.getInterfaces()) {",
                "-\t\t\t\tresult.addAll(Arrays.asList(getMethods(ifc)));",
                "+\t\t\t\tMethod[] methods = getMethods(ifc);",
                "+\t\t\t\tfor (Method method : methods) {",
                "+\t\t\t\t\tif (isCandidateForInvocation(method, type)) {",
                "+\t\t\t\t\t\tresult.add(method);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                " \t\t\t}",
                "@@ -244,3 +253,10 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\telse {",
                "-\t\t\treturn Arrays.asList(getMethods(type));",
                "+\t\t\tSet<Method> result = new LinkedHashSet<Method>();",
                "+\t\t\tMethod[] methods = getMethods(type);",
                "+\t\t\tfor (Method method : methods) {",
                "+\t\t\t\tif (isCandidateForInvocation(method, type)) {",
                "+\t\t\t\t\tresult.add(method);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\treturn result;",
                " \t\t}",
                "@@ -260,2 +276,15 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "+\t/**",
                "+\t * Determine whether the given {@code Method} is a candidate for method resolution",
                "+\t * on an instance of the given target class.",
                "+\t * <p>The default implementation considers any method as a candidate, even for",
                "+\t * static methods sand non-user-declared methods on the {@link Object} base class.",
                "+\t * @param method the Method to evaluate",
                "+\t * @param targetClass the concrete target class that is being introspected",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected boolean isCandidateForInvocation(Method method, Class<?> targetClass) {",
                "+\t\treturn true;",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index 8cb54e8f0a..0766dbbe47 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -46,6 +46,6 @@ import org.springframework.util.StringUtils;",
                " /**",
                "- * Simple {@link PropertyAccessor} that uses reflection to access properties",
                "- * for reading and writing.",
                "+ * A powerful {@link PropertyAccessor} that uses reflection to access properties",
                "+ * for reading and possibly also for writing.",
                "  *",
                "- * <p>A property can be accessed through a public getter method (when being read)",
                "+ * <p>A property can be referenced through a public getter method (when being read)",
                "  * or a public setter method (when being written), and also as a public field.",
                "@@ -56,2 +56,5 @@ import org.springframework.util.StringUtils;",
                "  * @since 3.0",
                "+ * @see StandardEvaluationContext",
                "+ * @see SimpleEvaluationContext",
                "+ * @see DataBindingPropertyAccessor",
                "  */",
                "@@ -64,3 +67,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \tstatic {",
                "-\t\tSet<Class<?>> booleanTypes = new HashSet<Class<?>>();",
                "+\t\tSet<Class<?>> booleanTypes = new HashSet<Class<?>>(4);",
                " \t\tbooleanTypes.add(Boolean.class);",
                "@@ -71,2 +74,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\tprivate final boolean allowWrite;",
                "+",
                " \tprivate final Map<PropertyCacheKey, InvokerPair> readerCache =",
                "@@ -83,2 +88,21 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t/**",
                "+\t * Create a new property accessor for reading as well writing.",
                "+\t * @see #ReflectivePropertyAccessor(boolean)",
                "+\t */",
                "+\tpublic ReflectivePropertyAccessor() {",
                "+\t\tthis.allowWrite = true;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading and possibly writing.",
                "+\t * @param allowWrite whether to also allow for write operations",
                "+\t * @since 4.3.15",
                "+\t * @see #canWrite",
                "+\t */",
                "+\tpublic ReflectivePropertyAccessor(boolean allowWrite) {",
                "+\t\tthis.allowWrite = allowWrite;",
                "+\t}",
                "+",
                "+",
                " \t/**",
                "@@ -96,2 +120,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "@@ -100,2 +125,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tPropertyCacheKey cacheKey = new PropertyCacheKey(type, name, target instanceof Class);",
                "@@ -104,2 +130,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tMethod method = findGetterForProperty(name, type, target);",
                "@@ -123,7 +150,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "-\t\treturn false;",
                "-\t}",
                "-\tpublic Member getLastReadInvokerPair() {",
                "-\t\treturn this.lastReadInvokerPair.member;",
                "+\t\treturn false;",
                " \t}",
                "@@ -146,3 +170,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tInvokerPair invoker = this.readerCache.get(cacheKey);",
                "-\t\tlastReadInvokerPair = invoker;",
                "+\t\tthis.lastReadInvokerPair = invoker;",
                "@@ -153,3 +177,2 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\tif (method != null) {",
                "-\t\t\t\t\t// TODO remove the duplication here between canRead and read",
                " \t\t\t\t\t// Treat it like a property...",
                "@@ -159,3 +182,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\t\tinvoker = new InvokerPair(method, typeDescriptor);",
                "-\t\t\t\t\tlastReadInvokerPair = invoker;",
                "+\t\t\t\t\tthis.lastReadInvokerPair = invoker;",
                " \t\t\t\t\tthis.readerCache.put(cacheKey, invoker);",
                "@@ -181,3 +204,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\t\tinvoker = new InvokerPair(field, new TypeDescriptor(field));",
                "-\t\t\t\t\tlastReadInvokerPair = invoker;",
                "+\t\t\t\t\tthis.lastReadInvokerPair = invoker;",
                " \t\t\t\t\tthis.readerCache.put(cacheKey, invoker);",
                "@@ -202,5 +225,6 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \tpublic boolean canWrite(EvaluationContext context, Object target, String name) throws AccessException {",
                "-\t\tif (target == null) {",
                "+\t\tif (!this.allowWrite || target == null) {",
                " \t\t\treturn false;",
                " \t\t}",
                "+",
                " \t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "@@ -210,2 +234,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tMethod method = findSetterForProperty(name, type, target);",
                "@@ -227,2 +252,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\treturn false;",
                "@@ -232,2 +258,7 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \tpublic void write(EvaluationContext context, Object target, String name, Object newValue) throws AccessException {",
                "+\t\tif (!this.allowWrite) {",
                "+\t\t\tthrow new AccessException(\"PropertyAccessor for property '\" + name +",
                "+\t\t\t\t\t\"' on target [\" + target + \"] does not allow write operations\");",
                "+\t\t}",
                "+",
                " \t\tif (target == null) {",
                "@@ -296,2 +327,12 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t/**",
                "+\t * @deprecated as of 4.3.15 since it is not used within the framework anymore",
                "+\t */",
                "+\t@Deprecated",
                "+\tpublic Member getLastReadInvokerPair() {",
                "+\t\tInvokerPair lastReadInvoker = this.lastReadInvokerPair;",
                "+\t\treturn (lastReadInvoker != null ? lastReadInvoker.member : null);",
                "+\t}",
                "+",
                "+",
                " \tprivate TypeDescriptor getTypeDescriptor(EvaluationContext context, Object target, String name) {",
                "@@ -308,3 +349,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tif (typeDescriptor == null) {",
                "-\t\t\t// attempt to populate the cache entry",
                "+\t\t\t// Attempt to populate the cache entry",
                " \t\t\ttry {",
                "@@ -318,3 +359,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tcatch (AccessException ex) {",
                "-\t\t\t\t// continue with null type descriptor",
                "+\t\t\t\t// Continue with null type descriptor",
                " \t\t\t}",
                "@@ -340,10 +381,2 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "-\tprivate Field findField(String name, Class<?> clazz, Object target) {",
                "-\t\tField field = findField(name, clazz, target instanceof Class);",
                "-\t\tif (field == null && target instanceof Class) {",
                "-\t\t\tfield = findField(name, target.getClass(), false);",
                "-\t\t}",
                "-\t\treturn field;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -375,3 +408,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tfor (Method method : methods) {",
                "-\t\t\t\tif (method.getName().equals(prefix + methodSuffix) &&",
                "+\t\t\t\tif (isCandidateForProperty(method, clazz) && method.getName().equals(prefix + methodSuffix) &&",
                " \t\t\t\t\t\tmethod.getParameterTypes().length == numberOfParams &&",
                "@@ -384,3 +417,15 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\treturn null;",
                "+\t}",
                "+\t/**",
                "+\t * Determine whether the given {@code Method} is a candidate for property access",
                "+\t * on an instance of the given target class.",
                "+\t * <p>The default implementation considers any method as a candidate, even for",
                "+\t * non-user-declared properties on the {@link Object} base class.",
                "+\t * @param method the Method to evaluate",
                "+\t * @param targetClass the concrete target class that is being introspected",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected boolean isCandidateForProperty(Method method, Class<?> targetClass) {",
                "+\t\treturn true;",
                " \t}",
                "@@ -388,3 +433,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t/**",
                "-\t * Returns class methods ordered with non bridge methods appearing higher.",
                "+\t * Return class methods ordered with non bridge methods appearing higher.",
                " \t */",
                "@@ -410,5 +455,5 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tif (suffix.length() > 0 && Character.isUpperCase(suffix.charAt(0))) {",
                "-\t\t\treturn new String[] { suffix };",
                "+\t\t\treturn new String[] {suffix};",
                " \t\t}",
                "-\t\treturn new String[] { suffix, StringUtils.capitalize(suffix) };",
                "+\t\treturn new String[] {suffix, StringUtils.capitalize(suffix)};",
                " \t}",
                "@@ -426,2 +471,10 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\tprivate Field findField(String name, Class<?> clazz, Object target) {",
                "+\t\tField field = findField(name, clazz, target instanceof Class);",
                "+\t\tif (field == null && target instanceof Class) {",
                "+\t\t\tfield = findField(name, target.getClass(), false);",
                "+\t\t}",
                "+\t\treturn field;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -454,10 +507,14 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t/**",
                "-\t * Attempt to create an optimized property accessor tailored for a property of a particular name on",
                "-\t * a particular class. The general ReflectivePropertyAccessor will always work but is not optimal",
                "-\t * due to the need to lookup which reflective member (method/field) to use each time read() is called.",
                "-\t * This method will just return the ReflectivePropertyAccessor instance if it is unable to build",
                "-\t * something more optimal.",
                "+\t * Attempt to create an optimized property accessor tailored for a property of a",
                "+\t * particular name on a particular class. The general ReflectivePropertyAccessor",
                "+\t * will always work but is not optimal due to the need to lookup which reflective",
                "+\t * member (method/field) to use each time read() is called. This method will just",
                "+\t * return the ReflectivePropertyAccessor instance if it is unable to build a more",
                "+\t * optimal accessor.",
                "+\t * <p>Note: An optimal accessor is currently only usable for read attempts.",
                "+\t * Do not call this method if you need a read-write accessor.",
                "+\t * @see OptimalPropertyAccessor",
                " \t */",
                "-\tpublic PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, Object target, String name) {",
                "-\t\t// Don't be clever for arrays or null target",
                "+\tpublic PropertyAccessor createOptimalAccessor(EvaluationContext context, Object target, String name) {",
                "+\t\t// Don't be clever for arrays or a null target...",
                " \t\tif (target == null) {",
                "@@ -465,4 +522,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "-\t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "-\t\tif (type.isArray()) {",
                "+\t\tClass<?> clazz = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "+\t\tif (clazz.isArray()) {",
                " \t\t\treturn this;",
                "@@ -470,3 +527,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "-\t\tPropertyCacheKey cacheKey = new PropertyCacheKey(type, name, target instanceof Class);",
                "+\t\tPropertyCacheKey cacheKey = new PropertyCacheKey(clazz, name, target instanceof Class);",
                " \t\tInvokerPair invocationTarget = this.readerCache.get(cacheKey);",
                "@@ -476,3 +533,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tif (method == null) {",
                "-\t\t\t\tmethod = findGetterForProperty(name, type, target);",
                "+\t\t\t\tmethod = findGetterForProperty(name, clazz, target);",
                " \t\t\t\tif (method != null) {",
                "@@ -491,3 +548,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tif (field == null) {",
                "-\t\t\t\tfield = findField(name, type, target instanceof Class);",
                "+\t\t\t\tfield = findField(name, clazz, target instanceof Class);",
                " \t\t\t\tif (field != null) {",
                "@@ -606,3 +663,2 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t}",
                "-",
                " \t\t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 06f14cc8f0..f298b081b9 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -18,3 +18,3 @@ package org.springframework.expression.spel.support;",
                "-import java.util.ArrayList;",
                "+import java.util.Arrays;",
                " import java.util.Collections;",
                "@@ -24,2 +24,4 @@ import java.util.Map;",
                "+import org.springframework.core.convert.ConversionService;",
                "+import org.springframework.core.convert.TypeDescriptor;",
                " import org.springframework.expression.BeanResolver;",
                "@@ -40,20 +42,47 @@ import org.springframework.expression.spel.SpelMessage;",
                "  * A basic implementation of {@link EvaluationContext} that focuses on a subset",
                "- * of essential SpEL features and configuration options, and relies on default",
                "- * strategies otherwise.",
                "+ * of essential SpEL features and customization options, targeting simple",
                "+ * condition evaluation and in particular data binding scenarios.",
                "  *",
                "- * <p>In many cases, the full extent of the SpEL is not",
                "- * required and should be meaningfully restricted. Examples include but are not",
                "- * limited to data binding expressions, property-based filters, and others. To",
                "- * that effect, {@code SimpleEvaluationContext} supports only a subset of the",
                "- * SpEL language syntax that excludes references to Java types, constructors,",
                "+ * <p>In many cases, the full extent of the SpEL language is not required and",
                "+ * should be meaningfully restricted. Examples include but are not limited to",
                "+ * data binding expressions, property-based filters, and others. To that effect,",
                "+ * {@code SimpleEvaluationContext} is tailored to support only a subset of the",
                "+ * SpEL language syntax, e.g. excluding references to Java types, constructors,",
                "  * and bean references.",
                "  *",
                "- * <p>Note that {@code SimpleEvaluationContext} cannot be configured with a",
                "- * default root object. Instead it is meant to be created once and used",
                "- * repeatedly through method variants on",
                "- * {@link org.springframework.expression.Expression Expression} that accept",
                "- * both an {@code EvaluationContext} and a root object.",
                "+ * <p>When creating a {@code SimpleEvaluationContext} you need to choose the",
                "+ * level of support that you need for property access in SpEL expressions:",
                "+ * <ul>",
                "+ * <li>A custom {@code PropertyAccessor} (typically not reflection-based),",
                "+ * potentially combined with a {@link DataBindingPropertyAccessor}</li>",
                "+ * <li>Data binding properties for read-only access</li>",
                "+ * <li>Data binding properties for read and write</li>",
                "+ * </ul>",
                "+ *",
                "+ * <p>Conveniently, {@link SimpleEvaluationContext#forReadOnlyDataBinding()}",
                "+ * enables read access to properties via {@link DataBindingPropertyAccessor};",
                "+ * same for {@link SimpleEvaluationContext#forReadWriteDataBinding()} when",
                "+ * write access is needed as well. Alternatively, configure custom accessors",
                "+ * via {@link SimpleEvaluationContext#forPropertyAccessors}, and potentially",
                "+ * activate method resolution and/or a type converter through the builder.",
                "+ *",
                "+ * <p>Note that {@code SimpleEvaluationContext} is typically not configured",
                "+ * with a default root object. Instead it is meant to be created once and",
                "+ * used repeatedly through {@code getValue} calls on a pre-compiled",
                "+ * {@link org.springframework.expression.Expression} with both an",
                "+ * {@code EvaluationContext} and a root object as arguments:",
                "+ * {@link org.springframework.expression.Expression#getValue(EvaluationContext, Object)}.",
                "+ *",
                "+ * <p>For more power and flexibility, in particular for internal configuration",
                "+ * scenarios, consider using {@link StandardEvaluationContext} instead.",
                "  *",
                "  * @author Rossen Stoyanchev",
                "+ * @author Juergen Hoeller",
                "  * @since 4.3.15",
                "+ * @see #forPropertyAccessors",
                "+ * @see #forReadOnlyDataBinding()",
                "+ * @see #forReadWriteDataBinding()",
                "+ * @see StandardEvaluationContext",
                "+ * @see StandardTypeConverter",
                "+ * @see DataBindingPropertyAccessor",
                "  */",
                "@@ -62,3 +91,2 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tprivate static final TypeLocator typeNotFoundTypeLocator = new TypeLocator() {",
                "-",
                " \t\t@Override",
                "@@ -70,9 +98,7 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tprivate final List<PropertyAccessor> propertyAccessors;",
                "+\tprivate final TypedValue rootObject;",
                "-\tprivate final List<ConstructorResolver> constructorResolvers =",
                "-\t\t\tCollections.<ConstructorResolver>singletonList(new ReflectiveConstructorResolver());",
                "+\tprivate final List<PropertyAccessor> propertyAccessors;",
                "-\tprivate final List<MethodResolver> methodResolvers =",
                "-\t\t\tCollections.<MethodResolver>singletonList(new ReflectiveMethodResolver());",
                "+\tprivate final List<MethodResolver> methodResolvers;",
                "@@ -87,18 +113,9 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tpublic SimpleEvaluationContext() {",
                "-\t\tthis(null, null);",
                "-\t}",
                "-",
                "-\tpublic SimpleEvaluationContext(List<PropertyAccessor> accessors, TypeConverter converter) {",
                "-\t\tthis.propertyAccessors = initPropertyAccessors(accessors);",
                "-\t\tthis.typeConverter = converter != null ? converter : new StandardTypeConverter();",
                "-\t}",
                "-",
                "+\tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, List<MethodResolver> resolvers,",
                "+\t\t\tTypeConverter converter, TypedValue rootObject) {",
                "-\tprivate static List<PropertyAccessor> initPropertyAccessors(List<PropertyAccessor> accessors) {",
                "-\t\tif (accessors == null) {",
                "-\t\t\taccessors = new ArrayList<PropertyAccessor>(5);",
                "-\t\t\taccessors.add(new ReflectivePropertyAccessor());",
                "-\t\t}",
                "-\t\treturn accessors;",
                "+\t\tthis.propertyAccessors = accessors;",
                "+\t\tthis.methodResolvers = resolvers;",
                "+\t\tthis.typeConverter = (converter != null ? converter : new StandardTypeConverter());",
                "+\t\tthis.rootObject = (rootObject != null ? rootObject : TypedValue.NULL);",
                " \t}",
                "@@ -107,7 +124,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * {@code SimpleEvaluationContext} cannot be configured with a root object.",
                "-\t * It is meant for repeated use with",
                "-\t * {@link org.springframework.expression.Expression Expression} method",
                "-\t * variants that accept both an {@code EvaluationContext} and a root object.",
                "-\t * @return Always returns {@link TypedValue#NULL}.",
                "+\t * Return the specified root object, if any.",
                " \t */",
                "@@ -115,5 +128,9 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic TypedValue getRootObject() {",
                "-\t\treturn TypedValue.NULL;",
                "+\t\treturn this.rootObject;",
                " \t}",
                "+\t/**",
                "+\t * Return the specified {@link PropertyAccessor} delegates, if any.",
                "+\t * @see #forPropertyAccessors",
                "+\t */",
                " \t@Override",
                "@@ -124,3 +141,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Return a single {@link ReflectiveConstructorResolver}.",
                "+\t * Return an empty list, always, since this context does not support the",
                "+\t * use of type references.",
                " \t */",
                "@@ -128,3 +146,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic List<ConstructorResolver> getConstructorResolvers() {",
                "-\t\treturn this.constructorResolvers;",
                "+\t\treturn Collections.emptyList();",
                " \t}",
                "@@ -132,3 +150,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Return a single {@link ReflectiveMethodResolver}.",
                "+\t * Return the specified {@link MethodResolver} delegates, if any.",
                "+\t * @see Builder#withMethodResolvers",
                " \t */",
                "@@ -140,4 +159,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * {@code SimpleEvaluationContext} does not support use of bean references.",
                "-\t * @return Always returns {@code null}",
                "+\t * {@code SimpleEvaluationContext} does not support the use of bean references.",
                "+\t * @return always {@code null}",
                " \t */",
                "@@ -161,2 +180,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t * <p>By default this is {@link StandardTypeConverter}.",
                "+\t * @see Builder#withTypeConverter",
                "+\t * @see Builder#withConversionService",
                " \t */",
                "@@ -175,3 +196,2 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-",
                " \t/**",
                "@@ -194,2 +214,143 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+",
                "+\t/**",
                "+\t * Create a {@code SimpleEvaluationContext} for the specified {@link PropertyAccessor}",
                "+\t * delegates: typically a custom {@code PropertyAccessor} specific to a use case",
                "+\t * (e.g. attribute resolution in a custom data structure), potentially combined with",
                "+\t * a {@link DataBindingPropertyAccessor} if property dereferences are needed as well.",
                "+\t * @param accessors the accessor delegates to use",
                "+\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "+\t * @see DataBindingPropertyAccessor#forReadWriteAccess()",
                "+\t */",
                "+\tpublic static Builder forPropertyAccessors(PropertyAccessor... accessors) {",
                "+\t\tfor (PropertyAccessor accessor : accessors) {",
                "+\t\t\tif (accessor.getClass() == ReflectivePropertyAccessor.class) {",
                "+\t\t\t\tthrow new IllegalArgumentException(\"SimpleEvaluationContext is not designed for use with a plain \" +",
                "+\t\t\t\t\t\t\"ReflectivePropertyAccessor. Consider using DataBindingPropertyAccessor or a custom subclass.\");",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn new Builder(accessors);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a {@code SimpleEvaluationContext} for read-only access to",
                "+\t * public properties via {@link DataBindingPropertyAccessor}.",
                "+\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "+\t * @see #forPropertyAccessors",
                "+\t */",
                "+\tpublic static Builder forReadOnlyDataBinding() {",
                "+\t\treturn new Builder(DataBindingPropertyAccessor.forReadOnlyAccess());",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a {@code SimpleEvaluationContext} for read-write access to",
                "+\t * public properties via {@link DataBindingPropertyAccessor}.",
                "+\t * @see DataBindingPropertyAccessor#forReadWriteAccess()",
                "+\t * @see #forPropertyAccessors",
                "+\t */",
                "+\tpublic static Builder forReadWriteDataBinding() {",
                "+\t\treturn new Builder(DataBindingPropertyAccessor.forReadWriteAccess());",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Builder for {@code SimpleEvaluationContext}.",
                "+\t */",
                "+\tpublic static class Builder {",
                "+",
                "+\t\tprivate final List<PropertyAccessor> accessors;",
                "+",
                "+\t\tprivate List<MethodResolver> resolvers = Collections.emptyList();",
                "+",
                "+\t\tprivate TypeConverter typeConverter;",
                "+",
                "+\t\tprivate TypedValue rootObject;",
                "+",
                "+\t\tpublic Builder(PropertyAccessor... accessors) {",
                "+\t\t\tthis.accessors = Arrays.asList(accessors);",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register the specified {@link MethodResolver} delegates for",
                "+\t\t * a combination of property access and method resolution.",
                "+\t\t * @param resolvers the resolver delegates to use",
                "+\t\t * @see #withInstanceMethods()",
                "+\t\t * @see SimpleEvaluationContext#forPropertyAccessors",
                "+\t\t */",
                "+\t\tpublic Builder withMethodResolvers(MethodResolver... resolvers) {",
                "+\t\t\tfor (MethodResolver resolver : resolvers) {",
                "+\t\t\t\tif (resolver.getClass() == ReflectiveMethodResolver.class) {",
                "+\t\t\t\t\tthrow new IllegalArgumentException(\"SimpleEvaluationContext is not designed for use with a plain \" +",
                "+\t\t\t\t\t\t\t\"ReflectiveMethodResolver. Consider using DataBindingMethodResolver or a custom subclass.\");",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tthis.resolvers = Arrays.asList(resolvers);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register a {@link DataBindingMethodResolver} for instance method invocation purposes",
                "+\t\t * (i.e. not supporting static methods) in addition to the specified property accessors,",
                "+\t\t * typically in combination with a {@link DataBindingPropertyAccessor}.",
                "+\t\t * @see #withMethodResolvers",
                "+\t\t * @see SimpleEvaluationContext#forReadOnlyDataBinding()",
                "+\t\t * @see SimpleEvaluationContext#forReadWriteDataBinding()",
                "+\t\t */",
                "+\t\tpublic Builder withInstanceMethods() {",
                "+\t\t\tthis.resolvers = Collections.singletonList(",
                "+\t\t\t\t\t(MethodResolver) DataBindingMethodResolver.forInstanceMethodInvocation());",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+",
                "+\t\t/**",
                "+\t\t * Register a custom {@link ConversionService}.",
                "+\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                "+\t\t * @see #withTypeConverter",
                "+\t\t * @see StandardTypeConverter#StandardTypeConverter(ConversionService)",
                "+\t\t */",
                "+\t\tpublic Builder withConversionService(ConversionService conversionService) {",
                "+\t\t\tthis.typeConverter = new StandardTypeConverter(conversionService);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+\t\t/**",
                "+\t\t * Register a custom {@link TypeConverter}.",
                "+\t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                "+\t\t * @see #withConversionService",
                "+\t\t * @see StandardTypeConverter#StandardTypeConverter()",
                "+\t\t */",
                "+\t\tpublic Builder withTypeConverter(TypeConverter converter) {",
                "+\t\t\tthis.typeConverter = converter;",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Specify a default root object to resolve against.",
                "+\t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext, Object)",
                "+\t\t */",
                "+\t\tpublic Builder withRootObject(Object rootObject) {",
                "+\t\t\tthis.rootObject = new TypedValue(rootObject);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Specify a typed root object to resolve against.",
                "+\t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext, Object)",
                "+\t\t */",
                "+\t\tpublic Builder withTypedRootObject(Object rootObject, TypeDescriptor typeDescriptor) {",
                "+\t\t\tthis.rootObject = new TypedValue(rootObject, typeDescriptor);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\tpublic SimpleEvaluationContext build() {",
                "+\t\t\treturn new SimpleEvaluationContext(this.accessors, this.resolvers, this.typeConverter, this.rootObject);",
                "+\t\t}",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "index 6e95e7941d..78a7e91f95 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -39,5 +39,9 @@ import org.springframework.util.Assert;",
                " /**",
                "- * Provides a default EvaluationContext implementation.",
                "+ * A powerful and highly configurable {@link EvaluationContext} implementation.",
                "+ * This context uses standard implementations of all applicable strategies,",
                "+ * based on reflection to resolve properties, methods and fields.",
                "  *",
                "- * <p>To resolve properties/methods/fields this context uses a reflection mechanism.",
                "+ * <p>For a simpler builder-style context variant for data-binding purposes,",
                "+ * consider using {@link SimpleEvaluationContext} instead which allows for",
                "+ * opting into several SpEL features as needed by specific evaluation cases.",
                "  *",
                "@@ -73,2 +77,5 @@ public class StandardEvaluationContext implements EvaluationContext {",
                "+\t/**",
                "+\t * Create a {@code StandardEvaluationContext} with a null root object.",
                "+\t */",
                " \tpublic StandardEvaluationContext() {",
                "@@ -77,2 +84,7 @@ public class StandardEvaluationContext implements EvaluationContext {",
                "+\t/**",
                "+\t * Create a {@code StandardEvaluationContext} with the given root object.",
                "+\t * @param rootObject the root object to use",
                "+\t * @see #setRootObject",
                "+\t */",
                " \tpublic StandardEvaluationContext(Object rootObject) {"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingPropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "66a3a82fb31b610e63bb27e7ddef02c2b63d8c50",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522534875,
            "hunks": 17,
            "message": "Avoid reference to HandlerMethod class in ServerErrorException This breaks the package dependency cycle between web.server/web.method and makes ServerErrorException more generally applicable. Includes deprecation of the plain reason constructor variant, in favor of providing a Method or MethodParameter context (which MatrixVariableMethodArgumentResolver does now).",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java b/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "index 523b44d751..5f18a9f021 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "@@ -18,2 +18,4 @@ package org.springframework.web.server;",
                "+import java.lang.reflect.Method;",
                "+",
                " import org.springframework.core.MethodParameter;",
                "@@ -21,3 +23,2 @@ import org.springframework.http.HttpStatus;",
                " import org.springframework.lang.Nullable;",
                "-import org.springframework.web.method.HandlerMethod;",
                "@@ -35,3 +36,3 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t@Nullable",
                "-\tprivate final HandlerMethod handlerMethod;",
                "+\tprivate final Method handlerMethod;",
                "@@ -42,6 +43,7 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Constructor with an explanation only.",
                "+\t * Constructor for a 500 error with a reason and an optional cause.",
                "+\t * @since 5.0.5",
                " \t */",
                "-\tpublic ServerErrorException(String reason) {",
                "-\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, null);",
                "+\tpublic ServerErrorException(String reason, @Nullable Throwable cause) {",
                "+\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                " \t\tthis.handlerMethod = null;",
                "@@ -51,8 +53,8 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Constructor with a reason and root cause.",
                "+\t * Constructor for a 500 error with a handler {@link Method} and an optional cause.",
                " \t * @since 5.0.5",
                " \t */",
                "-\tpublic ServerErrorException(String reason, Throwable cause) {",
                "+\tpublic ServerErrorException(String reason, Method handlerMethod, @Nullable Throwable cause) {",
                " \t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "-\t\tthis.handlerMethod = null;",
                "+\t\tthis.handlerMethod = handlerMethod;",
                " \t\tthis.parameter = null;",
                "@@ -61,3 +63,3 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Constructor for a 500 error with a {@link MethodParameter}.",
                "+\t * Constructor for a 500 error with a {@link MethodParameter} and an optional cause.",
                " \t */",
                "@@ -65,3 +67,3 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "-\t\tthis.handlerMethod = null;",
                "+\t\tthis.handlerMethod = parameter.getMethod();",
                " \t\tthis.parameter = parameter;",
                "@@ -69,11 +71,2 @@ public class ServerErrorException extends ResponseStatusException {",
                "-\t/**",
                "-\t * Constructor for a 500 error with a root cause.",
                "-\t */",
                "-\tpublic ServerErrorException(String reason, HandlerMethod handlerMethod, @Nullable Throwable cause) {",
                "-\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "-\t\tthis.handlerMethod = handlerMethod;",
                "-\t\tthis.parameter = null;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -87,5 +80,16 @@ public class ServerErrorException extends ResponseStatusException {",
                "+\t/**",
                "+\t * Constructor for a 500 error with a reason only.",
                "+\t * @deprecated in favor of {@link #ServerErrorException(String, Throwable)}",
                "+\t */",
                "+\t@Deprecated",
                "+\tpublic ServerErrorException(String reason) {",
                "+\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, null);",
                "+\t\tthis.handlerMethod = null;",
                "+\t\tthis.parameter = null;",
                "+\t}",
                "+",
                " \t/**",
                "-\t * Return the controller method associated with the error, if any.",
                "+\t * Return the handler method associated with the error, if any.",
                " \t * @since 5.0.5",
                "@@ -93,3 +97,3 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t@Nullable",
                "-\tpublic HandlerMethod getHandlerMethod() {",
                "+\tpublic Method getHandlerMethod() {",
                " \t\treturn this.handlerMethod;",
                "@@ -98,3 +102,3 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Return the controller method argument associated with this error, if any.",
                "+\t * Return the specific method parameter associated with the error, if any.",
                " \t */",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "index c60f24b88b..afd59abc7d 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "@@ -111,3 +111,3 @@ public class SyncInvocableHandlerMethod extends HandlerMethod {",
                " \t\t\t\tthrow (ex instanceof ServerErrorException ? (ServerErrorException) ex :",
                "-\t\t\t\t\t\tnew ServerErrorException(\"Failed to invoke: \" + getShortLogMessage(), this, ex));",
                "+\t\t\t\t\t\tnew ServerErrorException(\"Failed to invoke: \" + getShortLogMessage(), getMethod(), ex));",
                " \t\t\t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMethodArgumentResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMethodArgumentResolver.java",
                "index a2824b4c85..0e999c84d3 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMethodArgumentResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMethodArgumentResolver.java",
                "@@ -100,3 +100,4 @@ public class MatrixVariableMethodArgumentResolver extends AbstractNamedValueSync",
                " \t\t\t\t\t\t\t\t\"Found more than one match for URI path parameter '\" + name +",
                "-\t\t\t\t\t\t\t\t\"' for parameter type [\" + paramType + \"]. Use 'pathVar' attribute to disambiguate.\");",
                "+\t\t\t\t\t\t\t\t\"' for parameter type [\" + paramType + \"]. Use 'pathVar' attribute to disambiguate.\",",
                "+\t\t\t\t\t\t\t\tparam, null);",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/MatrixVariableMethodArgumentResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "97735e4ffcc9039f67a4c6d97eb9cdc4260bd2d3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522534026,
            "hunks": 2,
            "message": "Proper references to JDK 9+ (including JDK 10) in build comments",
            "diff": [
                "diff --git a/spring-aspects/spring-aspects.gradle b/spring-aspects/spring-aspects.gradle",
                "index 2203096d78..269b0a8f20 100644",
                "--- a/spring-aspects/spring-aspects.gradle",
                "+++ b/spring-aspects/spring-aspects.gradle",
                "@@ -2,4 +2,3 @@ description = \"Spring Aspects\"",
                "-// redefine the compileJava and compileTestJava tasks in order to",
                "-// compile sources with ajc instead of javac",
                "+// Redefine the compileJava and compileTestJava tasks in order to compile sources with ajc instead of javac",
                "@@ -83,4 +82,4 @@ dependencies {",
                " \taspects(project(\":spring-orm\"))",
                "-\tajc(\"org.aspectj:aspectjtools:1.9.0.RC2\")  // for JDK 9 build compatibility",
                "-\trt(\"org.aspectj:aspectjrt:1.9.0.RC2\")  // for JDK 9 build compatibility",
                "+\tajc(\"org.aspectj:aspectjtools:1.9.0.RC2\")  // for JDK 9+ build compatibility",
                "+\trt(\"org.aspectj:aspectjrt:1.9.0.RC2\")  // for JDK 9+ build compatibility",
                " \tcompile(\"org.aspectj:aspectjweaver:${aspectjVersion}\")  // for Maven POM exposure"
            ],
            "changed_files": [
                "spring-aspects/spring-aspects.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8651b8d4c1b09d3bb75bb0cf56791970a72751d8",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521464221,
            "hunks": 1,
            "message": "Show use of RequestEntity rather than HttpEntity Issue: SPR-16608",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java",
                "index 993a1b55f1..a9bc98c296 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/client/RestTemplate.java",
                "@@ -91,5 +91,3 @@ import org.springframework.web.util.UriTemplateHandler;",
                "  *",
                "- * <p>For each HTTP method there are three variants: two accept a URI template string",
                "- * and URI variables (array or map) while a third accepts a {@link URI}.",
                "- * Note that for URI templates it is assumed encoding is necessary, e.g.",
                "+ * <p><strong>Note:</strong> For URI templates it is assumed encoding is necessary, e.g.",
                "  * {@code restTemplate.getForObject(\"http://example.com/hotel list\")} becomes"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/client/RestTemplate.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "99cc7d56ffcfad668664db50ee3bde3411c74c92",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1430010039,
            "hunks": 25,
            "message": "Document return values in AnnotatedElementUtils This commit documents return values throughout AnnotatedElementUtils and improves the documentation for the internal Processor API. Issue: SPR-11514",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index f666d50f64..7fc37015d6 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -121,3 +121,4 @@ public class AnnotatedElementUtils {",
                " \t * type to find; never {@code null} or empty",
                "-\t * @return the merged {@code AnnotationAttributes}",
                "+\t * @return the merged {@code AnnotationAttributes}, or {@code null} if",
                "+\t * not found",
                " \t * @see #getAnnotationAttributes(AnnotatedElement, String, boolean, boolean)",
                "@@ -141,3 +142,4 @@ public class AnnotatedElementUtils {",
                " \t * as Annotation instances",
                "-\t * @return the merged {@code AnnotationAttributes}",
                "+\t * @return the merged {@code AnnotationAttributes}, or {@code null} if",
                "+\t * not found",
                " \t */",
                "@@ -161,3 +163,4 @@ public class AnnotatedElementUtils {",
                " \t * @param annotationType the annotation type to find; never {@code null}",
                "-\t * @return the merged {@code AnnotationAttributes}",
                "+\t * @return the merged {@code AnnotationAttributes}, or {@code null} if",
                "+\t * not found",
                " \t */",
                "@@ -181,3 +184,4 @@ public class AnnotatedElementUtils {",
                " \t * type to find; never {@code null} or empty",
                "-\t * @return the merged {@code AnnotationAttributes}",
                "+\t * @return the merged {@code AnnotationAttributes}, or {@code null} if",
                "+\t * not found",
                " \t */",
                "@@ -208,3 +212,4 @@ public class AnnotatedElementUtils {",
                " \t * as Annotation instances",
                "-\t * @return the merged {@code AnnotationAttributes}",
                "+\t * @return the merged {@code AnnotationAttributes}, or {@code null} if",
                "+\t * not found",
                " \t */",
                "@@ -223,2 +228,4 @@ public class AnnotatedElementUtils {",
                " \t * type to find; never {@code null} or empty",
                "+\t * @return a {@link MultiValueMap} containing the annotation attributes",
                "+\t * from all annotations found, or {@code null} if not found",
                " \t */",
                "@@ -232,2 +239,9 @@ public class AnnotatedElementUtils {",
                " \t * type to find; never {@code null} or empty",
                "+\t * @param classValuesAsString whether to convert Class references into",
                "+\t * Strings or to preserve them as Class references",
                "+\t * @param nestedAnnotationsAsMap whether to convert nested Annotation",
                "+\t * instances into {@link AnnotationAttributes} maps or to preserve them",
                "+\t * as Annotation instances",
                "+\t * @return a {@link MultiValueMap} containing the annotation attributes",
                "+\t * from all annotations found, or {@code null} if not found",
                " \t */",
                "@@ -237,2 +251,3 @@ public class AnnotatedElementUtils {",
                " \t\tfinal MultiValueMap<String, Object> attributes = new LinkedMultiValueMap<String, Object>();",
                "+",
                " \t\tprocessWithGetSemantics(element, annotationType, new Processor<Void>() {",
                "@@ -260,2 +275,3 @@ public class AnnotatedElementUtils {",
                " \t\t});",
                "+",
                " \t\treturn (attributes.isEmpty() ? null : attributes);",
                "@@ -271,3 +287,3 @@ public class AnnotatedElementUtils {",
                " \t * @param processor the processor to delegate to",
                "-\t * @return the result of the processor",
                "+\t * @return the result of the processor, potentially {@code null}",
                " \t */",
                "@@ -278,3 +294,3 @@ public class AnnotatedElementUtils {",
                " \t\tcatch (Throwable ex) {",
                "-\t\t\tthrow new IllegalStateException(\"Failed to introspect annotations: \" + element, ex);",
                "+\t\t\tthrow new IllegalStateException(\"Failed to introspect annotations on \" + element, ex);",
                " \t\t}",
                "@@ -287,6 +303,5 @@ public class AnnotatedElementUtils {",
                " \t *",
                "-\t * <p>The {@code metaDepth} parameter represents the depth of the annotation",
                "-\t * relative to the initial element. For example, an annotation that is",
                "-\t * <em>present</em> on the element will have a depth of 0; a meta-annotation",
                "-\t * will have a depth of 1; and a meta-meta-annotation will have a depth of 2.",
                "+\t * <p>The {@code metaDepth} parameter is explained in the",
                "+\t * {@link Processor#process process()} method of the {@link Processor}",
                "+\t * API.",
                " \t *",
                "@@ -297,4 +312,4 @@ public class AnnotatedElementUtils {",
                " \t * @param visited the set of annotated elements that have already been visited",
                "-\t * @param metaDepth the depth of the annotation relative to the initial element",
                "-\t * @return the result of the processor",
                "+\t * @param metaDepth the meta-depth of the annotation",
                "+\t * @return the result of the processor, potentially {@code null}",
                " \t */",
                "@@ -363,3 +378,3 @@ public class AnnotatedElementUtils {",
                " \t * @param processor the processor to delegate to",
                "-\t * @return the result of the processor",
                "+\t * @return the result of the processor, potentially {@code null}",
                " \t */",
                "@@ -374,3 +389,3 @@ public class AnnotatedElementUtils {",
                " \t\tcatch (Throwable ex) {",
                "-\t\t\tthrow new IllegalStateException(\"Failed to introspect annotations: \" + element, ex);",
                "+\t\t\tthrow new IllegalStateException(\"Failed to introspect annotations on \" + element, ex);",
                " \t\t}",
                "@@ -379,10 +394,9 @@ public class AnnotatedElementUtils {",
                " \t/**",
                "-\t * Perform the search algorithm for the {@link #process} method, avoiding",
                "-\t * endless recursion by tracking which annotated elements have already been",
                "-\t * <em>visited</em>.",
                "+\t * Perform the search algorithm for the {@link #processWithFindSemantics}",
                "+\t * method, avoiding endless recursion by tracking which annotated elements",
                "+\t * have already been <em>visited</em>.",
                " \t *",
                "-\t * <p>The {@code metaDepth} parameter represents the depth of the annotation",
                "-\t * relative to the initial element. For example, an annotation that is",
                "-\t * <em>present</em> on the element will have a depth of 0; a meta-annotation",
                "-\t * will have a depth of 1; and a meta-meta-annotation will have a depth of 2.",
                "+\t * <p>The {@code metaDepth} parameter is explained in the",
                "+\t * {@link Processor#process process()} method of the {@link Processor}",
                "+\t * API.",
                " \t *",
                "@@ -401,4 +415,4 @@ public class AnnotatedElementUtils {",
                " \t * @param visited the set of annotated elements that have already been visited",
                "-\t * @param metaDepth the depth of the annotation relative to the initial element",
                "-\t * @return the result of the processor",
                "+\t * @param metaDepth the meta-depth of the annotation",
                "+\t * @return the result of the processor, potentially {@code null}",
                " \t */",
                "@@ -571,8 +585,10 @@ public class AnnotatedElementUtils {",
                " \t/**",
                "-\t * Callback interface that is used to process a target annotation that",
                "-\t * was found as the result of a search and to post-process the result as",
                "-\t * the search algorithm goes back down the annotation hierarchy from",
                "-\t * the target annotation to the initial {@link AnnotatedElement}.",
                "+\t * Callback interface that is used to process a target annotation (or",
                "+\t * multiple instances of the target annotation) that has been found by",
                "+\t * the currently executing search and to post-process the result as the",
                "+\t * search algorithm goes back down the annotation hierarchy from the",
                "+\t * target annotation to the initial {@link AnnotatedElement} that was",
                "+\t * supplied to the search algorithm.",
                " \t *",
                "-\t * @param <T> the result type",
                "+\t * @param <T> the type of result returned by the processor",
                " \t */",
                "@@ -581,3 +597,3 @@ public class AnnotatedElementUtils {",
                " \t\t/**",
                "-\t\t * Process the actual target annotation once it has been found by",
                "+\t\t * Process an actual target annotation once it has been found by",
                " \t\t * the search algorithm.",
                "@@ -585,10 +601,12 @@ public class AnnotatedElementUtils {",
                " \t\t * <p>The {@code metaDepth} parameter represents the depth of the",
                "-\t\t * annotation relative to the initial element. For example, an annotation",
                "-\t\t * that is <em>present</em> on the element will have a depth of 0; a",
                "-\t\t * meta-annotation will have a depth of 1; and a meta-meta-annotation",
                "-\t\t * will have a depth of 2.",
                "+\t\t * annotation relative to the first annotated element in the",
                "+\t\t * annotation hierarchy. For example, an annotation that is",
                "+\t\t * <em>present</em> on a non-annotation element will have a depth",
                "+\t\t * of 0; a meta-annotation will have a depth of 1; and a",
                "+\t\t * meta-meta-annotation will have a depth of 2; etc.",
                " \t\t *",
                " \t\t * @param annotation the annotation to process",
                "-\t\t * @param metaDepth the depth of the annotation relative to the initial element",
                "+\t\t * @param metaDepth the meta-depth of the annotation",
                " \t\t * @return the result of the processing, or {@code null} to continue",
                "+\t\t * searching for additional target annotations",
                " \t\t */",
                "@@ -601,3 +619,3 @@ public class AnnotatedElementUtils {",
                " \t\t * that is present in the annotation hierarchy, above the initial",
                "-\t\t * {@link AnnotatedElement} but below the target annotation found by",
                "+\t\t * {@link AnnotatedElement} but below a target annotation found by",
                " \t\t * the search algorithm."
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "aa49949d7ad09944db4284b957d754e8189ecc74",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429200933,
            "hunks": 2,
            "message": "Bean type mismatch check accepts assignable values according to ClassUtils Issue: SPR-12905",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "index e22edafb9b..fa9eb47055 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "@@ -48,2 +48,3 @@ import org.springframework.core.annotation.AnnotationUtils;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.ClassUtils;",
                " import org.springframework.util.ObjectUtils;",
                "@@ -324,3 +325,3 @@ class ConfigurationClassEnhancer {",
                " \t\t\t\t\t\t\tbeanFactory.getBean(beanName, beanMethodArgs) : beanFactory.getBean(beanName));",
                "-\t\t\t\t\tif (beanInstance != null && !beanMethod.getReturnType().isInstance(beanInstance)) {",
                "+\t\t\t\t\tif (beanInstance != null && !ClassUtils.isAssignableValue(beanMethod.getReturnType(), beanInstance)) {",
                " \t\t\t\t\t\tString msg = String.format(\"@Bean method %s.%s called as a bean reference \" +"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "86fd0afbf25e225b64d12b1e98cd9a6e22dc6463",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429888980,
            "hunks": 4,
            "message": "Switch to AnnotatedElementUtils.findXxx for @MVC Issue: SPR-12296",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "index e88ece401d..97fe1b0213 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "@@ -381,3 +381,3 @@ public class MvcUriComponentsBuilder {",
                " \t\tString annotType = RequestMapping.class.getName();",
                "-\t\tAnnotationAttributes attrs = AnnotatedElementUtils.getAnnotationAttributes(controllerType, annotType);",
                "+\t\tAnnotationAttributes attrs = AnnotatedElementUtils.findAnnotationAttributes(controllerType, annotType);",
                " \t\tif (attrs == null) {",
                "@@ -398,3 +398,3 @@ public class MvcUriComponentsBuilder {",
                " \t\tString annotType = RequestMapping.class.getName();",
                "-\t\tAnnotationAttributes attrs = AnnotatedElementUtils.getAnnotationAttributes(method, annotType);",
                "+\t\tAnnotationAttributes attrs = AnnotatedElementUtils.findAnnotationAttributes(method, annotType);",
                " \t\tif (attrs == null) {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java",
                "index 3b318acdb7..3e66d60055 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java",
                "@@ -248,3 +248,3 @@ public class RequestMappingHandlerMapping extends RequestMappingInfoHandlerMappi",
                " \t\t\tannotation = AnnotationUtils.findAnnotation(type, RequestMapping.class);",
                "-\t\t\tattributes = AnnotatedElementUtils.getAnnotationAttributes(type, annotationType);",
                "+\t\t\tattributes = AnnotatedElementUtils.findAnnotationAttributes(type, annotationType);",
                " \t\t\tcustomCondition = getCustomTypeCondition(type);",
                "@@ -254,3 +254,3 @@ public class RequestMappingHandlerMapping extends RequestMappingInfoHandlerMappi",
                " \t\t\tannotation = AnnotationUtils.findAnnotation(method, RequestMapping.class);",
                "-\t\t\tattributes = AnnotatedElementUtils.getAnnotationAttributes(method, annotationType);",
                "+\t\t\tattributes = AnnotatedElementUtils.findAnnotationAttributes(method, annotationType);",
                " \t\t\tcustomCondition = getCustomMethodCondition(method);"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "729d0d27968176e2d0b4ff00dfec334219210f61",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521858066,
            "hunks": 9,
            "message": "Property handling of Void.class in WebClient retrieve() Issue: SPR-16636",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java",
                "index d59600eb84..fe61b4eaee 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java",
                "@@ -44,3 +44,2 @@ import org.springframework.http.MediaType;",
                " import org.springframework.http.client.reactive.ClientHttpRequest;",
                "-import org.springframework.http.client.reactive.ClientHttpResponse;",
                " import org.springframework.lang.Nullable;",
                "@@ -51,3 +50,2 @@ import org.springframework.util.MimeType;",
                " import org.springframework.util.MultiValueMap;",
                "-import org.springframework.web.reactive.function.BodyExtractor;",
                " import org.springframework.web.reactive.function.BodyExtractors;",
                "@@ -407,4 +405,5 @@ class DefaultWebClient implements WebClient {",
                " \t\tpublic <T> Mono<T> bodyToMono(Class<T> bodyType) {",
                "+\t\t\t// Use bodyToMono (vs BodyExtractors) to ensure proper handling of Void.class...",
                " \t\t\treturn this.responseMono.flatMap(",
                "-\t\t\t\t\tresponse -> bodyToPublisher(response, BodyExtractors.toMono(bodyType),",
                "+\t\t\t\t\tresponse -> bodyToPublisher(response, response.bodyToMono(bodyType),",
                " \t\t\t\t\t\t\tthis::monoThrowableToMono));",
                "@@ -416,3 +415,3 @@ class DefaultWebClient implements WebClient {",
                " \t\t\treturn this.responseMono.flatMap(",
                "-\t\t\t\t\tresponse -> bodyToPublisher(response, BodyExtractors.toMono(typeReference),",
                "+\t\t\t\t\tresponse -> bodyToPublisher(response, response.bodyToMono(typeReference),",
                " \t\t\t\t\t\t\tthis::monoThrowableToMono));",
                "@@ -427,3 +426,3 @@ class DefaultWebClient implements WebClient {",
                " \t\t\treturn this.responseMono.flatMapMany(",
                "-\t\t\t\t\tresponse -> bodyToPublisher(response, BodyExtractors.toFlux(elementType),",
                "+\t\t\t\t\tresponse -> bodyToPublisher(response, response.bodyToFlux(elementType),",
                " \t\t\t\t\t\t\tthis::monoThrowableToFlux));",
                "@@ -434,3 +433,3 @@ class DefaultWebClient implements WebClient {",
                " \t\t\treturn this.responseMono.flatMapMany(",
                "-\t\t\t\t\tresponse -> bodyToPublisher(response, BodyExtractors.toFlux(typeReference),",
                "+\t\t\t\t\tresponse -> bodyToPublisher(response, response.bodyToFlux(typeReference),",
                " \t\t\t\t\t\t\tthis::monoThrowableToFlux));",
                "@@ -443,4 +442,3 @@ class DefaultWebClient implements WebClient {",
                " \t\tprivate <T extends Publisher<?>> T bodyToPublisher(ClientResponse response,",
                "-\t\t\t\tBodyExtractor<T, ? super ClientHttpResponse> extractor,",
                "-\t\t\t\tFunction<Mono<? extends Throwable>, T> errorFunction) {",
                "+\t\t\t\tT bodyPublisher, Function<Mono<? extends Throwable>, T> errorFunction) {",
                "@@ -451,3 +449,3 @@ class DefaultWebClient implements WebClient {",
                " \t\t\t\t\t.map(errorFunction::apply)",
                "-\t\t\t\t\t.orElse(response.body(extractor));",
                "+\t\t\t\t\t.orElse(bodyPublisher);",
                " \t\t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "afe42cd2a24ebc93c67a02485baa3b2be38013d2",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429219193,
            "hunks": 8,
            "message": "Upgrade to JavaMail 1.5.3 (and Hibernate 4.3.9)",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 4e424f249a..aae84a11ad 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -38,3 +38,3 @@ configure(allprojects) { project ->",
                " \text.hibernate3Version    = \"3.6.10.Final\"",
                "-\text.hibernate4Version    = \"4.3.8.Final\"",
                "+\text.hibernate4Version    = \"4.3.9.Final\"",
                " \text.hibval4Version       = \"4.3.2.Final\"",
                "@@ -46,2 +46,3 @@ configure(allprojects) { project ->",
                " \text.jasperreportsVersion = \"6.0.3\"",
                "+\text.javamailVersion      = \"1.5.3\"",
                " \text.jettyVersion         = \"9.2.10.v20150310\"",
                "@@ -626,3 +627,3 @@ project(\"spring-context-support\") {",
                " \t\toptional(project(\":spring-tx\"))  // for Quartz support",
                "-\t\toptional(\"javax.mail:javax.mail-api:1.5.2\")",
                "+\t\toptional(\"javax.mail:javax.mail-api:${javamailVersion}\")",
                " \t\toptional(\"javax.cache:cache-api:1.0.0\")",
                "@@ -649,3 +650,3 @@ project(\"spring-context-support\") {",
                " \t\ttestCompile(\"org.slf4j:slf4j-api:${slf4jVersion}\")",
                "-\t\ttestRuntime(\"com.sun.mail:javax.mail:1.5.2\")",
                "+\t\ttestRuntime(\"com.sun.mail:javax.mail:${javamailVersion}\")",
                " \t\ttestCompile(\"org.ehcache:jcache:${ehcachejcacheVersion}\")",
                "@@ -705,3 +706,3 @@ project(\"spring-web\") {",
                " \t\toptional(\"com.google.protobuf:protobuf-java:${protobufVersion}\")",
                "-\t\toptional(\"javax.mail:javax.mail-api:1.5.2\")",
                "+\t\toptional(\"javax.mail:javax.mail-api:${javamailVersion}\")",
                " \t\ttestCompile(project(\":spring-context-support\"))  // for JafMediaTypeFactory",
                "@@ -713,3 +714,3 @@ project(\"spring-web\") {",
                " \t\ttestCompile(\"com.fasterxml.jackson.datatype:jackson-datatype-joda:${jackson2Version}\")",
                "-\t\ttestRuntime(\"com.sun.mail:javax.mail:1.5.2\")",
                "+\t\ttestRuntime(\"com.sun.mail:javax.mail:${javamailVersion}\")",
                " \t}",
                "@@ -981,3 +982,3 @@ project(\"spring-test\") {",
                " \t\ttestCompile(project(\":spring-oxm\"))",
                "-\t\ttestCompile(\"javax.mail:javax.mail-api:1.5.2\")",
                "+\t\ttestCompile(\"javax.mail:javax.mail-api:${javamailVersion}\")",
                " \t\ttestCompile(\"javax.ejb:ejb-api:3.0\")",
                "@@ -1046,3 +1047,3 @@ project(\"spring-aspects\") {",
                " \t\ttestCompile(project(\":spring-test\"))",
                "-\t\ttestCompile(\"javax.mail:javax.mail-api:1.5.2\")",
                "+\t\ttestCompile(\"javax.mail:javax.mail-api:${javamailVersion}\")",
                " \t}"
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "2096676b3f40e357d689d46b5c929f38448cb882",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521125025,
            "hunks": 3,
            "message": "Upgrade to Apache Johnzon 1.1.7 and JRuby 9.1.16",
            "diff": [
                "diff --git a/spring-web/spring-web.gradle b/spring-web/spring-web.gradle",
                "index c201bb5106..e03cd9ccae 100644",
                "--- a/spring-web/spring-web.gradle",
                "+++ b/spring-web/spring-web.gradle",
                "@@ -87,3 +87,3 @@ dependencies {",
                " \ttestRuntime(\"javax.json:javax.json-api:1.1.2\")",
                "-\ttestRuntime(\"org.apache.johnzon:johnzon-jsonb:1.1.6\")",
                "+\ttestRuntime(\"org.apache.johnzon:johnzon-jsonb:1.1.7\")",
                " }",
                "diff --git a/spring-webflux/spring-webflux.gradle b/spring-webflux/spring-webflux.gradle",
                "index 15a0a29ab6..7abe0f2c36 100644",
                "--- a/spring-webflux/spring-webflux.gradle",
                "+++ b/spring-webflux/spring-webflux.gradle",
                "@@ -60,3 +60,3 @@ dependencies {",
                " \ttestRuntime(\"org.jetbrains.kotlin:kotlin-compiler:${kotlinVersion}\")",
                "-\ttestRuntime(\"org.jruby:jruby:9.1.14.0\")",
                "+\ttestRuntime(\"org.jruby:jruby:9.1.16.0\")",
                " \ttestRuntime(\"org.python:jython-standalone:2.7.1\")",
                "diff --git a/spring-webmvc/spring-webmvc.gradle b/spring-webmvc/spring-webmvc.gradle",
                "index ae339976da..4cbec99a24 100644",
                "--- a/spring-webmvc/spring-webmvc.gradle",
                "+++ b/spring-webmvc/spring-webmvc.gradle",
                "@@ -79,3 +79,3 @@ dependencies {",
                " \ttestRuntime(\"org.jetbrains.kotlin:kotlin-compiler:${kotlinVersion}\")",
                "-\ttestRuntime(\"org.jruby:jruby:9.1.15.0\")",
                "+\ttestRuntime(\"org.jruby:jruby:9.1.16.0\")",
                " \ttestRuntime(\"org.python:jython-standalone:2.7.1\")"
            ],
            "changed_files": [
                "spring-web/spring-web.gradle",
                "spring-webflux/spring-webflux.gradle",
                "spring-webmvc/spring-webmvc.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "fac639971ac9fb7384473e63ce6762d6b2b9d001",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429201126,
            "hunks": 0,
            "message": "Merge remote-tracking branch 'origin/master'",
            "diff": [],
            "changed_files": [],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1da98b054210b1bcb4e65cde66e378e034b1baa3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429130993,
            "hunks": 5,
            "message": "@Bean-returned FactoryBean proxy delegates to actual target instance now Issue: SPR-12915",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "index fd1854d0de..03145b6d1b 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -291,3 +291,3 @@ class ConfigurationClassEnhancer {",
                " \t\t\t\t\t// It is a candidate FactoryBean - go ahead with enhancement",
                "-\t\t\t\t\treturn enhanceFactoryBean(factoryBean.getClass(), beanFactory, beanName);",
                "+\t\t\t\t\treturn enhanceFactoryBean(factoryBean, beanFactory, beanName);",
                " \t\t\t\t}",
                "@@ -367,3 +367,3 @@ class ConfigurationClassEnhancer {",
                " \t\t */",
                "-\t\tprivate Object enhanceFactoryBean(Class<?> fbClass, final ConfigurableBeanFactory beanFactory,",
                "+\t\tprivate Object enhanceFactoryBean(final Object factoryBean, final ConfigurableBeanFactory beanFactory,",
                " \t\t\t\tfinal String beanName) throws InstantiationException, IllegalAccessException {",
                "@@ -371,3 +371,3 @@ class ConfigurationClassEnhancer {",
                " \t\t\tEnhancer enhancer = new Enhancer();",
                "-\t\t\tenhancer.setSuperclass(fbClass);",
                "+\t\t\tenhancer.setSuperclass(factoryBean.getClass());",
                " \t\t\tenhancer.setUseFactory(false);",
                "@@ -380,3 +380,3 @@ class ConfigurationClassEnhancer {",
                " \t\t\t\t\t}",
                "-\t\t\t\t\treturn proxy.invokeSuper(obj, args);",
                "+\t\t\t\t\treturn proxy.invoke(factoryBean, args);",
                " \t\t\t\t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1bde920cce0eb6b7d0db60a604eb34d57747e1c7",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520529180,
            "hunks": 11,
            "message": "Quick access to volatile field (full synchronization only for lazy init) Issue: SPR-16570 (cherry picked from commit 50253f6)",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java b/spring-aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java",
                "index 3d0e9ae4f5..b070b628ea 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -62,3 +62,3 @@ public abstract class AbstractBeanFactoryBasedTargetSource implements TargetSour",
                " \t/** Class of the target */",
                "-\tprivate Class<?> targetClass;",
                "+\tprivate volatile Class<?> targetClass;",
                "@@ -122,17 +122,24 @@ public abstract class AbstractBeanFactoryBasedTargetSource implements TargetSour",
                " \t@Override",
                "-\tpublic synchronized Class<?> getTargetClass() {",
                "-\t\tif (this.targetClass == null && this.beanFactory != null) {",
                "-\t\t\t// Determine type of the target bean.",
                "-\t\t\tthis.targetClass = this.beanFactory.getType(this.targetBeanName);",
                "-\t\t\tif (this.targetClass == null) {",
                "-\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\tlogger.trace(\"Getting bean with name '\" + this.targetBeanName + \"' in order to determine type\");",
                "-\t\t\t\t}",
                "-\t\t\t\tObject beanInstance = this.beanFactory.getBean(this.targetBeanName);",
                "-\t\t\t\tif (beanInstance != null) {",
                "-\t\t\t\t\tthis.targetClass = beanInstance.getClass();",
                "+\tpublic Class<?> getTargetClass() {",
                "+\t\tClass<?> targetClass = this.targetClass;",
                "+\t\tif (targetClass != null) {",
                "+\t\t\treturn targetClass;",
                "+\t\t}",
                "+\t\tsynchronized (this) {",
                "+\t\t\t// Full check within synchronization, entering the BeanFactory interaction algorithm only once...",
                "+\t\t\ttargetClass = this.targetClass;",
                "+\t\t\tif (targetClass == null && this.beanFactory != null) {",
                "+\t\t\t\t// Determine type of the target bean.",
                "+\t\t\t\ttargetClass = this.beanFactory.getType(this.targetBeanName);",
                "+\t\t\t\tif (targetClass == null) {",
                "+\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\tlogger.trace(\"Getting bean with name '\" + this.targetBeanName + \"' for type determination\");",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tObject beanInstance = this.beanFactory.getBean(this.targetBeanName);",
                "+\t\t\t\t\ttargetClass = beanInstance.getClass();",
                " \t\t\t\t}",
                "+\t\t\t\tthis.targetClass = targetClass;",
                " \t\t\t}",
                "+\t\t\treturn targetClass;",
                " \t\t}",
                "-\t\treturn this.targetClass;",
                " \t}",
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java b/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java",
                "index f383a4d833..f43a447816 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2012 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -44,3 +44,3 @@ public abstract class JdbcAccessor implements InitializingBean {",
                "-\tprivate SQLExceptionTranslator exceptionTranslator;",
                "+\tprivate volatile SQLExceptionTranslator exceptionTranslator;",
                "@@ -94,13 +94,21 @@ public abstract class JdbcAccessor implements InitializingBean {",
                " \t */",
                "-\tpublic synchronized SQLExceptionTranslator getExceptionTranslator() {",
                "-\t\tif (this.exceptionTranslator == null) {",
                "-\t\t\tDataSource dataSource = getDataSource();",
                "-\t\t\tif (dataSource != null) {",
                "-\t\t\t\tthis.exceptionTranslator = new SQLErrorCodeSQLExceptionTranslator(dataSource);",
                "-\t\t\t}",
                "-\t\t\telse {",
                "-\t\t\t\tthis.exceptionTranslator = new SQLStateSQLExceptionTranslator();",
                "+\tpublic SQLExceptionTranslator getExceptionTranslator() {",
                "+\t\tSQLExceptionTranslator exceptionTranslator = this.exceptionTranslator;",
                "+\t\tif (exceptionTranslator != null) {",
                "+\t\t\treturn exceptionTranslator;",
                "+\t\t}",
                "+\t\tsynchronized (this) {",
                "+\t\t\texceptionTranslator = this.exceptionTranslator;",
                "+\t\t\tif (exceptionTranslator == null) {",
                "+\t\t\t\tDataSource dataSource = getDataSource();",
                "+\t\t\t\tif (dataSource != null) {",
                "+\t\t\t\t\texceptionTranslator = new SQLErrorCodeSQLExceptionTranslator(dataSource);",
                "+\t\t\t\t}",
                "+\t\t\t\telse {",
                "+\t\t\t\t\texceptionTranslator = new SQLStateSQLExceptionTranslator();",
                "+\t\t\t\t}",
                "+\t\t\t\tthis.exceptionTranslator = exceptionTranslator;",
                " \t\t\t}",
                "+\t\t\treturn exceptionTranslator;",
                " \t\t}",
                "-\t\treturn this.exceptionTranslator;",
                " \t}"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/target/AbstractBeanFactoryBasedTargetSource.java",
                "spring-jdbc/src/main/java/org/springframework/jdbc/support/JdbcAccessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "26cfe5795fcaf59288a3c0e3ccdbb60751a9dd4b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1428963055,
            "hunks": 2,
            "message": "Find @ResponseStatus recursively on getCause() Issue: SPR-12903",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.java",
                "index 6bff5bd8d2..ae7a851d00 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -63,2 +63,6 @@ public class ResponseStatusExceptionResolver extends AbstractHandlerExceptionRes",
                " \t\t}",
                "+\t\telse if (ex.getCause() != null && ex.getCause() instanceof Exception) {",
                "+\t\t\tex = (Exception) ex.getCause();",
                "+\t\t\treturn doResolveException(request, response, handler, ex);",
                "+\t\t}",
                " \t\treturn null;"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/annotation/ResponseStatusExceptionResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ca91956bdbd54b7f25fd780f0f1292b657a0d3d9",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429542359,
            "hunks": 2,
            "message": "Do not retain BeanFactory ref This is a rework of fd7153f that also now clears the reference to the BeanFactory when the context is disposed. Issue: SPR-12518",
            "diff": [
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java b/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java",
                "index 4f12dcdf3f..6888d46f03 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java",
                "@@ -341,3 +341,3 @@ public abstract class TransactionAspectSupport implements BeanFactoryAware, Init",
                " \t/**",
                "-\t * Clear the cached transaction managers.",
                "+\t * Clear the cache.",
                " \t */",
                "@@ -345,2 +345,3 @@ public abstract class TransactionAspectSupport implements BeanFactoryAware, Init",
                " \t\tthis.transactionManagerCache.clear();",
                "+\t\tthis.beanFactory = null;",
                " \t}"
            ],
            "changed_files": [
                "spring-tx/src/main/java/org/springframework/transaction/interceptor/TransactionAspectSupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1fd5935afab55a25776e8d5561e197e864086ef1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521630400,
            "hunks": 30,
            "message": "SimplePropertyAccessor with configurable write support Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index 9eb242c093..3bf6cdf135 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -47,3 +47,3 @@ import org.springframework.util.StringUtils;",
                " /**",
                "- * Simple {@link PropertyAccessor} that uses reflection to access properties",
                "+ * A powerful {@link PropertyAccessor} that uses reflection to access properties",
                "  * for reading and writing.",
                "@@ -57,2 +57,5 @@ import org.springframework.util.StringUtils;",
                "  * @since 3.0",
                "+ * @see StandardEvaluationContext",
                "+ * @see SimpleEvaluationContext",
                "+ * @see SimplePropertyAccessor",
                "  */",
                "@@ -65,3 +68,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \tstatic {",
                "-\t\tSet<Class<?>> booleanTypes = new HashSet<>();",
                "+\t\tSet<Class<?>> booleanTypes = new HashSet<>(4);",
                " \t\tbooleanTypes.add(Boolean.class);",
                "@@ -79,3 +82,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t@Nullable",
                "-\tprivate InvokerPair lastReadInvokerPair;",
                "+\tprivate volatile InvokerPair lastReadInvokerPair;",
                "@@ -96,2 +99,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "@@ -100,2 +104,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tPropertyCacheKey cacheKey = new PropertyCacheKey(type, name, target instanceof Class);",
                "@@ -104,2 +109,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tMethod method = findGetterForProperty(name, type, target);",
                "@@ -123,9 +129,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "-\t\treturn false;",
                "-\t}",
                "-\t@Nullable",
                "-\tpublic Member getLastReadInvokerPair() {",
                "-\t\tInvokerPair lastReadInvoker = this.lastReadInvokerPair;",
                "-\t\treturn (lastReadInvoker != null ? lastReadInvoker.member : null);",
                "+\t\treturn false;",
                " \t}",
                "@@ -146,3 +147,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tInvokerPair invoker = this.readerCache.get(cacheKey);",
                "-\t\tlastReadInvokerPair = invoker;",
                "+\t\tthis.lastReadInvokerPair = invoker;",
                "@@ -153,3 +154,2 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\tif (method != null) {",
                "-\t\t\t\t\t// TODO remove the duplication here between canRead and read",
                " \t\t\t\t\t// Treat it like a property...",
                "@@ -159,3 +159,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\t\tinvoker = new InvokerPair(method, typeDescriptor);",
                "-\t\t\t\t\tlastReadInvokerPair = invoker;",
                "+\t\t\t\t\tthis.lastReadInvokerPair = invoker;",
                " \t\t\t\t\tthis.readerCache.put(cacheKey, invoker);",
                "@@ -181,3 +181,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\t\t\tinvoker = new InvokerPair(field, new TypeDescriptor(field));",
                "-\t\t\t\t\tlastReadInvokerPair = invoker;",
                "+\t\t\t\t\tthis.lastReadInvokerPair = invoker;",
                " \t\t\t\t\tthis.readerCache.put(cacheKey, invoker);",
                "@@ -205,2 +205,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tClass<?> type = (target instanceof Class ? (Class<?>) target : target.getClass());",
                "@@ -210,2 +211,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tMethod method = findSetterForProperty(name, type, target);",
                "@@ -227,2 +229,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\treturn false;",
                "@@ -248,2 +251,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t}",
                "+",
                " \t\tPropertyCacheKey cacheKey = new PropertyCacheKey(type, name, target instanceof Class);",
                "@@ -296,2 +300,13 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t/**",
                "+\t * @deprecated as of 4.3.15 since it is not used within the framework anymore",
                "+\t */",
                "+\t@Deprecated",
                "+\t@Nullable",
                "+\tpublic Member getLastReadInvokerPair() {",
                "+\t\tInvokerPair lastReadInvoker = this.lastReadInvokerPair;",
                "+\t\treturn (lastReadInvoker != null ? lastReadInvoker.member : null);",
                "+\t}",
                "+",
                "+",
                " \t@Nullable",
                "@@ -306,3 +321,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tif (typeDescriptor == null) {",
                "-\t\t\t// attempt to populate the cache entry",
                "+\t\t\t// Attempt to populate the cache entry",
                " \t\t\ttry {",
                "@@ -316,3 +331,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tcatch (AccessException ex) {",
                "-\t\t\t\t// continue with null type descriptor",
                "+\t\t\t\t// Continue with null type descriptor",
                " \t\t\t}",
                "@@ -340,11 +355,2 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "-\t@Nullable",
                "-\tprivate Field findField(String name, Class<?> clazz, Object target) {",
                "-\t\tField field = findField(name, clazz, target instanceof Class);",
                "-\t\tif (field == null && target instanceof Class) {",
                "-\t\t\tfield = findField(name, target.getClass(), false);",
                "-\t\t}",
                "-\t\treturn field;",
                "-\t}",
                "-",
                " \t/**",
                "@@ -379,3 +385,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\tfor (Method method : methods) {",
                "-\t\t\t\tif (method.getName().equals(prefix + methodSuffix) &&",
                "+\t\t\t\tif (isCandidateForProperty(method) && method.getName().equals(prefix + methodSuffix) &&",
                " \t\t\t\t\t\tmethod.getParameterCount() == numberOfParams &&",
                "@@ -388,3 +394,13 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\treturn null;",
                "+\t}",
                "+\t/**",
                "+\t * Determine whether the given {@code Method} is a candidate for property access.",
                "+\t * <p>The default implementation considers any method as a candidate, even for",
                "+\t * non-user-declared properties on the {@link Object} base class.",
                "+\t * @param method the Method to evaluate",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected boolean isCandidateForProperty(Method method) {",
                "+\t\treturn true;",
                " \t}",
                "@@ -392,3 +408,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t/**",
                "-\t * Returns class methods ordered with non bridge methods appearing higher.",
                "+\t * Return class methods ordered with non bridge methods appearing higher.",
                " \t */",
                "@@ -396,3 +412,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tMethod[] methods = clazz.getMethods();",
                "-\t\tArrays.sort(methods, (o1, o2) -> (o1.isBridge() == o2.isBridge()) ? 0 : (o1.isBridge() ? 1 : -1));",
                "+\t\tArrays.sort(methods, (o1, o2) -> (o1.isBridge() == o2.isBridge() ? 0 : (o1.isBridge() ? 1 : -1)));",
                " \t\treturn methods;",
                "@@ -409,5 +425,5 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\tif (suffix.length() > 0 && Character.isUpperCase(suffix.charAt(0))) {",
                "-\t\t\treturn new String[] { suffix };",
                "+\t\t\treturn new String[] {suffix};",
                " \t\t}",
                "-\t\treturn new String[] { suffix, StringUtils.capitalize(suffix) };",
                "+\t\treturn new String[] {suffix, StringUtils.capitalize(suffix)};",
                " \t}",
                "@@ -425,2 +441,11 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                "+\t@Nullable",
                "+\tprivate Field findField(String name, Class<?> clazz, Object target) {",
                "+\t\tField field = findField(name, clazz, target instanceof Class);",
                "+\t\tif (field == null && target instanceof Class) {",
                "+\t\t\tfield = findField(name, target.getClass(), false);",
                "+\t\t}",
                "+\t\treturn field;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -460,3 +485,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t */",
                "-\tpublic PropertyAccessor createOptimalAccessor(EvaluationContext evalContext, @Nullable Object target, String name) {",
                "+\tpublic PropertyAccessor createOptimalAccessor(EvaluationContext context, @Nullable Object target, String name) {",
                " \t\t// Don't be clever for arrays or null target",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimplePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimplePropertyAccessor.java",
                "new file mode 100644",
                "index 0000000000..bf8bc70019",
                "--- /dev/null",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimplePropertyAccessor.java",
                "@@ -0,0 +1,86 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.expression.spel.support;",
                "+",
                "+import java.lang.reflect.Method;",
                "+",
                "+import org.springframework.expression.AccessException;",
                "+import org.springframework.expression.EvaluationContext;",
                "+import org.springframework.lang.Nullable;",
                "+",
                "+/**",
                "+ * A simple {@link org.springframework.expression.PropertyAccessor} variant that",
                "+ * uses reflection to access properties for reading and possibly also writing.",
                "+ *",
                "+ * <p>A property can be accessed through a public getter method (when being read)",
                "+ * or a public setter method (when being written), and also as a public field.",
                "+ *",
                "+ * <p>This accessor is explicitly designed for user-level property evaluation",
                "+ * and does not resolve technical properties on {@code java.lang.Object}.",
                "+ * For more resolution power, choose {@link ReflectivePropertyAccessor} instead.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @since 4.3.15",
                "+ * @see SimpleEvaluationContext",
                "+ * @see StandardEvaluationContext",
                "+ * @see ReflectivePropertyAccessor",
                "+ */",
                "+public class SimplePropertyAccessor extends ReflectivePropertyAccessor {",
                "+",
                "+\tprivate final boolean allowWrite;",
                "+",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading as well writing.",
                "+\t * @see #SimplePropertyAccessor(boolean)",
                "+\t */",
                "+\tpublic SimplePropertyAccessor() {",
                "+\t\tthis.allowWrite = true;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a new property accessor for reading and possibly also writing.",
                "+\t * @param allowWrite whether to also allow for write operations",
                "+\t * @see #canWrite",
                "+\t */",
                "+\tpublic SimplePropertyAccessor(boolean allowWrite) {",
                "+\t\tthis.allowWrite = allowWrite;",
                "+\t}",
                "+",
                "+",
                "+\t@Override",
                "+\tpublic boolean canWrite(EvaluationContext context, @Nullable Object target, String name) throws AccessException {",
                "+\t\treturn (this.allowWrite && super.canWrite(context, target, name));",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void write(EvaluationContext context, @Nullable Object target, String name, @Nullable Object newValue)",
                "+\t\t\tthrows AccessException {",
                "+",
                "+\t\tif (!this.allowWrite) {",
                "+\t\t\tthrow new AccessException(\"PropertyAccessor for property '\" + name +",
                "+\t\t\t\t\t\"' on target [\" + target + \"] does not allow write operations\");",
                "+\t\t}",
                "+\t\tsuper.write(context, target, name, newValue);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected boolean isCandidateForProperty(Method method) {",
                "+\t\treturn (method.getDeclaringClass() != Object.class);",
                "+\t}",
                "+",
                "+}"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimplePropertyAccessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "93abe0e94bfff05d18a0cd2466cec3eafdb0991c",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522358077,
            "hunks": 5,
            "message": "All branches in a conditional structure should not have exactly the same implementation",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java",
                "index be38c90a81..37e9a596a8 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java",
                "@@ -387,6 +387,4 @@ public abstract class AbstractAspectJAdvice implements Advice, AspectJPrecedence",
                " \t\tClass<?>[] parameterTypes = this.aspectJAdviceMethod.getParameterTypes();",
                "-\t\tif (maybeBindJoinPoint(parameterTypes[0]) || maybeBindProceedingJoinPoint(parameterTypes[0])) {",
                "-\t\t\tnumUnboundArgs--;",
                "-\t\t}",
                "-\t\telse if (maybeBindJoinPointStaticPart(parameterTypes[0])) {",
                "+\t\tif (maybeBindJoinPoint(parameterTypes[0]) || maybeBindProceedingJoinPoint(parameterTypes[0]) ||",
                "+\t\t\t\tmaybeBindJoinPointStaticPart(parameterTypes[0])) {",
                " \t\t\tnumUnboundArgs--;",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java b/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java",
                "index c04615b936..64593ad7fa 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java",
                "@@ -287,7 +287,3 @@ public class MutablePropertyValues implements PropertyValues, Serializable {",
                " \t\t\tPropertyValue pvOld = old.getPropertyValue(newPv.getName());",
                "-\t\t\tif (pvOld == null) {",
                "-\t\t\t\tchanges.addPropertyValue(newPv);",
                "-\t\t\t}",
                "-\t\t\telse if (!pvOld.equals(newPv)) {",
                "-\t\t\t\t// it's changed",
                "+\t\t\tif (pvOld == null || !pvOld.equals(newPv)) {",
                " \t\t\t\tchanges.addPropertyValue(newPv);",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java",
                "index 1fb3c223c2..e9435b8349 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java",
                "@@ -411,8 +411,3 @@ public class GroovyBeanDefinitionReader extends AbstractBeanDefinitionReader imp",
                " \tprivate boolean addDeferredProperty(String property, Object newValue) {",
                "-\t\tif (newValue instanceof List) {",
                "-\t\t\tthis.deferredProperties.put(this.currentBeanDefinition.getBeanName() + '.' + property,",
                "-\t\t\t\t\tnew DeferredProperty(this.currentBeanDefinition, property, newValue));",
                "-\t\t\treturn true;",
                "-\t\t}",
                "-\t\telse if (newValue instanceof Map) {",
                "+\t\tif (newValue instanceof List || newValue instanceof Map) {",
                " \t\t\tthis.deferredProperties.put(this.currentBeanDefinition.getBeanName() + '.' + property,",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index 21ff6f82d6..c7d76480ef 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -349,6 +349,3 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t\t\ttry {",
                "-\t\t\t\tif (canRead(context, target, name)) {",
                "-\t\t\t\t\ttypeDescriptor = this.typeDescriptorCache.get(cacheKey);",
                "-\t\t\t\t}",
                "-\t\t\t\telse if (canWrite(context, target, name)) {",
                "+\t\t\t\tif (canRead(context, target, name) || canWrite(context, target, name)) {",
                " \t\t\t\t\ttypeDescriptor = this.typeDescriptorCache.get(cacheKey);",
                "diff --git a/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "index 833da5b73b..8243e1dd4a 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java",
                "@@ -270,6 +270,3 @@ public class UrlPathHelper {",
                " \t\t\t}",
                "-\t\t\tif (c1 == c2) {",
                "-\t\t\t\tcontinue;",
                "-\t\t\t}",
                "-\t\t\telse if (ignoreCase && (Character.toLowerCase(c1) == Character.toLowerCase(c2))) {",
                "+\t\t\tif (c1 == c2 || ignoreCase && (Character.toLowerCase(c1) == Character.toLowerCase(c2))) {",
                " \t\t\t\tcontinue;"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/aspectj/AbstractAspectJAdvice.java",
                "spring-beans/src/main/java/org/springframework/beans/MutablePropertyValues.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/groovy/GroovyBeanDefinitionReader.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "spring-web/src/main/java/org/springframework/web/util/UrlPathHelper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "2a9eaab6741055f05895985e3461ec26227dec8e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522531940,
            "hunks": 6,
            "message": "Remove outdated declarations from spring-aspects build",
            "diff": [
                "diff --git a/spring-aspects/aspects.gradle b/spring-aspects/aspects.gradle",
                "index 2c68dff4da..78491cc0bd 100644",
                "--- a/spring-aspects/aspects.gradle",
                "+++ b/spring-aspects/aspects.gradle",
                "@@ -1,3 +1,2 @@",
                "-// redefine the compileJava and compileTestJava tasks in order to",
                "-// compile sources with ajc instead of javac",
                "+// Redefine the compileJava and compileTestJava tasks in order to compile sources with ajc instead of javac",
                "@@ -10,6 +9,2 @@ configurations {",
                "-// exclude spring-aspects as a module within IDEA until IDEA-64446 is resolved",
                "-tasks.getByName(\"idea\").onlyIf { false }",
                "-tasks.getByName(\"ideaModule\").onlyIf { false }",
                "-",
                " compileJava  {",
                "@@ -19,3 +14,2 @@ compileJava  {",
                " \tdef outputDir = project.sourceSets.main.output.classesDir",
                "-",
                " \tinputs.files(project.sourceSets.main.allSource + project.sourceSets.main.compileClasspath)",
                "@@ -23,5 +17,2 @@ compileJava  {",
                "-\text.sourceCompatibility = project(\":spring-core\").compileJava.sourceCompatibility",
                "-\text.targetCompatibility = project(\":spring-core\").compileJava.targetCompatibility",
                "-",
                " \tdoLast{",
                "@@ -55,3 +46,2 @@ compileTestJava  {",
                " \tdef outputDir = project.sourceSets.test.output.classesDir",
                "-",
                " \tinputs.files(project.sourceSets.test.allSource + project.sourceSets.test.compileClasspath)",
                "@@ -59,5 +49,2 @@ compileTestJava  {",
                "-\text.sourceCompatibility = project(\":spring-core\").compileTestJava.sourceCompatibility",
                "-\text.targetCompatibility = project(\":spring-core\").compileTestJava.targetCompatibility",
                "-",
                " \tdoLast{"
            ],
            "changed_files": [
                "spring-aspects/aspects.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7ef9ac7a4dc835bf065860dcec3262629f704b40",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1430075599,
            "hunks": 14,
            "message": "Document & test status quo for getMetaAnnotationTypes() This commit documents the status quo for the getMetaAnnotationTypes() method in AnnotatedElementUtils and adds appropriate regression tests to AnnotatedElementUtilsTests. In addition, this commit also introduces a SimpleAnnotationProcessor base class in AnnotatedElementUtils. Issue: SPR-11514",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index 7fc37015d6..7844bfc267 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -43,5 +43,34 @@ public class AnnotatedElementUtils {",
                " \t/**",
                "+\t * Get the fully qualified class names of all meta-annotation types",
                "+\t * <em>present</em> on the annotation (of the specified",
                "+\t * {@code annotationType}) on the supplied {@link AnnotatedElement}.",
                "+\t *",
                "+\t * <p>This method also finds all meta-annotations in the annotation",
                "+\t * hierarchy above the specified annotation.",
                "+\t *",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the annotation type on which to find",
                "+\t * meta-annotations; never {@code null}",
                "+\t * @return the names of all meta-annotations present on the annotation,",
                "+\t * or {@code null} if not found",
                "+\t */",
                "+\tpublic static Set<String> getMetaAnnotationTypes(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType) {",
                "+\t\tAssert.notNull(annotationType, \"annotationType must not be null\");",
                "+\t\treturn getMetaAnnotationTypes(element, annotationType.getName());",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Get the fully qualified class names of all meta-annotation types",
                "+\t * <em>present</em> on the annotation (of the specified",
                "+\t * {@code annotationType}) on the supplied {@link AnnotatedElement}.",
                "+\t *",
                "+\t * <p>This method also finds all meta-annotations in the annotation",
                "+\t * hierarchy above the specified annotation.",
                "+\t *",
                " \t * @param element the annotated element; never {@code null}",
                " \t * @param annotationType the fully qualified class name of the annotation",
                "-\t * type to find; never {@code null} or empty",
                "+\t * type on which to find meta-annotations; never {@code null} or empty",
                "+\t * @return the names of all meta-annotations present on the annotation,",
                "+\t * or {@code null} if not found",
                " \t */",
                "@@ -52,3 +81,4 @@ public class AnnotatedElementUtils {",
                " \t\tfinal Set<String> types = new LinkedHashSet<String>();",
                "-\t\tprocessWithGetSemantics(element, annotationType, new Processor<Object>() {",
                "+",
                "+\t\tprocessWithGetSemantics(element, annotationType, new SimpleAnnotationProcessor<Object>() {",
                " \t\t\t@Override",
                "@@ -60,6 +90,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t}",
                "-\t\t\t@Override",
                "-\t\t\tpublic void postProcess(Annotation annotation, Object result) {",
                "-\t\t\t}",
                " \t\t});",
                "+",
                " \t\treturn (types.isEmpty() ? null : types);",
                "@@ -76,3 +104,3 @@ public class AnnotatedElementUtils {",
                "-\t\treturn Boolean.TRUE.equals(processWithGetSemantics(element, annotationType, new Processor<Boolean>() {",
                "+\t\treturn Boolean.TRUE.equals(processWithGetSemantics(element, annotationType, new SimpleAnnotationProcessor<Boolean>() {",
                " \t\t\t@Override",
                "@@ -84,5 +112,2 @@ public class AnnotatedElementUtils {",
                " \t\t\t}",
                "-\t\t\t@Override",
                "-\t\t\tpublic void postProcess(Annotation annotation, Boolean result) {",
                "-\t\t\t}",
                " \t\t}));",
                "@@ -99,3 +124,3 @@ public class AnnotatedElementUtils {",
                "-\t\treturn Boolean.TRUE.equals(processWithGetSemantics(element, annotationType, new Processor<Boolean>() {",
                "+\t\treturn Boolean.TRUE.equals(processWithGetSemantics(element, annotationType, new SimpleAnnotationProcessor<Boolean>() {",
                " \t\t\t@Override",
                "@@ -104,5 +129,2 @@ public class AnnotatedElementUtils {",
                " \t\t\t}",
                "-\t\t\t@Override",
                "-\t\t\tpublic void postProcess(Annotation annotation, Boolean result) {",
                "-\t\t\t}",
                " \t\t}));",
                "@@ -147,3 +169,2 @@ public class AnnotatedElementUtils {",
                " \t\t\tboolean classValuesAsString, boolean nestedAnnotationsAsMap) {",
                "-",
                " \t\treturn processWithGetSemantics(element, annotationType, new MergeAnnotationAttributesProcessor(",
                "@@ -328,2 +349,6 @@ public class AnnotatedElementUtils {",
                " \t\t\t\tfor (Annotation annotation : annotations) {",
                "+\t\t\t\t\t// TODO Add check for !isInJavaLangAnnotationPackage()",
                "+\t\t\t\t\t// if (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation)",
                "+\t\t\t\t\t// && (annotation.annotationType().getName().equals(annotationType) ||",
                "+\t\t\t\t\t// metaDepth > 0)) {",
                " \t\t\t\t\tif (annotation.annotationType().getName().equals(annotationType) || metaDepth > 0) {",
                "@@ -434,3 +459,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\tfor (Annotation annotation : annotations) {",
                "-\t\t\t\t\tif (annotation.annotationType().getName().equals(annotationType) || metaDepth > 0) {",
                "+\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation)",
                "+\t\t\t\t\t\t\t&& (annotation.annotationType().getName().equals(annotationType) || metaDepth > 0)) {",
                " \t\t\t\t\t\tT result = processor.process(annotation, metaDepth);",
                "@@ -618,5 +644,5 @@ public class AnnotatedElementUtils {",
                " \t\t * <p>The {@code annotation} supplied to this method is an annotation",
                "-\t\t * that is present in the annotation hierarchy, above the initial",
                "-\t\t * {@link AnnotatedElement} but below a target annotation found by",
                "-\t\t * the search algorithm.",
                "+\t\t * that is present in the annotation hierarchy, between the initial",
                "+\t\t * {@link AnnotatedElement} and a target annotation found by the",
                "+\t\t * search algorithm.",
                " \t\t *",
                "@@ -628,2 +654,18 @@ public class AnnotatedElementUtils {",
                "+\t/**",
                "+\t * {@link Processor} that only {@linkplain #process processes} annotations",
                "+\t * and does not {@link #postProcess} results.",
                "+\t * @since 4.2",
                "+\t */",
                "+\tprivate abstract static class SimpleAnnotationProcessor<T> implements Processor<T> {",
                "+",
                "+\t\t/**",
                "+\t\t * <em>No-op</em>.",
                "+\t\t */",
                "+\t\t@Override",
                "+\t\tpublic final void postProcess(Annotation annotation, T result) {",
                "+\t\t\t/* no-op */",
                "+\t\t}",
                "+\t}",
                "+",
                " \tprivate static class MergeAnnotationAttributesProcessor implements Processor<AnnotationAttributes> {"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "99bb97388e23599c81b730fe6b69adf9ebbd7490",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520883731,
            "hunks": 2,
            "message": "Upgrade to Tomcat 8.5.29 and Selenium 3.11",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 5d62acafc5..bc1b27238c 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -61,3 +61,3 @@ configure(allprojects) { project ->",
                " \text.tiles3Version        = \"3.0.8\"",
                "-\text.tomcatVersion        = \"8.5.28\"",
                "+\text.tomcatVersion        = \"8.5.29\"",
                " \text.undertowVersion      = \"1.4.23.Final\"",
                "diff --git a/spring-test/spring-test.gradle b/spring-test/spring-test.gradle",
                "index 3f866a67be..01fec0ba99 100644",
                "--- a/spring-test/spring-test.gradle",
                "+++ b/spring-test/spring-test.gradle",
                "@@ -50,3 +50,3 @@ dependencies {",
                " \t}",
                "-\toptional(\"org.seleniumhq.selenium:selenium-java:3.10.0\") {",
                "+\toptional(\"org.seleniumhq.selenium:selenium-java:3.11.0\") {",
                " \t\texclude group: \"commons-logging\", module: \"commons-logging\""
            ],
            "changed_files": [
                "build.gradle",
                "spring-test/spring-test.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4da27c2a734e89bd44f5fcadacdce9f1a830d396",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522448294,
            "hunks": 25,
            "message": "Avoid unnecessary introspection on methods and meta-annotations Issue: SPR-16667",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "index c10e3d98c1..cf5eac08aa 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -433,3 +433,4 @@ class ConfigurationClassEnhancer {",
                " \t\tpublic boolean isMatch(Method candidateMethod) {",
                "-\t\t\treturn BeanAnnotationHelper.isBeanAnnotated(candidateMethod);",
                "+\t\t\treturn (candidateMethod.getDeclaringClass() != Object.class &&",
                "+\t\t\t\t\tBeanAnnotationHelper.isBeanAnnotated(candidateMethod));",
                " \t\t}",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index 0bd78ec559..41b8303241 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -32,2 +32,3 @@ import org.springframework.core.BridgeMethodResolver;",
                " import org.springframework.lang.Nullable;",
                "+import org.springframework.util.CollectionUtils;",
                " import org.springframework.util.LinkedMultiValueMap;",
                "@@ -234,3 +235,2 @@ public class AnnotatedElementUtils {",
                " \t\t\tsearchWithGetSemantics(element, annotationType, annotationName, new SimpleAnnotationProcessor<Boolean>() {",
                "-",
                " \t\t\t\t@Override",
                "@@ -952,3 +952,3 @@ public class AnnotatedElementUtils {",
                " \t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\tif (hasSearchableMetaAnnotations(currentAnnotationType, annotationType, annotationName)) {",
                " \t\t\t\tT result = searchWithGetSemantics(currentAnnotationType, annotationType,",
                "@@ -1085,6 +1085,6 @@ public class AnnotatedElementUtils {",
                "-\t\t\t\t// Search in meta annotations on local annotations",
                "+\t\t\t\t// Recursively search in meta-annotations",
                " \t\t\t\tfor (Annotation annotation : annotations) {",
                " \t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\t\t\tif (hasSearchableMetaAnnotations(currentAnnotationType, annotationType, annotationName)) {",
                " \t\t\t\t\t\tT result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,",
                "@@ -1103,3 +1103,3 @@ public class AnnotatedElementUtils {",
                "-\t\t\t\tif (aggregatedResults != null) {",
                "+\t\t\t\tif (!CollectionUtils.isEmpty(aggregatedResults)) {",
                " \t\t\t\t\t// Prepend to support top-down ordering within class hierarchies",
                "@@ -1110,2 +1110,3 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tMethod method = (Method) element;",
                "+\t\t\t\t\tT result;",
                "@@ -1113,6 +1114,8 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tMethod resolvedMethod = BridgeMethodResolver.findBridgedMethod(method);",
                "-\t\t\t\t\tT result = searchWithFindSemantics(resolvedMethod, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "-\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\tif (resolvedMethod != method) {",
                "+\t\t\t\t\t\tresult = searchWithFindSemantics(resolvedMethod, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "@@ -1121,6 +1124,8 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tClass<?>[] ifcs = method.getDeclaringClass().getInterfaces();",
                "-\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType, processor,",
                "-\t\t\t\t\t\t\tvisited, metaDepth, ifcs);",
                "-\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\tif (ifcs.length > 0) {",
                "+\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType,",
                "+\t\t\t\t\t\t\t\tprocessor, visited, metaDepth, ifcs);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "@@ -1191,6 +1196,6 @@ public class AnnotatedElementUtils {",
                "-\t\tfor (Class<?> iface : ifcs) {",
                "-\t\t\tif (AnnotationUtils.isInterfaceWithAnnotatedMethods(iface)) {",
                "+\t\tfor (Class<?> ifc : ifcs) {",
                "+\t\t\tif (AnnotationUtils.isInterfaceWithAnnotatedMethods(ifc)) {",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tMethod equivalentMethod = iface.getMethod(method.getName(), method.getParameterTypes());",
                "+\t\t\t\t\tMethod equivalentMethod = ifc.getMethod(method.getName(), method.getParameterTypes());",
                " \t\t\t\t\tT result = searchWithFindSemantics(equivalentMethod, annotationType, annotationName, containerType,",
                "@@ -1210,2 +1215,22 @@ public class AnnotatedElementUtils {",
                "+\t/**",
                "+\t * Determine whether the current annotation type is generally expected to have",
                "+\t * meta-annotations of the specified annotation type that we're searching for,",
                "+\t * explicitly excluding some common cases that would never deliver any results.",
                "+\t */",
                "+\tprivate static boolean hasSearchableMetaAnnotations(Class<? extends Annotation> currentAnnotationType,",
                "+\t\t\t@Nullable Class<?> annotationType, @Nullable String annotationName) {",
                "+",
                "+\t\tif (AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tif (currentAnnotationType == Nullable.class || currentAnnotationType.getName().startsWith(\"java\")) {",
                "+\t\t\t// @Nullable and standard Java annotations are only meant to have standard Java meta-annotations",
                "+\t\t\t// -> not worth searching otherwise.",
                "+\t\t\treturn ((annotationType != null && annotationType.getName().startsWith(\"java\")) ||",
                "+\t\t\t\t\t(annotationName != null && annotationName.startsWith(\"java\")));",
                "+\t\t}",
                "+\t\treturn true;",
                "+\t}",
                "+",
                " \t/**",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 2c296bbd5f..29b7d63c0a 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -42,2 +42,3 @@ import org.springframework.lang.Nullable;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.ClassUtils;",
                " import org.springframework.util.ConcurrentReferenceHashMap;",
                "@@ -149,3 +150,3 @@ public abstract class AnnotationUtils {",
                " \t * {@code find*()} methods instead.",
                "-\t * @param ann the Annotation to check",
                "+\t * @param annotation the Annotation to check",
                " \t * @param annotationType the annotation type to look for, both locally and as a meta-annotation",
                "@@ -156,7 +157,7 @@ public abstract class AnnotationUtils {",
                " \t@Nullable",
                "-\tpublic static <A extends Annotation> A getAnnotation(Annotation ann, Class<A> annotationType) {",
                "-\t\tif (annotationType.isInstance(ann)) {",
                "-\t\t\treturn synthesizeAnnotation((A) ann);",
                "+\tpublic static <A extends Annotation> A getAnnotation(Annotation annotation, Class<A> annotationType) {",
                "+\t\tif (annotationType.isInstance(annotation)) {",
                "+\t\t\treturn synthesizeAnnotation((A) annotation);",
                " \t\t}",
                "-\t\tClass<? extends Annotation> annotatedElement = ann.annotationType();",
                "+\t\tClass<? extends Annotation> annotatedElement = annotation.annotationType();",
                " \t\ttry {",
                "@@ -576,6 +577,6 @@ public abstract class AnnotationUtils {",
                " \t\tA annotation = null;",
                "-\t\tfor (Class<?> iface : ifcs) {",
                "-\t\t\tif (isInterfaceWithAnnotatedMethods(iface)) {",
                "+\t\tfor (Class<?> ifc : ifcs) {",
                "+\t\t\tif (isInterfaceWithAnnotatedMethods(ifc)) {",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tMethod equivalentMethod = iface.getMethod(method.getName(), method.getParameterTypes());",
                "+\t\t\t\t\tMethod equivalentMethod = ifc.getMethod(method.getName(), method.getParameterTypes());",
                " \t\t\t\t\tannotation = getAnnotation(equivalentMethod, annotationType);",
                "@@ -593,4 +594,8 @@ public abstract class AnnotationUtils {",
                "-\tstatic boolean isInterfaceWithAnnotatedMethods(Class<?> iface) {",
                "-\t\tBoolean found = annotatedInterfaceCache.get(iface);",
                "+\tstatic boolean isInterfaceWithAnnotatedMethods(Class<?> ifc) {",
                "+\t\tif (ClassUtils.isJavaLanguageInterface(ifc)) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+",
                "+\t\tBoolean found = annotatedInterfaceCache.get(ifc);",
                " \t\tif (found != null) {",
                "@@ -599,5 +604,6 @@ public abstract class AnnotationUtils {",
                " \t\tfound = Boolean.FALSE;",
                "-\t\tfor (Method ifcMethod : iface.getMethods()) {",
                "+\t\tfor (Method ifcMethod : ifc.getMethods()) {",
                " \t\t\ttry {",
                "-\t\t\t\tif (ifcMethod.getAnnotations().length > 0) {",
                "+\t\t\t\tAnnotation[] anns = ifcMethod.getAnnotations();",
                "+\t\t\t\tif (anns.length > 1 || (anns.length == 1 && anns[0].annotationType() != Nullable.class)) {",
                " \t\t\t\t\tfound = Boolean.TRUE;",
                "@@ -610,3 +616,3 @@ public abstract class AnnotationUtils {",
                " \t\t}",
                "-\t\tannotatedInterfaceCache.put(iface, found);",
                "+\t\tannotatedInterfaceCache.put(ifc, found);",
                " \t\treturn found;",
                "diff --git a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "index 664d477f9f..e69facab99 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "@@ -116,3 +116,4 @@ public class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter",
                " \t\t\tif (!this.annotationType.getName().startsWith(\"java\")) {",
                "-\t\t\t\t// Standard Java classes don't have non-standard annotations on them.",
                "+\t\t\t\t// Standard Java types do not have non-standard annotations on them ->",
                "+\t\t\t\t// skip any load attempt, in particular for Java language interfaces.",
                " \t\t\t\treturn false;"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e403aefe860d12f7427655f4fd2a59966a5d6442",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429133871,
            "hunks": 4,
            "message": "Proper exception in case of an @Bean method call encountering a bean type mismatch Issue: SPR-12905",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "index 03145b6d1b..e22edafb9b 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "@@ -29,2 +29,4 @@ import org.springframework.beans.factory.BeanFactory;",
                " import org.springframework.beans.factory.BeanFactoryAware;",
                "+import org.springframework.beans.factory.NoSuchBeanDefinitionException;",
                "+import org.springframework.beans.factory.config.BeanDefinition;",
                " import org.springframework.beans.factory.config.BeanFactoryPostProcessor;",
                "@@ -305,3 +307,3 @@ class ConfigurationClassEnhancer {",
                " \t\t\t\t\t\t\t\"@Configuration class. Add the 'static' modifier to this method to avoid \" +",
                "-\t\t\t\t\t\t\t\"these container lifecycle issues; see @Bean javadoc for complete details\",",
                "+\t\t\t\t\t\t\t\"these container lifecycle issues; see @Bean javadoc for complete details.\",",
                " \t\t\t\t\t\t\tbeanMethod.getDeclaringClass().getSimpleName(), beanMethod.getName()));",
                "@@ -320,4 +322,19 @@ class ConfigurationClassEnhancer {",
                " \t\t\t\t\t}",
                "-\t\t\t\t\treturn (!ObjectUtils.isEmpty(beanMethodArgs) ?",
                "+\t\t\t\t\tObject beanInstance = (!ObjectUtils.isEmpty(beanMethodArgs) ?",
                " \t\t\t\t\t\t\tbeanFactory.getBean(beanName, beanMethodArgs) : beanFactory.getBean(beanName));",
                "+\t\t\t\t\tif (beanInstance != null && !beanMethod.getReturnType().isInstance(beanInstance)) {",
                "+\t\t\t\t\t\tString msg = String.format(\"@Bean method %s.%s called as a bean reference \" +",
                "+\t\t\t\t\t\t\t\t\t\"for type [%s] but overridden by non-compatible bean instance of type [%s].\",",
                "+\t\t\t\t\t\t\t\t\tbeanMethod.getDeclaringClass().getSimpleName(), beanMethod.getName(),",
                "+\t\t\t\t\t\t\t\t\tbeanMethod.getReturnType().getName(), beanInstance.getClass().getName());",
                "+\t\t\t\t\t\ttry {",
                "+\t\t\t\t\t\t\tBeanDefinition beanDefinition = beanFactory.getMergedBeanDefinition(beanName);",
                "+\t\t\t\t\t\t\tmsg += \" Overriding bean of same name declared in: \" + beanDefinition.getResourceDescription();",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t\tcatch (NoSuchBeanDefinitionException ex) {",
                "+\t\t\t\t\t\t\t// Ignore - simply no detailed message then.",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t\tthrow new IllegalStateException(msg);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn beanInstance;",
                " \t\t\t\t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c441d60d1d94e795c7672d55647809d1e3262575",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521906533,
            "hunks": 5,
            "message": "Upgrade to Kotlin 1.2.31 and RxJava 2.1.12 Includes H2 1.4.197 and Selenium HtmlUnit Driver 2.29.3 as well.",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index e436fc9b45..1e15a0dc40 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -16,3 +16,3 @@ plugins {",
                " \tid \"io.spring.dependency-management\" version \"1.0.3.RELEASE\" apply false",
                "-\tid \"org.jetbrains.kotlin.jvm\" version \"1.2.30\" apply false",
                "+\tid \"org.jetbrains.kotlin.jvm\" version \"1.2.31\" apply false",
                " \tid \"org.jetbrains.dokka\" version \"0.9.16\"",
                "@@ -52,3 +52,3 @@ configure(allprojects) { project ->",
                " \text.junitVintageVersion  = \"4.12.3\"",
                "-\text.kotlinVersion        = \"1.2.30\"",
                "+\text.kotlinVersion        = \"1.2.31\"",
                " \text.log4jVersion         = \"2.11.0\"",
                "@@ -58,3 +58,3 @@ configure(allprojects) { project ->",
                " \text.rxjavaAdapterVersion = \"1.2.1\"",
                "-\text.rxjava2Version       = \"2.1.11\"",
                "+\text.rxjava2Version       = \"2.1.12\"",
                " \text.slf4jVersion         = \"1.7.25\"\t // spring-jcl + consistent 3rd party deps",
                "diff --git a/spring-jdbc/spring-jdbc.gradle b/spring-jdbc/spring-jdbc.gradle",
                "index ece6bd4db5..1774490f36 100644",
                "--- a/spring-jdbc/spring-jdbc.gradle",
                "+++ b/spring-jdbc/spring-jdbc.gradle",
                "@@ -9,3 +9,3 @@ dependencies {",
                " \toptional(\"org.hsqldb:hsqldb:${hsqldbVersion}\")",
                "-\toptional(\"com.h2database:h2:1.4.196\")",
                "+\toptional(\"com.h2database:h2:1.4.197\")",
                " \toptional(\"org.apache.derby:derby:10.14.1.0\")",
                "diff --git a/spring-test/spring-test.gradle b/spring-test/spring-test.gradle",
                "index 9e98ed0bfb..14bbad3a92 100644",
                "--- a/spring-test/spring-test.gradle",
                "+++ b/spring-test/spring-test.gradle",
                "@@ -47,3 +47,3 @@ dependencies {",
                " \t}",
                "-\toptional(\"org.seleniumhq.selenium:htmlunit-driver:2.29.2\") {",
                "+\toptional(\"org.seleniumhq.selenium:htmlunit-driver:2.29.3\") {",
                " \t\texclude group: \"commons-logging\", module: \"commons-logging\""
            ],
            "changed_files": [
                "build.gradle",
                "spring-jdbc/spring-jdbc.gradle",
                "spring-test/spring-test.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "fefbd8f85b8a75af0e968d18354674846d443512",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429034756,
            "hunks": 89,
            "message": "Polish Javadoc for StringUtils and Assert",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/Assert.java b/spring-core/src/main/java/org/springframework/util/Assert.java",
                "index ed55aa13b4..959d29147b 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/Assert.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/Assert.java",
                "@@ -23,6 +23,7 @@ import java.util.Map;",
                "  * Assertion utility class that assists in validating arguments.",
                "- * Useful for identifying programmer errors early and clearly at runtime.",
                "+ *",
                "+ * <p>Useful for identifying programmer errors early and clearly at runtime.",
                "  *",
                "  * <p>For example, if the contract of a public method states it does not",
                "- * allow {@code null} arguments, Assert can be used to validate that",
                "+ * allow {@code null} arguments, {@code Assert} can be used to validate that",
                "  * contract. Doing this clearly indicates a contract violation when it",
                "@@ -31,5 +32,5 @@ import java.util.Map;",
                "  * <p>Typically used to validate method arguments rather than configuration",
                "- * properties, to check for cases that are usually programmer errors rather than",
                "- * configuration errors. In contrast to config initialization code, there is",
                "- * usally no point in falling back to defaults in such methods.",
                "+ * properties, to check for cases that are usually programmer errors rather",
                "+ * than configuration errors. In contrast to configuration initialization",
                "+ * code, there is usually no point in falling back to defaults in such methods.",
                "  *",
                "@@ -43,4 +44,5 @@ import java.util.Map;",
                "  *",
                "- * Mainly for internal use within the framework; consider Apache's Commons Lang",
                "- * >= 2.0 for a more comprehensive suite of assertion utilities.",
                "+ * <p>Mainly for internal use within the framework; consider",
                "+ * <a href=\"http://commons.apache.org/proper/commons-lang/\">Apache's Commons Lang</a>",
                "+ * for a more comprehensive suite of {@code String} utilities.",
                "  *",
                "@@ -50,2 +52,3 @@ import java.util.Map;",
                "  * @author Rob Harrop",
                "+ * @author Sam Brannen",
                "  * @since 1.1.2",
                "@@ -132,2 +135,3 @@ public abstract class Assert {",
                " \t * @see StringUtils#hasLength",
                "+\t * @throws IllegalArgumentException if the text is empty",
                " \t */",
                "@@ -145,2 +149,3 @@ public abstract class Assert {",
                " \t * @see StringUtils#hasLength",
                "+\t * @throws IllegalArgumentException if the text is empty",
                " \t */",
                "@@ -158,2 +163,3 @@ public abstract class Assert {",
                " \t * @see StringUtils#hasText",
                "+\t * @throws IllegalArgumentException if the text does not contain valid text content",
                " \t */",
                "@@ -171,2 +177,3 @@ public abstract class Assert {",
                " \t * @see StringUtils#hasText",
                "+\t * @throws IllegalArgumentException if the text does not contain valid text content",
                " \t */",
                "@@ -183,2 +190,3 @@ public abstract class Assert {",
                " \t * @param message the exception message to use if the assertion fails",
                "+\t * @throws IllegalArgumentException if the text contains the substring",
                " \t */",
                "@@ -196,2 +204,3 @@ public abstract class Assert {",
                " \t * @param substring the substring to find within the text",
                "+\t * @throws IllegalArgumentException if the text contains the substring",
                " \t */",
                "@@ -202,3 +211,2 @@ public abstract class Assert {",
                "-",
                " \t/**",
                "@@ -308,3 +316,2 @@ public abstract class Assert {",
                "-",
                " \t/**",
                "@@ -328,4 +335,4 @@ public abstract class Assert {",
                " \t * the function itself, and which may be used to provide context. It should",
                "-\t * normally end in a \": \" or \". \" so that the function generate message looks",
                "-\t * ok when prepended to it.",
                "+\t * normally end in \":\" or \".\" so that the generated message looks OK when",
                "+\t * appended to it.",
                " \t * @throws IllegalArgumentException if the object is not an instance of clazz",
                "@@ -361,4 +368,4 @@ public abstract class Assert {",
                " \t * the function itself, and which may be used to provide context. It should",
                "-\t * normally end in a \": \" or \". \" so that the function generate message looks",
                "-\t * ok when prepended to it.",
                "+\t * normally end in \":\" or \".\" so that the generated message looks OK when",
                "+\t * appended to it.",
                " \t * @throws IllegalArgumentException if the classes are not assignable",
                "@@ -368,3 +375,4 @@ public abstract class Assert {",
                " \t\tif (subType == null || !superType.isAssignableFrom(subType)) {",
                "-\t\t\tthrow new IllegalArgumentException(message + subType + \" is not assignable to \" + superType);",
                "+\t\t\tthrow new IllegalArgumentException((StringUtils.hasLength(message) ? message + \" \" : \"\")",
                "+\t\t\t\t+ subType + \" is not assignable to \" + superType);",
                " \t\t}",
                "@@ -372,3 +380,2 @@ public abstract class Assert {",
                "-",
                " \t/**",
                "diff --git a/spring-core/src/main/java/org/springframework/util/StringUtils.java b/spring-core/src/main/java/org/springframework/util/StringUtils.java",
                "index 6663c2cf9a..ea9c3bf2ed 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/StringUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java",
                "@@ -37,10 +37,9 @@ import java.util.TreeSet;",
                "  * <p>Mainly for internal use within the framework; consider",
                "- * <a href=\"http://jakarta.apache.org/commons/lang/\">Apache's Commons Lang</a>",
                "- * for a more comprehensive suite of String utilities.",
                "+ * <a href=\"http://commons.apache.org/proper/commons-lang/\">Apache's Commons Lang</a>",
                "+ * for a more comprehensive suite of {@code String} utilities.",
                "  *",
                "- * <p>This class delivers some simple functionality that should really",
                "- * be provided by the core Java {@code String} and {@link StringBuilder}",
                "- * classes, such as the ability to {@link #replace} all occurrences of a given",
                "- * substring in a target string. It also provides easy-to-use methods to convert",
                "- * between delimited strings, such as CSV strings, and collections and arrays.",
                "+ * <p>This class delivers some simple functionality that should really be",
                "+ * provided by the core Java {@link String} and {@link StringBuilder}",
                "+ * classes. It also provides easy-to-use methods to convert between",
                "+ * delimited strings, such as CSV strings, and collections and arrays.",
                "  *",
                "@@ -73,3 +72,3 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Check whether the given String is empty.",
                "+\t * Check whether the given {@code String} is empty.",
                " \t * <p>This method accepts any Object as an argument, comparing it to",
                "@@ -130,4 +129,4 @@ public abstract class StringUtils {",
                " \t * </pre>",
                "-\t * @param str the CharSequence to check (may be {@code null})",
                "-\t * @return {@code true} if the CharSequence is not null and has length",
                "+\t * @param str the {@code CharSequence} to check (may be {@code null})",
                "+\t * @return {@code true} if the {@code CharSequence} is not {@code null} and has length",
                " \t * @see #hasText(String)",
                "@@ -139,7 +138,9 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Check that the given String is neither {@code null} nor of length 0.",
                "-\t * Note: Will return {@code true} for a String that purely consists of whitespace.",
                "-\t * @param str the String to check (may be {@code null})",
                "-\t * @return {@code true} if the String is not null and has length",
                "+\t * Check that the given {@code String} is neither {@code null} nor of length 0.",
                "+\t * <p>Note: this method returns {@code true} for a {@code String} that",
                "+\t * purely consists of whitespace.",
                "+\t * @param str the {@code String} to check (may be {@code null})",
                "+\t * @return {@code true} if the {@code String} is not {@code null} and has length",
                " \t * @see #hasLength(CharSequence)",
                "+\t * @see #hasText(String)",
                " \t */",
                "@@ -150,5 +151,6 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Check whether the given CharSequence has actual text.",
                "-\t * More specifically, returns {@code true} if the string not {@code null},",
                "-\t * its length is greater than 0, and it contains at least one non-whitespace character.",
                "+\t * Check whether the given {@code CharSequence} contains actual <em>text</em>.",
                "+\t * <p>More specifically, this method returns {@code true} if the",
                "+\t * {@code CharSequence} is not {@code null}, its length is greater than",
                "+\t * 0, and it contains at least one non-whitespace character.",
                " \t * <p><pre class=\"code\">",
                "@@ -160,4 +162,4 @@ public abstract class StringUtils {",
                " \t * </pre>",
                "-\t * @param str the CharSequence to check (may be {@code null})",
                "-\t * @return {@code true} if the CharSequence is not {@code null},",
                "+\t * @param str the {@code CharSequence} to check (may be {@code null})",
                "+\t * @return {@code true} if the {@code CharSequence} is not {@code null},",
                " \t * its length is greater than 0, and it does not contain whitespace only",
                "@@ -179,8 +181,9 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Check whether the given String has actual text.",
                "-\t * More specifically, returns {@code true} if the string not {@code null},",
                "-\t * its length is greater than 0, and it contains at least one non-whitespace character.",
                "-\t * @param str the String to check (may be {@code null})",
                "-\t * @return {@code true} if the String is not {@code null}, its length is",
                "-\t * greater than 0, and it does not contain whitespace only",
                "+\t * Check whether the given {@code String} contains actual <em>text</em>.",
                "+\t * <p>More specifically, this method returns {@code true} if the",
                "+\t * {@code String} is not {@code null}, its length is greater than 0,",
                "+\t * and it contains at least one non-whitespace character.",
                "+\t * @param str the {@code String} to check (may be {@code null})",
                "+\t * @return {@code true} if the {@code String} is not {@code null}, its",
                "+\t * length is greater than 0, and it does not contain whitespace only",
                " \t * @see #hasText(CharSequence)",
                "@@ -192,5 +195,5 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Check whether the given CharSequence contains any whitespace characters.",
                "-\t * @param str the CharSequence to check (may be {@code null})",
                "-\t * @return {@code true} if the CharSequence is not empty and",
                "+\t * Check whether the given {@code CharSequence} contains any whitespace characters.",
                "+\t * @param str the {@code CharSequence} to check (may be {@code null})",
                "+\t * @return {@code true} if the {@code CharSequence} is not empty and",
                " \t * contains at least 1 whitespace character",
                "@@ -212,5 +215,5 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Check whether the given String contains any whitespace characters.",
                "-\t * @param str the String to check (may be {@code null})",
                "-\t * @return {@code true} if the String is not empty and",
                "+\t * Check whether the given {@code String} contains any whitespace characters.",
                "+\t * @param str the {@code String} to check (may be {@code null})",
                "+\t * @return {@code true} if the {@code String} is not empty and",
                " \t * contains at least 1 whitespace character",
                "@@ -223,5 +226,5 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Trim leading and trailing whitespace from the given String.",
                "-\t * @param str the String to check",
                "-\t * @return the trimmed String",
                "+\t * Trim leading and trailing whitespace from the given {@code String}.",
                "+\t * @param str the {@code String} to check",
                "+\t * @return the trimmed {@code String}",
                " \t * @see java.lang.Character#isWhitespace",
                "@@ -243,6 +246,6 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Trim <i>all</i> whitespace from the given String:",
                "+\t * Trim <i>all</i> whitespace from the given {@code String}:",
                " \t * leading, trailing, and in between characters.",
                "-\t * @param str the String to check",
                "-\t * @return the trimmed String",
                "+\t * @param str the {@code String} to check",
                "+\t * @return the trimmed {@code String}",
                " \t * @see java.lang.Character#isWhitespace",
                "@@ -265,5 +268,5 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Trim leading whitespace from the given String.",
                "-\t * @param str the String to check",
                "-\t * @return the trimmed String",
                "+\t * Trim leading whitespace from the given {@code String}.",
                "+\t * @param str the {@code String} to check",
                "+\t * @return the trimmed {@code String}",
                " \t * @see java.lang.Character#isWhitespace",
                "@@ -282,5 +285,5 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Trim trailing whitespace from the given String.",
                "-\t * @param str the String to check",
                "-\t * @return the trimmed String",
                "+\t * Trim trailing whitespace from the given {@code String}.",
                "+\t * @param str the {@code String} to check",
                "+\t * @return the trimmed {@code String}",
                " \t * @see java.lang.Character#isWhitespace",
                "@@ -299,6 +302,6 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Trim all occurrences of the supplied leading character from the given String.",
                "-\t * @param str the String to check",
                "+\t * Trim all occurrences of the supplied leading character from the given {@code String}.",
                "+\t * @param str the {@code String} to check",
                " \t * @param leadingCharacter the leading character to be trimmed",
                "-\t * @return the trimmed String",
                "+\t * @return the trimmed {@code String}",
                " \t */",
                "@@ -316,6 +319,6 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Trim all occurrences of the supplied trailing character from the given String.",
                "-\t * @param str the String to check",
                "+\t * Trim all occurrences of the supplied trailing character from the given {@code String}.",
                "+\t * @param str the {@code String} to check",
                " \t * @param trailingCharacter the trailing character to be trimmed",
                "-\t * @return the trimmed String",
                "+\t * @return the trimmed {@code String}",
                " \t */",
                "@@ -334,5 +337,5 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Test if the given String starts with the specified prefix,",
                "+\t * Test if the given {@code String} starts with the specified prefix,",
                " \t * ignoring upper/lower case.",
                "-\t * @param str the String to check",
                "+\t * @param str the {@code String} to check",
                " \t * @param prefix the prefix to look for",
                "@@ -356,5 +359,5 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Test if the given String ends with the specified suffix,",
                "+\t * Test if the given {@code String} ends with the specified suffix,",
                " \t * ignoring upper/lower case.",
                "-\t * @param str the String to check",
                "+\t * @param str the {@code String} to check",
                " \t * @param suffix the suffix to look for",
                "@@ -396,5 +399,5 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Count the occurrences of the substring in string s.",
                "-\t * @param str string to search in. Return 0 if this is null.",
                "-\t * @param sub string to search for. Return 0 if this is null.",
                "+\t * Count the occurrences of the substring {@code sub} in string {@code str}.",
                "+\t * @param str string to search in. Return 0 if this is {@code null}.",
                "+\t * @param sub string to search for. Return 0 if this is {@code null}.",
                " \t */",
                "@@ -417,6 +420,6 @@ public abstract class StringUtils {",
                " \t * another string.",
                "-\t * @param inString String to examine",
                "-\t * @param oldPattern String to replace",
                "-\t * @param newPattern String to insert",
                "-\t * @return a String with the replacements",
                "+\t * @param inString {@code String} to examine",
                "+\t * @param oldPattern {@code String} to replace",
                "+\t * @param newPattern {@code String} to insert",
                "+\t * @return a {@code String} with the replacements",
                " \t */",
                "@@ -444,5 +447,5 @@ public abstract class StringUtils {",
                " \t * Delete all occurrences of the given substring.",
                "-\t * @param inString the original String",
                "+\t * @param inString the original {@code String}",
                " \t * @param pattern the pattern to delete all occurrences of",
                "-\t * @return the resulting String",
                "+\t * @return the resulting {@code String}",
                " \t */",
                "@@ -453,7 +456,7 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Delete any character in a given String.",
                "-\t * @param inString the original String",
                "+\t * Delete any character in a given {@code String}.",
                "+\t * @param inString the original {@code String}",
                " \t * @param charsToDelete a set of characters to delete.",
                " \t * E.g. \"az\\n\" will delete 'a's, 'z's and new lines.",
                "-\t * @return the resulting String",
                "+\t * @return the resulting {@code String}",
                " \t */",
                "@@ -479,5 +482,5 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Quote the given String with single quotes.",
                "-\t * @param str the input String (e.g. \"myString\")",
                "-\t * @return the quoted String (e.g. \"'myString'\"),",
                "+\t * Quote the given {@code String} with single quotes.",
                "+\t * @param str the input {@code String} (e.g. \"myString\")",
                "+\t * @return the quoted {@code String} (e.g. \"'myString'\"),",
                " \t * or {@code null} if the input was {@code null}",
                "@@ -489,7 +492,7 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Turn the given Object into a String with single quotes",
                "-\t * if it is a String; keeping the Object as-is else.",
                "+\t * Turn the given Object into a {@code String} with single quotes",
                "+\t * if it is a {@code String}; keeping the Object as-is else.",
                " \t * @param obj the input Object (e.g. \"myString\")",
                "-\t * @return the quoted String (e.g. \"'myString'\"),",
                "-\t * or the input object as-is if not a String",
                "+\t * @return the quoted {@code String} (e.g. \"'myString'\"),",
                "+\t * or the input object as-is if not a {@code String}",
                " \t */",
                "@@ -522,4 +525,5 @@ public abstract class StringUtils {",
                " \t * No other letters are changed.",
                "-\t * @param str the String to capitalize, may be {@code null}",
                "-\t * @return the capitalized String, {@code null} if null",
                "+\t * @param str the {@code String} to capitalize, may be {@code null}",
                "+\t * @return the capitalized {@code String}, or {@code null} if the supplied",
                "+\t * string is {@code null}",
                " \t */",
                "@@ -533,4 +537,5 @@ public abstract class StringUtils {",
                " \t * No other letters are changed.",
                "-\t * @param str the String to uncapitalize, may be {@code null}",
                "-\t * @return the uncapitalized String, {@code null} if null",
                "+\t * @param str the {@code String} to uncapitalize, may be {@code null}",
                "+\t * @return the uncapitalized {@code String}, or {@code null} if the supplied",
                "+\t * string is {@code null}",
                " \t */",
                "@@ -557,3 +562,3 @@ public abstract class StringUtils {",
                " \t * Extract the filename from the given path,",
                "-\t * e.g. \"mypath/myfile.txt\" -> \"myfile.txt\".",
                "+\t * e.g. {@code \"mypath/myfile.txt\" -> \"myfile.txt\"}.",
                " \t * @param path the file path (may be {@code null})",
                "@@ -714,3 +719,3 @@ public abstract class StringUtils {",
                " \t * <p>This is the inverse operation of {@link Locale#toString Locale's toString}.",
                "-\t * @param localeString the locale String, following {@code Locale's}",
                "+\t * @param localeString the locale {@code String}, following {@code Locale's}",
                " \t * {@code toString()} format (\"en\", \"en_UK\", etc);",
                "@@ -754,3 +759,3 @@ public abstract class StringUtils {",
                " \t * @param locale the Locale to transform to a language tag",
                "-\t * @return the RFC 3066 compliant language tag as String",
                "+\t * @return the RFC 3066 compliant language tag as {@code String}",
                " \t */",
                "@@ -762,3 +767,3 @@ public abstract class StringUtils {",
                " \t * Parse the given {@code timeZoneString} value into a {@link TimeZone}.",
                "-\t * @param timeZoneString the time zone String, following {@link TimeZone#getTimeZone(String)}",
                "+\t * @param timeZoneString the time zone {@code String}, following {@link TimeZone#getTimeZone(String)}",
                " \t * but throwing {@link IllegalArgumentException} in case of an invalid time zone specification",
                "@@ -782,6 +787,7 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Append the given String to the given String array, returning a new array",
                "-\t * consisting of the input array contents plus the given String.",
                "+\t * Append the given {@code String} to the given {@code String} array,",
                "+\t * returning a new array consisting of the input array contents plus",
                "+\t * the given {@code String}.",
                " \t * @param array the array to append to (can be {@code null})",
                "-\t * @param str the String to append",
                "+\t * @param str the {@code String} to append",
                " \t * @return the new array (never {@code null})",
                "@@ -799,3 +805,3 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Concatenate the given String arrays into one,",
                "+\t * Concatenate the given {@code String} arrays into one,",
                " \t * with overlapping array elements included twice.",
                "@@ -820,3 +826,3 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Merge the given String arrays into one, with overlapping",
                "+\t * Merge the given {@code String} arrays into one, with overlapping",
                " \t * array elements only included once.",
                "@@ -847,3 +853,3 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Turn given source String array into sorted array.",
                "+\t * Turn given source {@code String} array into sorted array.",
                " \t * @param array the source array",
                "@@ -860,7 +866,7 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Copy the given Collection into a String array.",
                "-\t * The Collection must contain String elements only.",
                "-\t * @param collection the Collection to copy",
                "-\t * @return the String array ({@code null} if the passed-in",
                "-\t * Collection was {@code null})",
                "+\t * Copy the given {@code Collection} into a {@code String} array.",
                "+\t * <p>The {@code Collection} must contain {@code String} elements only.",
                "+\t * @param collection the {@code Collection} to copy",
                "+\t * @return the {@code String} array ({@code null} if the supplied",
                "+\t * {@code Collection} was {@code null})",
                " \t */",
                "@@ -874,6 +880,6 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Copy the given Enumeration into a String array.",
                "-\t * The Enumeration must contain String elements only.",
                "+\t * Copy the given Enumeration into a {@code String} array.",
                "+\t * The Enumeration must contain {@code String} elements only.",
                " \t * @param enumeration the Enumeration to copy",
                "-\t * @return the String array ({@code null} if the passed-in",
                "+\t * @return the {@code String} array ({@code null} if the passed-in",
                " \t * Enumeration was {@code null})",
                "@@ -889,5 +895,5 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Trim the elements of the given String array,",
                "+\t * Trim the elements of the given {@code String} array,",
                " \t * calling {@code String.trim()} on each of them.",
                "-\t * @param array the original String array",
                "+\t * @param array the original {@code String} array",
                " \t * @return the resulting array (of the same size) with trimmed elements",
                "@@ -907,5 +913,5 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Remove duplicate Strings from the given array.",
                "-\t * Also sorts the array, as it uses a TreeSet.",
                "-\t * @param array the String array",
                "+\t * Remove duplicate strings from the given array.",
                "+\t * <p>Also sorts the array, as it uses a {@link TreeSet}.",
                "+\t * @param array the {@code String} array",
                " \t * @return an array without duplicates, in natural sort order",
                "@@ -924,3 +930,3 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Split a String at the first occurrence of the delimiter.",
                "+\t * Split a {@code String} at the first occurrence of the delimiter.",
                " \t * Does not include the delimiter in the result.",
                "@@ -930,3 +936,3 @@ public abstract class StringUtils {",
                " \t * index 1 being after the delimiter (neither element includes the delimiter);",
                "-\t * or {@code null} if the delimiter wasn't found in the given input String",
                "+\t * or {@code null} if the delimiter wasn't found in the given input {@code String}",
                " \t */",
                "@@ -946,3 +952,3 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Take an array Strings and split each element based on the given delimiter.",
                "+\t * Take an array of strings and split each element based on the given delimiter.",
                " \t * A {@code Properties} instance is then generated, with the left of the",
                "@@ -954,3 +960,3 @@ public abstract class StringUtils {",
                " \t * @return a {@code Properties} instance representing the array contents,",
                "-\t * or {@code null} if the array to process was null or empty",
                "+\t * or {@code null} if the array to process was {@code null} or empty",
                " \t */",
                "@@ -961,3 +967,3 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Take an array Strings and split each element based on the given delimiter.",
                "+\t * Take an array of strings and split each element based on the given delimiter.",
                " \t * A {@code Properties} instance is then generated, with the left of the",
                "@@ -995,11 +1001,12 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Tokenize the given String into a String array via a StringTokenizer.",
                "-\t * Trims tokens and omits empty tokens.",
                "-\t * <p>The given delimiters string is supposed to consist of any number of",
                "+\t * Tokenize the given {@code String} into a {@code String} array via a",
                "+\t * {@link StringTokenizer}.",
                "+\t * <p>Trims tokens and omits empty tokens.",
                "+\t * <p>The given {@code delimiters} string can consist of any number of",
                " \t * delimiter characters. Each of those characters can be used to separate",
                " \t * tokens. A delimiter is always a single character; for multi-character",
                "-\t * delimiters, consider using {@code delimitedListToStringArray}",
                "-\t * @param str the String to tokenize",
                "-\t * @param delimiters the delimiter characters, assembled as String",
                "-\t * (each of those characters is individually considered as delimiter).",
                "+\t * delimiters, consider using {@link #delimitedListToStringArray}.",
                "+\t * @param str the {@code String} to tokenize",
                "+\t * @param delimiters the delimiter characters, assembled as a {@code String}",
                "+\t * (each of the characters is individually considered as a delimiter)",
                " \t * @return an array of the tokens",
                "@@ -1014,11 +1021,12 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Tokenize the given String into a String array via a StringTokenizer.",
                "-\t * <p>The given delimiters string is supposed to consist of any number of",
                "+\t * Tokenize the given {@code String} into a {@code String} array via a",
                "+\t * {@link StringTokenizer}.",
                "+\t * <p>The given {@code delimiters} string can consist of any number of",
                " \t * delimiter characters. Each of those characters can be used to separate",
                " \t * tokens. A delimiter is always a single character; for multi-character",
                "-\t * delimiters, consider using {@code delimitedListToStringArray}",
                "-\t * @param str the String to tokenize",
                "-\t * @param delimiters the delimiter characters, assembled as String",
                "-\t * (each of those characters is individually considered as delimiter)",
                "-\t * @param trimTokens trim the tokens via String's {@code trim}",
                "+\t * delimiters, consider using {@link #delimitedListToStringArray}.",
                "+\t * @param str the {@code String} to tokenize",
                "+\t * @param delimiters the delimiter characters, assembled as a {@code String}",
                "+\t * (each of the characters is individually considered as a delimiter)",
                "+\t * @param trimTokens trim the tokens via {@link String#trim()}",
                " \t * @param ignoreEmptyTokens omit empty tokens from the result array",
                "@@ -1026,3 +1034,3 @@ public abstract class StringUtils {",
                " \t * will not consider subsequent delimiters as token in the first place).",
                "-\t * @return an array of the tokens ({@code null} if the input String",
                "+\t * @return an array of the tokens ({@code null} if the input {@code String}",
                " \t * was {@code null})",
                "@@ -1053,7 +1061,9 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Take a String which is a delimited list and convert it to a String array.",
                "-\t * <p>A single delimiter can consists of more than one character: It will still",
                "-\t * be considered as single delimiter string, rather than as bunch of potential",
                "-\t * delimiter characters - in contrast to {@code tokenizeToStringArray}.",
                "-\t * @param str the input String",
                "+\t * Take a {@code String} that is a delimited list and convert it into a",
                "+\t * {@code String} array.",
                "+\t * <p>A single {@code delimiter} may consist of more than one character,",
                "+\t * but it will still be considered as a single delimiter string, rather",
                "+\t * than as bunch of potential delimiter characters, in contrast to",
                "+\t * {@link #tokenizeToStringArray}.",
                "+\t * @param str the input {@code String}",
                " \t * @param delimiter the delimiter between elements (this is a single delimiter,",
                "@@ -1068,11 +1078,13 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Take a String which is a delimited list and convert it to a String array.",
                "-\t * <p>A single delimiter can consists of more than one character: It will still",
                "-\t * be considered as single delimiter string, rather than as bunch of potential",
                "-\t * delimiter characters - in contrast to {@code tokenizeToStringArray}.",
                "-\t * @param str the input String",
                "+\t * Take a {@code String} that is a delimited list and convert it into",
                "+\t * a {@code String} array.",
                "+\t * <p>A single {@code delimiter} may consist of more than one character,",
                "+\t * but it will still be considered as a single delimiter string, rather",
                "+\t * than as bunch of potential delimiter characters, in contrast to",
                "+\t * {@link #tokenizeToStringArray}.",
                "+\t * @param str the input {@code String}",
                " \t * @param delimiter the delimiter between elements (this is a single delimiter,",
                " \t * rather than a bunch individual delimiter characters)",
                "-\t * @param charsToDelete a set of characters to delete. Useful for deleting unwanted",
                "-\t * line breaks: e.g. \"\\r\\n\\f\" will delete all new lines and line feeds in a String.",
                "+\t * @param charsToDelete a set of characters to delete; useful for deleting unwanted",
                "+\t * line breaks: e.g. \"\\r\\n\\f\" will delete all new lines and line feeds in a {@code String}",
                " \t * @return an array of the tokens in the list",
                "@@ -1109,5 +1121,6 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Convert a CSV list into an array of Strings.",
                "-\t * @param str the input String",
                "-\t * @return an array of Strings, or the empty array in case of empty input",
                "+\t * Convert a comma delimited list (e.g., a row from a CSV file) into an",
                "+\t * array of strings.",
                "+\t * @param str the input {@code String}",
                "+\t * @return an array of strings, or the empty array in case of empty input",
                " \t */",
                "@@ -1118,6 +1131,7 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Convenience method to convert a CSV string list to a set.",
                "-\t * Note that this will suppress duplicates.",
                "-\t * @param str the input String",
                "-\t * @return a Set of String entries in the list",
                "+\t * Convert a comma delimited list (e.g., a row from a CSV file) into a set.",
                "+\t * <p>Note that this will suppress duplicates, and the elements in the",
                "+\t * returned set will be sorted, since a {@link TreeSet} is used internally.",
                "+\t * @param str the input {@code String}",
                "+\t * @return a set of {@code String} entries in the list",
                " \t */",
                "@@ -1133,9 +1147,9 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Convenience method to return a Collection as a delimited (e.g. CSV)",
                "-\t * String. E.g. useful for {@code toString()} implementations.",
                "-\t * @param coll the Collection to display",
                "-\t * @param delim the delimiter to use (probably a \",\")",
                "-\t * @param prefix the String to start each element with",
                "-\t * @param suffix the String to end each element with",
                "-\t * @return the delimited String",
                "+\t * Convert a {@link Collection} to a delimited {@code String} (e.g. CSV).",
                "+\t * <p>Useful for {@code toString()} implementations.",
                "+\t * @param coll the {@code Collection} to convert",
                "+\t * @param delim the delimiter to use (typically a \",\")",
                "+\t * @param prefix the {@code String} to start each element with",
                "+\t * @param suffix the {@code String} to end each element with",
                "+\t * @return the delimited {@code String}",
                " \t */",
                "@@ -1157,7 +1171,7 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Convenience method to return a Collection as a delimited (e.g. CSV)",
                "-\t * String. E.g. useful for {@code toString()} implementations.",
                "-\t * @param coll the Collection to display",
                "-\t * @param delim the delimiter to use (probably a \",\")",
                "-\t * @return the delimited String",
                "+\t * Convert a {@code Collection} into a delimited {@code String} (e.g. CSV).",
                "+\t * <p>Useful for {@code toString()} implementations.",
                "+\t * @param coll the {@code Collection} to convert",
                "+\t * @param delim the delimiter to use (typically a \",\")",
                "+\t * @return the delimited {@code String}",
                " \t */",
                "@@ -1168,6 +1182,6 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Convenience method to return a Collection as a CSV String.",
                "-\t * E.g. useful for {@code toString()} implementations.",
                "-\t * @param coll the Collection to display",
                "-\t * @return the delimited String",
                "+\t * Convert a {@code Collection} into a delimited {@code String} (e.g., CSV).",
                "+\t * <p>Useful for {@code toString()} implementations.",
                "+\t * @param coll the {@code Collection} to convert",
                "+\t * @return the delimited {@code String}",
                " \t */",
                "@@ -1178,7 +1192,7 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Convenience method to return a String array as a delimited (e.g. CSV)",
                "-\t * String. E.g. useful for {@code toString()} implementations.",
                "+\t * Convert a {@code String} array into a delimited {@code String} (e.g. CSV).",
                "+\t * <p>Useful for {@code toString()} implementations.",
                " \t * @param arr the array to display",
                "-\t * @param delim the delimiter to use (probably a \",\")",
                "-\t * @return the delimited String",
                "+\t * @param delim the delimiter to use (typically a \",\")",
                "+\t * @return the delimited {@code String}",
                " \t */",
                "@@ -1202,6 +1216,7 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Convenience method to return a String array as a CSV String.",
                "-\t * E.g. useful for {@code toString()} implementations.",
                "+\t * Convert a {@code String} array into a comma delimited {@code String}",
                "+\t * (i.e., CSV).",
                "+\t * <p>Useful for {@code toString()} implementations.",
                " \t * @param arr the array to display",
                "-\t * @return the delimited String",
                "+\t * @return the delimited {@code String}",
                " \t */"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/Assert.java",
                "spring-core/src/main/java/org/springframework/util/StringUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "5d54adfb9a3582d1d89f5979c514601fe787685b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522508639,
            "hunks": 46,
            "message": "Selective backport of annotation retrieval refinements (from 5.0.5) In particular AnnotationTypeFilter's ignoring of standard Java interfaces, AnnotationUtils.clearCache() and a few extra common classes in ClassUtils. Issue: SPR-16667 Issue: SPR-16675",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "index 294d765c1c..e26b1e23ff 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -419,3 +419,4 @@ class ConfigurationClassEnhancer {",
                " \t\tpublic boolean isMatch(Method candidateMethod) {",
                "-\t\t\treturn BeanAnnotationHelper.isBeanAnnotated(candidateMethod);",
                "+\t\t\treturn (candidateMethod.getDeclaringClass() != Object.class &&",
                "+\t\t\t\t\tBeanAnnotationHelper.isBeanAnnotated(candidateMethod));",
                " \t\t}",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index 01fec3f0d4..75f42f02de 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -31,2 +31,3 @@ import org.springframework.core.BridgeMethodResolver;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.CollectionUtils;",
                " import org.springframework.util.LinkedMultiValueMap;",
                "@@ -242,3 +243,2 @@ public class AnnotatedElementUtils {",
                " \t\t\tsearchWithGetSemantics(element, annotationType, annotationName, new SimpleAnnotationProcessor<Boolean>() {",
                "-",
                " \t\t\t\t@Override",
                "@@ -272,3 +272,2 @@ public class AnnotatedElementUtils {",
                " \t\t}",
                "-",
                " \t\treturn Boolean.TRUE.equals(searchWithGetSemantics(element, annotationType, null, alwaysTrueAnnotationProcessor));",
                "@@ -617,3 +616,2 @@ public class AnnotatedElementUtils {",
                " \t\t}",
                "-",
                " \t\treturn Boolean.TRUE.equals(searchWithFindSemantics(element, annotationType, null, alwaysTrueAnnotationProcessor));",
                "@@ -875,4 +873,4 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType,",
                "-\t\t\tString annotationName, Processor<T> processor) {",
                "+\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType, String annotationName, Processor<T> processor) {",
                "@@ -895,8 +893,9 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType,",
                "-\t\t\tString annotationName, Class<? extends Annotation> containerType, Processor<T> processor) {",
                "+\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType, String annotationName,",
                "+\t\t\tClass<? extends Annotation> containerType, Processor<T> processor) {",
                " \t\ttry {",
                "-\t\t\treturn searchWithGetSemantics(element, annotationType, annotationName, containerType, processor,",
                "-\t\t\t\t\tnew HashSet<AnnotatedElement>(), 0);",
                "+\t\t\treturn searchWithGetSemantics(element, annotationType, annotationName,",
                "+\t\t\t\t\tcontainerType, processor, new HashSet<AnnotatedElement>(), 0);",
                " \t\t}",
                "@@ -925,4 +924,5 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType,",
                "-\t\t\tString annotationName, Class<? extends Annotation> containerType, Processor<T> processor,",
                "+\tprivate static <T> T searchWithGetSemantics(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType, String annotationName,",
                "+\t\t\tClass<? extends Annotation> containerType, Processor<T> processor,",
                " \t\t\tSet<AnnotatedElement> visited, int metaDepth) {",
                "@@ -941,3 +941,3 @@ public class AnnotatedElementUtils {",
                "-\t\t\t\tif (element instanceof Class) { // otherwise getAnnotations doesn't return anything new",
                "+\t\t\t\tif (element instanceof Class) {  // otherwise getAnnotations does not return anything new",
                " \t\t\t\t\tList<Annotation> inheritedAnnotations = new ArrayList<Annotation>();",
                "@@ -988,5 +988,5 @@ public class AnnotatedElementUtils {",
                " \tprivate static <T> T searchWithGetSemanticsInAnnotations(AnnotatedElement element,",
                "-\t\t\tList<Annotation> annotations, Class<? extends Annotation> annotationType, String annotationName,",
                "-\t\t\tClass<? extends Annotation> containerType, Processor<T> processor, Set<AnnotatedElement> visited,",
                "-\t\t\tint metaDepth) {",
                "+\t\t\tList<Annotation> annotations, Class<? extends Annotation> annotationType,",
                "+\t\t\tString annotationName, Class<? extends Annotation> containerType,",
                "+\t\t\tProcessor<T> processor, Set<AnnotatedElement> visited, int metaDepth) {",
                "@@ -1056,3 +1056,4 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType,",
                "+\tprivate static <T> T searchWithFindSemantics(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType,",
                " \t\t\tString annotationName, Processor<T> processor) {",
                "@@ -1076,4 +1077,5 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T searchWithFindSemantics(AnnotatedElement element, Class<? extends Annotation> annotationType,",
                "-\t\t\tString annotationName, Class<? extends Annotation> containerType, Processor<T> processor) {",
                "+\tprivate static <T> T searchWithFindSemantics(AnnotatedElement element,",
                "+\t\t\tClass<? extends Annotation> annotationType, String annotationName,",
                "+\t\t\tClass<? extends Annotation> containerType, Processor<T> processor) {",
                "@@ -1085,4 +1087,4 @@ public class AnnotatedElementUtils {",
                " \t\ttry {",
                "-\t\t\treturn searchWithFindSemantics(",
                "-\t\t\t\t\telement, annotationType, annotationName, containerType, processor, new HashSet<AnnotatedElement>(), 0);",
                "+\t\t\treturn searchWithFindSemantics(element, annotationType, annotationName,",
                "+\t\t\t\t\tcontainerType, processor, new HashSet<AnnotatedElement>(), 0);",
                " \t\t}",
                "@@ -1122,29 +1124,31 @@ public class AnnotatedElementUtils {",
                " \t\t\t\tAnnotation[] annotations = element.getDeclaredAnnotations();",
                "-\t\t\t\tList<T> aggregatedResults = (processor.aggregates() ? new ArrayList<T>() : null);",
                "-",
                "-\t\t\t\t// Search in local annotations",
                "-\t\t\t\tfor (Annotation annotation : annotations) {",
                "-\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "-\t\t\t\t\t\tif (currentAnnotationType == annotationType ||",
                "-\t\t\t\t\t\t\t\tcurrentAnnotationType.getName().equals(annotationName) ||",
                "-\t\t\t\t\t\t\t\tprocessor.alwaysProcesses()) {",
                "-\t\t\t\t\t\t\tT result = processor.process(element, annotation, metaDepth);",
                "-\t\t\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\t\t\tif (processor.aggregates() && metaDepth == 0) {",
                "-\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "-\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t\telse {",
                "-\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\tif (annotations.length > 0) {",
                "+\t\t\t\t\tList<T> aggregatedResults = (processor.aggregates() ? new ArrayList<T>() : null);",
                "+",
                "+\t\t\t\t\t// Search in local annotations",
                "+\t\t\t\t\tfor (Annotation annotation : annotations) {",
                "+\t\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "+\t\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\t\t\t\t\tif (currentAnnotationType == annotationType ||",
                "+\t\t\t\t\t\t\t\t\tcurrentAnnotationType.getName().equals(annotationName) ||",
                "+\t\t\t\t\t\t\t\t\tprocessor.alwaysProcesses()) {",
                "+\t\t\t\t\t\t\t\tT result = processor.process(element, annotation, metaDepth);",
                "+\t\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\t\tif (aggregatedResults != null && metaDepth == 0) {",
                "+\t\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t\telse {",
                "+\t\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t// Repeatable annotations in container?",
                "-\t\t\t\t\t\telse if (currentAnnotationType == containerType) {",
                "-\t\t\t\t\t\t\tfor (Annotation contained : getRawAnnotationsFromContainer(element, annotation)) {",
                "-\t\t\t\t\t\t\t\tT result = processor.process(element, contained, metaDepth);",
                "-\t\t\t\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\t\t\t\t// No need to post-process since repeatable annotations within a",
                "-\t\t\t\t\t\t\t\t\t// container cannot be composed annotations.",
                "-\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t// Repeatable annotations in container?",
                "+\t\t\t\t\t\t\telse if (currentAnnotationType == containerType) {",
                "+\t\t\t\t\t\t\t\tfor (Annotation contained : getRawAnnotationsFromContainer(element, annotation)) {",
                "+\t\t\t\t\t\t\t\t\tT result = processor.process(element, contained, metaDepth);",
                "+\t\t\t\t\t\t\t\t\tif (aggregatedResults != null && result != null) {",
                "+\t\t\t\t\t\t\t\t\t\t// No need to post-process since repeatable annotations within a",
                "+\t\t\t\t\t\t\t\t\t\t// container cannot be composed annotations.",
                "+\t\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t\t}",
                "@@ -1153,17 +1157,17 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "-\t\t\t\t// Search in meta annotations on local annotations",
                "-\t\t\t\tfor (Annotation annotation : annotations) {",
                "-\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,",
                "-\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth + 1);",
                "-\t\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\t\tprocessor.postProcess(currentAnnotationType, annotation, result);",
                "-\t\t\t\t\t\t\tif (processor.aggregates() && metaDepth == 0) {",
                "-\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\telse {",
                "-\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t// Recursively search in meta-annotations",
                "+\t\t\t\t\tfor (Annotation annotation : annotations) {",
                "+\t\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "+\t\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\t\t\t\t\tT result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth + 1);",
                "+\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\tprocessor.postProcess(currentAnnotationType, annotation, result);",
                "+\t\t\t\t\t\t\t\tif (aggregatedResults != null && metaDepth == 0) {",
                "+\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\telse {",
                "+\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t}",
                "@@ -1171,7 +1175,7 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "-\t\t\t\tif (processor.aggregates()) {",
                "-\t\t\t\t\t// Prepend to support top-down ordering within class hierarchies",
                "-\t\t\t\t\tprocessor.getAggregatedResults().addAll(0, aggregatedResults);",
                "+\t\t\t\t\tif (!CollectionUtils.isEmpty(aggregatedResults)) {",
                "+\t\t\t\t\t\t// Prepend to support top-down ordering within class hierarchies",
                "+\t\t\t\t\t\tprocessor.getAggregatedResults().addAll(0, aggregatedResults);",
                "+\t\t\t\t\t}",
                " \t\t\t\t}",
                "@@ -1180,2 +1184,3 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tMethod method = (Method) element;",
                "+\t\t\t\t\tT result;",
                "@@ -1183,6 +1188,8 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tMethod resolvedMethod = BridgeMethodResolver.findBridgedMethod(method);",
                "-\t\t\t\t\tT result = searchWithFindSemantics(resolvedMethod, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "-\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\tif (resolvedMethod != method) {",
                "+\t\t\t\t\t\tresult = searchWithFindSemantics(resolvedMethod, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "@@ -1191,6 +1198,8 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tClass<?>[] ifcs = method.getDeclaringClass().getInterfaces();",
                "-\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType, processor,",
                "-\t\t\t\t\t\t\tvisited, metaDepth, ifcs);",
                "-\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\tif (ifcs.length > 0) {",
                "+\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth, ifcs);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "@@ -1204,3 +1213,2 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t\t}",
                "-",
                " \t\t\t\t\t\ttry {",
                "@@ -1217,6 +1225,5 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t\t}",
                "-",
                " \t\t\t\t\t\t// Search on interfaces declared on superclass",
                "-\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType, processor,",
                "-\t\t\t\t\t\t\t\tvisited, metaDepth, clazz.getInterfaces());",
                "+\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth, clazz.getInterfaces());",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1231,4 +1238,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tfor (Class<?> ifc : clazz.getInterfaces()) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(ifc, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "+\t\t\t\t\t\tT result = searchWithFindSemantics(ifc, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1241,4 +1248,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tif (superclass != null && Object.class != superclass) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(superclass, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "+\t\t\t\t\t\tT result = searchWithFindSemantics(superclass, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                " \t\t\t\t\t\tif (result != null) {",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index ed091d85d6..971568dab0 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -147,3 +147,3 @@ public abstract class AnnotationUtils {",
                " \t * {@code find*()} methods instead.",
                "-\t * @param ann the Annotation to check",
                "+\t * @param annotation the Annotation to check",
                " \t * @param annotationType the annotation type to look for, both locally and as a meta-annotation",
                "@@ -153,7 +153,7 @@ public abstract class AnnotationUtils {",
                " \t@SuppressWarnings(\"unchecked\")",
                "-\tpublic static <A extends Annotation> A getAnnotation(Annotation ann, Class<A> annotationType) {",
                "-\t\tif (annotationType.isInstance(ann)) {",
                "-\t\t\treturn synthesizeAnnotation((A) ann);",
                "+\tpublic static <A extends Annotation> A getAnnotation(Annotation annotation, Class<A> annotationType) {",
                "+\t\tif (annotationType.isInstance(annotation)) {",
                "+\t\t\treturn synthesizeAnnotation((A) annotation);",
                " \t\t}",
                "-\t\tClass<? extends Annotation> annotatedElement = ann.annotationType();",
                "+\t\tClass<? extends Annotation> annotatedElement = annotation.annotationType();",
                " \t\ttry {",
                "@@ -570,3 +570,2 @@ public abstract class AnnotationUtils {",
                " \t\t\tresult = findAnnotation((AnnotatedElement) resolvedMethod, annotationType);",
                "-",
                " \t\t\tif (result == null) {",
                "@@ -605,6 +604,6 @@ public abstract class AnnotationUtils {",
                " \t\tA annotation = null;",
                "-\t\tfor (Class<?> iface : ifcs) {",
                "-\t\t\tif (isInterfaceWithAnnotatedMethods(iface)) {",
                "+\t\tfor (Class<?> ifc : ifcs) {",
                "+\t\t\tif (isInterfaceWithAnnotatedMethods(ifc)) {",
                " \t\t\t\ttry {",
                "-\t\t\t\t\tMethod equivalentMethod = iface.getMethod(method.getName(), method.getParameterTypes());",
                "+\t\t\t\t\tMethod equivalentMethod = ifc.getMethod(method.getName(), method.getParameterTypes());",
                " \t\t\t\t\tannotation = getAnnotation(equivalentMethod, annotationType);",
                "@@ -622,4 +621,4 @@ public abstract class AnnotationUtils {",
                "-\tstatic boolean isInterfaceWithAnnotatedMethods(Class<?> iface) {",
                "-\t\tBoolean found = annotatedInterfaceCache.get(iface);",
                "+\tstatic boolean isInterfaceWithAnnotatedMethods(Class<?> ifc) {",
                "+\t\tBoolean found = annotatedInterfaceCache.get(ifc);",
                " \t\tif (found != null) {",
                "@@ -628,3 +627,3 @@ public abstract class AnnotationUtils {",
                " \t\tfound = Boolean.FALSE;",
                "-\t\tfor (Method ifcMethod : iface.getMethods()) {",
                "+\t\tfor (Method ifcMethod : ifc.getMethods()) {",
                " \t\t\ttry {",
                "@@ -639,3 +638,3 @@ public abstract class AnnotationUtils {",
                " \t\t}",
                "-\t\tannotatedInterfaceCache.put(iface, found);",
                "+\t\tannotatedInterfaceCache.put(ifc, found);",
                " \t\treturn found;",
                "@@ -1288,3 +1287,2 @@ public abstract class AnnotationUtils {",
                " \t\t\t\tboolean valuePresent = (value != null && !(value instanceof DefaultValueHolder));",
                "-",
                " \t\t\t\tfor (String aliasedAttributeName : aliasMap.get(attributeName)) {",
                "@@ -1293,6 +1291,4 @@ public abstract class AnnotationUtils {",
                " \t\t\t\t\t}",
                "-",
                " \t\t\t\t\tObject aliasedValue = attributes.get(aliasedAttributeName);",
                " \t\t\t\t\tboolean aliasPresent = (aliasedValue != null && !(aliasedValue instanceof DefaultValueHolder));",
                "-",
                " \t\t\t\t\t// Something to validate or replace with an alias?",
                "@@ -1921,2 +1917,16 @@ public abstract class AnnotationUtils {",
                "+\t/**",
                "+\t * Clear the internal annotation metadata cache.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tpublic static void clearCache() {",
                "+\t\tfindAnnotationCache.clear();",
                "+\t\tmetaPresentCache.clear();",
                "+\t\tannotatedInterfaceCache.clear();",
                "+\t\tsynthesizableCache.clear();",
                "+\t\tattributeAliasesCache.clear();",
                "+\t\tattributeMethodsCache.clear();",
                "+\t\taliasDescriptorCache.clear();",
                "+\t}",
                "+",
                "diff --git a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "index 2b2faa4d05..9aaea29032 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2015 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -72,3 +72,5 @@ public class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter",
                " \t */",
                "-\tpublic AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {",
                "+\tpublic AnnotationTypeFilter(",
                "+\t\t\tClass<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {",
                "+",
                " \t\tsuper(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces);",
                "@@ -101,2 +103,7 @@ public class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter",
                " \t\telse if (typeName.startsWith(\"java\")) {",
                "+\t\t\tif (!this.annotationType.getName().startsWith(\"java\")) {",
                "+\t\t\t\t// Standard Java types do not have non-standard annotations on them ->",
                "+\t\t\t\t// skip any load attempt, in particular for Java language interfaces.",
                "+\t\t\t\treturn false;",
                "+\t\t\t}",
                " \t\t\ttry {",
                "diff --git a/spring-core/src/main/java/org/springframework/util/ClassUtils.java b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "index 07481ed13b..89418ced65 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "@@ -114,3 +114,3 @@ public abstract class ClassUtils {",
                "-\t\tSet<Class<?>> primitiveTypes = new HashSet<Class<?>>(32);",
                "+\t\tSet<Class<?>> primitiveTypes = new HashSet<Class<?>>(64);",
                " \t\tprimitiveTypes.addAll(primitiveWrapperTypeMap.values());",
                "@@ -127,5 +127,6 @@ public abstract class ClassUtils {",
                " \t\tregisterCommonClasses(Number.class, Number[].class, String.class, String[].class,",
                "-\t\t\t\tObject.class, Object[].class, Class.class, Class[].class);",
                "+\t\t\t\tClass.class, Class[].class, Object.class, Object[].class);",
                " \t\tregisterCommonClasses(Throwable.class, Exception.class, RuntimeException.class,",
                " \t\t\t\tError.class, StackTraceElement.class, StackTraceElement[].class);",
                "+\t\tregisterCommonClasses(Enum.class, Iterable.class, Cloneable.class, Comparable.class);",
                " \t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassEnhancer.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "spring-core/src/main/java/org/springframework/util/ClassUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c072c6deb5697a0ffc862f8ed80aac13d20d6c50",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522163223,
            "hunks": 9,
            "message": "Refined javadoc for SimpleEvaluationContext and its builder features Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 265588a61a..a1f9251c11 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -29,3 +29,2 @@ import org.springframework.expression.ConstructorResolver;",
                " import org.springframework.expression.EvaluationContext;",
                "-import org.springframework.expression.Expression;",
                " import org.springframework.expression.MethodResolver;",
                "@@ -66,11 +65,13 @@ import org.springframework.lang.Nullable;",
                "  * write access is needed as well. Alternatively, configure custom accessors",
                "- * via {@link SimpleEvaluationContext#forPropertyAccessors}.",
                "+ * via {@link SimpleEvaluationContext#forPropertyAccessors}, and potentially",
                "+ * activate method resolution and/or a type converter through the builder.",
                "  *",
                "- * <p>Note that {@code SimpleEvaluationContext} cannot be configured with",
                "- * a default root object. Instead it is meant to be created once and used",
                "- * repeatedly through {@code getValue} calls on a pre-compiled",
                "+ * <p>Note that {@code SimpleEvaluationContext} is typically not configured",
                "+ * with a default root object. Instead it is meant to be created once and",
                "+ * used repeatedly through {@code getValue} calls on a pre-compiled",
                "  * {@link org.springframework.expression.Expression} with both an",
                "- * {@code EvaluationContext} and a root object as arguments",
                "+ * {@code EvaluationContext} and a root object as arguments:",
                "+ * {@link org.springframework.expression.Expression#getValue(EvaluationContext, Object)}.",
                "  *",
                "- * <p>For more flexibility, in particular for internal configuration",
                "+ * <p>For more power and flexibility, in particular for internal configuration",
                "  * scenarios, consider using {@link StandardEvaluationContext} instead.",
                "@@ -330,4 +331,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "-\t\t * @see Expression#getValue(EvaluationContext)",
                "-\t\t * @see Expression#getValue(EvaluationContext, Object)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext, Object)",
                " \t\t */",
                "@@ -341,4 +342,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t * <p>Default is none, expecting an object argument at evaluation time.",
                "-\t\t * @see Expression#getValue(EvaluationContext)",
                "-\t\t * @see Expression#getValue(EvaluationContext, Object)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext)",
                "+\t\t * @see org.springframework.expression.Expression#getValue(EvaluationContext, Object)",
                " \t\t */",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "index abfd18313c..c8cbac7ef0 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "@@ -40,7 +40,10 @@ import org.springframework.util.Assert;",
                " /**",
                "- * A highly configurable {@link EvaluationContext} implementation.",
                "- *",
                "- * <p>This context uses standard implementations of all applicable strategies,",
                "+ * A powerful and highly configurable {@link EvaluationContext} implementation.",
                "+ * This context uses standard implementations of all applicable strategies,",
                "  * based on reflection to resolve properties, methods and fields.",
                "  *",
                "+ * <p>For a simpler builder-style context variant for data-binding purposes,",
                "+ * consider using {@link SimpleEvaluationContext} instead which allows for",
                "+ * opting into several SpEL features as needed by specific evaluation cases.",
                "+ *",
                "  * @author Andy Clement"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4454ffd2b103b939a890ea7330bf192a32eec622",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522509464,
            "hunks": 3,
            "message": "Replace remaining use of block operator",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "index fe6057cf03..216ecf7a0c 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,2 +23,4 @@ import java.util.stream.Collectors;",
                "+import reactor.core.publisher.MonoProcessor;",
                "+",
                " import org.springframework.core.DefaultParameterNameDiscoverer;",
                "@@ -100,4 +102,17 @@ public class SyncInvocableHandlerMethod extends HandlerMethod {",
                "-\t\t// This will not block with only sync resolvers allowed",
                "-\t\treturn this.delegate.invoke(exchange, bindingContext, providedArgs).block();",
                "+\t\tMonoProcessor<HandlerResult> processor = MonoProcessor.create();",
                "+\t\tthis.delegate.invoke(exchange, bindingContext, providedArgs).subscribeWith(processor);",
                "+",
                "+\t\tif (processor.isTerminated()) {",
                "+\t\t\tThrowable error = processor.getError();",
                "+\t\t\tif (error != null) {",
                "+\t\t\t\tthrow (RuntimeException) error;",
                "+\t\t\t}",
                "+\t\t\treturn processor.peek();",
                "+\t\t}",
                "+\t\telse {",
                "+\t\t\t// Should never happen...",
                "+\t\t\tthrow new IllegalStateException(",
                "+\t\t\t\t\t\"SyncInvocableHandlerMethod should have completed synchronously.\");",
                "+\t\t}",
                " \t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "e6020ed3777fe5d99e0c9333185f7f5ad143b9c9",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522272157,
            "hunks": 5,
            "message": "avoid unnecessary autoboxing",
            "diff": [
                "diff --git a/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "index 56b6358ccb..7276ec7843 100644",
                "--- a/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "+++ b/spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "@@ -84,3 +84,3 @@ public abstract class AopNamespaceUtils {",
                " \t\tif (sourceElement != null) {",
                "-\t\t\tboolean proxyTargetClass = Boolean.valueOf(sourceElement.getAttribute(PROXY_TARGET_CLASS_ATTRIBUTE));",
                "+\t\t\tboolean proxyTargetClass = Boolean.parseBoolean(sourceElement.getAttribute(PROXY_TARGET_CLASS_ATTRIBUTE));",
                " \t\t\tif (proxyTargetClass) {",
                "@@ -88,3 +88,3 @@ public abstract class AopNamespaceUtils {",
                " \t\t\t}",
                "-\t\t\tboolean exposeProxy = Boolean.valueOf(sourceElement.getAttribute(EXPOSE_PROXY_ATTRIBUTE));",
                "+\t\t\tboolean exposeProxy = Boolean.parseBoolean(sourceElement.getAttribute(EXPOSE_PROXY_ATTRIBUTE));",
                " \t\t\tif (exposeProxy) {",
                "diff --git a/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java b/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "index a2a73b6112..6fcd8ed625 100644",
                "--- a/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "+++ b/spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "@@ -354,3 +354,3 @@ public class CronSequenceGenerator {",
                " \t\t\t\t}",
                "-\t\t\t\tint delta = Integer.valueOf(split[1]);",
                "+\t\t\t\tint delta = Integer.parseInt(split[1]);",
                " \t\t\t\tif (delta <= 0) {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "index 5c27570615..50bc3c5d6b 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "@@ -78,3 +78,3 @@ class ViewControllerBeanDefinitionParser implements BeanDefinitionParser {",
                " \t\tif (element.hasAttribute(\"status-code\")) {",
                "-\t\t\tint statusValue = Integer.valueOf(element.getAttribute(\"status-code\"));",
                "+\t\t\tint statusValue = Integer.parseInt(element.getAttribute(\"status-code\"));",
                " \t\t\tstatusCode = HttpStatus.valueOf(statusValue);",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java",
                "index f97d2bb6ac..d599ec52dc 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java",
                "@@ -123,3 +123,3 @@ public class WebContentInterceptor extends WebContentGenerator implements Handle",
                " \t\t\tString path = (String) propNames.nextElement();",
                "-\t\t\tint cacheSeconds = Integer.valueOf(cacheMappings.getProperty(path));",
                "+\t\t\tint cacheSeconds = Integer.parseInt(cacheMappings.getProperty(path));",
                " \t\t\tthis.cacheMappings.put(path, cacheSeconds);"
            ],
            "changed_files": [
                "spring-aop/src/main/java/org/springframework/aop/config/AopNamespaceUtils.java",
                "spring-context/src/main/java/org/springframework/scheduling/support/CronSequenceGenerator.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewControllerBeanDefinitionParser.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/WebContentInterceptor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "842c29103f0289ae7517e78052460a9517ed4bfd",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521229944,
            "hunks": 4,
            "message": "MultipartBodyBuilder supports PublisherEntity as input Issue: SPR-16601",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/client/MultipartBodyBuilder.java b/spring-web/src/main/java/org/springframework/http/client/MultipartBodyBuilder.java",
                "index f9429225d9..1835f288e3 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/client/MultipartBodyBuilder.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/client/MultipartBodyBuilder.java",
                "@@ -93,2 +93,8 @@ public final class MultipartBodyBuilder {",
                "+\t\tif (part instanceof PublisherEntity<?,?>) {",
                "+\t\t\tPublisherPartBuilder<?, ?> builder = new PublisherPartBuilder<>((PublisherEntity<?, ?>) part);",
                "+\t\t\tthis.parts.add(name, builder);",
                "+\t\t\treturn builder;",
                "+\t\t}",
                "+",
                " \t\tObject partBody;",
                "@@ -156,3 +162,3 @@ public final class MultipartBodyBuilder {",
                " \t\tHttpHeaders headers = new HttpHeaders();",
                "-\t\tPublisherPartBuilder<T, P> builder = new PublisherPartBuilder<>(publisher, typeReference, headers);",
                "+\t\tPublisherPartBuilder<T, P> builder = new PublisherPartBuilder<>(headers, publisher, typeReference);",
                " \t\tthis.parts.add(name, builder);",
                "@@ -241,3 +247,3 @@ public final class MultipartBodyBuilder {",
                "-\t\tpublic PublisherPartBuilder(P body, ParameterizedTypeReference<S> typeReference, HttpHeaders headers) {",
                "+\t\tpublic PublisherPartBuilder(HttpHeaders headers, P body, ParameterizedTypeReference<S> typeReference) {",
                " \t\t\tsuper(headers, body);",
                "@@ -246,2 +252,8 @@ public final class MultipartBodyBuilder {",
                "+\t\tpublic PublisherPartBuilder(PublisherEntity<S, P> other) {",
                "+\t\t\tsuper(other.getHeaders(), other.getBody());",
                "+\t\t\tthis.resolvableType = other.getResolvableType();",
                "+\t\t}",
                "+",
                "+",
                " \t\t@Override"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/client/MultipartBodyBuilder.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9b7fd8be4d20520f12a2614057629884d2d8a5f4",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429744731,
            "hunks": 5,
            "message": "Polish Javadoc for AnnotationUtils",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 9db91d5ff1..9cc25cd357 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -665,3 +665,3 @@ public abstract class AnnotationUtils {",
                " \t * @param classValuesAsString whether to turn Class references into Strings (for",
                "-\t * compatibility with {@link org.springframework.core.type.AnnotationMetadata}",
                "+\t * compatibility with {@link org.springframework.core.type.AnnotationMetadata})",
                " \t * or to preserve them as Class references",
                "@@ -682,3 +682,3 @@ public abstract class AnnotationUtils {",
                " \t * @param classValuesAsString whether to convert Class references into Strings (for",
                "-\t * compatibility with {@link org.springframework.core.type.AnnotationMetadata}",
                "+\t * compatibility with {@link org.springframework.core.type.AnnotationMetadata})",
                " \t * or to preserve them as Class references",
                "@@ -686,3 +686,3 @@ public abstract class AnnotationUtils {",
                " \t * {@link AnnotationAttributes} maps (for compatibility with",
                "-\t * {@link org.springframework.core.type.AnnotationMetadata} or to preserve them as",
                "+\t * {@link org.springframework.core.type.AnnotationMetadata}) or to preserve them as",
                " \t * Annotation instances",
                "@@ -716,3 +716,3 @@ public abstract class AnnotationUtils {",
                " \t * @param classValuesAsString whether to turn Class references into Strings (for",
                "-\t * compatibility with {@link org.springframework.core.type.AnnotationMetadata}",
                "+\t * compatibility with {@link org.springframework.core.type.AnnotationMetadata})",
                " \t * or to preserve them as Class references",
                "@@ -720,3 +720,3 @@ public abstract class AnnotationUtils {",
                " \t * {@link AnnotationAttributes} maps (for compatibility with",
                "-\t * {@link org.springframework.core.type.AnnotationMetadata} or to preserve them as",
                "+\t * {@link org.springframework.core.type.AnnotationMetadata}) or to preserve them as",
                " \t * Annotation instances"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "af272c212419a373d09078eb717e5f2195962f53",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429102696,
            "hunks": 9,
            "message": "HttpEntity and its subclasses insist on same target type for equality Issue: SPR-12910",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/http/HttpEntity.java b/spring-web/src/main/java/org/springframework/http/HttpEntity.java",
                "index 98d566f1ff..d9697697f0 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/HttpEntity.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/HttpEntity.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -24,3 +24,4 @@ import org.springframework.util.ObjectUtils;",
                "  *",
                "- * <p>Typically used in combination with the {@link org.springframework.web.client.RestTemplate RestTemplate}, like so:",
                "+ * <p>Typically used in combination with the {@link org.springframework.web.client.RestTemplate},",
                "+ * like so:",
                "  * <pre class=\"code\">",
                "@@ -48,2 +49,3 @@ import org.springframework.util.ObjectUtils;",
                "  * @author Arjen Poutsma",
                "+ * @author Juergen Hoeller",
                "  * @since 3.0.2",
                "@@ -125,2 +127,3 @@ public class HttpEntity<T> {",
                "+",
                " \t@Override",
                "@@ -130,3 +133,3 @@ public class HttpEntity<T> {",
                " \t\t}",
                "-\t\tif (!(other instanceof HttpEntity)) {",
                "+\t\tif (other == null || !other.getClass().equals(getClass())) {",
                " \t\t\treturn false;",
                "diff --git a/spring-web/src/main/java/org/springframework/http/RequestEntity.java b/spring-web/src/main/java/org/springframework/http/RequestEntity.java",
                "index 79fb09e9e4..3ddb55d634 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/RequestEntity.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/RequestEntity.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -135,3 +135,3 @@ public class RequestEntity<T> extends HttpEntity<T> {",
                " \t\t}",
                "-\t\tif (!(other instanceof RequestEntity) || !super.equals(other)) {",
                "+\t\tif (!super.equals(other)) {",
                " \t\t\treturn false;",
                "diff --git a/spring-web/src/main/java/org/springframework/http/ResponseEntity.java b/spring-web/src/main/java/org/springframework/http/ResponseEntity.java",
                "index c751dcbd17..50027872cd 100644",
                "--- a/spring-web/src/main/java/org/springframework/http/ResponseEntity.java",
                "+++ b/spring-web/src/main/java/org/springframework/http/ResponseEntity.java",
                "@@ -119,2 +119,3 @@ public class ResponseEntity<T> extends HttpEntity<T> {",
                "+",
                " \t@Override",
                "@@ -124,3 +125,3 @@ public class ResponseEntity<T> extends HttpEntity<T> {",
                " \t\t}",
                "-\t\tif (!(other instanceof ResponseEntity) || !super.equals(other)) {",
                "+\t\tif (!super.equals(other)) {",
                " \t\t\treturn false;"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/http/HttpEntity.java",
                "spring-web/src/main/java/org/springframework/http/RequestEntity.java",
                "spring-web/src/main/java/org/springframework/http/ResponseEntity.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7f0f04dfe38ead84e502f0d34897d1c415565cdd",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429731126,
            "hunks": 30,
            "message": "Support annotations on interfaces in AnnotatedElementUtils This commit introduces support in AnnotatedElementUtils for finding annotations declared on interfaces at the type level. NB: this commit does not include support for finding annotations declared on interface methods. In order to maintain backward compatibility with @Transactional annotation attribute processing, a new getAnnotationAttributes() method has been added to AnnotatedElementUtils that provides a flag to control whether interfaces should be searched. SpringTransactionAnnotationParser and JtaTransactionAnnotationParser have been updated accordingly to ensure that interfaces are not unintentionally searched in the @Transactional resolution process. This commit also introduces additional tests and updates TODOs for SPR-12738. Issue: SPR-12944, SPR-12738",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index b7a528609d..2cc0564c7b 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -29,4 +29,4 @@ import org.springframework.util.MultiValueMap;",
                " /**",
                "- * Utility class used to collect all annotation values including those declared on",
                "- * meta-annotations.",
                "+ * Utility class used to collect all annotation attributes, including those",
                "+ * declared on meta-annotations.",
                "  *",
                "@@ -41,3 +41,3 @@ public class AnnotatedElementUtils {",
                " \t\tfinal Set<String> types = new LinkedHashSet<String>();",
                "-\t\tprocess(element, annotationType, false, new Processor<Object>() {",
                "+\t\tprocess(element, annotationType, true, false, new Processor<Object>() {",
                " \t\t\t@Override",
                "@@ -57,3 +57,3 @@ public class AnnotatedElementUtils {",
                " \tpublic static boolean hasMetaAnnotationTypes(AnnotatedElement element, String annotationType) {",
                "-\t\treturn Boolean.TRUE.equals(process(element, annotationType, false, new Processor<Boolean>() {",
                "+\t\treturn Boolean.TRUE.equals(process(element, annotationType, true, false, new Processor<Boolean>() {",
                " \t\t\t@Override",
                "@@ -72,3 +72,3 @@ public class AnnotatedElementUtils {",
                " \tpublic static boolean isAnnotated(AnnotatedElement element, String annotationType) {",
                "-\t\treturn Boolean.TRUE.equals(process(element, annotationType, false, new Processor<Boolean>() {",
                "+\t\treturn Boolean.TRUE.equals(process(element, annotationType, true, false, new Processor<Boolean>() {",
                " \t\t\t@Override",
                "@@ -83,2 +83,10 @@ public class AnnotatedElementUtils {",
                "+\t/**",
                "+\t * Delegates to {@link #getAnnotationAttributes(AnnotatedElement, String, boolean, boolean)},",
                "+\t * supplying {@code false} for {@code classValuesAsString} and {@code nestedAnnotationsAsMap}.",
                "+\t *",
                "+\t * @param element the annotated element",
                "+\t * @param annotationType the annotation type to find",
                "+\t * @see #getAnnotationAttributes(AnnotatedElement, String, boolean, boolean)",
                "+\t */",
                " \tpublic static AnnotationAttributes getAnnotationAttributes(AnnotatedElement element, String annotationType) {",
                "@@ -87,6 +95,43 @@ public class AnnotatedElementUtils {",
                "+\t/**",
                "+\t * Delegates to {@link #getAnnotationAttributes(AnnotatedElement, String, boolean, boolean, boolean, boolean)},",
                "+\t * supplying {@code true} for {@code searchInterfaces} and {@code false} for {@code searchClassHierarchy}.",
                "+\t *",
                "+\t * @param element the annotated element",
                "+\t * @param annotationType the annotation type to find",
                "+\t * @param classValuesAsString whether to convert Class references into",
                "+\t * Strings or to preserve them as Class references",
                "+\t * @param nestedAnnotationsAsMap whether to turn nested Annotation instances",
                "+\t * into {@link AnnotationAttributes} maps or to preserve them as Annotation",
                "+\t * instances",
                "+\t * @see #getAnnotationAttributes(AnnotatedElement, String, boolean, boolean, boolean, boolean)",
                "+\t */",
                " \tpublic static AnnotationAttributes getAnnotationAttributes(AnnotatedElement element, String annotationType,",
                "-\t\t\tfinal boolean classValuesAsString, final boolean nestedAnnotationsAsMap) {",
                "+\t\t\tboolean classValuesAsString, boolean nestedAnnotationsAsMap) {",
                "+\t\treturn getAnnotationAttributes(element, annotationType, true, false, classValuesAsString,",
                "+\t\t\tnestedAnnotationsAsMap);",
                "+\t}",
                "-\t\treturn process(element, annotationType, false, new Processor<AnnotationAttributes>() {",
                "+\t/**",
                "+\t * Find annotation attributes of the specified {@code annotationType} in",
                "+\t * the annotation hierarchy of the supplied {@link AnnotatedElement},",
                "+\t * and merge the results into an {@link AnnotationAttributes} map.",
                "+\t *",
                "+\t * @param element the annotated element",
                "+\t * @param annotationType the annotation type to find",
                "+\t * @param searchInterfaces whether or not to search on interfaces, if the",
                "+\t * annotated element is a class",
                "+\t * @param searchClassHierarchy whether or not to search the class hierarchy",
                "+\t * recursively, if the annotated element is a class",
                "+\t * @param classValuesAsString whether to convert Class references into",
                "+\t * Strings or to preserve them as Class references",
                "+\t * @param nestedAnnotationsAsMap whether to turn nested Annotation instances",
                "+\t * into {@link AnnotationAttributes} maps or to preserve them as Annotation",
                "+\t * instances",
                "+\t */",
                "+\tpublic static AnnotationAttributes getAnnotationAttributes(AnnotatedElement element, String annotationType,",
                "+\t\t\tboolean searchInterfaces, boolean searchClassHierarchy, final boolean classValuesAsString,",
                "+\t\t\tfinal boolean nestedAnnotationsAsMap) {",
                "+",
                "+\t\treturn process(element, annotationType, searchInterfaces, searchClassHierarchy, new Processor<AnnotationAttributes>() {",
                " \t\t\t@Override",
                "@@ -117,3 +162,3 @@ public class AnnotatedElementUtils {",
                " \t\tfinal MultiValueMap<String, Object> attributes = new LinkedMultiValueMap<String, Object>();",
                "-\t\tprocess(element, annotationType, false, new Processor<Void>() {",
                "+\t\tprocess(element, annotationType, true, false, new Processor<Void>() {",
                " \t\t\t@Override",
                "@@ -146,3 +191,4 @@ public class AnnotatedElementUtils {",
                " \t * recursively all meta-annotations on the specified {@code element}.",
                "-\t * <p>If the {@code traverseClassHierarchy} flag is {@code true} and the sought",
                "+\t *",
                "+\t * <p>If the {@code searchClassHierarchy} flag is {@code true} and the sought",
                " \t * annotation is neither <em>directly present</em> on the given element nor",
                "@@ -150,6 +196,9 @@ public class AnnotatedElementUtils {",
                " \t * recursively search through the class hierarchy of the given element.",
                "+\t *",
                " \t * @param element the annotated element",
                " \t * @param annotationType the annotation type to find",
                "-\t * @param traverseClassHierarchy whether or not to traverse up the class",
                "-\t * hierarchy recursively",
                "+\t * @param searchInterfaces whether or not to search on interfaces, if the",
                "+\t * annotated element is a class",
                "+\t * @param searchClassHierarchy whether or not to search the class hierarchy",
                "+\t * recursively, if the annotated element is a class",
                " \t * @param processor the processor to delegate to",
                "@@ -157,7 +206,7 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T process(AnnotatedElement element, String annotationType, boolean traverseClassHierarchy,",
                "-\t\t\tProcessor<T> processor) {",
                "+\tprivate static <T> T process(AnnotatedElement element, String annotationType, boolean searchInterfaces,",
                "+\t\t\tboolean searchClassHierarchy, Processor<T> processor) {",
                " \t\ttry {",
                "-\t\t\treturn doProcess(element, annotationType, traverseClassHierarchy, processor,",
                "+\t\t\treturn doProcess(element, annotationType, searchInterfaces, searchClassHierarchy, processor,",
                " \t\t\t\t\tnew HashSet<AnnotatedElement>(), 0);",
                "@@ -173,2 +222,3 @@ public class AnnotatedElementUtils {",
                " \t * <em>visited</em>.",
                "+\t *",
                " \t * <p>The {@code metaDepth} parameter represents the depth of the annotation",
                "@@ -177,6 +227,9 @@ public class AnnotatedElementUtils {",
                " \t * will have a depth of 1; and a meta-meta-annotation will have a depth of 2.",
                "+\t *",
                " \t * @param element the annotated element",
                " \t * @param annotationType the annotation type to find",
                "-\t * @param traverseClassHierarchy whether or not to traverse up the class",
                "-\t * hierarchy recursively",
                "+\t * @param searchInterfaces whether or not to search on interfaces, if the",
                "+\t * annotated element is a class",
                "+\t * @param searchClassHierarchy whether or not to search the class hierarchy",
                "+\t * recursively, if the annotated element is a class",
                " \t * @param processor the processor to delegate to",
                "@@ -186,4 +239,4 @@ public class AnnotatedElementUtils {",
                " \t */",
                "-\tprivate static <T> T doProcess(AnnotatedElement element, String annotationType, boolean traverseClassHierarchy,",
                "-\t\t\tProcessor<T> processor, Set<AnnotatedElement> visited, int metaDepth) {",
                "+\tprivate static <T> T doProcess(AnnotatedElement element, String annotationType, boolean searchInterfaces,",
                "+\t\t\tboolean searchClassHierarchy, Processor<T> processor, Set<AnnotatedElement> visited, int metaDepth) {",
                "@@ -191,4 +244,8 @@ public class AnnotatedElementUtils {",
                " \t\t\ttry {",
                "+",
                "+\t\t\t\t// Local annotations: either directly declared or inherited.",
                " \t\t\t\tAnnotation[] annotations =",
                "-\t\t\t\t\t\t(traverseClassHierarchy ? element.getDeclaredAnnotations() : element.getAnnotations());",
                "+\t\t\t\t\t\t(searchClassHierarchy ? element.getDeclaredAnnotations() : element.getAnnotations());",
                "+",
                "+\t\t\t\t// Search in local annotations",
                " \t\t\t\tfor (Annotation annotation : annotations) {",
                "@@ -199,4 +256,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\tresult = doProcess(annotation.annotationType(), annotationType, traverseClassHierarchy,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth + 1);",
                "+\t\t\t\t\t\tresult = doProcess(annotation.annotationType(), annotationType, searchInterfaces,",
                "+\t\t\t\t\t\t\tsearchClassHierarchy, processor, visited, metaDepth + 1);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -207,6 +264,8 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t}",
                "+",
                "+\t\t\t\t// Search in meta annotations on location annotations",
                " \t\t\t\tfor (Annotation annotation : annotations) {",
                " \t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(annotation)) {",
                "-\t\t\t\t\t\tT result = doProcess(annotation.annotationType(), annotationType, traverseClassHierarchy,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "+\t\t\t\t\t\tT result = doProcess(annotation.annotationType(), annotationType, searchInterfaces,",
                "+\t\t\t\t\t\t\tsearchClassHierarchy, processor, visited, metaDepth);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -217,6 +276,21 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t}",
                "-\t\t\t\tif (traverseClassHierarchy && element instanceof Class) {",
                "+",
                "+\t\t\t\t// Search on interfaces",
                "+\t\t\t\tif (searchInterfaces && element instanceof Class) {",
                "+\t\t\t\t\tClass<?> clazz = (Class<?>) element;",
                "+\t\t\t\t\tfor (Class<?> ifc : clazz.getInterfaces()) {",
                "+\t\t\t\t\t\tT result = doProcess(ifc, annotationType, searchInterfaces, searchClassHierarchy, processor,",
                "+\t\t\t\t\t\t\tvisited, metaDepth);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+",
                "+\t\t\t\t// Search on superclass",
                "+\t\t\t\tif (searchClassHierarchy && element instanceof Class) {",
                " \t\t\t\t\tClass<?> superclass = ((Class<?>) element).getSuperclass();",
                " \t\t\t\t\tif (superclass != null && !superclass.equals(Object.class)) {",
                "-\t\t\t\t\t\tT result = doProcess(superclass, annotationType, true, processor, visited, metaDepth);",
                "+\t\t\t\t\t\tT result = doProcess(superclass, annotationType, searchInterfaces, searchClassHierarchy,",
                "+\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                " \t\t\t\t\t\tif (result != null) {",
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/annotation/JtaTransactionAnnotationParser.java b/spring-tx/src/main/java/org/springframework/transaction/annotation/JtaTransactionAnnotationParser.java",
                "index 8b05331450..a175bf97db 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/annotation/JtaTransactionAnnotationParser.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/annotation/JtaTransactionAnnotationParser.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -34,2 +34,3 @@ import org.springframework.transaction.interceptor.TransactionAttribute;",
                "  * @author Juergen Hoeller",
                "+ * @author Sam Brannen",
                "  * @since 4.0",
                "@@ -41,3 +42,4 @@ public class JtaTransactionAnnotationParser implements TransactionAnnotationPars",
                " \tpublic TransactionAttribute parseTransactionAnnotation(AnnotatedElement ae) {",
                "-\t\tAnnotationAttributes ann = AnnotatedElementUtils.getAnnotationAttributes(ae, javax.transaction.Transactional.class.getName());",
                "+\t\tAnnotationAttributes ann = AnnotatedElementUtils.getAnnotationAttributes(ae,",
                "+\t\t\tjavax.transaction.Transactional.class.getName(), false, false, false, false);",
                " \t\tif (ann != null) {",
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.java b/spring-tx/src/main/java/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.java",
                "index 60ae9b8fda..4cc2aa2ded 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -34,2 +34,3 @@ import org.springframework.transaction.interceptor.TransactionAttribute;",
                "  * @author Juergen Hoeller",
                "+ * @author Sam Brannen",
                "  * @since 2.5",
                "@@ -41,3 +42,4 @@ public class SpringTransactionAnnotationParser implements TransactionAnnotationP",
                " \tpublic TransactionAttribute parseTransactionAnnotation(AnnotatedElement ae) {",
                "-\t\tAnnotationAttributes ann = AnnotatedElementUtils.getAnnotationAttributes(ae, Transactional.class.getName());",
                "+\t\tAnnotationAttributes ann = AnnotatedElementUtils.getAnnotationAttributes(ae, Transactional.class.getName(),",
                "+\t\t\tfalse, false, false, false);",
                " \t\tif (ann != null) {"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "spring-tx/src/main/java/org/springframework/transaction/annotation/JtaTransactionAnnotationParser.java",
                "spring-tx/src/main/java/org/springframework/transaction/annotation/SpringTransactionAnnotationParser.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a2a105918c65c16cfb12f301dd1146fe46b2a39e",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1430130644,
            "hunks": 1,
            "message": "Upgrade mockito-core dependency to 1.10.19",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index a739552cbe..0400e25ad5 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -128,3 +128,3 @@ configure(allprojects) { project ->",
                " \t\t}",
                "-\t\ttestCompile(\"org.mockito:mockito-core:1.9.5\") {",
                "+\t\ttestCompile(\"org.mockito:mockito-core:1.10.19\") {",
                " \t\t\texclude group:'org.hamcrest', module:'hamcrest-core'"
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9128226da45eb40f8d65ab495965a1a734f0a2e5",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521905437,
            "hunks": 29,
            "message": "SimpleEvaluationContext.Builder withMethodResolvers/withInstanceMethods Includes DataBindingMethodResolver as ReflectiveMethodResolver subclass. Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "index a0bf5dd411..3c44feef7a 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -43,2 +43,7 @@ public interface EvaluationContext {",
                "+\t/**",
                "+\t * Return a list of accessors that will be asked in turn to read/write a property.",
                "+\t */",
                "+\tList<PropertyAccessor> getPropertyAccessors();",
                "+",
                " \t/**",
                "@@ -54,5 +59,6 @@ public interface EvaluationContext {",
                " \t/**",
                "-\t * Return a list of accessors that will be asked in turn to read/write a property.",
                "+\t * Return a bean resolver that can look up beans by name.",
                " \t */",
                "-\tList<PropertyAccessor> getPropertyAccessors();",
                "+\t@Nullable",
                "+\tBeanResolver getBeanResolver();",
                "@@ -80,8 +86,2 @@ public interface EvaluationContext {",
                "-\t/**",
                "-\t * Return a bean resolver that can look up beans by name.",
                "-\t */",
                "-\t@Nullable",
                "-\tBeanResolver getBeanResolver();",
                "-",
                " \t/**",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "new file mode 100644",
                "index 0000000000..c5db421c6d",
                "--- /dev/null",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "@@ -0,0 +1,76 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.expression.spel.support;",
                "+",
                "+import java.lang.reflect.Method;",
                "+import java.lang.reflect.Modifier;",
                "+import java.util.List;",
                "+",
                "+import org.springframework.core.convert.TypeDescriptor;",
                "+import org.springframework.expression.AccessException;",
                "+import org.springframework.expression.EvaluationContext;",
                "+import org.springframework.expression.MethodExecutor;",
                "+import org.springframework.lang.Nullable;",
                "+",
                "+/**",
                "+ * A {@link org.springframework.expression.MethodResolver} variant for data binding",
                "+ * purposes, using reflection to access instance methods on a given target object.",
                "+ *",
                "+ * <p>This accessor does not resolve static methods and also no technical methods",
                "+ * on {@code java.lang.Object} or {@code java.lang.Class}.",
                "+ * For unrestricted resolution, choose {@link ReflectiveMethodResolver} instead.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @since 4.3.15",
                "+ * @see #forInstanceMethodInvocation()",
                "+ * @see DataBindingPropertyAccessor",
                "+ */",
                "+public class DataBindingMethodResolver extends ReflectiveMethodResolver {",
                "+",
                "+\tprivate DataBindingMethodResolver() {",
                "+\t\tsuper();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\t@Nullable",
                "+\tpublic MethodExecutor resolve(EvaluationContext context, Object targetObject, String name,",
                "+\t\t\tList<TypeDescriptor> argumentTypes) throws AccessException {",
                "+",
                "+\t\tif (targetObject instanceof Class) {",
                "+\t\t\tthrow new IllegalArgumentException(\"DataBindingMethodResolver does not support Class targets\");",
                "+\t\t}",
                "+\t\treturn super.resolve(context, targetObject, name, argumentTypes);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected boolean isCandidateForInvocation(Method method, Class<?> targetClass) {",
                "+\t\tif (Modifier.isStatic(method.getModifiers())) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tClass<?> clazz = method.getDeclaringClass();",
                "+\t\treturn (clazz != Object.class && clazz != Class.class && !ClassLoader.class.isAssignableFrom(targetClass));",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Create a new data-binding method resolver for instance method resolution.",
                "+\t */",
                "+\tpublic static DataBindingMethodResolver forInstanceMethodInvocation() {",
                "+\t\treturn new DataBindingMethodResolver();",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "index df7860a5fd..1d65b310db 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "@@ -22,4 +22,2 @@ import java.lang.reflect.Proxy;",
                " import java.util.ArrayList;",
                "-import java.util.Arrays;",
                "-import java.util.Collection;",
                " import java.util.Collections;",
                "@@ -84,2 +82,8 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "+\t/**",
                "+\t * Register a filter for methods on the given type.",
                "+\t * @param type the type to filter on",
                "+\t * @param filter the corresponding method filter,",
                "+\t * or {@code null} to clear any filter for the given type",
                "+\t */",
                " \tpublic void registerMethodFilter(Class<?> type, @Nullable MethodFilter filter) {",
                "@@ -96,3 +100,2 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "-",
                " \t/**",
                "@@ -114,3 +117,3 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\t\tClass<?> type = (targetObject instanceof Class ? (Class<?>) targetObject : targetObject.getClass());",
                "-\t\t\tList<Method> methods = new ArrayList<>(getMethods(type, targetObject));",
                "+\t\t\tArrayList<Method> methods = new ArrayList<>(getMethods(type, targetObject));",
                "@@ -120,3 +123,3 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\t\t\tList<Method> filtered = filter.filter(methods);",
                "-\t\t\t\tmethods = (filtered instanceof ArrayList ? filtered : new ArrayList<>(filtered));",
                "+\t\t\t\tmethods = (filtered instanceof ArrayList ? (ArrayList<Method>) filtered : new ArrayList<>(filtered));",
                " \t\t\t}",
                "@@ -128,3 +131,3 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\t\t\t\tint m2pl = m2.getParameterCount();",
                "-\t\t\t\t\t// varargs methods go last",
                "+\t\t\t\t\t// vararg methods go last",
                " \t\t\t\t\tif (m1pl == m2pl) {",
                "@@ -220,3 +223,3 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "-\tprivate Collection<Method> getMethods(Class<?> type, Object targetObject) {",
                "+\tprivate Set<Method> getMethods(Class<?> type, Object targetObject) {",
                " \t\tif (targetObject instanceof Class) {",
                "@@ -238,3 +241,8 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\t\tfor (Class<?> ifc : type.getInterfaces()) {",
                "-\t\t\t\tCollections.addAll(result, getMethods(ifc));",
                "+\t\t\t\tMethod[] methods = getMethods(ifc);",
                "+\t\t\t\tfor (Method method : methods) {",
                "+\t\t\t\t\tif (isCandidateForInvocation(method, type)) {",
                "+\t\t\t\t\t\tresult.add(method);",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                " \t\t\t}",
                "@@ -243,3 +251,10 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                " \t\telse {",
                "-\t\t\treturn Arrays.asList(getMethods(type));",
                "+\t\t\tSet<Method> result = new LinkedHashSet<>();",
                "+\t\t\tMethod[] methods = getMethods(type);",
                "+\t\t\tfor (Method method : methods) {",
                "+\t\t\t\tif (isCandidateForInvocation(method, type)) {",
                "+\t\t\t\t\tresult.add(method);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\treturn result;",
                " \t\t}",
                "@@ -259,2 +274,15 @@ public class ReflectiveMethodResolver implements MethodResolver {",
                "+\t/**",
                "+\t * Determine whether the given {@code Method} is a candidate for method resolution",
                "+\t * on an instance of the given target class.",
                "+\t * <p>The default implementation considers any method as a candidate, even for",
                "+\t * static methods sand non-user-declared methods on the {@link Object} base class.",
                "+\t * @param method the Method to evaluate",
                "+\t * @param targetClass the concrete target class that is being introspected",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected boolean isCandidateForInvocation(Method method, Class<?> targetClass) {",
                "+\t\treturn true;",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "index 41eb0ed7bc..21ff6f82d6 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "@@ -423,3 +423,4 @@ public class ReflectivePropertyAccessor implements PropertyAccessor {",
                " \t/**",
                "-\t * Determine whether the given {@code Method} is a candidate for property access.",
                "+\t * Determine whether the given {@code Method} is a candidate for property access",
                "+\t * on an instance of the given target class.",
                " \t * <p>The default implementation considers any method as a candidate, even for",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 672f103ac0..fa379a47d5 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -94,2 +94,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+\tprivate final List<MethodResolver> methodResolvers;",
                "+",
                " \tprivate final TypeConverter typeConverter;",
                "@@ -103,4 +105,7 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, @Nullable TypeConverter converter) {",
                "+\tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, List<MethodResolver> resolvers,",
                "+\t\t\t@Nullable TypeConverter converter) {",
                "+",
                " \t\tthis.propertyAccessors = accessors;",
                "+\t\tthis.methodResolvers = resolvers;",
                " \t\tthis.typeConverter = (converter != null ? converter : new StandardTypeConverter());",
                "@@ -121,2 +126,6 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+\t/**",
                "+\t * Return the specified {@link PropertyAccessor} delegates, if any.",
                "+\t * @see #forPropertyAccessors",
                "+\t */",
                " \t@Override",
                "@@ -136,3 +145,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Return a single {@link ReflectiveMethodResolver}.",
                "+\t * Return the specified {@link MethodResolver} delegates, if any.",
                "+\t * @see Builder#withMethodResolvers",
                " \t */",
                "@@ -140,3 +150,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \tpublic List<MethodResolver> getMethodResolvers() {",
                "-\t\treturn Collections.emptyList();",
                "+\t\treturn this.methodResolvers;",
                " \t}",
                "@@ -144,4 +154,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * {@code SimpleEvaluationContext} does not support use of bean references.",
                "-\t * @return Always returns {@code null}",
                "+\t * {@code SimpleEvaluationContext} does not support the use of bean references.",
                "+\t * @return always {@code null}",
                " \t */",
                "@@ -166,2 +176,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t * <p>By default this is {@link StandardTypeConverter}.",
                "+\t * @see Builder#withTypeConverter",
                "+\t * @see Builder#withConversionService",
                " \t */",
                "@@ -205,2 +217,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t * a {@link DataBindingPropertyAccessor} if property dereferences are needed as well.",
                "+\t * @param accessors the accessor delegates to use",
                " \t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "@@ -244,3 +257,5 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\t\tprivate final List<PropertyAccessor> propertyAccessors;",
                "+\t\tprivate final List<PropertyAccessor> accessors;",
                "+",
                "+\t\tprivate List<MethodResolver> resolvers = Collections.emptyList();",
                "@@ -250,3 +265,34 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\tpublic Builder(PropertyAccessor... accessors) {",
                "-\t\t\tthis.propertyAccessors = Arrays.asList(accessors);",
                "+\t\t\tthis.accessors = Arrays.asList(accessors);",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register the specified {@link MethodResolver} delegates for",
                "+\t\t * a combination of property access and method resolution.",
                "+\t\t * @param resolvers the resolver delegates to use",
                "+\t\t * @see #withInstanceMethods()",
                "+\t\t * @see SimpleEvaluationContext#forPropertyAccessors",
                "+\t\t */",
                "+\t\tpublic Builder withMethodResolvers(MethodResolver... resolvers) {",
                "+\t\t\tfor (MethodResolver resolver : resolvers) {",
                "+\t\t\t\tif (resolver.getClass() == ReflectiveMethodResolver.class) {",
                "+\t\t\t\t\tthrow new IllegalArgumentException(\"SimpleEvaluationContext is not designed for use with a plain \" +",
                "+\t\t\t\t\t\t\t\"ReflectiveMethodResolver. Consider using DataBindingMethodResolver or a custom subclass.\");",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tthis.resolvers = Arrays.asList(resolvers);",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register a {@link DataBindingMethodResolver} for instance method invocation purposes",
                "+\t\t * (i.e. not supporting static methods) in addition to the specified property accessors,",
                "+\t\t * typically in combination with a {@link DataBindingPropertyAccessor}.",
                "+\t\t * @see #withMethodResolvers",
                "+\t\t * @see SimpleEvaluationContext#forReadOnlyDataBinding()",
                "+\t\t * @see SimpleEvaluationContext#forReadWriteDataBinding()",
                "+\t\t */",
                "+\t\tpublic Builder withInstanceMethods() {",
                "+\t\t\tthis.resolvers = Collections.singletonList(DataBindingMethodResolver.forInstanceMethodInvocation());",
                "+\t\t\treturn this;",
                " \t\t}",
                "@@ -278,3 +324,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\tpublic SimpleEvaluationContext build() {",
                "-\t\t\treturn new SimpleEvaluationContext(this.propertyAccessors, this.typeConverter);",
                "+\t\t\treturn new SimpleEvaluationContext(this.accessors, this.resolvers, this.typeConverter);",
                " \t\t}"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/EvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/DataBindingMethodResolver.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectiveMethodResolver.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectivePropertyAccessor.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "47f8d435e621163f56727891bb2e874e76e1f9b8",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429034538,
            "hunks": 3,
            "message": "Introduce isNotEmpty() aliases in StringUtils This commit introduces isNotEmpty() aliases for the existing hasLength() methods in StringUtils. Issue: SPR-12909",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/util/StringUtils.java b/spring-core/src/main/java/org/springframework/util/StringUtils.java",
                "index 34d49c4d21..6663c2cf9a 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/StringUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/StringUtils.java",
                "@@ -52,2 +52,3 @@ import java.util.TreeSet;",
                "  * @author Arjen Poutsma",
                "+ * @author Sam Brannen",
                "  * @since 16 April 2001",
                "@@ -81,2 +82,4 @@ public abstract class StringUtils {",
                " \t * @since 3.2.1",
                "+\t * @see #isNotEmpty(CharSequence)",
                "+\t * @see #isNotEmpty(String)",
                " \t */",
                "@@ -87,4 +90,36 @@ public abstract class StringUtils {",
                " \t/**",
                "-\t * Check that the given CharSequence is neither {@code null} nor of length 0.",
                "-\t * Note: Will return {@code true} for a CharSequence that purely consists of whitespace.",
                "+\t * Check that the given {@code CharSequence} is not empty (i.e., neither",
                "+\t * {@code null} nor of length 0).",
                "+\t * <p>This method is an alias for {@link #hasLength(CharSequence)}.",
                "+\t * <p>Note: this method returns {@code true} for a {@code CharSequence}",
                "+\t * that purely consists of whitespace.",
                "+\t * @param str the {@code CharSequence} to check (may be {@code null})",
                "+\t * @return {@code true} if the {@code CharSequence} is not {@code null} and has length",
                "+\t * @see #hasText(CharSequence)",
                "+\t * @since 4.2",
                "+\t */",
                "+\tpublic static boolean isNotEmpty(CharSequence str) {",
                "+\t\treturn hasLength(str);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Check that the given {@code String} is not empty (i.e., neither",
                "+\t * {@code null} nor of length 0).",
                "+\t * <p>This method is an alias for {@link #hasLength(String)}.",
                "+\t * <p>Note: this method returns {@code true} for a {@code String} that",
                "+\t * purely consists of whitespace.",
                "+\t * @param str the {@code String} to check (may be {@code null})",
                "+\t * @return {@code true} if the {@code String} is not {@code null} and has length",
                "+\t * @see #hasText(String)",
                "+\t * @since 4.2",
                "+\t */",
                "+\tpublic static boolean isNotEmpty(String str) {",
                "+\t\treturn hasLength(str);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Check that the given {@code CharSequence} is neither {@code null} nor",
                "+\t * of length 0.",
                "+\t * <p>Note: this method returns {@code true} for a {@code CharSequence}",
                "+\t * that purely consists of whitespace.",
                " \t * <p><pre class=\"code\">"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/util/StringUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b1295d0499b195b4f0c597e53d3b3eea272bb8b6",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520584785,
            "hunks": 3,
            "message": "TransactionTemplate equality for same transaction manager only Issue: SPR-16572 (cherry picked from commit df80614)",
            "diff": [
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java b/spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java",
                "index 98788fdc29..6cf682abd2 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java",
                "@@ -258,3 +258,3 @@ public class DefaultTransactionDefinition implements TransactionDefinition, Seri",
                " \tpublic boolean equals(Object other) {",
                "-\t\treturn (other instanceof TransactionDefinition && toString().equals(other.toString()));",
                "+\t\treturn (this == other || (other instanceof TransactionDefinition && toString().equals(other.toString())));",
                " \t}",
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java b/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java",
                "index b2fd8ce019..9afdf8aec9 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -180,2 +180,9 @@ public class TransactionTemplate extends DefaultTransactionDefinition",
                "+",
                "+\t@Override",
                "+\tpublic boolean equals(Object other) {",
                "+\t\treturn (this == other || (super.equals(other) && (!(other instanceof TransactionTemplate) ||",
                "+\t\t\t\tgetTransactionManager() == ((TransactionTemplate) other).getTransactionManager())));",
                "+\t}",
                "+",
                " }"
            ],
            "changed_files": [
                "spring-tx/src/main/java/org/springframework/transaction/support/DefaultTransactionDefinition.java",
                "spring-tx/src/main/java/org/springframework/transaction/support/TransactionTemplate.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "0e28bee0f155b9bf240b4bafc4646e4810cb23f8",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521493885,
            "hunks": 6,
            "message": "Clean duplicate separators in resource URLs Most Servlet containers do this anyway, but not all, and not consistently for forward and backslashes. Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "index 62641b9e30..215a50f6c8 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "@@ -330,3 +330,11 @@ public class ResourceWebHandler implements WebHandler, InitializingBean {",
                " \t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "-\t\t\t\tif (isInvalidPath(URLDecoder.decode(path, \"UTF-8\"))) {",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn Mono.empty();",
                "+\t\t\t\t}",
                "+\t\t\t\tdecodedPath = processPath(decodedPath);",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                " \t\t\t\t\tif (logger.isTraceEnabled()) {",
                "@@ -354,8 +362,43 @@ public class ResourceWebHandler implements WebHandler, InitializingBean {",
                " \t/**",
                "-\t * Process the given resource path to be used.",
                "-\t * <p>The default implementation replaces any combination of leading '/' and",
                "-\t * control characters (00-1F and 7F) with a single \"/\" or \"\". For example",
                "-\t * {@code \"  // /// ////  foo/bar\"} becomes {@code \"/foo/bar\"}.",
                "+\t * Process the given resource path.",
                "+\t * <p>The default implementation replaces:",
                "+\t * <ul>",
                "+\t * <li>Backslash with forward slash.",
                "+\t * <li>Duplicate occurrences of slash with a single slash.",
                "+\t * <li>Any combination of leading slash and control characters (00-1F and 7F)",
                "+\t * with a single \"/\" or \"\". For example {@code \"  / // foo/bar\"}",
                "+\t * becomes {@code \"/foo/bar\"}.",
                "+\t * </ul>",
                "+\t * @since 3.2.12",
                " \t */",
                " \tprotected String processPath(String path) {",
                "+\t\tpath = StringUtils.replace(path, \"\\\\\", \"/\");",
                "+\t\tpath = cleanDuplicateSlashes(path);",
                "+\t\treturn cleanLeadingSlash(path);",
                "+\t}",
                "+",
                "+\tprivate String cleanDuplicateSlashes(String path) {",
                "+\t\tStringBuilder sb = null;",
                "+\t\tchar prev = 0;",
                "+\t\tfor (int i = 0; i < path.length(); i++) {",
                "+\t\t\tchar curr = path.charAt(i);",
                "+\t\t\ttry {",
                "+\t\t\t\tif ((curr == '/') && (prev == '/')) {",
                "+\t\t\t\t\tif (sb == null) {",
                "+\t\t\t\t\t\tsb = new StringBuilder(path.substring(0, i));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tcontinue;",
                "+\t\t\t\t}",
                "+\t\t\t\tif (sb != null) {",
                "+\t\t\t\t\tsb.append(path.charAt(i));",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tfinally {",
                "+\t\t\t\tprev = curr;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn sb != null ? sb.toString() : path;",
                "+\t}",
                "+",
                "+\tprivate String cleanLeadingSlash(String path) {",
                " \t\tboolean slash = false;",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "index 43f19c5499..80731c37b6 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java",
                "@@ -522,3 +522,11 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t\t\t\t// Use URLDecoder (vs UriUtils) to preserve potentially decoded UTF-8 chars",
                "-\t\t\t\tif (isInvalidPath(URLDecoder.decode(path, \"UTF-8\"))) {",
                "+\t\t\t\tString decodedPath = URLDecoder.decode(path, \"UTF-8\");",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                "+\t\t\t\t\tif (logger.isTraceEnabled()) {",
                "+\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + path + \"].\");",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\treturn null;",
                "+\t\t\t\t}",
                "+\t\t\t\tdecodedPath = processPath(decodedPath);",
                "+\t\t\t\tif (isInvalidPath(decodedPath)) {",
                " \t\t\t\t\tif (logger.isTraceEnabled()) {",
                "@@ -545,6 +553,11 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \t/**",
                "-\t * Process the given resource path to be used.",
                "-\t * <p>The default implementation replaces any combination of leading '/' and",
                "-\t * control characters (00-1F and 7F) with a single \"/\" or \"\". For example",
                "-\t * {@code \"  // /// ////  foo/bar\"} becomes {@code \"/foo/bar\"}.",
                "+\t * Process the given resource path.",
                "+\t * <p>The default implementation replaces:",
                "+\t * <ul>",
                "+\t * <li>Backslash with forward slash.",
                "+\t * <li>Duplicate occurrences of slash with a single slash.",
                "+\t * <li>Any combination of leading slash and control characters (00-1F and 7F)",
                "+\t * with a single \"/\" or \"\". For example {@code \"  / // foo/bar\"}",
                "+\t * becomes {@code \"/foo/bar\"}.",
                "+\t * </ul>",
                " \t * @since 3.2.12",
                "@@ -552,2 +565,31 @@ public class ResourceHttpRequestHandler extends WebContentGenerator",
                " \tprotected String processPath(String path) {",
                "+\t\tpath = StringUtils.replace(path, \"\\\\\", \"/\");",
                "+\t\tpath = cleanDuplicateSlashes(path);",
                "+\t\treturn cleanLeadingSlash(path);",
                "+\t}",
                "+",
                "+\tprivate String cleanDuplicateSlashes(String path) {",
                "+\t\tStringBuilder sb = null;",
                "+\t\tchar prev = 0;",
                "+\t\tfor (int i = 0; i < path.length(); i++) {",
                "+\t\t\tchar curr = path.charAt(i);",
                "+\t\t\ttry {",
                "+\t\t\t\tif ((curr == '/') && (prev == '/')) {",
                "+\t\t\t\t\tif (sb == null) {",
                "+\t\t\t\t\t\tsb = new StringBuilder(path.substring(0, i));",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tcontinue;",
                "+\t\t\t\t}",
                "+\t\t\t\tif (sb != null) {",
                "+\t\t\t\t\tsb.append(path.charAt(i));",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tfinally {",
                "+\t\t\t\tprev = curr;",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn sb != null ? sb.toString() : path;",
                "+\t}",
                "+",
                "+\tprivate String cleanLeadingSlash(String path) {",
                " \t\tboolean slash = false;"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/resource/ResourceWebHandler.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/ResourceHttpRequestHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "7c28152c1337a6f08f170df587441cc8e0a729d5",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522338325,
            "hunks": 4,
            "message": "Introduce ClassUtils.isInnerClass() utility method",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/MethodParameter.java b/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "index b8116804ea..317aae575e 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "@@ -24,3 +24,2 @@ import java.lang.reflect.Member;",
                " import java.lang.reflect.Method;",
                "-import java.lang.reflect.Modifier;",
                " import java.lang.reflect.Parameter;",
                "@@ -40,2 +39,3 @@ import org.springframework.lang.Nullable;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.util.ClassUtils;",
                "@@ -521,4 +521,3 @@ public class MethodParameter {",
                " \t\t\tif (this.executable instanceof Constructor &&",
                "-\t\t\t\t\tthis.executable.getDeclaringClass().isMemberClass() &&",
                "-\t\t\t\t\t!Modifier.isStatic(this.executable.getDeclaringClass().getModifiers()) &&",
                "+\t\t\t\t\tClassUtils.isInnerClass(this.executable.getDeclaringClass()) &&",
                " \t\t\t\t\tannotationArray.length == this.executable.getParameterCount() - 1) {",
                "diff --git a/spring-core/src/main/java/org/springframework/util/ClassUtils.java b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "index 788678682b..c0023dacad 100644",
                "--- a/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/util/ClassUtils.java",
                "@@ -211,2 +211,10 @@ public abstract class ClassUtils {",
                "+\t/**",
                "+\t * Determine if the supplied class is an <em>inner class</em>.",
                "+\t * @return {@code true} if the supplied class is an inner class",
                "+\t */",
                "+\tpublic static boolean isInnerClass(Class<?> clazz) {",
                "+\t\treturn clazz != null && clazz.isMemberClass() && !Modifier.isStatic(clazz.getModifiers());",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/MethodParameter.java",
                "spring-core/src/main/java/org/springframework/util/ClassUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "04c2a2990dda185cca75ded2b218dff3054dafa8",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520520468,
            "hunks": 21,
            "message": "Provide simple way to create ClientResponse This commit introduces ClientResponse.Builder, an easier way to create a ClientResponse from an existing response, or from scratch. Issue: SPR-16553",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java",
                "index 2e24eb080c..e15862e954 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,2 +18,3 @@ package org.springframework.web.reactive.function.client;",
                "+import java.util.Collections;",
                " import java.util.List;",
                "@@ -21,2 +22,3 @@ import java.util.Optional;",
                " import java.util.OptionalLong;",
                "+import java.util.function.Consumer;",
                "@@ -26,2 +28,3 @@ import reactor.core.publisher.Mono;",
                " import org.springframework.core.ParameterizedTypeReference;",
                "+import org.springframework.core.io.buffer.DataBuffer;",
                " import org.springframework.http.HttpHeaders;",
                "@@ -32,2 +35,5 @@ import org.springframework.http.ResponseEntity;",
                " import org.springframework.http.client.reactive.ClientHttpResponse;",
                "+import org.springframework.http.codec.HttpMessageReader;",
                "+import org.springframework.http.codec.HttpMessageWriter;",
                "+import org.springframework.util.Assert;",
                " import org.springframework.util.MultiValueMap;",
                "@@ -70,2 +76,7 @@ public interface ClientResponse {",
                "+\t/**",
                "+\t * Return the strategies used to convert the body of this response.",
                "+\t */",
                "+\tExchangeStrategies strategies();",
                "+",
                " \t/**",
                "@@ -143,2 +154,62 @@ public interface ClientResponse {",
                "+\t// Static builder methods",
                "+",
                "+\t/**",
                "+\t * Create a builder with the status, headers, and cookies of the given response.",
                "+\t * @param other the response to copy the status, headers, and cookies from",
                "+\t * @return the created builder",
                "+\t */",
                "+\tstatic Builder from(ClientResponse other) {",
                "+\t\tAssert.notNull(other, \"'other' must not be null\");",
                "+\t\treturn new DefaultClientResponseBuilder(other);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a response builder with the given status code and using default strategies for reading",
                "+\t * the body.",
                "+\t * @param statusCode the status code",
                "+\t * @return the created builder",
                "+\t */",
                "+\tstatic Builder create(HttpStatus statusCode) {",
                "+\t\treturn create(statusCode, ExchangeStrategies.withDefaults());",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a response builder with the given status code and strategies for reading the body.",
                "+\t * @param statusCode the status code",
                "+\t * @param strategies the strategies",
                "+\t * @return the created builder",
                "+\t */",
                "+\tstatic Builder create(HttpStatus statusCode, ExchangeStrategies strategies) {",
                "+\t\tAssert.notNull(statusCode, \"'statusCode' must not be null\");",
                "+\t\tAssert.notNull(strategies, \"'strategies' must not be null\");",
                "+\t\treturn new DefaultClientResponseBuilder(strategies)",
                "+\t\t\t\t.statusCode(statusCode);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a response builder with the given status code and message body readers.",
                "+\t * @param statusCode the status code",
                "+\t * @param messageReaders the message readers",
                "+\t * @return the created builder",
                "+\t */",
                "+\tstatic Builder create(HttpStatus statusCode, List<HttpMessageReader<?>> messageReaders) {",
                "+\t\tAssert.notNull(statusCode, \"'statusCode' must not be null\");",
                "+\t\tAssert.notNull(messageReaders, \"'messageReaders' must not be null\");",
                "+",
                "+\t\treturn create(statusCode, new ExchangeStrategies() {",
                "+\t\t\t@Override",
                "+\t\t\tpublic List<HttpMessageReader<?>> messageReaders() {",
                "+\t\t\t\treturn messageReaders;",
                "+\t\t\t}",
                "+",
                "+\t\t\t@Override",
                "+\t\t\tpublic List<HttpMessageWriter<?>> messageWriters() {",
                "+\t\t\t\t// not used in the response",
                "+\t\t\t\treturn Collections.emptyList();",
                "+\t\t\t}",
                "+\t\t});",
                "+",
                "+\t}",
                "+",
                " \t/**",
                "@@ -174,2 +245,78 @@ public interface ClientResponse {",
                "+\t/**",
                "+\t * Defines a builder for a response.",
                "+\t */",
                "+\tinterface Builder {",
                "+",
                "+\t\t/**",
                "+\t\t * Set the status code of the response.",
                "+\t\t * @param statusCode the new status code.",
                "+\t\t * @return this builder",
                "+\t\t */",
                "+\t\tBuilder statusCode(HttpStatus statusCode);",
                "+",
                "+\t\t/**",
                "+\t\t * Add the given header value(s) under the given name.",
                "+\t\t * @param headerName  the header name",
                "+\t\t * @param headerValues the header value(s)",
                "+\t\t * @return this builder",
                "+\t\t * @see HttpHeaders#add(String, String)",
                "+\t\t */",
                "+\t\tBuilder header(String headerName, String... headerValues);",
                "+",
                "+\t\t/**",
                "+\t\t * Manipulate this response's headers with the given consumer. The",
                "+\t\t * headers provided to the consumer are \"live\", so that the consumer can be used to",
                "+\t\t * {@linkplain HttpHeaders#set(String, String) overwrite} existing header values,",
                "+\t\t * {@linkplain HttpHeaders#remove(Object) remove} values, or use any of the other",
                "+\t\t * {@link HttpHeaders} methods.",
                "+\t\t * @param headersConsumer a function that consumes the {@code HttpHeaders}",
                "+\t\t * @return this builder",
                "+\t\t */",
                "+\t\tBuilder headers(Consumer<HttpHeaders> headersConsumer);",
                "+",
                "+\t\t/**",
                "+\t\t * Add a cookie with the given name and value(s).",
                "+\t\t * @param name the cookie name",
                "+\t\t * @param values the cookie value(s)",
                "+\t\t * @return this builder",
                "+\t\t */",
                "+\t\tBuilder cookie(String name, String... values);",
                "+",
                "+\t\t/**",
                "+\t\t * Manipulate this response's cookies with the given consumer. The",
                "+\t\t * map provided to the consumer is \"live\", so that the consumer can be used to",
                "+\t\t * {@linkplain MultiValueMap#set(Object, Object) overwrite} existing header values,",
                "+\t\t * {@linkplain MultiValueMap#remove(Object) remove} values, or use any of the other",
                "+\t\t * {@link MultiValueMap} methods.",
                "+\t\t * @param cookiesConsumer a function that consumes the cookies map",
                "+\t\t * @return this builder",
                "+\t\t */",
                "+\t\tBuilder cookies(Consumer<MultiValueMap<String, ResponseCookie>> cookiesConsumer);",
                "+",
                "+\t\t/**",
                "+\t\t * Sets the body of the response. Calling this methods will",
                "+\t\t * {@linkplain org.springframework.core.io.buffer.DataBufferUtils#release(DataBuffer) release}",
                "+\t\t * the existing body of the builder.",
                "+\t\t * @param body the new body.",
                "+\t\t * @return this builder",
                "+\t\t */",
                "+\t\tBuilder body(Flux<DataBuffer> body);",
                "+",
                "+\t\t/**",
                "+\t\t * Sets the body of the response to the UTF-8 encoded bytes of the given string.",
                "+\t\t * Calling this methods will",
                "+\t\t * {@linkplain org.springframework.core.io.buffer.DataBufferUtils#release(DataBuffer) release}",
                "+\t\t * the existing body of the builder.",
                "+\t\t * @param body the new body.",
                "+\t\t * @return this builder",
                "+\t\t */",
                "+\t\tBuilder body(String body);",
                "+",
                "+\t\t/**",
                "+\t\t * Builds the response.",
                "+\t\t * @return the response",
                "+\t\t */",
                "+\t\tClientResponse build();",
                "+\t}",
                " }",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponse.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponse.java",
                "index ca6b2cc5a2..3c4bbd3806 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponse.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponse.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -63,2 +63,6 @@ class DefaultClientResponse implements ClientResponse {",
                "+\t@Override",
                "+\tpublic ExchangeStrategies strategies() {",
                "+\t\treturn this.strategies;",
                "+\t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponseBuilder.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponseBuilder.java",
                "new file mode 100644",
                "index 0000000000..c8293f92e5",
                "--- /dev/null",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponseBuilder.java",
                "@@ -0,0 +1,189 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.web.reactive.function.client;",
                "+",
                "+import java.nio.charset.StandardCharsets;",
                "+import java.util.function.Consumer;",
                "+",
                "+import reactor.core.publisher.Flux;",
                "+",
                "+import org.springframework.core.io.buffer.DataBuffer;",
                "+import org.springframework.core.io.buffer.DataBufferFactory;",
                "+import org.springframework.core.io.buffer.DataBufferUtils;",
                "+import org.springframework.core.io.buffer.DefaultDataBufferFactory;",
                "+import org.springframework.http.HttpHeaders;",
                "+import org.springframework.http.HttpStatus;",
                "+import org.springframework.http.ResponseCookie;",
                "+import org.springframework.http.client.reactive.ClientHttpResponse;",
                "+import org.springframework.lang.Nullable;",
                "+import org.springframework.util.Assert;",
                "+import org.springframework.util.CollectionUtils;",
                "+import org.springframework.util.LinkedMultiValueMap;",
                "+import org.springframework.util.MultiValueMap;",
                "+",
                "+/**",
                "+ * Default implementation of {@link ClientResponse.Builder}.",
                "+ *",
                "+ * @author Arjen Poutsma",
                "+ * @since 5.0.5",
                "+ */",
                "+class DefaultClientResponseBuilder implements ClientResponse.Builder {",
                "+",
                "+\tprivate final HttpHeaders headers = new HttpHeaders();",
                "+",
                "+\tprivate final MultiValueMap<String, ResponseCookie> cookies = new LinkedMultiValueMap<>();",
                "+",
                "+\tprivate HttpStatus statusCode = HttpStatus.OK;",
                "+",
                "+\tprivate Flux<DataBuffer> body = Flux.empty();",
                "+",
                "+\tprivate ExchangeStrategies strategies;",
                "+",
                "+",
                "+\tpublic DefaultClientResponseBuilder(ExchangeStrategies strategies) {",
                "+\t\tAssert.notNull(strategies, \"'strategies' must not be null\");",
                "+\t\tthis.strategies = strategies;",
                "+\t}",
                "+",
                "+\tpublic DefaultClientResponseBuilder(ClientResponse other) {",
                "+\t\tthis(other.strategies());",
                "+\t\tstatusCode(other.statusCode());",
                "+\t\theaders(headers -> headers.addAll(other.headers().asHttpHeaders()));",
                "+\t\tcookies(cookies -> cookies.addAll(other.cookies()));",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic DefaultClientResponseBuilder statusCode(HttpStatus statusCode) {",
                "+\t\tAssert.notNull(statusCode, \"'statusCode' must not be null\");",
                "+\t\tthis.statusCode = statusCode;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ClientResponse.Builder header(String headerName, String... headerValues) {",
                "+\t\tfor (String headerValue : headerValues) {",
                "+\t\t\tthis.headers.add(headerName, headerValue);",
                "+\t\t}",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ClientResponse.Builder headers(Consumer<HttpHeaders> headersConsumer) {",
                "+\t\tAssert.notNull(headersConsumer, \"'headersConsumer' must not be null\");",
                "+\t\theadersConsumer.accept(this.headers);",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic DefaultClientResponseBuilder cookie(String name, String... values) {",
                "+\t\tfor (String value : values) {",
                "+\t\t\tthis.cookies.add(name, ResponseCookie.from(name, value).build());",
                "+\t\t}",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ClientResponse.Builder cookies(",
                "+\t\t\tConsumer<MultiValueMap<String, ResponseCookie>> cookiesConsumer) {",
                "+\t\tAssert.notNull(cookiesConsumer, \"'cookiesConsumer' must not be null\");",
                "+\t\tcookiesConsumer.accept(this.cookies);",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ClientResponse.Builder body(Flux<DataBuffer> body) {",
                "+\t\tAssert.notNull(body, \"'body' must not be null\");",
                "+\t\treleaseBody();",
                "+\t\tthis.body = body;",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ClientResponse.Builder body(String body) {",
                "+\t\tAssert.notNull(body, \"'body' must not be null\");",
                "+\t\treleaseBody();",
                "+\t\tDataBufferFactory dataBufferFactory = new DefaultDataBufferFactory();",
                "+\t\tthis.body = Flux.just(body).",
                "+\t\t\t\tmap(s -> {",
                "+\t\t\t\t\tbyte[] bytes = body.getBytes(StandardCharsets.UTF_8);",
                "+\t\t\t\t\treturn dataBufferFactory.wrap(bytes);",
                "+\t\t\t\t});",
                "+\t\treturn this;",
                "+\t}",
                "+",
                "+\tprivate void releaseBody() {",
                "+\t\tthis.body.subscribe(DataBufferUtils.releaseConsumer());",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ClientResponse build() {",
                "+\t\tClientHttpResponse clientHttpResponse = new BuiltClientHttpResponse(this.statusCode,",
                "+\t\t\t\tthis.headers, this.cookies, this.body);",
                "+\t\treturn new DefaultClientResponse(clientHttpResponse, this.strategies);",
                "+\t}",
                "+",
                "+\tprivate static class BuiltClientHttpResponse implements ClientHttpResponse {",
                "+",
                "+\t\tprivate final HttpStatus statusCode;",
                "+",
                "+\t\tprivate final HttpHeaders headers;",
                "+",
                "+\t\tprivate final MultiValueMap<String, ResponseCookie> cookies;",
                "+",
                "+\t\tprivate final Flux<DataBuffer> body;",
                "+",
                "+\t\tpublic BuiltClientHttpResponse(HttpStatus statusCode, HttpHeaders headers,",
                "+\t\t\t\tMultiValueMap<String, ResponseCookie> cookies,",
                "+\t\t\t\tFlux<DataBuffer> body) {",
                "+",
                "+\t\t\tthis.statusCode = statusCode;",
                "+\t\t\tthis.headers = HttpHeaders.readOnlyHttpHeaders(headers);",
                "+\t\t\tthis.cookies = unmodifiableCopy(cookies);",
                "+\t\t\tthis.body = body;",
                "+\t\t}",
                "+",
                "+\t\tprivate static @Nullable <K, V> MultiValueMap<K, V> unmodifiableCopy(@Nullable MultiValueMap<K, V> original) {",
                "+\t\t\tif (original != null) {",
                "+\t\t\t\treturn CollectionUtils.unmodifiableMultiValueMap(new LinkedMultiValueMap<>(original));",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\treturn null;",
                "+\t\t\t}",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic HttpStatus getStatusCode() {",
                "+\t\t\treturn this.statusCode;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic HttpHeaders getHeaders() {",
                "+\t\t\treturn this.headers;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic MultiValueMap<String, ResponseCookie> getCookies() {",
                "+\t\t\treturn this.cookies;",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic Flux<DataBuffer> getBody() {",
                "+\t\t\treturn this.body;",
                "+\t\t}",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/support/ClientResponseWrapper.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/support/ClientResponseWrapper.java",
                "new file mode 100644",
                "index 0000000000..8540cd893e",
                "--- /dev/null",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/support/ClientResponseWrapper.java",
                "@@ -0,0 +1,176 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.web.reactive.function.client.support;",
                "+",
                "+import java.util.List;",
                "+import java.util.Optional;",
                "+import java.util.OptionalLong;",
                "+",
                "+import reactor.core.publisher.Flux;",
                "+import reactor.core.publisher.Mono;",
                "+",
                "+import org.springframework.core.ParameterizedTypeReference;",
                "+import org.springframework.http.HttpHeaders;",
                "+import org.springframework.http.HttpStatus;",
                "+import org.springframework.http.MediaType;",
                "+import org.springframework.http.ResponseCookie;",
                "+import org.springframework.http.ResponseEntity;",
                "+import org.springframework.http.client.reactive.ClientHttpResponse;",
                "+import org.springframework.util.Assert;",
                "+import org.springframework.util.MultiValueMap;",
                "+import org.springframework.web.reactive.function.BodyExtractor;",
                "+import org.springframework.web.reactive.function.client.ClientResponse;",
                "+import org.springframework.web.reactive.function.client.ExchangeStrategies;",
                "+",
                "+/**",
                "+ * Implementation of the {@link ClientResponse} interface that can be subclassed",
                "+ * to adapt the request in a",
                "+ * {@link org.springframework.web.reactive.function.client.ExchangeFilterFunction exchange filter function}.",
                "+ * All methods default to calling through to the wrapped request.",
                "+ *",
                "+ * @author Arjen Poutsma",
                "+ * @since 5.0.5",
                "+ */",
                "+public class ClientResponseWrapper implements ClientResponse {",
                "+",
                "+\tprivate final ClientResponse delegate;",
                "+",
                "+",
                "+\t/**",
                "+\t * Create a new {@code ClientResponseWrapper} that wraps the given response.",
                "+\t * @param delegate the response to wrap",
                "+\t */",
                "+\tpublic ClientResponseWrapper(ClientResponse delegate) {",
                "+\t\tAssert.notNull(delegate, \"'delegate' must not be null\");",
                "+\t\tthis.delegate = delegate;",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Return the wrapped request.",
                "+\t */",
                "+\tpublic ClientResponse response() {",
                "+\t\treturn this.delegate;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ExchangeStrategies strategies() {",
                "+\t\treturn this.delegate.strategies();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic HttpStatus statusCode() {",
                "+\t\treturn this.delegate.statusCode();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Headers headers() {",
                "+\t\treturn this.delegate.headers();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic MultiValueMap<String, ResponseCookie> cookies() {",
                "+\t\treturn this.delegate.cookies();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic <T> T body(BodyExtractor<T, ? super ClientHttpResponse> extractor) {",
                "+\t\treturn this.delegate.body(extractor);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic <T> Mono<T> bodyToMono(Class<? extends T> elementClass) {",
                "+\t\treturn this.delegate.bodyToMono(elementClass);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic <T> Mono<T> bodyToMono(ParameterizedTypeReference<T> typeReference) {",
                "+\t\treturn this.delegate.bodyToMono(typeReference);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic <T> Flux<T> bodyToFlux(Class<? extends T> elementClass) {",
                "+\t\treturn this.delegate.bodyToFlux(elementClass);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic <T> Flux<T> bodyToFlux(ParameterizedTypeReference<T> typeReference) {",
                "+\t\treturn this.delegate.bodyToFlux(typeReference);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic <T> Mono<ResponseEntity<T>> toEntity(Class<T> bodyType) {",
                "+\t\treturn this.delegate.toEntity(bodyType);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic <T> Mono<ResponseEntity<T>> toEntity(ParameterizedTypeReference<T> typeReference) {",
                "+\t\treturn this.delegate.toEntity(typeReference);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic <T> Mono<ResponseEntity<List<T>>> toEntityList(Class<T> elementType) {",
                "+\t\treturn this.delegate.toEntityList(elementType);",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic <T> Mono<ResponseEntity<List<T>>> toEntityList(ParameterizedTypeReference<T> typeReference) {",
                "+\t\treturn this.delegate.toEntityList(typeReference);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Implementation of the {@code Headers} interface that can be subclassed",
                "+\t  * to adapt the headers in a",
                "+\t  * {@link org.springframework.web.reactive.function.client.ExchangeFilterFunction exchange filter function}.",
                "+\t  * All methods default to calling through to the wrapped request.",
                "+\t */",
                "+\tpublic static class HeadersWrapper implements ClientResponse.Headers {",
                "+",
                "+\t\tprivate final Headers headers;",
                "+",
                "+",
                "+\t\t/**",
                "+\t\t * Create a new {@code HeadersWrapper} that wraps the given request.",
                "+\t\t * @param headers the headers to wrap",
                "+\t\t */",
                "+\t\tpublic HeadersWrapper(Headers headers) {",
                "+\t\t\tthis.headers = headers;",
                "+\t\t}",
                "+",
                "+",
                "+\t\t@Override",
                "+\t\tpublic OptionalLong contentLength() {",
                "+\t\t\treturn this.headers.contentLength();",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic Optional<MediaType> contentType() {",
                "+\t\t\treturn this.headers.contentType();",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic List<String> header(String headerName) {",
                "+\t\t\treturn this.headers.header(headerName);",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic HttpHeaders asHttpHeaders() {",
                "+\t\t\treturn this.headers.asHttpHeaders();",
                "+\t\t}",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/support/package-info.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/support/package-info.java",
                "new file mode 100644",
                "index 0000000000..4e85280e65",
                "--- /dev/null",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/support/package-info.java",
                "@@ -0,0 +1,26 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+/**",
                "+ * Classes supporting the {@code org.springframework.web.reactive.function.client} package.",
                "+ * Contains a {@code ClientResponse} wrapper to adapt a request.",
                "+ */",
                "+@NonNullApi",
                "+@NonNullFields",
                "+package org.springframework.web.reactive.function.client.support;",
                "+",
                "+import org.springframework.lang.NonNullApi;",
                "+import org.springframework.lang.NonNullFields;",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java",
                "index c4b100819f..8617686070 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -42,3 +42,2 @@ import org.springframework.util.MultiValueMap;",
                " import org.springframework.web.reactive.function.BodyExtractor;",
                "-import org.springframework.web.reactive.function.server.HandlerFunction;",
                " import org.springframework.web.reactive.function.server.ServerRequest;",
                "@@ -49,3 +48,4 @@ import org.springframework.web.util.UriBuilder;",
                "  * Implementation of the {@link ServerRequest} interface that can be subclassed",
                "- * to adapt the request to a {@link HandlerFunction handler function}.",
                "+ * to adapt the request in a",
                "+ * {@link org.springframework.web.reactive.function.server.HandlerFilterFunction handler filter function}.",
                "  * All methods default to calling through to the wrapped request.",
                "@@ -61,3 +61,3 @@ public class ServerRequestWrapper implements ServerRequest {",
                " \t/**",
                "-\t * Create a new {@code RequestWrapper} that wraps the given request.",
                "+\t * Create a new {@code ServerRequestWrapper} that wraps the given request.",
                " \t * @param delegate the request to wrap",
                "@@ -189,3 +189,4 @@ public class ServerRequestWrapper implements ServerRequest {",
                " \t * Implementation of the {@code Headers} interface that can be subclassed",
                "-\t * to adapt the headers to a {@link HandlerFunction handler function}.",
                "+\t * to adapt the headers in a",
                "+\t * {@link org.springframework.web.reactive.function.server.HandlerFilterFunction handler filter function}.",
                " \t * All methods default to calling through to the wrapped headers.",
                "@@ -196,2 +197,3 @@ public class ServerRequestWrapper implements ServerRequest {",
                "+",
                " \t\t/**",
                "@@ -205,2 +207,3 @@ public class ServerRequestWrapper implements ServerRequest {",
                "+",
                " \t\t@Override",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/package-info.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/package-info.java",
                "index e378012405..2f4f6d6504 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/package-info.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/package-info.java",
                "@@ -1,3 +1,3 @@",
                " /**",
                "- * Classes supporting the {@code org.springframework.web.reactive.function} package.",
                "+ * Classes supporting the {@code org.springframework.web.reactive.function.server} package.",
                "  * Contains a {@code HandlerAdapter} that supports {@code HandlerFunction}s,"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientResponse.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponse.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientResponseBuilder.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/support/ClientResponseWrapper.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/support/package-info.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/package-info.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "30b63a71bdcf8f91b1ef050e5a35687883d03e27",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522340863,
            "hunks": 2,
            "message": "Switch to Bismuth snapshots",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 58a877532c..94d792f150 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -55,3 +55,3 @@ configure(allprojects) { project ->",
                " \text.nettyVersion         = \"4.1.22.Final\"",
                "-\text.reactorVersion       = \"Bismuth-SR7\"",
                "+\text.reactorVersion       = \"Bismuth-BUILD-SNAPSHOT\"",
                " \text.rxjavaVersion        = \"1.3.7\"",
                "@@ -142,2 +142,3 @@ configure(allprojects) { project ->",
                " \t\tmaven { url \"https://repo.spring.io/milestone\" }  // for AspectJ 1.9 beta",
                "+\t\tmaven { url \"https://repo.spring.io/snapshot\" }  // for Reactor",
                " \t}"
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "967a2ef2d20b7bc6f6bf79463ee15d7c3e2ec607",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520883704,
            "hunks": 1,
            "message": "Validate Class attributes as well as Class array attributes Issue: SPR-16564",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 3fb11e3095..59c6cf5327 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -914,3 +914,4 @@ public abstract class AnnotationUtils {",
                " \t\tfor (Method method : getAttributeMethods(annotation.annotationType())) {",
                "-\t\t\tif (method.getReturnType() == Class.class) {",
                "+\t\t\tClass<?> returnType = method.getReturnType();",
                "+\t\t\tif (returnType == Class.class || returnType == Class[].class) {",
                " \t\t\t\ttry {"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8f525f07e9dd6a34463d43546c22cb95afd0429b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1511143254,
            "hunks": 1,
            "message": "Fix typos, formatting and escaping in reference Note: Some symbol combinations (including <=) serve as textual symbol replacements in AsciiDoc. http://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#text-replacement",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/annotation/Lookup.java b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/Lookup.java",
                "index 64c4f990ac..c035171411 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/annotation/Lookup.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/annotation/Lookup.java",
                "@@ -48,3 +48,3 @@ import java.lang.annotation.Target;",
                "  * beans returned from {@code @Bean} methods in configuration classes; you'll have",
                "- * to resort to {@code @Inject Provider&lt;TargetBean&gt;} or the like instead.",
                "+ * to resort to {@code @Inject Provider<TargetBean>} or the like instead.",
                "  *"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/annotation/Lookup.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "99399084a6b1960d152ee46aa59da5304a019439",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521459769,
            "hunks": 5,
            "message": "Consistent Future check (even if typically encountering RunnableFuture) Issue: SPR-16607",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "index 84f587e6bf..4f2c96e367 100644",
                "--- a/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "+++ b/spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java",
                "@@ -19,2 +19,3 @@ package org.springframework.scheduling.concurrent;",
                " import java.util.concurrent.ExecutorService;",
                "+import java.util.concurrent.Future;",
                " import java.util.concurrent.RejectedExecutionHandler;",
                "@@ -34,5 +35,5 @@ import org.springframework.lang.Nullable;",
                " /**",
                "- * Base class for classes that are setting up a",
                "- * {@code java.util.concurrent.ExecutorService}",
                "- * (typically a {@link java.util.concurrent.ThreadPoolExecutor}).",
                "+ * Base class for setting up a {@link java.util.concurrent.ExecutorService}",
                "+ * (typically a {@link java.util.concurrent.ThreadPoolExecutor} or",
                "+ * {@link java.util.concurrent.ScheduledThreadPoolExecutor}).",
                "  * Defines common configuration settings and common lifecycle handling.",
                "@@ -44,2 +45,3 @@ import org.springframework.lang.Nullable;",
                "  * @see java.util.concurrent.ThreadPoolExecutor",
                "+ * @see java.util.concurrent.ScheduledThreadPoolExecutor",
                "  */",
                "@@ -223,3 +225,3 @@ public abstract class ExecutorConfigurationSupport extends CustomizableThreadFac",
                " \t * as returned from {@link ExecutorService#shutdownNow()}.",
                "-\t * @param task the task to cancel (potentially a {@link RunnableFuture})",
                "+\t * @param task the task to cancel (typically a {@link RunnableFuture})",
                " \t * @since 5.0.5",
                "@@ -229,4 +231,4 @@ public abstract class ExecutorConfigurationSupport extends CustomizableThreadFac",
                " \tprotected void cancelRemainingTask(Runnable task) {",
                "-\t\tif (task instanceof RunnableFuture) {",
                "-\t\t\t((RunnableFuture<?>) task).cancel(true);",
                "+\t\tif (task instanceof Future) {",
                "+\t\t\t((Future<?>) task).cancel(true);",
                " \t\t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b8d94f8a20bd2d8f96fadb6f365178e7ee7c9f95",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521072420,
            "hunks": 6,
            "message": "Improve WebFlux support for response status exceptions Support @ResponseStatus annotated exceptions. Supported root cause exceptions with response status information. Issue: SPR-16567",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java",
                "index c83a9c1d3f..d760c8676c 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java",
                "@@ -22,4 +22,7 @@ import reactor.core.publisher.Mono;",
                "+import org.springframework.core.annotation.AnnotatedElementUtils;",
                " import org.springframework.http.HttpStatus;",
                " import org.springframework.http.server.reactive.ServerHttpRequest;",
                "+import org.springframework.lang.Nullable;",
                "+import org.springframework.web.bind.annotation.ResponseStatus;",
                " import org.springframework.web.server.ResponseStatusException;",
                "@@ -29,3 +32,8 @@ import org.springframework.web.server.WebExceptionHandler;",
                " /**",
                "- * Handle {@link ResponseStatusException} by setting the response status.",
                "+ * Handle instances of {@link ResponseStatusException}, or of exceptions annotated",
                "+ * with {@link ResponseStatus @ResponseStatus}, by extracting the",
                "+ * {@code HttpStatus} from them and updating the status of the response.",
                "+ *",
                "+ * <p>If the response is already committed, the error remains unresolved and is",
                "+ * propagated.",
                "  *",
                "@@ -42,16 +50,14 @@ public class ResponseStatusExceptionHandler implements WebExceptionHandler {",
                " \tpublic Mono<Void> handle(ServerWebExchange exchange, Throwable ex) {",
                "-\t\tif (ex instanceof ResponseStatusException) {",
                "-\t\t\tHttpStatus status = ((ResponseStatusException) ex).getStatus();",
                "-\t\t\tif (exchange.getResponse().setStatusCode(status)) {",
                "-\t\t\t\tif (status.is5xxServerError()) {",
                "-\t\t\t\t\tlogger.error(buildMessage(exchange.getRequest(), ex));",
                "-\t\t\t\t}",
                "-\t\t\t\telse if (status == HttpStatus.BAD_REQUEST) {",
                "-\t\t\t\t\tlogger.warn(buildMessage(exchange.getRequest(), ex));",
                "-\t\t\t\t}",
                "-\t\t\t\telse {",
                "-\t\t\t\t\tlogger.trace(buildMessage(exchange.getRequest(), ex));",
                "-\t\t\t\t}",
                "-\t\t\t\treturn exchange.getResponse().setComplete();",
                "+\t\tHttpStatus status = resolveHttpStatus(ex);",
                "+\t\tif (status != null && exchange.getResponse().setStatusCode(status)) {",
                "+\t\t\tif (status.is5xxServerError()) {",
                "+\t\t\t\tlogger.error(buildMessage(exchange.getRequest(), ex));",
                "+\t\t\t}",
                "+\t\t\telse if (status == HttpStatus.BAD_REQUEST) {",
                "+\t\t\t\tlogger.warn(buildMessage(exchange.getRequest(), ex));",
                " \t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\tlogger.trace(buildMessage(exchange.getRequest(), ex));",
                "+\t\t\t}",
                "+\t\t\treturn exchange.getResponse().setComplete();",
                " \t\t}",
                "@@ -60,2 +66,17 @@ public class ResponseStatusExceptionHandler implements WebExceptionHandler {",
                "+\t@Nullable",
                "+\tprivate HttpStatus resolveHttpStatus(Throwable ex) {",
                "+\t\tif (ex instanceof ResponseStatusException) {",
                "+\t\t\treturn ((ResponseStatusException) ex).getStatus();",
                "+\t\t}",
                "+\t\tResponseStatus status = AnnotatedElementUtils.findMergedAnnotation(ex.getClass(), ResponseStatus.class);",
                "+\t\tif (status != null) {",
                "+\t\t\treturn status.code();",
                "+\t\t}",
                "+\t\tif (ex.getCause() != null) {",
                "+\t\t\treturn resolveHttpStatus(ex.getCause());",
                "+\t\t}",
                "+\t\treturn null;",
                "+\t}",
                "+",
                " \tprivate String buildMessage(ServerHttpRequest request, Throwable ex) {"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "22a8a668c94381ec220eb526aae1bbcab87238d0",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522416703,
            "hunks": 3,
            "message": "AnnotationTypeFilter assumes no custom annotations on common Java types Issue: SPR-16667",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "index 7416f22662..664d477f9f 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -73,3 +73,5 @@ public class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter",
                " \t */",
                "-\tpublic AnnotationTypeFilter(Class<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {",
                "+\tpublic AnnotationTypeFilter(",
                "+\t\t\tClass<? extends Annotation> annotationType, boolean considerMetaAnnotations, boolean considerInterfaces) {",
                "+",
                " \t\tsuper(annotationType.isAnnotationPresent(Inherited.class), considerInterfaces);",
                "@@ -113,2 +115,6 @@ public class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter",
                " \t\telse if (typeName.startsWith(\"java\")) {",
                "+\t\t\tif (!this.annotationType.getName().startsWith(\"java\")) {",
                "+\t\t\t\t// Standard Java classes don't have non-standard annotations on them.",
                "+\t\t\t\treturn false;",
                "+\t\t\t}",
                " \t\t\ttry {"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/type/filter/AnnotationTypeFilter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ba5ef6456faa1ce6f39c8f5474ebf56cb5d07052",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521645152,
            "hunks": 17,
            "message": "WebFluxResponseStatusExceptionHandler for @ResponseStatus introspection The web.server package is quite low-level and should not depend on web.bind in order to avoid a dependency cycle. Extracting the introspection of the ResponseStatus annotation into a WebFlux-level subclass resolves the cycle. Issue: SPR-16567",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java",
                "index d760c8676c..5093a28be8 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java",
                "@@ -22,3 +22,2 @@ import reactor.core.publisher.Mono;",
                "-import org.springframework.core.annotation.AnnotatedElementUtils;",
                " import org.springframework.http.HttpStatus;",
                "@@ -26,3 +25,2 @@ import org.springframework.http.server.reactive.ServerHttpRequest;",
                " import org.springframework.lang.Nullable;",
                "-import org.springframework.web.bind.annotation.ResponseStatus;",
                " import org.springframework.web.server.ResponseStatusException;",
                "@@ -32,8 +30,3 @@ import org.springframework.web.server.WebExceptionHandler;",
                " /**",
                "- * Handle instances of {@link ResponseStatusException}, or of exceptions annotated",
                "- * with {@link ResponseStatus @ResponseStatus}, by extracting the",
                "- * {@code HttpStatus} from them and updating the status of the response.",
                "- *",
                "- * <p>If the response is already committed, the error remains unresolved and is",
                "- * propagated.",
                "+ * Handle {@link ResponseStatusException} by setting the response status.",
                "  *",
                "@@ -50,3 +43,3 @@ public class ResponseStatusExceptionHandler implements WebExceptionHandler {",
                " \tpublic Mono<Void> handle(ServerWebExchange exchange, Throwable ex) {",
                "-\t\tHttpStatus status = resolveHttpStatus(ex);",
                "+\t\tHttpStatus status = resolveStatus(ex);",
                " \t\tif (status != null && exchange.getResponse().setStatusCode(status)) {",
                "@@ -66,4 +59,26 @@ public class ResponseStatusExceptionHandler implements WebExceptionHandler {",
                "+\tprivate String buildMessage(ServerHttpRequest request, Throwable ex) {",
                "+\t\treturn \"Failed to handle request [\" + request.getMethod() + \" \" + request.getURI() + \"]: \" + ex.getMessage();",
                "+\t}",
                "+",
                "+\t@Nullable",
                "+\tprivate HttpStatus resolveStatus(Throwable ex) {",
                "+\t\tHttpStatus status = determineStatus(ex);",
                "+\t\tif (status == null) {",
                "+\t\t\tThrowable cause = ex.getCause();",
                "+\t\t\tif (cause != null) {",
                "+\t\t\t\tstatus = resolveStatus(cause);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn status;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Determine the HTTP status implied by the given exception.",
                "+\t * @param ex the exception to introspect",
                "+\t * @return the associated HTTP status, if any",
                "+\t * @since 5.0.5",
                "+\t */",
                " \t@Nullable",
                "-\tprivate HttpStatus resolveHttpStatus(Throwable ex) {",
                "+\tprotected HttpStatus determineStatus(Throwable ex) {",
                " \t\tif (ex instanceof ResponseStatusException) {",
                "@@ -71,9 +86,2 @@ public class ResponseStatusExceptionHandler implements WebExceptionHandler {",
                " \t\t}",
                "-\t\tResponseStatus status = AnnotatedElementUtils.findMergedAnnotation(ex.getClass(), ResponseStatus.class);",
                "-\t\tif (status != null) {",
                "-\t\t\treturn status.code();",
                "-\t\t}",
                "-\t\tif (ex.getCause() != null) {",
                "-\t\t\treturn resolveHttpStatus(ex.getCause());",
                "-\t\t}",
                " \t\treturn null;",
                "@@ -81,7 +89,2 @@ public class ResponseStatusExceptionHandler implements WebExceptionHandler {",
                "-\tprivate String buildMessage(ServerHttpRequest request, Throwable ex) {",
                "-\t\treturn \"Failed to handle request [\" + request.getMethod() + \" \"",
                "-\t\t\t\t+ request.getURI() + \"]: \" + ex.getMessage();",
                "-\t}",
                "-",
                "-}",
                "\\ No newline at end of file",
                "+}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java b/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java",
                "index 5715552b37..c636d929a2 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java",
                "@@ -54,2 +54,3 @@ import org.springframework.web.reactive.function.server.support.ServerResponseRe",
                " import org.springframework.web.reactive.handler.AbstractHandlerMapping;",
                "+import org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler;",
                " import org.springframework.web.reactive.result.SimpleHandlerAdapter;",
                "@@ -64,3 +65,2 @@ import org.springframework.web.server.ServerWebExchange;",
                " import org.springframework.web.server.WebExceptionHandler;",
                "-import org.springframework.web.server.handler.ResponseStatusExceptionHandler;",
                " import org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver;",
                "@@ -110,3 +110,3 @@ public class WebFluxConfigurationSupport implements ApplicationContextAware {",
                " \tpublic WebExceptionHandler responseStatusExceptionHandler() {",
                "-\t\treturn new ResponseStatusExceptionHandler();",
                "+\t\treturn new WebFluxResponseStatusExceptionHandler();",
                " \t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultHandlerStrategiesBuilder.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultHandlerStrategiesBuilder.java",
                "index 697425cb4c..824ad3855a 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultHandlerStrategiesBuilder.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultHandlerStrategiesBuilder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -27,2 +27,3 @@ import org.springframework.http.codec.ServerCodecConfigurer;",
                " import org.springframework.util.Assert;",
                "+import org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler;",
                " import org.springframework.web.reactive.result.view.ViewResolver;",
                "@@ -30,3 +31,2 @@ import org.springframework.web.server.WebExceptionHandler;",
                " import org.springframework.web.server.WebFilter;",
                "-import org.springframework.web.server.handler.ResponseStatusExceptionHandler;",
                " import org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver;",
                "@@ -60,3 +60,3 @@ class DefaultHandlerStrategiesBuilder implements HandlerStrategies.Builder {",
                " \t\tthis.codecConfigurer.registerDefaults(true);",
                "-\t\tthis.exceptionHandlers.add(new ResponseStatusExceptionHandler());",
                "+\t\tthis.exceptionHandlers.add(new WebFluxResponseStatusExceptionHandler());",
                " \t\tthis.localeContextResolver = new AcceptHeaderLocaleContextResolver();",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/handler/WebFluxResponseStatusExceptionHandler.java b/spring-webflux/src/main/java/org/springframework/web/reactive/handler/WebFluxResponseStatusExceptionHandler.java",
                "new file mode 100644",
                "index 0000000000..2bc38d9fd8",
                "--- /dev/null",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/handler/WebFluxResponseStatusExceptionHandler.java",
                "@@ -0,0 +1,54 @@",
                "+/*",
                "+ * Copyright 2002-2018 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.web.reactive.handler;",
                "+",
                "+import org.springframework.core.annotation.AnnotatedElementUtils;",
                "+import org.springframework.http.HttpStatus;",
                "+import org.springframework.lang.Nullable;",
                "+import org.springframework.web.bind.annotation.ResponseStatus;",
                "+import org.springframework.web.server.handler.ResponseStatusExceptionHandler;",
                "+",
                "+/**",
                "+ * Common WebFlux exception handler that detects instances of",
                "+ * {@link org.springframework.web.server.ResponseStatusException}",
                "+ * (inherited from the base class) as well as exceptions annotated with",
                "+ * {@link ResponseStatus @ResponseStatus} by determining the HTTP status",
                "+ * for them and updating the status of the response accordingly.",
                "+ *",
                "+ * <p>If the response is already committed, the error remains unresolved",
                "+ * and is propagated.",
                "+ *",
                "+ * @author Juergen Hoeller",
                "+ * @author Rossen Stoyanchev",
                "+ * @since 5.0.5",
                "+ */",
                "+public class WebFluxResponseStatusExceptionHandler extends ResponseStatusExceptionHandler {",
                "+",
                "+\t@Override",
                "+\t@Nullable",
                "+\tprotected HttpStatus determineStatus(Throwable ex) {",
                "+\t\tHttpStatus status = super.determineStatus(ex);",
                "+\t\tif (status == null) {",
                "+\t\t\tResponseStatus ann = AnnotatedElementUtils.findMergedAnnotation(ex.getClass(), ResponseStatus.class);",
                "+\t\t\tif (ann != null) {",
                "+\t\t\t\tstatus = ann.code();",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn status;",
                "+\t}",
                "+",
                "+}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/server/handler/ResponseStatusExceptionHandler.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/config/WebFluxConfigurationSupport.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultHandlerStrategiesBuilder.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/handler/WebFluxResponseStatusExceptionHandler.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "25187eeb0dc72793a63c8dfeb95385611aca11e7",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429907796,
            "hunks": 21,
            "message": "Document AnnotatedElementUtils & assert preconditions This commit consistently documents the 'element' and 'annotationType' method arguments throughout AnnotatedElementUtils. In addition, this commit introduces assertions against preconditions for all 'element' and 'annotationType' method arguments. Issue: SPR-11514",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index 6ed47b1ce9..a7ed98da78 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -27,2 +27,3 @@ import java.util.Set;",
                " import org.springframework.core.BridgeMethodResolver;",
                "+import org.springframework.util.Assert;",
                " import org.springframework.util.LinkedMultiValueMap;",
                "@@ -41,3 +42,11 @@ public class AnnotatedElementUtils {",
                "+\t/**",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                "+\t */",
                " \tpublic static Set<String> getMetaAnnotationTypes(AnnotatedElement element, String annotationType) {",
                "+\t\tAssert.notNull(element, \"AnnotatedElement must not be null\");",
                "+\t\tAssert.hasText(annotationType, \"annotationType must not be null or empty\");",
                "+",
                " \t\tfinal Set<String> types = new LinkedHashSet<String>();",
                "@@ -58,3 +67,11 @@ public class AnnotatedElementUtils {",
                "+\t/**",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                "+\t */",
                " \tpublic static boolean hasMetaAnnotationTypes(AnnotatedElement element, String annotationType) {",
                "+\t\tAssert.notNull(element, \"AnnotatedElement must not be null\");",
                "+\t\tAssert.hasText(annotationType, \"annotationType must not be null or empty\");",
                "+",
                " \t\treturn Boolean.TRUE.equals(processWithGetSemantics(element, annotationType, new Processor<Boolean>() {",
                "@@ -73,3 +90,11 @@ public class AnnotatedElementUtils {",
                "+\t/**",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                "+\t */",
                " \tpublic static boolean isAnnotated(AnnotatedElement element, String annotationType) {",
                "+\t\tAssert.notNull(element, \"AnnotatedElement must not be null\");",
                "+\t\tAssert.hasText(annotationType, \"annotationType must not be null or empty\");",
                "+",
                " \t\treturn Boolean.TRUE.equals(processWithGetSemantics(element, annotationType, new Processor<Boolean>() {",
                "@@ -93,4 +118,5 @@ public class AnnotatedElementUtils {",
                " \t *",
                "-\t * @param element the annotated element",
                "-\t * @param annotationType the annotation type to find",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                " \t * @return the merged {@code AnnotationAttributes}",
                "@@ -107,4 +133,5 @@ public class AnnotatedElementUtils {",
                " \t *",
                "-\t * @param element the annotated element",
                "-\t * @param annotationType the annotation type to find",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                " \t * @param classValuesAsString whether to convert Class references into",
                "@@ -132,4 +159,4 @@ public class AnnotatedElementUtils {",
                " \t *",
                "-\t * @param element the annotated element",
                "-\t * @param annotationType the annotation type to find",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the annotation type to find; never {@code null}",
                " \t * @return the merged {@code AnnotationAttributes}",
                "@@ -138,2 +165,3 @@ public class AnnotatedElementUtils {",
                " \t\t\tClass<? extends Annotation> annotationType) {",
                "+\t\tAssert.notNull(annotationType, \"annotationType must not be null\");",
                " \t\treturn findAnnotationAttributes(element, annotationType.getName(), true, true, true, true, false, false);",
                "@@ -150,4 +178,5 @@ public class AnnotatedElementUtils {",
                " \t *",
                "-\t * @param element the annotated element",
                "-\t * @param annotationType the annotation type to find",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                " \t * @return the merged {@code AnnotationAttributes}",
                "@@ -163,4 +192,5 @@ public class AnnotatedElementUtils {",
                " \t *",
                "-\t * @param element the annotated element",
                "-\t * @param annotationType the annotation type to find",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                " \t * @param searchOnInterfaces whether to search on interfaces, if the",
                "@@ -189,2 +219,7 @@ public class AnnotatedElementUtils {",
                "+\t/**",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                "+\t */",
                " \tpublic static MultiValueMap<String, Object> getAllAnnotationAttributes(AnnotatedElement element, String annotationType) {",
                "@@ -193,2 +228,7 @@ public class AnnotatedElementUtils {",
                "+\t/**",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                "+\t */",
                " \tpublic static MultiValueMap<String, Object> getAllAnnotationAttributes(AnnotatedElement element,",
                "@@ -227,4 +267,5 @@ public class AnnotatedElementUtils {",
                " \t *",
                "-\t * @param element the annotated element",
                "-\t * @param annotationType the annotation type to find",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                " \t * @param processor the processor to delegate to",
                "@@ -251,4 +292,5 @@ public class AnnotatedElementUtils {",
                " \t *",
                "-\t * @param element the annotated element",
                "-\t * @param annotationType the annotation type to find",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                " \t * @param processor the processor to delegate to",
                "@@ -261,2 +303,5 @@ public class AnnotatedElementUtils {",
                "+\t\tAssert.notNull(element, \"AnnotatedElement must not be null\");",
                "+\t\tAssert.hasText(annotationType, \"annotationType must not be null or empty\");",
                "+",
                " \t\tif (visited.add(element)) {",
                "@@ -306,4 +351,5 @@ public class AnnotatedElementUtils {",
                " \t *",
                "-\t * @param element the annotated element",
                "-\t * @param annotationType the annotation type to find",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                " \t * @param searchOnInterfaces whether to search on interfaces, if the",
                "@@ -342,4 +388,5 @@ public class AnnotatedElementUtils {",
                " \t *",
                "-\t * @param element the annotated element",
                "-\t * @param annotationType the annotation type to find",
                "+\t * @param element the annotated element; never {@code null}",
                "+\t * @param annotationType the fully qualified class name of the annotation",
                "+\t * type to find; never {@code null} or empty",
                " \t * @param searchOnInterfaces whether to search on interfaces, if the",
                "@@ -361,2 +408,5 @@ public class AnnotatedElementUtils {",
                "+\t\tAssert.notNull(element, \"AnnotatedElement must not be null\");",
                "+\t\tAssert.hasText(annotationType, \"annotationType must not be null or empty\");",
                "+",
                " \t\tif (visited.add(element)) {"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b723dcebba13380bc7ac6d60f1c0127c2645a85d",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429750977,
            "hunks": 2,
            "message": "Polish inline documentation in AnnotatedElementUtils",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index 2cc0564c7b..40f533bf21 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -245,3 +245,3 @@ public class AnnotatedElementUtils {",
                "-\t\t\t\t// Local annotations: either directly declared or inherited.",
                "+\t\t\t\t// Local annotations: declared or (declared + inherited).",
                " \t\t\t\tAnnotation[] annotations =",
                "@@ -265,3 +265,3 @@ public class AnnotatedElementUtils {",
                "-\t\t\t\t// Search in meta annotations on location annotations",
                "+\t\t\t\t// Search in meta annotations on local annotations",
                " \t\t\t\tfor (Annotation annotation : annotations) {"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1fbd38c2d8a3feebe53d6b29427571f55a6475d6",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522518881,
            "hunks": 1,
            "message": "Upgrade to Groovy 2.4.15",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 3fbabecd4f..9e16e5a46e 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -42,3 +42,3 @@ configure(allprojects) { project ->",
                " \text.freemarkerVersion    = \"2.3.23\"",
                "-\text.groovyVersion        = \"2.4.14\"",
                "+\text.groovyVersion        = \"2.4.15\"",
                " \text.gsonVersion          = \"2.8.2\""
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "49f3046f6637030743a1560f37245cd0dffc95a5",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429890013,
            "hunks": 5,
            "message": "PathMatchingResourcePatternResolver skips invalid jar classpath entries Issue: SPR-12928",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java b/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java",
                "index 09fc088be0..c7ab35367c 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -34,2 +34,3 @@ import java.util.jar.JarEntry;",
                " import java.util.jar.JarFile;",
                "+import java.util.zip.ZipException;",
                "@@ -519,14 +520,22 @@ public class PathMatchingResourcePatternResolver implements ResourcePatternResol",
                " \t\t\tString urlFile = rootDirResource.getURL().getFile();",
                "-\t\t\tint separatorIndex = urlFile.indexOf(ResourceUtils.JAR_URL_SEPARATOR);",
                "-\t\t\tif (separatorIndex != -1) {",
                "-\t\t\t\tjarFileUrl = urlFile.substring(0, separatorIndex);",
                "-\t\t\t\trootEntryPath = urlFile.substring(separatorIndex + ResourceUtils.JAR_URL_SEPARATOR.length());",
                "-\t\t\t\tjarFile = getJarFile(jarFileUrl);",
                "+\t\t\ttry {",
                "+\t\t\t\tint separatorIndex = urlFile.indexOf(ResourceUtils.JAR_URL_SEPARATOR);",
                "+\t\t\t\tif (separatorIndex != -1) {",
                "+\t\t\t\t\tjarFileUrl = urlFile.substring(0, separatorIndex);",
                "+\t\t\t\t\trootEntryPath = urlFile.substring(separatorIndex + ResourceUtils.JAR_URL_SEPARATOR.length());",
                "+\t\t\t\t\tjarFile = getJarFile(jarFileUrl);",
                "+\t\t\t\t}",
                "+\t\t\t\telse {",
                "+\t\t\t\t\tjarFile = new JarFile(urlFile);",
                "+\t\t\t\t\tjarFileUrl = urlFile;",
                "+\t\t\t\t\trootEntryPath = \"\";",
                "+\t\t\t\t}",
                "+\t\t\t\tnewJarFile = true;",
                " \t\t\t}",
                "-\t\t\telse {",
                "-\t\t\t\tjarFile = new JarFile(urlFile);",
                "-\t\t\t\tjarFileUrl = urlFile;",
                "-\t\t\t\trootEntryPath = \"\";",
                "+\t\t\tcatch (ZipException ex) {",
                "+\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\tlogger.debug(\"Skipping invalid jar classpath entry [\" + urlFile + \"]\");",
                "+\t\t\t\t}",
                "+\t\t\t\treturn Collections.emptySet();",
                " \t\t\t}",
                "-\t\t\tnewJarFile = true;",
                " \t\t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/io/support/PathMatchingResourcePatternResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8376e1eca13b62b34abb40af2dfaab243568c813",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1424210421,
            "hunks": 17,
            "message": "Support @RequestMapping as meta-annotation Issue: SPR-12296",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java",
                "index e3b7655be0..69c86f4fd6 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java",
                "@@ -59,4 +59,5 @@ import java.util.concurrent.Callable;",
                "  * Servlet environment: Consider switching the",
                "- * {@link org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#setSynchronizeOnSession \"synchronizeOnSession\"}",
                "- * flag to \"true\" if multiple requests are allowed to access a session concurrently.</i>",
                "+ * {@link org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter#setSynchronizeOnSession",
                "+ * \"synchronizeOnSession\"} flag to \"true\" if multiple requests are allowed to",
                "+ * access a session concurrently.</i>",
                "  * <li>{@link org.springframework.web.context.request.WebRequest} or",
                "@@ -299,8 +300,6 @@ public @interface RequestMapping {",
                " \t * The primary mapping expressed by this annotation.",
                "-\t * <p>In a Servlet environment: the path mapping URIs (e.g. \"/myPath.do\").",
                "-\t * Ant-style path patterns are also supported (e.g. \"/myPath/*.do\").",
                "-\t * At the method level, relative paths (e.g. \"edit.do\") are supported",
                "-\t * within the primary mapping expressed at the type level.",
                "-\t * Path mapping URIs may contain placeholders (e.g. \"/${connect}\")",
                "-\t * <p>In a Portlet environment: the mapped portlet modes",
                "+\t * <p>In a Servlet environment this is an alias for {@link #path()}.",
                "+\t * For example {@code @RequestMapping(\"/foo\")} is equivalent to",
                "+\t * {@code @RequestMapping(path=\"/foo\")}.",
                "+\t * <p>In a Portlet environment this is the mapped portlet modes",
                " \t * (i.e. \"EDIT\", \"VIEW\", \"HELP\" or any custom modes).",
                "@@ -309,3 +308,2 @@ public @interface RequestMapping {",
                " \t * this primary mapping, narrowing it for a specific handler method.",
                "-\t * @see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE",
                " \t */",
                "@@ -313,2 +311,16 @@ public @interface RequestMapping {",
                "+\t/**",
                "+\t * In a Servlet environment only: the path mapping URIs (e.g. \"/myPath.do\").",
                "+\t * Ant-style path patterns are also supported (e.g. \"/myPath/*.do\").",
                "+\t * At the method level, relative paths (e.g. \"edit.do\") are supported within",
                "+\t * the primary mapping expressed at the type level. Path mapping URIs may",
                "+\t * contain placeholders (e.g. \"/${connect}\")",
                "+\t * <p><b>Supported at the type level as well as at the method level!</b>",
                "+\t * When used at the type level, all method-level mappings inherit",
                "+\t * this primary mapping, narrowing it for a specific handler method.",
                "+\t * @see org.springframework.web.bind.annotation.ValueConstants#DEFAULT_NONE",
                "+\t * @since 4.2",
                "+\t */",
                "+\tString[] path() default {};",
                "+",
                " \t/**",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "index 81b142ffbe..e88ece401d 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "@@ -42,3 +42,4 @@ import org.springframework.core.MethodParameter;",
                " import org.springframework.core.ParameterNameDiscoverer;",
                "-import org.springframework.core.annotation.AnnotationUtils;",
                "+import org.springframework.core.annotation.AnnotatedElementUtils;",
                "+import org.springframework.core.annotation.AnnotationAttributes;",
                " import org.springframework.objenesis.Objenesis;",
                "@@ -379,12 +380,36 @@ public class MvcUriComponentsBuilder {",
                " \t\tAssert.notNull(controllerType, \"'controllerType' must not be null\");",
                "-\t\tRequestMapping annot = AnnotationUtils.findAnnotation(controllerType, RequestMapping.class);",
                "-\t\tif (annot == null || ObjectUtils.isEmpty(annot.value()) || StringUtils.isEmpty(annot.value()[0])) {",
                "+\t\tString annotType = RequestMapping.class.getName();",
                "+\t\tAnnotationAttributes attrs = AnnotatedElementUtils.getAnnotationAttributes(controllerType, annotType);",
                "+\t\tif (attrs == null) {",
                " \t\t\treturn \"/\";",
                " \t\t}",
                "-\t\tif (annot.value().length > 1 && logger.isWarnEnabled()) {",
                "+\t\tString[] paths = attrs.getStringArray(\"path\");",
                "+\t\tpaths = ObjectUtils.isEmpty(paths) ? attrs.getStringArray(\"value\") : paths;",
                "+\t\tif (ObjectUtils.isEmpty(paths) || StringUtils.isEmpty(paths[0])) {",
                "+\t\t\treturn \"/\";",
                "+\t\t}",
                "+\t\tif (paths.length > 1 && logger.isWarnEnabled()) {",
                " \t\t\tlogger.warn(\"Multiple paths on controller \" + controllerType.getName() + \", using first one\");",
                " \t\t}",
                "-\t\treturn annot.value()[0];",
                "+\t\treturn paths[0];",
                "+\t}",
                "+",
                "+\tprivate static String getMethodRequestMapping(Method method) {",
                "+\t\tString annotType = RequestMapping.class.getName();",
                "+\t\tAnnotationAttributes attrs = AnnotatedElementUtils.getAnnotationAttributes(method, annotType);",
                "+\t\tif (attrs == null) {",
                "+\t\t\tthrow new IllegalArgumentException(\"No @RequestMapping on: \" + method.toGenericString());",
                "+\t\t}",
                "+\t\tString[] paths = attrs.getStringArray(\"path\");",
                "+\t\tpaths = ObjectUtils.isEmpty(paths) ? attrs.getStringArray(\"value\") : paths;",
                "+\t\tif (ObjectUtils.isEmpty(paths) || StringUtils.isEmpty(paths[0])) {",
                "+\t\t\treturn \"/\";",
                "+\t\t}",
                "+\t\tif (paths.length > 1 && logger.isWarnEnabled()) {",
                "+\t\t\tlogger.warn(\"Multiple paths on method \" + method.toGenericString() + \", using first one\");",
                "+\t\t}",
                "+\t\treturn paths[0];",
                " \t}",
                "+",
                " \tprivate static Method getMethod(Class<?> controllerType, String methodName, Object... args) {",
                "@@ -407,16 +432,2 @@ public class MvcUriComponentsBuilder {",
                "-\tprivate static String getMethodRequestMapping(Method method) {",
                "-\t\tRequestMapping annot = AnnotationUtils.findAnnotation(method, RequestMapping.class);",
                "-\t\tif (annot == null) {",
                "-\t\t\tthrow new IllegalArgumentException(\"No @RequestMapping on: \" + method.toGenericString());",
                "-\t\t}",
                "-\t\tif (ObjectUtils.isEmpty(annot.value()) || StringUtils.isEmpty(annot.value()[0])) {",
                "-\t\t\treturn \"/\";",
                "-\t\t}",
                "-\t\tif (annot.value().length > 1 && logger.isWarnEnabled()) {",
                "-\t\t\tlogger.warn(\"Multiple paths on method \" + method.toGenericString() + \", using first one\");",
                "-\t\t}",
                "-\t\treturn annot.value()[0];",
                "-\t}",
                "-",
                " \tprivate static UriComponents applyContributors(UriComponentsBuilder builder, Method method, Object... args) {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java",
                "index bcfe8c88e0..3b318acdb7 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java",
                "@@ -18,2 +18,3 @@ package org.springframework.web.servlet.mvc.method.annotation;",
                "+import java.lang.reflect.AnnotatedElement;",
                " import java.lang.reflect.Method;",
                "@@ -23,2 +24,4 @@ import java.util.List;",
                " import org.springframework.context.EmbeddedValueResolverAware;",
                "+import org.springframework.core.annotation.AnnotatedElementUtils;",
                "+import org.springframework.core.annotation.AnnotationAttributes;",
                " import org.springframework.core.annotation.AnnotationUtils;",
                "@@ -27,2 +30,3 @@ import org.springframework.util.Assert;",
                " import org.springframework.util.CollectionUtils;",
                "+import org.springframework.util.ObjectUtils;",
                " import org.springframework.util.StringValueResolver;",
                "@@ -192,11 +196,7 @@ public class RequestMappingHandlerMapping extends RequestMappingInfoHandlerMappi",
                " \tprotected RequestMappingInfo getMappingForMethod(Method method, Class<?> handlerType) {",
                "-\t\tRequestMappingInfo info = null;",
                "-\t\tRequestMapping methodAnnotation = AnnotationUtils.findAnnotation(method, RequestMapping.class);",
                "-\t\tif (methodAnnotation != null) {",
                "-\t\t\tRequestCondition<?> methodCondition = getCustomMethodCondition(method);",
                "-\t\t\tinfo = createRequestMappingInfo(methodAnnotation, methodCondition);",
                "-\t\t\tRequestMapping typeAnnotation = AnnotationUtils.findAnnotation(handlerType, RequestMapping.class);",
                "-\t\t\tif (typeAnnotation != null) {",
                "-\t\t\t\tRequestCondition<?> typeCondition = getCustomTypeCondition(handlerType);",
                "-\t\t\t\tinfo = createRequestMappingInfo(typeAnnotation, typeCondition).combine(info);",
                "+\t\tRequestMappingInfo info = createRequestMappingInfo(method);",
                "+\t\tif (info != null) {",
                "+\t\t\tRequestMappingInfo typeInfo = createRequestMappingInfo(handlerType);",
                "+\t\t\tif (typeInfo != null) {",
                "+\t\t\t\tinfo = typeInfo.combine(info);",
                " \t\t\t}",
                "@@ -237,16 +237,79 @@ public class RequestMappingHandlerMapping extends RequestMappingInfoHandlerMappi",
                " \t/**",
                "-\t * Created a RequestMappingInfo from a RequestMapping annotation.",
                "+\t * Transitional method used to invoke one of two createRequestMappingInfo",
                "+\t * variants one of which is deprecated.",
                " \t */",
                "-\tprotected RequestMappingInfo createRequestMappingInfo(RequestMapping annotation, RequestCondition<?> customCondition) {",
                "-\t\tString[] patterns = resolveEmbeddedValuesInPatterns(annotation.value());",
                "-\t\treturn new RequestMappingInfo(",
                "-\t\t\t\tannotation.name(),",
                "-\t\t\t\tnew PatternsRequestCondition(patterns, getUrlPathHelper(), getPathMatcher(),",
                "-\t\t\t\t\t\tthis.useSuffixPatternMatch, this.useTrailingSlashMatch, this.fileExtensions),",
                "-\t\t\t\tnew RequestMethodsRequestCondition(annotation.method()),",
                "-\t\t\t\tnew ParamsRequestCondition(annotation.params()),",
                "-\t\t\t\tnew HeadersRequestCondition(annotation.headers()),",
                "-\t\t\t\tnew ConsumesRequestCondition(annotation.consumes(), annotation.headers()),",
                "-\t\t\t\tnew ProducesRequestCondition(annotation.produces(), annotation.headers(), this.contentNegotiationManager),",
                "-\t\t\t\tcustomCondition);",
                "+\tprivate RequestMappingInfo createRequestMappingInfo(AnnotatedElement annotatedElement) {",
                "+\t\tRequestMapping annotation;",
                "+\t\tAnnotationAttributes attributes;",
                "+\t\tRequestCondition<?> customCondition;",
                "+\t\tString annotationType = RequestMapping.class.getName();",
                "+\t\tif (annotatedElement instanceof Class<?>) {",
                "+\t\t\tClass<?> type = (Class<?>) annotatedElement;",
                "+\t\t\tannotation = AnnotationUtils.findAnnotation(type, RequestMapping.class);",
                "+\t\t\tattributes = AnnotatedElementUtils.getAnnotationAttributes(type, annotationType);",
                "+\t\t\tcustomCondition = getCustomTypeCondition(type);",
                "+\t\t}",
                "+\t\telse {",
                "+\t\t\tMethod method = (Method) annotatedElement;",
                "+\t\t\tannotation = AnnotationUtils.findAnnotation(method, RequestMapping.class);",
                "+\t\t\tattributes = AnnotatedElementUtils.getAnnotationAttributes(method, annotationType);",
                "+\t\t\tcustomCondition = getCustomMethodCondition(method);",
                "+\t\t}",
                "+\t\tRequestMappingInfo info = null;",
                "+\t\tif (annotation != null) {",
                "+\t\t\tinfo = createRequestMappingInfo(annotation, customCondition);",
                "+\t\t\tif (info == null) {",
                "+\t\t\t\tinfo = createRequestMappingInfo(attributes, customCondition);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\treturn info;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a RequestMappingInfo from a RequestMapping annotation.",
                "+\t * @deprecated as of 4.2 after the introduction of support for",
                "+\t * {@code @RequestMapping} as meta-annotation. Please use",
                "+\t * {@link #createRequestMappingInfo(AnnotationAttributes, RequestCondition)}.",
                "+\t */",
                "+\t@Deprecated",
                "+\tprotected RequestMappingInfo createRequestMappingInfo(RequestMapping annotation,",
                "+\t\t\tRequestCondition<?> customCondition) {",
                "+",
                "+\t\treturn null;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Create a RequestMappingInfo from the attributes of an",
                "+\t * {@code @RequestMapping} annotation or a meta-annotation, i.e. a custom",
                "+\t * annotation annotated with {@code @RequestMapping}.",
                "+\t * @since 4.2",
                "+\t */",
                "+\tprotected RequestMappingInfo createRequestMappingInfo(AnnotationAttributes attributes,",
                "+\t\t\tRequestCondition<?> customCondition) {",
                "+",
                "+\t\tString mappingName = attributes.getString(\"name\");",
                "+",
                "+\t\tString[] paths = attributes.getStringArray(\"path\");",
                "+\t\tpaths = ObjectUtils.isEmpty(paths) ? attributes.getStringArray(\"value\") : paths;",
                "+\t\tPatternsRequestCondition patternsCondition = new PatternsRequestCondition(",
                "+\t\t\t\tresolveEmbeddedValuesInPatterns(paths), getUrlPathHelper(), getPathMatcher(),",
                "+\t\t\t\tthis.useSuffixPatternMatch, this.useTrailingSlashMatch, this.fileExtensions);",
                "+",
                "+\t\tRequestMethod[] methods = (RequestMethod[]) attributes.get(\"method\");",
                "+\t\tRequestMethodsRequestCondition methodsCondition = new RequestMethodsRequestCondition(methods);",
                "+",
                "+\t\tString[] params = attributes.getStringArray(\"params\");",
                "+\t\tParamsRequestCondition paramsCondition = new ParamsRequestCondition(params);",
                "+",
                "+\t\tString[] headers = attributes.getStringArray(\"headers\");",
                "+\t\tString[] consumes = attributes.getStringArray(\"consumes\");",
                "+\t\tString[] produces = attributes.getStringArray(\"produces\");",
                "+",
                "+\t\tHeadersRequestCondition headersCondition = new HeadersRequestCondition(headers);",
                "+\t\tConsumesRequestCondition consumesCondition = new ConsumesRequestCondition(consumes, headers);",
                "+\t\tProducesRequestCondition producesCondition = new ProducesRequestCondition(produces,",
                "+\t\t\t\theaders, this.contentNegotiationManager);",
                "+",
                "+\t\treturn new RequestMappingInfo(mappingName, patternsCondition, methodsCondition, paramsCondition,",
                "+\t\t\t\theadersCondition, consumesCondition, producesCondition, customCondition);",
                " \t}",
                "@@ -322,3 +385,4 @@ public class RequestMappingHandlerMapping extends RequestMappingInfoHandlerMappi",
                " \t\telse if (!annotation.allowCredentials().isEmpty()) {",
                "-\t\t\tthrow new IllegalStateException(\"AllowCredentials value must be \\\"true\\\", \\\"false\\\" or \\\"\\\" (empty string), current value is \" + annotation.allowCredentials());",
                "+\t\t\tthrow new IllegalStateException(\"AllowCredentials value must be \\\"true\\\", \\\"false\\\" \" +",
                "+\t\t\t\t\t\"or \\\"\\\" (empty string), current value is \" + annotation.allowCredentials());",
                " \t\t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/MvcUriComponentsBuilder.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "91e46cf2ad55fc8ec3bda087d5fe9c02aa1ec45b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429909389,
            "hunks": 1,
            "message": "Update TODOs in AnnotatedElementUtils[Tests] Issue: SPR-12738",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index a7ed98da78..f666d50f64 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -481,4 +481,2 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t\t\ttry {",
                "-\t\t\t\t\t\t\t\t// TODO [SPR-12738] Resolve equivalent parameterized",
                "-\t\t\t\t\t\t\t\t// method (i.e., bridged method) in superclass.",
                " \t\t\t\t\t\t\t\tMethod equivalentMethod = clazz.getDeclaredMethod(method.getName(),"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d9e17a62ce0a35af35a92061dbdbff070c655a50",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522512183,
            "hunks": 21,
            "message": "Refine SyncInvocableHandlerMethod error handling Ensure the error is wrapped as ServerErrorException",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java b/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "index f25cad1886..523b44d751 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -21,7 +21,8 @@ import org.springframework.http.HttpStatus;",
                " import org.springframework.lang.Nullable;",
                "+import org.springframework.web.method.HandlerMethod;",
                " /**",
                "- * Exception for errors that fit response status 500 (bad request) for use in",
                "- * Spring Web applications. The exception provides additional fields (e.g.",
                "- * an optional {@link MethodParameter} if related to the error).",
                "+ * Exception for an {@link HttpStatus#INTERNAL_SERVER_ERROR} that exposes extra",
                "+ * information about a controller method that failed, or a controller method",
                "+ * argument that could not be resolved.",
                "  *",
                "@@ -33,2 +34,5 @@ public class ServerErrorException extends ResponseStatusException {",
                "+\t@Nullable",
                "+\tprivate final HandlerMethod handlerMethod;",
                "+",
                " \t@Nullable",
                "@@ -41,3 +45,5 @@ public class ServerErrorException extends ResponseStatusException {",
                " \tpublic ServerErrorException(String reason) {",
                "-\t\tthis(reason, null, null);",
                "+\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, null);",
                "+\t\tthis.handlerMethod = null;",
                "+\t\tthis.parameter = null;",
                " \t}",
                "@@ -45,6 +51,9 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Constructor for a 500 error linked to a specific {@code MethodParameter}.",
                "+\t * Constructor with a reason and root cause.",
                "+\t * @since 5.0.5",
                " \t */",
                "-\tpublic ServerErrorException(String reason, MethodParameter parameter) {",
                "-\t\tthis(reason, parameter, null);",
                "+\tpublic ServerErrorException(String reason, Throwable cause) {",
                "+\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "+\t\tthis.handlerMethod = null;",
                "+\t\tthis.parameter = null;",
                " \t}",
                "@@ -52,6 +61,7 @@ public class ServerErrorException extends ResponseStatusException {",
                " \t/**",
                "-\t * Constructor for a 500 error with a root cause.",
                "+\t * Constructor for a 500 error with a {@link MethodParameter}.",
                " \t */",
                "-\tpublic ServerErrorException(String reason, @Nullable MethodParameter parameter, @Nullable Throwable cause) {",
                "+\tpublic ServerErrorException(String reason, MethodParameter parameter, @Nullable Throwable cause) {",
                " \t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "+\t\tthis.handlerMethod = null;",
                " \t\tthis.parameter = parameter;",
                "@@ -59,5 +69,32 @@ public class ServerErrorException extends ResponseStatusException {",
                "+\t/**",
                "+\t * Constructor for a 500 error with a root cause.",
                "+\t */",
                "+\tpublic ServerErrorException(String reason, HandlerMethod handlerMethod, @Nullable Throwable cause) {",
                "+\t\tsuper(HttpStatus.INTERNAL_SERVER_ERROR, reason, cause);",
                "+\t\tthis.handlerMethod = handlerMethod;",
                "+\t\tthis.parameter = null;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Constructor for a 500 error linked to a specific {@code MethodParameter}.",
                "+\t * @deprecated in favor of {@link #ServerErrorException(String, MethodParameter, Throwable)}",
                "+\t */",
                "+\t@Deprecated",
                "+\tpublic ServerErrorException(String reason, MethodParameter parameter) {",
                "+\t\tthis(reason, parameter, null);",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Return the controller method associated with the error, if any.",
                "+\t * @since 5.0.5",
                "+\t */",
                "+\t@Nullable",
                "+\tpublic HandlerMethod getHandlerMethod() {",
                "+\t\treturn this.handlerMethod;",
                "+\t}",
                " \t/**",
                "-\t * Return the {@code MethodParameter} associated with this error, if any.",
                "+\t * Return the controller method argument associated with this error, if any.",
                " \t */",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/BindingContext.java b/spring-webflux/src/main/java/org/springframework/web/reactive/BindingContext.java",
                "index 4e0b7cf98c..8099a538d7 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/BindingContext.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/BindingContext.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -23,2 +23,3 @@ import org.springframework.web.bind.support.WebBindingInitializer;",
                " import org.springframework.web.bind.support.WebExchangeDataBinder;",
                "+import org.springframework.web.server.ServerErrorException;",
                " import org.springframework.web.server.ServerWebExchange;",
                "@@ -77,2 +78,3 @@ public class BindingContext {",
                " \t * @return the created data binder",
                "+\t * @throws ServerErrorException if {@code @InitBinder} method invocation fails",
                " \t */",
                "@@ -88,2 +90,3 @@ public class BindingContext {",
                " \t * Initialize the data binder instance for the given exchange.",
                "+\t * @throws ServerErrorException if {@code @InitBinder} method invocation fails",
                " \t */",
                "@@ -99,2 +102,3 @@ public class BindingContext {",
                " \t * @return the created data binder",
                "+\t * @throws ServerErrorException if {@code @InitBinder} method invocation fails",
                " \t */",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "index 216ecf7a0c..c60f24b88b 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "@@ -31,2 +31,3 @@ import org.springframework.web.reactive.BindingContext;",
                " import org.springframework.web.reactive.HandlerResult;",
                "+import org.springframework.web.server.ServerErrorException;",
                " import org.springframework.web.server.ServerWebExchange;",
                "@@ -97,2 +98,3 @@ public class SyncInvocableHandlerMethod extends HandlerMethod {",
                " \t * @return Mono with a {@link HandlerResult}.",
                "+\t * @throws ServerErrorException if method argument resolution or method invocation fails",
                " \t */",
                "@@ -106,5 +108,6 @@ public class SyncInvocableHandlerMethod extends HandlerMethod {",
                " \t\tif (processor.isTerminated()) {",
                "-\t\t\tThrowable error = processor.getError();",
                "-\t\t\tif (error != null) {",
                "-\t\t\t\tthrow (RuntimeException) error;",
                "+\t\t\tThrowable ex = processor.getError();",
                "+\t\t\tif (ex != null) {",
                "+\t\t\t\tthrow (ex instanceof ServerErrorException ? (ServerErrorException) ex :",
                "+\t\t\t\t\t\tnew ServerErrorException(\"Failed to invoke: \" + getShortLogMessage(), this, ex));",
                " \t\t\t}",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/PathVariableMethodArgumentResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/PathVariableMethodArgumentResolver.java",
                "index 0a7274fd07..28d5a4ce9d 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/PathVariableMethodArgumentResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/PathVariableMethodArgumentResolver.java",
                "@@ -94,3 +94,3 @@ public class PathVariableMethodArgumentResolver extends AbstractNamedValueSyncAr",
                " \tprotected void handleMissingValue(String name, MethodParameter parameter) {",
                "-\t\tthrow new ServerErrorException(name, parameter);",
                "+\t\tthrow new ServerErrorException(name, parameter, null);",
                " \t}"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/server/ServerErrorException.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/BindingContext.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/SyncInvocableHandlerMethod.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/PathVariableMethodArgumentResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8d8e218b52274055d7b1854f3363c8c8c4bd71f2",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521822873,
            "hunks": 10,
            "message": "Consistent FactoryBean cache visibility in concurrent creation scenarios Issue: SPR-16625 Issue: SPR-16627",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "index 41589161ab..feeb34d188 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "@@ -929,2 +929,6 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                " \t\t\t}",
                "+\t\t\tObject beanInstance = getSingleton(beanName, false);",
                "+\t\t\tif (beanInstance instanceof FactoryBean) {",
                "+\t\t\t\treturn (FactoryBean<?>) beanInstance;",
                "+\t\t\t}",
                " \t\t\tif (isSingletonCurrentlyInCreation(beanName) ||",
                "@@ -934,3 +938,3 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                "-\t\t\tObject instance = null;",
                "+\t\t\tObject instance;",
                " \t\t\ttry {",
                "@@ -1847,4 +1851,17 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                " \tprotected void removeSingleton(String beanName) {",
                "-\t\tsuper.removeSingleton(beanName);",
                "-\t\tthis.factoryBeanInstanceCache.remove(beanName);",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.removeSingleton(beanName);",
                "+\t\t\tthis.factoryBeanInstanceCache.remove(beanName);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Overridden to clear FactoryBean instance cache as well.",
                "+\t */",
                "+\t@Override",
                "+\tprotected void clearSingletonCache() {",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.clearSingletonCache();",
                "+\t\t\tthis.factoryBeanInstanceCache.clear();",
                "+\t\t}",
                " \t}",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "index ee0296cfa6..b66e24b0ad 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "@@ -394,7 +394,3 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\tsynchronized (this.containedBeanMap) {",
                "-\t\t\tcontainedBeans = this.containedBeanMap.get(containingBeanName);",
                "-\t\t\tif (containedBeans == null) {",
                "-\t\t\t\tcontainedBeans = new LinkedHashSet<>(8);",
                "-\t\t\t\tthis.containedBeanMap.put(containingBeanName, containedBeans);",
                "-\t\t\t}",
                "+\t\t\tcontainedBeans = this.containedBeanMap.computeIfAbsent(containingBeanName, k -> new LinkedHashSet<>(8));",
                " \t\t\tcontainedBeans.add(containedBeanName);",
                "@@ -420,7 +416,3 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\tsynchronized (this.dependentBeanMap) {",
                "-\t\t\tdependentBeans = this.dependentBeanMap.get(canonicalName);",
                "-\t\t\tif (dependentBeans == null) {",
                "-\t\t\t\tdependentBeans = new LinkedHashSet<>(8);",
                "-\t\t\t\tthis.dependentBeanMap.put(canonicalName, dependentBeans);",
                "-\t\t\t}",
                "+\t\t\tdependentBeans = this.dependentBeanMap.computeIfAbsent(canonicalName, k -> new LinkedHashSet<>(8));",
                " \t\t\tdependentBeans.add(dependentBeanName);",
                "@@ -428,7 +420,4 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\tsynchronized (this.dependenciesForBeanMap) {",
                "-\t\t\tSet<String> dependenciesForBean = this.dependenciesForBeanMap.get(dependentBeanName);",
                "-\t\t\tif (dependenciesForBean == null) {",
                "-\t\t\t\tdependenciesForBean = new LinkedHashSet<>(8);",
                "-\t\t\t\tthis.dependenciesForBeanMap.put(dependentBeanName, dependenciesForBean);",
                "-\t\t\t}",
                "+\t\t\tSet<String> dependenciesForBean =",
                "+\t\t\t\t\tthis.dependenciesForBeanMap.computeIfAbsent(dependentBeanName, k -> new LinkedHashSet<>(8));",
                " \t\t\tdependenciesForBean.add(canonicalName);",
                "@@ -527,2 +516,10 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                "+\t\tclearSingletonCache();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Clear all cached singleton instances in this registry.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected void clearSingletonCache() {",
                " \t\tsynchronized (this.singletonObjects) {",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "index e12080fffd..0d316be9c4 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -216,4 +216,6 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \tprotected void removeSingleton(String beanName) {",
                "-\t\tsuper.removeSingleton(beanName);",
                "-\t\tthis.factoryBeanObjectCache.remove(beanName);",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.removeSingleton(beanName);",
                "+\t\t\tthis.factoryBeanObjectCache.remove(beanName);",
                "+\t\t}",
                " \t}",
                "@@ -224,5 +226,7 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \t@Override",
                "-\tpublic void destroySingletons() {",
                "-\t\tsuper.destroySingletons();",
                "-\t\tthis.factoryBeanObjectCache.clear();",
                "+\tprotected void clearSingletonCache() {",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.clearSingletonCache();",
                "+\t\t\tthis.factoryBeanObjectCache.clear();",
                "+\t\t}",
                " \t}"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "122d3476d96a59605f623be7d52a9065e68f7168",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429832293,
            "hunks": 14,
            "message": "Polish Javadoc for condition annotation attributes",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/cache/annotation/CacheEvict.java b/spring-context/src/main/java/org/springframework/cache/annotation/CacheEvict.java",
                "index fcc3e44390..e80160804b 100644",
                "--- a/spring-context/src/main/java/org/springframework/cache/annotation/CacheEvict.java",
                "+++ b/spring-context/src/main/java/org/springframework/cache/annotation/CacheEvict.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -27,3 +27,3 @@ import java.lang.annotation.Target;",
                "  * Annotation indicating that a method (or all methods on a class) trigger(s)",
                "- * a cache invalidate operation.",
                "+ * a cache eviction operation.",
                "  *",
                "@@ -75,4 +75,5 @@ public @interface CacheEvict {",
                " \t/**",
                "-\t * Spring Expression Language (SpEL) attribute used for conditioning the method caching.",
                "-\t * <p>Default is \"\", meaning the method is always cached.",
                "+\t * Spring Expression Language (SpEL) attribute used for making the cache",
                "+\t * eviction operation conditional.",
                "+\t * <p>Default is \"\", meaning the cache eviction is always performed.",
                " \t */",
                "diff --git a/spring-context/src/main/java/org/springframework/cache/annotation/CachePut.java b/spring-context/src/main/java/org/springframework/cache/annotation/CachePut.java",
                "index 13b94c4f8f..6b284797af 100644",
                "--- a/spring-context/src/main/java/org/springframework/cache/annotation/CachePut.java",
                "+++ b/spring-context/src/main/java/org/springframework/cache/annotation/CachePut.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -80,3 +80,4 @@ public @interface CachePut {",
                " \t/**",
                "-\t * Spring Expression Language (SpEL) attribute used for conditioning the cache update.",
                "+\t * Spring Expression Language (SpEL) attribute used for making the cache",
                "+\t * put operation conditional.",
                " \t * <p>Default is \"\", meaning the method result is always cached.",
                "diff --git a/spring-context/src/main/java/org/springframework/cache/annotation/Cacheable.java b/spring-context/src/main/java/org/springframework/cache/annotation/Cacheable.java",
                "index 90b93eea36..50edf7b795 100644",
                "--- a/spring-context/src/main/java/org/springframework/cache/annotation/Cacheable.java",
                "+++ b/spring-context/src/main/java/org/springframework/cache/annotation/Cacheable.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -36,3 +36,3 @@ import java.lang.annotation.Target;",
                "  * <p>If no value is found in the cache for the computed key, the method is executed",
                "- * and the returned instance is used as the cache value.",
                "+ * and the returned value is used as the cache value.",
                "  *",
                "@@ -85,4 +85,5 @@ public @interface Cacheable {",
                " \t/**",
                "-\t * Spring Expression Language (SpEL) attribute used for conditioning the method caching.",
                "-\t * <p>Default is \"\", meaning the method is always cached.",
                "+\t * Spring Expression Language (SpEL) attribute used for making the method",
                "+\t * caching conditional.",
                "+\t * <p>Default is \"\", meaning the method result is always cached.",
                " \t */",
                "diff --git a/spring-context/src/main/java/org/springframework/context/event/EventListener.java b/spring-context/src/main/java/org/springframework/context/event/EventListener.java",
                "index 85c3e98823..88f78c11ce 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/event/EventListener.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/event/EventListener.java",
                "@@ -57,3 +57,4 @@ public @interface EventListener {",
                " \t/**",
                "-\t * Spring Expression Language (SpEL) attribute used for conditioning the event handling.",
                "+\t * Spring Expression Language (SpEL) attribute used for making the event",
                "+\t * handling conditional.",
                " \t * <p>Default is \"\", meaning the event is always handled.",
                "diff --git a/spring-tx/src/main/java/org/springframework/transaction/event/TransactionalEventListener.java b/spring-tx/src/main/java/org/springframework/transaction/event/TransactionalEventListener.java",
                "index 2cccb39900..49b1744718 100644",
                "--- a/spring-tx/src/main/java/org/springframework/transaction/event/TransactionalEventListener.java",
                "+++ b/spring-tx/src/main/java/org/springframework/transaction/event/TransactionalEventListener.java",
                "@@ -28,9 +28,9 @@ import org.springframework.context.event.EventListener;",
                "  * An {@link EventListener} that is invoked according to a {@link TransactionPhase}.",
                "- * <p>",
                "- * If the event is not published in the boundaries of a managed transaction, the event",
                "+ *",
                "+ * <p>If the event is not published within the boundaries of a managed transaction, the event",
                "  * is discarded unless the {@link #fallbackExecution()} flag is explicitly set. If a",
                "  * transaction is running, the event is processed according to its {@link TransactionPhase}.",
                "- * <p>",
                "- * Adding {@link org.springframework.core.annotation.Order @Order} on your annotated method",
                "- * allows you to prioritize that listener amongst other listeners running on the same phase.",
                "+ *",
                "+ * <p>Adding {@link org.springframework.core.annotation.Order @Order} on your annotated method",
                "+ * allows you to prioritize that listener amongst other listeners running in the same phase.",
                "  *",
                "@@ -47,3 +47,3 @@ public @interface TransactionalEventListener {",
                " \t * Phase to bind the handling of an event to. If no transaction is in progress, the",
                "-\t * event is not processed at all unless {@link #fallbackExecution()} has been",
                "+\t * event is not processed at all unless {@link #fallbackExecution} has been",
                " \t * enabled explicitly.",
                "@@ -58,5 +58,6 @@ public @interface TransactionalEventListener {",
                " \t/**",
                "-\t * Spring Expression Language (SpEL) attribute used for conditioning the event handling.",
                "+\t * Spring Expression Language (SpEL) attribute used for making the event",
                "+\t * handling conditional.",
                " \t * <p>Default is \"\", meaning the event is always handled.",
                "-\t * @see EventListener#condition()",
                "+\t * @see EventListener#condition",
                " \t */"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/cache/annotation/CacheEvict.java",
                "spring-context/src/main/java/org/springframework/cache/annotation/CachePut.java",
                "spring-context/src/main/java/org/springframework/cache/annotation/Cacheable.java",
                "spring-context/src/main/java/org/springframework/context/event/EventListener.java",
                "spring-tx/src/main/java/org/springframework/transaction/event/TransactionalEventListener.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "65ba72f1fc61c5424564cc94267d9a0733645851",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429200963,
            "hunks": 1,
            "message": "FactoryBean type check logs currently-in-creation exception at debug level Issue: SPR-12900",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "index 00eab29578..8853e4daf8 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java",
                "@@ -1453,5 +1453,11 @@ public abstract class AbstractBeanFactory extends FactoryBeanRegistrySupport imp",
                " \t\tcatch (BeanCreationException ex) {",
                "-\t\t\t// Can only happen when getting a FactoryBean.",
                "-\t\t\tif (logger.isWarnEnabled()) {",
                "-\t\t\t\tlogger.warn(\"Bean creation exception on FactoryBean type check: \" + ex);",
                "+\t\t\tif (ex instanceof BeanCurrentlyInCreationException) {",
                "+\t\t\t\tif (logger.isDebugEnabled()) {",
                "+\t\t\t\t\tlogger.debug(\"Bean currently in creation on FactoryBean type check: \" + ex);",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\tif (logger.isWarnEnabled()) {",
                "+\t\t\t\t\tlogger.warn(\"Bean creation exception on FactoryBean type check: \" + ex);",
                "+\t\t\t\t}",
                " \t\t\t}"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractBeanFactory.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "19293b9847783cde9e202dde139fb29696ede703",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521211222,
            "hunks": 11,
            "message": "SimpleEvaluationContext builder Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 3bcbb6d83e..03a543a1ae 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -19,2 +19,3 @@ package org.springframework.expression.spel.support;",
                " import java.util.ArrayList;",
                "+import java.util.Arrays;",
                " import java.util.Collections;",
                "@@ -40,11 +41,22 @@ import org.springframework.lang.Nullable;",
                "  * A basic implementation of {@link EvaluationContext} that focuses on a subset",
                "- * of essential SpEL features and configuration options, and relies on default",
                "- * strategies otherwise.",
                "+ * of essential SpEL features and configuration options.",
                "  *",
                "- * <p>In many cases, the full extent of the SpEL is not",
                "+ * <p>In many cases, the full extent of the SpEL language is not",
                "  * required and should be meaningfully restricted. Examples include but are not",
                "  * limited to data binding expressions, property-based filters, and others. To",
                "- * that effect, {@code SimpleEvaluationContext} supports only a subset of the",
                "- * SpEL language syntax that excludes references to Java types, constructors,",
                "- * and bean references.",
                "+ * that effect, {@code SimpleEvaluationContext} is tailored to support only a",
                "+ * subset of the SpEL language syntax, e.g. excluding references to Java types,",
                "+ * constructors, and bean references.",
                "+ *",
                "+ * <p>When creating {@code SimpleEvaluationContext} you need to choose the level",
                "+ * of support you need to deal with properties and methods in SpEL expressions.",
                "+ * By default, {@link SimpleEvaluationContext#create()} enables only read access",
                "+ * to properties via {@link DataBindingPropertyAccessor}. Alternatively, use",
                "+ * {@link SimpleEvaluationContext#builder()} to configure the exact level of",
                "+ * support needed, targeting one of, or some combination of the following:",
                "+ * <ul>",
                "+ * <li>Custom {@code PropertyAccessor} only (no reflection).</li>",
                "+ * <li>Data binding properties for read-only access.</li>",
                "+ * <li>Data binding properties for read and write.</li>",
                "+ * </ul>",
                "  *",
                "@@ -58,2 +70,4 @@ import org.springframework.lang.Nullable;",
                "  * @since 4.3.15",
                "+ * @see StandardEvaluationContext",
                "+ * @see DataBindingPropertyAccessor",
                "  */",
                "@@ -68,7 +82,5 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tprivate final List<ConstructorResolver> constructorResolvers =",
                "-\t\t\tCollections.singletonList(new ReflectiveConstructorResolver());",
                "+\tprivate final List<ConstructorResolver> constructorResolvers = Collections.emptyList();",
                "-\tprivate final List<MethodResolver> methodResolvers =",
                "-\t\t\tCollections.singletonList(new ReflectiveMethodResolver());",
                "+\tprivate final List<MethodResolver> methodResolvers = Collections.emptyList();",
                "@@ -83,8 +95,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tpublic SimpleEvaluationContext() {",
                "-\t\tthis(null, null);",
                "-\t}",
                "-",
                "-\tpublic SimpleEvaluationContext(@Nullable List<PropertyAccessor> accessors, @Nullable TypeConverter converter) {",
                "-\t\tthis.propertyAccessors = initPropertyAccessors(accessors);",
                "+\tprivate SimpleEvaluationContext(List<PropertyAccessor> accessors, @Nullable TypeConverter converter) {",
                "+\t\tthis.propertyAccessors = Collections.unmodifiableList(new ArrayList<>(accessors));",
                " \t\tthis.typeConverter = converter != null ? converter : new StandardTypeConverter();",
                "@@ -93,11 +101,2 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "-\tprivate static List<PropertyAccessor> initPropertyAccessors(@Nullable List<PropertyAccessor> accessors) {",
                "-\t\tif (accessors == null) {",
                "-\t\t\taccessors = new ArrayList<>(5);",
                "-\t\t\taccessors.add(new ReflectivePropertyAccessor());",
                "-\t\t}",
                "-\t\treturn accessors;",
                "-\t}",
                "-",
                "-",
                " \t/**",
                "@@ -120,3 +119,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Return a single {@link ReflectiveConstructorResolver}.",
                "+\t * Return an empty list, always, since this context does not support the",
                "+\t * use of type references.",
                " \t */",
                "@@ -192,2 +192,74 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                "+",
                "+\t/**",
                "+\t * Create a {@code SimpleEvaluationContext} with read-only access to",
                "+\t * public properties via {@link DataBindingPropertyAccessor}.",
                "+\t * <p>Effectively, a shortcut for:",
                "+\t * <pre class=\"code\">",
                "+\t * SimpleEvaluationContext context = SimpleEvaluationContext.builder()",
                "+\t *         .dataBindingPropertyAccessor(true)",
                "+\t *         .build();",
                "+\t * </pre>",
                "+\t * @see #builder()",
                "+\t */",
                "+\tpublic static SimpleEvaluationContext create() {",
                "+\t\treturn new Builder().dataBindingPropertyAccessor(true).build();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Return a builder to create a {@code SimpleEvaluationContext}.",
                "+\t * @see #create()",
                "+\t */",
                "+\tpublic static Builder builder() {",
                "+\t\treturn new Builder();",
                "+\t}",
                "+",
                "+",
                "+\t/**",
                "+\t * Builder for {@code SimpleEvaluationContext}.",
                "+\t */",
                "+\tpublic static class Builder {",
                "+",
                "+\t\tprivate final List<PropertyAccessor> propertyAccessors = new ArrayList<>();",
                "+",
                "+\t\t@Nullable",
                "+\t\tprivate TypeConverter typeConverter;",
                "+",
                "+",
                "+\t\t/**",
                "+\t\t * Enable access to public properties for data binding purposes.",
                "+\t\t * <p>Effectively, a shortcut for",
                "+\t\t * {@code propertyAccessor(new DataBindingPropertyAccessor(boolean))}.",
                "+\t\t * @param readOnlyAccess whether to read-only access to properties,",
                "+\t\t * {@code \"true\"}, or read and write, {@code \"false\"}.",
                "+\t\t */",
                "+\t\tpublic Builder dataBindingPropertyAccessor(boolean readOnlyAccess) {",
                "+\t\t\treturn propertyAccessor(readOnlyAccess ?",
                "+\t\t\t\t\tDataBindingPropertyAccessor.forReadOnlyAccess() :",
                "+\t\t\t\t\tDataBindingPropertyAccessor.forReadWriteAccess());",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register a custom accessor for properties in expressions.",
                "+\t\t * <p>By default, the builder does not enable property access.",
                "+\t\t */",
                "+\t\tpublic Builder propertyAccessor(PropertyAccessor... accessors) {",
                "+\t\t\tthis.propertyAccessors.addAll(Arrays.asList(accessors));",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\t/**",
                "+\t\t * Register a custom {@link TypeConverter}.",
                "+\t\t * <p>By default {@link StandardTypeConverter} is used.",
                "+\t\t */",
                "+\t\tpublic Builder typeConverter(TypeConverter converter) {",
                "+\t\t\tthis.typeConverter = converter;",
                "+\t\t\treturn this;",
                "+\t\t}",
                "+",
                "+\t\tpublic SimpleEvaluationContext build() {",
                "+\t\t\treturn new SimpleEvaluationContext(this.propertyAccessors, this.typeConverter);",
                "+\t\t}",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "index 421519627e..abfd18313c 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java",
                "@@ -49,2 +49,3 @@ import org.springframework.util.Assert;",
                "  * @since 3.0",
                "+ * @see SimpleEvaluationContext",
                "  * @see ReflectivePropertyAccessor"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "24aae2e104f9e8eb1f21e79959ab00cb7fdcc49f",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522103043,
            "hunks": 1,
            "message": "Defensive containsSingleton cache guard within getObjectFromFactoryBean Issue: SPR-16625",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "index 0d316be9c4..68c6fd0502 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "@@ -117,3 +117,5 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\tthis.factoryBeanObjectCache.put(beanName, object);",
                "+\t\t\t\t\t\tif (containsSingleton(beanName)) {",
                "+\t\t\t\t\t\t\tthis.factoryBeanObjectCache.put(beanName, object);",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "1226596b8b15454acbc15f422b9afb96c4d09e12",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429045243,
            "hunks": 7,
            "message": "Document connection handling in ScriptUtils This commit improves the documentation for ScriptUtils by explicitly mentioning that a JDBC Connection supplied to the one of the executeSqlScript() methods will not be released automatically. Issue: SPR-12908",
            "diff": [
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java",
                "index a7afb12594..21bbe07076 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java",
                "@@ -35,4 +35,5 @@ import org.springframework.util.StringUtils;",
                " /**",
                "- * Generic utility methods for working with SQL scripts. Mainly for internal use",
                "- * within the framework.",
                "+ * Generic utility methods for working with SQL scripts.",
                "+ *",
                "+ * <p>Mainly for internal use within the framework.",
                "  *",
                "@@ -354,3 +355,4 @@ public abstract class ScriptUtils {",
                " \t * individual statements within the supplied script.",
                "-\t * <p><b>Do not use this method to execute DDL if you expect rollback.</b>",
                "+\t * <p><strong>Warning</strong>: this method does <em>not</em> release the",
                "+\t * provided {@link Connection}.",
                " \t * @param connection the JDBC connection to use to execute the script; already",
                "@@ -365,2 +367,4 @@ public abstract class ScriptUtils {",
                " \t * @see #DEFAULT_BLOCK_COMMENT_END_DELIMITER",
                "+\t * @see org.springframework.jdbc.datasource.DataSourceUtils#getConnection",
                "+\t * @see org.springframework.jdbc.datasource.DataSourceUtils#releaseConnection",
                " \t */",
                "@@ -375,3 +379,4 @@ public abstract class ScriptUtils {",
                " \t * individual statements within the supplied script.",
                "-\t * <p><b>Do not use this method to execute DDL if you expect rollback.</b>",
                "+\t * <p><strong>Warning</strong>: this method does <em>not</em> release the",
                "+\t * provided {@link Connection}.",
                " \t * @param connection the JDBC connection to use to execute the script; already",
                "@@ -386,2 +391,4 @@ public abstract class ScriptUtils {",
                " \t * @see #DEFAULT_BLOCK_COMMENT_END_DELIMITER",
                "+\t * @see org.springframework.jdbc.datasource.DataSourceUtils#getConnection",
                "+\t * @see org.springframework.jdbc.datasource.DataSourceUtils#releaseConnection",
                " \t */",
                "@@ -396,3 +403,4 @@ public abstract class ScriptUtils {",
                " \t * individual statements within the supplied script.",
                "-\t * <p><b>Do not use this method to execute DDL if you expect rollback.</b>",
                "+\t * <p><strong>Warning</strong>: this method does <em>not</em> release the",
                "+\t * provided {@link Connection}.",
                " \t * @param connection the JDBC connection to use to execute the script; already",
                "@@ -420,2 +428,4 @@ public abstract class ScriptUtils {",
                " \t * @see #EOF_STATEMENT_SEPARATOR",
                "+\t * @see org.springframework.jdbc.datasource.DataSourceUtils#getConnection",
                "+\t * @see org.springframework.jdbc.datasource.DataSourceUtils#releaseConnection",
                " \t */"
            ],
            "changed_files": [
                "spring-jdbc/src/main/java/org/springframework/jdbc/datasource/init/ScriptUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b2f900e518eeb5aabf57a6deb8f267256af7b22b",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521823015,
            "hunks": 3,
            "message": "Upgrade to Hibernate ORM 5.2.16 and 5.1.13",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index e1a5e1c836..e436fc9b45 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -275,3 +275,3 @@ configure(rootProject) {",
                " \t\ttestCompile(\"org.hsqldb:hsqldb:${hsqldbVersion}\")",
                "-\t\ttestCompile(\"org.hibernate:hibernate-core:5.1.12.Final\")",
                "+\t\ttestCompile(\"org.hibernate:hibernate-core:5.1.13.Final\")",
                " \t}",
                "diff --git a/spring-orm/spring-orm.gradle b/spring-orm/spring-orm.gradle",
                "index ec5b2762cd..23e4b1ea83 100644",
                "--- a/spring-orm/spring-orm.gradle",
                "+++ b/spring-orm/spring-orm.gradle",
                "@@ -11,3 +11,3 @@ dependencies {",
                " \toptional(\"org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.1\")",
                "-\toptional(\"org.hibernate:hibernate-core:5.2.15.Final\")",
                "+\toptional(\"org.hibernate:hibernate-core:5.2.16.Final\")",
                " \toptional(\"javax.servlet:javax.servlet-api:3.1.0\")",
                "diff --git a/spring-test/spring-test.gradle b/spring-test/spring-test.gradle",
                "index 01fec0ba99..9e98ed0bfb 100644",
                "--- a/spring-test/spring-test.gradle",
                "+++ b/spring-test/spring-test.gradle",
                "@@ -66,3 +66,3 @@ dependencies {",
                " \ttestCompile(\"javax.mail:javax.mail-api:1.6.1\")",
                "-\ttestCompile(\"org.hibernate:hibernate-core:5.2.15.Final\")",
                "+\ttestCompile(\"org.hibernate:hibernate-core:5.2.16.Final\")",
                " \ttestCompile(\"org.hibernate:hibernate-validator:6.0.8.Final\")"
            ],
            "changed_files": [
                "build.gradle",
                "spring-orm/spring-orm.gradle",
                "spring-test/spring-test.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "463878a03fdc20f73fae62d7ed0e9c21e23772e2",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1428413183,
            "hunks": 7,
            "message": "Improve RedirectAttributes reference docs The use of RedirectAttributes was documented in four places in the reference documentation. This commit merges some of the places and links properly between them. Issue: SPR-12759",
            "diff": [
                "diff --git a/src/asciidoc/web-mvc.adoc b/src/asciidoc/web-mvc.adoc",
                "index dab40d0d78..b429f41995 100644",
                "--- a/src/asciidoc/web-mvc.adoc",
                "+++ b/src/asciidoc/web-mvc.adoc",
                "@@ -1171,4 +1171,4 @@ multiple requests are allowed to access a session concurrently.",
                "   (attributes stored temporarily on the server-side to make them available to the",
                "-  request after the redirect). `RedirectAttributes` is used instead of the implicit",
                "-  model if the method returns a \"redirect:\" prefixed view name or `RedirectView`.",
                "+  request after the redirect). See <<mvc-redirecting-passing-data>> and",
                "+  <<mvc-flash-attributes>>.",
                " * Command or form objects to bind request parameters to bean properties (via setters)",
                "@@ -1676,30 +1676,2 @@ attribute name:",
                "-[[mvc-ann-redirect-attributes]]",
                "-==== Specifying redirect and flash attributes",
                "-By default all model attributes are considered to be exposed as URI template variables",
                "-in the redirect URL. Of the remaining attributes those that are primitive types or",
                "-collections/arrays of primitive types are automatically appended as query parameters.",
                "-",
                "-In annotated controllers however the model may contain additional attributes originally",
                "-added for rendering purposes (e.g. drop-down field values). To gain precise control over",
                "-the attributes used in a redirect scenario, an `@RequestMapping` method can declare an",
                "-argument of type `RedirectAttributes` and use it to add attributes for use in",
                "-`RedirectView`. If the controller method does redirect, the content of",
                "-`RedirectAttributes` is used. Otherwise the content of the default `Model` is used.",
                "-",
                "-The `RequestMappingHandlerAdapter` provides a flag called",
                "-`\"ignoreDefaultModelOnRedirect\"` that can be used to indicate the content of the default",
                "-`Model` should never be used if a controller method redirects. Instead the controller",
                "-method should declare an attribute of type `RedirectAttributes` or if it doesn't do so",
                "-no attributes should be passed on to `RedirectView`. Both the MVC namespace and the MVC",
                "-Java config keep this flag set to `false` in order to maintain backwards compatibility.",
                "-However, for new applications we recommend setting it to `true`",
                "-",
                "-The `RedirectAttributes` interface can also be used to add flash attributes. Unlike",
                "-other redirect attributes, which end up in the target redirect URL, flash attributes are",
                "-saved in the HTTP session (and hence do not appear in the URL). The model of the",
                "-controller serving the target redirect URL automatically receives these flash attributes",
                "-after which they are removed from the session. See <<mvc-flash-attributes>> for an",
                "-overview of the general support for flash attributes in Spring MVC.",
                "-",
                "@@ -2696,3 +2668,3 @@ the last results in the chain not being fully inspected, because the",
                " [[mvc-redirecting]]",
                "-=== Redirecting to views",
                "+=== Redirecting to Views",
                " As mentioned previously, a controller typically returns a logical view name, which a",
                "@@ -2729,9 +2701,16 @@ to create and return an instance of Spring's `RedirectView`. In this case,",
                " has been given the (redirect) view already, the `DispatcherServlet` simply instructs the",
                "-view to do its work.",
                "+view to do its work. The `RedirectView` in turn calls `HttpServletResponse.sendRedirect()`",
                "+to send an HTTP redirect to the client browser.",
                "+",
                "+If you use `RedirectView` and the view is created by the controller itself, it is",
                "+recommended that you configure the redirect URL to be injected into the controller so",
                "+that it is not baked into the controller but configured in the context along with the",
                "+view names. The <<mvc-redirecting-redirect-prefix>> facilitates this decoupling.",
                "+",
                "+[[mvc-redirecting-passing-data]]",
                "+===== Passing Data To the Redirect Target",
                "-The `RedirectView` issues an `HttpServletResponse.sendRedirect()` call that returns to",
                "-the client browser as an HTTP redirect. By default all model attributes are considered",
                "-to be exposed as URI template variables in the redirect URL. Of the remaining attributes",
                "-those that are primitive types or collections/arrays of primitive types are",
                "-automatically appended as query parameters.",
                "+By default all model attributes are considered to be exposed as URI template variables in",
                "+the redirect URL. Of the remaining attributes those that are primitive types or",
                "+collections/arrays of primitive types are automatically appended as query parameters.",
                "@@ -2739,8 +2718,16 @@ Appending primitive type attributes as query parameters may be the desired resul",
                " model instance was prepared specifically for the redirect. However, in annotated",
                "-controllers the model may contain additional attributes added for rendering purposes",
                "-(e.g. drop-down field values). To avoid the possibility of having such attributes appear",
                "-in the URL an annotated controller can declare an argument of type `RedirectAttributes`",
                "-and use it to specify the exact attributes to make available to `RedirectView`. If the",
                "-controller method decides to redirect, the content of `RedirectAttributes` is used.",
                "-Otherwise the content of the model is used.",
                "+controllers the model may contain additional attributes added for rendering purposes (e.g.",
                "+drop-down field values). To avoid the possibility of having such attributes appear in the",
                "+URL, an `@RequestMapping` method can declare an argument of type `RedirectAttributes` and",
                "+use it to specify the exact attributes to make available to `RedirectView`. If the method",
                "+does redirect, the content of `RedirectAttributes` is used.  Otherwise the content of the",
                "+model is used.",
                "+",
                "+The `RequestMappingHandlerAdapter` provides a flag called",
                "+`\"ignoreDefaultModelOnRedirect\"` that can be used to indicate the content of the default",
                "+`Model` should never be used if a controller method redirects. Instead the controller",
                "+method should declare an attribute of type `RedirectAttributes` or if it doesn't do so",
                "+no attributes should be passed on to `RedirectView`. Both the MVC namespace and the MVC",
                "+Java config keep this flag set to `false` in order to maintain backwards compatibility.",
                "+However, for new applications we recommend setting it to `true`",
                "@@ -2760,7 +2747,5 @@ through `Model` nor `RedirectAttributes`. For example:",
                "-If you use `RedirectView` and the view is created by the controller itself, it is",
                "-recommended that you configure the redirect URL to be injected into the controller so",
                "-that it is not baked into the controller but configured in the context along with the",
                "-view names. The next section discusses this process.",
                "-",
                "+Another way of passing data to the redirect target is via __Flash Attributes__. Unlike",
                "+other redirect attributes, flash attributes are saved in the HTTP session (and hence do",
                "+not appear in the URL). See <<mvc-flash-attributes>> for more information.",
                "@@ -2969,4 +2954,4 @@ Annotated controllers typically do not need to work with `FlashMap` directly. In",
                " to add flash attributes for a redirect scenario. Flash attributes added via",
                "-`RedirectAttributes` are automatically propagated to the \"output\" FlashMap. Similarly",
                "-after the redirect attributes from the \"input\" `FlashMap` are automatically added to the",
                "+`RedirectAttributes` are automatically propagated to the \"output\" FlashMap. Similarly,",
                "+after the redirect, attributes from the \"input\" `FlashMap` are automatically added to the",
                " `Model` of the controller serving the target URL."
            ],
            "changed_files": [
                "src/asciidoc/web-mvc.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "8d5587fe4f938c51b68dffa3370840b2bda19d54",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521905451,
            "hunks": 12,
            "message": "Consistent thread-safe iteration in DefaultSingletonBeanRegistry Issue: SPR-16620",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "index b66e24b0ad..8f3b6f8782 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "@@ -386,12 +386,8 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tpublic void registerContainedBean(String containedBeanName, String containingBeanName) {",
                "-\t\t// A quick check for an existing entry upfront, avoiding synchronization...",
                "-\t\tSet<String> containedBeans = this.containedBeanMap.get(containingBeanName);",
                "-\t\tif (containedBeans != null && containedBeans.contains(containedBeanName)) {",
                "-\t\t\treturn;",
                "-\t\t}",
                "-",
                "-\t\t// No entry yet -> fully synchronized manipulation of the containedBeans Set",
                " \t\tsynchronized (this.containedBeanMap) {",
                "-\t\t\tcontainedBeans = this.containedBeanMap.computeIfAbsent(containingBeanName, k -> new LinkedHashSet<>(8));",
                "-\t\t\tcontainedBeans.add(containedBeanName);",
                "+\t\t\tSet<String> containedBeans =",
                "+\t\t\t\t\tthis.containedBeanMap.computeIfAbsent(containingBeanName, k -> new LinkedHashSet<>(8));",
                "+\t\t\tif (!containedBeans.add(containedBeanName)) {",
                "+\t\t\t\treturn;",
                "+\t\t\t}",
                " \t\t}",
                "@@ -407,14 +403,12 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tpublic void registerDependentBean(String beanName, String dependentBeanName) {",
                "-\t\t// A quick check for an existing entry upfront, avoiding synchronization...",
                " \t\tString canonicalName = canonicalName(beanName);",
                "-\t\tSet<String> dependentBeans = this.dependentBeanMap.get(canonicalName);",
                "-\t\tif (dependentBeans != null && dependentBeans.contains(dependentBeanName)) {",
                "-\t\t\treturn;",
                "-\t\t}",
                "-\t\t// No entry yet -> fully synchronized manipulation of the dependentBeans Set",
                " \t\tsynchronized (this.dependentBeanMap) {",
                "-\t\t\tdependentBeans = this.dependentBeanMap.computeIfAbsent(canonicalName, k -> new LinkedHashSet<>(8));",
                "-\t\t\tdependentBeans.add(dependentBeanName);",
                "+\t\t\tSet<String> dependentBeans =",
                "+\t\t\t\t\tthis.dependentBeanMap.computeIfAbsent(canonicalName, k -> new LinkedHashSet<>(8));",
                "+\t\t\tif (!dependentBeans.add(dependentBeanName)) {",
                "+\t\t\t\treturn;",
                "+\t\t\t}",
                " \t\t}",
                "+",
                " \t\tsynchronized (this.dependenciesForBeanMap) {",
                "@@ -434,3 +428,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tprotected boolean isDependent(String beanName, String dependentBeanName) {",
                "-\t\treturn isDependent(beanName, dependentBeanName, null);",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\treturn isDependent(beanName, dependentBeanName, null);",
                "+\t\t}",
                " \t}",
                "@@ -479,3 +475,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t}",
                "-\t\treturn StringUtils.toStringArray(dependentBeans);",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\treturn StringUtils.toStringArray(dependentBeans);",
                "+\t\t}",
                " \t}",
                "@@ -493,3 +491,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t}",
                "-\t\treturn StringUtils.toStringArray(dependenciesForBean);",
                "+\t\tsynchronized (this.dependenciesForBeanMap) {",
                "+\t\t\treturn StringUtils.toStringArray(dependenciesForBean);",
                "+\t\t}",
                " \t}",
                "@@ -559,3 +559,7 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t// Trigger destruction of dependent beans first...",
                "-\t\tSet<String> dependencies = this.dependentBeanMap.remove(beanName);",
                "+\t\tSet<String> dependencies;",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\t// Within full synchronization in order to guarantee a disconnected Set",
                "+\t\t\tdependencies = this.dependentBeanMap.remove(beanName);",
                "+\t\t}",
                " \t\tif (dependencies != null) {",
                "@@ -580,3 +584,7 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t// Trigger destruction of contained beans...",
                "-\t\tSet<String> containedBeans = this.containedBeanMap.remove(beanName);",
                "+\t\tSet<String> containedBeans;",
                "+\t\tsynchronized (this.containedBeanMap) {",
                "+\t\t\t// Within full synchronization in order to guarantee a disconnected Set",
                "+\t\t\tcontainedBeans = this.containedBeanMap.remove(beanName);",
                "+\t\t}",
                " \t\tif (containedBeans != null) {",
                "diff --git a/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "index 38713f4e24..bfb7fa8bbf 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "@@ -169,3 +169,3 @@ public class DefaultLifecycleProcessor implements LifecycleProcessor, BeanFactor",
                " \t\tLifecycle bean = lifecycleBeans.remove(beanName);",
                "-\t\tif (bean != null && !this.equals(bean)) {",
                "+\t\tif (bean != null && bean != this) {",
                " \t\t\tString[] dependenciesForBean = getBeanFactory().getDependenciesForBean(beanName);"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a8688880b1c3e4030a90bb53221e30df445bace1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521738629,
            "hunks": 3,
            "message": "Upgrade to RxJava 2.1.11 and 1.3.7 as well as Jetty 9.4.9",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 37d091da35..e1a5e1c836 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -48,3 +48,3 @@ configure(allprojects) { project ->",
                " \text.jackson2Version      = \"2.9.4\"",
                "-\text.jettyVersion         = \"9.4.8.v20171121\"",
                "+\text.jettyVersion         = \"9.4.9.v20180320\"",
                " \text.junitJupiterVersion  = \"5.0.3\"",
                "@@ -56,5 +56,5 @@ configure(allprojects) { project ->",
                " \text.reactorVersion       = \"Bismuth-SR7\"",
                "-\text.rxjavaVersion        = \"1.3.6\"",
                "+\text.rxjavaVersion        = \"1.3.7\"",
                " \text.rxjavaAdapterVersion = \"1.2.1\"",
                "-\text.rxjava2Version       = \"2.1.10\"",
                "+\text.rxjava2Version       = \"2.1.11\"",
                " \text.slf4jVersion         = \"1.7.25\"\t // spring-jcl + consistent 3rd party deps"
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "b31d55dfcec86e4dc5bf4d94ad5de8dacc657afe",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521107888,
            "hunks": 9,
            "message": "Deprecated ClientRequest.method in favor of ClientRequest.create The former method clashed with the ClientRequest.method() getter.",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java",
                "index a0617b77c3..9cc9d0c50a 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -113,7 +113,3 @@ public interface ClientRequest {",
                " \t\tAssert.notNull(other, \"'other' must not be null\");",
                "-\t\treturn new DefaultClientRequestBuilder(other.method(), other.url())",
                "-\t\t\t\t.headers(headers -> headers.addAll(other.headers()))",
                "-\t\t\t\t.cookies(cookies -> cookies.addAll(other.cookies()))",
                "-\t\t\t\t.attributes(attributes -> attributes.putAll(other.attributes()))",
                "-\t\t\t\t.body(other.body());",
                "+\t\treturn new DefaultClientRequestBuilder(other);",
                " \t}",
                "@@ -125,3 +121,5 @@ public interface ClientRequest {",
                " \t * @return the created builder",
                "+\t * @deprecated in favor of {@link #create(HttpMethod, URI)}",
                " \t */",
                "+\t@Deprecated",
                " \tstatic Builder method(HttpMethod method, URI url) {",
                "@@ -130,2 +128,12 @@ public interface ClientRequest {",
                "+\t/**",
                "+\t * Create a request builder with the given method and url.",
                "+\t * @param method the HTTP method (GET, POST, etc)",
                "+\t * @param url the URL",
                "+\t * @return the created builder",
                "+\t */",
                "+\tstatic Builder create(HttpMethod method, URI url) {",
                "+\t\treturn new DefaultClientRequestBuilder(method, url);",
                "+\t}",
                "+",
                "@@ -237,4 +245,4 @@ public interface ClientRequest {",
                " \t\t/**",
                "-\t\t * Builds the request entity with no body.",
                "-\t\t * @return the request entity",
                "+\t\t * Builds the request.",
                "+\t\t * @return the request",
                " \t\t */",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilder.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilder.java",
                "index 28a7fcd487..91aa4e873f 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilder.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilder.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -69,2 +69,10 @@ class DefaultClientRequestBuilder implements ClientRequest.Builder {",
                "+\tpublic DefaultClientRequestBuilder(ClientRequest other) {",
                "+\t\tthis(other.method(), other.url());",
                "+\t\theaders(headers -> headers.addAll(other.headers()));",
                "+\t\tcookies(cookies -> cookies.addAll(other.cookies()));",
                "+\t\tattributes(attributes -> attributes.putAll(other.attributes()));",
                "+\t\tbody(other.body());",
                "+\t}",
                "+",
                " \t@Override",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java",
                "index cce7514861..d59600eb84 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java",
                "@@ -326,3 +326,3 @@ class DefaultWebClient implements WebClient {",
                " \t\t\tURI uri = this.uri != null ? this.uri : uriBuilderFactory.expand(\"\");",
                "-\t\t\treturn ClientRequest.method(this.httpMethod, uri)",
                "+\t\t\treturn ClientRequest.create(this.httpMethod, uri)",
                " \t\t\t\t\t.headers(headers -> headers.addAll(initHeaders()))"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/ClientRequest.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilder.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "96e6406b4b45c223f85257d09f03c069be62ec20",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429127791,
            "hunks": 11,
            "message": "Clarify semantics for multiple profiles in @Profile",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/Profile.java b/spring-context/src/main/java/org/springframework/context/annotation/Profile.java",
                "index 03d5d6f437..36f609798c 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/Profile.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/Profile.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2013 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -28,4 +28,4 @@ import org.springframework.core.env.ConfigurableEnvironment;",
                " /**",
                "- * Indicates that a component is eligible for registration when one or more {@linkplain",
                "- * #value specified profiles} are active.",
                "+ * Indicates that a component is eligible for registration when one or more",
                "+ * {@linkplain #value specified profiles} are active.",
                "  *",
                "@@ -33,6 +33,7 @@ import org.springframework.core.env.ConfigurableEnvironment;",
                "  * programmatically via {@link ConfigurableEnvironment#setActiveProfiles} or declaratively",
                "- * through setting the {@link AbstractEnvironment#ACTIVE_PROFILES_PROPERTY_NAME",
                "- * spring.profiles.active} property, usually through JVM system properties, as an",
                "- * environment variable, or for web applications as a Servlet context parameter in",
                "- * {@code web.xml}.",
                "+ * by setting the {@link AbstractEnvironment#ACTIVE_PROFILES_PROPERTY_NAME",
                "+ * spring.profiles.active} property as a JVM system property, as an",
                "+ * environment variable, or as a Servlet context parameter in {@code web.xml}",
                "+ * for web applications. Profiles may also be activated declaratively in",
                "+ * integration tests via the {@code @ActiveProfiles} annotation.",
                "  *",
                "@@ -48,16 +49,16 @@ import org.springframework.core.env.ConfigurableEnvironment;",
                "  * {@code @Bean} methods and {@link Import @Import} annotations associated with that class",
                "- * will be bypassed unless one or more of the specified profiles are active. This is very",
                "- * similar to the behavior in Spring XML: if the {@code profile} attribute of the",
                "+ * will be bypassed unless one or more of the specified profiles are active. This is",
                "+ * analogous to the behavior in Spring XML: if the {@code profile} attribute of the",
                "  * {@code beans} element is supplied e.g., {@code <beans profile=\"p1,p2\">}, the",
                "- * {@code beans} element will not be parsed unless profiles 'p1' and/or 'p2' have been",
                "+ * {@code beans} element will not be parsed unless at least profile 'p1' or 'p2' has been",
                "  * activated. Likewise, if a {@code @Component} or {@code @Configuration} class is marked",
                "- * with {@code @Profile({\"p1\", \"p2\"})}, that class will not be registered/processed unless",
                "- * profiles 'p1' and/or 'p2' have been activated.",
                "+ * with {@code @Profile({\"p1\", \"p2\"})}, that class will not be registered or processed unless",
                "+ * at least profile 'p1' or 'p2' has been activated.",
                "  *",
                "  * <p>If a given profile is prefixed with the NOT operator ({@code !}), the annotated",
                "- * will be registered if the profile is <em>not</em> active. e.g., for",
                "- * {@code @Profile({\"p1\", \"!p2\"})}, registration will occur if profile 'p1' is active or",
                "- * if profile 'p2' is not active.",
                "+ * component will be registered if the profile is <em>not</em> active &mdash; for example,",
                "+ * given {@code @Profile({\"p1\", \"!p2\"})}, registration will occur if profile 'p1' is active or",
                "+ * if profile 'p2' is <em>not</em> active.",
                "  *",
                "- * <p>If the {@code @Profile} annotation is omitted, registration will occur, regardless",
                "+ * <p>If the {@code @Profile} annotation is omitted, registration will occur regardless",
                "  * of which (if any) profiles are active.",
                "@@ -65,3 +66,3 @@ import org.springframework.core.env.ConfigurableEnvironment;",
                "  * <p>When defining Spring beans via XML, the {@code \"profile\"} attribute of the",
                "- * {@code <beans>} element may be used. See the documentation in",
                "+ * {@code <beans>} element may be used. See the documentation in the",
                "  * {@code spring-beans} XSD (version 3.1 or greater) for details.",
                "@@ -70,2 +71,3 @@ import org.springframework.core.env.ConfigurableEnvironment;",
                "  * @author Phillip Webb",
                "+ * @author Sam Brannen",
                "  * @since 3.1",
                "@@ -75,2 +77,4 @@ import org.springframework.core.env.ConfigurableEnvironment;",
                "  * @see AbstractEnvironment#DEFAULT_PROFILES_PROPERTY_NAME",
                "+ * @see Conditional",
                "+ * @see org.springframework.test.context.ActiveProfiles",
                "  */"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/Profile.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9a27bc9b3e48fd2e119e8d437854c668b82ad186",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522164814,
            "hunks": 5,
            "message": "Upgrade to Jackson 2.9.5 and Hibernate Validator 6.0.9",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 1e15a0dc40..58a877532c 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -47,3 +47,3 @@ configure(allprojects) { project ->",
                " \text.hsqldbVersion        = \"2.4.0\"",
                "-\text.jackson2Version      = \"2.9.4\"",
                "+\text.jackson2Version      = \"2.9.5\"",
                " \text.jettyVersion         = \"9.4.9.v20180320\"",
                "diff --git a/spring-context-support/spring-context-support.gradle b/spring-context-support/spring-context-support.gradle",
                "index 76b668c342..84fd61f5ab 100644",
                "--- a/spring-context-support/spring-context-support.gradle",
                "+++ b/spring-context-support/spring-context-support.gradle",
                "@@ -18,3 +18,3 @@ dependencies {",
                " \ttestCompile(\"org.hsqldb:hsqldb:${hsqldbVersion}\")",
                "-\ttestCompile(\"org.hibernate:hibernate-validator:6.0.8.Final\")",
                "+\ttestCompile(\"org.hibernate:hibernate-validator:6.0.9.Final\")",
                " \ttestRuntime(\"org.ehcache:jcache:1.0.1\")",
                "diff --git a/spring-test/spring-test.gradle b/spring-test/spring-test.gradle",
                "index 14bbad3a92..d2cd0964a9 100644",
                "--- a/spring-test/spring-test.gradle",
                "+++ b/spring-test/spring-test.gradle",
                "@@ -67,3 +67,3 @@ dependencies {",
                " \ttestCompile(\"org.hibernate:hibernate-core:5.2.16.Final\")",
                "-\ttestCompile(\"org.hibernate:hibernate-validator:6.0.8.Final\")",
                "+\ttestCompile(\"org.hibernate:hibernate-validator:6.0.9.Final\")",
                " \t// Enable use of the JUnit Platform Runner",
                "diff --git a/spring-webflux/spring-webflux.gradle b/spring-webflux/spring-webflux.gradle",
                "index 7abe0f2c36..3fe439f9ce 100644",
                "--- a/spring-webflux/spring-webflux.gradle",
                "+++ b/spring-webflux/spring-webflux.gradle",
                "@@ -47,3 +47,3 @@ dependencies {",
                " \ttestCompile(\"javax.xml.bind:jaxb-api:2.3.0\")",
                "-\ttestCompile(\"org.hibernate:hibernate-validator:6.0.8.Final\")",
                "+\ttestCompile(\"org.hibernate:hibernate-validator:6.0.9.Final\")",
                " \ttestCompile \"io.reactivex.rxjava2:rxjava:${rxjava2Version}\"",
                "diff --git a/spring-webmvc/spring-webmvc.gradle b/spring-webmvc/spring-webmvc.gradle",
                "index 4cbec99a24..881ffc91a7 100644",
                "--- a/spring-webmvc/spring-webmvc.gradle",
                "+++ b/spring-webmvc/spring-webmvc.gradle",
                "@@ -56,3 +56,3 @@ dependencies {",
                " \t}",
                "-\ttestCompile(\"org.hibernate:hibernate-validator:6.0.8.Final\")",
                "+\ttestCompile(\"org.hibernate:hibernate-validator:6.0.9.Final\")",
                " \ttestCompile(\"org.apache.httpcomponents:httpclient:4.5.5\") {"
            ],
            "changed_files": [
                "build.gradle",
                "spring-context-support/spring-context-support.gradle",
                "spring-test/spring-test.gradle",
                "spring-webflux/spring-webflux.gradle",
                "spring-webmvc/spring-webmvc.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c56317928fa457f83a93411c097f150c242de6a5",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521795539,
            "hunks": 14,
            "message": "Add formData() and multipartData() to ServerRequest Issue: SPR-16551",
            "diff": [
                "diff --git a/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java",
                "index 4adca3e308..8499476861 100644",
                "--- a/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java",
                "+++ b/spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -42,2 +42,3 @@ import org.springframework.http.HttpRequest;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.http.codec.multipart.Part;",
                " import org.springframework.http.server.PathContainer;",
                "@@ -211,2 +212,17 @@ public class MockServerRequest implements ServerRequest {",
                "+",
                "+\t@Override",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic Mono<MultiValueMap<String, String>> formData() {",
                "+\t\tAssert.state(this.body != null, \"No body\");",
                "+\t\treturn (Mono<MultiValueMap<String, String>>) this.body;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\t@SuppressWarnings(\"unchecked\")",
                "+\tpublic Mono<MultiValueMap<String, Part>> multipartData() {",
                "+\t\tAssert.state(this.body != null, \"No body\");",
                "+\t\treturn (Mono<MultiValueMap<String, Part>>) this.body;",
                "+\t}",
                "+",
                " \tpublic static Builder builder() {",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java",
                "index 1f770e9b4a..a8c115b4fb 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -41,2 +41,3 @@ import org.springframework.http.MediaType;",
                " import org.springframework.http.codec.HttpMessageReader;",
                "+import org.springframework.http.codec.multipart.Part;",
                " import org.springframework.http.server.PathContainer;",
                "@@ -192,2 +193,12 @@ class DefaultServerRequest implements ServerRequest {",
                "+\t@Override",
                "+\tpublic Mono<MultiValueMap<String, String>> formData() {",
                "+\t\treturn this.exchange.getFormData();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Mono<MultiValueMap<String, Part>> multipartData() {",
                "+\t\treturn this.exchange.getMultipartData();",
                "+\t}",
                "+",
                " \tprivate ServerHttpRequest request() {",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java",
                "index 1da5a793ec..654990265a 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -41,2 +41,3 @@ import org.springframework.http.HttpMethod;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.http.codec.multipart.Part;",
                " import org.springframework.http.server.PathContainer;",
                "@@ -584,2 +585,12 @@ public abstract class RequestPredicates {",
                "+\t\t@Override",
                "+\t\tpublic Mono<MultiValueMap<String, String>> formData() {",
                "+\t\t\treturn this.request.formData();",
                "+\t\t}",
                "+",
                "+\t\t@Override",
                "+\t\tpublic Mono<MultiValueMap<String, Part>> multipartData() {",
                "+\t\t\treturn this.request.multipartData();",
                "+\t\t}",
                "+",
                " \t\t@Override",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java",
                "index 594dc84528..9ee7d8cb2d 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -39,2 +39,3 @@ import org.springframework.http.codec.HttpMessageReader;",
                " import org.springframework.http.codec.json.Jackson2CodecSupport;",
                "+import org.springframework.http.codec.multipart.Part;",
                " import org.springframework.http.server.PathContainer;",
                "@@ -246,2 +247,23 @@ public interface ServerRequest {",
                "+\t/**",
                "+\t * Return the form data from the body of the request if the Content-Type is",
                "+\t * {@code \"application/x-www-form-urlencoded\"} or an empty map otherwise.",
                "+\t *",
                "+\t * <p><strong>Note:</strong> calling this method causes the request body to",
                "+\t * be read and parsed in full and the resulting {@code MultiValueMap} is",
                "+\t * cached so that this method is safe to call more than once.",
                "+\t */",
                "+\tMono<MultiValueMap<String, String>> formData();",
                "+",
                "+\t/**",
                "+\t * Return the parts of a multipart request if the Content-Type is",
                "+\t * {@code \"multipart/form-data\"} or an empty map otherwise.",
                "+\t *",
                "+\t * <p><strong>Note:</strong> calling this method causes the request body to",
                "+\t * be read and parsed in full and the resulting {@code MultiValueMap} is",
                "+\t * cached so that this method is safe to call more than once.",
                "+\t */",
                "+\tMono<MultiValueMap<String, Part>> multipartData();",
                "+",
                "+",
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java",
                "index 8617686070..dde16b7dd1 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java",
                "@@ -37,2 +37,3 @@ import org.springframework.http.HttpRange;",
                " import org.springframework.http.MediaType;",
                "+import org.springframework.http.codec.multipart.Part;",
                " import org.springframework.http.server.PathContainer;",
                "@@ -187,2 +188,12 @@ public class ServerRequestWrapper implements ServerRequest {",
                "+\t@Override",
                "+\tpublic Mono<MultiValueMap<String, String>> formData() {",
                "+\t\treturn this.delegate.formData();",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Mono<MultiValueMap<String, Part>> multipartData() {",
                "+\t\treturn this.delegate.multipartData();",
                "+\t}",
                "+",
                " \t/**"
            ],
            "changed_files": [
                "spring-test/src/main/java/org/springframework/mock/web/reactive/function/server/MockServerRequest.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/DefaultServerRequest.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/RequestPredicates.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/ServerRequest.java",
                "spring-webflux/src/main/java/org/springframework/web/reactive/function/server/support/ServerRequestWrapper.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "9a65eec36fdbdf76c4ac45e3a1e106f0d26362d1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429513405,
            "hunks": 2,
            "message": "Avoid registering CorsConfiguration for methods without @CrossOrigin Issue: SPR-12931",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java",
                "index 7b28548e17..bcfe8c88e0 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java",
                "@@ -273,9 +273,11 @@ public class RequestMappingHandlerMapping extends RequestMappingInfoHandlerMappi",
                " \t\tHandlerMethod handlerMethod = createHandlerMethod(handler, method);",
                "+\t\tCrossOrigin typeAnnotation = AnnotationUtils.findAnnotation(handlerMethod.getBeanType(), CrossOrigin.class);",
                "+\t\tCrossOrigin methodAnnotation = AnnotationUtils.findAnnotation(method, CrossOrigin.class);",
                "-\t\tCorsConfiguration config = new CorsConfiguration();",
                "+\t\tif (typeAnnotation == null && methodAnnotation == null) {",
                "+\t\t\treturn null;",
                "+\t\t}",
                "-\t\tCrossOrigin typeAnnotation = AnnotationUtils.findAnnotation(handlerMethod.getBeanType(), CrossOrigin.class);",
                "+\t\tCorsConfiguration config = new CorsConfiguration();",
                " \t\tapplyAnnotation(config, typeAnnotation);",
                "-",
                "-\t\tCrossOrigin methodAnnotation = AnnotationUtils.findAnnotation(method, CrossOrigin.class);",
                " \t\tapplyAnnotation(config, methodAnnotation);"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerMapping.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "59189e59577b272d27c2e7b5b1a6fb68e4f93d91",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522193030,
            "hunks": 23,
            "message": "Backported core container concurrency refinements Issue: SPR-16620 Issue: SPR-16625 Issue: SPR-16627",
            "diff": [
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "index 3c8eeacf2c..00adea84c9 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -910,2 +910,6 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                " \t\t\t}",
                "+\t\t\tObject beanInstance = getSingleton(beanName, false);",
                "+\t\t\tif (beanInstance instanceof FactoryBean) {",
                "+\t\t\t\treturn (FactoryBean<?>) beanInstance;",
                "+\t\t\t}",
                " \t\t\tif (isSingletonCurrentlyInCreation(beanName) ||",
                "@@ -915,3 +919,3 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                "-\t\t\tObject instance = null;",
                "+\t\t\tObject instance;",
                " \t\t\ttry {",
                "@@ -1486,2 +1490,6 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                "+\t\tif (System.getSecurityManager() != null && bw instanceof BeanWrapperImpl) {",
                "+\t\t\t((BeanWrapperImpl) bw).setSecurityContext(getAccessControlContext());",
                "+\t\t}",
                "+",
                " \t\tMutablePropertyValues mpvs = null;",
                "@@ -1489,8 +1497,2 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                "-\t\tif (System.getSecurityManager() != null) {",
                "-\t\t\tif (bw instanceof BeanWrapperImpl) {",
                "-\t\t\t\t((BeanWrapperImpl) bw).setSecurityContext(getAccessControlContext());",
                "-\t\t\t}",
                "-\t\t}",
                "-",
                " \t\tif (pvs instanceof MutablePropertyValues) {",
                "@@ -1630,3 +1632,2 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                " \t\t}",
                "-",
                " \t\tif (mbd == null || !mbd.isSynthetic()) {",
                "@@ -1782,4 +1783,17 @@ public abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFac",
                " \tprotected void removeSingleton(String beanName) {",
                "-\t\tsuper.removeSingleton(beanName);",
                "-\t\tthis.factoryBeanInstanceCache.remove(beanName);",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.removeSingleton(beanName);",
                "+\t\t\tthis.factoryBeanInstanceCache.remove(beanName);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Overridden to clear FactoryBean instance cache as well.",
                "+\t */",
                "+\t@Override",
                "+\tprotected void clearSingletonCache() {",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.clearSingletonCache();",
                "+\t\t\tthis.factoryBeanInstanceCache.clear();",
                "+\t\t}",
                " \t}",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "index 5952878552..c40dc7bac4 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "@@ -388,11 +388,4 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tpublic void registerContainedBean(String containedBeanName, String containingBeanName) {",
                "-\t\t// A quick check for an existing entry upfront, avoiding synchronization...",
                "-\t\tSet<String> containedBeans = this.containedBeanMap.get(containingBeanName);",
                "-\t\tif (containedBeans != null && containedBeans.contains(containedBeanName)) {",
                "-\t\t\treturn;",
                "-\t\t}",
                "-",
                "-\t\t// No entry yet -> fully synchronized manipulation of the containedBeans Set",
                " \t\tsynchronized (this.containedBeanMap) {",
                "-\t\t\tcontainedBeans = this.containedBeanMap.get(containingBeanName);",
                "+\t\t\tSet<String> containedBeans = this.containedBeanMap.get(containingBeanName);",
                " \t\t\tif (containedBeans == null) {",
                "@@ -413,12 +406,6 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tpublic void registerDependentBean(String beanName, String dependentBeanName) {",
                "-\t\t// A quick check for an existing entry upfront, avoiding synchronization...",
                " \t\tString canonicalName = canonicalName(beanName);",
                "-\t\tSet<String> dependentBeans = this.dependentBeanMap.get(canonicalName);",
                "-\t\tif (dependentBeans != null && dependentBeans.contains(dependentBeanName)) {",
                "-\t\t\treturn;",
                "-\t\t}",
                "-\t\t// No entry yet -> fully synchronized manipulation of the dependentBeans Set",
                " \t\tsynchronized (this.dependentBeanMap) {",
                "-\t\t\tdependentBeans = this.dependentBeanMap.get(canonicalName);",
                "+\t\t\tSet<String> dependentBeans = this.dependentBeanMap.get(canonicalName);",
                " \t\t\tif (dependentBeans == null) {",
                "@@ -447,3 +434,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \tprotected boolean isDependent(String beanName, String dependentBeanName) {",
                "-\t\treturn isDependent(beanName, dependentBeanName, null);",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\treturn isDependent(beanName, dependentBeanName, null);",
                "+\t\t}",
                " \t}",
                "@@ -492,3 +481,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t}",
                "-\t\treturn StringUtils.toStringArray(dependentBeans);",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\treturn StringUtils.toStringArray(dependentBeans);",
                "+\t\t}",
                " \t}",
                "@@ -506,3 +497,5 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t}",
                "-\t\treturn StringUtils.toStringArray(dependenciesForBean);",
                "+\t\tsynchronized (this.dependenciesForBeanMap) {",
                "+\t\t\treturn StringUtils.toStringArray(dependenciesForBean);",
                "+\t\t}",
                " \t}",
                "@@ -529,2 +522,10 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                "+\t\tclearSingletonCache();",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Clear all cached singleton instances in this registry.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tprotected void clearSingletonCache() {",
                " \t\tsynchronized (this.singletonObjects) {",
                "@@ -564,3 +565,7 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t// Trigger destruction of dependent beans first...",
                "-\t\tSet<String> dependencies = this.dependentBeanMap.remove(beanName);",
                "+\t\tSet<String> dependencies;",
                "+\t\tsynchronized (this.dependentBeanMap) {",
                "+\t\t\t// Within full synchronization in order to guarantee a disconnected Set",
                "+\t\t\tdependencies = this.dependentBeanMap.remove(beanName);",
                "+\t\t}",
                " \t\tif (dependencies != null) {",
                "@@ -585,3 +590,7 @@ public class DefaultSingletonBeanRegistry extends SimpleAliasRegistry implements",
                " \t\t// Trigger destruction of contained beans...",
                "-\t\tSet<String> containedBeans = this.containedBeanMap.remove(beanName);",
                "+\t\tSet<String> containedBeans;",
                "+\t\tsynchronized (this.containedBeanMap) {",
                "+\t\t\t// Within full synchronization in order to guarantee a disconnected Set",
                "+\t\t\tcontainedBeans = this.containedBeanMap.remove(beanName);",
                "+\t\t}",
                " \t\tif (containedBeans != null) {",
                "diff --git a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "index 1170486bee..b2177c7051 100644",
                "--- a/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "+++ b/spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -119,3 +119,5 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\tthis.factoryBeanObjectCache.put(beanName, (object != null ? object : NULL_OBJECT));",
                "+\t\t\t\t\t\tif (containsSingleton(beanName)) {",
                "+\t\t\t\t\t\t\tthis.factoryBeanObjectCache.put(beanName, (object != null ? object : NULL_OBJECT));",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "@@ -220,4 +222,6 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \tprotected void removeSingleton(String beanName) {",
                "-\t\tsuper.removeSingleton(beanName);",
                "-\t\tthis.factoryBeanObjectCache.remove(beanName);",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.removeSingleton(beanName);",
                "+\t\t\tthis.factoryBeanObjectCache.remove(beanName);",
                "+\t\t}",
                " \t}",
                "@@ -228,5 +232,7 @@ public abstract class FactoryBeanRegistrySupport extends DefaultSingletonBeanReg",
                " \t@Override",
                "-\tpublic void destroySingletons() {",
                "-\t\tsuper.destroySingletons();",
                "-\t\tthis.factoryBeanObjectCache.clear();",
                "+\tprotected void clearSingletonCache() {",
                "+\t\tsynchronized (getSingletonMutex()) {",
                "+\t\t\tsuper.clearSingletonCache();",
                "+\t\t\tthis.factoryBeanObjectCache.clear();",
                "+\t\t}",
                " \t}",
                "diff --git a/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "index 0b7761a850..99e130a75c 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java",
                "@@ -161,3 +161,3 @@ public class DefaultLifecycleProcessor implements LifecycleProcessor, BeanFactor",
                " \t\tLifecycle bean = lifecycleBeans.remove(beanName);",
                "-\t\tif (bean != null && !this.equals(bean)) {",
                "+\t\tif (bean != null && bean != this) {",
                " \t\t\tString[] dependenciesForBean = this.beanFactory.getDependenciesForBean(beanName);"
            ],
            "changed_files": [
                "spring-beans/src/main/java/org/springframework/beans/factory/support/AbstractAutowireCapableBeanFactory.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultSingletonBeanRegistry.java",
                "spring-beans/src/main/java/org/springframework/beans/factory/support/FactoryBeanRegistrySupport.java",
                "spring-context/src/main/java/org/springframework/context/support/DefaultLifecycleProcessor.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "38dcd179d5c2ad7630310cba292e80471b000d5f",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521822561,
            "hunks": 11,
            "message": "Guidance of which PropertyAccessors to use with SimpleEvaluationContext Issue: SPR-16588",
            "diff": [
                "diff --git a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "index 20272c18e0..672f103ac0 100644",
                "--- a/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "+++ b/spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java",
                "@@ -41,3 +41,4 @@ import org.springframework.lang.Nullable;",
                "  * A basic implementation of {@link EvaluationContext} that focuses on a subset",
                "- * of essential SpEL features and configuration options.",
                "+ * of essential SpEL features and customization options, targeting simple",
                "+ * condition evaluation and in particular data binding scenarios.",
                "  *",
                "@@ -50,6 +51,7 @@ import org.springframework.lang.Nullable;",
                "  *",
                "- * <p>When creating {@code SimpleEvaluationContext} you need to choose the level",
                "- * of support you need to deal with properties and methods in SpEL expressions:",
                "+ * <p>When creating a {@code SimpleEvaluationContext} you need to choose the",
                "+ * level of support that you need for property access in SpEL expressions:",
                "  * <ul>",
                "- * <li>Custom {@code PropertyAccessor} only (no reflection)</li>",
                "+ * <li>A custom {@code PropertyAccessor} (typically not reflection-based),",
                "+ * potentially combined with a {@link DataBindingPropertyAccessor}</li>",
                "  * <li>Data binding properties for read-only access</li>",
                "@@ -70,3 +72,4 @@ import org.springframework.lang.Nullable;",
                "  *",
                "- * <p>For more flexibility, consider {@link StandardEvaluationContext} instead.",
                "+ * <p>For more flexibility, in particular for internal configuration",
                "+ * scenarios, consider using {@link StandardEvaluationContext} instead.",
                "  *",
                "@@ -75,2 +78,3 @@ import org.springframework.lang.Nullable;",
                "  * @since 4.3.15",
                "+ * @see #forPropertyAccessors",
                "  * @see #forReadOnlyDataBinding()",
                "@@ -197,8 +201,16 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t/**",
                "-\t * Create a {@code SimpleEvaluationContext} for the specified",
                "-\t * {@link PropertyAccessor} delegates.",
                "-\t * @see ReflectivePropertyAccessor",
                "-\t * @see DataBindingPropertyAccessor",
                "+\t * Create a {@code SimpleEvaluationContext} for the specified {@link PropertyAccessor}",
                "+\t * delegates: typically a custom {@code PropertyAccessor} specific to a use case",
                "+\t * (e.g. attribute resolution in a custom data structure), potentially combined with",
                "+\t * a {@link DataBindingPropertyAccessor} if property dereferences are needed as well.",
                "+\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "+\t * @see DataBindingPropertyAccessor#forReadWriteAccess()",
                " \t */",
                " \tpublic static Builder forPropertyAccessors(PropertyAccessor... accessors) {",
                "+\t\tfor (PropertyAccessor accessor : accessors) {",
                "+\t\t\tif (accessor.getClass() == ReflectivePropertyAccessor.class) {",
                "+\t\t\t\tthrow new IllegalArgumentException(\"SimpleEvaluationContext is not designed for use with a plain \" +",
                "+\t\t\t\t\t\t\"ReflectivePropertyAccessor. Consider using DataBindingPropertyAccessor or a custom subclass.\");",
                "+\t\t\t}",
                "+\t\t}",
                " \t\treturn new Builder(accessors);",
                "@@ -210,2 +222,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "+\t * @see #forPropertyAccessors",
                " \t */",
                "@@ -218,3 +231,4 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t * public properties via {@link DataBindingPropertyAccessor}.",
                "-\t * @see DataBindingPropertyAccessor#forReadOnlyAccess()",
                "+\t * @see DataBindingPropertyAccessor#forReadWriteAccess()",
                "+\t * @see #forPropertyAccessors",
                " \t */",
                "@@ -242,4 +256,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "-\t\t * {@link org.springframework.core.convert.support.DefaultConversionService}",
                "-\t\t * is used.",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                " \t\t * @see #withConversionService",
                "@@ -255,4 +268,3 @@ public class SimpleEvaluationContext implements EvaluationContext {",
                " \t\t * <p>By default a {@link StandardTypeConverter} backed by a",
                "-\t\t * {@link org.springframework.core.convert.support.DefaultConversionService}",
                "-\t\t * is used.",
                "+\t\t * {@link org.springframework.core.convert.support.DefaultConversionService} is used.",
                " \t\t * @see #withTypeConverter"
            ],
            "changed_files": [
                "spring-expression/src/main/java/org/springframework/expression/spel/support/SimpleEvaluationContext.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "19a75f2c668de369f6e9dd10d0441841e2daea99",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429638777,
            "hunks": 45,
            "message": "Document meta-annotation support in AnnotationUtils Issue: SPR-12940",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 6a427440ee..5ec94f43dd 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -40,6 +40,8 @@ import org.springframework.util.StringUtils;",
                " /**",
                "- * General utility methods for working with annotations, handling bridge methods",
                "- * (which the compiler generates for generic declarations) as well as super methods",
                "- * (for optional &quot;annotation inheritance&quot;). Note that none of this is",
                "- * provided by the JDK's introspection facilities themselves.",
                "+ * General utility methods for working with annotations, handling meta-annotations,",
                "+ * bridge methods (which the compiler generates for generic declarations) as well",
                "+ * as super methods (for optional <em>annotation inheritance</em>).",
                "+ *",
                "+ * <p>Note that most of the features of this class are not provided by the",
                "+ * JDK's introspection facilities themselves.",
                "  *",
                "@@ -54,2 +56,9 @@ import org.springframework.util.StringUtils;",
                "  *",
                "+ * <h3>Meta-annotation Support</h3>",
                "+ * <p>Most {@code find*()} methods and some {@code get*()} methods in this class",
                "+ * provide support for meta-annotations. Consult the Javadoc for each method in",
                "+ * this class for details. For support for meta-annotations with",
                "+ * <em>attribute overrides</em> in <em>composed annotations</em>, use",
                "+ * {@link AnnotatedElementUtils} instead.",
                "+ *",
                "  * @author Rob Harrop",
                "@@ -61,4 +70,5 @@ import org.springframework.util.StringUtils;",
                "  * @since 2.0",
                "- * @see java.lang.reflect.Method#getAnnotations()",
                "- * @see java.lang.reflect.Method#getAnnotation(Class)",
                "+ * @see java.lang.reflect.AnnotatedElement#getAnnotations()",
                "+ * @see java.lang.reflect.AnnotatedElement#getAnnotation(Class)",
                "+ * @see java.lang.reflect.AnnotatedElement#getDeclaredAnnotations()",
                "  */",
                "@@ -81,6 +91,9 @@ public abstract class AnnotationUtils {",
                " \t * Get a single {@link Annotation} of {@code annotationType} from the supplied",
                "-\t * annotation: either the given annotation itself or a meta-annotation thereof.",
                "+\t * annotation: either the given annotation itself or a direct meta-annotation",
                "+\t * thereof.",
                "+\t * <p>Note that this method does <em>not</em> support arbitrary levels of",
                "+\t * meta-annotations.",
                " \t * @param ann the Annotation to check",
                " \t * @param annotationType the annotation type to look for, both locally and as a meta-annotation",
                "-\t * @return the matching annotation, or {@code null} if none found",
                "+\t * @return the matching annotation, or {@code null} if not found",
                " \t * @since 4.0",
                "@@ -104,7 +117,8 @@ public abstract class AnnotationUtils {",
                " \t * Get a single {@link Annotation} of {@code annotationType} from the supplied",
                "-\t * Method, Constructor or Field. Meta-annotations will be searched if the annotation",
                "-\t * is not declared locally on the supplied element.",
                "-\t * @param annotatedElement the Method, Constructor or Field from which to get the annotation",
                "+\t * {@link AnnotatedElement}.",
                "+\t * <p>Meta-annotations will be searched if the annotation is not",
                "+\t * <em>directly present</em> on the supplied element.",
                "+\t * @param annotatedElement the {@code AnnotatedElement} from which to get the annotation",
                " \t * @param annotationType the annotation type to look for, both locally and as a meta-annotation",
                "-\t * @return the matching annotation, or {@code null} if none found",
                "+\t * @return the matching annotation, or {@code null} if not found",
                " \t * @since 3.1",
                "@@ -132,6 +146,25 @@ public abstract class AnnotationUtils {",
                " \t/**",
                "-\t * Get all {@link Annotation Annotations} from the supplied Method, Constructor or Field.",
                "+\t * Get a single {@link Annotation} of {@code annotationType} from the supplied {@link Method}.",
                "+\t * <p>Correctly handles bridge {@link Method Methods} generated by the compiler.",
                "+\t * <p>Meta-annotations will be searched if the annotation is not",
                "+\t * <em>directly present</em> on the supplied method.",
                "+\t * @param method the method to look for annotations on",
                "+\t * @param annotationType the annotation type to look for",
                "+\t * @return the matching annotation, or {@code null} if not found",
                "+\t * @see org.springframework.core.BridgeMethodResolver#findBridgedMethod(Method)",
                "+\t * @see #getAnnotation(AnnotatedElement, Class)",
                "+\t */",
                "+\tpublic static <A extends Annotation> A getAnnotation(Method method, Class<A> annotationType) {",
                "+\t\tMethod resolvedMethod = BridgeMethodResolver.findBridgedMethod(method);",
                "+\t\treturn getAnnotation((AnnotatedElement) resolvedMethod, annotationType);",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Get all {@link Annotation Annotations} that are <em>present</em> on the",
                "+\t * supplied {@link AnnotatedElement}.",
                "+\t * <p>Meta-annotations will <em>not</em> be searched.",
                " \t * @param annotatedElement the Method, Constructor or Field to retrieve annotations from",
                "-\t * @return the annotations found, or {@code null} if not resolvable (e.g. because nested",
                "-\t * Class values in annotation attributes failed to resolve at runtime)",
                "+\t * @return the annotations found, an empty array, or {@code null} if not",
                "+\t * resolvable (e.g. because nested Class values in annotation attributes",
                "+\t * failed to resolve at runtime)",
                " \t * @since 4.0.8",
                "@@ -145,4 +178,4 @@ public abstract class AnnotationUtils {",
                " \t\t\tlogIntrospectionFailure(annotatedElement, ex);",
                "-\t\t\treturn null;",
                " \t\t}",
                "+\t\treturn null;",
                " \t}",
                "@@ -150,7 +183,12 @@ public abstract class AnnotationUtils {",
                " \t/**",
                "-\t * Get all {@link Annotation Annotations} from the supplied {@link Method}.",
                "+\t * Get all {@link Annotation Annotations} that are <em>present</em on the",
                "+\t * supplied {@link Method}.",
                " \t * <p>Correctly handles bridge {@link Method Methods} generated by the compiler.",
                "+\t * <p>Meta-annotations will <em>not</em> be searched.",
                " \t * @param method the Method to retrieve annotations from",
                "-\t * @return the annotations found",
                "+\t * @return the annotations found, an empty array, or {@code null} if not",
                "+\t * resolvable (e.g. because nested Class values in annotation attributes",
                "+\t * failed to resolve at runtime)",
                " \t * @see org.springframework.core.BridgeMethodResolver#findBridgedMethod(Method)",
                "+\t * @see AnnotatedElement#getAnnotations()",
                " \t */",
                "@@ -163,4 +201,4 @@ public abstract class AnnotationUtils {",
                " \t\t\tlogIntrospectionFailure(method, ex);",
                "-\t\t\treturn null;",
                " \t\t}",
                "+\t\treturn null;",
                " \t}",
                "@@ -168,19 +206,9 @@ public abstract class AnnotationUtils {",
                " \t/**",
                "-\t * Get a single {@link Annotation} of {@code annotationType} from the supplied {@link Method}.",
                "-\t * <p>Correctly handles bridge {@link Method Methods} generated by the compiler.",
                "-\t * @param method the method to look for annotations on",
                "-\t * @param annotationType the annotation type to look for",
                "-\t * @return the annotations found",
                "-\t * @see org.springframework.core.BridgeMethodResolver#findBridgedMethod(Method)",
                "-\t */",
                "-\tpublic static <A extends Annotation> A getAnnotation(Method method, Class<A> annotationType) {",
                "-\t\tMethod resolvedMethod = BridgeMethodResolver.findBridgedMethod(method);",
                "-\t\treturn getAnnotation((AnnotatedElement) resolvedMethod, annotationType);",
                "-\t}",
                "-",
                "-\t/**",
                "-\t * Get the possibly repeating {@link Annotation}s of {@code annotationType} from the",
                "-\t * supplied {@link Method}. Deals with both a single direct annotation and repeating",
                "-\t * annotations nested within a containing annotation.",
                "+\t * Get the possibly repeating {@link Annotation}s of {@code annotationType}",
                "+\t * from the supplied {@link Method}.",
                "+\t * <p>Deals with both a single direct annotation and repeating annotations",
                "+\t * nested within a containing annotation.",
                " \t * <p>Correctly handles bridge {@link Method Methods} generated by the compiler.",
                "+\t * <p>Meta-annotations will be searched if the annotation is not",
                "+\t * <em>directly present</em> on the supplied method.",
                " \t * @param method the method to look for annotations on",
                "@@ -188,5 +216,6 @@ public abstract class AnnotationUtils {",
                " \t * @param annotationType the annotation type to look for",
                "-\t * @return the annotations found",
                "+\t * @return the annotations found or an empty set; never {@code null}",
                " \t * @since 4.0",
                " \t * @see org.springframework.core.BridgeMethodResolver#findBridgedMethod(Method)",
                "+\t * @see java.lang.annotation.Repeatable",
                " \t */",
                "@@ -201,5 +230,7 @@ public abstract class AnnotationUtils {",
                " \t * Get the possibly repeating {@link Annotation}s of {@code annotationType} from the",
                "-\t * supplied {@link AnnotatedElement}. Deals with both a single direct annotation and",
                "-\t * repeating annotations nested within a containing annotation.",
                "-\t * <p>Correctly handles bridge {@link Method Methods} generated by the compiler.",
                "+\t * supplied {@link AnnotatedElement}.",
                "+\t * <p>Deals with both a single direct annotation and repeating annotations",
                "+\t * nested within a containing annotation.",
                "+\t * <p>Meta-annotations will be searched if the annotation is not",
                "+\t * <em>directly present</em> on the supplied element.",
                " \t * @param annotatedElement the element to look for annotations on",
                "@@ -207,5 +238,5 @@ public abstract class AnnotationUtils {",
                " \t * @param annotationType the annotation type to look for",
                "-\t * @return the annotations found",
                "+\t * @return the annotations found or an empty set; never {@code null}",
                " \t * @since 4.0",
                "-\t * @see org.springframework.core.BridgeMethodResolver#findBridgedMethod(Method)",
                "+\t * @see java.lang.annotation.Repeatable",
                " \t */",
                "@@ -232,5 +263,6 @@ public abstract class AnnotationUtils {",
                " \t * this explicitly.",
                "+\t * <p>Meta-annotations will <em>not</em> be searched.",
                " \t * @param method the method to look for annotations on",
                " \t * @param annotationType the annotation type to look for",
                "-\t * @return the annotation found, or {@code null} if none",
                "+\t * @return the matching annotation, or {@code null} if not found",
                " \t */",
                "@@ -330,3 +362,3 @@ public abstract class AnnotationUtils {",
                " \t * @param annotationType the type of annotation to look for",
                "-\t * @return the annotation if found, or {@code null} if not found",
                "+\t * @return the matching annotation, or {@code null} if not found",
                " \t */",
                "@@ -352,3 +384,3 @@ public abstract class AnnotationUtils {",
                " \t * @param visited the set of annotations that have already been visited",
                "-\t * @return the annotation if found, or {@code null} if not found",
                "+\t * @return the matching annotation, or {@code null} if not found",
                " \t */",
                "@@ -401,2 +433,3 @@ public abstract class AnnotationUtils {",
                " \t * the inheritance hierarchy for interfaces will not be traversed.",
                "+\t * <p>Meta-annotations will <em>not</em> be searched.",
                " \t * <p>The standard {@link Class} API does not provide a mechanism for determining which class",
                "@@ -407,3 +440,3 @@ public abstract class AnnotationUtils {",
                " \t * @return the first {@link Class} in the inheritance hierarchy of the specified {@code clazz}",
                "-\t * which declares an annotation for the specified {@code annotationType}, or {@code null}",
                "+\t * which declares an annotation of the specified {@code annotationType}, or {@code null}",
                " \t * if not found",
                "@@ -434,2 +467,3 @@ public abstract class AnnotationUtils {",
                " \t * will be checked; the inheritance hierarchy for interfaces will not be traversed.",
                "+\t * <p>Meta-annotations will <em>not</em> be searched.",
                " \t * <p>The standard {@link Class} API does not provide a mechanism for determining",
                "@@ -465,5 +499,6 @@ public abstract class AnnotationUtils {",
                " \t/**",
                "-\t * Determine whether an annotation for the specified {@code annotationType} is",
                "-\t * declared locally on the supplied {@code clazz}. The supplied {@link Class}",
                "-\t * may represent any type.",
                "+\t * Determine whether an annotation of the specified {@code annotationType} is",
                "+\t * declared locally (i.e., <em>directly present</em>) on the supplied",
                "+\t * {@code clazz}. The supplied {@link Class} may represent any type.",
                "+\t * <p>Meta-annotations will <em>not</em> be searched.",
                " \t * <p>Note: This method does <strong>not</strong> determine if the annotation is",
                "@@ -474,5 +509,6 @@ public abstract class AnnotationUtils {",
                " \t * @param clazz the Class object corresponding to the class on which to check for the annotation",
                "-\t * @return {@code true} if an annotation for the specified {@code annotationType}",
                "-\t * is declared locally on the supplied {@code clazz}",
                "-\t * @see Class#getDeclaredAnnotations()",
                "+\t * @return {@code true} if an annotation of the specified {@code annotationType}",
                "+\t * is <em>directly present</em> on the supplied {@code clazz}",
                "+\t * @see java.lang.Class#getDeclaredAnnotations()",
                "+\t * @see java.lang.Class#getDeclaredAnnotation(Class)",
                " \t * @see #isAnnotationInherited(Class, Class)",
                "@@ -499,5 +535,6 @@ public abstract class AnnotationUtils {",
                " \t/**",
                "-\t * Determine whether an annotation for the specified {@code annotationType} is present",
                "+\t * Determine whether an annotation of the specified {@code annotationType} is <em>present</em>",
                " \t * on the supplied {@code clazz} and is {@linkplain java.lang.annotation.Inherited inherited}",
                " \t * (i.e., not declared locally for the class).",
                "+\t * <p>Meta-annotations will <em>not</em> be searched.",
                " \t * <p>If the supplied {@code clazz} is an interface, only the interface itself will be checked.",
                "@@ -508,3 +545,3 @@ public abstract class AnnotationUtils {",
                " \t * @param clazz the Class object corresponding to the class on which to check for the annotation",
                "-\t * @return {@code true} if an annotation for the specified {@code annotationType} is present",
                "+\t * @return {@code true} if an annotation of the specified {@code annotationType} is present",
                " \t * on the supplied {@code clazz} and is <em>inherited</em>",
                "@@ -532,3 +569,6 @@ public abstract class AnnotationUtils {",
                " \t * Retrieve the given annotation's attributes as a {@link Map}, preserving all",
                "-\t * attribute types as-is.",
                "+\t * attribute types.",
                "+\t * <p>Equivalent to calling {@link #getAnnotationAttributes(Annotation, boolean, boolean)}",
                "+\t * with the {@code classValuesAsString} and {@code nestedAnnotationsAsMap} parameters",
                "+\t * set to {@code false}.",
                " \t * <p>Note: This method actually returns an {@link AnnotationAttributes} instance.",
                "@@ -537,3 +577,4 @@ public abstract class AnnotationUtils {",
                " \t * @return the Map of annotation attributes, with attribute names as keys and",
                "-\t * corresponding attribute values as values",
                "+\t * corresponding attribute values as values; never {@code null}",
                "+\t * @see #getAnnotationAttributes(Annotation, boolean, boolean)",
                " \t */",
                "@@ -544,5 +585,5 @@ public abstract class AnnotationUtils {",
                " \t/**",
                "-\t * Retrieve the given annotation's attributes as a {@link Map}. Equivalent to",
                "-\t * calling {@link #getAnnotationAttributes(Annotation, boolean, boolean)} with",
                "-\t * the {@code nestedAnnotationsAsMap} parameter set to {@code false}.",
                "+\t * Retrieve the given annotation's attributes as a {@link Map}.",
                "+\t * <p>Equivalent to calling {@link #getAnnotationAttributes(Annotation, boolean, boolean)}",
                "+\t * with the {@code nestedAnnotationsAsMap} parameter set to {@code false}.",
                " \t * <p>Note: This method actually returns an {@link AnnotationAttributes} instance.",
                "@@ -554,3 +595,4 @@ public abstract class AnnotationUtils {",
                " \t * @return the Map of annotation attributes, with attribute names as keys and",
                "-\t * corresponding attribute values as values",
                "+\t * corresponding attribute values as values; never {@code null}",
                "+\t * @see #getAnnotationAttributes(Annotation, boolean, boolean)",
                " \t */",
                "@@ -566,3 +608,3 @@ public abstract class AnnotationUtils {",
                " \t * @param annotation the annotation to retrieve the attributes for",
                "-\t * @param classValuesAsString whether to turn Class references into Strings (for",
                "+\t * @param classValuesAsString whether to convert Class references into Strings (for",
                " \t * compatibility with {@link org.springframework.core.type.AnnotationMetadata}",
                "@@ -574,3 +616,3 @@ public abstract class AnnotationUtils {",
                " \t * @return the annotation attributes (a specialized Map) with attribute names as keys",
                "-\t * and corresponding attribute values as values",
                "+\t * and corresponding attribute values as values; never {@code null}",
                " \t * @since 3.1.1",
                "@@ -815,6 +857,7 @@ public abstract class AnnotationUtils {",
                " \t\t\t\t\tfor (Annotation ann : element.getAnnotations()) {",
                "-\t\t\t\t\t\tif (ObjectUtils.nullSafeEquals(this.annotationType, ann.annotationType())) {",
                "+\t\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = ann.annotationType();",
                "+\t\t\t\t\t\tif (ObjectUtils.nullSafeEquals(this.annotationType, currentAnnotationType)) {",
                " \t\t\t\t\t\t\tthis.result.add((A) ann);",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\telse if (ObjectUtils.nullSafeEquals(this.containerAnnotationType, ann.annotationType())) {",
                "+\t\t\t\t\t\telse if (ObjectUtils.nullSafeEquals(this.containerAnnotationType, currentAnnotationType)) {",
                " \t\t\t\t\t\t\tthis.result.addAll(getValue(ann));",
                "@@ -822,3 +865,3 @@ public abstract class AnnotationUtils {",
                " \t\t\t\t\t\telse if (!isInJavaLangAnnotationPackage(ann)) {",
                "-\t\t\t\t\t\t\tprocess(ann.annotationType());",
                "+\t\t\t\t\t\t\tprocess(currentAnnotationType);",
                " \t\t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "a3159dfbf24168b95f9d3435bea15721cde8fb38",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1426612445,
            "hunks": 28,
            "message": "Add script based templating support This commit adds support for script based templating. Any templating library running on top of a JSR-223 ScriptEngine that implements Invocable like Nashorn or JRuby could be used. For example, in order to render Mustache templates thanks to the Nashorn Javascript engine provided with Java 8+, you should declare the following configuration: @Configuration @EnableWebMvc public class MustacheConfig extends WebMvcConfigurerAdapter { \t@Override \tpublic void configureViewResolvers(ViewResolverRegistry registry) { \t\tregistry.scriptTemplate(); \t} \t@Bean \tpublic ScriptTemplateConfigurer configurer() { \t\tScriptTemplateConfigurer configurer = new ScriptTemplateConfigurer(); \t\tconfigurer.setEngineName(\"nashorn\"); \t\tconfigurer.setScripts(\"mustache.js\"); \t\tconfigurer.setRenderObject(\"Mustache\"); \t\tconfigurer.setRenderFunction(\"render\"); \t\treturn configurer; \t} } The XML counterpart is: <beans> \t<mvc:annotation-driven /> \t<mvc:view-resolvers> \t\t<mvc:script-template /> \t</mvc:view-resolvers> \t<mvc:script-template-configurer engine-name=\"nashorn\" render-object=\"Mustache\" render-function=\"render\"> \t\t<mvc:script location=\"mustache.js\" /> \t</mvc:script-template-configurer> </beans> Tested with:  - Handlebars running on Nashorn  - Mustache running on Nashorn  - React running on Nashorn  - EJS running on Nashorn  - ERB running on JRuby  - String templates running on Jython Issue: SPR-12266",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index aae84a11ad..c969e83394 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -49,2 +49,3 @@ configure(allprojects) { project ->",
                " \text.jodaVersion          = \"2.7\"",
                "+\text.jrubyVersion         = \"1.7.19\"",
                " \text.jtaVersion           = \"1.2\"",
                "@@ -471,3 +472,3 @@ project(\"spring-context\") {",
                " \t\toptional(\"org.beanshell:bsh:2.0b4\")",
                "-\t\toptional(\"org.jruby:jruby:1.7.19\")",
                "+\t\toptional(\"org.jruby:jruby:${jrubyVersion}\")",
                " \t\ttestCompile(\"javax.inject:javax.inject-tck:1\")",
                "@@ -900,2 +901,8 @@ project(\"spring-webmvc\") {",
                " \t\ttestCompile(\"org.slf4j:slf4j-jcl:${slf4jVersion}\")",
                "+\t\ttestCompile(\"org.webjars:mustachejs:0.8.2\")",
                "+\t\ttestCompile(\"org.webjars:handlebars:3.0.0-1\")",
                "+\t\ttestCompile(\"org.webjars:react:0.12.2\")",
                "+\t\ttestCompile(\"org.webjars:underscorejs:1.8.2\")",
                "+\t\ttestCompile(\"org.jruby:jruby:${jrubyVersion}\")",
                "+\t\ttestCompile(\"org.python:jython-standalone:2.5.3\")",
                " \t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/MvcNamespaceHandler.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/MvcNamespaceHandler.java",
                "index 03edc2672f..c4305f0288 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/MvcNamespaceHandler.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/MvcNamespaceHandler.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -26,2 +26,3 @@ import org.springframework.beans.factory.xml.NamespaceHandlerSupport;",
                "  * @author Jeremy Grelle",
                "+ * @author Sebastien Deleuze",
                "  * @since 3.0",
                "@@ -44,2 +45,3 @@ public class MvcNamespaceHandler extends NamespaceHandlerSupport {",
                " \t\tregisterBeanDefinitionParser(\"groovy-configurer\", new GroovyMarkupConfigurerBeanDefinitionParser());",
                "+\t\tregisterBeanDefinitionParser(\"script-template-configurer\", new ScriptTemplateConfigurerBeanDefinitionParser());",
                " \t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ScriptTemplateConfigurerBeanDefinitionParser.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ScriptTemplateConfigurerBeanDefinitionParser.java",
                "new file mode 100644",
                "index 0000000000..eb640e2aa0",
                "--- /dev/null",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ScriptTemplateConfigurerBeanDefinitionParser.java",
                "@@ -0,0 +1,84 @@",
                "+/*",
                "+ * Copyright 2002-2015 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.web.servlet.config;",
                "+",
                "+import java.nio.charset.Charset;",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+",
                "+import org.w3c.dom.Element;",
                "+",
                "+import org.springframework.beans.factory.support.AbstractBeanDefinition;",
                "+import org.springframework.beans.factory.support.BeanDefinitionBuilder;",
                "+import org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;",
                "+import org.springframework.beans.factory.xml.ParserContext;",
                "+import org.springframework.util.xml.DomUtils;",
                "+",
                "+/**",
                "+ * Parse the <mvc:script-template-configurer> MVC namespace element and register a",
                "+ * {@code ScriptTemplateConfigurer} bean.",
                "+ *",
                "+ * @author Sebastien Deleuze",
                "+ * @since 4.2",
                "+ */",
                "+public class ScriptTemplateConfigurerBeanDefinitionParser extends AbstractSimpleBeanDefinitionParser {",
                "+",
                "+\tpublic static final String BEAN_NAME = \"mvcScriptTemplateConfigurer\";",
                "+",
                "+",
                "+\t@Override",
                "+\tprotected String resolveId(Element element, AbstractBeanDefinition definition, ParserContext parserContext) {",
                "+\t\treturn BEAN_NAME;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected String getBeanClassName(Element element) {",
                "+\t\treturn \"org.springframework.web.servlet.view.script.ScriptTemplateConfigurer\";",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected void doParse(Element element, ParserContext parserContext, BeanDefinitionBuilder builder) {",
                "+\t\tList<Element> childElements = DomUtils.getChildElementsByTagName(element, \"script\");",
                "+\t\tif (!childElements.isEmpty()) {",
                "+\t\t\tList<String> locations = new ArrayList<String>(childElements.size());",
                "+\t\t\tfor (Element childElement : childElements) {",
                "+\t\t\t\tlocations.add(childElement.getAttribute(\"location\"));",
                "+\t\t\t}",
                "+\t\t\tbuilder.addPropertyValue(\"scripts\", locations.toArray(new String[locations.size()]));",
                "+\t\t}",
                "+\t\tbuilder.addPropertyValue(\"engineName\", element.getAttribute(\"engine-name\"));",
                "+\t\tif (element.hasAttribute(\"render-object\")) {",
                "+\t\t\tbuilder.addPropertyValue(\"renderObject\", element.getAttribute(\"render-object\"));",
                "+\t\t}",
                "+\t\tif (element.hasAttribute(\"render-function\")) {",
                "+\t\t\tbuilder.addPropertyValue(\"renderFunction\", element.getAttribute(\"render-function\"));",
                "+\t\t}",
                "+\t\tif (element.hasAttribute(\"charset\")) {",
                "+\t\t\tbuilder.addPropertyValue(\"charset\", Charset.forName(element.getAttribute(\"charset\")));",
                "+\t\t}",
                "+\t\tif (element.hasAttribute(\"resource-loader-path\")) {",
                "+\t\t\tbuilder.addPropertyValue(\"resourceLoaderPath\", element.getAttribute(\"resource-loader-path\"));",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected boolean isEligibleAttribute(String name) {",
                "+\t\treturn (name.equals(\"engine-name\") || name.equals(\"scripts\") || name.equals(\"render-object\") ||",
                "+\t\t\t\tname.equals(\"render-function\") || name.equals(\"charset\") || name.equals(\"resource-loader-path\"));",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewResolversBeanDefinitionParser.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewResolversBeanDefinitionParser.java",
                "index 37ce259f92..ff743ba614 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewResolversBeanDefinitionParser.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewResolversBeanDefinitionParser.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -39,2 +39,3 @@ import org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver;",
                " import org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver;",
                "+import org.springframework.web.servlet.view.script.ScriptTemplateViewResolver;",
                " import org.springframework.web.servlet.view.tiles3.TilesViewResolver;",
                "@@ -62,2 +63,4 @@ import org.springframework.web.servlet.view.velocity.VelocityViewResolver;",
                "  * @see VelocityConfigurerBeanDefinitionParser",
                "+ * @see GroovyMarkupConfigurerBeanDefinitionParser",
                "+ * @see ScriptTemplateConfigurerBeanDefinitionParser",
                "  */",
                "@@ -74,3 +77,3 @@ public class ViewResolversBeanDefinitionParser implements BeanDefinitionParser {",
                " \t\tresolvers.setSource(context.extractSource(element));",
                "-\t\tString[] names = new String[] {\"jsp\", \"tiles\", \"bean-name\", \"freemarker\", \"velocity\", \"groovy\", \"bean\", \"ref\"};",
                "+\t\tString[] names = new String[] {\"jsp\", \"tiles\", \"bean-name\", \"freemarker\", \"velocity\", \"groovy\", \"script-template\", \"bean\", \"ref\"};",
                "@@ -108,2 +111,6 @@ public class ViewResolversBeanDefinitionParser implements BeanDefinitionParser {",
                " \t\t\t}",
                "+\t\t\telse if (\"script-template\".equals(name)) {",
                "+\t\t\t\tresolverBeanDef = new RootBeanDefinition(ScriptTemplateViewResolver.class);",
                "+\t\t\t\taddUrlBasedViewResolverProperties(resolverElement, resolverBeanDef);",
                "+\t\t\t}",
                " \t\t\telse if (\"bean-name\".equals(name)) {",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ViewResolverRegistry.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ViewResolverRegistry.java",
                "index 6af073c56d..c4fedda88a 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ViewResolverRegistry.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ViewResolverRegistry.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2014 the original author or authors.",
                "+ * Copyright 2002-2015 the original author or authors.",
                "  *",
                "@@ -39,2 +39,4 @@ import org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer;",
                " import org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver;",
                "+import org.springframework.web.servlet.view.script.ScriptTemplateConfigurer;",
                "+import org.springframework.web.servlet.view.script.ScriptTemplateViewResolver;",
                " import org.springframework.web.servlet.view.tiles3.TilesConfigurer;",
                "@@ -235,2 +237,18 @@ public class ViewResolverRegistry {",
                "+\t/**",
                "+\t * Register a script template view resolver with an empty default view name prefix and suffix.",
                "+\t * @since 4.2",
                "+\t */",
                "+\tpublic UrlBasedViewResolverRegistration scriptTemplate() {",
                "+\t\tif (this.applicationContext != null && !hasBeanOfType(ScriptTemplateConfigurer.class)) {",
                "+\t\t\tthrow new BeanInitializationException(\"In addition to a script template view resolver \" +",
                "+\t\t\t\t\t\"there must also be a single ScriptTemplateConfig bean in this web application context \" +",
                "+\t\t\t\t\t\"(or its parent): ScriptTemplateConfigurer is the usual implementation. \" +",
                "+\t\t\t\t\t\"This bean may be given any name.\");",
                "+\t\t}",
                "+\t\tScriptRegistration registration = new ScriptRegistration();",
                "+\t\tthis.viewResolvers.add(registration.getViewResolver());",
                "+\t\treturn registration;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -326,2 +344,10 @@ public class ViewResolverRegistry {",
                "+\tprivate static class ScriptRegistration extends UrlBasedViewResolverRegistration {",
                "+",
                "+\t\tprivate ScriptRegistration() {",
                "+\t\t\tsuper(new ScriptTemplateViewResolver());",
                "+\t\t\tgetViewResolver();",
                "+\t\t}",
                "+\t}",
                "+",
                " }",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateConfig.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateConfig.java",
                "new file mode 100644",
                "index 0000000000..4919492b15",
                "--- /dev/null",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateConfig.java",
                "@@ -0,0 +1,44 @@",
                "+/*",
                "+ * Copyright 2002-2015 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.web.servlet.view.script;",
                "+",
                "+import java.nio.charset.Charset;",
                "+import javax.script.ScriptEngine;",
                "+",
                "+import org.springframework.core.io.ResourceLoader;",
                "+",
                "+/**",
                "+ * Interface to be implemented by objects that configure and manage a",
                "+ * {@link ScriptEngine} for automatic lookup in a web environment.",
                "+ * Detected and used by {@link ScriptTemplateView}.",
                "+ *",
                "+ * @author Sebastien Deleuze",
                "+ * @since 4.2",
                "+ */",
                "+public interface ScriptTemplateConfig {",
                "+",
                "+\tScriptEngine getEngine();",
                "+",
                "+\tString getRenderObject();",
                "+",
                "+\tString getRenderFunction();",
                "+",
                "+\tCharset getCharset();",
                "+",
                "+\tResourceLoader getResourceLoader();",
                "+",
                "+}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateConfigurer.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateConfigurer.java",
                "new file mode 100644",
                "index 0000000000..5e3c1b755a",
                "--- /dev/null",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateConfigurer.java",
                "@@ -0,0 +1,257 @@",
                "+/*",
                "+ * Copyright 2002-2015 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.web.servlet.view.script;",
                "+",
                "+import java.io.IOException;",
                "+import java.io.InputStreamReader;",
                "+import java.io.Reader;",
                "+import java.net.URL;",
                "+import java.net.URLClassLoader;",
                "+import java.nio.charset.Charset;",
                "+import java.util.ArrayList;",
                "+import java.util.List;",
                "+",
                "+import javax.script.Invocable;",
                "+import javax.script.ScriptEngine;",
                "+import javax.script.ScriptEngineManager;",
                "+import javax.script.ScriptException;",
                "+",
                "+import org.springframework.beans.factory.InitializingBean;",
                "+import org.springframework.context.ApplicationContext;",
                "+import org.springframework.context.ApplicationContextAware;",
                "+import org.springframework.core.io.DefaultResourceLoader;",
                "+import org.springframework.core.io.Resource;",
                "+import org.springframework.core.io.ResourceLoader;",
                "+import org.springframework.util.Assert;",
                "+import org.springframework.util.StringUtils;",
                "+",
                "+/**",
                "+ * An implementation of Spring MVC's {@link ScriptTemplateConfig} for creating",
                "+ * a {@code ScriptEngine} for use in a web application.",
                "+ *",
                "+ * <pre class=\"code\">",
                "+ *",
                "+ * // Add the following to an &#64;Configuration class",
                "+ *",
                "+ * &#64;Bean",
                "+ * public ScriptTemplateConfigurer mustacheConfigurer() {",
                "+ *",
                "+ *    ScriptTemplateConfigurer configurer = new ScriptTemplateConfigurer();",
                "+ *    configurer.setEngineName(\"nashorn\");",
                "+ *    configurer.setScripts(\"mustache.js\");",
                "+ *    configurer.setRenderObject(\"Mustache\");",
                "+ *    configurer.setRenderFunction(\"render\");",
                "+ *    return configurer;",
                "+ * }",
                "+ * </pre>",
                "+ *",
                "+ * @author Sebastien Deleuze",
                "+ * @since 4.2",
                "+ * @see ScriptTemplateView",
                "+ */",
                "+public class ScriptTemplateConfigurer implements ScriptTemplateConfig, ApplicationContextAware, InitializingBean {",
                "+",
                "+\tprivate ScriptEngine engine;",
                "+",
                "+\tprivate String engineName;",
                "+",
                "+\tprivate ApplicationContext applicationContext;",
                "+",
                "+\tprivate String[] scripts;",
                "+",
                "+\tprivate String renderObject;",
                "+",
                "+\tprivate String renderFunction;",
                "+",
                "+\tprivate Charset charset = Charset.forName(\"UTF-8\");",
                "+",
                "+\tprivate ResourceLoader resourceLoader;",
                "+",
                "+\tprivate String resourceLoaderPath = \"classpath:\";",
                "+",
                "+\t/**",
                "+\t * Set the {@link ScriptEngine} to use by the view.",
                "+\t * The script engine must implement {@code Invocable}.",
                "+\t * You must define {@code engine} or {@code engineName}, not both.",
                "+\t */",
                "+\tpublic void setEngine(ScriptEngine engine) {",
                "+\t\tAssert.isInstanceOf(Invocable.class, engine);",
                "+\t\tthis.engine = engine;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ScriptEngine getEngine() {",
                "+\t\treturn this.engine;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Set the engine name that will be used to instantiate the {@link ScriptEngine}.",
                "+\t * The script engine must implement {@code Invocable}.",
                "+\t * You must define {@code engine} or {@code engineName}, not both.",
                "+\t */",
                "+\tpublic void setEngineName(String engineName) {",
                "+\t\tthis.engineName = engineName;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void setApplicationContext(ApplicationContext applicationContext) {",
                "+\t\tthis.applicationContext = applicationContext;",
                "+\t}",
                "+",
                "+\tprotected ApplicationContext getApplicationContext() {",
                "+\t\treturn this.applicationContext;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Set the scripts to be loaded by the script engine (library or user provided).",
                "+\t * Since {@code resourceLoaderPath} default value is \"classpath:\", you can load easily",
                "+\t * any script available on the classpath.",
                "+\t *",
                "+\t * For example, in order to use a Javascript library available as a WebJars dependency",
                "+\t * and a custom \"render.js\" file, you should call",
                "+\t * {@code configurer.setScripts(\"/META-INF/resources/webjars/library/version/library.js\",",
                "+\t * \"com/myproject/script/render.js\");}.",
                "+\t *",
                "+\t * @see #setResourceLoaderPath(String)",
                "+\t * @see <a href=\"http://www.webjars.org\">WebJars</a>",
                "+\t */",
                "+\tpublic void setScripts(String... scriptNames) {",
                "+\t\tthis.scripts = scriptNames;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic String getRenderObject() {",
                "+\t\treturn renderObject;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Set the object where belongs the render function (optional).",
                "+\t * For example, in order to call {@code Mustache.render()}, {@code renderObject}",
                "+\t * should be set to {@code \"Mustache\"} and {@code renderFunction} to {@code \"render\"}.",
                "+\t */",
                "+\tpublic void setRenderObject(String renderObject) {",
                "+\t\tthis.renderObject = renderObject;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic String getRenderFunction() {",
                "+\t\treturn renderFunction;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Set the render function name (mandatory). This function will be called with the",
                "+\t * following parameters:",
                "+\t * <ol>",
                "+\t *     <li>{@code template}: the view template content (String)</li>",
                "+\t *     <li>{@code model}: the view model (Map)</li>",
                "+\t * </ol>",
                "+\t */",
                "+\tpublic void setRenderFunction(String renderFunction) {",
                "+\t\tthis.renderFunction = renderFunction;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Set the charset used to read script and template files.",
                "+\t * ({@code UTF-8} by default).",
                "+\t */",
                "+\tpublic void setCharset(Charset charset) {",
                "+\t\tthis.charset = charset;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic Charset getCharset() {",
                "+\t\treturn this.charset;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Set the resource loader path(s) via a Spring resource location.",
                "+\t * Accepts multiple locations as a comma-separated list of paths.",
                "+\t * Standard URLs like \"file:\" and \"classpath:\" and pseudo URLs are supported",
                "+\t * as understood by Spring's {@link org.springframework.core.io.ResourceLoader}.",
                "+\t * Relative paths are allowed when running in an ApplicationContext.",
                "+\t * Default is \"classpath:\".",
                "+\t */",
                "+\tpublic void setResourceLoaderPath(String resourceLoaderPath) {",
                "+\t\tthis.resourceLoaderPath = resourceLoaderPath;",
                "+\t}",
                "+",
                "+\tpublic String getResourceLoaderPath() {",
                "+\t\treturn resourceLoaderPath;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic ResourceLoader getResourceLoader() {",
                "+\t\treturn resourceLoader;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tpublic void afterPropertiesSet() throws Exception {",
                "+\t\tif (this.engine == null) {",
                "+\t\t\tthis.engine = createScriptEngine();",
                "+\t\t}",
                "+\t\tAssert.state(this.renderFunction != null, \"renderFunction property must be defined.\");",
                "+\t\tthis.resourceLoader  = new DefaultResourceLoader(createClassLoader());",
                "+\t\tif (this.scripts != null) {",
                "+\t\t\ttry {",
                "+\t\t\t\tfor (String script : this.scripts) {",
                "+\t\t\t\t\tthis.engine.eval(read(script));",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t\tcatch (ScriptException e) {",
                "+\t\t\t\tthrow new IllegalStateException(\"could not load script\", e);",
                "+\t\t\t}",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tprotected ClassLoader createClassLoader() throws IOException {",
                "+\t\tString[] paths = StringUtils.commaDelimitedListToStringArray(this.resourceLoaderPath);",
                "+\t\tList<URL> urls = new ArrayList<URL>();",
                "+\t\tfor (String path : paths) {",
                "+\t\t\tResource[] resources = getApplicationContext().getResources(path);",
                "+\t\t\tif (resources.length > 0) {",
                "+\t\t\t\tfor (Resource resource : resources) {",
                "+\t\t\t\t\tif (resource.exists()) {",
                "+\t\t\t\t\t\turls.add(resource.getURL());",
                "+\t\t\t\t\t}",
                "+\t\t\t\t}",
                "+\t\t\t}",
                "+\t\t}",
                "+\t\tClassLoader classLoader = getApplicationContext().getClassLoader();",
                "+\t\treturn (urls.size() > 0 ? new URLClassLoader(urls.toArray(new URL[urls.size()]), classLoader) : classLoader);",
                "+\t}",
                "+",
                "+\tprivate Reader read(String path) throws IOException {",
                "+\t\tResource resource = this.resourceLoader.getResource(path);",
                "+\t\tAssert.state(resource.exists(), \"Resource \" + path + \" not found.\");",
                "+\t\treturn new InputStreamReader(resource.getInputStream());",
                "+\t}",
                "+",
                "+\tprotected ScriptEngine createScriptEngine() throws IOException {",
                "+\t\tif (this.engine != null && this.engineName != null) {",
                "+\t\t\tthrow new IllegalStateException(\"You should define engine or engineName properties, not both.\");",
                "+\t\t}",
                "+\t\tif (this.engineName != null) {",
                "+\t\t\tScriptEngine scriptEngine = new ScriptEngineManager().getEngineByName(this.engineName);",
                "+\t\t\tAssert.state(scriptEngine != null, \"No engine \\\"\" + this.engineName + \"\\\" found.\");",
                "+\t\t\tAssert.state(scriptEngine instanceof Invocable, \"Script engine should be instance of Invocable\");",
                "+\t\t\tthis.engine = scriptEngine;",
                "+\t\t}",
                "+\t\tAssert.state(this.engine != null, \"No script engine found, please specify valid engine or engineName properties.\");",
                "+\t\treturn this.engine;",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateView.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateView.java",
                "new file mode 100644",
                "index 0000000000..1d306e9f2e",
                "--- /dev/null",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateView.java",
                "@@ -0,0 +1,152 @@",
                "+/*",
                "+ * Copyright 2002-2015 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.web.servlet.view.script;",
                "+",
                "+import java.io.IOException;",
                "+import java.nio.charset.Charset;",
                "+import java.util.Map;",
                "+import javax.script.Invocable;",
                "+import javax.script.ScriptEngine;",
                "+import javax.servlet.http.HttpServletRequest;",
                "+import javax.servlet.http.HttpServletResponse;",
                "+",
                "+import org.springframework.beans.BeansException;",
                "+import org.springframework.beans.factory.BeanFactoryUtils;",
                "+import org.springframework.beans.factory.NoSuchBeanDefinitionException;",
                "+import org.springframework.context.ApplicationContext;",
                "+import org.springframework.context.ApplicationContextException;",
                "+import org.springframework.core.io.Resource;",
                "+import org.springframework.core.io.ResourceLoader;",
                "+import org.springframework.util.Assert;",
                "+import org.springframework.util.StreamUtils;",
                "+import org.springframework.web.servlet.view.AbstractUrlBasedView;",
                "+",
                "+/**",
                "+ * An {@link org.springframework.web.servlet.view.AbstractUrlBasedView AbstractUrlBasedView}",
                "+ * designed to run any template library based on a JSR-223 script engine.",
                "+ *",
                "+ * <p>Nashorn Javascript engine requires Java 8+.",
                "+ *",
                "+ * @author Sebastien Deleuze",
                "+ * @since 4.2",
                "+ * @see ScriptTemplateConfigurer",
                "+ * @see ScriptTemplateViewResolver",
                "+ */",
                "+public class ScriptTemplateView extends AbstractUrlBasedView {",
                "+",
                "+\tprivate ScriptEngine engine;",
                "+",
                "+\tprivate String renderObject;",
                "+",
                "+\tprivate String renderFunction;",
                "+",
                "+\tprivate Charset charset;",
                "+",
                "+\tprivate ResourceLoader resourceLoader;",
                "+",
                "+\t/**",
                "+\t * Set the {@link ScriptEngine} to use in this view.",
                "+\t * <p>If not set, the engine is auto-detected by looking up up a single",
                "+\t * {@link ScriptTemplateConfig} bean in the web application context and using",
                "+\t * it to obtain the configured {@code ScriptEngine} instance.",
                "+\t * @see ScriptTemplateConfig",
                "+\t */",
                "+\tpublic void setEngine(ScriptEngine engine) {",
                "+\t\tthis.engine = engine;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Set the render function name. This function will be called with the",
                "+\t * following parameters:",
                "+\t * <ol>",
                "+\t *     <li>{@code template}: the view template content (String)</li>",
                "+\t *     <li>{@code model}: the view model (Map)</li>",
                "+\t * </ol>",
                "+\t * <p>If not set, the function name is auto-detected by looking up up a single",
                "+\t * {@link ScriptTemplateConfig} bean in the web application context and using",
                "+\t * it to obtain the configured {@code functionName} property.",
                "+\t * @see ScriptTemplateConfig",
                "+\t */",
                "+\tpublic void setRenderFunction(String functionName) {",
                "+\t\tthis.renderFunction = functionName;",
                "+\t}",
                "+",
                "+\tpublic void setResourceLoader(ResourceLoader resourceLoader) {",
                "+\t\tthis.resourceLoader = resourceLoader;",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected void initApplicationContext(ApplicationContext context) {",
                "+\t\tsuper.initApplicationContext(context);",
                "+\t\tScriptTemplateConfig viewConfig = autodetectViewConfig();",
                "+\t\tif (this.engine == null) {",
                "+\t\t\tthis.engine = viewConfig.getEngine();",
                "+\t\t\tAssert.state(this.engine != null, \"Script engine should not be null.\");",
                "+\t\t\tAssert.state(this.engine instanceof Invocable, \"Script engine should be instance of Invocable\");",
                "+\t\t}",
                "+\t\tif (this.resourceLoader == null) {",
                "+\t\t\tthis.resourceLoader = viewConfig.getResourceLoader();",
                "+\t\t}",
                "+\t\tif (this.renderObject == null) {",
                "+\t\t\tthis.renderObject = viewConfig.getRenderObject();",
                "+\t\t}",
                "+\t\tif (this.renderFunction == null) {",
                "+\t\t\tthis.renderFunction = viewConfig.getRenderFunction();",
                "+\t\t}",
                "+\t\tif (this.charset == null) {",
                "+\t\t\tthis.charset = viewConfig.getCharset();",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tprotected ScriptTemplateConfig autodetectViewConfig() throws BeansException {",
                "+\t\ttry {",
                "+\t\t\treturn BeanFactoryUtils.beanOfTypeIncludingAncestors(getApplicationContext(), ScriptTemplateConfig.class, true, false);",
                "+\t\t}",
                "+\t\tcatch (NoSuchBeanDefinitionException ex) {",
                "+\t\t\tthrow new ApplicationContextException(\"Expected a single ScriptTemplateConfig bean in the current \" +",
                "+\t\t\t\t\t\"Servlet web application context or the parent root context: ScriptTemplateConfigurer is \" +",
                "+\t\t\t\t\t\"the usual implementation. This bean may have any name.\", ex);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected void renderMergedOutputModel(Map<String, Object> model, HttpServletRequest request, HttpServletResponse response) throws Exception {",
                "+\t\tAssert.notNull(\"Render function must not be null\", this.renderFunction);",
                "+\t\ttry {",
                "+\t\t\tString template = getTemplate(getUrl());",
                "+\t\t\tObject html = null;",
                "+\t\t\tif (this.renderObject != null) {",
                "+\t\t\t\tObject thiz = engine.eval(this.renderObject);",
                "+\t\t\t\thtml = ((Invocable)this.engine).invokeMethod(thiz, this.renderFunction, template, model);",
                "+\t\t\t}",
                "+\t\t\telse {",
                "+\t\t\t\thtml = ((Invocable)this.engine).invokeFunction(this.renderFunction, template, model);",
                "+\t\t\t}",
                "+\t\t\tresponse.getWriter().write(String.valueOf(html));",
                "+\t\t}",
                "+\t\tcatch (Exception e) {",
                "+\t\t\tthrow new IllegalStateException(\"failed to render template\", e);",
                "+\t\t}",
                "+\t}",
                "+",
                "+\tprotected String getTemplate(String path) throws IOException {",
                "+\t\tResource resource = this.resourceLoader.getResource(path);",
                "+\t\tAssert.state(resource.exists(), \"Resource \" + path + \" not found.\");",
                "+\t\treturn StreamUtils.copyToString(resource.getInputStream(), this.charset);",
                "+\t}",
                "+",
                "+}",
                "\\ No newline at end of file",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateViewResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateViewResolver.java",
                "new file mode 100644",
                "index 0000000000..c66cd46585",
                "--- /dev/null",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateViewResolver.java",
                "@@ -0,0 +1,48 @@",
                "+/*",
                "+ * Copyright 2002-2015 the original author or authors.",
                "+ *",
                "+ * Licensed under the Apache License, Version 2.0 (the \"License\");",
                "+ * you may not use this file except in compliance with the License.",
                "+ * You may obtain a copy of the License at",
                "+ *",
                "+ *      http://www.apache.org/licenses/LICENSE-2.0",
                "+ *",
                "+ * Unless required by applicable law or agreed to in writing, software",
                "+ * distributed under the License is distributed on an \"AS IS\" BASIS,",
                "+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
                "+ * See the License for the specific language governing permissions and",
                "+ * limitations under the License.",
                "+ */",
                "+",
                "+package org.springframework.web.servlet.view.script;",
                "+",
                "+import org.springframework.web.servlet.view.UrlBasedViewResolver;",
                "+",
                "+/**",
                "+ * Convenience subclass of",
                "+ * {@link org.springframework.web.servlet.view.UrlBasedViewResolver}",
                "+ * that supports {@link ScriptTemplateView} and custom subclasses of it.",
                "+ *",
                "+ * <p>The view class for all views created by this resolver can be specified",
                "+ * via the {@link #setViewClass(Class)} property.",
                "+ *",
                "+ * <p><b>Note:</b> When chaining ViewResolvers this resolver will check for the",
                "+ * existence of the specified template resources and only return a non-null",
                "+ * View object if a template is actually found.",
                "+ *",
                "+ * @author Sebastien Deleuze",
                "+ * @since 4.2",
                "+ * @see ScriptTemplateConfigurer",
                "+ */",
                "+public class ScriptTemplateViewResolver extends UrlBasedViewResolver {",
                "+",
                "+\tpublic ScriptTemplateViewResolver() {",
                "+\t\tsetViewClass(requiredViewClass());",
                "+\t}",
                "+",
                "+\t@Override",
                "+\tprotected Class<?> requiredViewClass() {",
                "+\t\treturn ScriptTemplateView.class;",
                "+\t}",
                "+",
                "+}",
                "diff --git a/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc-4.2.xsd b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc-4.2.xsd",
                "index 39570b69ed..671014d478 100644",
                "--- a/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc-4.2.xsd",
                "+++ b/spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc-4.2.xsd",
                "@@ -975,3 +975,3 @@",
                " \tRegister a TilesViewResolver based on Tiles 3.x.",
                "-\tTo configure Tiles you must also add a top-level <mvc:tiles> element",
                "+\tTo configure Tiles you must also add a top-level <mvc:tiles-configurer> element",
                " \tor declare a TilesConfigurer bean.",
                "@@ -985,3 +985,3 @@",
                " \tBy default, \".ftl\" is configured as a view name suffix.",
                "-\tTo configure FreeMarker you must also add a top-level <mvc:freemarker> element",
                "+\tTo configure FreeMarker you must also add a top-level <mvc:freemarker-configurer> element",
                " \tor declare a FreeMarkerConfigurer bean.",
                "@@ -995,3 +995,3 @@",
                " \tBy default, \".vm\" is configured as a view name suffix.",
                "-\tTo configure Velocity you must also add a top-level <mvc:velocity> element",
                "+\tTo configure Velocity you must also add a top-level <mvc:velocity-configurer> element",
                " \tor declare a VelocityConfigurer bean.",
                "@@ -1005,3 +1005,3 @@",
                " \tBy default, \".tpl\" is configured as a view name suffix.",
                "-\tTo configure the Groovy markup template engine you must also add a top-level <mvc:groovy-markup> element",
                "+\tTo configure the Groovy markup template engine you must also add a top-level <mvc:groovy-configurer> element",
                " \tor declare a GroovyMarkupConfigurer bean.",
                "@@ -1010,2 +1010,11 @@",
                " \t\t\t\t\t</xsd:element>",
                "+\t\t\t\t\t<xsd:element name=\"script-template\" type=\"urlViewResolverType\">",
                "+\t\t\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tRegister a ScriptTemplateViewResolver.",
                "+\tTo configure the Script engine you must also add a top-level <mvc:script-template-configurer> element",
                "+\tor declare a ScriptTemplateConfigurer bean.",
                "+\t\t\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t\t</xsd:annotation>",
                "+\t\t\t\t\t</xsd:element>",
                " \t\t\t\t\t<xsd:element name=\"bean-name\" maxOccurs=\"1\">",
                "@@ -1165,2 +1174,64 @@",
                "+\t<xsd:element name=\"script-template-configurer\">",
                "+\t\t<xsd:annotation>",
                "+\t\t\t<xsd:documentation><![CDATA[",
                "+\tConfigure the script engine for view resolution by registering a ScriptTemplateConfigurer",
                "+\tbean. This is a shortcut alternative to declaring a ScriptTemplateConfigurer bean directly.",
                "+\t\t\t]]></xsd:documentation>",
                "+\t\t</xsd:annotation>",
                "+\t\t<xsd:complexType>",
                "+\t\t\t<xsd:sequence>",
                "+\t\t\t<xsd:element name=\"script\" minOccurs=\"0\" maxOccurs=\"unbounded\">",
                "+\t\t\t\t\t<xsd:complexType>",
                "+\t\t\t\t\t\t<xsd:attribute name=\"location\" type=\"xsd:string\" use=\"required\">",
                "+\t\t\t\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe location of the script to be loaded by the script engine (library or user provided).",
                "+\t\t\t\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t\t\t\t</xsd:annotation>",
                "+\t\t\t\t\t\t</xsd:attribute>",
                "+\t\t\t\t\t</xsd:complexType>",
                "+\t\t\t\t</xsd:element>",
                "+\t\t\t</xsd:sequence>",
                "+\t\t\t<xsd:attribute name=\"engine-name\" type=\"xsd:string\" use=\"required\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe script engine name to use by the view.",
                "+\tThe script engine must implement Invocable.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"render-object\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe object where belong the render function.",
                "+\tFor example, in order to call Mustache.render(), renderObject",
                "+\tshould be set to Mustache and renderFunction to render.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"render-function\" type=\"xsd:string\" use=\"required\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tSet the render function name.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"charset\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tSet the charset used to read script and template files (UTF-8 by default).",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t\t<xsd:attribute name=\"resource-loader-path\" type=\"xsd:string\">",
                "+\t\t\t\t<xsd:annotation>",
                "+\t\t\t\t\t<xsd:documentation><![CDATA[",
                "+\tThe script engine resource loader path via a Spring resource location.",
                "+\t\t\t\t\t]]></xsd:documentation>",
                "+\t\t\t\t</xsd:annotation>",
                "+\t\t\t</xsd:attribute>",
                "+\t\t</xsd:complexType>",
                "+\t</xsd:element>",
                "+",
                " </xsd:schema>",
                "diff --git a/src/asciidoc/web-mvc.adoc b/src/asciidoc/web-mvc.adoc",
                "index b429f41995..d9d979e012 100644",
                "--- a/src/asciidoc/web-mvc.adoc",
                "+++ b/src/asciidoc/web-mvc.adoc",
                "@@ -4764,3 +4764,3 @@ And the same in XML:",
                "-Note however that FreeMarker, Velocity, Tiles, and Groovy Markup also require",
                "+Note however that FreeMarker, Velocity, Tiles, Groovy Markup and script templates also require",
                " configuration of the underlying view technology.",
                "diff --git a/src/asciidoc/web-view.adoc b/src/asciidoc/web-view.adoc",
                "index 19f459c3f0..7e5a01ecd3 100644",
                "--- a/src/asciidoc/web-view.adoc",
                "+++ b/src/asciidoc/web-view.adoc",
                "@@ -2359,2 +2359,188 @@ https://spring.io/blog/2009/03/16/adding-an-atom-view-to-an-application-using-sp",
                "+[[view-script]]",
                "+== Script templates",
                "+",
                "+It is possible to integrate any templating library running on top of a JSR-223",
                "+script engine in web applications using Spring. The following describes in a",
                "+broad way how to do this. The script engine must implement both `ScriptEngine`",
                "+and `Invocable` interfaces.",
                "+",
                "+It has been tested with:",
                "+",
                "+* http://handlebarsjs.com/[Handlebars] running on http://openjdk.java.net/projects/nashorn/[Nashorn]",
                "+* https://mustache.github.io/[Mustache] running on http://openjdk.java.net/projects/nashorn/[Nashorn]",
                "+* http://facebook.github.io/react/[React] running on http://openjdk.java.net/projects/nashorn/[Nashorn]",
                "+* http://www.embeddedjs.com/[EJS] running on http://openjdk.java.net/projects/nashorn/[Nashorn]",
                "+* http://www.stuartellis.eu/articles/erb/[ERB] running on http://jruby.org[JRuby]",
                "+* https://docs.python.org/2/library/string.html#template-strings[String templates] running on http://www.jython.org/[Jython]",
                "+",
                "+[[view-script-dependencies]]",
                "+=== Dependencies",
                "+",
                "+To be able to use script templates integration, you need to have available in your classpath",
                "+the script engine:",
                "+",
                "+* http://openjdk.java.net/projects/nashorn/[Nashorn] Javascript engine is provided builtin with Java 8+",
                "+* http://docs.oracle.com/javase/7/docs/technotes/guides/scripting/programmer_guide/#jsengine[Rhino]",
                "+   Javascript engine is provided builtin with Java 6 and Java 7.",
                "+   Please notice that using Rhino is not recommended since it does not",
                "+   support running most template engines.",
                "+* http://jruby.org[JRuby] dependency should be added in order to get Ruby support.",
                "+* http://www.jython.org[Jython] dependency should be added in order to get Python support.",
                "+",
                "+You should also need to add dependencies for your script based template engine. For example,",
                "+for Javascript you can use http://www.webjars.org/[WebJars] to add Maven/Gradle dependencies",
                "+in order to make your javascript libraries available in the classpath.",
                "+",
                "+",
                "+[[view-script-integrate]]",
                "+=== How to integrate script based templating",
                "+",
                "+To be able to use script templates, you have to configure it in order to specify various parameters",
                "+like the script engine to use, the script files to load and what function should be called to",
                "+render the templates. This is done thanks to a `ScriptTemplateConfigurer` bean and optional script",
                "+files.",
                "+",
                "+For example, in order to render Mustache templates thanks to the Nashorn Javascript engine",
                "+provided with Java 8+, you should declare the following configuration:",
                "+",
                "+[source,java,indent=0]",
                "+[subs=\"verbatim,quotes\"]",
                "+----",
                "+\t@Configuration",
                "+\t@EnableWebMvc",
                "+\tpublic class MustacheConfig extends WebMvcConfigurerAdapter {",
                "+",
                "+\t\t@Override",
                "+\t\tpublic void configureViewResolvers(ViewResolverRegistry registry) {",
                "+\t\t\tregistry.scriptTemplate();",
                "+\t\t}",
                "+",
                "+\t\t@Bean",
                "+\t\tpublic ScriptTemplateConfigurer configurer() {",
                "+\t\t\tScriptTemplateConfigurer configurer = new ScriptTemplateConfigurer();",
                "+\t\t\tconfigurer.setEngineName(\"nashorn\");",
                "+\t\t\tconfigurer.setScripts(\"mustache.js\");",
                "+\t\t\tconfigurer.setRenderObject(\"Mustache\");",
                "+\t\t\tconfigurer.setRenderFunction(\"render\");",
                "+\t\t\treturn configurer;",
                "+\t\t}",
                "+\t}",
                "+----",
                "+",
                "+The XML counterpart using MVC namespace is:",
                "+",
                "+[source,xml,indent=0]",
                "+[subs=\"verbatim,quotes\"]",
                "+----",
                "+\t<mvc:annotation-driven />",
                "+",
                "+\t<mvc:view-resolvers>",
                "+\t\t<mvc:script-template />",
                "+\t</mvc:view-resolvers>",
                "+",
                "+\t<mvc:script-template-configurer engine-name=\"nashorn\" render-object=\"Mustache\" render-function=\"render\">",
                "+\t\t<mvc:script location=\"mustache.js\" />",
                "+\t</mvc:script-template-configurer>",
                "+----",
                "+",
                "+The controller is exactly what you should expect:",
                "+",
                "+[source,java,indent=0]",
                "+[subs=\"verbatim,quotes\"]",
                "+----",
                "+\t@Controller",
                "+\tpublic class SampleController {",
                "+",
                "+\t\t@RequestMapping",
                "+\t\tpublic ModelAndView test() {",
                "+\t\t\tModelAndView mav  = new ModelAndView();",
                "+\t\t\tmav.addObject(\"title\", \"Sample title\").addObject(\"body\", \"Sample body\");",
                "+\t\t\tmav.setViewName(\"template.html\");",
                "+\t\t\treturn mav;",
                "+\t\t}",
                "+\t}",
                "+----",
                "+",
                "+And the Mustache template is:",
                "+",
                "+[source,html,indent=0]",
                "+[subs=\"verbatim,quotes\"]",
                "+----",
                "+\t<html>",
                "+\t\t<head>",
                "+\t\t\t<title>{{title}}</title>",
                "+\t\t</head>",
                "+\t\t<body>",
                "+\t\t\t<p>{{body}}</p>",
                "+\t\t</body>",
                "+\t</html>",
                "+----",
                "+",
                "+The render function is called with the following parameters:",
                "+",
                "+* template: the view template content (String)",
                "+* model: the view model (Map)",
                "+",
                "+`Mustache.render()` is natively compatible with this signature, so you can call it directly.",
                "+",
                "+If your templating technology requires some customization, you may provide a script that",
                "+implements a custom render function. For example, http://handlebarsjs.com[Handlerbars]",
                "+needs to compile templates before using them, and requires a",
                "+http://en.wikipedia.org/wiki/Polyfill[polyfill] in order to emulate some",
                "+browser facilities not available in the server-side script engine.",
                "+",
                "+[source,java,indent=0]",
                "+[subs=\"verbatim,quotes\"]",
                "+----",
                "+\t@Configuration",
                "+\t@EnableWebMvc",
                "+\tpublic class MustacheConfig extends WebMvcConfigurerAdapter {",
                "+",
                "+\t\t@Override",
                "+\t\tpublic void configureViewResolvers(ViewResolverRegistry registry) {",
                "+\t\t\tregistry.scriptTemplate();",
                "+\t\t}",
                "+",
                "+\t\t@Bean",
                "+\t\tpublic ScriptTemplateConfigurer configurer() {",
                "+\t\t\tScriptTemplateConfigurer configurer = new ScriptTemplateConfigurer();",
                "+\t\t\tconfigurer.setEngineName(\"nashorn\");",
                "+\t\t\tconfigurer.setScripts(\"polyfill.js\", \"handlebars.js\", \"render.js\");",
                "+\t\t\tconfigurer.setRenderFunction(\"render\");",
                "+\t\t\treturn configurer;",
                "+\t\t}",
                "+\t}",
                "+----",
                "+",
                "+`polyfill.js` only defines the `window` object needed by Handlebars to run properly:",
                "+",
                "+[source,javascript,indent=0]",
                "+[subs=\"verbatim,quotes\"]",
                "+----",
                "+\tvar window = {};",
                "+----",
                "+",
                "+This basic `render.js` implementation compiles the template before using it. A production",
                "+ready implementation should also store and reused cached templates / pre-compiled templates.",
                "+This can be done on the script side, as well as any customization you need (managing",
                "+template engine configuration for example).",
                "+",
                "+[source,javascript,indent=0]",
                "+[subs=\"verbatim,quotes\"]",
                "+----",
                "+\tfunction render(template, model) {",
                "+\t\tvar compiledTemplate = Handlebars.compile(template);",
                "+\t\treturn compiledTemplate(model);",
                "+\t}",
                "+----",
                "+",
                "+Check out Spring script templates unit tests",
                "+(https://github.com/spring-projects/spring-framework/tree/master/spring-webmvc/src/test/java/org/springframework/web/servlet/view/script[java],",
                "+https://github.com/spring-projects/spring-framework/tree/master/spring-webmvc/src/test/resources/org/springframework/web/servlet/view/script[resources])",
                "+for more configuration examples.",
                "+",
                "+",
                "+",
                "+",
                " [[view-xml-marshalling]]"
            ],
            "changed_files": [
                "build.gradle",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/MvcNamespaceHandler.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/ScriptTemplateConfigurerBeanDefinitionParser.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/ViewResolversBeanDefinitionParser.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/ViewResolverRegistry.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateConfig.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateConfigurer.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateView.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/view/script/ScriptTemplateViewResolver.java",
                "spring-webmvc/src/main/resources/org/springframework/web/servlet/config/spring-mvc-4.2.xsd",
                "src/asciidoc/web-mvc.adoc",
                "src/asciidoc/web-view.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "eeeb0a65460b826b95c119791a3990e4836e78f1",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1520582595,
            "hunks": 11,
            "message": "Consistent result synchronization in WebAsyncManager Issue: SPR-16571 (cherry picked from commit cf74b1b)",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java",
                "index 92fcb48a63..6bcbbdcc4f 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -52,2 +52,3 @@ import org.springframework.web.util.UrlPathHelper;",
                "  * @author Rossen Stoyanchev",
                "+ * @author Juergen Hoeller",
                "  * @since 3.2",
                "@@ -77,5 +78,5 @@ public final class WebAsyncManager {",
                "-\tprivate Object concurrentResult = RESULT_NONE;",
                "+\tprivate volatile Object concurrentResult = RESULT_NONE;",
                "-\tprivate Object[] concurrentResultContext;",
                "+\tprivate volatile Object[] concurrentResultContext;",
                "@@ -135,3 +136,3 @@ public final class WebAsyncManager {",
                " \tpublic boolean isConcurrentHandlingStarted() {",
                "-\t\treturn ((this.asyncWebRequest != null) && this.asyncWebRequest.isAsyncStarted());",
                "+\t\treturn (this.asyncWebRequest != null && this.asyncWebRequest.isAsyncStarted());",
                " \t}",
                "@@ -167,3 +168,3 @@ public final class WebAsyncManager {",
                " \t * @param key the key",
                "-\t * @return the interceptor registered under that key or {@code null}",
                "+\t * @return the interceptor registered under that key, or {@code null} if none",
                " \t */",
                "@@ -176,3 +177,3 @@ public final class WebAsyncManager {",
                " \t * @param key the key",
                "-\t * @return the interceptor registered under that key or {@code null}",
                "+\t * @return the interceptor registered under that key, or {@code null} if none",
                " \t */",
                "@@ -235,4 +236,6 @@ public final class WebAsyncManager {",
                " \tpublic void clearConcurrentResult() {",
                "-\t\tthis.concurrentResult = RESULT_NONE;",
                "-\t\tthis.concurrentResultContext = null;",
                "+\t\tsynchronized (WebAsyncManager.this) {",
                "+\t\t\tthis.concurrentResult = RESULT_NONE;",
                "+\t\t\tthis.concurrentResultContext = null;",
                "+\t\t}",
                " \t}",
                "@@ -267,3 +270,5 @@ public final class WebAsyncManager {",
                " \t */",
                "-\tpublic void startCallableProcessing(final WebAsyncTask<?> webAsyncTask, Object... processingContext) throws Exception {",
                "+\tpublic void startCallableProcessing(final WebAsyncTask<?> webAsyncTask, Object... processingContext)",
                "+\t\t\tthrows Exception {",
                "+",
                " \t\tAssert.notNull(webAsyncTask, \"WebAsyncTask must not be null\");",
                "@@ -348,3 +353,3 @@ public final class WebAsyncManager {",
                " \t\tsynchronized (WebAsyncManager.this) {",
                "-\t\t\tif (hasConcurrentResult()) {",
                "+\t\t\tif (this.concurrentResult != RESULT_NONE) {",
                " \t\t\t\treturn;",
                "@@ -363,3 +368,2 @@ public final class WebAsyncManager {",
                " \t\t}",
                "-",
                " \t\tthis.asyncWebRequest.dispatch();",
                "@@ -447,4 +451,6 @@ public final class WebAsyncManager {",
                " \tprivate void startAsyncProcessing(Object[] processingContext) {",
                "-\t\tclearConcurrentResult();",
                "-\t\tthis.concurrentResultContext = processingContext;",
                "+\t\tsynchronized (WebAsyncManager.this) {",
                "+\t\t\tthis.concurrentResult = RESULT_NONE;",
                "+\t\t\tthis.concurrentResultContext = processingContext;",
                "+\t\t}",
                " \t\tthis.asyncWebRequest.startAsync();"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/context/request/async/WebAsyncManager.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "695bf2961feffd35b5560ccc982a2189dcca611f",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522332273,
            "hunks": 4,
            "message": "Consistent trace logging in PathResourceResolver Issue: SPR-16616",
            "diff": [
                "diff --git a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "index 404607542d..1f49cde6cb 100644",
                "--- a/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "+++ b/spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "@@ -120,6 +120,6 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\t\tResource[] allowedLocations = getAllowedLocations();",
                "-\t\t\t\t\tlogger.trace(\"Resource path=\\\"\" + resourcePath + \"\\\" was successfully resolved \" +",
                "-\t\t\t\t\t\t\t\"but resource=\\\"\" + resource.getURL() + \"\\\" is neither under the \" +",
                "-\t\t\t\t\t\t\t\"current location=\\\"\" + location.getURL() + \"\\\" nor under any of the \" +",
                "-\t\t\t\t\t\t\t\"allowed locations=\" + (allowedLocations != null ? Arrays.asList(allowedLocations) : \"[]\"));",
                "+\t\t\t\t\tlogger.trace(\"Resource path \\\"\" + resourcePath + \"\\\" was successfully resolved \" +",
                "+\t\t\t\t\t\t\t\"but resource \\\"\" + resource.getURL() + \"\\\" is neither under the \" +",
                "+\t\t\t\t\t\t\t\"current location \\\"\" + location.getURL() + \"\\\" nor under any of the \" +",
                "+\t\t\t\t\t\t\t\"allowed locations \" + (allowedLocations != null ? Arrays.asList(allowedLocations) : \"[]\"));",
                " \t\t\t\t}",
                "@@ -197,3 +197,3 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + resourcePath + \"]\");",
                "+\t\t\t\t\t\tlogger.trace(\"Resolved resource path contains encoded \\\"../\\\" or \\\"..\\\\\\\": \" + resourcePath);",
                " \t\t\t\t\t}",
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "index 43a8397650..13de12e493 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java",
                "@@ -191,6 +191,6 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\tResource[] allowedLocations = getAllowedLocations();",
                "-\t\t\t\tlogger.trace(\"Resource path=\\\"\" + resourcePath + \"\\\" was successfully resolved \" +",
                "-\t\t\t\t\t\t\"but resource=\\\"\" +\tresource.getURL() + \"\\\" is neither under the \" +",
                "-\t\t\t\t\t\t\"current location=\\\"\" + location.getURL() + \"\\\" nor under any of the \" +",
                "-\t\t\t\t\t\t\"allowed locations=\" + (allowedLocations != null ? Arrays.asList(allowedLocations) : \"[]\"));",
                "+\t\t\t\tlogger.trace(\"Resource path \\\"\" + resourcePath + \"\\\" was successfully resolved \" +",
                "+\t\t\t\t\t\t\"but resource \\\"\" +\tresource.getURL() + \"\\\" is neither under the \" +",
                "+\t\t\t\t\t\t\"current location \\\"\" + location.getURL() + \"\\\" nor under any of the \" +",
                "+\t\t\t\t\t\t\"allowed locations \" + (allowedLocations != null ? Arrays.asList(allowedLocations) : \"[]\"));",
                " \t\t\t}",
                "@@ -288,3 +288,3 @@ public class PathResourceResolver extends AbstractResourceResolver {",
                " \t\t\t\t\tif (logger.isTraceEnabled()) {",
                "-\t\t\t\t\t\tlogger.trace(\"Ignoring invalid resource path with escape sequences [\" + resourcePath + \"]\");",
                "+\t\t\t\t\t\tlogger.trace(\"Resolved resource path contains encoded \\\"../\\\" or \\\"..\\\\\\\": \" + resourcePath);",
                " \t\t\t\t\t}"
            ],
            "changed_files": [
                "spring-webflux/src/main/java/org/springframework/web/reactive/resource/PathResourceResolver.java",
                "spring-webmvc/src/main/java/org/springframework/web/servlet/resource/PathResourceResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "fdd756ce8a683927c058c4272cd0f2477fb29675",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521488394,
            "hunks": 1,
            "message": "Upgrade to Log4J 2.11",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index bc1b27238c..37d091da35 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -53,3 +53,3 @@ configure(allprojects) { project ->",
                " \text.kotlinVersion        = \"1.2.30\"",
                "-\text.log4jVersion         = \"2.10.0\"",
                "+\text.log4jVersion         = \"2.11.0\"",
                " \text.nettyVersion         = \"4.1.22.Final\""
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "129c05bcff4bcd99b3139577debb2391a1dfe099",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522501922,
            "hunks": 26,
            "message": "Comprehensively cache annotated methods for interfaces and superclasses Issue: SPR-16675",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "index 41b8303241..9e86e3f464 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "@@ -1052,13 +1052,44 @@ public class AnnotatedElementUtils {",
                " \t\t\t\tAnnotation[] annotations = element.getDeclaredAnnotations();",
                "-\t\t\t\tList<T> aggregatedResults = (processor.aggregates() ? new ArrayList<>() : null);",
                "-",
                "-\t\t\t\t// Search in local annotations",
                "-\t\t\t\tfor (Annotation annotation : annotations) {",
                "-\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "-\t\t\t\t\t\tif (currentAnnotationType == annotationType ||",
                "-\t\t\t\t\t\t\t\tcurrentAnnotationType.getName().equals(annotationName) ||",
                "-\t\t\t\t\t\t\t\tprocessor.alwaysProcesses()) {",
                "-\t\t\t\t\t\t\tT result = processor.process(element, annotation, metaDepth);",
                "+\t\t\t\tif (annotations.length > 0) {",
                "+\t\t\t\t\tList<T> aggregatedResults = (processor.aggregates() ? new ArrayList<>() : null);",
                "+",
                "+\t\t\t\t\t// Search in local annotations",
                "+\t\t\t\t\tfor (Annotation annotation : annotations) {",
                "+\t\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "+\t\t\t\t\t\tif (!AnnotationUtils.isInJavaLangAnnotationPackage(currentAnnotationType)) {",
                "+\t\t\t\t\t\t\tif (currentAnnotationType == annotationType ||",
                "+\t\t\t\t\t\t\t\t\tcurrentAnnotationType.getName().equals(annotationName) ||",
                "+\t\t\t\t\t\t\t\t\tprocessor.alwaysProcesses()) {",
                "+\t\t\t\t\t\t\t\tT result = processor.process(element, annotation, metaDepth);",
                "+\t\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\t\tif (aggregatedResults != null && metaDepth == 0) {",
                "+\t\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t\telse {",
                "+\t\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t// Repeatable annotations in container?",
                "+\t\t\t\t\t\t\telse if (currentAnnotationType == containerType) {",
                "+\t\t\t\t\t\t\t\tfor (Annotation contained : getRawAnnotationsFromContainer(element, annotation)) {",
                "+\t\t\t\t\t\t\t\t\tT result = processor.process(element, contained, metaDepth);",
                "+\t\t\t\t\t\t\t\t\tif (aggregatedResults != null && result != null) {",
                "+\t\t\t\t\t\t\t\t\t\t// No need to post-process since repeatable annotations within a",
                "+\t\t\t\t\t\t\t\t\t\t// container cannot be composed annotations.",
                "+\t\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                "+",
                "+\t\t\t\t\t// Recursively search in meta-annotations",
                "+\t\t\t\t\tfor (Annotation annotation : annotations) {",
                "+\t\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "+\t\t\t\t\t\tif (hasSearchableMetaAnnotations(currentAnnotationType, annotationType, annotationName)) {",
                "+\t\t\t\t\t\t\tT result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth + 1);",
                " \t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\tprocessor.postProcess(currentAnnotationType, annotation, result);",
                " \t\t\t\t\t\t\t\tif (aggregatedResults != null && metaDepth == 0) {",
                "@@ -1071,31 +1102,7 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\t// Repeatable annotations in container?",
                "-\t\t\t\t\t\telse if (currentAnnotationType == containerType) {",
                "-\t\t\t\t\t\t\tfor (Annotation contained : getRawAnnotationsFromContainer(element, annotation)) {",
                "-\t\t\t\t\t\t\t\tT result = processor.process(element, contained, metaDepth);",
                "-\t\t\t\t\t\t\t\tif (aggregatedResults != null && result != null) {",
                "-\t\t\t\t\t\t\t\t\t// No need to post-process since repeatable annotations within a",
                "-\t\t\t\t\t\t\t\t\t// container cannot be composed annotations.",
                "-\t\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "-\t\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                "-\t\t\t\t}",
                "-\t\t\t\t// Recursively search in meta-annotations",
                "-\t\t\t\tfor (Annotation annotation : annotations) {",
                "-\t\t\t\t\tClass<? extends Annotation> currentAnnotationType = annotation.annotationType();",
                "-\t\t\t\t\tif (hasSearchableMetaAnnotations(currentAnnotationType, annotationType, annotationName)) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(currentAnnotationType, annotationType, annotationName,",
                "-\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth + 1);",
                "-\t\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\t\tprocessor.postProcess(currentAnnotationType, annotation, result);",
                "-\t\t\t\t\t\t\tif (aggregatedResults != null && metaDepth == 0) {",
                "-\t\t\t\t\t\t\t\taggregatedResults.add(result);",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t\telse {",
                "-\t\t\t\t\t\t\t\treturn result;",
                "-\t\t\t\t\t\t\t}",
                "-\t\t\t\t\t\t}",
                "+\t\t\t\t\tif (!CollectionUtils.isEmpty(aggregatedResults)) {",
                "+\t\t\t\t\t\t// Prepend to support top-down ordering within class hierarchies",
                "+\t\t\t\t\t\tprocessor.getAggregatedResults().addAll(0, aggregatedResults);",
                " \t\t\t\t\t}",
                "@@ -1103,7 +1110,2 @@ public class AnnotatedElementUtils {",
                "-\t\t\t\tif (!CollectionUtils.isEmpty(aggregatedResults)) {",
                "-\t\t\t\t\t// Prepend to support top-down ordering within class hierarchies",
                "-\t\t\t\t\tprocessor.getAggregatedResults().addAll(0, aggregatedResults);",
                "-\t\t\t\t}",
                "-",
                " \t\t\t\tif (element instanceof Method) {",
                "@@ -1125,4 +1127,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tif (ifcs.length > 0) {",
                "-\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth, ifcs);",
                "+\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth, ifcs);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1139,19 +1141,19 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\t\t}",
                "-",
                "-\t\t\t\t\t\ttry {",
                "-\t\t\t\t\t\t\tMethod equivalentMethod = clazz.getDeclaredMethod(method.getName(), method.getParameterTypes());",
                "-\t\t\t\t\t\t\tMethod resolvedEquivalentMethod = BridgeMethodResolver.findBridgedMethod(equivalentMethod);",
                "-\t\t\t\t\t\t\tresult = searchWithFindSemantics(resolvedEquivalentMethod, annotationType, annotationName,",
                "-\t\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                "-\t\t\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\tSet<Method> annotatedMethods = AnnotationUtils.getAnnotatedMethodsInBaseType(clazz);",
                "+\t\t\t\t\t\tif (!annotatedMethods.isEmpty()) {",
                "+\t\t\t\t\t\t\tfor (Method annotatedMethod : annotatedMethods) {",
                "+\t\t\t\t\t\t\t\tif (annotatedMethod.getName().equals(method.getName()) &&",
                "+\t\t\t\t\t\t\t\t\t\tArrays.equals(annotatedMethod.getParameterTypes(), method.getParameterTypes())) {",
                "+\t\t\t\t\t\t\t\t\tMethod resolvedSuperMethod = BridgeMethodResolver.findBridgedMethod(annotatedMethod);",
                "+\t\t\t\t\t\t\t\t\tresult = searchWithFindSemantics(resolvedSuperMethod, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                "+\t\t\t\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t\t\t\t}",
                "+\t\t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t\t}",
                " \t\t\t\t\t\t}",
                "-\t\t\t\t\t\tcatch (NoSuchMethodException ex) {",
                "-\t\t\t\t\t\t\t// No equivalent method found",
                "-\t\t\t\t\t\t}",
                "-",
                " \t\t\t\t\t\t// Search on interfaces declared on superclass",
                "-\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName, containerType, processor,",
                "-\t\t\t\t\t\t\t\tvisited, metaDepth, clazz.getInterfaces());",
                "+\t\t\t\t\t\tresult = searchOnInterfaces(method, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth, clazz.getInterfaces());",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1166,4 +1168,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tfor (Class<?> ifc : clazz.getInterfaces()) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(ifc, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "+\t\t\t\t\t\tT result = searchWithFindSemantics(ifc, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1176,4 +1178,4 @@ public class AnnotatedElementUtils {",
                " \t\t\t\t\tif (superclass != null && Object.class != superclass) {",
                "-\t\t\t\t\t\tT result = searchWithFindSemantics(superclass, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "+\t\t\t\t\t\tT result = searchWithFindSemantics(superclass, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                " \t\t\t\t\t\tif (result != null) {",
                "@@ -1197,14 +1199,14 @@ public class AnnotatedElementUtils {",
                " \t\tfor (Class<?> ifc : ifcs) {",
                "-\t\t\tif (AnnotationUtils.isInterfaceWithAnnotatedMethods(ifc)) {",
                "-\t\t\t\ttry {",
                "-\t\t\t\t\tMethod equivalentMethod = ifc.getMethod(method.getName(), method.getParameterTypes());",
                "-\t\t\t\t\tT result = searchWithFindSemantics(equivalentMethod, annotationType, annotationName, containerType,",
                "-\t\t\t\t\t\t\tprocessor, visited, metaDepth);",
                "-\t\t\t\t\tif (result != null) {",
                "-\t\t\t\t\t\treturn result;",
                "+\t\t\tSet<Method> annotatedMethods = AnnotationUtils.getAnnotatedMethodsInBaseType(ifc);",
                "+\t\t\tif (!annotatedMethods.isEmpty()) {",
                "+\t\t\t\tfor (Method annotatedMethod : annotatedMethods) {",
                "+\t\t\t\t\tif (annotatedMethod.getName().equals(method.getName()) &&",
                "+\t\t\t\t\t\t\tArrays.equals(annotatedMethod.getParameterTypes(), method.getParameterTypes())) {",
                "+\t\t\t\t\t\tT result = searchWithFindSemantics(annotatedMethod, annotationType, annotationName,",
                "+\t\t\t\t\t\t\t\tcontainerType, processor, visited, metaDepth);",
                "+\t\t\t\t\t\tif (result != null) {",
                "+\t\t\t\t\t\t\treturn result;",
                "+\t\t\t\t\t\t}",
                " \t\t\t\t\t}",
                " \t\t\t\t}",
                "-\t\t\t\tcatch (NoSuchMethodException ex) {",
                "-\t\t\t\t\t// Skip this interface - it doesn't have the method...",
                "-\t\t\t\t}",
                " \t\t\t}",
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 29b7d63c0a..238f11c407 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -28,2 +28,3 @@ import java.lang.reflect.Proxy;",
                " import java.util.ArrayList;",
                "+import java.util.Arrays;",
                " import java.util.Collections;",
                "@@ -124,3 +125,3 @@ public abstract class AnnotationUtils {",
                "-\tprivate static final Map<Class<?>, Boolean> annotatedInterfaceCache =",
                "+\tprivate static final Map<Class<?>, Set<Method>> annotatedBaseTypeCache =",
                " \t\t\tnew ConcurrentReferenceHashMap<>(256);",
                "@@ -541,3 +542,2 @@ public abstract class AnnotationUtils {",
                " \t\t\tresult = findAnnotation((AnnotatedElement) resolvedMethod, annotationType);",
                "-",
                " \t\t\tif (result == null) {",
                "@@ -576,14 +576,13 @@ public abstract class AnnotationUtils {",
                " \tprivate static <A extends Annotation> A searchOnInterfaces(Method method, Class<A> annotationType, Class<?>... ifcs) {",
                "-\t\tA annotation = null;",
                " \t\tfor (Class<?> ifc : ifcs) {",
                "-\t\t\tif (isInterfaceWithAnnotatedMethods(ifc)) {",
                "-\t\t\t\ttry {",
                "-\t\t\t\t\tMethod equivalentMethod = ifc.getMethod(method.getName(), method.getParameterTypes());",
                "-\t\t\t\t\tannotation = getAnnotation(equivalentMethod, annotationType);",
                "-\t\t\t\t}",
                "-\t\t\t\tcatch (NoSuchMethodException ex) {",
                "-\t\t\t\t\t// Skip this interface - it doesn't have the method...",
                "-\t\t\t\t}",
                "-\t\t\t\tif (annotation != null) {",
                "-\t\t\t\t\tbreak;",
                "+\t\t\tSet<Method> annotatedMethods = getAnnotatedMethodsInBaseType(ifc);",
                "+\t\t\tif (!annotatedMethods.isEmpty()) {",
                "+\t\t\t\tfor (Method annotatedMethod : annotatedMethods) {",
                "+\t\t\t\t\tif (annotatedMethod.getName().equals(method.getName()) &&",
                "+\t\t\t\t\t\t\tArrays.equals(annotatedMethod.getParameterTypes(), method.getParameterTypes())) {",
                "+\t\t\t\t\t\tA annotation = getAnnotation(annotatedMethod, annotationType);",
                "+\t\t\t\t\t\tif (annotation != null) {",
                "+\t\t\t\t\t\t\treturn annotation;",
                "+\t\t\t\t\t\t}",
                "+\t\t\t\t\t}",
                " \t\t\t\t}",
                "@@ -591,21 +590,22 @@ public abstract class AnnotationUtils {",
                " \t\t}",
                "-\t\treturn annotation;",
                "+\t\treturn null;",
                " \t}",
                "-\tstatic boolean isInterfaceWithAnnotatedMethods(Class<?> ifc) {",
                "-\t\tif (ClassUtils.isJavaLanguageInterface(ifc)) {",
                "-\t\t\treturn false;",
                "+\tstatic Set<Method> getAnnotatedMethodsInBaseType(Class<?> baseType) {",
                "+\t\tif (ClassUtils.isJavaLanguageInterface(baseType)) {",
                "+\t\t\treturn Collections.emptySet();",
                " \t\t}",
                "-\t\tBoolean found = annotatedInterfaceCache.get(ifc);",
                "-\t\tif (found != null) {",
                "-\t\t\treturn found;",
                "+\t\tSet<Method> annotatedMethods = annotatedBaseTypeCache.get(baseType);",
                "+\t\tif (annotatedMethods != null) {",
                "+\t\t\treturn annotatedMethods;",
                " \t\t}",
                "-\t\tfound = Boolean.FALSE;",
                "-\t\tfor (Method ifcMethod : ifc.getMethods()) {",
                "+\t\tMethod[] methods = (baseType.isInterface() ? baseType.getMethods() : baseType.getDeclaredMethods());",
                "+\t\tfor (Method baseMethod : methods) {",
                " \t\t\ttry {",
                "-\t\t\t\tAnnotation[] anns = ifcMethod.getAnnotations();",
                "-\t\t\t\tif (anns.length > 1 || (anns.length == 1 && anns[0].annotationType() != Nullable.class)) {",
                "-\t\t\t\t\tfound = Boolean.TRUE;",
                "-\t\t\t\t\tbreak;",
                "+\t\t\t\tif (hasSearchableAnnotations(baseMethod)) {",
                "+\t\t\t\t\tif (annotatedMethods == null) {",
                "+\t\t\t\t\t\tannotatedMethods = new HashSet<>();",
                "+\t\t\t\t\t}",
                "+\t\t\t\t\tannotatedMethods.add(baseMethod);",
                " \t\t\t\t}",
                "@@ -613,7 +613,22 @@ public abstract class AnnotationUtils {",
                " \t\t\tcatch (Throwable ex) {",
                "-\t\t\t\thandleIntrospectionFailure(ifcMethod, ex);",
                "+\t\t\t\thandleIntrospectionFailure(baseMethod, ex);",
                " \t\t\t}",
                " \t\t}",
                "-\t\tannotatedInterfaceCache.put(ifc, found);",
                "-\t\treturn found;",
                "+\t\tif (annotatedMethods == null) {",
                "+\t\t\tannotatedMethods = Collections.emptySet();",
                "+\t\t}",
                "+\t\tannotatedBaseTypeCache.put(baseType, annotatedMethods);",
                "+\t\treturn annotatedMethods;",
                "+\t}",
                "+",
                "+\tprivate static boolean hasSearchableAnnotations(Method ifcMethod) {",
                "+\t\tAnnotation[] anns = ifcMethod.getAnnotations();",
                "+\t\tif (anns.length == 0) {",
                "+\t\t\treturn false;",
                "+\t\t}",
                "+\t\tif (anns.length == 1) {",
                "+\t\t\tClass<?> annType = anns[0].annotationType();",
                "+\t\t\treturn (annType != Nullable.class && annType != Deprecated.class);",
                "+\t\t}",
                "+\t\treturn true;",
                " \t}",
                "@@ -1877,2 +1892,16 @@ public abstract class AnnotationUtils {",
                "+\t/**",
                "+\t * Clear the internal annotation metadata cache.",
                "+\t * @since 4.3.15",
                "+\t */",
                "+\tpublic static void clearCache() {",
                "+\t\tfindAnnotationCache.clear();",
                "+\t\tmetaPresentCache.clear();",
                "+\t\tannotatedBaseTypeCache.clear();",
                "+\t\tsynthesizableCache.clear();",
                "+\t\tattributeAliasesCache.clear();",
                "+\t\tattributeMethodsCache.clear();",
                "+\t\taliasDescriptorCache.clear();",
                "+\t}",
                "+"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotatedElementUtils.java",
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4187e04b6976524580182206358b7f0cd911e816",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521686833,
            "hunks": 17,
            "message": "Backport doc change",
            "diff": [
                "diff --git a/src/asciidoc/core-expressions.adoc b/src/asciidoc/core-expressions.adoc",
                "index 3ac3a0e69c..8ae51a9688 100644",
                "--- a/src/asciidoc/core-expressions.adoc",
                "+++ b/src/asciidoc/core-expressions.adoc",
                "@@ -183,16 +183,12 @@ create a boolean condition:",
                " The interface `EvaluationContext` is used when evaluating an expression to resolve",
                "-properties, methods, fields, and to help perform type conversion. The out-of-the-box",
                "-implementations, `SimpleEvalutationContext` and `StandardEvaluationContext`, use",
                "-reflection to manipulate the object, caching `java.lang.reflect.Method`,",
                "-`java.lang.reflect.Field`, and `java.lang.reflect.Constructor` instances for increased",
                "-performance.",
                "-",
                "-`SimpleEvaluationContext` exposes a subset of essential SpEL language features and",
                "-configuration options. Certain categories of expressions, do not require the full extent",
                "-of the SpEL language syntax and arguably should be meaningfully restricted. Examples",
                "+properties, methods, fields, and to help perform type conversion. There are two",
                "+out-of-the-box implementations.",
                "+",
                "+* `SimpleEvaluationContext` -- exposes a subset of essential SpEL language features and",
                "+configuration options, for categories of expressions that do not require the full extent",
                "+of the SpEL language syntax and should be meaningfully restricted. Examples",
                " include but are not limited to data binding expressions, property-based filters, and",
                "-others. To effect, `SimpleEvaluationContext` supports a subset of the SpEL language syntax",
                "-that excludes references to Java types, constructors, and bean references.",
                "+others.",
                "-`StandardEvaluationContext` exposes the full set of SpEL language features and",
                "+* `StandardEvaluationContext` -- exposes the full set of SpEL language features and",
                " configuration options. You may use it to specify a default root object, and to configure",
                "@@ -200,2 +196,13 @@ every available evaluation-related strategy.",
                "+`SimpleEvaluationContext` is designed to support only a subset of the SpEL language syntax.",
                "+It excludes Java type references, constructors, and bean references. It also requires",
                "+explicit choosing the level of support for properties and methods in expressions.",
                "+By default, the `create()` static factory method enables only read access to properties.",
                "+You can also obtain a builder to configure the exact level of support needed, targeting",
                "+one of, or some combination of the following:",
                "+",
                "+. Custom {@code PropertyAccessor} only (no reflection).",
                "+. Data binding properties for read-only access.",
                "+. Data binding properties for read and write.",
                "+",
                "@@ -227,3 +234,3 @@ being placed in it. A simple example:",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext().create();",
                "@@ -604,3 +611,3 @@ arrays and lists are obtained using square bracket notation.",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                "@@ -887,3 +894,3 @@ done within a call to `setValue` but can also be done inside a call to `getValue",
                " \tInventor inventor = new Inventor();",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                "@@ -955,3 +962,3 @@ are set using the method setVariable on `EvaluationContext` implementations.",
                " \tInventor tesla = new Inventor(\"Nikola Tesla\", \"Serbian\");",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                " \tcontext.setVariable(\"newName\", \"Mike Tesla\");",
                "@@ -981,3 +988,3 @@ an expression are evaluated, #root always refers to the root.",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                " \tcontext.setVariable(\"primes\",primes);",
                "@@ -1003,3 +1010,3 @@ expression string. The function is registered through the `EvaluationContext`.",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                " \tcontext.setVariable(\"myFunction\", method);",
                "@@ -1030,3 +1037,3 @@ The above method can then be registered and used as follows:",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                "@@ -1051,3 +1058,3 @@ lookup beans from an expression using the (@) symbol.",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tStandardEvaluationContext context = new StandardEvaluationContext();",
                "+\tStandardEvaluationContext context = StandardEvaluationContext.create();",
                " \tcontext.setBeanResolver(new MyBeanResolver());",
                "@@ -1064,3 +1071,3 @@ To access a factory bean itself, the bean name should instead be prefixed with a",
                " \tExpressionParser parser = new SpelExpressionParser();",
                "-\tStandardEvaluationContext context = new StandardEvaluationContext();",
                "+\tStandardEvaluationContext context = StandardEvaluationContext.create();",
                " \tcontext.setBeanResolver(new MyBeanResolver());",
                "@@ -1142,3 +1149,3 @@ Here is a more complex example.",
                " \tInventor tesla = new Inventor(\"Nikola Tesla\", \"Serbian\");",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                "@@ -1174,3 +1181,3 @@ safe navigation operator will simply return null instead of throwing an exceptio",
                "-\tSimpleEvaluationContext context = new SimpleEvaluationContext();",
                "+\tSimpleEvaluationContext context = SimpleEvaluationContext.create();",
                "@@ -1242,2 +1249,3 @@ first or the last value. To obtain the first entry matching the selection the sy",
                " === Collection Projection",
                "+",
                " Projection allows a collection to drive the evaluation of a sub-expression and the",
                "@@ -1264,2 +1272,3 @@ expression against each map entry.",
                " === Expression templating",
                "+",
                " Expression templates allow a mixing of literal text with one or more evaluation blocks.",
                "@@ -1309,2 +1318,3 @@ The definition of `TemplateParserContext` is shown below.",
                " == Classes used in the examples",
                "+",
                " Inventor.java"
            ],
            "changed_files": [
                "src/asciidoc/core-expressions.adoc"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "03037496c381b9667052dfc9fa89cf814d36e60a",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1430130552,
            "hunks": 1,
            "message": "Upgrade netty-all dependency to 4.0.27.Final",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 6309441f59..a739552cbe 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -52,3 +52,3 @@ configure(allprojects) { project ->",
                " \text.junitVersion         = \"4.12\"",
                "-\text.nettyVersion         = \"4.0.26.Final\"",
                "+\text.nettyVersion         = \"4.0.27.Final\"",
                " \text.openjpaVersion       = \"2.2.2\"  // 2.3.0 not Java 8 compatible (based on ASM 4)"
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "d1a0b8d53f92ec410d51bdd89aee979107541bd4",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522227833,
            "hunks": 1,
            "message": "Clarify the format supported by @PropertySource Issue: SPR-16563",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java b/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "index 51ca200ebe..e2bf4129e7 100644",
                "--- a/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "+++ b/spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java",
                "@@ -175,4 +175,5 @@ public @interface PropertySource {",
                " \t * Indicate the resource location(s) of the properties file to be loaded.",
                "-\t * For example, {@code \"classpath:/com/myco/app.properties\"} or",
                "-\t * {@code \"file:/path/to/file\"}.",
                "+\t * <p>Both traditional and XML-based properties file formats are supported",
                "+\t * &mdash; for example, {@code \"classpath:/com/myco/app.properties\"}",
                "+\t * or {@code \"file:/path/to/file.xml\"}.",
                " \t * <p>Resource location wildcards (e.g. *&#42;/*.properties) are not permitted;"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/context/annotation/PropertySource.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "ececf32c052082724ab86b5d2b567ffc7c137b67",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429802878,
            "hunks": 2,
            "message": "Revert unintentional change in AnnotationUtils",
            "diff": [
                "diff --git a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "index 9cc25cd357..439cb9d124 100644",
                "--- a/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "+++ b/spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java",
                "@@ -366,7 +366,8 @@ public abstract class AnnotationUtils {",
                " \t\t\t}",
                "-\t\t}",
                "-\t\tif (result != null) {",
                "-\t\t\tfindAnnotationCache.put(cacheKey, result);",
                "+\t\t\tif (result != null) {",
                "+\t\t\t\tfindAnnotationCache.put(cacheKey, result);",
                "+\t\t\t}",
                " \t\t}",
                "+",
                " \t\treturn result;"
            ],
            "changed_files": [
                "spring-core/src/main/java/org/springframework/core/annotation/AnnotationUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "26bb3a0893564ab2f17cf7ac9d6fa86593995dea",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1521472808,
            "hunks": 2,
            "message": "Improve docs on enabling Servlet 3 multipart",
            "diff": [
                "diff --git a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "index 15e9cc48eb..0ac3326d2c 100644",
                "--- a/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "+++ b/spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2017 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -43,2 +43,14 @@ import org.springframework.web.multipart.MultipartResolver;",
                "  *",
                "+ * <pre class=\"code\">",
                "+ * public class AppInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {",
                "+ *\t// ...",
                "+ *\t&#064;Override",
                "+ *\tprotected void customizeRegistration(ServletRegistration.Dynamic registration) {",
                "+ *",
                "+ *\t\t// Optionally also set maxFileSize, maxRequestSize, fileSizeThreshold",
                "+ *\t\tregistration.setMultipartConfig(new MultipartConfigElement(\"/tmp\"));",
                "+ *\t}",
                "+ * }",
                "+ * </pre>",
                "+ *",
                "  * @author Juergen Hoeller"
            ],
            "changed_files": [
                "spring-web/src/main/java/org/springframework/web/multipart/support/StandardServletMultipartResolver.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "c172d9d745c30c90dbba416cb15b38b7e9b54fb3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1428953605,
            "hunks": 4,
            "message": "Add trailing slash support to AbstractUrlHandlerMapping Issue: SPR-12818",
            "diff": [
                "diff --git a/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java",
                "index 1817dae326..5d6406e5d9 100644",
                "--- a/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java",
                "+++ b/spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java",
                "@@ -56,2 +56,4 @@ public abstract class AbstractUrlHandlerMapping extends AbstractHandlerMapping {",
                "+\tprivate boolean useTrailingSlashMatch = false;",
                "+",
                " \tprivate boolean lazyInitHandlers = false;",
                "@@ -78,2 +80,18 @@ public abstract class AbstractUrlHandlerMapping extends AbstractHandlerMapping {",
                "+\t/**",
                "+\t * Whether to match to URLs irrespective of the presence of a trailing slash.",
                "+\t * If enabled a URL pattern such as \"/users\" also matches to \"/users/\".",
                "+\t * <p>The default value is {@code false}.",
                "+\t */",
                "+\tpublic void setUseTrailingSlashMatch(boolean useTrailingSlashMatch) {",
                "+\t\tthis.useTrailingSlashMatch = useTrailingSlashMatch;",
                "+\t}",
                "+",
                "+\t/**",
                "+\t * Whether to match to URLs irrespective of the presence of a trailing slash.",
                "+\t */",
                "+\tpublic boolean useTrailingSlashMatch() {",
                "+\t\treturn this.useTrailingSlashMatch;",
                "+\t}",
                "+",
                " \t/**",
                "@@ -161,2 +179,7 @@ public abstract class AbstractUrlHandlerMapping extends AbstractHandlerMapping {",
                " \t\t\t}",
                "+\t\t\telse if (useTrailingSlashMatch()) {",
                "+\t\t\t\tif (!registeredPattern.endsWith(\"/\") && getPathMatcher().match(registeredPattern + \"/\", urlPath)) {",
                "+\t\t\t\t\tmatchingPatterns.add(registeredPattern +\"/\");",
                "+\t\t\t\t}",
                "+\t\t\t}",
                " \t\t}",
                "@@ -173,2 +196,6 @@ public abstract class AbstractUrlHandlerMapping extends AbstractHandlerMapping {",
                " \t\t\thandler = this.handlerMap.get(bestPatternMatch);",
                "+\t\t\tif (handler == null) {",
                "+\t\t\t\tAssert.isTrue(bestPatternMatch.endsWith(\"/\"));",
                "+\t\t\t\thandler = this.handlerMap.get(bestPatternMatch.substring(0, bestPatternMatch.length() - 1));",
                "+\t\t\t}",
                " \t\t\t// Bean name or resolved handler?"
            ],
            "changed_files": [
                "spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "050e581c103d61fe8cefb038748d83f2a9f09749",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1429214031,
            "hunks": 1,
            "message": "StatementCreatorUtils.setValue only uses setString etc for Types.OTHER in case of Oracle Issue: SPR-12890",
            "diff": [
                "diff --git a/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java",
                "index f760192c99..a96424fcda 100644",
                "--- a/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java",
                "+++ b/spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java",
                "@@ -412,3 +412,4 @@ public abstract class StatementCreatorUtils {",
                " \t\t}",
                "-\t\telse if (sqlType == SqlTypeValue.TYPE_UNKNOWN || sqlType == Types.OTHER) {",
                "+\t\telse if (sqlType == SqlTypeValue.TYPE_UNKNOWN || (sqlType == Types.OTHER &&",
                "+\t\t\t\t\"Oracle\".equals(ps.getConnection().getMetaData().getDatabaseProductName()))) {",
                " \t\t\tif (isStringValue(inValue.getClass())) {"
            ],
            "changed_files": [
                "spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.2.0.RC1",
                "v4.2.0.RC2",
                "v4.2.0.RC3",
                "v4.2.0.RELEASE",
                "v4.2.1.RELEASE",
                "v4.2.2.RELEASE",
                "v4.2.3.RELEASE",
                "v4.2.4.RELEASE",
                "v4.2.5.RELEASE",
                "v4.2.6.RELEASE",
                "v4.2.7.RELEASE",
                "v4.2.8.RELEASE",
                "v4.2.9.RELEASE",
                "v4.3.0.RC1",
                "v4.3.0.RC2",
                "v4.3.0.RELEASE",
                "v4.3.1.RELEASE",
                "v4.3.10.RELEASE",
                "v4.3.11.RELEASE",
                "v4.3.12.RELEASE",
                "v4.3.13.RELEASE",
                "v4.3.14.RELEASE",
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.2.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.3.RELEASE",
                "v4.3.30.RELEASE",
                "v4.3.4.RELEASE",
                "v4.3.5.RELEASE",
                "v4.3.6.RELEASE",
                "v4.3.7.RELEASE",
                "v4.3.8.RELEASE",
                "v4.3.9.RELEASE",
                "v5.0.0.M1",
                "v5.0.0.M2",
                "v5.0.0.M3",
                "v5.0.0.M4",
                "v5.0.0.M5",
                "v5.0.0.RC1",
                "v5.0.0.RC2",
                "v5.0.0.RC3",
                "v5.0.0.RC4",
                "v5.0.0.RELEASE",
                "v5.0.1.RELEASE",
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.2.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.3.RELEASE",
                "v5.0.4.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "4d0adc7d95fb0e5694d5d4406362dc51b87659a3",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522230538,
            "hunks": 1,
            "message": "Upgrade to Tomcat 8.5.29",
            "diff": [
                "diff --git a/build.gradle b/build.gradle",
                "index 899486b915..3fbabecd4f 100644",
                "--- a/build.gradle",
                "+++ b/build.gradle",
                "@@ -77,3 +77,3 @@ configure(allprojects) { project ->",
                " \text.tiles3Version        = \"3.0.7\"",
                "-\text.tomcatVersion        = \"8.5.28\"",
                "+\text.tomcatVersion        = \"8.5.29\"",
                " \text.tyrusVersion         = \"1.3.5\"  // constrained by WebLogic 12.1.3 support"
            ],
            "changed_files": [
                "build.gradle"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v4.3.15.RELEASE",
                "v4.3.16.RELEASE",
                "v4.3.17.RELEASE",
                "v4.3.18.RELEASE",
                "v4.3.19.RELEASE",
                "v4.3.20.RELEASE",
                "v4.3.21.RELEASE",
                "v4.3.22.RELEASE",
                "v4.3.23.RELEASE",
                "v4.3.24.RELEASE",
                "v4.3.25.RELEASE",
                "v4.3.26.RELEASE",
                "v4.3.27.RELEASE",
                "v4.3.28.RELEASE",
                "v4.3.29.RELEASE",
                "v4.3.30.RELEASE"
            ],
            "matched_rules": []
        },
        {
            "commit_id": "78681c6369425a878934780fb6efa4e5ea24bded",
            "repository": "https://github.com/spring-projects/spring-framework",
            "timestamp": 1522415978,
            "hunks": 7,
            "message": "JndiRmiServiceExporter still calls PortableRemoteObject when available Issue: SPR-16670",
            "diff": [
                "diff --git a/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java b/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java",
                "index ee59076bc3..6b178e2f63 100644",
                "--- a/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java",
                "+++ b/spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java",
                "@@ -1,3 +1,3 @@",
                " /*",
                "- * Copyright 2002-2016 the original author or authors.",
                "+ * Copyright 2002-2018 the original author or authors.",
                "  *",
                "@@ -18,3 +18,4 @@ package org.springframework.remoting.rmi;",
                "-import java.rmi.NoSuchObjectException;",
                "+import java.lang.reflect.InvocationTargetException;",
                "+import java.lang.reflect.Method;",
                " import java.rmi.Remote;",
                "@@ -27,2 +28,4 @@ import org.springframework.beans.factory.InitializingBean;",
                " import org.springframework.jndi.JndiTemplate;",
                "+import org.springframework.lang.Nullable;",
                "+import org.springframework.util.ReflectionUtils;",
                "@@ -68,2 +71,23 @@ public class JndiRmiServiceExporter extends RmiBasedExporter implements Initiali",
                "+\t@Nullable",
                "+\tprivate static Method exportObject;",
                "+",
                "+\t@Nullable",
                "+\tprivate static Method unexportObject;",
                "+",
                "+\tstatic {",
                "+\t\ttry {",
                "+\t\t\tClass<?> portableRemoteObject =",
                "+\t\t\t\t\tJndiRmiServiceExporter.class.getClassLoader().loadClass(\"javax.rmi.PortableRemoteObject\");",
                "+\t\t\texportObject = portableRemoteObject.getMethod(\"exportObject\", Remote.class);",
                "+\t\t\tunexportObject = portableRemoteObject.getMethod(\"unexportObject\", Remote.class);",
                "+\t\t}",
                "+\t\tcatch (Throwable ex) {",
                "+\t\t\t// java.corba module not available on JDK 9+",
                "+\t\t\texportObject = null;",
                "+\t\t\tunexportObject = null;",
                "+\t\t}",
                "+\t}",
                "+",
                "+",
                " \tprivate JndiTemplate jndiTemplate = new JndiTemplate();",
                "@@ -118,2 +142,3 @@ public class JndiRmiServiceExporter extends RmiBasedExporter implements Initiali",
                " \t\tthis.exportedObject = getObjectToExport();",
                "+\t\tinvokePortableRemoteObject(exportObject);",
                "@@ -138,3 +163,3 @@ public class JndiRmiServiceExporter extends RmiBasedExporter implements Initiali",
                " \t@Override",
                "-\tpublic void destroy() throws NamingException, NoSuchObjectException {",
                "+\tpublic void destroy() throws NamingException, RemoteException {",
                " \t\tif (logger.isInfoEnabled()) {",
                "@@ -143,2 +168,22 @@ public class JndiRmiServiceExporter extends RmiBasedExporter implements Initiali",
                " \t\tthis.jndiTemplate.unbind(this.jndiName);",
                "+\t\tinvokePortableRemoteObject(unexportObject);",
                "+\t}",
                "+",
                "+",
                "+\tprivate void invokePortableRemoteObject(@Nullable Method method) throws RemoteException {",
                "+\t\tif (method != null) {",
                "+\t\t\ttry {",
                "+\t\t\t\tmethod.invoke(null, this.exportedObject);",
                "+\t\t\t}",
                "+\t\t\tcatch (InvocationTargetException ex) {",
                "+\t\t\t\tThrowable targetEx = ex.getTargetException();",
                "+\t\t\t\tif (targetEx instanceof RemoteException) {",
                "+\t\t\t\t\tthrow (RemoteException) targetEx;",
                "+\t\t\t\t}",
                "+\t\t\t\tReflectionUtils.rethrowRuntimeException(targetEx);",
                "+\t\t\t}",
                "+\t\t\tcatch (Throwable ex) {",
                "+\t\t\t\tthrow new IllegalStateException(\"PortableRemoteObject invocation failed\", ex);",
                "+\t\t\t}",
                "+\t\t}",
                " \t}"
            ],
            "changed_files": [
                "spring-context/src/main/java/org/springframework/remoting/rmi/JndiRmiServiceExporter.java"
            ],
            "message_reference_content": [],
            "jira_refs": {},
            "ghissue_refs": {},
            "cve_refs": [],
            "twins": [],
            "tags": [
                "v5.0.10.RELEASE",
                "v5.0.11.RELEASE",
                "v5.0.12.RELEASE",
                "v5.0.13.RELEASE",
                "v5.0.14.RELEASE",
                "v5.0.15.RELEASE",
                "v5.0.16.RELEASE",
                "v5.0.17.RELEASE",
                "v5.0.18.RELEASE",
                "v5.0.19.RELEASE",
                "v5.0.20.RELEASE",
                "v5.0.5.RELEASE",
                "v5.0.6.RELEASE",
                "v5.0.7.RELEASE",
                "v5.0.8.RELEASE",
                "v5.0.9.RELEASE",
                "v5.1.0.RC1",
                "v5.1.0.RC2",
                "v5.1.0.RC3",
                "v5.1.0.RELEASE",
                "v5.1.1.RELEASE",
                "v5.1.10.RELEASE",
                "v5.1.11.RELEASE",
                "v5.1.12.RELEASE",
                "v5.1.13.RELEASE",
                "v5.1.14.RELEASE",
                "v5.1.15.RELEASE",
                "v5.1.16.RELEASE",
                "v5.1.17.RELEASE",
                "v5.1.18.RELEASE",
                "v5.1.19.RELEASE",
                "v5.1.2.RELEASE",
                "v5.1.20.RELEASE",
                "v5.1.3.RELEASE",
                "v5.1.4.RELEASE",
                "v5.1.5.RELEASE",
                "v5.1.6.RELEASE",
                "v5.1.7.RELEASE",
                "v5.1.8.RELEASE",
                "v5.1.9.RELEASE",
                "v5.2.0.M1",
                "v5.2.0.M2",
                "v5.2.0.M3",
                "v5.2.0.RC1",
                "v5.2.0.RC2",
                "v5.2.0.RELEASE",
                "v5.2.1.RELEASE",
                "v5.2.10.RELEASE",
                "v5.2.11.RELEASE",
                "v5.2.12.RELEASE",
                "v5.2.13.RELEASE",
                "v5.2.14.RELEASE",
                "v5.2.15.RELEASE",
                "v5.2.16.RELEASE",
                "v5.2.17.RELEASE",
                "v5.2.18.RELEASE",
                "v5.2.19.RELEASE",
                "v5.2.2.RELEASE",
                "v5.2.20.RELEASE",
                "v5.2.21.RELEASE",
                "v5.2.22.RELEASE",
                "v5.2.23.RELEASE",
                "v5.2.24.RELEASE",
                "v5.2.25.RELEASE",
                "v5.2.3.RELEASE",
                "v5.2.4.RELEASE",
                "v5.2.5.RELEASE",
                "v5.2.6.RELEASE",
                "v5.2.7.RELEASE",
                "v5.2.8.RELEASE",
                "v5.2.9.RELEASE",
                "v5.3.0",
                "v5.3.0-M1",
                "v5.3.0-M2",
                "v5.3.0-RC1",
                "v5.3.0-RC2",
                "v5.3.1",
                "v5.3.10",
                "v5.3.11",
                "v5.3.12",
                "v5.3.13",
                "v5.3.14",
                "v5.3.15",
                "v5.3.16",
                "v5.3.17",
                "v5.3.18",
                "v5.3.19",
                "v5.3.2",
                "v5.3.20",
                "v5.3.21",
                "v5.3.22",
                "v5.3.23",
                "v5.3.24",
                "v5.3.25",
                "v5.3.26",
                "v5.3.27",
                "v5.3.28",
                "v5.3.29",
                "v5.3.3",
                "v5.3.30",
                "v5.3.31",
                "v5.3.32",
                "v5.3.33",
                "v5.3.34",
                "v5.3.35",
                "v5.3.36",
                "v5.3.37",
                "v5.3.4",
                "v5.3.5",
                "v5.3.6",
                "v5.3.7",
                "v5.3.8",
                "v5.3.9",
                "v6.0.0",
                "v6.0.0-M1",
                "v6.0.0-M2",
                "v6.0.0-M3",
                "v6.0.0-M4",
                "v6.0.0-M5",
                "v6.0.0-M6",
                "v6.0.0-RC1",
                "v6.0.0-RC2",
                "v6.0.0-RC3",
                "v6.0.0-RC4",
                "v6.0.1",
                "v6.0.10",
                "v6.0.11",
                "v6.0.12",
                "v6.0.13",
                "v6.0.14",
                "v6.0.15",
                "v6.0.16",
                "v6.0.17",
                "v6.0.18",
                "v6.0.19",
                "v6.0.2",
                "v6.0.20",
                "v6.0.21",
                "v6.0.22",
                "v6.0.3",
                "v6.0.4",
                "v6.0.5",
                "v6.0.6",
                "v6.0.7",
                "v6.0.8",
                "v6.0.9",
                "v6.1.0",
                "v6.1.0-M1",
                "v6.1.0-M2",
                "v6.1.0-M3",
                "v6.1.0-M4",
                "v6.1.0-M5",
                "v6.1.0-RC1",
                "v6.1.0-RC2",
                "v6.1.1",
                "v6.1.10",
                "v6.1.2",
                "v6.1.3",
                "v6.1.4",
                "v6.1.5",
                "v6.1.6",
                "v6.1.7",
                "v6.1.8",
                "v6.1.9",
                "v6.2.0-M1",
                "v6.2.0-M2",
                "v6.2.0-M3",
                "v6.2.0-M4"
            ],
            "matched_rules": []
        }
    ]
}
